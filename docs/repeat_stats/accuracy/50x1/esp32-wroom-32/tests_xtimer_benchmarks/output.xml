<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 23:01:18.915" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.481" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:01:19.490" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:01:20.474" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:01:19.480" endtime="20201115 23:01:20.475"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.477" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:01:20.476" endtime="20201115 23:01:20.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.479" endtime="20201115 23:01:20.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.481" endtime="20201115 23:01:20.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.479" endtime="20201115 23:01:20.665"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.677" endtime="20201115 23:01:20.697"></status>
</kw>
<msg timestamp="20201115 23:01:20.698" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.676" endtime="20201115 23:01:20.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.701" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.699" endtime="20201115 23:01:20.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.704" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:20.702" endtime="20201115 23:01:20.705"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:20.674" endtime="20201115 23:01:20.705"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:20.671" endtime="20201115 23:01:20.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.670" endtime="20201115 23:01:20.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:20.710" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:20.709" endtime="20201115 23:01:20.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.707" endtime="20201115 23:01:20.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.669" endtime="20201115 23:01:20.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.669" endtime="20201115 23:01:20.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.712" endtime="20201115 23:01:20.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.667" endtime="20201115 23:01:20.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.715" endtime="20201115 23:01:20.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.666" endtime="20201115 23:01:20.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.477" endtime="20201115 23:01:20.717"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.723" endtime="20201115 23:01:20.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.722" endtime="20201115 23:01:20.743"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.757" endtime="20201115 23:01:20.777"></status>
</kw>
<msg timestamp="20201115 23:01:20.777" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.755" endtime="20201115 23:01:20.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.780" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.778" endtime="20201115 23:01:20.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.783" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:20.781" endtime="20201115 23:01:20.783"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:20.753" endtime="20201115 23:01:20.784"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:20.750" endtime="20201115 23:01:20.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.749" endtime="20201115 23:01:20.785"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:20.788" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:20.788" endtime="20201115 23:01:20.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.785" endtime="20201115 23:01:20.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.748" endtime="20201115 23:01:20.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.747" endtime="20201115 23:01:20.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.790" endtime="20201115 23:01:20.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.746" endtime="20201115 23:01:20.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.744" endtime="20201115 23:01:20.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.720" endtime="20201115 23:01:20.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.800" endtime="20201115 23:01:20.812"></status>
</kw>
<msg timestamp="20201115 23:01:20.813" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.798" endtime="20201115 23:01:20.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.815" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.814" endtime="20201115 23:01:20.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.816" endtime="20201115 23:01:20.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.796" endtime="20201115 23:01:20.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.794" endtime="20201115 23:01:20.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.823" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 23:01:20.822" endtime="20201115 23:01:20.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.825" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 23:01:20.824" endtime="20201115 23:01:20.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.820" endtime="20201115 23:01:20.826"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:20.717" endtime="20201115 23:01:20.827" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:01:19.027" endtime="20201115 23:01:20.830"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.882" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:01:20.890" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:01:21.900" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:01:20.881" endtime="20201115 23:01:21.901"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.906" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:01:21.903" endtime="20201115 23:01:21.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.879" endtime="20201115 23:01:21.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.912" endtime="20201115 23:01:22.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.910" endtime="20201115 23:01:22.185"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.197" endtime="20201115 23:01:22.217"></status>
</kw>
<msg timestamp="20201115 23:01:22.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.196" endtime="20201115 23:01:22.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.218" endtime="20201115 23:01:22.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.223" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:22.221" endtime="20201115 23:01:22.223"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:22.193" endtime="20201115 23:01:22.224"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:22.191" endtime="20201115 23:01:22.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.190" endtime="20201115 23:01:22.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:22.229" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:22.228" endtime="20201115 23:01:22.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.226" endtime="20201115 23:01:22.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.189" endtime="20201115 23:01:22.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.188" endtime="20201115 23:01:22.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.230" endtime="20201115 23:01:22.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.187" endtime="20201115 23:01:22.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.233" endtime="20201115 23:01:22.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.185" endtime="20201115 23:01:22.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.878" endtime="20201115 23:01:22.235"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.242" endtime="20201115 23:01:22.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.240" endtime="20201115 23:01:22.263"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.276" endtime="20201115 23:01:22.294"></status>
</kw>
<msg timestamp="20201115 23:01:22.294" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.274" endtime="20201115 23:01:22.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.297" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.296" endtime="20201115 23:01:22.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.300" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:22.298" endtime="20201115 23:01:22.301"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:22.271" endtime="20201115 23:01:22.301"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:22.269" endtime="20201115 23:01:22.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.268" endtime="20201115 23:01:22.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:22.306" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:22.305" endtime="20201115 23:01:22.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.303" endtime="20201115 23:01:22.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.267" endtime="20201115 23:01:22.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.266" endtime="20201115 23:01:22.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.307" endtime="20201115 23:01:22.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.265" endtime="20201115 23:01:22.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.263" endtime="20201115 23:01:22.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.238" endtime="20201115 23:01:22.310"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.314" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.323" endtime="20201115 23:01:22.341"></status>
</kw>
<msg timestamp="20201115 23:01:22.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.321" endtime="20201115 23:01:22.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.342" endtime="20201115 23:01:22.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.345" endtime="20201115 23:01:22.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.318" endtime="20201115 23:01:22.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.316" endtime="20201115 23:01:22.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.355" endtime="20201115 23:01:22.642"></status>
</kw>
<msg timestamp="20201115 23:01:22.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071046569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071092958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.354" endtime="20201115 23:01:22.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071046569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071092958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.647" endtime="20201115 23:01:22.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.655" endtime="20201115 23:01:22.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.351" endtime="20201115 23:01:22.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.349" endtime="20201115 23:01:22.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.662" level="INFO">${RESULT} = [{'time': 0.071092958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.638899999999391e-05, 'source_diff': 4.638899999999391e-05}, {'time': 0.071102083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:22.658" endtime="20201115 23:01:22.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.676" level="INFO">${ACCURACY} = {'diff': [4.638899999999391e-05, 3.7219999999976716e-06, 2.6939999999975317e-06, 3.2080000000045406e-06, 3.2080000000045406e-06, 3.2079999999906628e-06, 2.695000000010883e-06, 2.7079999999901627e-06, ...</msg>
<status status="PASS" starttime="20201115 23:01:22.663" endtime="20201115 23:01:22.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.680" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.679" endtime="20201115 23:01:22.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.683" level="INFO">VALUE: [4.638899999999391e-05, 3.7219999999976716e-06, 2.6939999999975317e-06, 3.2080000000045406e-06, 3.2080000000045406e-06, 3.2079999999906628e-06, 2.695000000010883e-06, 2.7079999999901627e-06, 2.722999999996145e-06, 2.6939999999975317e-06, 3.26400000000282e-06, 3.2080000000045406e-06, 3.1939999999980317e-06, 2.7079999999901627e-06, 3.209000000004014e-06, 2.7089999999896364e-06, 2.7079999999901627e-06, 3.1939999999980317e-06, 2.6810000000043743e-06, 3.2080000000045406e-06, 2.7080000000040405e-06, 3.2080000000045406e-06, 2.7080000000040405e-06, 2.7089999999896364e-06, 3.6940000000124096e-06, 3.2220000000110494e-06, 3.1939999999980317e-06, 3.2079999999906628e-06, 2.6939999999975317e-06, 2.7220000000105493e-06, 2.7089999999896364e-06, 3.2360000000036804e-06, 3.2079999999906628e-06, 3.7640000000033202e-06, 3.1529999999918568e-06, 3.2089999999901364e-06, 3.2229999999966452e-06, 3.2080000000045406e-06, 3.2219999999971716e-06, 3.2080000000045406e-06, 2.723000000010023e-06, 3.2229999999966452e-06, 3.1939999999980317e-06, 3.2219999999971716e-06, 3.1939999999980317e-06, 3.2089999999901364e-06, 3.2219999999971716e-06, 3.2089999999901364e-06, 2.7080000000040405e-06, 2.7080000000040405e-06]</msg>
<status status="PASS" starttime="20201115 23:01:22.681" endtime="20201115 23:01:22.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.677" endtime="20201115 23:01:22.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.686" endtime="20201115 23:01:22.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.689" endtime="20201115 23:01:22.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.688" endtime="20201115 23:01:22.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.684" endtime="20201115 23:01:22.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.314" endtime="20201115 23:01:22.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.312" endtime="20201115 23:01:22.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.312" endtime="20201115 23:01:22.710"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.713" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.722" endtime="20201115 23:01:22.740"></status>
</kw>
<msg timestamp="20201115 23:01:22.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.719" endtime="20201115 23:01:22.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.741" endtime="20201115 23:01:22.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.744" endtime="20201115 23:01:22.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.717" endtime="20201115 23:01:22.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.715" endtime="20201115 23:01:22.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.753" endtime="20201115 23:01:23.035"></status>
</kw>
<msg timestamp="20201115 23:01:23.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02267675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:22.751" endtime="20201115 23:01:23.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02267675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:23.040" endtime="20201115 23:01:23.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.048" endtime="20201115 23:01:23.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.749" endtime="20201115 23:01:23.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.747" endtime="20201115 23:01:23.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.055" level="INFO">${RESULT} = [{'time': 0.02267675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6809999999984355e-06, 'source_diff': 3.6809999999984355e-06}, {'time': 0.022685681, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:23.052" endtime="20201115 23:01:23.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.069" level="INFO">${ACCURACY} = {'diff': [3.6809999999984355e-06, 3.7230000000006147e-06, 4.236999999997215e-06, 4.277999999999921e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.736000000000711e-06, 4.222000000001641e-06, 4....</msg>
<status status="PASS" starttime="20201115 23:01:23.056" endtime="20201115 23:01:23.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.073" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.072" endtime="20201115 23:01:23.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.076" level="INFO">VALUE: [3.6809999999984355e-06, 3.7230000000006147e-06, 4.236999999997215e-06, 4.277999999999921e-06, 3.7079999999981017e-06, 3.7079999999981017e-06, 3.736000000000711e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.194000000002501e-06, 4.207999999998602e-06, 3.7089999999975753e-06, 4.207999999998602e-06, 3.6940000000020012e-06, 4.139000000000226e-06, 3.708000000001571e-06, 3.693999999998532e-06, 4.223000000001115e-06, 4.207999999998602e-06, 3.709000000001045e-06, 4.221999999998172e-06, 3.722000000001141e-06, 4.222000000001641e-06, 4.221999999998172e-06, 3.7230000000006147e-06, 3.708000000001571e-06, 3.7219999999976716e-06, 3.709000000001045e-06, 4.207999999998602e-06, 3.709000000001045e-06, 4.707999999999102e-06, 4.194000000002501e-06, 4.152999999999796e-06, 3.7229999999971453e-06, 3.6940000000020012e-06, 4.223000000001115e-06, 4.193999999999032e-06, 4.208000000002071e-06, 3.7219999999976716e-06, 3.750000000000281e-06, 4.195000000001975e-06, 4.208999999998075e-06, 4.207999999998602e-06, 4.250000000000781e-06, 4.208999999998075e-06, 3.6809999999984355e-06, 4.208000000002071e-06, 3.708000000001571e-06, 4.1809999999989356e-06, 4.193999999999032e-06]</msg>
<status status="PASS" starttime="20201115 23:01:23.075" endtime="20201115 23:01:23.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.070" endtime="20201115 23:01:23.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.079" endtime="20201115 23:01:23.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.083" endtime="20201115 23:01:23.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.081" endtime="20201115 23:01:23.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.077" endtime="20201115 23:01:23.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.713" endtime="20201115 23:01:23.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.712" endtime="20201115 23:01:23.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.711" endtime="20201115 23:01:23.104"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.106" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.115" endtime="20201115 23:01:23.134"></status>
</kw>
<msg timestamp="20201115 23:01:23.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.113" endtime="20201115 23:01:23.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.136" endtime="20201115 23:01:23.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.138" endtime="20201115 23:01:23.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.111" endtime="20201115 23:01:23.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.108" endtime="20201115 23:01:23.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.148" endtime="20201115 23:01:23.431"></status>
</kw>
<msg timestamp="20201115 23:01:23.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023530833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023536056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.146" endtime="20201115 23:01:23.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023530833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023536056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.436" endtime="20201115 23:01:23.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.444" endtime="20201115 23:01:23.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.144" endtime="20201115 23:01:23.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.142" endtime="20201115 23:01:23.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.451" level="INFO">${RESULT} = [{'time': 0.023536056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.023546278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:23.448" endtime="20201115 23:01:23.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.466" level="INFO">${ACCURACY} = {'diff': [5.222999999998645e-06, 5.221999999999172e-06, 5.2089999999990755e-06, 5.694000000000532e-06, 5.1949999999995056e-06, 5.221999999999172e-06, 4.722999999998145e-06, 4.721999999998672e-06, 4.72...</msg>
<status status="PASS" starttime="20201115 23:01:23.452" endtime="20201115 23:01:23.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.471" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.470" endtime="20201115 23:01:23.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.477" level="INFO">VALUE: [5.222999999998645e-06, 5.221999999999172e-06, 5.2089999999990755e-06, 5.694000000000532e-06, 5.1949999999995056e-06, 5.221999999999172e-06, 4.722999999998145e-06, 4.721999999998672e-06, 4.721999999998672e-06, 4.722000000002141e-06, 4.666999999999866e-06, 5.222999999998645e-06, 5.221999999999172e-06, 4.721999999998672e-06, 4.7089999999985754e-06, 4.722999999998145e-06, 4.7089999999985754e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 4.735999999998242e-06, 4.708000000002571e-06, 5.222000000002641e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 5.207999999999602e-06, 5.1949999999995056e-06, 4.721999999998672e-06, 4.709000000002045e-06, 5.235999999998742e-06, 5.194000000000032e-06, 5.735999999999242e-06, 4.721999999998672e-06, 4.695000000002475e-06, 5.2089999999990755e-06, 4.735999999998242e-06, 4.707999999999102e-06, 5.2089999999990755e-06, 4.722000000002141e-06, 4.7089999999985754e-06, 4.721999999998672e-06, 4.693999999999532e-06, 5.2089999999990755e-06, 4.723000000001615e-06, 5.221999999999172e-06, 4.707999999999102e-06, 4.708000000002571e-06, 4.722000000002141e-06, 5.194000000000032e-06, 4.693999999999532e-06, 5.221999999999172e-06]</msg>
<status status="PASS" starttime="20201115 23:01:23.474" endtime="20201115 23:01:23.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.467" endtime="20201115 23:01:23.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.484" endtime="20201115 23:01:23.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.491" endtime="20201115 23:01:23.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.488" endtime="20201115 23:01:23.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.480" endtime="20201115 23:01:23.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.107" endtime="20201115 23:01:23.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.105" endtime="20201115 23:01:23.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.104" endtime="20201115 23:01:23.518"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.523" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.541" endtime="20201115 23:01:23.564"></status>
</kw>
<msg timestamp="20201115 23:01:23.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.537" endtime="20201115 23:01:23.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.578" endtime="20201115 23:01:23.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.581" endtime="20201115 23:01:23.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.532" endtime="20201115 23:01:23.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.527" endtime="20201115 23:01:23.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.591" endtime="20201115 23:01:23.876"></status>
</kw>
<msg timestamp="20201115 23:01:23.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040210236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040216472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.589" endtime="20201115 23:01:23.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040210236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040216472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.881" endtime="20201115 23:01:23.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.889" endtime="20201115 23:01:23.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.586" endtime="20201115 23:01:23.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.584" endtime="20201115 23:01:23.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.896" level="INFO">${RESULT} = [{'time': 0.040216472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.040226514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:23.893" endtime="20201115 23:01:23.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.910" level="INFO">${ACCURACY} = {'diff': [6.235999999999742e-06, 5.721999999999672e-06, 6.2090000000000756e-06, 5.749999999998812e-06, 6.222000000000172e-06, 5.7639999999983815e-06, 6.222000000000172e-06, 5.693999999993593e-06, 5.72...</msg>
<status status="PASS" starttime="20201115 23:01:23.897" endtime="20201115 23:01:23.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.914" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.913" endtime="20201115 23:01:23.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.917" level="INFO">VALUE: [6.235999999999742e-06, 5.721999999999672e-06, 6.2090000000000756e-06, 5.749999999998812e-06, 6.222000000000172e-06, 5.7639999999983815e-06, 6.222000000000172e-06, 5.693999999993593e-06, 5.7229999999991454e-06, 5.735999999999242e-06, 5.721999999999672e-06, 6.222000000000172e-06, 5.749999999998812e-06, 6.208000000000602e-06, 6.2090000000000756e-06, 5.7639999999983815e-06, 6.195000000000506e-06, 5.721999999999672e-06, 5.7639999999983815e-06, 6.2090000000000756e-06, 6.2090000000000756e-06, 5.708000000000102e-06, 6.181000000000936e-06, 6.222000000000172e-06, 6.666999999994927e-06, 5.7089999999995755e-06, 6.222000000000172e-06, 5.7500000000057505e-06, 5.708000000000102e-06, 6.667000000001866e-06, 6.181000000000936e-06, 5.721999999999672e-06, 6.208000000000602e-06, 5.708000000000102e-06, 6.194999999993567e-06, 5.694000000000532e-06, 6.222000000000172e-06, 6.222000000000172e-06, 5.694000000000532e-06, 6.180999999993997e-06, 5.7779999999979514e-06, 6.695000000001006e-06, 6.195000000000506e-06, 6.207999999993663e-06, 5.721999999999672e-06, 6.695000000001006e-06, 5.639000000001726e-06, 5.721999999999672e-06, 6.2229999999996455e-06, 5.708000000000102e-06]</msg>
<status status="PASS" starttime="20201115 23:01:23.915" endtime="20201115 23:01:23.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.911" endtime="20201115 23:01:23.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.920" endtime="20201115 23:01:23.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.924" endtime="20201115 23:01:23.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.922" endtime="20201115 23:01:23.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.918" endtime="20201115 23:01:23.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.524" endtime="20201115 23:01:23.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.520" endtime="20201115 23:01:23.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.518" endtime="20201115 23:01:23.945"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.947" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.956" endtime="20201115 23:01:23.973"></status>
</kw>
<msg timestamp="20201115 23:01:23.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.955" endtime="20201115 23:01:23.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.975" endtime="20201115 23:01:23.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.977" endtime="20201115 23:01:23.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.952" endtime="20201115 23:01:23.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.950" endtime="20201115 23:01:23.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.988" endtime="20201115 23:01:24.271"></status>
</kw>
<msg timestamp="20201115 23:01:24.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.986" endtime="20201115 23:01:24.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.275" endtime="20201115 23:01:24.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.284" endtime="20201115 23:01:24.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.983" endtime="20201115 23:01:24.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.982" endtime="20201115 23:01:24.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.290" level="INFO">${RESULT} = [{'time': 0.022737375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.022747931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:24.287" endtime="20201115 23:01:24.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.304" level="INFO">${ACCURACY} = {'diff': [7.708000000002102e-06, 7.2370000000002155e-06, 7.2230000000006456e-06, 7.208000000001602e-06, 6.749999999999812e-06, 7.195000000001506e-06, 7.2079999999981326e-06, 6.722000000000672e-06, 6.6...</msg>
<status status="PASS" starttime="20201115 23:01:24.291" endtime="20201115 23:01:24.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.308" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.307" endtime="20201115 23:01:24.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.311" level="INFO">VALUE: [7.708000000002102e-06, 7.2370000000002155e-06, 7.2230000000006456e-06, 7.208000000001602e-06, 6.749999999999812e-06, 7.195000000001506e-06, 7.2079999999981326e-06, 6.722000000000672e-06, 6.638999999999257e-06, 7.722000000001672e-06, 7.209000000001076e-06, 7.208999999997606e-06, 7.2370000000002155e-06, 6.708000000001102e-06, 7.2079999999981326e-06, 7.222000000001172e-06, 7.693999999999063e-06, 7.208999999997606e-06, 7.2219999999977025e-06, 6.722000000000672e-06, 6.708000000001102e-06, 7.194000000002032e-06, 6.709000000000576e-06, 7.2079999999981326e-06, 6.7079999999976325e-06, 7.2779999999994516e-06, 7.707999999998633e-06, 7.707999999998633e-06, 6.7079999999976325e-06, 7.709000000001576e-06, 6.693999999998063e-06, 7.2079999999981326e-06, 7.722000000001672e-06, 7.709000000001576e-06, 7.180999999998466e-06, 7.194000000002032e-06, 6.722000000000672e-06, 7.2079999999981326e-06, 7.208000000001602e-06, 6.708000000001102e-06, 6.638999999999257e-06, 7.222000000001172e-06, 6.708000000001102e-06, 7.208000000001602e-06, 6.722000000000672e-06, 7.194000000002032e-06, 6.7219999999972024e-06, 6.7079999999976325e-06, 7.722000000001672e-06, 7.2230000000006456e-06]</msg>
<status status="PASS" starttime="20201115 23:01:24.309" endtime="20201115 23:01:24.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.305" endtime="20201115 23:01:24.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.314" endtime="20201115 23:01:24.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.318" endtime="20201115 23:01:24.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.316" endtime="20201115 23:01:24.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.312" endtime="20201115 23:01:24.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.948" endtime="20201115 23:01:24.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.946" endtime="20201115 23:01:24.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.945" endtime="20201115 23:01:24.339"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.341" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.350" endtime="20201115 23:01:24.367"></status>
</kw>
<msg timestamp="20201115 23:01:24.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.348" endtime="20201115 23:01:24.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.369" endtime="20201115 23:01:24.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.371" endtime="20201115 23:01:24.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.345" endtime="20201115 23:01:24.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.343" endtime="20201115 23:01:24.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.380" endtime="20201115 23:01:24.663"></status>
</kw>
<msg timestamp="20201115 23:01:24.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021791472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.379" endtime="20201115 23:01:24.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021791472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.667" endtime="20201115 23:01:24.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.676" endtime="20201115 23:01:24.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.376" endtime="20201115 23:01:24.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.374" endtime="20201115 23:01:24.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.682" level="INFO">${RESULT} = [{'time': 0.021791472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.021802042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:24.679" endtime="20201115 23:01:24.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.696" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 7.709000000001576e-06, 7.693999999999063e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.139000000000757e-06, 8.235999999998272e-06, 8.707999999999633e-06, 7.6940...</msg>
<status status="PASS" starttime="20201115 23:01:24.683" endtime="20201115 23:01:24.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.700" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.699" endtime="20201115 23:01:24.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.703" level="INFO">VALUE: [8.694000000000063e-06, 7.709000000001576e-06, 7.693999999999063e-06, 8.207999999999133e-06, 8.209000000002076e-06, 8.139000000000757e-06, 8.235999999998272e-06, 8.707999999999633e-06, 7.694000000002532e-06, 7.708999999998106e-06, 8.194999999999036e-06, 8.694000000000063e-06, 7.708000000002102e-06, 7.708000000002102e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.193999999999563e-06, 8.222000000002172e-06, 7.708000000002102e-06, 8.721999999999203e-06, 8.208999999998606e-06, 7.708000000002102e-06, 8.179999999999993e-06, 7.721999999998203e-06, 8.222000000002172e-06, 8.221999999998703e-06, 7.709000000001576e-06, 8.721999999999203e-06, 8.195000000002506e-06, 7.722000000001672e-06, 8.209000000002076e-06, 7.680999999998966e-06, 7.707999999998633e-06, 7.723000000001146e-06, 7.736000000001242e-06, 8.207999999999133e-06, 8.207999999999133e-06, 8.236000000001742e-06, 7.723000000001146e-06, 8.207999999999133e-06, 8.208000000002602e-06, 7.736000000001242e-06, 7.735999999997772e-06, 8.180999999999466e-06, 8.209000000002076e-06, 7.722000000001672e-06, 8.207999999999133e-06, 8.209000000002076e-06, 7.708999999998106e-06]</msg>
<status status="PASS" starttime="20201115 23:01:24.701" endtime="20201115 23:01:24.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.697" endtime="20201115 23:01:24.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.706" endtime="20201115 23:01:24.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.710" endtime="20201115 23:01:24.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.708" endtime="20201115 23:01:24.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.705" endtime="20201115 23:01:24.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.342" endtime="20201115 23:01:24.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.340" endtime="20201115 23:01:24.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.339" endtime="20201115 23:01:24.731"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.733" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.742" endtime="20201115 23:01:24.760"></status>
</kw>
<msg timestamp="20201115 23:01:24.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.740" endtime="20201115 23:01:24.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.761" endtime="20201115 23:01:24.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.764" endtime="20201115 23:01:24.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.737" endtime="20201115 23:01:24.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.735" endtime="20201115 23:01:24.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.773" endtime="20201115 23:01:25.057"></status>
</kw>
<msg timestamp="20201115 23:01:25.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022581306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.771" endtime="20201115 23:01:25.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022581306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.062" endtime="20201115 23:01:25.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.070" endtime="20201115 23:01:25.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.769" endtime="20201115 23:01:25.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.767" endtime="20201115 23:01:25.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.077" level="INFO">${RESULT} = [{'time': 0.022581306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.708999999999106e-06, 'source_diff': 8.708999999999106e-06}, {'time': 0.022596306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:25.073" endtime="20201115 23:01:25.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.091" level="INFO">${ACCURACY} = {'diff': [8.708999999999106e-06, 8.722999999998676e-06, 9.278000000001452e-06, 9.236999999998746e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.7089...</msg>
<status status="PASS" starttime="20201115 23:01:25.078" endtime="20201115 23:01:25.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.096" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.095" endtime="20201115 23:01:25.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.099" level="INFO">VALUE: [8.708999999999106e-06, 8.722999999998676e-06, 9.278000000001452e-06, 9.236999999998746e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.708999999999106e-06, 9.208000000000133e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.735999999998773e-06, 9.180000000000993e-06, 8.707999999999633e-06, 9.235999999999273e-06, 9.679999999998024e-06, 9.709000000000106e-06, 9.166999999997427e-06, 8.708000000003102e-06, 9.235999999999273e-06, 8.777000000001478e-06, 9.749999999999343e-06, 9.167000000000897e-06, 9.207999999996663e-06, 9.165999999997954e-06, 9.208000000000133e-06, 8.721999999999203e-06, 9.208000000000133e-06, 9.208999999999606e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 9.735999999999773e-06, 9.181000000000467e-06, 8.777999999997482e-06, 9.221999999999703e-06, 9.208000000000133e-06, 8.721999999999203e-06, 9.208000000000133e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.737000000001716e-06, 8.721999999999203e-06, 9.221999999999703e-06, 8.709000000002576e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201115 23:01:25.097" endtime="20201115 23:01:25.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.092" endtime="20201115 23:01:25.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.102" endtime="20201115 23:01:25.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.105" endtime="20201115 23:01:25.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.104" endtime="20201115 23:01:25.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.100" endtime="20201115 23:01:25.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.734" endtime="20201115 23:01:25.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.732" endtime="20201115 23:01:25.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.731" endtime="20201115 23:01:25.126"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.129" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.137" endtime="20201115 23:01:25.155"></status>
</kw>
<msg timestamp="20201115 23:01:25.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.135" endtime="20201115 23:01:25.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.157" endtime="20201115 23:01:25.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.160" endtime="20201115 23:01:25.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.133" endtime="20201115 23:01:25.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.131" endtime="20201115 23:01:25.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.169" endtime="20201115 23:01:25.453"></status>
</kw>
<msg timestamp="20201115 23:01:25.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.167" endtime="20201115 23:01:25.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.457" endtime="20201115 23:01:25.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.466" endtime="20201115 23:01:25.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.165" endtime="20201115 23:01:25.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.163" endtime="20201115 23:01:25.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.472" level="INFO">${RESULT} = [{'time': 0.022583153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0209000000000606e-05, 'source_diff': 1.0209000000000606e-05}, {'time': 0.022597194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:25.469" endtime="20201115 23:01:25.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.486" level="INFO">${ACCURACY} = {'diff': [1.0209000000000606e-05, 1.0208000000001133e-05, 9.708000000000633e-06, 9.707999999997163e-06, 1.0193999999998093e-05, 1.0209000000000606e-05, 1.0166999999998427e-05, 1.0236000000000273e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:25.474" endtime="20201115 23:01:25.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.491" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.490" endtime="20201115 23:01:25.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.493" level="INFO">VALUE: [1.0209000000000606e-05, 1.0208000000001133e-05, 9.708000000000633e-06, 9.707999999997163e-06, 1.0193999999998093e-05, 1.0209000000000606e-05, 1.0166999999998427e-05, 1.0236000000000273e-05, 9.681000000000967e-06, 1.0236000000000273e-05, 9.722000000000203e-06, 9.708999999996637e-06, 1.0750000000000343e-05, 9.694000000001063e-06, 9.695000000000537e-06, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0236000000000273e-05, 9.708000000000633e-06, 1.0222000000000703e-05, 1.0209000000000606e-05, 9.722999999999676e-06, 9.709000000000106e-06, 1.0222000000000703e-05, 9.708000000000633e-06, 1.0152999999998857e-05, 9.708000000000633e-06, 1.0209000000000606e-05, 9.722000000000203e-06, 9.708000000000633e-06, 1.0208000000001133e-05, 1.0221999999997233e-05, 9.750000000002812e-06, 9.709000000000106e-06, 1.0194999999997567e-05, 1.0290999999999079e-05, 1.0195000000001037e-05, 1.0207999999997663e-05, 9.708000000000633e-06, 1.0209000000000606e-05, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0209000000000606e-05, 9.708000000000633e-06, 9.709000000000106e-06, 9.707999999997163e-06, 1.0236000000000273e-05, 1.0222000000000703e-05, 1.0208000000001133e-05, 1.0208000000001133e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.492" endtime="20201115 23:01:25.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.487" endtime="20201115 23:01:25.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.496" endtime="20201115 23:01:25.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.500" endtime="20201115 23:01:25.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.498" endtime="20201115 23:01:25.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.495" endtime="20201115 23:01:25.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.129" endtime="20201115 23:01:25.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.127" endtime="20201115 23:01:25.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.127" endtime="20201115 23:01:25.521"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.523" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.532" endtime="20201115 23:01:25.549"></status>
</kw>
<msg timestamp="20201115 23:01:25.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.530" endtime="20201115 23:01:25.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.551" endtime="20201115 23:01:25.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.553" endtime="20201115 23:01:25.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.527" endtime="20201115 23:01:25.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.525" endtime="20201115 23:01:25.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.562" endtime="20201115 23:01:25.848"></status>
</kw>
<msg timestamp="20201115 23:01:25.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021860639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021871847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.561" endtime="20201115 23:01:25.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021860639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021871847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.852" endtime="20201115 23:01:25.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.861" endtime="20201115 23:01:25.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.558" endtime="20201115 23:01:25.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.556" endtime="20201115 23:01:25.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.868" level="INFO">${RESULT} = [{'time': 0.021871847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1207999999998663e-05, 'source_diff': 1.1207999999998663e-05}, {'time': 0.021884903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:25.865" endtime="20201115 23:01:25.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.881" level="INFO">${ACCURACY} = {'diff': [1.1207999999998663e-05, 1.0722000000001203e-05, 1.0722000000001203e-05, 1.0722000000001203e-05, 1.0708000000001633e-05, 1.1707999999999164e-05, 1.0722000000001203e-05, 1.1195000000002037e-05...</msg>
<status status="PASS" starttime="20201115 23:01:25.869" endtime="20201115 23:01:25.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.886" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.885" endtime="20201115 23:01:25.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.888" level="INFO">VALUE: [1.1207999999998663e-05, 1.0722000000001203e-05, 1.0722000000001203e-05, 1.0722000000001203e-05, 1.0708000000001633e-05, 1.1707999999999164e-05, 1.0722000000001203e-05, 1.1195000000002037e-05, 1.1193999999999094e-05, 1.1209000000001607e-05, 1.1207999999998663e-05, 1.0723000000000676e-05, 1.0651999999999884e-05, 1.1194999999998567e-05, 1.0693999999998594e-05, 1.1166999999999427e-05, 1.0695000000001537e-05, 1.0791999999999052e-05, 1.0708000000001633e-05, 1.1193999999999094e-05, 1.0708000000001633e-05, 1.1208000000002133e-05, 1.1223000000001176e-05, 1.1209000000001607e-05, 1.1207999999998663e-05, 1.0777000000000009e-05, 1.0695000000001537e-05, 1.0723000000000676e-05, 1.0693999999998594e-05, 1.1209000000001607e-05, 1.0651999999999884e-05, 1.0707999999998163e-05, 1.0679999999999024e-05, 1.1207999999998663e-05, 1.1195000000002037e-05, 1.0721999999997733e-05, 1.1722000000002203e-05, 1.1264000000000413e-05, 1.1208999999998137e-05, 1.1223000000001176e-05, 1.1152999999999857e-05, 1.1777000000001009e-05, 1.1193999999999094e-05, 1.1208999999998137e-05, 1.0722000000001203e-05, 1.1223000000001176e-05, 1.1221999999998233e-05, 1.1222000000001703e-05, 1.0707999999998163e-05, 1.1194000000002563e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.887" endtime="20201115 23:01:25.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.882" endtime="20201115 23:01:25.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.892" endtime="20201115 23:01:25.893"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.895" endtime="20201115 23:01:25.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.893" endtime="20201115 23:01:25.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.890" endtime="20201115 23:01:25.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.524" endtime="20201115 23:01:25.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.522" endtime="20201115 23:01:25.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.521" endtime="20201115 23:01:25.916"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.918" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.927" endtime="20201115 23:01:25.944"></status>
</kw>
<msg timestamp="20201115 23:01:25.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.925" endtime="20201115 23:01:25.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.946" endtime="20201115 23:01:25.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.948" endtime="20201115 23:01:25.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.923" endtime="20201115 23:01:25.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.921" endtime="20201115 23:01:25.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.958" endtime="20201115 23:01:26.243"></status>
</kw>
<msg timestamp="20201115 23:01:26.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.956" endtime="20201115 23:01:26.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.247" endtime="20201115 23:01:26.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.255" endtime="20201115 23:01:26.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.953" endtime="20201115 23:01:26.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.952" endtime="20201115 23:01:26.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.262" level="INFO">${RESULT} = [{'time': 0.021805806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1694999999999067e-05, 'source_diff': 1.1694999999999067e-05}, {'time': 0.021820917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:26.258" endtime="20201115 23:01:26.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.275" level="INFO">${ACCURACY} = {'diff': [1.1694999999999067e-05, 1.2208999999999137e-05, 1.2221999999999233e-05, 1.2235999999998803e-05, 1.1722000000002203e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2250000000001843e-05...</msg>
<status status="PASS" starttime="20201115 23:01:26.263" endtime="20201115 23:01:26.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.280" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.279" endtime="20201115 23:01:26.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.282" level="INFO">VALUE: [1.1694999999999067e-05, 1.2208999999999137e-05, 1.2221999999999233e-05, 1.2235999999998803e-05, 1.1722000000002203e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2250000000001843e-05, 1.1722000000002203e-05, 1.1708000000002633e-05, 1.1707999999999164e-05, 1.2180999999999997e-05, 1.2222999999998707e-05, 1.2236000000002273e-05, 1.1708999999998637e-05, 1.1721999999998733e-05, 1.2180000000000524e-05, 1.2167000000000427e-05, 1.1707999999999164e-05, 1.1707999999999164e-05, 1.1680000000000024e-05, 1.2222000000002703e-05, 1.1680000000000024e-05, 1.2167000000000427e-05, 1.2235999999998803e-05, 1.1666999999999927e-05, 1.2221999999999233e-05, 1.2736000000002773e-05, 1.1695000000002537e-05, 1.2722999999999207e-05, 1.1707999999999164e-05, 1.2207999999999664e-05, 1.2221999999999233e-05, 1.2263999999997943e-05, 1.1721999999998733e-05, 1.1707999999999164e-05, 1.2722999999999207e-05, 1.2249999999998373e-05, 1.2221999999999233e-05, 1.2236000000002273e-05, 1.2180000000000524e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.1722999999998207e-05, 1.2249999999998373e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2208999999999137e-05, 1.1695000000002537e-05, 1.1722999999998207e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.281" endtime="20201115 23:01:26.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.276" endtime="20201115 23:01:26.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.285" endtime="20201115 23:01:26.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.289" endtime="20201115 23:01:26.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.287" endtime="20201115 23:01:26.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.284" endtime="20201115 23:01:26.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.919" endtime="20201115 23:01:26.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.917" endtime="20201115 23:01:26.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.916" endtime="20201115 23:01:26.310"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.312" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.321" endtime="20201115 23:01:26.338"></status>
</kw>
<msg timestamp="20201115 23:01:26.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.319" endtime="20201115 23:01:26.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.340" endtime="20201115 23:01:26.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.343" endtime="20201115 23:01:26.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.316" endtime="20201115 23:01:26.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.314" endtime="20201115 23:01:26.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.352" endtime="20201115 23:01:26.638"></status>
</kw>
<msg timestamp="20201115 23:01:26.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.350" endtime="20201115 23:01:26.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.642" endtime="20201115 23:01:26.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.650" endtime="20201115 23:01:26.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.348" endtime="20201115 23:01:26.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.346" endtime="20201115 23:01:26.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.657" level="INFO">${RESULT} = [{'time': 0.022784306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3723000000000207e-05, 'source_diff': 1.3723000000000207e-05}, {'time': 0.022803236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:26.654" endtime="20201115 23:01:26.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.672" level="INFO">${ACCURACY} = {'diff': [1.3723000000000207e-05, 1.3222000000000234e-05, 1.3209000000000137e-05, 1.2721999999999734e-05, 1.3208000000000664e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3208000000000664e-05...</msg>
<status status="PASS" starttime="20201115 23:01:26.658" endtime="20201115 23:01:26.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.676" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.675" endtime="20201115 23:01:26.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.678" level="INFO">VALUE: [1.3723000000000207e-05, 1.3222000000000234e-05, 1.3209000000000137e-05, 1.2721999999999734e-05, 1.3208000000000664e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3208000000000664e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3208000000000664e-05, 1.2694000000000594e-05, 1.2708999999999637e-05, 1.3708000000001164e-05, 1.3207999999997194e-05, 1.3209000000000137e-05, 1.3707999999997694e-05, 1.3708000000001164e-05, 1.3222000000000234e-05, 1.3708000000001164e-05, 1.2695000000000067e-05, 1.3749999999999873e-05, 1.2708000000000164e-05, 1.3235999999999803e-05, 1.3236999999999277e-05, 1.3179999999998054e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.2721999999999734e-05, 1.3195000000000567e-05, 1.3222999999999707e-05, 1.3208000000000664e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.3235999999999803e-05, 1.3208000000000664e-05, 1.2723000000002677e-05, 1.2694000000000594e-05, 1.2735999999999303e-05, 1.3209000000000137e-05, 1.2778000000001483e-05, 1.3209000000000137e-05, 1.3208000000000664e-05, 1.2735999999999303e-05, 1.3208000000000664e-05, 1.2708999999999637e-05, 1.3208000000000664e-05, 1.2722999999999207e-05, 1.3209000000000137e-05, 1.2708000000000164e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.677" endtime="20201115 23:01:26.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.672" endtime="20201115 23:01:26.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.682" endtime="20201115 23:01:26.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.685" endtime="20201115 23:01:26.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.684" endtime="20201115 23:01:26.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.680" endtime="20201115 23:01:26.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.313" endtime="20201115 23:01:26.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.311" endtime="20201115 23:01:26.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.310" endtime="20201115 23:01:26.706"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.708" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.717" endtime="20201115 23:01:26.735"></status>
</kw>
<msg timestamp="20201115 23:01:26.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.716" endtime="20201115 23:01:26.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.736" endtime="20201115 23:01:26.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.739" endtime="20201115 23:01:26.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.713" endtime="20201115 23:01:26.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.711" endtime="20201115 23:01:26.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.748" endtime="20201115 23:01:27.033"></status>
</kw>
<msg timestamp="20201115 23:01:27.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023103708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023117431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.746" endtime="20201115 23:01:27.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023103708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023117431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.038" endtime="20201115 23:01:27.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.046" endtime="20201115 23:01:27.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.744" endtime="20201115 23:01:27.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.742" endtime="20201115 23:01:27.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.053" level="INFO">${RESULT} = [{'time': 0.023117431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3723000000000207e-05, 'source_diff': 1.3723000000000207e-05}, {'time': 0.023136111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:27.049" endtime="20201115 23:01:27.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.066" level="INFO">${ACCURACY} = {'diff': [1.3723000000000207e-05, 1.3722000000000734e-05, 1.4208000000001664e-05, 1.3693999999998124e-05, 1.3736000000000304e-05, 1.3723000000000207e-05, 1.3709000000000637e-05, 1.3736000000000304e-05...</msg>
<status status="PASS" starttime="20201115 23:01:27.054" endtime="20201115 23:01:27.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.071" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.070" endtime="20201115 23:01:27.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.073" level="INFO">VALUE: [1.3723000000000207e-05, 1.3722000000000734e-05, 1.4208000000001664e-05, 1.3693999999998124e-05, 1.3736000000000304e-05, 1.3723000000000207e-05, 1.3709000000000637e-05, 1.3736000000000304e-05, 1.4707999999998694e-05, 1.4235999999997334e-05, 1.4209000000001137e-05, 1.4222999999997238e-05, 1.3777999999999013e-05, 1.3709000000000637e-05, 1.4236000000000804e-05, 1.4207999999998194e-05, 1.4709000000001637e-05, 1.3721999999997264e-05, 1.4223000000000707e-05, 1.4209000000001137e-05, 1.4180999999998528e-05, 1.376299999999997e-05, 1.4208999999997668e-05, 1.4209000000001137e-05, 1.4291999999999083e-05, 1.3736000000000304e-05, 1.4195000000001567e-05, 1.4207999999998194e-05, 1.3749999999999873e-05, 1.4208999999997668e-05, 1.3722000000000734e-05, 1.4166999999998958e-05, 1.4222000000001234e-05, 1.4207999999998194e-05, 1.3722000000000734e-05, 1.3709000000000637e-05, 1.4209000000001137e-05, 1.4665999999999985e-05, 1.4221999999997764e-05, 1.3722000000000734e-05, 1.4209000000001137e-05, 1.4194000000002094e-05, 1.4721999999998264e-05, 1.4208000000001664e-05, 1.3708000000001164e-05, 1.4222000000001234e-05, 1.4193999999998624e-05, 1.4222000000001234e-05, 1.4151999999999915e-05, 1.4222000000001234e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.072" endtime="20201115 23:01:27.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.067" endtime="20201115 23:01:27.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.076" endtime="20201115 23:01:27.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.080" endtime="20201115 23:01:27.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.078" endtime="20201115 23:01:27.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.075" endtime="20201115 23:01:27.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.709" endtime="20201115 23:01:27.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.707" endtime="20201115 23:01:27.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.706" endtime="20201115 23:01:27.101"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.104" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.112" endtime="20201115 23:01:27.129"></status>
</kw>
<msg timestamp="20201115 23:01:27.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.110" endtime="20201115 23:01:27.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.131" endtime="20201115 23:01:27.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.133" endtime="20201115 23:01:27.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.108" endtime="20201115 23:01:27.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.105" endtime="20201115 23:01:27.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.142" endtime="20201115 23:01:27.428"></status>
</kw>
<msg timestamp="20201115 23:01:27.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.141" endtime="20201115 23:01:27.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.432" endtime="20201115 23:01:27.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.440" endtime="20201115 23:01:27.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.138" endtime="20201115 23:01:27.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.136" endtime="20201115 23:01:27.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.447" level="INFO">${RESULT} = [{'time': 0.021873042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5222999999998238e-05, 'source_diff': 1.5222999999998238e-05}, {'time': 0.021890986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:27.444" endtime="20201115 23:01:27.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.461" level="INFO">${ACCURACY} = {'diff': [1.5222999999998238e-05, 1.5208000000002664e-05, 1.5221999999998764e-05, 1.5193999999999624e-05, 1.4707999999998694e-05, 1.4707999999998694e-05, 1.4735999999997834e-05, 1.5235999999998334e-05...</msg>
<status status="PASS" starttime="20201115 23:01:27.448" endtime="20201115 23:01:27.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.465" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.464" endtime="20201115 23:01:27.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.467" level="INFO">VALUE: [1.5222999999998238e-05, 1.5208000000002664e-05, 1.5221999999998764e-05, 1.5193999999999624e-05, 1.4707999999998694e-05, 1.4707999999998694e-05, 1.4735999999997834e-05, 1.5235999999998334e-05, 1.5208999999998668e-05, 1.4723000000001207e-05, 1.4638999999996849e-05, 1.4722000000001734e-05, 1.5707999999999694e-05, 1.5208000000002664e-05, 1.4722999999997738e-05, 1.4721999999998264e-05, 1.4694999999998598e-05, 1.5264000000000943e-05, 1.4721999999998264e-05, 1.565300000000089e-05, 1.5139000000000818e-05, 1.4721999999998264e-05, 1.5721999999999264e-05, 1.5125000000001249e-05, 1.4707999999998694e-05, 1.4709000000001637e-05, 1.5208000000002664e-05, 1.5208999999998668e-05, 1.4708000000002164e-05, 1.5250000000001374e-05, 1.4708999999998168e-05, 1.5207999999999194e-05, 1.5223000000001707e-05, 1.5707999999999694e-05, 1.4694000000002594e-05, 1.4707999999998694e-05, 1.4708000000002164e-05, 1.5193999999999624e-05, 1.5222000000002234e-05, 1.4693999999999124e-05, 1.5264000000000943e-05, 1.5208000000002664e-05, 1.5250000000001374e-05, 1.5207999999999194e-05, 1.4723000000001207e-05, 1.4707999999998694e-05, 1.5207999999999194e-05, 1.4708999999998168e-05, 1.5235999999998334e-05, 1.5221999999998764e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.466" endtime="20201115 23:01:27.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.461" endtime="20201115 23:01:27.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.471" endtime="20201115 23:01:27.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.474" endtime="20201115 23:01:27.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.473" endtime="20201115 23:01:27.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.469" endtime="20201115 23:01:27.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.104" endtime="20201115 23:01:27.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.102" endtime="20201115 23:01:27.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.102" endtime="20201115 23:01:27.496"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.498" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.506" endtime="20201115 23:01:27.524"></status>
</kw>
<msg timestamp="20201115 23:01:27.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.505" endtime="20201115 23:01:27.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.526" endtime="20201115 23:01:27.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.528" endtime="20201115 23:01:27.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.502" endtime="20201115 23:01:27.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.500" endtime="20201115 23:01:27.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.537" endtime="20201115 23:01:27.822"></status>
</kw>
<msg timestamp="20201115 23:01:27.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021984625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.536" endtime="20201115 23:01:27.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021984625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.827" endtime="20201115 23:01:27.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.835" endtime="20201115 23:01:27.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.533" endtime="20201115 23:01:27.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.532" endtime="20201115 23:01:27.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.842" level="INFO">${RESULT} = [{'time': 0.021984625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6221999999999764e-05, 'source_diff': 1.6221999999999764e-05}, {'time': 0.022006667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:27.838" endtime="20201115 23:01:27.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.855" level="INFO">${ACCURACY} = {'diff': [1.6221999999999764e-05, 1.6695000000000598e-05, 1.5708999999999168e-05, 1.6695000000000598e-05, 1.6208000000000194e-05, 1.6195000000000098e-05, 1.5707999999999694e-05, 1.6222999999999238e-05...</msg>
<status status="PASS" starttime="20201115 23:01:27.843" endtime="20201115 23:01:27.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.860" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.859" endtime="20201115 23:01:27.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.863" level="INFO">VALUE: [1.6221999999999764e-05, 1.6695000000000598e-05, 1.5708999999999168e-05, 1.6695000000000598e-05, 1.6208000000000194e-05, 1.6195000000000098e-05, 1.5707999999999694e-05, 1.6222999999999238e-05, 1.5721999999999264e-05, 1.5735999999998834e-05, 1.5694000000000125e-05, 1.6709000000000168e-05, 1.6208000000000194e-05, 1.6235999999999334e-05, 1.5709000000002638e-05, 1.5707999999999694e-05, 1.5681000000000028e-05, 1.5708999999999168e-05, 1.6221999999999764e-05, 1.5722999999998738e-05, 1.6236000000002804e-05, 1.6221999999999764e-05, 1.6222000000003234e-05, 1.6195000000000098e-05, 1.5721999999999264e-05, 1.6223000000002707e-05, 1.5708999999999168e-05, 1.6193999999997155e-05, 1.6249999999998904e-05, 1.6194000000000625e-05, 1.5722000000002734e-05, 1.5708999999999168e-05, 1.5736000000002304e-05, 1.6208000000000194e-05, 1.6208000000000194e-05, 1.6221999999999764e-05, 1.5721999999999264e-05, 1.612499999999878e-05, 1.5707999999999694e-05, 1.6221999999999764e-05, 1.6235999999999334e-05, 1.616700000000096e-05, 1.5708999999999168e-05, 1.6235999999999334e-05, 1.6208000000000194e-05, 1.5735999999998834e-05, 1.6722000000000264e-05, 1.6208999999999668e-05, 1.6195000000000098e-05, 1.6222999999999238e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.861" endtime="20201115 23:01:27.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.856" endtime="20201115 23:01:27.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.866" endtime="20201115 23:01:27.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.869" endtime="20201115 23:01:27.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.868" endtime="20201115 23:01:27.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.864" endtime="20201115 23:01:27.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.499" endtime="20201115 23:01:27.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.497" endtime="20201115 23:01:27.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.496" endtime="20201115 23:01:27.891"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.893" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.901" endtime="20201115 23:01:27.919"></status>
</kw>
<msg timestamp="20201115 23:01:27.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.900" endtime="20201115 23:01:27.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.921" endtime="20201115 23:01:27.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.924" endtime="20201115 23:01:27.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.897" endtime="20201115 23:01:27.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.895" endtime="20201115 23:01:27.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.933" endtime="20201115 23:01:28.216"></status>
</kw>
<msg timestamp="20201115 23:01:28.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.931" endtime="20201115 23:01:28.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.221" endtime="20201115 23:01:28.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.229" endtime="20201115 23:01:28.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.928" endtime="20201115 23:01:28.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.927" endtime="20201115 23:01:28.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.236" level="INFO">${RESULT} = [{'time': 0.022698917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7223000000000238e-05, 'source_diff': 1.7223000000000238e-05}, {'time': 0.022720014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:28.232" endtime="20201115 23:01:28.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.251" level="INFO">${ACCURACY} = {'diff': [1.7223000000000238e-05, 1.7708000000001695e-05, 1.7221999999997295e-05, 1.6693999999997655e-05, 1.715300000000239e-05, 1.7222000000000764e-05, 1.7291999999998614e-05, 1.6693999999997655e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:28.237" endtime="20201115 23:01:28.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.255" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.254" endtime="20201115 23:01:28.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.258" level="INFO">VALUE: [1.7223000000000238e-05, 1.7708000000001695e-05, 1.7221999999997295e-05, 1.6693999999997655e-05, 1.715300000000239e-05, 1.7222000000000764e-05, 1.7291999999998614e-05, 1.6693999999997655e-05, 1.6764000000002444e-05, 1.7195000000001098e-05, 1.6722999999999738e-05, 1.7236000000000334e-05, 1.7222000000000764e-05, 1.6695000000000598e-05, 1.7209000000000668e-05, 1.7209000000000668e-05, 1.7209000000000668e-05, 1.7209000000000668e-05, 1.7222000000000764e-05, 1.7221999999997295e-05, 1.6763999999998974e-05, 1.7209000000000668e-05, 1.7165999999999015e-05, 1.665300000000189e-05, 1.7223000000000238e-05, 1.7194000000001625e-05, 1.6722000000000264e-05, 1.765299999999942e-05, 1.7209000000000668e-05, 1.7208000000001195e-05, 1.7208000000001195e-05, 1.7221999999997295e-05, 1.7207999999997725e-05, 1.6709000000000168e-05, 1.7208000000001195e-05, 1.6708000000000695e-05, 1.7208000000001195e-05, 1.7236000000000334e-05, 1.7277999999999044e-05, 1.7722000000001265e-05, 1.7278000000002514e-05, 1.7207999999997725e-05, 1.6722000000000264e-05, 1.6694000000001125e-05, 1.6709000000000168e-05, 1.7736000000000834e-05, 1.6736999999999308e-05, 1.6708000000000695e-05, 1.6708000000000695e-05, 1.6708000000000695e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.256" endtime="20201115 23:01:28.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.252" endtime="20201115 23:01:28.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.261" endtime="20201115 23:01:28.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.264" endtime="20201115 23:01:28.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.263" endtime="20201115 23:01:28.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.259" endtime="20201115 23:01:28.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.894" endtime="20201115 23:01:28.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.892" endtime="20201115 23:01:28.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.891" endtime="20201115 23:01:28.285"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.288" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.296" endtime="20201115 23:01:28.313"></status>
</kw>
<msg timestamp="20201115 23:01:28.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.294" endtime="20201115 23:01:28.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.315" endtime="20201115 23:01:28.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.318" endtime="20201115 23:01:28.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.292" endtime="20201115 23:01:28.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.290" endtime="20201115 23:01:28.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.327" endtime="20201115 23:01:28.611"></status>
</kw>
<msg timestamp="20201115 23:01:28.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.325" endtime="20201115 23:01:28.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.615" endtime="20201115 23:01:28.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.628" endtime="20201115 23:01:28.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.322" endtime="20201115 23:01:28.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.321" endtime="20201115 23:01:28.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.635" level="INFO">${RESULT} = [{'time': 0.021911847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8208000000002195e-05, 'source_diff': 1.8208000000002195e-05}, {'time': 0.021932639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:28.632" endtime="20201115 23:01:28.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.648" level="INFO">${ACCURACY} = {'diff': [1.8208000000002195e-05, 1.8207999999998725e-05, 1.7707999999998225e-05, 1.8223000000001238e-05, 1.7749999999996935e-05, 1.8209000000001668e-05, 1.7680000000002555e-05, 1.76950000000016e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:28.636" endtime="20201115 23:01:28.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.653" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.652" endtime="20201115 23:01:28.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.655" level="INFO">VALUE: [1.8208000000002195e-05, 1.8207999999998725e-05, 1.7707999999998225e-05, 1.8223000000001238e-05, 1.7749999999996935e-05, 1.8209000000001668e-05, 1.7680000000002555e-05, 1.76950000000016e-05, 1.8207999999998725e-05, 1.7723000000000738e-05, 1.7722000000001265e-05, 1.76950000000016e-05, 1.8221999999998295e-05, 1.8707999999999225e-05, 1.7707999999998225e-05, 1.8235999999997865e-05, 1.82089999999982e-05, 1.7721999999997795e-05, 1.869499999999913e-05, 1.8193999999999155e-05, 1.8208000000002195e-05, 1.7723000000000738e-05, 1.7723000000000738e-05, 1.7736000000000834e-05, 1.76950000000016e-05, 1.8221999999998295e-05, 1.818100000000253e-05, 1.8207999999998725e-05, 1.7708000000001695e-05, 1.763899999999985e-05, 1.7708000000001695e-05, 1.8221999999998295e-05, 1.8236000000001334e-05, 1.8207999999998725e-05, 1.8209000000001668e-05, 1.772299999999727e-05, 1.7708000000001695e-05, 1.7693999999998655e-05, 1.82089999999982e-05, 1.7763999999999974e-05, 1.82089999999982e-05, 1.8221999999998295e-05, 1.8193999999999155e-05, 1.7721999999997795e-05, 1.827700000000057e-05, 1.7723000000000738e-05, 1.819499999999863e-05, 1.8221999999998295e-05, 1.8222000000001765e-05, 1.8250000000000904e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.654" endtime="20201115 23:01:28.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.649" endtime="20201115 23:01:28.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.659" endtime="20201115 23:01:28.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.662" endtime="20201115 23:01:28.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.660" endtime="20201115 23:01:28.682"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.657" endtime="20201115 23:01:28.682"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.288" endtime="20201115 23:01:28.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.286" endtime="20201115 23:01:28.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.286" endtime="20201115 23:01:28.683"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.685" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.694" endtime="20201115 23:01:28.710"></status>
</kw>
<msg timestamp="20201115 23:01:28.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.692" endtime="20201115 23:01:28.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.712" endtime="20201115 23:01:28.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.714" endtime="20201115 23:01:28.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.689" endtime="20201115 23:01:28.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.687" endtime="20201115 23:01:28.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.724" endtime="20201115 23:01:29.008"></status>
</kw>
<msg timestamp="20201115 23:01:29.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021803583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.722" endtime="20201115 23:01:29.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021803583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.012" endtime="20201115 23:01:29.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.021" endtime="20201115 23:01:29.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.719" endtime="20201115 23:01:29.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.717" endtime="20201115 23:01:29.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.027" level="INFO">${RESULT} = [{'time': 0.021822778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.919499999999963e-05, 'source_diff': 1.919499999999963e-05}, {'time': 0.021845597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:29.024" endtime="20201115 23:01:29.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.041" level="INFO">${ACCURACY} = {'diff': [1.919499999999963e-05, 1.8722000000002265e-05, 1.9221999999999295e-05, 1.87089999999987e-05, 1.870900000000217e-05, 1.8707999999999225e-05, 1.8735999999998365e-05, 1.9207999999999725e-05, 1....</msg>
<status status="PASS" starttime="20201115 23:01:29.028" endtime="20201115 23:01:29.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.045" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.044" endtime="20201115 23:01:29.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.048" level="INFO">VALUE: [1.919499999999963e-05, 1.8722000000002265e-05, 1.9221999999999295e-05, 1.87089999999987e-05, 1.870900000000217e-05, 1.8707999999999225e-05, 1.8735999999998365e-05, 1.9207999999999725e-05, 1.9207999999999725e-05, 1.913900000000135e-05, 1.9236000000002335e-05, 1.9264000000001474e-05, 1.919499999999963e-05, 1.9236000000002335e-05, 1.9207999999999725e-05, 1.880500000000021e-05, 1.916700000000049e-05, 1.8708000000002695e-05, 1.9207999999999725e-05, 1.9221999999999295e-05, 1.9221999999999295e-05, 1.9236000000002335e-05, 1.9207999999999725e-05, 1.9207999999999725e-05, 1.9194000000000155e-05, 1.9708000000000225e-05, 1.9236000000002335e-05, 1.9208000000003195e-05, 1.916700000000049e-05, 1.8722000000002265e-05, 1.922299999999877e-05, 1.9221999999999295e-05, 1.8693999999999655e-05, 1.8721999999998795e-05, 1.915300000000092e-05, 1.92089999999992e-05, 1.8708000000002695e-05, 1.9221999999999295e-05, 1.9194000000000155e-05, 1.92089999999992e-05, 1.920900000000267e-05, 1.923699999999834e-05, 1.87089999999987e-05, 1.9221999999999295e-05, 1.8693999999999655e-05, 1.9749999999998935e-05, 1.8707999999999225e-05, 1.9264000000001474e-05, 1.870900000000217e-05, 1.9207999999999725e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.046" endtime="20201115 23:01:29.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.042" endtime="20201115 23:01:29.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.051" endtime="20201115 23:01:29.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.054" endtime="20201115 23:01:29.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.053" endtime="20201115 23:01:29.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.049" endtime="20201115 23:01:29.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.686" endtime="20201115 23:01:29.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.684" endtime="20201115 23:01:29.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.683" endtime="20201115 23:01:29.075"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.078" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.086" endtime="20201115 23:01:29.103"></status>
</kw>
<msg timestamp="20201115 23:01:29.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.084" endtime="20201115 23:01:29.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.105" endtime="20201115 23:01:29.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.108" endtime="20201115 23:01:29.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.082" endtime="20201115 23:01:29.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.080" endtime="20201115 23:01:29.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.117" endtime="20201115 23:01:29.401"></status>
</kw>
<msg timestamp="20201115 23:01:29.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021850278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.115" endtime="20201115 23:01:29.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021850278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.405" endtime="20201115 23:01:29.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.414" endtime="20201115 23:01:29.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.113" endtime="20201115 23:01:29.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.111" endtime="20201115 23:01:29.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.420" level="INFO">${RESULT} = [{'time': 0.021869986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9708000000000225e-05, 'source_diff': 1.9708000000000225e-05}, {'time': 0.021893972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:29.417" endtime="20201115 23:01:29.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.434" level="INFO">${ACCURACY} = {'diff': [1.9708000000000225e-05, 2.0222000000000295e-05, 1.9721999999999795e-05, 2.0222000000000295e-05, 1.9694000000000655e-05, 2.0222000000000295e-05, 1.9778000000001544e-05, 1.970900000000317e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:29.421" endtime="20201115 23:01:29.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.438" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.437" endtime="20201115 23:01:29.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.441" level="INFO">VALUE: [1.9708000000000225e-05, 2.0222000000000295e-05, 1.9721999999999795e-05, 2.0222000000000295e-05, 1.9694000000000655e-05, 2.0222000000000295e-05, 1.9778000000001544e-05, 1.970900000000317e-05, 2.0235999999999865e-05, 1.9721999999999795e-05, 2.0207999999997256e-05, 1.969500000000013e-05, 1.972299999999927e-05, 1.966699999999752e-05, 1.9721999999999795e-05, 2.0194000000001155e-05, 2.0208000000000725e-05, 2.018100000000106e-05, 2.0222000000000295e-05, 1.9708000000000225e-05, 1.969500000000013e-05, 1.9721999999999795e-05, 2.0222000000000295e-05, 1.9721999999999795e-05, 1.972299999999927e-05, 2.0235999999999865e-05, 2.019499999999716e-05, 1.9749999999998935e-05, 2.0222000000000295e-05, 1.9721999999999795e-05, 1.969500000000013e-05, 1.9735999999999365e-05, 1.968099999999709e-05, 2.0722000000000795e-05, 1.9708000000000225e-05, 1.9750000000002405e-05, 2.015300000000192e-05, 2.022299999999977e-05, 1.972300000000274e-05, 1.9679999999997616e-05, 2.0235999999999865e-05, 1.9721999999999795e-05, 2.022299999999977e-05, 1.972299999999927e-05, 1.97089999999997e-05, 2.0222000000000295e-05, 1.9708000000000225e-05, 2.0208000000000725e-05, 2.022299999999977e-05, 1.972299999999927e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.439" endtime="20201115 23:01:29.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.435" endtime="20201115 23:01:29.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.444" endtime="20201115 23:01:29.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.447" endtime="20201115 23:01:29.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.446" endtime="20201115 23:01:29.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.442" endtime="20201115 23:01:29.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.078" endtime="20201115 23:01:29.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.077" endtime="20201115 23:01:29.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.076" endtime="20201115 23:01:29.469"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.471" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.480" endtime="20201115 23:01:29.497"></status>
</kw>
<msg timestamp="20201115 23:01:29.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.478" endtime="20201115 23:01:29.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.499" endtime="20201115 23:01:29.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.502" endtime="20201115 23:01:29.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.476" endtime="20201115 23:01:29.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.473" endtime="20201115 23:01:29.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.511" endtime="20201115 23:01:29.798"></status>
</kw>
<msg timestamp="20201115 23:01:29.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023288097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023309306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.509" endtime="20201115 23:01:29.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023288097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023309306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.802" endtime="20201115 23:01:29.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.811" endtime="20201115 23:01:29.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.507" endtime="20201115 23:01:29.813"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.505" endtime="20201115 23:01:29.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.817" level="INFO">${RESULT} = [{'time': 0.023309306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.120899999999773e-05, 'source_diff': 2.120899999999773e-05}, {'time': 0.023336181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:29.814" endtime="20201115 23:01:29.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.832" level="INFO">${ACCURACY} = {'diff': [2.120899999999773e-05, 2.072300000000027e-05, 2.0736000000000365e-05, 2.0736000000000365e-05, 2.076300000000003e-05, 2.0722000000000795e-05, 2.0708000000001225e-05, 2.0693999999998186e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:01:29.818" endtime="20201115 23:01:29.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.836" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.835" endtime="20201115 23:01:29.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.839" level="INFO">VALUE: [2.120899999999773e-05, 2.072300000000027e-05, 2.0736000000000365e-05, 2.0736000000000365e-05, 2.076300000000003e-05, 2.0722000000000795e-05, 2.0708000000001225e-05, 2.0693999999998186e-05, 2.0721999999997326e-05, 2.169500000000213e-05, 2.0693999999998186e-05, 2.1707999999998756e-05, 2.0722000000000795e-05, 2.1207999999998256e-05, 2.120899999999773e-05, 2.1222000000001295e-05, 2.1277999999999575e-05, 2.1208000000001725e-05, 2.1193999999998686e-05, 2.0736000000000365e-05, 2.069499999999766e-05, 2.0778000000002544e-05, 2.0722000000000795e-05, 2.0708000000001225e-05, 2.0707999999997756e-05, 2.169500000000213e-05, 2.122300000000077e-05, 2.1194000000002156e-05, 2.1222000000001295e-05, 2.07090000000007e-05, 2.1264000000000005e-05, 2.1221999999997826e-05, 2.12090000000012e-05, 2.072300000000027e-05, 2.07090000000007e-05, 2.1721999999998326e-05, 2.1193999999998686e-05, 2.07090000000007e-05, 2.07090000000007e-05, 2.1207999999998256e-05, 2.122300000000077e-05, 2.0708000000001225e-05, 2.1194000000002156e-05, 2.1250000000000435e-05, 2.0708000000001225e-05, 2.072300000000027e-05, 2.12090000000012e-05, 2.119500000000163e-05, 2.0749999999999935e-05, 2.1208000000001725e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.837" endtime="20201115 23:01:29.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.833" endtime="20201115 23:01:29.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.842" endtime="20201115 23:01:29.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.846" endtime="20201115 23:01:29.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.844" endtime="20201115 23:01:29.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.840" endtime="20201115 23:01:29.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.472" endtime="20201115 23:01:29.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.470" endtime="20201115 23:01:29.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.469" endtime="20201115 23:01:29.867"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.869" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.878" endtime="20201115 23:01:29.895"></status>
</kw>
<msg timestamp="20201115 23:01:29.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.876" endtime="20201115 23:01:29.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.897" endtime="20201115 23:01:29.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.899" endtime="20201115 23:01:29.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.873" endtime="20201115 23:01:29.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.871" endtime="20201115 23:01:29.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.908" endtime="20201115 23:01:30.193"></status>
</kw>
<msg timestamp="20201115 23:01:30.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.907" endtime="20201115 23:01:30.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.197" endtime="20201115 23:01:30.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.206" endtime="20201115 23:01:30.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.904" endtime="20201115 23:01:30.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.903" endtime="20201115 23:01:30.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.213" level="INFO">${RESULT} = [{'time': 0.021909333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2207999999999256e-05, 'source_diff': 2.2207999999999256e-05}, {'time': 0.021936389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:30.209" endtime="20201115 23:01:30.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.226" level="INFO">${ACCURACY} = {'diff': [2.2207999999999256e-05, 2.2222000000002295e-05, 2.220899999999873e-05, 2.1693999999999186e-05, 2.1721999999998326e-05, 2.166699999999952e-05, 2.2193999999999686e-05, 2.1708000000002226e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:30.214" endtime="20201115 23:01:30.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.231" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.230" endtime="20201115 23:01:30.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.234" level="INFO">VALUE: [2.2207999999999256e-05, 2.2222000000002295e-05, 2.220899999999873e-05, 2.1693999999999186e-05, 2.1721999999998326e-05, 2.166699999999952e-05, 2.2193999999999686e-05, 2.1708000000002226e-05, 2.1707999999998756e-05, 2.1707999999998756e-05, 2.1722000000001795e-05, 2.213900000000088e-05, 2.1707999999998756e-05, 2.2221999999998826e-05, 2.2207999999999256e-05, 2.1679999999999616e-05, 2.172300000000127e-05, 2.162500000000081e-05, 2.2235999999998396e-05, 2.1707999999998756e-05, 2.2249999999997966e-05, 2.220899999999873e-05, 2.2208000000002726e-05, 2.223700000000134e-05, 2.173700000000084e-05, 2.2222000000002295e-05, 2.2250000000001435e-05, 2.1735999999997896e-05, 2.220899999999873e-05, 2.222300000000177e-05, 2.2207999999999256e-05, 2.2221999999998826e-05, 2.1722000000001795e-05, 2.2221999999998826e-05, 2.218099999999959e-05, 2.2707999999999756e-05, 2.2250000000001435e-05, 2.2180000000000116e-05, 2.2721999999999326e-05, 2.1708000000002226e-05, 2.166699999999952e-05, 2.170899999999823e-05, 2.17090000000017e-05, 2.2221999999998826e-05, 2.2249999999997966e-05, 2.2165999999997077e-05, 2.2207999999999256e-05, 2.2235999999998396e-05, 2.22229999999983e-05, 2.176300000000103e-05]</msg>
<status status="PASS" starttime="20201115 23:01:30.233" endtime="20201115 23:01:30.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.227" endtime="20201115 23:01:30.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.238" endtime="20201115 23:01:30.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.241" endtime="20201115 23:01:30.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.240" endtime="20201115 23:01:30.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.236" endtime="20201115 23:01:30.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.870" endtime="20201115 23:01:30.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.868" endtime="20201115 23:01:30.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.867" endtime="20201115 23:01:30.262"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.265" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.273" endtime="20201115 23:01:30.291"></status>
</kw>
<msg timestamp="20201115 23:01:30.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.271" endtime="20201115 23:01:30.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.292" endtime="20201115 23:01:30.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.295" endtime="20201115 23:01:30.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.269" endtime="20201115 23:01:30.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.267" endtime="20201115 23:01:30.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.304" endtime="20201115 23:01:30.589"></status>
</kw>
<msg timestamp="20201115 23:01:30.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.302" endtime="20201115 23:01:30.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.593" endtime="20201115 23:01:30.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.602" endtime="20201115 23:01:30.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.300" endtime="20201115 23:01:30.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.298" endtime="20201115 23:01:30.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.608" level="INFO">${RESULT} = [{'time': 0.022168361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3221999999999826e-05, 'source_diff': 2.3221999999999826e-05}, {'time': 0.022193653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:30.605" endtime="20201115 23:01:30.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.622" level="INFO">${ACCURACY} = {'diff': [2.3221999999999826e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.2707999999999756e-05, 2.320899999999973e-05, 2.32770000000021e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:01:30.609" endtime="20201115 23:01:30.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.626" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.625" endtime="20201115 23:01:30.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.629" level="INFO">VALUE: [2.3221999999999826e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.2707999999999756e-05, 2.320899999999973e-05, 2.32770000000021e-05, 2.2721999999999326e-05, 2.320899999999973e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.318100000000059e-05, 2.2707999999999756e-05, 2.318099999999712e-05, 2.2694000000000186e-05, 2.3708000000000756e-05, 2.3221999999999826e-05, 2.2721999999999326e-05, 2.3221999999999826e-05, 2.2722000000002796e-05, 2.316700000000102e-05, 2.2721999999999326e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.3208000000000256e-05, 2.3221999999999826e-05, 2.2707999999999756e-05, 2.270899999999923e-05, 2.2736000000002365e-05, 2.3263999999998536e-05, 2.319500000000016e-05, 2.316700000000102e-05, 2.3735999999999896e-05, 2.3193999999997217e-05, 2.27229999999988e-05, 2.2722000000002796e-05, 2.3222000000003296e-05, 2.3235999999999396e-05, 2.3194000000000686e-05, 2.3235999999999396e-05, 2.3722000000000326e-05, 2.320899999999973e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.3221999999999826e-05, 2.2736000000002365e-05, 2.319500000000016e-05, 2.3235999999999396e-05, 2.32229999999993e-05]</msg>
<status status="PASS" starttime="20201115 23:01:30.627" endtime="20201115 23:01:30.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.623" endtime="20201115 23:01:30.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.633" endtime="20201115 23:01:30.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.636" endtime="20201115 23:01:30.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.635" endtime="20201115 23:01:30.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.631" endtime="20201115 23:01:30.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.265" endtime="20201115 23:01:30.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.263" endtime="20201115 23:01:30.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.263" endtime="20201115 23:01:30.657"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.660" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.668" endtime="20201115 23:01:30.686"></status>
</kw>
<msg timestamp="20201115 23:01:30.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.666" endtime="20201115 23:01:30.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.688" endtime="20201115 23:01:30.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.690" endtime="20201115 23:01:30.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.664" endtime="20201115 23:01:30.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.662" endtime="20201115 23:01:30.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.699" endtime="20201115 23:01:30.985"></status>
</kw>
<msg timestamp="20201115 23:01:30.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.698" endtime="20201115 23:01:30.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.989" endtime="20201115 23:01:30.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.997" endtime="20201115 23:01:30.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.695" endtime="20201115 23:01:31.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.693" endtime="20201115 23:01:31.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.004" level="INFO">${RESULT} = [{'time': 0.021951792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.419500000000116e-05, 'source_diff': 2.419500000000116e-05}, {'time': 0.021981847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:31.001" endtime="20201115 23:01:31.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.018" level="INFO">${ACCURACY} = {'diff': [2.419500000000116e-05, 2.4721999999997857e-05, 2.4222000000000826e-05, 2.4221999999997357e-05, 2.3735999999999896e-05, 2.418099999999812e-05, 2.370900000000023e-05, 2.3707999999997287e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:01:31.006" endtime="20201115 23:01:31.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.023" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.022" endtime="20201115 23:01:31.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.025" level="INFO">VALUE: [2.419500000000116e-05, 2.4721999999997857e-05, 2.4222000000000826e-05, 2.4221999999997357e-05, 2.3735999999999896e-05, 2.418099999999812e-05, 2.370900000000023e-05, 2.3707999999997287e-05, 2.37770000000026e-05, 2.4222000000000826e-05, 2.4222000000000826e-05, 2.3749999999999466e-05, 2.4221999999997357e-05, 2.4194000000001686e-05, 2.4249999999999966e-05, 2.4236000000000396e-05, 2.4180000000002116e-05, 2.430500000000224e-05, 2.37229999999998e-05, 2.3707999999997287e-05, 2.370900000000023e-05, 2.4208000000001256e-05, 2.3722000000000326e-05, 2.4222000000000826e-05, 2.4236000000000396e-05, 2.37229999999998e-05, 2.3749999999999466e-05, 2.4208000000001256e-05, 2.469499999999819e-05, 2.3735999999999896e-05, 2.4222000000000826e-05, 2.470899999999776e-05, 2.3680000000001616e-05, 2.4222000000000826e-05, 2.3735999999999896e-05, 2.3708000000000756e-05, 2.4264000000003005e-05, 2.4222000000000826e-05, 2.42230000000003e-05, 2.4222000000000826e-05, 2.4222000000000826e-05, 2.4207999999997787e-05, 2.369500000000066e-05, 2.416699999999855e-05, 2.419499999999769e-05, 2.47230000000008e-05, 2.4222000000000826e-05, 2.4194000000001686e-05, 2.4222000000000826e-05, 2.3722000000000326e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.024" endtime="20201115 23:01:31.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.019" endtime="20201115 23:01:31.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.028" endtime="20201115 23:01:31.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.032" endtime="20201115 23:01:31.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.030" endtime="20201115 23:01:31.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.027" endtime="20201115 23:01:31.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.660" endtime="20201115 23:01:31.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.659" endtime="20201115 23:01:31.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.658" endtime="20201115 23:01:31.053"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.055" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.063" endtime="20201115 23:01:31.081"></status>
</kw>
<msg timestamp="20201115 23:01:31.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.062" endtime="20201115 23:01:31.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.083" endtime="20201115 23:01:31.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.085" endtime="20201115 23:01:31.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.059" endtime="20201115 23:01:31.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.057" endtime="20201115 23:01:31.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.094" endtime="20201115 23:01:31.379"></status>
</kw>
<msg timestamp="20201115 23:01:31.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.093" endtime="20201115 23:01:31.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.384" endtime="20201115 23:01:31.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.392" endtime="20201115 23:01:31.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.090" endtime="20201115 23:01:31.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.088" endtime="20201115 23:01:31.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.399" level="INFO">${RESULT} = [{'time': 0.022706472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4707999999998287e-05, 'source_diff': 2.4707999999998287e-05}, {'time': 0.022737847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:31.396" endtime="20201115 23:01:31.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.414" level="INFO">${ACCURACY} = {'diff': [2.4707999999998287e-05, 2.5207999999998787e-05, 2.4722000000001326e-05, 2.4708000000001756e-05, 2.4722000000001326e-05, 2.466699999999905e-05, 2.5208000000002256e-05, 2.5208000000002256e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:31.400" endtime="20201115 23:01:31.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.418" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.417" endtime="20201115 23:01:31.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.421" level="INFO">VALUE: [2.4707999999998287e-05, 2.5207999999998787e-05, 2.4722000000001326e-05, 2.4708000000001756e-05, 2.4722000000001326e-05, 2.466699999999905e-05, 2.5208000000002256e-05, 2.5208000000002256e-05, 2.4707999999998287e-05, 2.5222000000001826e-05, 2.4736000000000896e-05, 2.5193999999999217e-05, 2.523700000000087e-05, 2.4735999999997427e-05, 2.5221999999998357e-05, 2.4708000000001756e-05, 2.4721999999997857e-05, 2.5236000000001396e-05, 2.466700000000252e-05, 2.5207999999998787e-05, 2.4721999999997857e-05, 2.4750000000000466e-05, 2.5193999999999217e-05, 2.5721999999998857e-05, 2.4721999999997857e-05, 2.473700000000037e-05, 2.470900000000123e-05, 2.5222000000001826e-05, 2.4693999999998717e-05, 2.5207999999998787e-05, 2.465299999999948e-05, 2.523700000000087e-05, 2.519499999999869e-05, 2.512500000000084e-05, 2.4707999999998287e-05, 2.4708000000001756e-05, 2.4707999999998287e-05, 2.4735999999997427e-05, 2.47230000000008e-05, 2.5222000000001826e-05, 2.5179999999999647e-05, 2.5735999999998427e-05, 2.470899999999776e-05, 2.47230000000008e-05, 2.5193999999999217e-05, 2.5207999999998787e-05, 2.5207999999998787e-05, 2.4722000000001326e-05, 2.5208000000002256e-05, 2.4707999999998287e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.419" endtime="20201115 23:01:31.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.415" endtime="20201115 23:01:31.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.424" endtime="20201115 23:01:31.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.427" endtime="20201115 23:01:31.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.426" endtime="20201115 23:01:31.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.422" endtime="20201115 23:01:31.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.056" endtime="20201115 23:01:31.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.054" endtime="20201115 23:01:31.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.053" endtime="20201115 23:01:31.448"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.451" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.459" endtime="20201115 23:01:31.477"></status>
</kw>
<msg timestamp="20201115 23:01:31.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.457" endtime="20201115 23:01:31.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.478" endtime="20201115 23:01:31.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.481" endtime="20201115 23:01:31.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.455" endtime="20201115 23:01:31.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.453" endtime="20201115 23:01:31.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.490" endtime="20201115 23:01:31.775"></status>
</kw>
<msg timestamp="20201115 23:01:31.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.488" endtime="20201115 23:01:31.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.779" endtime="20201115 23:01:31.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.787" endtime="20201115 23:01:31.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.485" endtime="20201115 23:01:31.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.484" endtime="20201115 23:01:31.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.794" level="INFO">${RESULT} = [{'time': 0.021852972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6235999999998927e-05, 'source_diff': 2.6235999999998927e-05}, {'time': 0.021881069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:31.791" endtime="20201115 23:01:31.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.808" level="INFO">${ACCURACY} = {'diff': [2.6235999999998927e-05, 2.5693999999999717e-05, 2.5721999999998857e-05, 2.572299999999833e-05, 2.6207999999999787e-05, 2.569499999999919e-05, 2.6194000000000217e-05, 2.5666000000000577e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:31.795" endtime="20201115 23:01:31.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.812" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.811" endtime="20201115 23:01:31.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.815" level="INFO">VALUE: [2.6235999999998927e-05, 2.5693999999999717e-05, 2.5721999999998857e-05, 2.572299999999833e-05, 2.6207999999999787e-05, 2.569499999999919e-05, 2.6194000000000217e-05, 2.5666000000000577e-05, 2.5707999999999287e-05, 2.6221999999999357e-05, 2.5707999999999287e-05, 2.566700000000005e-05, 2.6207999999999787e-05, 2.6207999999999787e-05, 2.6207999999999787e-05, 2.5693999999999717e-05, 2.6235999999998927e-05, 2.5666000000000577e-05, 2.57369999999979e-05, 2.5722000000002326e-05, 2.5722000000002326e-05, 2.5722000000002326e-05, 2.6221999999999357e-05, 2.62230000000023e-05, 2.622299999999883e-05, 2.6276999999998163e-05, 2.6221999999999357e-05, 2.6194000000000217e-05, 2.6235999999998927e-05, 2.616700000000055e-05, 2.5707999999999287e-05, 2.6735999999999427e-05, 2.6207999999999787e-05, 2.6207999999999787e-05, 2.6235999999998927e-05, 2.5707999999999287e-05, 2.570899999999876e-05, 2.623700000000187e-05, 2.6249999999998497e-05, 2.6735999999999427e-05, 2.6221999999999357e-05, 2.570899999999876e-05, 2.6708000000000287e-05, 2.6207999999999787e-05, 2.5707999999999287e-05, 2.6708000000000287e-05, 2.5721999999998857e-05, 2.5707999999999287e-05, 2.5708000000002756e-05, 2.6207999999999787e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.813" endtime="20201115 23:01:31.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.809" endtime="20201115 23:01:31.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.818" endtime="20201115 23:01:31.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.821" endtime="20201115 23:01:31.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.820" endtime="20201115 23:01:31.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.816" endtime="20201115 23:01:31.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.451" endtime="20201115 23:01:31.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.449" endtime="20201115 23:01:31.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.449" endtime="20201115 23:01:31.842"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.845" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.853" endtime="20201115 23:01:31.870"></status>
</kw>
<msg timestamp="20201115 23:01:31.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.852" endtime="20201115 23:01:31.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.872" endtime="20201115 23:01:31.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.875" endtime="20201115 23:01:31.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.849" endtime="20201115 23:01:31.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.847" endtime="20201115 23:01:31.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.884" endtime="20201115 23:01:32.169"></status>
</kw>
<msg timestamp="20201115 23:01:32.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219355, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:31.882" endtime="20201115 23:01:32.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219355, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:32.173" endtime="20201115 23:01:32.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.182" endtime="20201115 23:01:32.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.880" endtime="20201115 23:01:32.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.878" endtime="20201115 23:01:32.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.188" level="INFO">${RESULT} = [{'time': 0.0219355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6792000000001176e-05, 'source_diff': 2.6792000000001176e-05}, {'time': 0.021966347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:32.185" endtime="20201115 23:01:32.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.202" level="INFO">${ACCURACY} = {'diff': [2.6792000000001176e-05, 2.7208000000000787e-05, 2.670899999999976e-05, 2.6721999999999857e-05, 2.6708000000000287e-05, 2.7221999999996888e-05, 2.7221999999996888e-05, 2.6721999999999857e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:32.189" endtime="20201115 23:01:32.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.206" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.205" endtime="20201115 23:01:32.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.209" level="INFO">VALUE: [2.6792000000001176e-05, 2.7208000000000787e-05, 2.670899999999976e-05, 2.6721999999999857e-05, 2.6708000000000287e-05, 2.7221999999996888e-05, 2.7221999999996888e-05, 2.6721999999999857e-05, 2.7207999999997318e-05, 2.7222000000000357e-05, 2.7208000000000787e-05, 2.6721999999999857e-05, 2.7221999999996888e-05, 2.670899999999976e-05, 2.670899999999976e-05, 2.6778000000001606e-05, 2.7222000000000357e-05, 2.7249999999999497e-05, 2.6721999999999857e-05, 2.6736000000002896e-05, 2.6721999999999857e-05, 2.722299999999983e-05, 2.672299999999933e-05, 2.7222000000000357e-05, 2.6707999999996818e-05, 2.719500000000069e-05, 2.672299999999933e-05, 2.6721999999999857e-05, 2.722299999999983e-05, 2.7207999999997318e-05, 2.6680000000001147e-05, 2.7222000000000357e-05, 2.669500000000019e-05, 2.6708000000000287e-05, 2.722299999999983e-05, 2.6721999999999857e-05, 2.7722000000000857e-05, 2.6680000000001147e-05, 2.7222000000000357e-05, 2.6721999999999857e-05, 2.669500000000019e-05, 2.670899999999976e-05, 2.669500000000019e-05, 2.7222000000000357e-05, 2.7194000000001217e-05, 2.7722000000000857e-05, 2.670899999999976e-05, 2.7791999999998707e-05, 2.7194000000001217e-05, 2.7221999999996888e-05]</msg>
<status status="PASS" starttime="20201115 23:01:32.207" endtime="20201115 23:01:32.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.203" endtime="20201115 23:01:32.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.212" endtime="20201115 23:01:32.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.215" endtime="20201115 23:01:32.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.214" endtime="20201115 23:01:32.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.210" endtime="20201115 23:01:32.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.845" endtime="20201115 23:01:32.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.844" endtime="20201115 23:01:32.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.843" endtime="20201115 23:01:32.236"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.239" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.248" endtime="20201115 23:01:32.265"></status>
</kw>
<msg timestamp="20201115 23:01:32.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.246" endtime="20201115 23:01:32.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.266" endtime="20201115 23:01:32.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.269" endtime="20201115 23:01:32.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.243" endtime="20201115 23:01:32.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.241" endtime="20201115 23:01:32.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.278" endtime="20201115 23:01:32.564"></status>
</kw>
<msg timestamp="20201115 23:01:32.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022625667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.276" endtime="20201115 23:01:32.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022625667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.568" endtime="20201115 23:01:32.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.576" endtime="20201115 23:01:32.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.274" endtime="20201115 23:01:32.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.272" endtime="20201115 23:01:32.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.583" level="INFO">${RESULT} = [{'time': 0.022625667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.819499999999822e-05, 'source_diff': 2.819499999999822e-05}, {'time': 0.022659944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:32.579" endtime="20201115 23:01:32.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.596" level="INFO">${ACCURACY} = {'diff': [2.819499999999822e-05, 2.8750000000000997e-05, 2.8264000000000067e-05, 2.820899999999779e-05, 2.8166000000003077e-05, 2.819499999999822e-05, 2.8291999999999207e-05, 2.772300000000033e-05, 2....</msg>
<status status="PASS" starttime="20201115 23:01:32.584" endtime="20201115 23:01:32.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.601" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.600" endtime="20201115 23:01:32.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.603" level="INFO">VALUE: [2.819499999999822e-05, 2.8750000000000997e-05, 2.8264000000000067e-05, 2.820899999999779e-05, 2.8166000000003077e-05, 2.819499999999822e-05, 2.8291999999999207e-05, 2.772300000000033e-05, 2.7736000000000427e-05, 2.7679999999998678e-05, 2.8222000000001357e-05, 2.8208000000001787e-05, 2.8207999999998318e-05, 2.770900000000076e-05, 2.770900000000076e-05, 2.8125000000000372e-05, 2.7722000000000857e-05, 2.8222000000001357e-05, 2.769500000000119e-05, 2.772300000000033e-05, 2.820899999999779e-05, 2.77369999999999e-05, 2.822299999999736e-05, 2.769499999999772e-05, 2.7721999999997388e-05, 2.8221999999997888e-05, 2.772299999999686e-05, 2.7708000000001287e-05, 2.7652999999999012e-05, 2.7722000000000857e-05, 2.8222000000001357e-05, 2.768100000000162e-05, 2.822299999999736e-05, 2.770900000000076e-05, 2.7722000000000857e-05, 2.8207999999998318e-05, 2.7708000000001287e-05, 2.8707999999998818e-05, 2.8721999999998388e-05, 2.8207999999998318e-05, 2.82370000000004e-05, 2.820899999999779e-05, 2.768099999999815e-05, 2.8250000000000497e-05, 2.7680000000002147e-05, 2.769500000000119e-05, 2.822299999999736e-05, 2.7694000000001717e-05, 2.7791000000002702e-05, 2.7694000000001717e-05]</msg>
<status status="PASS" starttime="20201115 23:01:32.602" endtime="20201115 23:01:32.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.597" endtime="20201115 23:01:32.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.606" endtime="20201115 23:01:32.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.610" endtime="20201115 23:01:32.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.608" endtime="20201115 23:01:32.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.605" endtime="20201115 23:01:32.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.239" endtime="20201115 23:01:32.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.238" endtime="20201115 23:01:32.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.237" endtime="20201115 23:01:32.632"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.634" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.642" endtime="20201115 23:01:32.660"></status>
</kw>
<msg timestamp="20201115 23:01:32.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.640" endtime="20201115 23:01:32.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.662" endtime="20201115 23:01:32.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.664" endtime="20201115 23:01:32.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.638" endtime="20201115 23:01:32.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.636" endtime="20201115 23:01:32.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.673" endtime="20201115 23:01:32.959"></status>
</kw>
<msg timestamp="20201115 23:01:32.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022639028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.672" endtime="20201115 23:01:32.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022639028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.963" endtime="20201115 23:01:32.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.971" endtime="20201115 23:01:32.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.669" endtime="20201115 23:01:32.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.667" endtime="20201115 23:01:32.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.978" level="INFO">${RESULT} = [{'time': 0.022639028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9221999999998888e-05, 'source_diff': 2.9221999999998888e-05}, {'time': 0.022670708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:32.975" endtime="20201115 23:01:32.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.993" level="INFO">${ACCURACY} = {'diff': [2.9221999999998888e-05, 2.9208000000002787e-05, 2.9235999999998458e-05, 2.9207999999999318e-05, 2.920899999999879e-05, 2.920900000000226e-05, 2.9207999999999318e-05, 2.8694000000002717e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:32.979" endtime="20201115 23:01:32.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.997" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.996" endtime="20201115 23:01:32.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.000" level="INFO">VALUE: [2.9221999999998888e-05, 2.9208000000002787e-05, 2.9235999999998458e-05, 2.9207999999999318e-05, 2.920899999999879e-05, 2.920900000000226e-05, 2.9207999999999318e-05, 2.8694000000002717e-05, 2.9193999999999748e-05, 2.9222000000002357e-05, 2.8694000000002717e-05, 2.872299999999786e-05, 2.9292000000000207e-05, 2.9667000000000582e-05, 2.9235999999998458e-05, 2.8707999999998818e-05, 2.870899999999829e-05, 2.872300000000133e-05, 2.8721999999998388e-05, 2.9193999999999748e-05, 2.9221999999998888e-05, 2.8735999999997958e-05, 2.970899999999929e-05, 2.970899999999929e-05, 2.872299999999786e-05, 2.9180000000000178e-05, 2.9207999999999318e-05, 2.9207999999999318e-05, 2.9250000000001497e-05, 2.870899999999829e-05, 2.870899999999829e-05, 2.87370000000009e-05, 2.8750000000000997e-05, 2.8722000000001857e-05, 2.8708000000002287e-05, 2.9207999999999318e-05, 2.9249999999998028e-05, 2.9221999999998888e-05, 2.9167000000000082e-05, 2.9207999999999318e-05, 2.8693999999999248e-05, 2.9236000000001927e-05, 2.8721999999998388e-05, 2.9264000000001067e-05, 2.922299999999836e-05, 2.970900000000276e-05, 2.9180000000000178e-05, 2.9207999999999318e-05, 2.9180000000000178e-05, 2.8707999999998818e-05]</msg>
<status status="PASS" starttime="20201115 23:01:32.998" endtime="20201115 23:01:33.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.994" endtime="20201115 23:01:33.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.004" endtime="20201115 23:01:33.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.007" endtime="20201115 23:01:33.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.006" endtime="20201115 23:01:33.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.002" endtime="20201115 23:01:33.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.635" endtime="20201115 23:01:33.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.633" endtime="20201115 23:01:33.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.632" endtime="20201115 23:01:33.029"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.031" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.039" endtime="20201115 23:01:33.057"></status>
</kw>
<msg timestamp="20201115 23:01:33.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.038" endtime="20201115 23:01:33.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.058" endtime="20201115 23:01:33.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.061" endtime="20201115 23:01:33.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.035" endtime="20201115 23:01:33.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.033" endtime="20201115 23:01:33.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.070" endtime="20201115 23:01:33.355"></status>
</kw>
<msg timestamp="20201115 23:01:33.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.068" endtime="20201115 23:01:33.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.360" endtime="20201115 23:01:33.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.368" endtime="20201115 23:01:33.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.066" endtime="20201115 23:01:33.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.064" endtime="20201115 23:01:33.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.375" level="INFO">${RESULT} = [{'time': 0.021892375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0221999999999888e-05, 'source_diff': 3.0221999999999888e-05}, {'time': 0.02192525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:33.371" endtime="20201115 23:01:33.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.388" level="INFO">${ACCURACY} = {'diff': [3.0221999999999888e-05, 3.0208000000000318e-05, 2.9694000000000248e-05, 2.972299999999886e-05, 2.9694000000000248e-05, 2.9707999999999818e-05, 3.0125000000002372e-05, 3.0208000000000318e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:33.376" endtime="20201115 23:01:33.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.393" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.392" endtime="20201115 23:01:33.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.396" level="INFO">VALUE: [3.0221999999999888e-05, 3.0208000000000318e-05, 2.9694000000000248e-05, 2.972299999999886e-05, 2.9694000000000248e-05, 2.9707999999999818e-05, 3.0125000000002372e-05, 3.0208000000000318e-05, 2.972299999999886e-05, 2.9707999999999818e-05, 2.9707999999999818e-05, 3.070800000000082e-05, 2.9707999999999818e-05, 2.9721999999999388e-05, 2.9681000000000152e-05, 2.969499999999972e-05, 2.9721999999999388e-05, 2.9707999999999818e-05, 2.969499999999972e-05, 3.0235999999999458e-05, 3.0208000000000318e-05, 3.0208000000000318e-05, 2.970899999999929e-05, 2.969499999999972e-05, 2.9735999999998958e-05, 3.0221999999999888e-05, 2.9749999999998528e-05, 3.065200000000254e-05, 3.0221999999999888e-05, 3.0194000000000748e-05, 3.0221999999999888e-05, 3.0221999999999888e-05, 3.0221999999999888e-05, 2.9777999999997667e-05, 3.022299999999936e-05, 3.0221999999999888e-05, 3.023699999999893e-05, 3.0235999999999458e-05, 2.9707999999999818e-05, 2.9722000000002857e-05, 3.0221999999999888e-05, 2.9722000000002857e-05, 2.972299999999886e-05, 3.0250000000002497e-05, 2.9735999999998958e-05, 3.0221999999999888e-05, 3.0235999999999458e-05, 3.0264000000002067e-05, 2.9707999999999818e-05, 3.0153000000001512e-05]</msg>
<status status="PASS" starttime="20201115 23:01:33.394" endtime="20201115 23:01:33.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.389" endtime="20201115 23:01:33.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.399" endtime="20201115 23:01:33.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.402" endtime="20201115 23:01:33.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.401" endtime="20201115 23:01:33.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.397" endtime="20201115 23:01:33.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.032" endtime="20201115 23:01:33.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.030" endtime="20201115 23:01:33.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.029" endtime="20201115 23:01:33.423"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.426" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.434" endtime="20201115 23:01:33.452"></status>
</kw>
<msg timestamp="20201115 23:01:33.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.433" endtime="20201115 23:01:33.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.454" endtime="20201115 23:01:33.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.456" endtime="20201115 23:01:33.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.430" endtime="20201115 23:01:33.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.428" endtime="20201115 23:01:33.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.465" endtime="20201115 23:01:33.750"></status>
</kw>
<msg timestamp="20201115 23:01:33.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021860125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.464" endtime="20201115 23:01:33.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021860125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.755" endtime="20201115 23:01:33.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.763" endtime="20201115 23:01:33.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.461" endtime="20201115 23:01:33.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.459" endtime="20201115 23:01:33.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.770" level="INFO">${RESULT} = [{'time': 0.021891847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.172199999999792e-05, 'source_diff': 3.172199999999792e-05}, {'time': 0.021926583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:33.766" endtime="20201115 23:01:33.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.788" level="INFO">${ACCURACY} = {'diff': [3.172199999999792e-05, 3.125000000000003e-05, 3.120800000000132e-05, 3.120799999999785e-05, 3.120900000000079e-05, 3.122300000000036e-05, 3.072299999999986e-05, 3.169400000000225e-05, 3.1208...</msg>
<status status="PASS" starttime="20201115 23:01:33.775" endtime="20201115 23:01:33.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.793" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.792" endtime="20201115 23:01:33.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.795" level="INFO">VALUE: [3.172199999999792e-05, 3.125000000000003e-05, 3.120800000000132e-05, 3.120799999999785e-05, 3.120900000000079e-05, 3.122300000000036e-05, 3.072299999999986e-05, 3.169400000000225e-05, 3.120800000000132e-05, 3.119400000000175e-05, 3.123600000000046e-05, 3.120800000000132e-05, 3.119499999999775e-05, 3.122200000000089e-05, 3.122200000000089e-05, 3.1263000000000124e-05, 3.070800000000082e-05, 3.072200000000039e-05, 3.170799999999835e-05, 3.073599999999996e-05, 3.123599999999699e-05, 3.072200000000039e-05, 3.069500000000072e-05, 3.072200000000039e-05, 3.115300000000251e-05, 3.120800000000132e-05, 3.122199999999742e-05, 3.073599999999996e-05, 3.066599999999864e-05, 3.116599999999914e-05, 3.172199999999792e-05, 3.068100000000115e-05, 3.122200000000089e-05, 3.074999999999953e-05, 3.119500000000122e-05, 3.122200000000089e-05, 3.072200000000039e-05, 3.073599999999996e-05, 3.070800000000082e-05, 3.170800000000182e-05, 3.072299999999986e-05, 3.072200000000039e-05, 3.173600000000096e-05, 3.119400000000175e-05, 3.120900000000079e-05, 3.074999999999953e-05, 3.072200000000039e-05, 3.172199999999792e-05, 3.122200000000089e-05, 3.119499999999775e-05]</msg>
<status status="PASS" starttime="20201115 23:01:33.794" endtime="20201115 23:01:33.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.789" endtime="20201115 23:01:33.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.798" endtime="20201115 23:01:33.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.802" endtime="20201115 23:01:33.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.800" endtime="20201115 23:01:33.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.797" endtime="20201115 23:01:33.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.426" endtime="20201115 23:01:33.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.425" endtime="20201115 23:01:33.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.424" endtime="20201115 23:01:33.823"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.825" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.833" endtime="20201115 23:01:33.851"></status>
</kw>
<msg timestamp="20201115 23:01:33.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.832" endtime="20201115 23:01:33.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.853" endtime="20201115 23:01:33.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.855" endtime="20201115 23:01:33.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.829" endtime="20201115 23:01:33.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.827" endtime="20201115 23:01:33.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.864" endtime="20201115 23:01:34.149"></status>
</kw>
<msg timestamp="20201115 23:01:34.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022010611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.863" endtime="20201115 23:01:34.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022010611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.153" endtime="20201115 23:01:34.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.162" endtime="20201115 23:01:34.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.860" endtime="20201115 23:01:34.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.858" endtime="20201115 23:01:34.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.169" level="INFO">${RESULT} = [{'time': 0.022010611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2957999999998784e-05, 'source_diff': 5.2957999999998784e-05}, {'time': 0.022071167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:34.166" endtime="20201115 23:01:34.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.182" level="INFO">${ACCURACY} = {'diff': [5.2957999999998784e-05, 3.52779999999997e-05, 3.481999999999791e-05, 3.54589999999981e-05, 3.465300000000254e-05, 3.490199999999985e-05, 3.526400000000013e-05, 3.5554999999999615e-05, 3.4957...</msg>
<status status="PASS" starttime="20201115 23:01:34.170" endtime="20201115 23:01:34.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.187" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.186" endtime="20201115 23:01:34.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.189" level="INFO">VALUE: [5.2957999999998784e-05, 3.52779999999997e-05, 3.481999999999791e-05, 3.54589999999981e-05, 3.465300000000254e-05, 3.490199999999985e-05, 3.526400000000013e-05, 3.5554999999999615e-05, 3.495799999999813e-05, 3.5026999999999975e-05, 3.490199999999985e-05, 3.47779999999992e-05, 3.5290999999999795e-05, 3.5375000000000684e-05, 3.494400000000203e-05, 3.502799999999945e-05, 3.469399999999831e-05, 3.5361000000001114e-05, 3.470799999999788e-05, 3.545799999999863e-05, 3.552799999999995e-05, 3.5638999999997034e-05, 3.490300000000279e-05, 3.52779999999997e-05, 3.5445000000002e-05, 3.501399999999988e-05, 3.5582999999998755e-05, 3.522299999999742e-05, 3.479199999999877e-05, 3.455600000000156e-05, 3.552799999999995e-05, 3.472300000000039e-05, 3.5139000000000004e-05, 3.5139000000000004e-05, 3.4791000000002764e-05, 3.469399999999831e-05, 3.526400000000013e-05, 3.5277000000000225e-05, 3.51520000000001e-05, 3.52779999999997e-05, 3.5389000000000254e-05, 3.4804999999998865e-05, 3.551400000000038e-05, 3.5388999999996784e-05, 3.4805000000002334e-05, 3.543100000000243e-05, 3.5402999999999823e-05, 3.501399999999988e-05, 3.522199999999795e-05, 3.472200000000092e-05]</msg>
<status status="PASS" starttime="20201115 23:01:34.188" endtime="20201115 23:01:34.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.183" endtime="20201115 23:01:34.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.193" endtime="20201115 23:01:34.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.196" endtime="20201115 23:01:34.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.194" endtime="20201115 23:01:34.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.191" endtime="20201115 23:01:34.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.826" endtime="20201115 23:01:34.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.824" endtime="20201115 23:01:34.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.823" endtime="20201115 23:01:34.217"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.220" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.228" endtime="20201115 23:01:34.246"></status>
</kw>
<msg timestamp="20201115 23:01:34.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.226" endtime="20201115 23:01:34.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.248" endtime="20201115 23:01:34.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.250" endtime="20201115 23:01:34.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.224" endtime="20201115 23:01:34.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.222" endtime="20201115 23:01:34.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.260" endtime="20201115 23:01:34.546"></status>
</kw>
<msg timestamp="20201115 23:01:34.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022616708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.258" endtime="20201115 23:01:34.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022616708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.550" endtime="20201115 23:01:34.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.558" endtime="20201115 23:01:34.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.255" endtime="20201115 23:01:34.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.253" endtime="20201115 23:01:34.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.565" level="INFO">${RESULT} = [{'time': 0.022653375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6667000000000644e-05, 'source_diff': 3.6667000000000644e-05}, {'time': 0.022702389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:34.562" endtime="20201115 23:01:34.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.580" level="INFO">${ACCURACY} = {'diff': [3.6667000000000644e-05, 3.59719999999987e-05, 3.575000000000106e-05, 3.598600000000174e-05, 3.622199999999895e-05, 3.623700000000146e-05, 3.652800000000095e-05, 3.5625000000000934e-05, 3.652...</msg>
<status status="PASS" starttime="20201115 23:01:34.566" endtime="20201115 23:01:34.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.584" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.583" endtime="20201115 23:01:34.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.587" level="INFO">VALUE: [3.6667000000000644e-05, 3.59719999999987e-05, 3.575000000000106e-05, 3.598600000000174e-05, 3.622199999999895e-05, 3.623700000000146e-05, 3.652800000000095e-05, 3.5625000000000934e-05, 3.652800000000095e-05, 3.6138999999997534e-05, 3.5888999999997284e-05, 3.6416999999996924e-05, 3.6403000000000824e-05, 3.65979999999988e-05, 3.631999999999941e-05, 3.5625000000000934e-05, 3.5888999999997284e-05, 3.6332999999999505e-05, 3.6139000000001004e-05, 3.640200000000135e-05, 3.5804999999999865e-05, 3.648599999999877e-05, 3.598599999999827e-05, 3.5832999999999005e-05, 3.645799999999963e-05, 3.580600000000281e-05, 3.6417000000000394e-05, 3.631999999999941e-05, 3.6596999999999325e-05, 3.5875000000001184e-05, 3.651400000000138e-05, 3.654200000000052e-05, 3.644399999999659e-05, 3.620799999999938e-05, 3.584799999999805e-05, 3.57780000000002e-05, 3.65979999999988e-05, 3.5916999999999893e-05, 3.575000000000106e-05, 3.6417000000000394e-05, 3.622299999999842e-05, 3.5888999999997284e-05, 3.6055000000000115e-05, 3.665199999999813e-05, 3.6082999999999255e-05, 3.594399999999956e-05, 3.5847000000002044e-05, 3.6318999999999935e-05, 3.6582999999999755e-05, 3.6332999999999505e-05]</msg>
<status status="PASS" starttime="20201115 23:01:34.586" endtime="20201115 23:01:34.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.581" endtime="20201115 23:01:34.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.590" endtime="20201115 23:01:34.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.593" endtime="20201115 23:01:34.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.592" endtime="20201115 23:01:34.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.588" endtime="20201115 23:01:34.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.220" endtime="20201115 23:01:34.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.218" endtime="20201115 23:01:34.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.217" endtime="20201115 23:01:34.615"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.617" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.625" endtime="20201115 23:01:34.643"></status>
</kw>
<msg timestamp="20201115 23:01:34.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.624" endtime="20201115 23:01:34.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.644" endtime="20201115 23:01:34.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.647" endtime="20201115 23:01:34.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.621" endtime="20201115 23:01:34.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.619" endtime="20201115 23:01:34.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.656" endtime="20201115 23:01:34.941"></status>
</kw>
<msg timestamp="20201115 23:01:34.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.655" endtime="20201115 23:01:34.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.945" endtime="20201115 23:01:34.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.953" endtime="20201115 23:01:34.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.652" endtime="20201115 23:01:34.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.651" endtime="20201115 23:01:34.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.960" level="INFO">${RESULT} = [{'time': 0.021863167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.674999999999859e-05, 'source_diff': 3.674999999999859e-05}, {'time': 0.021915139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:34.957" endtime="20201115 23:01:34.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.973" level="INFO">${ACCURACY} = {'diff': [3.674999999999859e-05, 3.7403000000001824e-05, 3.7652999999998604e-05, 3.669499999999978e-05, 3.7153000000001574e-05, 3.6833000000000005e-05, 3.681999999999991e-05, 3.755600000000109e-05, 3....</msg>
<status status="PASS" starttime="20201115 23:01:34.961" endtime="20201115 23:01:34.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.978" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.977" endtime="20201115 23:01:34.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.980" level="INFO">VALUE: [3.674999999999859e-05, 3.7403000000001824e-05, 3.7652999999998604e-05, 3.669499999999978e-05, 3.7153000000001574e-05, 3.6833000000000005e-05, 3.681999999999991e-05, 3.755600000000109e-05, 3.7195000000000283e-05, 3.752799999999848e-05, 3.690200000000185e-05, 3.749999999999934e-05, 3.720800000000038e-05, 3.6833000000000005e-05, 3.6846999999999575e-05, 3.7333000000000505e-05, 3.719400000000081e-05, 3.727799999999823e-05, 3.749999999999934e-05, 3.6874999999998714e-05, 3.7374999999999214e-05, 3.6568999999996715e-05, 3.7403000000001824e-05, 3.719400000000081e-05, 3.755600000000109e-05, 3.723599999999952e-05, 3.6833000000000005e-05, 3.7667000000001644e-05, 3.7416999999997924e-05, 3.698599999999927e-05, 3.7597000000000325e-05, 3.722299999999942e-05, 3.676400000000163e-05, 3.697299999999917e-05, 3.7055000000001115e-05, 3.747299999999967e-05, 3.74720000000002e-05, 3.722199999999995e-05, 3.6819000000000435e-05, 3.672200000000292e-05, 3.6791000000001295e-05, 3.675000000000206e-05, 3.7096999999999825e-05, 3.730600000000084e-05, 3.669400000000031e-05, 3.6833000000000005e-05, 3.752799999999848e-05, 3.67919999999973e-05, 3.725000000000256e-05, 3.7180999999997244e-05]</msg>
<status status="PASS" starttime="20201115 23:01:34.979" endtime="20201115 23:01:34.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.974" endtime="20201115 23:01:34.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.984" endtime="20201115 23:01:34.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.987" endtime="20201115 23:01:35.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.986" endtime="20201115 23:01:35.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.982" endtime="20201115 23:01:35.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.618" endtime="20201115 23:01:35.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.616" endtime="20201115 23:01:35.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.615" endtime="20201115 23:01:35.008"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.011" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.019" endtime="20201115 23:01:35.039"></status>
</kw>
<msg timestamp="20201115 23:01:35.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.018" endtime="20201115 23:01:35.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.041" endtime="20201115 23:01:35.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.043" endtime="20201115 23:01:35.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.015" endtime="20201115 23:01:35.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.013" endtime="20201115 23:01:35.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.052" endtime="20201115 23:01:35.336"></status>
</kw>
<msg timestamp="20201115 23:01:35.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022451847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022490347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.051" endtime="20201115 23:01:35.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022451847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022490347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.341" endtime="20201115 23:01:35.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.349" endtime="20201115 23:01:35.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.048" endtime="20201115 23:01:35.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.047" endtime="20201115 23:01:35.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.356" level="INFO">${RESULT} = [{'time': 0.022490347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.850000000000034e-05, 'source_diff': 3.850000000000034e-05}, {'time': 0.022540306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:35.352" endtime="20201115 23:01:35.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.369" level="INFO">${ACCURACY} = {'diff': [3.850000000000034e-05, 3.773699999999949e-05, 3.772299999999992e-05, 3.8180999999998244e-05, 3.7888999999999284e-05, 3.81520000000031e-05, 3.807000000000116e-05, 3.8083000000001255e-05, 3.86...</msg>
<status status="PASS" starttime="20201115 23:01:35.357" endtime="20201115 23:01:35.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.374" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.373" endtime="20201115 23:01:35.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.376" level="INFO">VALUE: [3.850000000000034e-05, 3.773699999999949e-05, 3.772299999999992e-05, 3.8180999999998244e-05, 3.7888999999999284e-05, 3.81520000000031e-05, 3.807000000000116e-05, 3.8083000000001255e-05, 3.865200000000013e-05, 3.7833000000001005e-05, 3.7902999999998854e-05, 3.774999999999959e-05, 3.791600000000242e-05, 3.8388999999999784e-05, 3.826399999999966e-05, 3.8166999999998674e-05, 3.802799999999898e-05, 3.79720000000007e-05, 3.794400000000156e-05, 3.823599999999705e-05, 3.8652999999999604e-05, 3.820800000000138e-05, 3.8639000000000034e-05, 3.8152999999999104e-05, 3.7847000000000575e-05, 3.7695000000000783e-05, 3.852799999999948e-05, 3.8222999999996954e-05, 3.8459000000001103e-05, 3.852799999999948e-05, 3.8040999999999076e-05, 3.8445000000001534e-05, 3.852799999999948e-05, 3.86659999999997e-05, 3.7762999999999686e-05, 3.7791000000002295e-05, 3.7888999999999284e-05, 3.8625000000000465e-05, 3.823600000000052e-05, 3.8582999999998285e-05, 3.799999999999984e-05, 3.8347000000001075e-05, 3.7888999999999284e-05, 3.777799999999873e-05, 3.829200000000227e-05, 3.797199999999723e-05, 3.8583000000001755e-05, 3.806999999999769e-05, 3.832000000000141e-05, 3.8639000000000034e-05]</msg>
<status status="PASS" starttime="20201115 23:01:35.375" endtime="20201115 23:01:35.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.370" endtime="20201115 23:01:35.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.379" endtime="20201115 23:01:35.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.383" endtime="20201115 23:01:35.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.381" endtime="20201115 23:01:35.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.378" endtime="20201115 23:01:35.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.011" endtime="20201115 23:01:35.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.009" endtime="20201115 23:01:35.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.009" endtime="20201115 23:01:35.404"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.406" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.415" endtime="20201115 23:01:35.432"></status>
</kw>
<msg timestamp="20201115 23:01:35.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.413" endtime="20201115 23:01:35.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.434" endtime="20201115 23:01:35.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.436" endtime="20201115 23:01:35.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.411" endtime="20201115 23:01:35.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.408" endtime="20201115 23:01:35.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.445" endtime="20201115 23:01:35.732"></status>
</kw>
<msg timestamp="20201115 23:01:35.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022327208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.444" endtime="20201115 23:01:35.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022327208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.736" endtime="20201115 23:01:35.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.744" endtime="20201115 23:01:35.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.441" endtime="20201115 23:01:35.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.439" endtime="20201115 23:01:35.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.751" level="INFO">${RESULT} = [{'time': 0.022327208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9361000000001645e-05, 'source_diff': 3.9361000000001645e-05}, {'time': 0.022378208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:35.748" endtime="20201115 23:01:35.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.764" level="INFO">${ACCURACY} = {'diff': [3.9361000000001645e-05, 3.926400000000066e-05, 3.9332999999999035e-05, 3.898600000000127e-05, 3.876400000000016e-05, 3.94720000000022e-05, 3.952800000000048e-05, 3.9139000000000534e-05, 3.87...</msg>
<status status="PASS" starttime="20201115 23:01:35.752" endtime="20201115 23:01:35.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.769" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.768" endtime="20201115 23:01:35.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.771" level="INFO">VALUE: [3.9361000000001645e-05, 3.926400000000066e-05, 3.9332999999999035e-05, 3.898600000000127e-05, 3.876400000000016e-05, 3.94720000000022e-05, 3.952800000000048e-05, 3.9139000000000534e-05, 3.877799999999973e-05, 3.855599999999862e-05, 3.870800000000188e-05, 3.9596999999998855e-05, 3.9139000000000534e-05, 3.922199999999848e-05, 3.90980000000013e-05, 3.877799999999973e-05, 3.92919999999998e-05, 3.917999999999977e-05, 3.8930999999998994e-05, 3.948600000000177e-05, 3.9318999999999465e-05, 3.9527000000001006e-05, 3.94720000000022e-05, 3.944399999999959e-05, 3.873600000000102e-05, 3.94720000000022e-05, 3.870799999999841e-05, 3.8818999999998965e-05, 3.876400000000016e-05, 3.948600000000177e-05, 3.9596999999998855e-05, 3.9346999999998605e-05, 3.904199999999955e-05, 3.927800000000023e-05, 3.9125000000000965e-05, 3.8889000000000284e-05, 3.8902999999999854e-05, 3.884799999999758e-05, 3.8708999999997884e-05, 3.927799999999676e-05, 3.9389000000000784e-05, 3.8695000000001784e-05, 3.9445000000002534e-05, 3.9139000000000534e-05, 3.909799999999783e-05, 3.872200000000145e-05, 3.9082999999998785e-05, 3.9346999999998605e-05, 3.900000000000084e-05, 3.89720000000017e-05]</msg>
<status status="PASS" starttime="20201115 23:01:35.770" endtime="20201115 23:01:35.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.765" endtime="20201115 23:01:35.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.775" endtime="20201115 23:01:35.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.778" endtime="20201115 23:01:35.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.777" endtime="20201115 23:01:35.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.773" endtime="20201115 23:01:35.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.407" endtime="20201115 23:01:35.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.405" endtime="20201115 23:01:35.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.405" endtime="20201115 23:01:35.800"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.802" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.810" endtime="20201115 23:01:35.829"></status>
</kw>
<msg timestamp="20201115 23:01:35.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.809" endtime="20201115 23:01:35.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.830" endtime="20201115 23:01:35.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.833" endtime="20201115 23:01:35.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.806" endtime="20201115 23:01:35.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.804" endtime="20201115 23:01:35.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.842" endtime="20201115 23:01:36.128"></status>
</kw>
<msg timestamp="20201115 23:01:36.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022797153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.840" endtime="20201115 23:01:36.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022797153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.132" endtime="20201115 23:01:36.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.140" endtime="20201115 23:01:36.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.837" endtime="20201115 23:01:36.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.836" endtime="20201115 23:01:36.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.147" level="INFO">${RESULT} = [{'time': 0.022837056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9903000000000854e-05, 'source_diff': 3.9903000000000854e-05}, {'time': 0.022892056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:36.144" endtime="20201115 23:01:36.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.162" level="INFO">${ACCURACY} = {'diff': [3.9903000000000854e-05, 4.0403000000001354e-05, 4.0333000000000035e-05, 4.0291000000001326e-05, 4.0055000000000646e-05, 4.020799999999991e-05, 4.040199999999841e-05, 3.9568999999999716e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:36.148" endtime="20201115 23:01:36.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.167" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.166" endtime="20201115 23:01:36.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.170" level="INFO">VALUE: [3.9903000000000854e-05, 4.0403000000001354e-05, 4.0333000000000035e-05, 4.0291000000001326e-05, 4.0055000000000646e-05, 4.020799999999991e-05, 4.040199999999841e-05, 3.9568999999999716e-05, 4.045800000000016e-05, 4.002800000000098e-05, 4.045800000000016e-05, 4.044400000000059e-05, 4.026400000000166e-05, 4.027800000000123e-05, 4.023599999999905e-05, 4.002799999999751e-05, 3.9889000000001285e-05, 4.051400000000191e-05, 4.0167000000000674e-05, 4.045800000000016e-05, 4.027800000000123e-05, 4.031999999999994e-05, 4.0181000000000244e-05, 3.9708999999998884e-05, 3.9694999999999314e-05, 4.055600000000062e-05, 4.026399999999819e-05, 3.9902999999997385e-05, 4.0527000000002006e-05, 4.018000000000077e-05, 4.0012999999998466e-05, 3.9861000000002145e-05, 4.041600000000145e-05, 3.9804999999996926e-05, 4.020799999999991e-05, 3.9832999999999535e-05, 4.0360999999999175e-05, 4.002799999999751e-05, 4.0346999999999605e-05, 3.9860999999998675e-05, 4.024999999999862e-05, 4.030600000000037e-05, 4.0125000000001965e-05, 3.997199999999923e-05, 4.0013000000001936e-05, 3.99720000000027e-05, 3.9917000000000424e-05, 4.072199999999998e-05, 4.0110999999998925e-05, 4.01660000000012e-05]</msg>
<status status="PASS" starttime="20201115 23:01:36.168" endtime="20201115 23:01:36.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.163" endtime="20201115 23:01:36.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.173" endtime="20201115 23:01:36.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.176" endtime="20201115 23:01:36.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.175" endtime="20201115 23:01:36.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.171" endtime="20201115 23:01:36.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.803" endtime="20201115 23:01:36.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.801" endtime="20201115 23:01:36.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.800" endtime="20201115 23:01:36.197"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.200" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.208" endtime="20201115 23:01:36.225"></status>
</kw>
<msg timestamp="20201115 23:01:36.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.206" endtime="20201115 23:01:36.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.227" endtime="20201115 23:01:36.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.229" endtime="20201115 23:01:36.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.204" endtime="20201115 23:01:36.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.202" endtime="20201115 23:01:36.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.238" endtime="20201115 23:01:36.525"></status>
</kw>
<msg timestamp="20201115 23:01:36.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021792167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.237" endtime="20201115 23:01:36.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021792167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.529" endtime="20201115 23:01:36.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.537" endtime="20201115 23:01:36.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.234" endtime="20201115 23:01:36.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.232" endtime="20201115 23:01:36.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.544" level="INFO">${RESULT} = [{'time': 0.021833736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1568999999998246e-05, 'source_diff': 4.1568999999998246e-05}, {'time': 0.021887722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:36.541" endtime="20201115 23:01:36.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.558" level="INFO">${ACCURACY} = {'diff': [4.1568999999998246e-05, 4.070799999999694e-05, 4.0847000000000105e-05, 4.099999999999937e-05, 4.1124999999999495e-05, 4.155600000000162e-05, 4.073599999999955e-05, 4.0945000000000564e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:01:36.546" endtime="20201115 23:01:36.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.563" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.562" endtime="20201115 23:01:36.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.565" level="INFO">VALUE: [4.1568999999998246e-05, 4.070799999999694e-05, 4.0847000000000105e-05, 4.099999999999937e-05, 4.1124999999999495e-05, 4.155600000000162e-05, 4.073599999999955e-05, 4.0945000000000564e-05, 4.126399999999919e-05, 4.1138999999999065e-05, 4.1403000000002355e-05, 4.1402999999998885e-05, 4.127799999999876e-05, 4.1389000000002785e-05, 4.0874999999999245e-05, 4.092999999999805e-05, 4.1374999999999745e-05, 4.1512999999999967e-05, 4.099999999999937e-05, 4.1097000000000355e-05, 4.1111000000003395e-05, 4.100000000000284e-05, 4.1333000000001036e-05, 4.1347000000000605e-05, 4.1138999999999065e-05, 4.158400000000076e-05, 4.07920000000013e-05, 4.080600000000087e-05, 4.122199999999701e-05, 4.070800000000041e-05, 4.080600000000087e-05, 4.120800000000091e-05, 4.154199999999858e-05, 4.1125000000002965e-05, 4.151399999999944e-05, 4.07920000000013e-05, 4.0945000000000564e-05, 4.1374999999999745e-05, 4.1417000000001924e-05, 4.158400000000076e-05, 4.102799999999851e-05, 4.066599999999823e-05, 4.095799999999719e-05, 4.1417000000001924e-05, 4.1583000000001286e-05, 4.1667000000002175e-05, 4.0833000000000536e-05, 4.1652999999999135e-05, 4.149999999999987e-05, 4.102800000000198e-05]</msg>
<status status="PASS" starttime="20201115 23:01:36.564" endtime="20201115 23:01:36.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.559" endtime="20201115 23:01:36.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.568" endtime="20201115 23:01:36.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.572" endtime="20201115 23:01:36.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.570" endtime="20201115 23:01:36.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.567" endtime="20201115 23:01:36.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.200" endtime="20201115 23:01:36.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.198" endtime="20201115 23:01:36.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.198" endtime="20201115 23:01:36.593"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.595" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.604" endtime="20201115 23:01:36.622"></status>
</kw>
<msg timestamp="20201115 23:01:36.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.602" endtime="20201115 23:01:36.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.623" endtime="20201115 23:01:36.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.626" endtime="20201115 23:01:36.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.600" endtime="20201115 23:01:36.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.597" endtime="20201115 23:01:36.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.635" endtime="20201115 23:01:36.919"></status>
</kw>
<msg timestamp="20201115 23:01:36.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.633" endtime="20201115 23:01:36.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.923" endtime="20201115 23:01:36.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.932" endtime="20201115 23:01:36.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.631" endtime="20201115 23:01:36.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.629" endtime="20201115 23:01:36.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.939" level="INFO">${RESULT} = [{'time': 0.022050542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.234800000000108e-05, 'source_diff': 4.234800000000108e-05}, {'time': 0.022104542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:36.935" endtime="20201115 23:01:36.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.952" level="INFO">${ACCURACY} = {'diff': [4.234800000000108e-05, 4.1709000000000884e-05, 4.258400000000176e-05, 4.190199999999991e-05, 4.226300000000072e-05, 4.219399999999887e-05, 4.1776999999999787e-05, 4.216599999999973e-05, 4.26...</msg>
<status status="PASS" starttime="20201115 23:01:36.940" endtime="20201115 23:01:36.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.957" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.955" endtime="20201115 23:01:36.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.959" level="INFO">VALUE: [4.234800000000108e-05, 4.1709000000000884e-05, 4.258400000000176e-05, 4.190199999999991e-05, 4.226300000000072e-05, 4.219399999999887e-05, 4.1776999999999787e-05, 4.216599999999973e-05, 4.269399999999937e-05, 4.265199999999719e-05, 4.233400000000151e-05, 4.21660000000032e-05, 4.1833000000001536e-05, 4.2569000000002716e-05, 4.2319000000002466e-05, 4.223599999999758e-05, 4.170799999999794e-05, 4.2333000000002036e-05, 4.2417000000002925e-05, 4.194399999999862e-05, 4.1945000000001564e-05, 4.225000000000062e-05, 4.2653000000000135e-05, 4.197200000000123e-05, 4.1916999999998955e-05, 4.2152999999999635e-05, 4.2472999999997735e-05, 4.242999999999955e-05, 4.2444999999998595e-05, 4.2125000000000495e-05, 4.182000000000144e-05, 4.2111000000000925e-05, 4.2389000000000315e-05, 4.1818999999998496e-05, 4.176399999999969e-05, 4.2110999999997456e-05, 4.1541000000002576e-05, 4.21799999999993e-05, 4.2653000000000135e-05, 4.2666999999999705e-05, 4.250000000000087e-05, 4.245799999999869e-05, 4.255599999999915e-05, 4.173600000000055e-05, 4.2582999999998816e-05, 4.1847000000001106e-05, 4.252800000000001e-05, 4.2319000000002466e-05, 4.173600000000055e-05, 4.242999999999955e-05]</msg>
<status status="PASS" starttime="20201115 23:01:36.958" endtime="20201115 23:01:36.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.953" endtime="20201115 23:01:36.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.962" endtime="20201115 23:01:36.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.966" endtime="20201115 23:01:36.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.964" endtime="20201115 23:01:36.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.961" endtime="20201115 23:01:36.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.596" endtime="20201115 23:01:36.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.594" endtime="20201115 23:01:36.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.593" endtime="20201115 23:01:36.987"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.989" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.997" endtime="20201115 23:01:37.016"></status>
</kw>
<msg timestamp="20201115 23:01:37.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.996" endtime="20201115 23:01:37.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.017" endtime="20201115 23:01:37.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.020" endtime="20201115 23:01:37.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.993" endtime="20201115 23:01:37.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.991" endtime="20201115 23:01:37.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.029" endtime="20201115 23:01:37.314"></status>
</kw>
<msg timestamp="20201115 23:01:37.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:37.027" endtime="20201115 23:01:37.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:37.318" endtime="20201115 23:01:37.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.327" endtime="20201115 23:01:37.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.025" endtime="20201115 23:01:37.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.023" endtime="20201115 23:01:37.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.334" level="INFO">${RESULT} = [{'time': 0.0219005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.352800000000101e-05, 'source_diff': 4.352800000000101e-05}, {'time': 0.021956528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:37.331" endtime="20201115 23:01:37.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.348" level="INFO">${ACCURACY} = {'diff': [4.352800000000101e-05, 4.279199999999983e-05, 4.277800000000026e-05, 4.2958999999998665e-05, 4.3167000000000205e-05, 4.3639000000001565e-05, 4.282000000000244e-05, 4.308400000000226e-05, 4.2...</msg>
<status status="PASS" starttime="20201115 23:01:37.335" endtime="20201115 23:01:37.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.353" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.352" endtime="20201115 23:01:37.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.355" level="INFO">VALUE: [4.352800000000101e-05, 4.279199999999983e-05, 4.277800000000026e-05, 4.2958999999998665e-05, 4.3167000000000205e-05, 4.3639000000001565e-05, 4.282000000000244e-05, 4.308400000000226e-05, 4.2694999999998845e-05, 4.3346999999999136e-05, 4.2791000000000357e-05, 4.326400000000119e-05, 4.288799999999787e-05, 4.3569000000000246e-05, 4.2916999999999955e-05, 4.319399999999987e-05, 4.3332999999999566e-05, 4.3611000000002426e-05, 4.2804999999999926e-05, 4.325000000000162e-05, 4.302800000000051e-05, 4.3153000000000635e-05, 4.304200000000008e-05, 4.3138999999997596e-05, 4.2709000000001884e-05, 4.3473000000002204e-05, 4.355600000000015e-05, 4.3111000000001926e-05, 4.332000000000294e-05, 4.3222999999998485e-05, 4.2722999999997985e-05, 4.283399999999854e-05, 4.3653000000001135e-05, 4.3346999999999136e-05, 4.3305000000000426e-05, 4.3096999999998886e-05, 4.3318999999999996e-05, 4.3068999999999746e-05, 4.3582999999999816e-05, 4.351400000000144e-05, 4.319400000000334e-05, 4.298599999999833e-05, 4.3125000000001495e-05, 4.272199999999851e-05, 4.3167000000000205e-05, 4.3068999999999746e-05, 4.3125000000001495e-05, 4.3347000000002606e-05, 4.323600000000205e-05, 4.332000000000294e-05]</msg>
<status status="PASS" starttime="20201115 23:01:37.354" endtime="20201115 23:01:37.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.349" endtime="20201115 23:01:37.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.358" endtime="20201115 23:01:37.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.362" endtime="20201115 23:01:37.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.360" endtime="20201115 23:01:37.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.356" endtime="20201115 23:01:37.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.990" endtime="20201115 23:01:37.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.988" endtime="20201115 23:01:37.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.987" endtime="20201115 23:01:37.383"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.385" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.393" endtime="20201115 23:01:37.412"></status>
</kw>
<msg timestamp="20201115 23:01:37.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.392" endtime="20201115 23:01:37.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.414" endtime="20201115 23:01:37.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.417" endtime="20201115 23:01:37.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.389" endtime="20201115 23:01:37.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.387" endtime="20201115 23:01:37.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.426" endtime="20201115 23:01:37.711"></status>
</kw>
<msg timestamp="20201115 23:01:37.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022876292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.424" endtime="20201115 23:01:37.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022876292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.715" endtime="20201115 23:01:37.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.724" endtime="20201115 23:01:37.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.422" endtime="20201115 23:01:37.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.420" endtime="20201115 23:01:37.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.730" level="INFO">${RESULT} = [{'time': 0.022876292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4138999999998596e-05, 'source_diff': 4.4138999999998596e-05}, {'time': 0.022934306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:37.727" endtime="20201115 23:01:37.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.745" level="INFO">${ACCURACY} = {'diff': [4.4138999999998596e-05, 4.454200000000158e-05, 4.375000000000212e-05, 4.4583000000000816e-05, 4.363799999999862e-05, 4.376300000000222e-05, 4.4374999999999276e-05, 4.4624999999999526e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:01:37.731" endtime="20201115 23:01:37.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.749" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.748" endtime="20201115 23:01:37.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.752" level="INFO">VALUE: [4.4138999999998596e-05, 4.454200000000158e-05, 4.375000000000212e-05, 4.4583000000000816e-05, 4.363799999999862e-05, 4.376300000000222e-05, 4.4374999999999276e-05, 4.4624999999999526e-05, 4.402799999999804e-05, 4.404200000000108e-05, 4.4360999999999706e-05, 4.4583000000000816e-05, 4.4388999999998846e-05, 4.455599999999768e-05, 4.4431000000001025e-05, 4.4083000000000316e-05, 4.4195000000000345e-05, 4.3958999999999665e-05, 4.4431000000001025e-05, 4.3958999999999665e-05, 4.4638999999999096e-05, 4.381999999999997e-05, 4.4653000000002135e-05, 4.3888999999998346e-05, 4.452799999999854e-05, 4.422200000000001e-05, 4.45129999999995e-05, 4.4388999999998846e-05, 4.4153000000001635e-05, 4.394399999999715e-05, 4.370799999999994e-05, 4.395800000000019e-05, 4.420800000000044e-05, 4.4083000000000316e-05, 4.4083000000000316e-05, 4.4096999999999886e-05, 4.422200000000001e-05, 4.4653000000002135e-05, 4.43329999999971e-05, 4.372200000000298e-05, 4.3861000000002676e-05, 4.39999999999989e-05, 4.4624999999999526e-05, 4.3972999999999235e-05, 4.452799999999854e-05, 4.402800000000151e-05, 4.433400000000004e-05, 4.419400000000087e-05, 4.407000000000022e-05, 4.426399999999872e-05]</msg>
<status status="PASS" starttime="20201115 23:01:37.751" endtime="20201115 23:01:37.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.746" endtime="20201115 23:01:37.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.755" endtime="20201115 23:01:37.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.758" endtime="20201115 23:01:37.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.757" endtime="20201115 23:01:37.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.753" endtime="20201115 23:01:37.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.386" endtime="20201115 23:01:37.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.384" endtime="20201115 23:01:37.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.383" endtime="20201115 23:01:37.779"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.782" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.790" endtime="20201115 23:01:37.810"></status>
</kw>
<msg timestamp="20201115 23:01:37.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.789" endtime="20201115 23:01:37.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.812" endtime="20201115 23:01:37.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.814" endtime="20201115 23:01:37.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.786" endtime="20201115 23:01:37.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.784" endtime="20201115 23:01:37.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.823" endtime="20201115 23:01:38.109"></status>
</kw>
<msg timestamp="20201115 23:01:38.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.822" endtime="20201115 23:01:38.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.113" endtime="20201115 23:01:38.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.122" endtime="20201115 23:01:38.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.819" endtime="20201115 23:01:38.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.817" endtime="20201115 23:01:38.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.128" level="INFO">${RESULT} = [{'time': 0.022336583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.520800000000144e-05, 'source_diff': 4.520800000000144e-05}, {'time': 0.022395542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:38.125" endtime="20201115 23:01:38.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.142" level="INFO">${ACCURACY} = {'diff': [4.520800000000144e-05, 4.49999999999999e-05, 4.525000000000015e-05, 4.527799999999929e-05, 4.527799999999929e-05, 4.5319999999998e-05, 4.479100000000236e-05, 4.566599999999976e-05, 4.4694000...</msg>
<status status="PASS" starttime="20201115 23:01:38.130" endtime="20201115 23:01:38.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.146" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.145" endtime="20201115 23:01:38.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.149" level="INFO">VALUE: [4.520800000000144e-05, 4.49999999999999e-05, 4.525000000000015e-05, 4.527799999999929e-05, 4.527799999999929e-05, 4.5319999999998e-05, 4.479100000000236e-05, 4.566599999999976e-05, 4.469400000000137e-05, 4.488799999999987e-05, 4.522199999999754e-05, 4.4916999999998486e-05, 4.5388999999999846e-05, 4.48329999999976e-05, 4.5388999999999846e-05, 4.483399999999707e-05, 4.520800000000144e-05, 4.5625000000000526e-05, 4.5375000000000276e-05, 4.572200000000151e-05, 4.55000000000004e-05, 4.5361000000000706e-05, 4.482000000000097e-05, 4.5597000000001386e-05, 4.5195000000001345e-05, 4.558400000000129e-05, 4.554099999999964e-05, 4.4847000000000636e-05, 4.467999999999833e-05, 4.520799999999797e-05, 4.480499999999846e-05, 4.5097000000000886e-05, 4.551399999999997e-05, 4.5347000000001136e-05, 4.55000000000004e-05, 4.559799999999739e-05, 4.547199999999779e-05, 4.504199999999861e-05, 4.48329999999976e-05, 4.527799999999929e-05, 4.4888999999999346e-05, 4.5388999999999846e-05, 4.458400000000029e-05, 4.5388999999999846e-05, 4.5347000000001136e-05, 4.4847000000000636e-05, 4.501399999999947e-05, 4.517999999999883e-05, 4.527800000000276e-05, 4.5138999999999596e-05]</msg>
<status status="PASS" starttime="20201115 23:01:38.147" endtime="20201115 23:01:38.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.143" endtime="20201115 23:01:38.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.152" endtime="20201115 23:01:38.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.155" endtime="20201115 23:01:38.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.154" endtime="20201115 23:01:38.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.150" endtime="20201115 23:01:38.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.782" endtime="20201115 23:01:38.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.781" endtime="20201115 23:01:38.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.780" endtime="20201115 23:01:38.177"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.179" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.188" endtime="20201115 23:01:38.207"></status>
</kw>
<msg timestamp="20201115 23:01:38.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.186" endtime="20201115 23:01:38.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.208" endtime="20201115 23:01:38.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.211" endtime="20201115 23:01:38.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.184" endtime="20201115 23:01:38.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.181" endtime="20201115 23:01:38.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.220" endtime="20201115 23:01:38.506"></status>
</kw>
<msg timestamp="20201115 23:01:38.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021890236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.218" endtime="20201115 23:01:38.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021890236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.510" endtime="20201115 23:01:38.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.519" endtime="20201115 23:01:38.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.216" endtime="20201115 23:01:38.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.214" endtime="20201115 23:01:38.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.525" level="INFO">${RESULT} = [{'time': 0.021890236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.629199999999986e-05, 'source_diff': 4.629199999999986e-05}, {'time': 0.021951222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:38.522" endtime="20201115 23:01:38.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.539" level="INFO">${ACCURACY} = {'diff': [4.629199999999986e-05, 4.584699999999817e-05, 4.6375000000001276e-05, 4.595799999999872e-05, 4.6403000000000416e-05, 4.6639000000001096e-05, 4.620799999999897e-05, 4.586099999999774e-05, 4.6...</msg>
<status status="PASS" starttime="20201115 23:01:38.526" endtime="20201115 23:01:38.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.544" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.543" endtime="20201115 23:01:38.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.546" level="INFO">VALUE: [4.629199999999986e-05, 4.584699999999817e-05, 4.6375000000001276e-05, 4.595799999999872e-05, 4.6403000000000416e-05, 4.6639000000001096e-05, 4.620799999999897e-05, 4.586099999999774e-05, 4.6597000000002387e-05, 4.6403000000000416e-05, 4.6153000000000166e-05, 4.6639000000001096e-05, 4.634699999999867e-05, 4.6625000000001526e-05, 4.575000000000065e-05, 4.5945000000002095e-05, 4.6625000000001526e-05, 4.575000000000065e-05, 4.6445000000002595e-05, 4.627700000000082e-05, 4.594399999999915e-05, 4.570799999999847e-05, 4.626400000000072e-05, 4.649999999999793e-05, 4.602800000000004e-05, 4.644399999999965e-05, 4.594400000000262e-05, 4.5944999999998626e-05, 4.645799999999922e-05, 4.602800000000004e-05, 4.6347000000002136e-05, 4.6139000000000596e-05, 4.584699999999817e-05, 4.597199999999829e-05, 4.6653000000000666e-05, 4.631899999999953e-05, 4.5973000000001235e-05, 4.575000000000065e-05, 4.659799999999839e-05, 4.6125000000001026e-05, 4.663899999999763e-05, 4.659699999999892e-05, 4.609699999999842e-05, 4.60000000000009e-05, 4.606999999999875e-05, 4.598600000000133e-05, 4.602800000000004e-05, 4.597199999999829e-05, 4.649999999999793e-05, 4.601400000000047e-05]</msg>
<status status="PASS" starttime="20201115 23:01:38.545" endtime="20201115 23:01:38.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.540" endtime="20201115 23:01:38.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.550" endtime="20201115 23:01:38.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.554" endtime="20201115 23:01:38.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.552" endtime="20201115 23:01:38.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.548" endtime="20201115 23:01:38.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.180" endtime="20201115 23:01:38.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.178" endtime="20201115 23:01:38.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.177" endtime="20201115 23:01:38.575"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.577" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.585" endtime="20201115 23:01:38.603"></status>
</kw>
<msg timestamp="20201115 23:01:38.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.584" endtime="20201115 23:01:38.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.605" endtime="20201115 23:01:38.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.607" endtime="20201115 23:01:38.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.581" endtime="20201115 23:01:38.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.579" endtime="20201115 23:01:38.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.616" endtime="20201115 23:01:38.903"></status>
</kw>
<msg timestamp="20201115 23:01:38.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.615" endtime="20201115 23:01:38.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.907" endtime="20201115 23:01:38.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.915" endtime="20201115 23:01:38.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.612" endtime="20201115 23:01:38.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.611" endtime="20201115 23:01:38.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.922" level="INFO">${RESULT} = [{'time': 0.021894542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7208999999999446e-05, 'source_diff': 4.7208999999999446e-05}, {'time': 0.021956528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:38.918" endtime="20201115 23:01:38.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.935" level="INFO">${ACCURACY} = {'diff': [4.7208999999999446e-05, 4.699999999999843e-05, 4.7167000000000736e-05, 4.7208999999999446e-05, 4.727699999999835e-05, 4.699999999999843e-05, 4.675000000000165e-05, 4.7111000000002456e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:01:38.923" endtime="20201115 23:01:38.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.940" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.939" endtime="20201115 23:01:38.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.943" level="INFO">VALUE: [4.7208999999999446e-05, 4.699999999999843e-05, 4.7167000000000736e-05, 4.7208999999999446e-05, 4.727699999999835e-05, 4.699999999999843e-05, 4.675000000000165e-05, 4.7111000000002456e-05, 4.745800000000022e-05, 4.740199999999847e-05, 4.66939999999999e-05, 4.670799999999947e-05, 4.677800000000079e-05, 4.731900000000053e-05, 4.695799999999972e-05, 4.751400000000197e-05, 4.670799999999947e-05, 4.681900000000003e-05, 4.71940000000004e-05, 4.738899999999838e-05, 4.727800000000129e-05, 4.706999999999975e-05, 4.747199999999979e-05, 4.713899999999813e-05, 4.713899999999813e-05, 4.734799999999914e-05, 4.6958999999999196e-05, 4.747199999999979e-05, 4.70269999999981e-05, 4.720799999999997e-05, 4.679100000000089e-05, 4.752799999999807e-05, 4.745799999999675e-05, 4.7653000000001666e-05, 4.677800000000079e-05, 4.702799999999757e-05, 4.720799999999997e-05, 4.677800000000079e-05, 4.751400000000197e-05, 4.722199999999954e-05, 4.6708999999998946e-05, 4.676400000000122e-05, 4.699999999999843e-05, 4.752800000000154e-05, 4.7472999999999266e-05, 4.709799999999889e-05, 4.7208999999999446e-05, 4.738899999999838e-05, 4.762499999999906e-05, 4.730499999999749e-05]</msg>
<status status="PASS" starttime="20201115 23:01:38.941" endtime="20201115 23:01:38.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.936" endtime="20201115 23:01:38.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.946" endtime="20201115 23:01:38.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.950" endtime="20201115 23:01:38.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.949" endtime="20201115 23:01:38.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.945" endtime="20201115 23:01:38.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.578" endtime="20201115 23:01:38.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.576" endtime="20201115 23:01:38.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.575" endtime="20201115 23:01:38.971"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.974" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.982" endtime="20201115 23:01:39.001"></status>
</kw>
<msg timestamp="20201115 23:01:39.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.980" endtime="20201115 23:01:39.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.003" endtime="20201115 23:01:39.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.005" endtime="20201115 23:01:39.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.978" endtime="20201115 23:01:39.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.976" endtime="20201115 23:01:39.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.014" endtime="20201115 23:01:39.299"></status>
</kw>
<msg timestamp="20201115 23:01:39.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022708097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02275675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:39.013" endtime="20201115 23:01:39.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022708097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02275675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:39.304" endtime="20201115 23:01:39.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.312" endtime="20201115 23:01:39.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.010" endtime="20201115 23:01:39.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.008" endtime="20201115 23:01:39.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.319" level="INFO">${RESULT} = [{'time': 0.02275675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86529999999992e-05, 'source_diff': 4.86529999999992e-05}, {'time': 0.02281675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201115 23:01:39.315" endtime="20201115 23:01:39.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.334" level="INFO">${ACCURACY} = {'diff': [4.86529999999992e-05, 4.797200000000029e-05, 4.833299999999763e-05, 4.844400000000165e-05, 4.804200000000161e-05, 4.863899999999963e-05, 4.802799999999857e-05, 4.854199999999864e-05, 4.78890...</msg>
<status status="PASS" starttime="20201115 23:01:39.320" endtime="20201115 23:01:39.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.338" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.337" endtime="20201115 23:01:39.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.341" level="INFO">VALUE: [4.86529999999992e-05, 4.797200000000029e-05, 4.833299999999763e-05, 4.844400000000165e-05, 4.804200000000161e-05, 4.863899999999963e-05, 4.802799999999857e-05, 4.854199999999864e-05, 4.7889000000002346e-05, 4.787499999999931e-05, 4.8445000000001126e-05, 4.7972999999999766e-05, 4.8153000000002166e-05, 4.772200000000004e-05, 4.808400000000032e-05, 4.788899999999888e-05, 4.826299999999978e-05, 4.854099999999917e-05, 4.786099999999974e-05, 4.802799999999857e-05, 4.774999999999918e-05, 4.797200000000029e-05, 4.837499999999981e-05, 4.774999999999918e-05, 4.861100000000049e-05, 4.7889000000002346e-05, 4.775000000000265e-05, 4.852799999999907e-05, 4.777800000000179e-05, 4.847199999999732e-05, 4.857000000000125e-05, 4.838899999999938e-05, 4.7972999999999766e-05, 4.85139999999995e-05, 4.783400000000007e-05, 4.797200000000029e-05, 4.816599999999879e-05, 4.770800000000047e-05, 4.802700000000257e-05, 4.831900000000153e-05, 4.845800000000122e-05, 4.815200000000269e-05, 4.773599999999961e-05, 4.797200000000029e-05, 4.83469999999972e-05, 4.824999999999968e-05, 4.81529999999987e-05, 4.834700000000067e-05, 4.81529999999987e-05, 4.85139999999995e-05]</msg>
<status status="PASS" starttime="20201115 23:01:39.340" endtime="20201115 23:01:39.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.335" endtime="20201115 23:01:39.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.344" endtime="20201115 23:01:39.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.347" endtime="20201115 23:01:39.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.346" endtime="20201115 23:01:39.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.342" endtime="20201115 23:01:39.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.974" endtime="20201115 23:01:39.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.973" endtime="20201115 23:01:39.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.972" endtime="20201115 23:01:39.369"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.371" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.379" endtime="20201115 23:01:39.398"></status>
</kw>
<msg timestamp="20201115 23:01:39.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.378" endtime="20201115 23:01:39.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.399" endtime="20201115 23:01:39.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.402" endtime="20201115 23:01:39.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.375" endtime="20201115 23:01:39.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.373" endtime="20201115 23:01:39.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.411" endtime="20201115 23:01:39.695"></status>
</kw>
<msg timestamp="20201115 23:01:39.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.409" endtime="20201115 23:01:39.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.700" endtime="20201115 23:01:39.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.708" endtime="20201115 23:01:39.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.407" endtime="20201115 23:01:39.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.405" endtime="20201115 23:01:39.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.715" level="INFO">${RESULT} = [{'time': 0.022121333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.948600000000136e-05, 'source_diff': 4.948600000000136e-05}, {'time': 0.022183333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:39.712" endtime="20201115 23:01:39.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.729" level="INFO">${ACCURACY} = {'diff': [4.948600000000136e-05, 4.925000000000068e-05, 4.947199999999832e-05, 4.883299999999813e-05, 4.902799999999957e-05, 4.952800000000007e-05, 4.93330000000021e-05, 4.940299999999995e-05, 4.87919...</msg>
<status status="PASS" starttime="20201115 23:01:39.716" endtime="20201115 23:01:39.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.733" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.732" endtime="20201115 23:01:39.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.736" level="INFO">VALUE: [4.948600000000136e-05, 4.925000000000068e-05, 4.947199999999832e-05, 4.883299999999813e-05, 4.902799999999957e-05, 4.952800000000007e-05, 4.93330000000021e-05, 4.940299999999995e-05, 4.879199999999889e-05, 4.968099999999934e-05, 4.93469999999982e-05, 4.96530000000002e-05, 4.927799999999982e-05, 4.8709000000000946e-05, 4.9472999999997797e-05, 4.9195000000001876e-05, 4.957000000000225e-05, 4.877799999999932e-05, 4.92079999999985e-05, 4.858300000000135e-05, 4.967999999999986e-05, 4.881899999999856e-05, 4.872200000000104e-05, 4.936100000000124e-05, 4.869399999999843e-05, 4.966699999999977e-05, 4.899999999999696e-05, 4.945800000000222e-05, 4.956899999999931e-05, 4.950000000000093e-05, 4.936099999999777e-05, 4.950000000000093e-05, 4.963900000000063e-05, 4.936100000000124e-05, 4.908400000000132e-05, 4.866699999999877e-05, 4.963900000000063e-05, 4.954199999999964e-05, 4.93469999999982e-05, 4.9195000000001876e-05, 4.956899999999931e-05, 4.938900000000038e-05, 4.909699999999795e-05, 4.906899999999881e-05, 4.879099999999942e-05, 4.855499999999874e-05, 4.945799999999875e-05, 4.918099999999884e-05, 4.8903000000002916e-05, 4.968099999999934e-05]</msg>
<status status="PASS" starttime="20201115 23:01:39.734" endtime="20201115 23:01:39.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.730" endtime="20201115 23:01:39.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.739" endtime="20201115 23:01:39.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.742" endtime="20201115 23:01:39.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.741" endtime="20201115 23:01:39.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.737" endtime="20201115 23:01:39.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.372" endtime="20201115 23:01:39.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.370" endtime="20201115 23:01:39.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.369" endtime="20201115 23:01:39.763"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.766" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.774" endtime="20201115 23:01:39.794"></status>
</kw>
<msg timestamp="20201115 23:01:39.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.772" endtime="20201115 23:01:39.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.796" endtime="20201115 23:01:39.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.798" endtime="20201115 23:01:39.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.770" endtime="20201115 23:01:39.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.768" endtime="20201115 23:01:39.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.808" endtime="20201115 23:01:40.092"></status>
</kw>
<msg timestamp="20201115 23:01:40.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.806" endtime="20201115 23:01:40.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.097" endtime="20201115 23:01:40.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.105" endtime="20201115 23:01:40.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.803" endtime="20201115 23:01:40.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.801" endtime="20201115 23:01:40.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.112" level="INFO">${RESULT} = [{'time': 0.021817125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.979199999999989e-05, 'source_diff': 4.979199999999989e-05}, {'time': 0.021880153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:40.108" endtime="20201115 23:01:40.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.125" level="INFO">${ACCURACY} = {'diff': [4.979199999999989e-05, 5.065299999999773e-05, 5.037499999999834e-05, 4.991700000000002e-05, 5.06530000000012e-05, 5.008399999999885e-05, 5.061099999999902e-05, 4.983400000000207e-05, 4.98049...</msg>
<status status="PASS" starttime="20201115 23:01:40.113" endtime="20201115 23:01:40.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.130" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.129" endtime="20201115 23:01:40.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.132" level="INFO">VALUE: [4.979199999999989e-05, 5.065299999999773e-05, 5.037499999999834e-05, 4.991700000000002e-05, 5.06530000000012e-05, 5.008399999999885e-05, 5.061099999999902e-05, 4.983400000000207e-05, 4.980499999999999e-05, 5.034700000000267e-05, 5.0637999999998684e-05, 5.041700000000052e-05, 5.044400000000018e-05, 5.036099999999877e-05, 5.041600000000104e-05, 4.969399999999943e-05, 4.997200000000229e-05, 5.047199999999932e-05, 5.009699999999895e-05, 5.051399999999803e-05, 5.033299999999963e-05, 5.006899999999981e-05, 4.968099999999934e-05, 5.040300000000095e-05, 4.977800000000032e-05, 5.040300000000095e-05, 5.045899999999923e-05, 5.06530000000012e-05, 4.984800000000164e-05, 5.036099999999877e-05, 5.0209000000002446e-05, 5.013900000000113e-05, 4.9959000000002196e-05, 4.988900000000088e-05, 5.047199999999932e-05, 4.980499999999999e-05, 5.02079999999995e-05, 4.997199999999882e-05, 5.043100000000009e-05, 4.959699999999845e-05, 5.013899999999766e-05, 4.976400000000075e-05, 5.022199999999907e-05, 4.987499999999784e-05, 5.022199999999907e-05, 5.022199999999907e-05, 5.034700000000267e-05, 5.059699999999945e-05, 5.059800000000239e-05, 5.045899999999923e-05]</msg>
<status status="PASS" starttime="20201115 23:01:40.131" endtime="20201115 23:01:40.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.126" endtime="20201115 23:01:40.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.135" endtime="20201115 23:01:40.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.139" endtime="20201115 23:01:40.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.137" endtime="20201115 23:01:40.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.134" endtime="20201115 23:01:40.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.766" endtime="20201115 23:01:40.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.764" endtime="20201115 23:01:40.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.764" endtime="20201115 23:01:40.160"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.162" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.170" endtime="20201115 23:01:40.191"></status>
</kw>
<msg timestamp="20201115 23:01:40.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.169" endtime="20201115 23:01:40.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.192" endtime="20201115 23:01:40.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.195" endtime="20201115 23:01:40.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.166" endtime="20201115 23:01:40.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.164" endtime="20201115 23:01:40.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.204" endtime="20201115 23:01:40.490"></status>
</kw>
<msg timestamp="20201115 23:01:40.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.203" endtime="20201115 23:01:40.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.494" endtime="20201115 23:01:40.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.502" endtime="20201115 23:01:40.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.200" endtime="20201115 23:01:40.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.198" endtime="20201115 23:01:40.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.510" level="INFO">${RESULT} = [{'time': 0.021969611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.12080000000005e-05, 'source_diff': 5.12080000000005e-05}, {'time': 0.022033625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:40.506" endtime="20201115 23:01:40.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.523" level="INFO">${ACCURACY} = {'diff': [5.12080000000005e-05, 5.108300000000038e-05, 5.131900000000106e-05, 5.15279999999986e-05, 5.154200000000164e-05, 5.080600000000046e-05, 5.094500000000016e-05, 5.073599999999914e-05, 5.140300...</msg>
<status status="PASS" starttime="20201115 23:01:40.511" endtime="20201115 23:01:40.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.528" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.527" endtime="20201115 23:01:40.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.530" level="INFO">VALUE: [5.12080000000005e-05, 5.108300000000038e-05, 5.131900000000106e-05, 5.15279999999986e-05, 5.154200000000164e-05, 5.080600000000046e-05, 5.094500000000016e-05, 5.073599999999914e-05, 5.140300000000195e-05, 5.072299999999905e-05, 5.119500000000041e-05, 5.151399999999903e-05, 5.098599999999939e-05, 5.091700000000102e-05, 5.151399999999903e-05, 5.127800000000182e-05, 5.08469999999997e-05, 5.106900000000081e-05, 5.079100000000142e-05, 5.105599999999724e-05, 5.076399999999828e-05, 5.145800000000075e-05, 5.091700000000102e-05, 5.151399999999903e-05, 5.08469999999997e-05, 5.073600000000261e-05, 5.137500000000281e-05, 5.159700000000045e-05, 5.122200000000007e-05, 5.11530000000017e-05, 5.15140000000025e-05, 5.162499999999959e-05, 5.0986999999998867e-05, 5.072199999999957e-05, 5.079099999999795e-05, 5.086099999999927e-05, 5.101399999999853e-05, 5.0708e-05, 5.1679999999998394e-05, 5.108300000000038e-05, 5.156900000000131e-05, 5.161100000000002e-05, 5.090300000000145e-05, 5.097199999999982e-05, 5.097199999999982e-05, 5.154199999999817e-05, 5.129199999999792e-05, 5.140299999999848e-05, 5.123599999999964e-05, 5.08469999999997e-05]</msg>
<status status="PASS" starttime="20201115 23:01:40.529" endtime="20201115 23:01:40.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.524" endtime="20201115 23:01:40.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.534" endtime="20201115 23:01:40.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.537" endtime="20201115 23:01:40.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.535" endtime="20201115 23:01:40.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.532" endtime="20201115 23:01:40.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.163" endtime="20201115 23:01:40.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.161" endtime="20201115 23:01:40.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.160" endtime="20201115 23:01:40.558"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.560" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.569" endtime="20201115 23:01:40.589"></status>
</kw>
<msg timestamp="20201115 23:01:40.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.568" endtime="20201115 23:01:40.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.590" endtime="20201115 23:01:40.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.593" endtime="20201115 23:01:40.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.565" endtime="20201115 23:01:40.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.562" endtime="20201115 23:01:40.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.602" endtime="20201115 23:01:40.888"></status>
</kw>
<msg timestamp="20201115 23:01:40.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023374639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023427042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.600" endtime="20201115 23:01:40.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023374639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023427042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.892" endtime="20201115 23:01:40.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.900" endtime="20201115 23:01:40.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.598" endtime="20201115 23:01:40.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.596" endtime="20201115 23:01:40.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.907" level="INFO">${RESULT} = [{'time': 0.023427042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.240299999999948e-05, 'source_diff': 5.240299999999948e-05}, {'time': 0.023493028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:40.904" endtime="20201115 23:01:40.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.922" level="INFO">${ACCURACY} = {'diff': [5.240299999999948e-05, 5.226399999999978e-05, 5.234800000000067e-05, 5.227799999999935e-05, 5.23340000000011e-05, 5.209700000000095e-05, 5.20409999999992e-05, 5.255499999999927e-05, 5.170800...</msg>
<status status="PASS" starttime="20201115 23:01:40.908" endtime="20201115 23:01:40.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.926" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.925" endtime="20201115 23:01:40.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.929" level="INFO">VALUE: [5.240299999999948e-05, 5.226399999999978e-05, 5.234800000000067e-05, 5.227799999999935e-05, 5.23340000000011e-05, 5.209700000000095e-05, 5.20409999999992e-05, 5.255499999999927e-05, 5.1708000000001e-05, 5.176299999999981e-05, 5.204100000000267e-05, 5.261100000000102e-05, 5.201399999999953e-05, 5.233300000000163e-05, 5.21530000000027e-05, 5.2207999999998034e-05, 5.188899999999941e-05, 5.206899999999834e-05, 5.206900000000181e-05, 5.197200000000082e-05, 5.227799999999935e-05, 5.265299999999973e-05, 5.229199999999892e-05, 5.220899999999751e-05, 5.213899999999966e-05, 5.208400000000085e-05, 5.220899999999751e-05, 5.251400000000003e-05, 5.206900000000181e-05, 5.223600000000064e-05, 5.209700000000095e-05, 5.244400000000218e-05, 5.2471999999997854e-05, 5.195800000000125e-05, 5.176399999999928e-05, 5.233300000000163e-05, 5.261099999999755e-05, 5.188899999999941e-05, 5.226400000000325e-05, 5.256999999999831e-05, 5.168100000000134e-05, 5.240299999999948e-05, 5.227799999999935e-05, 5.187499999999984e-05, 5.248600000000089e-05, 5.226399999999978e-05, 5.247299999999733e-05, 5.208300000000138e-05, 5.2429999999999144e-05, 5.2388000000000434e-05]</msg>
<status status="PASS" starttime="20201115 23:01:40.927" endtime="20201115 23:01:40.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.923" endtime="20201115 23:01:40.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.932" endtime="20201115 23:01:40.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.935" endtime="20201115 23:01:40.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.934" endtime="20201115 23:01:40.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.930" endtime="20201115 23:01:40.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.561" endtime="20201115 23:01:40.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.559" endtime="20201115 23:01:40.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.558" endtime="20201115 23:01:40.957"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.959" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.967" endtime="20201115 23:01:40.986"></status>
</kw>
<msg timestamp="20201115 23:01:40.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.966" endtime="20201115 23:01:40.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.988" endtime="20201115 23:01:40.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.991" endtime="20201115 23:01:40.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.963" endtime="20201115 23:01:40.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.961" endtime="20201115 23:01:40.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.000" endtime="20201115 23:01:41.286"></status>
</kw>
<msg timestamp="20201115 23:01:41.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.998" endtime="20201115 23:01:41.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.290" endtime="20201115 23:01:41.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.298" endtime="20201115 23:01:41.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.996" endtime="20201115 23:01:41.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.994" endtime="20201115 23:01:41.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.305" level="INFO">${RESULT} = [{'time': 0.022417417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.279199999999942e-05, 'source_diff': 5.279199999999942e-05}, {'time': 0.022485389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:41.302" endtime="20201115 23:01:41.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.319" level="INFO">${ACCURACY} = {'diff': [5.279199999999942e-05, 5.304200000000314e-05, 5.315300000000023e-05, 5.326400000000078e-05, 5.311100000000152e-05, 5.315300000000023e-05, 5.3443999999999714e-05, 5.277700000000038e-05, 5.350...</msg>
<status status="PASS" starttime="20201115 23:01:41.306" endtime="20201115 23:01:41.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.323" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.322" endtime="20201115 23:01:41.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.326" level="INFO">VALUE: [5.279199999999942e-05, 5.304200000000314e-05, 5.315300000000023e-05, 5.326400000000078e-05, 5.311100000000152e-05, 5.315300000000023e-05, 5.3443999999999714e-05, 5.277700000000038e-05, 5.350000000000146e-05, 5.325000000000121e-05, 5.338900000000091e-05, 5.2916000000000074e-05, 5.326400000000078e-05, 5.284699999999823e-05, 5.30280000000001e-05, 5.340300000000048e-05, 5.3457999999999284e-05, 5.358299999999941e-05, 5.35280000000006e-05, 5.293100000000259e-05, 5.329199999999992e-05, 5.363900000000116e-05, 5.2985999999997924e-05, 5.301400000000053e-05, 5.295899999999826e-05, 5.286100000000127e-05, 5.268100000000234e-05, 5.279099999999995e-05, 5.251400000000003e-05, 5.308299999999891e-05, 5.331899999999959e-05, 5.3457999999999284e-05, 5.308299999999891e-05, 5.333299999999916e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.333299999999916e-05, 5.304199999999967e-05, 5.3193999999999464e-05, 5.306899999999934e-05, 5.28609999999978e-05, 5.281999999999856e-05, 5.329199999999992e-05, 5.28340000000016e-05, 5.290299999999998e-05, 5.365300000000073e-05, 5.3263999999997313e-05, 5.2721999999998104e-05, 5.3249999999997744e-05, 5.308299999999891e-05]</msg>
<status status="PASS" starttime="20201115 23:01:41.324" endtime="20201115 23:01:41.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.320" endtime="20201115 23:01:41.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.329" endtime="20201115 23:01:41.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.333" endtime="20201115 23:01:41.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.331" endtime="20201115 23:01:41.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.328" endtime="20201115 23:01:41.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.960" endtime="20201115 23:01:41.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.958" endtime="20201115 23:01:41.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.957" endtime="20201115 23:01:41.354"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.356" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.364" endtime="20201115 23:01:41.383"></status>
</kw>
<msg timestamp="20201115 23:01:41.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.363" endtime="20201115 23:01:41.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.385" endtime="20201115 23:01:41.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.387" endtime="20201115 23:01:41.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.360" endtime="20201115 23:01:41.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.358" endtime="20201115 23:01:41.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.397" endtime="20201115 23:01:41.683"></status>
</kw>
<msg timestamp="20201115 23:01:41.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.396" endtime="20201115 23:01:41.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021810958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.687" endtime="20201115 23:01:41.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.695" endtime="20201115 23:01:41.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.393" endtime="20201115 23:01:41.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.391" endtime="20201115 23:01:41.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.702" level="INFO">${RESULT} = [{'time': 0.021864583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.362500000000159e-05, 'source_diff': 5.362500000000159e-05}, {'time': 0.021932583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:41.699" endtime="20201115 23:01:41.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.716" level="INFO">${ACCURACY} = {'diff': [5.362500000000159e-05, 5.3763999999997814e-05, 5.415300000000123e-05, 5.4471999999999854e-05, 5.458300000000041e-05, 5.433300000000016e-05, 5.40419999999972e-05, 5.4471999999999854e-05, 5.44...</msg>
<status status="PASS" starttime="20201115 23:01:41.703" endtime="20201115 23:01:41.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.720" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.719" endtime="20201115 23:01:41.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.723" level="INFO">VALUE: [5.362500000000159e-05, 5.3763999999997814e-05, 5.415300000000123e-05, 5.4471999999999854e-05, 5.458300000000041e-05, 5.433300000000016e-05, 5.40419999999972e-05, 5.4471999999999854e-05, 5.4499999999998994e-05, 5.409699999999948e-05, 5.395899999999926e-05, 5.441700000000105e-05, 5.444500000000019e-05, 5.438900000000191e-05, 5.380599999999999e-05, 5.431900000000059e-05, 5.3916000000001074e-05, 5.458300000000041e-05, 5.4221999999999604e-05, 5.3971999999999354e-05, 5.441700000000105e-05, 5.43609999999993e-05, 5.376400000000128e-05, 5.38609999999988e-05, 5.3707999999999534e-05, 5.4444000000000714e-05, 5.373600000000214e-05, 5.401400000000153e-05, 5.415300000000123e-05, 5.395900000000273e-05, 5.461099999999955e-05, 5.441700000000105e-05, 5.4263999999998314e-05, 5.427800000000135e-05, 5.381999999999956e-05, 5.434699999999973e-05, 5.4388000000002434e-05, 5.372200000000257e-05, 5.426300000000231e-05, 5.379100000000095e-05, 5.4402000000002004e-05, 5.433300000000016e-05, 5.41670000000008e-05, 5.3707999999999534e-05, 5.415300000000123e-05, 5.465300000000173e-05, 5.381999999999956e-05, 5.387499999999837e-05, 5.458300000000041e-05, 5.365300000000073e-05]</msg>
<status status="PASS" starttime="20201115 23:01:41.721" endtime="20201115 23:01:41.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.716" endtime="20201115 23:01:41.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.726" endtime="20201115 23:01:41.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.730" endtime="20201115 23:01:41.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.728" endtime="20201115 23:01:41.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.725" endtime="20201115 23:01:41.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.357" endtime="20201115 23:01:41.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.355" endtime="20201115 23:01:41.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.354" endtime="20201115 23:01:41.751"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.753" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.761" endtime="20201115 23:01:41.781"></status>
</kw>
<msg timestamp="20201115 23:01:41.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.760" endtime="20201115 23:01:41.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.782" endtime="20201115 23:01:41.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.785" endtime="20201115 23:01:41.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.757" endtime="20201115 23:01:41.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.755" endtime="20201115 23:01:41.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.794" endtime="20201115 23:01:42.080"></status>
</kw>
<msg timestamp="20201115 23:01:42.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.792" endtime="20201115 23:01:42.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.084" endtime="20201115 23:01:42.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.092" endtime="20201115 23:01:42.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.790" endtime="20201115 23:01:42.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.788" endtime="20201115 23:01:42.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.099" level="INFO">${RESULT} = [{'time': 0.021996208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5249999999999744e-05, 'source_diff': 5.5249999999999744e-05}, {'time': 0.022066278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:42.096" endtime="20201115 23:01:42.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.113" level="INFO">${ACCURACY} = {'diff': [5.5249999999999744e-05, 5.477800000000185e-05, 5.515300000000223e-05, 5.476400000000228e-05, 5.5541999999998704e-05, 5.565299999999926e-05, 5.4985999999999924e-05, 5.4763999999998814e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:01:42.100" endtime="20201115 23:01:42.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.117" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.116" endtime="20201115 23:01:42.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.120" level="INFO">VALUE: [5.5249999999999744e-05, 5.477800000000185e-05, 5.515300000000223e-05, 5.476400000000228e-05, 5.5541999999998704e-05, 5.565299999999926e-05, 5.4985999999999924e-05, 5.4763999999998814e-05, 5.5249999999999744e-05, 5.4958000000000784e-05, 5.54869999999999e-05, 5.566699999999883e-05, 5.4722000000000104e-05, 5.484700000000023e-05, 5.520900000000051e-05, 5.53480000000002e-05, 5.4791999999997953e-05, 5.493099999999765e-05, 5.509700000000048e-05, 5.508300000000091e-05, 5.50549999999983e-05, 5.527699999999941e-05, 5.480500000000152e-05, 5.53610000000003e-05, 5.5472000000000854e-05, 5.541700000000205e-05, 5.533299999999769e-05, 5.559700000000098e-05, 5.490300000000198e-05, 5.4972000000000354e-05, 5.511100000000005e-05, 5.558300000000141e-05, 5.547299999999686e-05, 5.487499999999937e-05, 5.5013999999999064e-05, 5.5180000000001894e-05, 5.511100000000005e-05, 5.5387999999999965e-05, 5.483300000000066e-05, 5.5208000000001034e-05, 5.529100000000245e-05, 5.5041999999998203e-05, 5.5013999999999064e-05, 5.5222000000000604e-05, 5.5208000000001034e-05, 5.565299999999926e-05, 5.565299999999926e-05, 5.563899999999969e-05, 5.480600000000099e-05, 5.5138000000003184e-05]</msg>
<status status="PASS" starttime="20201115 23:01:42.118" endtime="20201115 23:01:42.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.114" endtime="20201115 23:01:42.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.123" endtime="20201115 23:01:42.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:42.126" endtime="20201115 23:01:42.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.125" endtime="20201115 23:01:42.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.121" endtime="20201115 23:01:42.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.754" endtime="20201115 23:01:42.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.752" endtime="20201115 23:01:42.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.751" endtime="20201115 23:01:42.147"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.150" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.158" endtime="20201115 23:01:42.178"></status>
</kw>
<msg timestamp="20201115 23:01:42.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.156" endtime="20201115 23:01:42.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.180" endtime="20201115 23:01:42.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.182" endtime="20201115 23:01:42.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.154" endtime="20201115 23:01:42.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.152" endtime="20201115 23:01:42.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.191" endtime="20201115 23:01:42.476"></status>
</kw>
<msg timestamp="20201115 23:01:42.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.190" endtime="20201115 23:01:42.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.481" endtime="20201115 23:01:42.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.489" endtime="20201115 23:01:42.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.187" endtime="20201115 23:01:42.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.185" endtime="20201115 23:01:42.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.496" level="INFO">${RESULT} = [{'time': 0.022760486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6027999999999634e-05, 'source_diff': 5.6027999999999634e-05}, {'time': 0.0228325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:42.493" endtime="20201115 23:01:42.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.511" level="INFO">${ACCURACY} = {'diff': [5.6027999999999634e-05, 5.666699999999983e-05, 5.6027999999999634e-05, 5.583299999999819e-05, 5.5972000000001354e-05, 5.597300000000083e-05, 5.5736000000000674e-05, 5.607000000000181e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:01:42.497" endtime="20201115 23:01:42.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.515" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.514" endtime="20201115 23:01:42.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.518" level="INFO">VALUE: [5.6027999999999634e-05, 5.666699999999983e-05, 5.6027999999999634e-05, 5.583299999999819e-05, 5.5972000000001354e-05, 5.597300000000083e-05, 5.5736000000000674e-05, 5.607000000000181e-05, 5.606999999999834e-05, 5.6222000000001604e-05, 5.622300000000108e-05, 5.5750000000000244e-05, 5.5915999999999605e-05, 5.565299999999926e-05, 5.65549999999998e-05, 5.608300000000191e-05, 5.643100000000262e-05, 5.6458000000002284e-05, 5.662500000000112e-05, 5.613900000000019e-05, 5.5986000000000924e-05, 5.6277999999999884e-05, 5.583400000000113e-05, 5.5708000000001534e-05, 5.619500000000194e-05, 5.638899999999697e-05, 5.659700000000198e-05, 5.557000000000131e-05, 5.663899999999722e-05, 5.5957999999998315e-05, 5.608400000000138e-05, 5.637500000000087e-05, 5.6486000000001424e-05, 5.627700000000041e-05, 5.638900000000044e-05, 5.606899999999887e-05, 5.637500000000087e-05, 5.6500000000000994e-05, 5.6528000000000134e-05, 5.6541999999999704e-05, 5.6207999999998565e-05, 5.608299999999844e-05, 5.661099999999808e-05, 5.609800000000095e-05, 5.644500000000219e-05, 5.633400000000163e-05, 5.640300000000001e-05, 5.6250000000000744e-05, 5.620900000000151e-05, 5.645899999999829e-05]</msg>
<status status="PASS" starttime="20201115 23:01:42.516" endtime="20201115 23:01:42.518"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.512" endtime="20201115 23:01:42.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.521" endtime="20201115 23:01:42.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:42.524" endtime="20201115 23:01:42.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.523" endtime="20201115 23:01:42.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.519" endtime="20201115 23:01:42.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.151" endtime="20201115 23:01:42.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.149" endtime="20201115 23:01:42.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.148" endtime="20201115 23:01:42.545"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.547" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.556" endtime="20201115 23:01:42.575"></status>
</kw>
<msg timestamp="20201115 23:01:42.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.554" endtime="20201115 23:01:42.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.576" endtime="20201115 23:01:42.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.579" endtime="20201115 23:01:42.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.552" endtime="20201115 23:01:42.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.549" endtime="20201115 23:01:42.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.588" endtime="20201115 23:01:42.874"></status>
</kw>
<msg timestamp="20201115 23:01:42.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.586" endtime="20201115 23:01:42.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.879" endtime="20201115 23:01:42.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.887" endtime="20201115 23:01:42.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.584" endtime="20201115 23:01:42.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.582" endtime="20201115 23:01:42.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.894" level="INFO">${RESULT} = [{'time': 0.021868972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6764000000000814e-05, 'source_diff': 5.6764000000000814e-05}, {'time': 0.021942014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:42.890" endtime="20201115 23:01:42.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.907" level="INFO">${ACCURACY} = {'diff': [5.6764000000000814e-05, 5.7485999999998955e-05, 5.7513999999998094e-05, 5.6722000000002104e-05, 5.691700000000008e-05, 5.751300000000209e-05, 5.765300000000126e-05, 5.720899999999904e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:01:42.895" endtime="20201115 23:01:42.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.912" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.911" endtime="20201115 23:01:42.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.914" level="INFO">VALUE: [5.6764000000000814e-05, 5.7485999999998955e-05, 5.7513999999998094e-05, 5.6722000000002104e-05, 5.691700000000008e-05, 5.751300000000209e-05, 5.765300000000126e-05, 5.720899999999904e-05, 5.683399999999866e-05, 5.741700000000058e-05, 5.7278000000000884e-05, 5.7665999999997886e-05, 5.7499999999998525e-05, 5.740300000000101e-05, 5.6985999999998455e-05, 5.709700000000248e-05, 5.711099999999858e-05, 5.7444000000000245e-05, 5.690300000000051e-05, 5.740300000000101e-05, 5.7457999999999815e-05, 5.737500000000187e-05, 5.709700000000248e-05, 5.6750000000001244e-05, 5.744499999999972e-05, 5.7306000000000024e-05, 5.680600000000299e-05, 5.677699999999744e-05, 5.722299999999861e-05, 5.709800000000195e-05, 5.7263999999997844e-05, 5.6791999999999954e-05, 5.7165999999997386e-05, 5.7236000000002174e-05, 5.683299999999919e-05, 5.7221999999999135e-05, 5.737500000000187e-05, 5.758299999999994e-05, 5.715300000000076e-05, 5.7292000000000454e-05, 5.684699999999876e-05, 5.716700000000033e-05, 5.6957999999999315e-05, 5.7235999999998705e-05, 5.7527999999997664e-05, 5.738899999999797e-05, 5.713899999999772e-05, 5.745899999999929e-05, 5.723699999999818e-05, 5.6791999999999954e-05]</msg>
<status status="PASS" starttime="20201115 23:01:42.913" endtime="20201115 23:01:42.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.908" endtime="20201115 23:01:42.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.917" endtime="20201115 23:01:42.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:42.921" endtime="20201115 23:01:42.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.919" endtime="20201115 23:01:42.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.916" endtime="20201115 23:01:42.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.548" endtime="20201115 23:01:42.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.546" endtime="20201115 23:01:42.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.546" endtime="20201115 23:01:42.942"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.944" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.953" endtime="20201115 23:01:42.971"></status>
</kw>
<msg timestamp="20201115 23:01:42.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.951" endtime="20201115 23:01:42.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.973" endtime="20201115 23:01:42.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.976" endtime="20201115 23:01:42.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.948" endtime="20201115 23:01:42.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.946" endtime="20201115 23:01:42.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.985" endtime="20201115 23:01:43.270"></status>
</kw>
<msg timestamp="20201115 23:01:43.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.983" endtime="20201115 23:01:43.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.274" endtime="20201115 23:01:43.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.282" endtime="20201115 23:01:43.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.981" endtime="20201115 23:01:43.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.979" endtime="20201115 23:01:43.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.289" level="INFO">${RESULT} = [{'time': 0.021857778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7806000000000524e-05, 'source_diff': 5.7806000000000524e-05}, {'time': 0.021927764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:43.286" endtime="20201115 23:01:43.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.303" level="INFO">${ACCURACY} = {'diff': [5.7806000000000524e-05, 5.7763999999998344e-05, 5.863900000000269e-05, 5.7820000000000094e-05, 5.806900000000087e-05, 5.8499999999999525e-05, 5.809700000000001e-05, 5.76810000000004e-05, 5.8...</msg>
<status status="PASS" starttime="20201115 23:01:43.290" endtime="20201115 23:01:43.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.307" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.306" endtime="20201115 23:01:43.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.310" level="INFO">VALUE: [5.7806000000000524e-05, 5.7763999999998344e-05, 5.863900000000269e-05, 5.7820000000000094e-05, 5.806900000000087e-05, 5.8499999999999525e-05, 5.809700000000001e-05, 5.76810000000004e-05, 5.8235999999999705e-05, 5.8137999999999246e-05, 5.7915999999998136e-05, 5.8263999999998844e-05, 5.784699999999976e-05, 5.7985999999999455e-05, 5.783300000000019e-05, 5.836099999999983e-05, 5.7944000000000745e-05, 5.862499999999965e-05, 5.816700000000133e-05, 5.7971999999999885e-05, 5.8528000000002134e-05, 5.8292000000001454e-05, 5.815300000000176e-05, 5.8249999999999275e-05, 5.76810000000004e-05, 5.8263999999998844e-05, 5.794500000000022e-05, 5.7916000000001605e-05, 5.783300000000019e-05, 5.7901999999998566e-05, 5.8250000000002744e-05, 5.8014000000002064e-05, 5.7708000000000065e-05, 5.790299999999804e-05, 5.8250000000002744e-05, 5.7944000000000745e-05, 5.862499999999965e-05, 5.8499999999999525e-05, 5.8584000000000414e-05, 5.845899999999682e-05, 5.78480000000027e-05, 5.790300000000151e-05, 5.861100000000008e-05, 5.811099999999958e-05, 5.804099999999826e-05, 5.8166000000001855e-05, 5.804099999999826e-05, 5.787500000000237e-05, 5.804099999999826e-05, 5.862499999999965e-05]</msg>
<status status="PASS" starttime="20201115 23:01:43.308" endtime="20201115 23:01:43.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.303" endtime="20201115 23:01:43.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.313" endtime="20201115 23:01:43.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.316" endtime="20201115 23:01:43.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.315" endtime="20201115 23:01:43.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.311" endtime="20201115 23:01:43.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.945" endtime="20201115 23:01:43.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.943" endtime="20201115 23:01:43.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.942" endtime="20201115 23:01:43.337"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.339" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.348" endtime="20201115 23:01:43.368"></status>
</kw>
<msg timestamp="20201115 23:01:43.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.347" endtime="20201115 23:01:43.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.369" endtime="20201115 23:01:43.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.372" endtime="20201115 23:01:43.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.344" endtime="20201115 23:01:43.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.341" endtime="20201115 23:01:43.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.381" endtime="20201115 23:01:43.666"></status>
</kw>
<msg timestamp="20201115 23:01:43.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.380" endtime="20201115 23:01:43.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.671" endtime="20201115 23:01:43.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.679" endtime="20201115 23:01:43.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.377" endtime="20201115 23:01:43.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.375" endtime="20201115 23:01:43.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.686" level="INFO">${RESULT} = [{'time': 0.022539472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9278000000002884e-05, 'source_diff': 5.9278000000002884e-05}, {'time': 0.022612472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:43.682" endtime="20201115 23:01:43.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.699" level="INFO">${ACCURACY} = {'diff': [5.9278000000002884e-05, 5.8778000000002384e-05, 5.940299999999954e-05, 5.8763999999999345e-05, 5.90689999999984e-05, 5.9277999999999414e-05, 5.9527999999999665e-05, 5.965299999999979e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:01:43.687" endtime="20201115 23:01:43.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.704" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.703" endtime="20201115 23:01:43.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.706" level="INFO">VALUE: [5.9278000000002884e-05, 5.8778000000002384e-05, 5.940299999999954e-05, 5.8763999999999345e-05, 5.90689999999984e-05, 5.9277999999999414e-05, 5.9527999999999665e-05, 5.965299999999979e-05, 5.8721999999997165e-05, 5.8721999999997165e-05, 5.891699999999861e-05, 5.88749999999999e-05, 5.9652000000000316e-05, 5.9263999999999845e-05, 5.8722000000000635e-05, 5.9098000000000483e-05, 5.8722000000000635e-05, 5.9222000000001135e-05, 5.904099999999926e-05, 5.936100000000083e-05, 5.9013999999999595e-05, 5.9027999999999164e-05, 5.940299999999954e-05, 5.883300000000119e-05, 5.9542000000002704e-05, 5.916699999999886e-05, 5.909699999999754e-05, 5.940299999999954e-05, 5.9527999999999665e-05, 5.965299999999979e-05, 5.890299999999904e-05, 5.915299999999929e-05, 5.944500000000172e-05, 5.880500000000205e-05, 5.9069999999997874e-05, 5.9541999999999234e-05, 5.9651999999996846e-05, 5.880499999999858e-05, 5.85689999999979e-05, 5.9458000000001815e-05, 5.886100000000033e-05, 5.8986000000000455e-05, 5.9514000000000095e-05, 5.884700000000076e-05, 5.909700000000101e-05, 5.8722000000000635e-05, 5.895899999999732e-05, 5.886100000000033e-05, 5.888899999999947e-05, 5.9306000000002024e-05]</msg>
<status status="PASS" starttime="20201115 23:01:43.705" endtime="20201115 23:01:43.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.700" endtime="20201115 23:01:43.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.709" endtime="20201115 23:01:43.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.713" endtime="20201115 23:01:43.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.711" endtime="20201115 23:01:43.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.708" endtime="20201115 23:01:43.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.340" endtime="20201115 23:01:43.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.338" endtime="20201115 23:01:43.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.337" endtime="20201115 23:01:43.734"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.737" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.745" endtime="20201115 23:01:43.764"></status>
</kw>
<msg timestamp="20201115 23:01:43.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.743" endtime="20201115 23:01:43.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.766" endtime="20201115 23:01:43.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.768" endtime="20201115 23:01:43.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.741" endtime="20201115 23:01:43.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.739" endtime="20201115 23:01:43.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.777" endtime="20201115 23:01:44.063"></status>
</kw>
<msg timestamp="20201115 23:01:44.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023122875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.776" endtime="20201115 23:01:44.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023122875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.067" endtime="20201115 23:01:44.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.075" endtime="20201115 23:01:44.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.773" endtime="20201115 23:01:44.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.771" endtime="20201115 23:01:44.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.082" level="INFO">${RESULT} = [{'time': 0.023183153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0278000000000415e-05, 'source_diff': 6.0278000000000415e-05}, {'time': 0.023258167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:44.079" endtime="20201115 23:01:44.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.097" level="INFO">${ACCURACY} = {'diff': [6.0278000000000415e-05, 6.0528000000000665e-05, 5.9834000000001664e-05, 6.041700000000011e-05, 5.96949999999985e-05, 6.0527999999997195e-05, 5.988900000000047e-05, 6.0166000000000386e-05, 6....</msg>
<status status="PASS" starttime="20201115 23:01:44.083" endtime="20201115 23:01:44.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.101" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.100" endtime="20201115 23:01:44.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.104" level="INFO">VALUE: [6.0278000000000415e-05, 6.0528000000000665e-05, 5.9834000000001664e-05, 6.041700000000011e-05, 5.96949999999985e-05, 6.0527999999997195e-05, 5.988900000000047e-05, 6.0166000000000386e-05, 6.0137999999997777e-05, 6.034699999999879e-05, 6.033300000000269e-05, 5.9764000000000345e-05, 6.058300000000294e-05, 6.0264000000000845e-05, 5.9791999999999484e-05, 6.013900000000072e-05, 5.979100000000001e-05, 5.9777999999999915e-05, 5.988900000000047e-05, 5.984699999999829e-05, 6.059699999999904e-05, 6.015300000000029e-05, 6.0348000000001734e-05, 6.020900000000204e-05, 5.9736000000001205e-05, 6.0528000000000665e-05, 5.986100000000133e-05, 6.0152000000000816e-05, 5.9721999999998165e-05, 6.0443999999999776e-05, 6.065300000000079e-05, 6.05689999999999e-05, 6.0528000000000665e-05, 6.0278000000000415e-05, 6.063900000000122e-05, 5.9958000000002315e-05, 5.988900000000047e-05, 5.9764000000000345e-05, 5.986100000000133e-05, 6.0583999999998944e-05, 5.9777999999999915e-05, 6.0583999999998944e-05, 6.0084000000001914e-05, 5.976300000000087e-05, 5.965299999999979e-05, 6.0028000000000165e-05, 5.984700000000176e-05, 5.9943999999999276e-05, 6.0235999999998235e-05, 6.030500000000008e-05]</msg>
<status status="PASS" starttime="20201115 23:01:44.102" endtime="20201115 23:01:44.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.098" endtime="20201115 23:01:44.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.112" endtime="20201115 23:01:44.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.116" endtime="20201115 23:01:44.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.114" endtime="20201115 23:01:44.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.110" endtime="20201115 23:01:44.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.737" endtime="20201115 23:01:44.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.736" endtime="20201115 23:01:44.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.735" endtime="20201115 23:01:44.137"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.139" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.147" endtime="20201115 23:01:44.166"></status>
</kw>
<msg timestamp="20201115 23:01:44.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.146" endtime="20201115 23:01:44.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.167" endtime="20201115 23:01:44.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.170" endtime="20201115 23:01:44.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.143" endtime="20201115 23:01:44.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.141" endtime="20201115 23:01:44.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.179" endtime="20201115 23:01:44.464"></status>
</kw>
<msg timestamp="20201115 23:01:44.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022052389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.177" endtime="20201115 23:01:44.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022052389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.468" endtime="20201115 23:01:44.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.476" endtime="20201115 23:01:44.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.175" endtime="20201115 23:01:44.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.173" endtime="20201115 23:01:44.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.483" level="INFO">${RESULT} = [{'time': 0.022052389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.104199999999727e-05, 'source_diff': 6.104199999999727e-05}, {'time': 0.022127417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:44.480" endtime="20201115 23:01:44.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.496" level="INFO">${ACCURACY} = {'diff': [6.104199999999727e-05, 6.108399999999944e-05, 6.1582999999997e-05, 6.143099999999721e-05, 6.1027999999997695e-05, 6.084699999999929e-05, 6.12080000000001e-05, 6.13889999999985e-05, 6.1262999...</msg>
<status status="PASS" starttime="20201115 23:01:44.484" endtime="20201115 23:01:44.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.501" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.500" endtime="20201115 23:01:44.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.504" level="INFO">VALUE: [6.104199999999727e-05, 6.108399999999944e-05, 6.1582999999997e-05, 6.143099999999721e-05, 6.1027999999997695e-05, 6.084699999999929e-05, 6.12080000000001e-05, 6.13889999999985e-05, 6.12629999999989e-05, 6.126300000000237e-05, 6.081900000000015e-05, 6.154100000000176e-05, 6.122199999999967e-05, 6.084699999999929e-05, 6.129200000000098e-05, 6.134699999999979e-05, 6.154199999999777e-05, 6.088900000000147e-05, 6.154200000000123e-05, 6.109800000000248e-05, 6.094499999999975e-05, 6.104200000000073e-05, 6.154200000000123e-05, 6.0778000000000915e-05, 6.163899999999875e-05, 6.116600000000139e-05, 6.129100000000151e-05, 6.084699999999929e-05, 6.129099999999804e-05, 6.158300000000047e-05, 6.149999999999906e-05, 6.116700000000086e-05, 6.13889999999985e-05, 6.0957999999999846e-05, 6.130600000000055e-05, 6.150000000000252e-05, 6.145899999999982e-05, 6.113899999999825e-05, 6.1028000000001165e-05, 6.122199999999967e-05, 6.141699999999764e-05, 6.0999999999998555e-05, 6.129199999999752e-05, 6.111099999999911e-05, 6.119400000000053e-05, 6.10690000000004e-05, 6.133300000000022e-05, 6.147199999999992e-05, 6.158300000000047e-05, 6.0694000000000026e-05]</msg>
<status status="PASS" starttime="20201115 23:01:44.502" endtime="20201115 23:01:44.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.497" endtime="20201115 23:01:44.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.507" endtime="20201115 23:01:44.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.511" endtime="20201115 23:01:44.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.509" endtime="20201115 23:01:44.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.506" endtime="20201115 23:01:44.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.140" endtime="20201115 23:01:44.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.138" endtime="20201115 23:01:44.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.137" endtime="20201115 23:01:44.532"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.534" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.542" endtime="20201115 23:01:44.561"></status>
</kw>
<msg timestamp="20201115 23:01:44.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.541" endtime="20201115 23:01:44.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.563" endtime="20201115 23:01:44.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.565" endtime="20201115 23:01:44.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.538" endtime="20201115 23:01:44.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.536" endtime="20201115 23:01:44.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.574" endtime="20201115 23:01:44.860"></status>
</kw>
<msg timestamp="20201115 23:01:44.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.573" endtime="20201115 23:01:44.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.865" endtime="20201115 23:01:44.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.873" endtime="20201115 23:01:44.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.570" endtime="20201115 23:01:44.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.568" endtime="20201115 23:01:44.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.880" level="INFO">${RESULT} = [{'time': 0.021821139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.25279999999992e-05, 'source_diff': 6.25279999999992e-05}, {'time': 0.021899125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:44.876" endtime="20201115 23:01:44.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.894" level="INFO">${ACCURACY} = {'diff': [6.25279999999992e-05, 6.237499999999993e-05, 6.213899999999925e-05, 6.240299999999907e-05, 6.215300000000229e-05, 6.251399999999963e-05, 6.247300000000039e-05, 6.24439999999983e-05, 6.240300...</msg>
<status status="PASS" starttime="20201115 23:01:44.881" endtime="20201115 23:01:44.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.898" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.897" endtime="20201115 23:01:44.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.901" level="INFO">VALUE: [6.25279999999992e-05, 6.237499999999993e-05, 6.213899999999925e-05, 6.240299999999907e-05, 6.215300000000229e-05, 6.251399999999963e-05, 6.247300000000039e-05, 6.24439999999983e-05, 6.240300000000254e-05, 6.19439999999978e-05, 6.245900000000082e-05, 6.183300000000072e-05, 6.250000000000006e-05, 6.229099999999904e-05, 6.195799999999738e-05, 6.17080000000006e-05, 6.197200000000042e-05, 6.190299999999857e-05, 6.223600000000024e-05, 6.195800000000085e-05, 6.247199999999745e-05, 6.172200000000017e-05, 6.18340000000002e-05, 6.182000000000062e-05, 6.215300000000229e-05, 6.259800000000051e-05, 6.168100000000093e-05, 6.209700000000054e-05, 6.22080000000011e-05, 6.219399999999806e-05, 6.24019999999996e-05, 6.188900000000247e-05, 6.251399999999963e-05, 6.245800000000135e-05, 6.198599999999999e-05, 6.237499999999993e-05, 6.177800000000191e-05, 6.233299999999775e-05, 6.226399999999938e-05, 6.16950000000005e-05, 6.259700000000104e-05, 6.187499999999943e-05, 6.226399999999938e-05, 6.241700000000211e-05, 6.223600000000024e-05, 6.170900000000007e-05, 6.208400000000044e-05, 6.209700000000054e-05, 6.255599999999834e-05, 6.172200000000017e-05]</msg>
<status status="PASS" starttime="20201115 23:01:44.899" endtime="20201115 23:01:44.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.895" endtime="20201115 23:01:44.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.904" endtime="20201115 23:01:44.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.907" endtime="20201115 23:01:44.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.906" endtime="20201115 23:01:44.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.902" endtime="20201115 23:01:44.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.535" endtime="20201115 23:01:44.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.533" endtime="20201115 23:01:44.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.532" endtime="20201115 23:01:44.928"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.931" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.939" endtime="20201115 23:01:44.958"></status>
</kw>
<msg timestamp="20201115 23:01:44.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.937" endtime="20201115 23:01:44.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.959" endtime="20201115 23:01:44.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.962" endtime="20201115 23:01:44.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.935" endtime="20201115 23:01:44.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.933" endtime="20201115 23:01:44.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.971" endtime="20201115 23:01:45.256"></status>
</kw>
<msg timestamp="20201115 23:01:45.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.969" endtime="20201115 23:01:45.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.261" endtime="20201115 23:01:45.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.269" endtime="20201115 23:01:45.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.967" endtime="20201115 23:01:45.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.965" endtime="20201115 23:01:45.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.276" level="INFO">${RESULT} = [{'time': 0.021992569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.320799999999863e-05, 'source_diff': 6.320799999999863e-05}, {'time': 0.022070583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:45.273" endtime="20201115 23:01:45.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.289" level="INFO">${ACCURACY} = {'diff': [6.320799999999863e-05, 6.32500000000008e-05, 6.292999999999924e-05, 6.311100000000111e-05, 6.347199999999845e-05, 6.295800000000185e-05, 6.365300000000032e-05, 6.329199999999952e-05, 6.2889e...</msg>
<status status="PASS" starttime="20201115 23:01:45.277" endtime="20201115 23:01:45.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.294" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.293" endtime="20201115 23:01:45.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.296" level="INFO">VALUE: [6.320799999999863e-05, 6.32500000000008e-05, 6.292999999999924e-05, 6.311100000000111e-05, 6.347199999999845e-05, 6.295800000000185e-05, 6.365300000000032e-05, 6.329199999999952e-05, 6.2889e-05, 6.268100000000193e-05, 6.273600000000074e-05, 6.27630000000004e-05, 6.326400000000038e-05, 6.331999999999866e-05, 6.327799999999995e-05, 6.330499999999961e-05, 6.32080000000021e-05, 6.30690000000024e-05, 6.334699999999832e-05, 6.295799999999838e-05, 6.354100000000029e-05, 6.326400000000038e-05, 6.276399999999988e-05, 6.272200000000117e-05, 6.30279999999997e-05, 6.336100000000136e-05, 6.281899999999868e-05, 6.309699999999807e-05, 6.301400000000013e-05, 6.348599999999802e-05, 6.304199999999927e-05, 6.363900000000075e-05, 6.356899999999943e-05, 6.327700000000047e-05, 6.318099999999896e-05, 6.298599999999752e-05, 6.311100000000111e-05, 6.304099999999979e-05, 6.341600000000017e-05, 6.298599999999752e-05, 6.337500000000093e-05, 6.334700000000179e-05, 6.358300000000247e-05, 6.2889e-05, 6.326400000000038e-05, 6.354199999999977e-05, 6.283399999999773e-05, 6.326400000000038e-05, 6.341699999999964e-05, 6.320900000000157e-05]</msg>
<status status="PASS" starttime="20201115 23:01:45.295" endtime="20201115 23:01:45.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.290" endtime="20201115 23:01:45.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.300" endtime="20201115 23:01:45.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.303" endtime="20201115 23:01:45.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.301" endtime="20201115 23:01:45.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.298" endtime="20201115 23:01:45.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.931" endtime="20201115 23:01:45.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.929" endtime="20201115 23:01:45.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.929" endtime="20201115 23:01:45.324"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.326" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.335" endtime="20201115 23:01:45.354"></status>
</kw>
<msg timestamp="20201115 23:01:45.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.333" endtime="20201115 23:01:45.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.355" endtime="20201115 23:01:45.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.358" endtime="20201115 23:01:45.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.331" endtime="20201115 23:01:45.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.328" endtime="20201115 23:01:45.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.367" endtime="20201115 23:01:45.653"></status>
</kw>
<msg timestamp="20201115 23:01:45.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022662347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.366" endtime="20201115 23:01:45.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022662347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.658" endtime="20201115 23:01:45.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.666" endtime="20201115 23:01:45.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.363" endtime="20201115 23:01:45.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.361" endtime="20201115 23:01:45.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.673" level="INFO">${RESULT} = [{'time': 0.022662347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.381899999999968e-05, 'source_diff': 6.381899999999968e-05}, {'time': 0.022739319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:45.669" endtime="20201115 23:01:45.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.687" level="INFO">${ACCURACY} = {'diff': [6.381899999999968e-05, 6.400000000000156e-05, 6.399999999999809e-05, 6.372200000000217e-05, 6.397199999999895e-05, 6.427800000000095e-05, 6.427800000000095e-05, 6.406899999999993e-05, 6.4277...</msg>
<status status="PASS" starttime="20201115 23:01:45.674" endtime="20201115 23:01:45.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.692" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.691" endtime="20201115 23:01:45.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.694" level="INFO">VALUE: [6.381899999999968e-05, 6.400000000000156e-05, 6.399999999999809e-05, 6.372200000000217e-05, 6.397199999999895e-05, 6.427800000000095e-05, 6.427800000000095e-05, 6.406899999999993e-05, 6.427799999999748e-05, 6.397200000000242e-05, 6.377800000000045e-05, 6.416700000000039e-05, 6.465300000000132e-05, 6.445900000000282e-05, 6.437499999999846e-05, 6.390300000000057e-05, 6.42500000000018e-05, 6.413900000000125e-05, 6.419400000000006e-05, 6.415200000000135e-05, 6.430600000000009e-05, 6.431900000000018e-05, 6.40280000000007e-05, 6.401400000000113e-05, 6.384699999999882e-05, 6.405499999999689e-05, 6.462500000000218e-05, 6.418099999999996e-05, 6.404200000000027e-05, 6.391700000000014e-05, 6.408399999999898e-05, 6.411099999999864e-05, 6.462499999999871e-05, 6.411099999999864e-05, 6.437499999999846e-05, 6.423599999999877e-05, 6.384700000000229e-05, 6.433300000000322e-05, 6.399999999999809e-05, 6.416700000000039e-05, 6.42219999999992e-05, 6.40829999999995e-05, 6.433299999999975e-05, 6.470800000000013e-05, 6.433299999999975e-05, 6.36950000000025e-05, 6.426400000000138e-05, 6.423700000000171e-05, 6.373599999999827e-05, 6.400000000000156e-05]</msg>
<status status="PASS" starttime="20201115 23:01:45.693" endtime="20201115 23:01:45.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.688" endtime="20201115 23:01:45.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.697" endtime="20201115 23:01:45.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.701" endtime="20201115 23:01:45.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.699" endtime="20201115 23:01:45.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.696" endtime="20201115 23:01:45.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.327" endtime="20201115 23:01:45.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.325" endtime="20201115 23:01:45.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.324" endtime="20201115 23:01:45.722"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.724" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.732" endtime="20201115 23:01:45.752"></status>
</kw>
<msg timestamp="20201115 23:01:45.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.731" endtime="20201115 23:01:45.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.753" endtime="20201115 23:01:45.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.756" endtime="20201115 23:01:45.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.728" endtime="20201115 23:01:45.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.726" endtime="20201115 23:01:45.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.765" endtime="20201115 23:01:46.051"></status>
</kw>
<msg timestamp="20201115 23:01:46.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.764" endtime="20201115 23:01:46.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.056" endtime="20201115 23:01:46.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.064" endtime="20201115 23:01:46.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.761" endtime="20201115 23:01:46.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.760" endtime="20201115 23:01:46.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.071" level="INFO">${RESULT} = [{'time': 0.021905986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.487499999999896e-05, 'source_diff': 6.487499999999896e-05}, {'time': 0.021984056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:46.067" endtime="20201115 23:01:46.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.084" level="INFO">${ACCURACY} = {'diff': [6.487499999999896e-05, 6.552799999999873e-05, 6.565300000000232e-05, 6.54029999999986e-05, 6.495800000000038e-05, 6.566699999999842e-05, 6.490300000000157e-05, 6.512499999999921e-05, 6.53479...</msg>
<status status="PASS" starttime="20201115 23:01:46.072" endtime="20201115 23:01:46.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.089" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.088" endtime="20201115 23:01:46.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.091" level="INFO">VALUE: [6.487499999999896e-05, 6.552799999999873e-05, 6.565300000000232e-05, 6.54029999999986e-05, 6.495800000000038e-05, 6.566699999999842e-05, 6.490300000000157e-05, 6.512499999999921e-05, 6.53479999999998e-05, 6.491600000000167e-05, 6.52220000000002e-05, 6.526299999999943e-05, 6.552699999999925e-05, 6.47639999999984e-05, 6.506900000000093e-05, 6.545799999999741e-05, 6.52500000000028e-05, 6.493100000000071e-05, 6.54440000000013e-05, 6.566699999999842e-05, 6.49029999999981e-05, 6.565299999999885e-05, 6.49029999999981e-05, 6.47500000000023e-05, 6.52500000000028e-05, 6.480500000000111e-05, 6.548699999999949e-05, 6.491600000000167e-05, 6.511199999999912e-05, 6.527700000000247e-05, 6.554100000000229e-05, 6.499999999999909e-05, 6.550000000000306e-05, 6.547200000000045e-05, 6.529200000000152e-05, 6.474999999999884e-05, 6.50419999999978e-05, 6.527800000000195e-05, 6.53890000000025e-05, 6.472200000000317e-05, 6.541700000000164e-05, 6.547200000000045e-05, 6.554200000000177e-05, 6.547299999999992e-05, 6.519500000000053e-05, 6.470800000000013e-05, 6.473600000000274e-05, 6.555499999999839e-05, 6.484699999999982e-05, 6.497199999999995e-05]</msg>
<status status="PASS" starttime="20201115 23:01:46.090" endtime="20201115 23:01:46.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.085" endtime="20201115 23:01:46.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.094" endtime="20201115 23:01:46.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.098" endtime="20201115 23:01:46.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.096" endtime="20201115 23:01:46.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.093" endtime="20201115 23:01:46.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.725" endtime="20201115 23:01:46.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.723" endtime="20201115 23:01:46.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.722" endtime="20201115 23:01:46.119"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.121" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.130" endtime="20201115 23:01:46.150"></status>
</kw>
<msg timestamp="20201115 23:01:46.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.128" endtime="20201115 23:01:46.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.151" endtime="20201115 23:01:46.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.154" endtime="20201115 23:01:46.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.125" endtime="20201115 23:01:46.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.123" endtime="20201115 23:01:46.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.163" endtime="20201115 23:01:46.449"></status>
</kw>
<msg timestamp="20201115 23:01:46.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.161" endtime="20201115 23:01:46.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.453" endtime="20201115 23:01:46.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.461" endtime="20201115 23:01:46.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.158" endtime="20201115 23:01:46.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.157" endtime="20201115 23:01:46.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.469" level="INFO">${RESULT} = [{'time': 0.022418764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.605600000000184e-05, 'source_diff': 6.605600000000184e-05}, {'time': 0.022496736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:46.465" endtime="20201115 23:01:46.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.482" level="INFO">${ACCURACY} = {'diff': [6.605600000000184e-05, 6.581899999999821e-05, 6.65969999999981e-05, 6.633300000000175e-05, 6.573600000000027e-05, 6.602799999999923e-05, 6.663900000000028e-05, 6.577800000000245e-05, 6.63620...</msg>
<status status="PASS" starttime="20201115 23:01:46.470" endtime="20201115 23:01:46.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.487" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.486" endtime="20201115 23:01:46.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.489" level="INFO">VALUE: [6.605600000000184e-05, 6.581899999999821e-05, 6.65969999999981e-05, 6.633300000000175e-05, 6.573600000000027e-05, 6.602799999999923e-05, 6.663900000000028e-05, 6.577800000000245e-05, 6.636200000000037e-05, 6.645899999999788e-05, 6.625000000000034e-05, 6.602799999999923e-05, 6.661100000000114e-05, 6.581899999999821e-05, 6.633300000000175e-05, 6.649999999999712e-05, 6.574999999999984e-05, 6.638900000000003e-05, 6.652799999999973e-05, 6.601399999999966e-05, 6.579199999999855e-05, 6.666699999999942e-05, 6.64029999999996e-05, 6.593100000000171e-05, 6.644500000000178e-05, 6.648600000000102e-05, 6.651400000000016e-05, 6.57639999999994e-05, 6.595900000000085e-05, 6.64159999999997e-05, 6.633300000000175e-05, 6.597200000000095e-05, 6.658299999999853e-05, 6.595799999999791e-05, 6.623600000000077e-05, 6.627799999999948e-05, 6.600000000000009e-05, 6.574999999999984e-05, 6.593099999999824e-05, 6.606900000000193e-05, 6.638900000000003e-05, 6.566699999999842e-05, 6.606899999999846e-05, 6.619500000000153e-05, 6.57639999999994e-05, 6.650000000000059e-05, 6.62639999999999e-05, 6.62359999999973e-05, 6.620800000000163e-05, 6.652799999999973e-05]</msg>
<status status="PASS" starttime="20201115 23:01:46.488" endtime="20201115 23:01:46.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.483" endtime="20201115 23:01:46.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.492" endtime="20201115 23:01:46.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.496" endtime="20201115 23:01:46.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.494" endtime="20201115 23:01:46.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.491" endtime="20201115 23:01:46.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.122" endtime="20201115 23:01:46.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.120" endtime="20201115 23:01:46.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.119" endtime="20201115 23:01:46.517"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.520" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.528" endtime="20201115 23:01:46.547"></status>
</kw>
<msg timestamp="20201115 23:01:46.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.526" endtime="20201115 23:01:46.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.549" endtime="20201115 23:01:46.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.552" endtime="20201115 23:01:46.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.524" endtime="20201115 23:01:46.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.522" endtime="20201115 23:01:46.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.561" endtime="20201115 23:01:46.846"></status>
</kw>
<msg timestamp="20201115 23:01:46.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022371097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022438069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.559" endtime="20201115 23:01:46.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022371097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022438069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.851" endtime="20201115 23:01:46.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.859" endtime="20201115 23:01:46.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.556" endtime="20201115 23:01:46.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.555" endtime="20201115 23:01:46.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.866" level="INFO">${RESULT} = [{'time': 0.022438069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.697200000000195e-05, 'source_diff': 6.697200000000195e-05}, {'time': 0.022517139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:46.862" endtime="20201115 23:01:46.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.879" level="INFO">${ACCURACY} = {'diff': [6.697200000000195e-05, 6.676399999999694e-05, 6.734699999999885e-05, 6.697200000000195e-05, 6.670799999999866e-05, 6.74030000000006e-05, 6.751400000000116e-05, 6.672199999999823e-05, 6.74030...</msg>
<status status="PASS" starttime="20201115 23:01:46.866" endtime="20201115 23:01:46.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.883" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.882" endtime="20201115 23:01:46.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.886" level="INFO">VALUE: [6.697200000000195e-05, 6.676399999999694e-05, 6.734699999999885e-05, 6.697200000000195e-05, 6.670799999999866e-05, 6.74030000000006e-05, 6.751400000000116e-05, 6.672199999999823e-05, 6.74030000000006e-05, 6.748700000000149e-05, 6.722199999999873e-05, 6.74160000000007e-05, 6.702800000000023e-05, 6.669500000000203e-05, 6.683400000000173e-05, 6.672300000000117e-05, 6.765199999999791e-05, 6.677799999999998e-05, 6.737500000000146e-05, 6.718000000000002e-05, 6.702800000000023e-05, 6.708299999999903e-05, 6.765199999999791e-05, 6.741700000000017e-05, 6.734699999999885e-05, 6.762500000000171e-05, 6.681999999999869e-05, 6.741700000000017e-05, 6.694500000000228e-05, 6.683399999999826e-05, 6.695900000000185e-05, 6.676300000000093e-05, 6.679100000000007e-05, 6.656899999999896e-05, 6.7277000000001e-05, 6.733299999999928e-05, 6.729200000000005e-05, 6.700000000000109e-05, 6.674999999999737e-05, 6.74030000000006e-05, 6.737500000000146e-05, 6.733299999999928e-05, 6.745799999999941e-05, 6.75420000000003e-05, 6.747300000000192e-05, 6.705499999999989e-05, 6.723600000000177e-05, 6.725000000000134e-05, 6.719399999999959e-05, 6.702700000000075e-05]</msg>
<status status="PASS" starttime="20201115 23:01:46.884" endtime="20201115 23:01:46.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.880" endtime="20201115 23:01:46.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.890" endtime="20201115 23:01:46.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.893" endtime="20201115 23:01:46.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.891" endtime="20201115 23:01:46.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.888" endtime="20201115 23:01:46.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.520" endtime="20201115 23:01:46.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.518" endtime="20201115 23:01:46.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.518" endtime="20201115 23:01:46.914"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.916" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.925" endtime="20201115 23:01:46.945"></status>
</kw>
<msg timestamp="20201115 23:01:46.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.923" endtime="20201115 23:01:46.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.947" endtime="20201115 23:01:46.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.949" endtime="20201115 23:01:46.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.920" endtime="20201115 23:01:46.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.918" endtime="20201115 23:01:46.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.958" endtime="20201115 23:01:47.244"></status>
</kw>
<msg timestamp="20201115 23:01:47.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022650403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.957" endtime="20201115 23:01:47.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022650403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.248" endtime="20201115 23:01:47.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.256" endtime="20201115 23:01:47.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.954" endtime="20201115 23:01:47.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.952" endtime="20201115 23:01:47.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:47.263" level="INFO">${RESULT} = [{'time': 0.022718222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.781900000000021e-05, 'source_diff': 6.781900000000021e-05}, {'time': 0.022798292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:47.260" endtime="20201115 23:01:47.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.278" level="INFO">${ACCURACY} = {'diff': [6.781900000000021e-05, 6.809800000000255e-05, 6.847199999999998e-05, 6.847199999999998e-05, 6.797199999999948e-05, 6.837499999999899e-05, 6.768099999999999e-05, 6.834699999999985e-05, 6.7874...</msg>
<status status="PASS" starttime="20201115 23:01:47.264" endtime="20201115 23:01:47.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.282" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.281" endtime="20201115 23:01:47.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.285" level="INFO">VALUE: [6.781900000000021e-05, 6.809800000000255e-05, 6.847199999999998e-05, 6.847199999999998e-05, 6.797199999999948e-05, 6.837499999999899e-05, 6.768099999999999e-05, 6.834699999999985e-05, 6.787499999999849e-05, 6.845899999999988e-05, 6.85420000000013e-05, 6.845800000000041e-05, 6.840199999999866e-05, 6.806900000000046e-05, 6.82640000000019e-05, 6.845800000000041e-05, 6.795799999999991e-05, 6.787499999999849e-05, 6.794400000000034e-05, 6.811100000000264e-05, 6.786099999999892e-05, 6.788899999999806e-05, 6.822199999999973e-05, 6.768099999999999e-05, 6.806999999999994e-05, 6.847199999999998e-05, 6.854199999999783e-05, 6.801399999999819e-05, 6.865300000000185e-05, 6.787499999999849e-05, 6.840199999999866e-05, 6.80969999999996e-05, 6.856900000000096e-05, 6.797199999999948e-05, 6.838899999999856e-05, 6.806900000000046e-05, 6.777799999999751e-05, 6.823600000000277e-05, 6.806999999999994e-05, 6.813899999999831e-05, 6.858299999999706e-05, 6.779200000000055e-05, 6.851300000000268e-05, 6.790299999999763e-05, 6.806999999999994e-05, 6.781999999999969e-05, 6.797299999999895e-05, 6.82909999999981e-05, 6.815200000000188e-05, 6.84160000000017e-05]</msg>
<status status="PASS" starttime="20201115 23:01:47.283" endtime="20201115 23:01:47.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.279" endtime="20201115 23:01:47.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.288" endtime="20201115 23:01:47.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.292" endtime="20201115 23:01:47.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.290" endtime="20201115 23:01:47.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.287" endtime="20201115 23:01:47.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.917" endtime="20201115 23:01:47.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.915" endtime="20201115 23:01:47.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.914" endtime="20201115 23:01:47.313"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.315" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.323" endtime="20201115 23:01:47.343"></status>
</kw>
<msg timestamp="20201115 23:01:47.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.322" endtime="20201115 23:01:47.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.344" endtime="20201115 23:01:47.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.347" endtime="20201115 23:01:47.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.319" endtime="20201115 23:01:47.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.317" endtime="20201115 23:01:47.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.356" endtime="20201115 23:01:47.642"></status>
</kw>
<msg timestamp="20201115 23:01:47.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.354" endtime="20201115 23:01:47.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.646" endtime="20201115 23:01:47.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.654" endtime="20201115 23:01:47.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.352" endtime="20201115 23:01:47.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.350" endtime="20201115 23:01:47.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:47.661" level="INFO">${RESULT} = [{'time': 0.021961222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.904099999999885e-05, 'source_diff': 6.904099999999885e-05}, {'time': 0.022043236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:47.658" endtime="20201115 23:01:47.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.675" level="INFO">${ACCURACY} = {'diff': [6.904099999999885e-05, 6.961100000000067e-05, 6.965300000000285e-05, 6.907000000000094e-05, 6.965199999999991e-05, 6.938899999999956e-05, 6.90970000000006e-05, 6.937499999999999e-05, 6.87639...</msg>
<status status="PASS" starttime="20201115 23:01:47.663" endtime="20201115 23:01:47.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.679" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.678" endtime="20201115 23:01:47.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.682" level="INFO">VALUE: [6.904099999999885e-05, 6.961100000000067e-05, 6.965300000000285e-05, 6.907000000000094e-05, 6.965199999999991e-05, 6.938899999999956e-05, 6.90970000000006e-05, 6.937499999999999e-05, 6.876399999999894e-05, 6.934799999999686e-05, 6.958300000000153e-05, 6.940299999999913e-05, 6.887499999999949e-05, 6.893000000000177e-05, 6.904099999999885e-05, 6.92909999999991e-05, 6.958300000000153e-05, 6.881900000000121e-05, 6.920799999999769e-05, 6.884700000000035e-05, 6.901400000000266e-05, 6.890299999999863e-05, 6.919500000000106e-05, 6.931899999999824e-05, 6.92230000000002e-05, 6.950000000000012e-05, 6.951399999999969e-05, 6.944499999999784e-05, 6.958299999999806e-05, 6.941599999999923e-05, 6.937499999999999e-05, 6.920800000000116e-05, 6.877799999999851e-05, 6.922200000000073e-05, 6.938899999999956e-05, 6.90420000000018e-05, 6.930500000000214e-05, 6.954199999999883e-05, 6.886099999999992e-05, 6.950000000000012e-05, 6.880600000000112e-05, 6.920900000000063e-05, 6.897200000000048e-05, 6.943099999999827e-05, 6.907000000000094e-05, 6.966599999999948e-05, 6.952699999999978e-05, 6.870800000000066e-05, 6.883300000000078e-05, 6.930499999999867e-05]</msg>
<status status="PASS" starttime="20201115 23:01:47.681" endtime="20201115 23:01:47.682"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.676" endtime="20201115 23:01:47.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.685" endtime="20201115 23:01:47.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.688" endtime="20201115 23:01:47.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.687" endtime="20201115 23:01:47.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.683" endtime="20201115 23:01:47.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.316" endtime="20201115 23:01:47.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.314" endtime="20201115 23:01:47.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.313" endtime="20201115 23:01:47.710"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.712" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.720" endtime="20201115 23:01:47.740"></status>
</kw>
<msg timestamp="20201115 23:01:47.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.719" endtime="20201115 23:01:47.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.741" endtime="20201115 23:01:47.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.744" endtime="20201115 23:01:47.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.716" endtime="20201115 23:01:47.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.714" endtime="20201115 23:01:47.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.753" endtime="20201115 23:01:48.039"></status>
</kw>
<msg timestamp="20201115 23:01:48.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.751" endtime="20201115 23:01:48.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.043" endtime="20201115 23:01:48.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.051" endtime="20201115 23:01:48.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.748" endtime="20201115 23:01:48.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.747" endtime="20201115 23:01:48.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.058" level="INFO">${RESULT} = [{'time': 0.022017056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.050000000000112e-05, 'source_diff': 7.050000000000112e-05}, {'time': 0.022101042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:48.055" endtime="20201115 23:01:48.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:48.072" level="INFO">${ACCURACY} = {'diff': [7.050000000000112e-05, 7.019500000000206e-05, 6.988900000000006e-05, 6.969499999999809e-05, 7.040200000000066e-05, 6.998700000000052e-05, 6.997200000000148e-05, 6.970800000000166e-05, 7.0110...</msg>
<status status="PASS" starttime="20201115 23:01:48.059" endtime="20201115 23:01:48.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.076" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:01:48.075" endtime="20201115 23:01:48.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.078" level="INFO">VALUE: [7.050000000000112e-05, 7.019500000000206e-05, 6.988900000000006e-05, 6.969499999999809e-05, 7.040200000000066e-05, 6.998700000000052e-05, 6.997200000000148e-05, 6.970800000000166e-05, 7.01109999999977e-05, 6.977799999999951e-05, 7.040300000000013e-05, 7.062500000000124e-05, 7.008299999999856e-05, 6.979199999999908e-05, 7.036099999999795e-05, 7.059699999999863e-05, 6.981999999999822e-05, 7.047300000000145e-05, 7.002800000000323e-05, 7.002799999999976e-05, 7.006999999999847e-05, 7.065200000000091e-05, 6.981899999999874e-05, 7.022199999999826e-05, 7.008300000000203e-05, 6.977799999999951e-05, 7.047300000000145e-05, 7.002799999999976e-05, 6.983399999999779e-05, 7.05559999999994e-05, 7.026400000000044e-05, 7.051399999999722e-05, 6.986100000000092e-05, 7.050000000000112e-05, 7.063900000000081e-05, 7.012499999999727e-05, 7.038900000000056e-05, 7.011100000000117e-05, 7.025000000000087e-05, 7.036099999999795e-05, 7.022199999999826e-05, 7.045800000000241e-05, 7.023599999999783e-05, 7.004199999999933e-05, 6.970799999999819e-05, 7.033299999999881e-05, 7.002799999999976e-05, 7.020799999999869e-05, 7.040300000000013e-05, 6.988900000000006e-05]</msg>
<status status="PASS" starttime="20201115 23:01:48.077" endtime="20201115 23:01:48.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.072" endtime="20201115 23:01:48.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.082" endtime="20201115 23:01:48.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:48.085" endtime="20201115 23:01:48.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.083" endtime="20201115 23:01:48.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.080" endtime="20201115 23:01:48.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.713" endtime="20201115 23:01:48.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.711" endtime="20201115 23:01:48.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.710" endtime="20201115 23:01:48.106"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.108" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.117" endtime="20201115 23:01:48.136"></status>
</kw>
<msg timestamp="20201115 23:01:48.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.115" endtime="20201115 23:01:48.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.138" endtime="20201115 23:01:48.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.140" endtime="20201115 23:01:48.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.112" endtime="20201115 23:01:48.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.110" endtime="20201115 23:01:48.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.150" endtime="20201115 23:01:48.434"></status>
</kw>
<msg timestamp="20201115 23:01:48.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.148" endtime="20201115 23:01:48.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.438" endtime="20201115 23:01:48.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.447" endtime="20201115 23:01:48.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.145" endtime="20201115 23:01:48.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.144" endtime="20201115 23:01:48.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.454" level="INFO">${RESULT} = [{'time': 0.021986431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.165300000000138e-05, 'source_diff': 7.165300000000138e-05}, {'time': 0.022070375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:48.450" endtime="20201115 23:01:48.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:48.467" level="INFO">${ACCURACY} = {'diff': [7.165300000000138e-05, 7.149999999999865e-05, 7.152800000000126e-05, 7.083299999999931e-05, 7.15690000000005e-05, 7.165299999999791e-05, 7.147299999999898e-05, 7.102800000000076e-05, 7.17219...</msg>
<status status="PASS" starttime="20201115 23:01:48.455" endtime="20201115 23:01:48.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.471" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:01:48.470" endtime="20201115 23:01:48.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.474" level="INFO">VALUE: [7.165300000000138e-05, 7.149999999999865e-05, 7.152800000000126e-05, 7.083299999999931e-05, 7.15690000000005e-05, 7.165299999999791e-05, 7.147299999999898e-05, 7.102800000000076e-05, 7.172199999999976e-05, 7.080500000000017e-05, 7.133299999999981e-05, 7.136100000000242e-05, 7.083299999999931e-05, 7.127800000000101e-05, 7.083300000000278e-05, 7.098600000000205e-05, 7.099999999999815e-05, 7.166700000000095e-05, 7.072200000000223e-05, 7.15690000000005e-05, 7.072199999999876e-05, 7.127800000000101e-05, 7.088899999999759e-05, 7.12499999999984e-05, 7.113799999999837e-05, 7.098599999999858e-05, 7.137499999999852e-05, 7.12499999999984e-05, 7.077800000000051e-05, 7.055499999999992e-05, 7.09170000000002e-05, 7.069399999999962e-05, 7.113900000000131e-05, 7.10559999999999e-05, 7.138800000000209e-05, 7.100000000000162e-05, 7.159699999999963e-05, 7.113899999999784e-05, 7.163900000000181e-05, 7.108399999999904e-05, 7.112499999999827e-05, 7.12499999999984e-05, 7.068000000000005e-05, 7.084699999999888e-05, 7.098600000000205e-05, 7.149999999999865e-05, 7.101399999999772e-05, 7.163900000000181e-05, 7.158300000000006e-05, 7.137499999999852e-05]</msg>
<status status="PASS" starttime="20201115 23:01:48.472" endtime="20201115 23:01:48.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.468" endtime="20201115 23:01:48.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.477" endtime="20201115 23:01:48.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:48.481" endtime="20201115 23:01:48.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.479" endtime="20201115 23:01:48.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.475" endtime="20201115 23:01:48.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.109" endtime="20201115 23:01:48.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.107" endtime="20201115 23:01:48.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.106" endtime="20201115 23:01:48.502"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.504" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.512" endtime="20201115 23:01:48.533"></status>
</kw>
<msg timestamp="20201115 23:01:48.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.511" endtime="20201115 23:01:48.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.534" endtime="20201115 23:01:48.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.537" endtime="20201115 23:01:48.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.508" endtime="20201115 23:01:48.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.506" endtime="20201115 23:01:48.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.546" endtime="20201115 23:01:48.832"></status>
</kw>
<msg timestamp="20201115 23:01:48.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022850472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.545" endtime="20201115 23:01:48.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022850472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.836" endtime="20201115 23:01:48.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.844" endtime="20201115 23:01:48.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.542" endtime="20201115 23:01:48.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.540" endtime="20201115 23:01:48.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.851" level="INFO">${RESULT} = [{'time': 0.022922375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.190299999999816e-05, 'source_diff': 7.190299999999816e-05}, {'time': 0.023009375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:48.847" endtime="20201115 23:01:48.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:48.865" level="INFO">${ACCURACY} = {'diff': [7.190299999999816e-05, 7.158300000000006e-05, 7.244400000000137e-05, 7.184699999999988e-05, 7.245800000000094e-05, 7.197200000000001e-05, 7.22499999999994e-05, 7.265300000000238e-05, 7.19029...</msg>
<status status="PASS" starttime="20201115 23:01:48.852" endtime="20201115 23:01:48.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.870" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:01:48.869" endtime="20201115 23:01:48.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.872" level="INFO">VALUE: [7.190299999999816e-05, 7.158300000000006e-05, 7.244400000000137e-05, 7.184699999999988e-05, 7.245800000000094e-05, 7.197200000000001e-05, 7.22499999999994e-05, 7.265300000000238e-05, 7.190299999999816e-05, 7.226399999999897e-05, 7.22910000000021e-05, 7.222200000000026e-05, 7.22629999999995e-05, 7.21109999999997e-05, 7.197200000000001e-05, 7.26110000000002e-05, 7.233300000000081e-05, 7.22499999999994e-05, 7.26110000000002e-05, 7.213899999999884e-05, 7.266699999999848e-05, 7.172299999999923e-05, 7.237499999999952e-05, 7.255599999999793e-05, 7.188799999999912e-05, 7.179099999999813e-05, 7.177699999999856e-05, 7.21109999999997e-05, 7.222200000000026e-05, 7.234700000000038e-05, 7.249999999999965e-05, 7.191699999999773e-05, 7.19309999999973e-05, 7.170800000000019e-05, 7.265299999999891e-05, 7.184699999999988e-05, 7.259700000000063e-05, 7.194500000000034e-05, 7.208400000000004e-05, 7.197300000000295e-05, 7.263899999999934e-05, 7.233400000000029e-05, 7.23049999999982e-05, 7.190200000000216e-05, 7.252799999999879e-05, 7.254199999999836e-05, 7.190299999999816e-05, 7.238900000000256e-05, 7.238899999999909e-05, 7.233299999999734e-05]</msg>
<status status="PASS" starttime="20201115 23:01:48.871" endtime="20201115 23:01:48.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.866" endtime="20201115 23:01:48.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.876" endtime="20201115 23:01:48.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:48.879" endtime="20201115 23:01:48.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.877" endtime="20201115 23:01:48.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.874" endtime="20201115 23:01:48.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.505" endtime="20201115 23:01:48.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.503" endtime="20201115 23:01:48.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.502" endtime="20201115 23:01:48.900"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.902" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.911" endtime="20201115 23:01:48.931"></status>
</kw>
<msg timestamp="20201115 23:01:48.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.910" endtime="20201115 23:01:48.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.932" endtime="20201115 23:01:48.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.935" endtime="20201115 23:01:48.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.906" endtime="20201115 23:01:48.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.904" endtime="20201115 23:01:48.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.944" endtime="20201115 23:01:49.228"></status>
</kw>
<msg timestamp="20201115 23:01:49.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022498667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.942" endtime="20201115 23:01:49.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022498667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.233" endtime="20201115 23:01:49.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.241" endtime="20201115 23:01:49.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.940" endtime="20201115 23:01:49.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.938" endtime="20201115 23:01:49.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:49.248" level="INFO">${RESULT} = [{'time': 0.022498667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.322300000000073e-05, 'source_diff': 7.322300000000073e-05}, {'time': 0.022586653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:49.244" endtime="20201115 23:01:49.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:49.261" level="INFO">${ACCURACY} = {'diff': [7.322300000000073e-05, 7.283400000000079e-05, 7.307000000000147e-05, 7.338899999999662e-05, 7.367999999999958e-05, 7.312500000000027e-05, 7.36110000000012e-05, 7.312500000000027e-05, 7.32770...</msg>
<status status="PASS" starttime="20201115 23:01:49.249" endtime="20201115 23:01:49.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.265" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:01:49.264" endtime="20201115 23:01:49.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.268" level="INFO">VALUE: [7.322300000000073e-05, 7.283400000000079e-05, 7.307000000000147e-05, 7.338899999999662e-05, 7.367999999999958e-05, 7.312500000000027e-05, 7.36110000000012e-05, 7.312500000000027e-05, 7.327700000000006e-05, 7.365299999999991e-05, 7.286100000000045e-05, 7.363900000000034e-05, 7.272200000000076e-05, 7.323599999999736e-05, 7.302799999999929e-05, 7.290300000000263e-05, 7.272299999999676e-05, 7.301399999999972e-05, 7.279099999999913e-05, 7.257000000000097e-05, 7.355499999999945e-05, 7.35690000000025e-05, 7.32769999999966e-05, 7.318099999999855e-05, 7.334700000000138e-05, 7.279200000000208e-05, 7.338900000000009e-05, 7.288899999999959e-05, 7.284700000000088e-05, 7.283300000000131e-05, 7.345800000000194e-05, 7.276399999999947e-05, 7.349999999999718e-05, 7.315299999999941e-05, 7.340299999999966e-05, 7.290299999999916e-05, 7.344400000000237e-05, 7.369399999999915e-05, 7.290199999999969e-05, 7.340300000000313e-05, 7.25690000000015e-05, 7.333399999999782e-05, 7.320799999999822e-05, 7.359699999999816e-05, 7.269499999999762e-05, 7.35829999999986e-05, 7.348600000000108e-05, 7.309800000000061e-05, 7.344499999999837e-05, 7.283400000000079e-05]</msg>
<status status="PASS" starttime="20201115 23:01:49.266" endtime="20201115 23:01:49.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.262" endtime="20201115 23:01:49.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.271" endtime="20201115 23:01:49.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:49.274" endtime="20201115 23:01:49.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.273" endtime="20201115 23:01:49.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.269" endtime="20201115 23:01:49.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.903" endtime="20201115 23:01:49.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.901" endtime="20201115 23:01:49.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.901" endtime="20201115 23:01:49.300"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.302" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.310" endtime="20201115 23:01:49.330"></status>
</kw>
<msg timestamp="20201115 23:01:49.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.309" endtime="20201115 23:01:49.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.331" endtime="20201115 23:01:49.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.334" endtime="20201115 23:01:49.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.306" endtime="20201115 23:01:49.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.304" endtime="20201115 23:01:49.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.343" endtime="20201115 23:01:49.629"></status>
</kw>
<msg timestamp="20201115 23:01:49.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026131903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026206514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.341" endtime="20201115 23:01:49.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026131903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026206514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.633" endtime="20201115 23:01:49.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.641" endtime="20201115 23:01:49.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.339" endtime="20201115 23:01:49.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.337" endtime="20201115 23:01:49.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:49.648" level="INFO">${RESULT} = [{'time': 0.026206514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.461099999999873e-05, 'source_diff': 7.461099999999873e-05}, {'time': 0.026294528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:49.644" endtime="20201115 23:01:49.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:49.661" level="INFO">${ACCURACY} = {'diff': [7.461099999999873e-05, 7.358400000000154e-05, 7.431999999999925e-05, 7.4069999999999e-05, 7.397300000000148e-05, 7.465300000000091e-05, 7.39439999999994e-05, 7.384699999999841e-05, 7.4526999...</msg>
<status status="PASS" starttime="20201115 23:01:49.649" endtime="20201115 23:01:49.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.666" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:01:49.665" endtime="20201115 23:01:49.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.668" level="INFO">VALUE: [7.461099999999873e-05, 7.358400000000154e-05, 7.431999999999925e-05, 7.4069999999999e-05, 7.397300000000148e-05, 7.465300000000091e-05, 7.39439999999994e-05, 7.384699999999841e-05, 7.452699999999784e-05, 7.434699999999891e-05, 7.445900000000241e-05, 7.465299999999744e-05, 7.390300000000016e-05, 7.454199999999689e-05, 7.387500000000102e-05, 7.447200000000251e-05, 7.422200000000226e-05, 7.40829999999991e-05, 7.461200000000168e-05, 7.438900000000109e-05, 7.384800000000136e-05, 7.413900000000084e-05, 7.427800000000054e-05, 7.434699999999891e-05, 7.447199999999904e-05, 7.46379999999984e-05, 7.373600000000133e-05, 7.369399999999915e-05, 7.390300000000016e-05, 7.422300000000173e-05, 7.39439999999994e-05, 7.370800000000219e-05, 7.370799999999872e-05, 7.440300000000066e-05, 7.413900000000084e-05, 7.440300000000066e-05, 7.395799999999897e-05, 7.390300000000016e-05, 7.408399999999857e-05, 7.395799999999897e-05, 7.436100000000195e-05, 7.451400000000122e-05, 7.37500000000009e-05, 7.398600000000158e-05, 7.427800000000054e-05, 7.381999999999875e-05, 7.377800000000004e-05, 7.459699999999916e-05, 7.461099999999873e-05, 7.390300000000016e-05]</msg>
<status status="PASS" starttime="20201115 23:01:49.667" endtime="20201115 23:01:49.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.662" endtime="20201115 23:01:49.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.672" endtime="20201115 23:01:49.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:49.675" endtime="20201115 23:01:49.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.674" endtime="20201115 23:01:49.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.670" endtime="20201115 23:01:49.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.303" endtime="20201115 23:01:49.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.301" endtime="20201115 23:01:49.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.300" endtime="20201115 23:01:49.696"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.699" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.707" endtime="20201115 23:01:49.726"></status>
</kw>
<msg timestamp="20201115 23:01:49.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.705" endtime="20201115 23:01:49.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.728" endtime="20201115 23:01:49.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.731" endtime="20201115 23:01:49.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.703" endtime="20201115 23:01:49.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.701" endtime="20201115 23:01:49.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.740" endtime="20201115 23:01:50.025"></status>
</kw>
<msg timestamp="20201115 23:01:50.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.738" endtime="20201115 23:01:50.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.029" endtime="20201115 23:01:50.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.037" endtime="20201115 23:01:50.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.735" endtime="20201115 23:01:50.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.734" endtime="20201115 23:01:50.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:50.044" level="INFO">${RESULT} = [{'time': 0.021915028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513899999999837e-05, 'source_diff': 7.513899999999837e-05}, {'time': 0.022003972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:50.041" endtime="20201115 23:01:50.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:50.057" level="INFO">${ACCURACY} = {'diff': [7.513899999999837e-05, 7.53050000000012e-05, 7.563900000000234e-05, 7.541700000000123e-05, 7.519400000000065e-05, 7.516699999999751e-05, 7.527800000000154e-05, 7.524999999999893e-05, 7.55419...</msg>
<status status="PASS" starttime="20201115 23:01:50.045" endtime="20201115 23:01:50.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.062" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:01:50.061" endtime="20201115 23:01:50.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.065" level="INFO">VALUE: [7.513899999999837e-05, 7.53050000000012e-05, 7.563900000000234e-05, 7.541700000000123e-05, 7.519400000000065e-05, 7.516699999999751e-05, 7.527800000000154e-05, 7.524999999999893e-05, 7.554199999999789e-05, 7.556900000000102e-05, 7.493000000000083e-05, 7.551299999999928e-05, 7.473599999999886e-05, 7.540200000000219e-05, 7.509699999999966e-05, 7.483299999999984e-05, 7.49029999999977e-05, 7.502800000000129e-05, 7.53189999999973e-05, 7.534699999999991e-05, 7.551399999999875e-05, 7.565300000000191e-05, 7.500000000000215e-05, 7.513899999999837e-05, 7.472300000000223e-05, 7.522300000000273e-05, 7.472299999999876e-05, 7.509699999999966e-05, 7.511099999999923e-05, 7.502800000000129e-05, 7.50830000000001e-05, 7.554199999999789e-05, 7.517999999999761e-05, 7.554200000000136e-05, 7.552799999999832e-05, 7.501399999999825e-05, 7.472199999999929e-05, 7.515299999999794e-05, 7.552799999999832e-05, 7.483399999999932e-05, 7.477800000000104e-05, 7.522199999999979e-05, 7.551399999999875e-05, 7.495799999999997e-05, 7.498599999999911e-05, 7.505600000000043e-05, 7.538899999999862e-05, 7.497199999999954e-05, 7.536099999999948e-05, 7.555600000000093e-05]</msg>
<status status="PASS" starttime="20201115 23:01:50.063" endtime="20201115 23:01:50.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.058" endtime="20201115 23:01:50.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.068" endtime="20201115 23:01:50.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:50.071" endtime="20201115 23:01:50.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.070" endtime="20201115 23:01:50.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.066" endtime="20201115 23:01:50.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.699" endtime="20201115 23:01:50.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.697" endtime="20201115 23:01:50.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.697" endtime="20201115 23:01:50.092"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.095" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.103" endtime="20201115 23:01:50.124"></status>
</kw>
<msg timestamp="20201115 23:01:50.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.101" endtime="20201115 23:01:50.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.125" endtime="20201115 23:01:50.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.128" endtime="20201115 23:01:50.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.099" endtime="20201115 23:01:50.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.097" endtime="20201115 23:01:50.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.137" endtime="20201115 23:01:50.422"></status>
</kw>
<msg timestamp="20201115 23:01:50.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022708097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.136" endtime="20201115 23:01:50.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022708097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.426" endtime="20201115 23:01:50.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.434" endtime="20201115 23:01:50.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.133" endtime="20201115 23:01:50.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.131" endtime="20201115 23:01:50.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:50.441" level="INFO">${RESULT} = [{'time': 0.022708097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.633300000000134e-05, 'source_diff': 7.633300000000134e-05}, {'time': 0.022797111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:50.438" endtime="20201115 23:01:50.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:50.456" level="INFO">${ACCURACY} = {'diff': [7.633300000000134e-05, 7.602799999999882e-05, 7.597200000000054e-05, 7.634700000000091e-05, 7.604200000000186e-05, 7.619399999999818e-05, 7.5763999999999e-05, 7.623600000000036e-05, 7.652799...</msg>
<status status="PASS" starttime="20201115 23:01:50.443" endtime="20201115 23:01:50.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.461" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:01:50.460" endtime="20201115 23:01:50.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.463" level="INFO">VALUE: [7.633300000000134e-05, 7.602799999999882e-05, 7.597200000000054e-05, 7.634700000000091e-05, 7.604200000000186e-05, 7.619399999999818e-05, 7.5763999999999e-05, 7.623600000000036e-05, 7.652799999999932e-05, 7.618099999999808e-05, 7.595900000000044e-05, 7.654200000000236e-05, 7.654200000000236e-05, 7.604099999999892e-05, 7.6457999999998e-05, 7.641600000000276e-05, 7.605599999999796e-05, 7.65969999999977e-05, 7.588899999999912e-05, 7.615300000000241e-05, 7.64029999999992e-05, 7.599999999999968e-05, 7.572200000000029e-05, 7.595900000000044e-05, 7.6070000000001e-05, 7.643099999999833e-05, 7.588899999999912e-05, 7.655499999999898e-05, 7.640200000000319e-05, 7.618000000000208e-05, 7.616599999999904e-05, 7.66250000000003e-05, 7.630600000000168e-05, 7.559700000000016e-05, 7.647200000000104e-05, 7.631900000000177e-05, 7.666699999999901e-05, 7.630600000000168e-05, 7.661100000000073e-05, 7.598699999999958e-05, 7.602799999999882e-05, 7.654099999999942e-05, 7.604199999999839e-05, 7.61379999999999e-05, 7.590199999999922e-05, 7.624999999999993e-05, 7.592999999999836e-05, 7.669500000000162e-05, 7.579199999999814e-05, 7.620800000000122e-05]</msg>
<status status="PASS" starttime="20201115 23:01:50.462" endtime="20201115 23:01:50.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.457" endtime="20201115 23:01:50.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.466" endtime="20201115 23:01:50.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:50.470" endtime="20201115 23:01:50.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.468" endtime="20201115 23:01:50.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.465" endtime="20201115 23:01:50.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.095" endtime="20201115 23:01:50.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.094" endtime="20201115 23:01:50.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.093" endtime="20201115 23:01:50.491"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.493" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.502" endtime="20201115 23:01:50.522"></status>
</kw>
<msg timestamp="20201115 23:01:50.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.500" endtime="20201115 23:01:50.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.524" endtime="20201115 23:01:50.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.526" endtime="20201115 23:01:50.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.497" endtime="20201115 23:01:50.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.495" endtime="20201115 23:01:50.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.536" endtime="20201115 23:01:50.820"></status>
</kw>
<msg timestamp="20201115 23:01:50.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.534" endtime="20201115 23:01:50.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.825" endtime="20201115 23:01:50.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.833" endtime="20201115 23:01:50.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.532" endtime="20201115 23:01:50.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.530" endtime="20201115 23:01:50.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:50.840" level="INFO">${RESULT} = [{'time': 0.021952264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.669499999999815e-05, 'source_diff': 7.669499999999815e-05}, {'time': 0.022044292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:50.837" endtime="20201115 23:01:50.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:50.854" level="INFO">${ACCURACY} = {'diff': [7.669499999999815e-05, 7.709800000000114e-05, 7.704199999999939e-05, 7.727800000000007e-05, 7.713900000000037e-05, 7.697300000000101e-05, 7.686200000000046e-05, 7.742999999999986e-05, 7.7277...</msg>
<status status="PASS" starttime="20201115 23:01:50.841" endtime="20201115 23:01:50.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.858" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:01:50.857" endtime="20201115 23:01:50.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.861" level="INFO">VALUE: [7.669499999999815e-05, 7.709800000000114e-05, 7.704199999999939e-05, 7.727800000000007e-05, 7.713900000000037e-05, 7.697300000000101e-05, 7.686200000000046e-05, 7.742999999999986e-05, 7.72770000000006e-05, 7.686100000000098e-05, 7.70830000000021e-05, 7.744399999999943e-05, 7.706899999999905e-05, 7.748599999999814e-05, 7.736100000000148e-05, 7.720800000000222e-05, 7.69029999999997e-05, 7.747199999999857e-05, 7.672300000000076e-05, 7.715299999999994e-05, 7.686100000000098e-05, 7.745899999999847e-05, 7.673600000000086e-05, 7.669400000000215e-05, 7.74030000000002e-05, 7.694399999999893e-05, 7.74030000000002e-05, 7.702799999999982e-05, 7.695800000000197e-05, 7.672199999999782e-05, 7.693099999999883e-05, 7.702799999999982e-05, 7.729199999999964e-05, 7.766700000000001e-05, 7.679099999999967e-05, 7.745800000000247e-05, 7.759700000000216e-05, 7.738800000000115e-05, 7.692999999999936e-05, 7.754100000000042e-05, 7.670800000000172e-05, 7.691699999999926e-05, 7.683299999999837e-05, 7.752800000000032e-05, 7.702799999999982e-05, 7.734699999999844e-05, 7.740200000000072e-05, 7.729199999999964e-05, 7.670900000000119e-05, 7.734800000000139e-05]</msg>
<status status="PASS" starttime="20201115 23:01:50.859" endtime="20201115 23:01:50.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.855" endtime="20201115 23:01:50.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.864" endtime="20201115 23:01:50.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:50.867" endtime="20201115 23:01:50.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.866" endtime="20201115 23:01:50.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.862" endtime="20201115 23:01:50.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.494" endtime="20201115 23:01:50.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.492" endtime="20201115 23:01:50.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.491" endtime="20201115 23:01:50.888"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.891" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.899" endtime="20201115 23:01:50.918"></status>
</kw>
<msg timestamp="20201115 23:01:50.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.897" endtime="20201115 23:01:50.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.920" endtime="20201115 23:01:50.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.922" endtime="20201115 23:01:50.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.895" endtime="20201115 23:01:50.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.893" endtime="20201115 23:01:50.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.932" endtime="20201115 23:01:51.216"></status>
</kw>
<msg timestamp="20201115 23:01:51.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.930" endtime="20201115 23:01:51.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.221" endtime="20201115 23:01:51.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.229" endtime="20201115 23:01:51.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.927" endtime="20201115 23:01:51.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.926" endtime="20201115 23:01:51.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:51.236" level="INFO">${RESULT} = [{'time': 0.021942833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.8458e-05, 'source_diff': 7.8458e-05}, {'time': 0.022033819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.808299999999962e-...</msg>
<status status="PASS" starttime="20201115 23:01:51.232" endtime="20201115 23:01:51.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:51.249" level="INFO">${ACCURACY} = {'diff': [7.8458e-05, 7.808299999999962e-05, 7.808299999999962e-05, 7.849999999999871e-05, 7.78189999999998e-05, 7.772199999999882e-05, 7.86389999999984e-05, 7.829200000000064e-05, 7.780599999999971e-...</msg>
<status status="PASS" starttime="20201115 23:01:51.237" endtime="20201115 23:01:51.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.254" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:01:51.253" endtime="20201115 23:01:51.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.256" level="INFO">VALUE: [7.8458e-05, 7.808299999999962e-05, 7.808299999999962e-05, 7.849999999999871e-05, 7.78189999999998e-05, 7.772199999999882e-05, 7.86389999999984e-05, 7.829200000000064e-05, 7.780599999999971e-05, 7.843100000000033e-05, 7.854100000000142e-05, 7.859799999999917e-05, 7.802799999999735e-05, 7.84030000000012e-05, 7.847199999999957e-05, 7.817999999999714e-05, 7.780500000000024e-05, 7.770799999999925e-05, 7.804200000000039e-05, 7.822199999999932e-05, 7.827800000000107e-05, 7.815300000000094e-05, 7.852800000000132e-05, 7.836099999999901e-05, 7.793000000000036e-05, 7.854199999999742e-05, 7.84449999999999e-05, 7.861099999999926e-05, 7.77770000000011e-05, 7.843000000000086e-05, 7.815200000000147e-05, 7.82770000000016e-05, 7.793000000000036e-05, 7.861099999999926e-05, 7.80830000000031e-05, 7.80839999999991e-05, 7.824999999999846e-05, 7.773600000000186e-05, 7.769499999999915e-05, 7.770899999999872e-05, 7.834800000000239e-05, 7.845899999999947e-05, 7.809799999999867e-05, 7.827699999999813e-05, 7.826399999999803e-05, 7.783299999999937e-05, 7.794399999999993e-05, 7.784700000000241e-05, 7.82229999999988e-05, 7.808299999999962e-05]</msg>
<status status="PASS" starttime="20201115 23:01:51.255" endtime="20201115 23:01:51.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.250" endtime="20201115 23:01:51.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.259" endtime="20201115 23:01:51.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:51.263" endtime="20201115 23:01:51.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.261" endtime="20201115 23:01:51.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.258" endtime="20201115 23:01:51.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.891" endtime="20201115 23:01:51.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.889" endtime="20201115 23:01:51.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.889" endtime="20201115 23:01:51.284"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.286" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.294" endtime="20201115 23:01:51.315"></status>
</kw>
<msg timestamp="20201115 23:01:51.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.293" endtime="20201115 23:01:51.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.316" endtime="20201115 23:01:51.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.319" endtime="20201115 23:01:51.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.290" endtime="20201115 23:01:51.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.288" endtime="20201115 23:01:51.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.328" endtime="20201115 23:01:51.613"></status>
</kw>
<msg timestamp="20201115 23:01:51.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.327" endtime="20201115 23:01:51.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.618" endtime="20201115 23:01:51.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.626" endtime="20201115 23:01:51.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.324" endtime="20201115 23:01:51.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.323" endtime="20201115 23:01:51.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:51.633" level="INFO">${RESULT} = [{'time': 0.021963319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.877699999999863e-05, 'source_diff': 7.877699999999863e-05}, {'time': 0.022058292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:51.629" endtime="20201115 23:01:51.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:51.646" level="INFO">${ACCURACY} = {'diff': [7.877699999999863e-05, 7.947300000000004e-05, 7.87229999999993e-05, 7.941600000000229e-05, 7.938899999999915e-05, 7.917999999999814e-05, 7.961100000000026e-05, 7.89580000000005e-05, 7.888899...</msg>
<status status="PASS" starttime="20201115 23:01:51.634" endtime="20201115 23:01:51.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.651" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:01:51.650" endtime="20201115 23:01:51.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.653" level="INFO">VALUE: [7.877699999999863e-05, 7.947300000000004e-05, 7.87229999999993e-05, 7.941600000000229e-05, 7.938899999999915e-05, 7.917999999999814e-05, 7.961100000000026e-05, 7.89580000000005e-05, 7.888899999999865e-05, 7.934700000000044e-05, 7.888900000000212e-05, 7.874999999999896e-05, 7.965299999999897e-05, 7.888899999999865e-05, 7.89450000000004e-05, 7.911099999999976e-05, 7.909799999999967e-05, 7.912499999999933e-05, 7.888900000000212e-05, 7.954099999999895e-05, 7.872199999999982e-05, 7.90970000000002e-05, 7.952800000000232e-05, 7.925000000000293e-05, 7.9458000000001e-05, 7.91389999999989e-05, 7.883300000000037e-05, 7.898599999999964e-05, 7.89450000000004e-05, 7.95970000000007e-05, 7.884799999999942e-05, 7.883399999999985e-05, 7.965299999999897e-05, 7.913900000000237e-05, 7.883300000000037e-05, 7.927800000000207e-05, 7.92779999999986e-05, 7.916599999999857e-05, 7.958300000000113e-05, 7.958299999999766e-05, 7.947200000000057e-05, 7.966699999999854e-05, 7.875000000000243e-05, 7.883399999999985e-05, 7.94030000000022e-05, 7.909799999999967e-05, 7.883400000000332e-05, 7.929100000000217e-05, 7.937499999999958e-05, 7.856900000000056e-05]</msg>
<status status="PASS" starttime="20201115 23:01:51.652" endtime="20201115 23:01:51.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.647" endtime="20201115 23:01:51.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.656" endtime="20201115 23:01:51.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:51.660" endtime="20201115 23:01:51.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.658" endtime="20201115 23:01:51.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.655" endtime="20201115 23:01:51.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.287" endtime="20201115 23:01:51.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.285" endtime="20201115 23:01:51.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.284" endtime="20201115 23:01:51.681"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.683" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.692" endtime="20201115 23:01:51.713"></status>
</kw>
<msg timestamp="20201115 23:01:51.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.690" endtime="20201115 23:01:51.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.714" endtime="20201115 23:01:51.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.717" endtime="20201115 23:01:51.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.687" endtime="20201115 23:01:51.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.685" endtime="20201115 23:01:51.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.726" endtime="20201115 23:01:52.012"></status>
</kw>
<msg timestamp="20201115 23:01:52.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023094403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.724" endtime="20201115 23:01:52.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023094403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.016" endtime="20201115 23:01:52.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.024" endtime="20201115 23:01:52.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.722" endtime="20201115 23:01:52.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.720" endtime="20201115 23:01:52.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:52.031" level="INFO">${RESULT} = [{'time': 0.023174389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.998600000000064e-05, 'source_diff': 7.998600000000064e-05}, {'time': 0.023267417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:52.027" endtime="20201115 23:01:52.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:52.045" level="INFO">${ACCURACY} = {'diff': [7.998600000000064e-05, 8.029199999999917e-05, 8.025000000000046e-05, 8.033400000000135e-05, 7.970900000000072e-05, 7.998600000000064e-05, 8.001399999999978e-05, 8.018000000000261e-05, 8.0236...</msg>
<status status="PASS" starttime="20201115 23:01:52.032" endtime="20201115 23:01:52.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.050" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:01:52.049" endtime="20201115 23:01:52.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.052" level="INFO">VALUE: [7.998600000000064e-05, 8.029199999999917e-05, 8.025000000000046e-05, 8.033400000000135e-05, 7.970900000000072e-05, 7.998600000000064e-05, 8.001399999999978e-05, 8.018000000000261e-05, 8.023600000000089e-05, 7.997200000000107e-05, 8.052799999999985e-05, 7.984700000000094e-05, 7.972200000000082e-05, 7.997200000000107e-05, 7.970800000000125e-05, 7.982000000000128e-05, 8.040299999999972e-05, 7.982000000000128e-05, 8.007000000000153e-05, 8.04450000000019e-05, 8.048600000000114e-05, 7.970800000000125e-05, 8.016599999999957e-05, 8.065199999999703e-05, 8.006900000000206e-05, 8.062500000000083e-05, 8.022200000000132e-05, 8.051400000000028e-05, 7.99169999999988e-05, 8.008299999999816e-05, 7.970800000000125e-05, 8.05840000000016e-05, 8.02779999999996e-05, 7.981999999999781e-05, 8.041599999999982e-05, 8.027700000000013e-05, 7.988899999999965e-05, 8.025000000000046e-05, 8.025000000000046e-05, 7.976399999999953e-05, 7.979199999999867e-05, 7.98329999999979e-05, 8.023600000000089e-05, 8.062500000000083e-05, 7.990299999999922e-05, 8.022200000000132e-05, 8.052799999999985e-05, 8.052799999999985e-05, 7.986199999999999e-05, 8.041599999999982e-05]</msg>
<status status="PASS" starttime="20201115 23:01:52.051" endtime="20201115 23:01:52.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.046" endtime="20201115 23:01:52.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.056" endtime="20201115 23:01:52.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.059" endtime="20201115 23:01:52.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.057" endtime="20201115 23:01:52.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.054" endtime="20201115 23:01:52.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.684" endtime="20201115 23:01:52.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.682" endtime="20201115 23:01:52.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.681" endtime="20201115 23:01:52.081"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.083" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.091" endtime="20201115 23:01:52.112"></status>
</kw>
<msg timestamp="20201115 23:01:52.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.090" endtime="20201115 23:01:52.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.113" endtime="20201115 23:01:52.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.116" endtime="20201115 23:01:52.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.087" endtime="20201115 23:01:52.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.085" endtime="20201115 23:01:52.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.125" endtime="20201115 23:01:52.410"></status>
</kw>
<msg timestamp="20201115 23:01:52.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022353139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.123" endtime="20201115 23:01:52.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022353139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.415" endtime="20201115 23:01:52.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.423" endtime="20201115 23:01:52.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.121" endtime="20201115 23:01:52.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.119" endtime="20201115 23:01:52.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:52.430" level="INFO">${RESULT} = [{'time': 0.022353139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.076400000000053e-05, 'source_diff': 8.076400000000053e-05}, {'time': 0.022447139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:52.426" endtime="20201115 23:01:52.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:52.443" level="INFO">${ACCURACY} = {'diff': [8.076400000000053e-05, 8.134700000000245e-05, 8.11109999999983e-05, 8.082000000000228e-05, 8.090300000000022e-05, 8.166700000000054e-05, 8.159699999999923e-05, 8.076300000000106e-05, 8.08329...</msg>
<status status="PASS" starttime="20201115 23:01:52.431" endtime="20201115 23:01:52.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.448" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:01:52.447" endtime="20201115 23:01:52.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.450" level="INFO">VALUE: [8.076400000000053e-05, 8.134700000000245e-05, 8.11109999999983e-05, 8.082000000000228e-05, 8.090300000000022e-05, 8.166700000000054e-05, 8.159699999999923e-05, 8.076300000000106e-05, 8.08329999999989e-05, 8.165199999999803e-05, 8.138900000000115e-05, 8.152800000000085e-05, 8.10970000000022e-05, 8.072200000000182e-05, 8.145799999999953e-05, 8.079199999999967e-05, 8.076400000000053e-05, 8.134699999999898e-05, 8.158399999999913e-05, 8.161199999999827e-05, 8.11109999999983e-05, 8.141600000000082e-05, 8.119399999999971e-05, 8.144399999999996e-05, 8.07910000000002e-05, 8.102800000000035e-05, 8.151400000000128e-05, 8.159699999999923e-05, 8.108299999999916e-05, 8.16529999999975e-05, 8.148600000000214e-05, 8.11109999999983e-05, 8.05840000000016e-05, 8.094399999999946e-05, 8.130500000000027e-05, 8.095799999999903e-05, 8.084700000000195e-05, 8.116700000000004e-05, 8.159699999999923e-05, 8.087500000000108e-05, 8.144399999999996e-05, 8.145799999999953e-05, 8.119399999999971e-05, 8.166700000000054e-05, 8.1458999999999e-05, 8.099999999999774e-05, 8.15970000000027e-05, 8.09169999999998e-05, 8.156999999999956e-05, 8.090300000000022e-05]</msg>
<status status="PASS" starttime="20201115 23:01:52.449" endtime="20201115 23:01:52.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.444" endtime="20201115 23:01:52.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.454" endtime="20201115 23:01:52.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.457" endtime="20201115 23:01:52.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.456" endtime="20201115 23:01:52.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.452" endtime="20201115 23:01:52.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.084" endtime="20201115 23:01:52.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.082" endtime="20201115 23:01:52.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.081" endtime="20201115 23:01:52.478"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.481" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.489" endtime="20201115 23:01:52.508"></status>
</kw>
<msg timestamp="20201115 23:01:52.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.487" endtime="20201115 23:01:52.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.510" endtime="20201115 23:01:52.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.513" endtime="20201115 23:01:52.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.485" endtime="20201115 23:01:52.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.483" endtime="20201115 23:01:52.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.522" endtime="20201115 23:01:52.808"></status>
</kw>
<msg timestamp="20201115 23:01:52.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.520" endtime="20201115 23:01:52.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.812" endtime="20201115 23:01:52.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.821" endtime="20201115 23:01:52.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.517" endtime="20201115 23:01:52.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.516" endtime="20201115 23:01:52.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:52.827" level="INFO">${RESULT} = [{'time': 0.021994111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.237499999999912e-05, 'source_diff': 8.237499999999912e-05}, {'time': 0.022090111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:52.824" endtime="20201115 23:01:52.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:52.841" level="INFO">${ACCURACY} = {'diff': [8.237499999999912e-05, 8.237499999999912e-05, 8.232000000000031e-05, 8.23330000000004e-05, 8.186099999999905e-05, 8.258400000000013e-05, 8.213899999999844e-05, 8.197299999999907e-05, 8.17779...</msg>
<status status="PASS" starttime="20201115 23:01:52.828" endtime="20201115 23:01:52.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.845" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:01:52.844" endtime="20201115 23:01:52.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.848" level="INFO">VALUE: [8.237499999999912e-05, 8.237499999999912e-05, 8.232000000000031e-05, 8.23330000000004e-05, 8.186099999999905e-05, 8.258400000000013e-05, 8.213899999999844e-05, 8.197299999999907e-05, 8.177799999999763e-05, 8.26659999999986e-05, 8.215199999999853e-05, 8.19719999999996e-05, 8.238899999999869e-05, 8.190299999999776e-05, 8.244400000000096e-05, 8.262499999999937e-05, 8.17780000000011e-05, 8.204199999999745e-05, 8.208300000000016e-05, 8.252800000000185e-05, 8.252800000000185e-05, 8.212500000000234e-05, 8.204100000000145e-05, 8.220800000000028e-05, 8.254100000000195e-05, 8.224999999999899e-05, 8.212499999999887e-05, 8.213899999999844e-05, 8.215300000000147e-05, 8.226399999999856e-05, 8.17780000000011e-05, 8.21109999999993e-05, 8.226400000000203e-05, 8.208399999999963e-05, 8.234800000000292e-05, 8.197299999999907e-05, 8.176399999999806e-05, 8.252800000000185e-05, 8.267999999999817e-05, 8.231900000000084e-05, 8.206900000000059e-05, 8.240299999999826e-05, 8.219400000000071e-05, 8.208300000000016e-05, 8.245800000000053e-05, 8.173599999999892e-05, 8.198600000000264e-05, 8.233399999999988e-05, 8.244500000000043e-05, 8.197299999999907e-05]</msg>
<status status="PASS" starttime="20201115 23:01:52.846" endtime="20201115 23:01:52.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.842" endtime="20201115 23:01:52.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.851" endtime="20201115 23:01:52.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.855" endtime="20201115 23:01:52.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.853" endtime="20201115 23:01:52.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.850" endtime="20201115 23:01:52.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.481" endtime="20201115 23:01:52.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.479" endtime="20201115 23:01:52.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.478" endtime="20201115 23:01:52.876"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.878" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.886" endtime="20201115 23:01:52.906"></status>
</kw>
<msg timestamp="20201115 23:01:52.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.885" endtime="20201115 23:01:52.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.908" endtime="20201115 23:01:52.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.910" endtime="20201115 23:01:52.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.882" endtime="20201115 23:01:52.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.880" endtime="20201115 23:01:52.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.919" endtime="20201115 23:01:53.205"></status>
</kw>
<msg timestamp="20201115 23:01:53.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.918" endtime="20201115 23:01:53.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.209" endtime="20201115 23:01:53.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.218" endtime="20201115 23:01:53.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.915" endtime="20201115 23:01:53.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.914" endtime="20201115 23:01:53.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:53.224" level="INFO">${RESULT} = [{'time': 0.021849292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.320900000000075e-05, 'source_diff': 8.320900000000075e-05}, {'time': 0.021947292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:53.221" endtime="20201115 23:01:53.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:53.238" level="INFO">${ACCURACY} = {'diff': [8.320900000000075e-05, 8.362500000000037e-05, 8.361099999999733e-05, 8.366699999999908e-05, 8.319400000000171e-05, 8.291599999999885e-05, 8.324999999999999e-05, 8.334700000000098e-05, 8.3611...</msg>
<status status="PASS" starttime="20201115 23:01:53.226" endtime="20201115 23:01:53.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.243" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:01:53.242" endtime="20201115 23:01:53.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.245" level="INFO">VALUE: [8.320900000000075e-05, 8.362500000000037e-05, 8.361099999999733e-05, 8.366699999999908e-05, 8.319400000000171e-05, 8.291599999999885e-05, 8.324999999999999e-05, 8.334700000000098e-05, 8.36110000000008e-05, 8.327799999999913e-05, 8.304199999999845e-05, 8.27780000000021e-05, 8.301399999999931e-05, 8.322200000000085e-05, 8.334800000000045e-05, 8.333400000000088e-05, 8.340299999999926e-05, 8.3152000000003e-05, 8.361099999999733e-05, 8.363899999999994e-05, 8.281900000000134e-05, 8.352799999999938e-05, 8.290299999999876e-05, 8.302799999999888e-05, 8.31110000000003e-05, 8.350000000000024e-05, 8.358299999999819e-05, 8.347300000000057e-05, 8.35980000000007e-05, 8.320900000000075e-05, 8.331999999999784e-05, 8.298699999999964e-05, 8.338899999999969e-05, 8.34720000000011e-05, 8.315199999999953e-05, 8.288899999999919e-05, 8.273599999999992e-05, 8.302799999999888e-05, 8.340299999999926e-05, 8.33330000000014e-05, 8.327799999999913e-05, 8.272299999999982e-05, 8.356999999999809e-05, 8.302699999999941e-05, 8.351399999999981e-05, 8.298600000000017e-05, 8.31659999999991e-05, 8.33330000000014e-05, 8.345799999999806e-05, 8.299999999999974e-05]</msg>
<status status="PASS" starttime="20201115 23:01:53.244" endtime="20201115 23:01:53.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.239" endtime="20201115 23:01:53.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.248" endtime="20201115 23:01:53.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.252" endtime="20201115 23:01:53.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.250" endtime="20201115 23:01:53.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.247" endtime="20201115 23:01:53.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.879" endtime="20201115 23:01:53.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.877" endtime="20201115 23:01:53.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.876" endtime="20201115 23:01:53.273"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.275" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.283" endtime="20201115 23:01:53.304"></status>
</kw>
<msg timestamp="20201115 23:01:53.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.282" endtime="20201115 23:01:53.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.305" endtime="20201115 23:01:53.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.308" endtime="20201115 23:01:53.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.279" endtime="20201115 23:01:53.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.277" endtime="20201115 23:01:53.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.317" endtime="20201115 23:01:53.603"></status>
</kw>
<msg timestamp="20201115 23:01:53.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02284, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 23:01:53.315" endtime="20201115 23:01:53.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02284, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 23:01:53.607" endtime="20201115 23:01:53.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.615" endtime="20201115 23:01:53.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.313" endtime="20201115 23:01:53.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.311" endtime="20201115 23:01:53.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:53.622" level="INFO">${RESULT} = [{'time': 0.02284, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.451400000000081e-05, 'source_diff': 8.451400000000081e-05}, {'time': 0.022937014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201115 23:01:53.619" endtime="20201115 23:01:53.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:53.637" level="INFO">${ACCURACY} = {'diff': [8.451400000000081e-05, 8.413899999999697e-05, 8.404200000000292e-05, 8.415200000000053e-05, 8.465299999999704e-05, 8.391699999999933e-05, 8.372299999999736e-05, 8.459699999999876e-05, 8.3681...</msg>
<status status="PASS" starttime="20201115 23:01:53.623" endtime="20201115 23:01:53.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.641" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:01:53.640" endtime="20201115 23:01:53.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.644" level="INFO">VALUE: [8.451400000000081e-05, 8.413899999999697e-05, 8.404200000000292e-05, 8.415200000000053e-05, 8.465299999999704e-05, 8.391699999999933e-05, 8.372299999999736e-05, 8.459699999999876e-05, 8.368100000000211e-05, 8.452700000000091e-05, 8.440300000000026e-05, 8.431899999999937e-05, 8.422199999999838e-05, 8.441699999999983e-05, 8.395799999999856e-05, 8.440300000000026e-05, 8.465299999999704e-05, 8.376400000000006e-05, 8.398600000000117e-05, 8.434700000000198e-05, 8.401300000000084e-05, 8.382000000000181e-05, 8.402700000000041e-05, 8.465199999999756e-05, 8.458300000000266e-05, 8.46249999999979e-05, 8.420800000000228e-05, 8.43469999999985e-05, 8.422200000000185e-05, 8.420799999999881e-05, 8.451400000000081e-05, 8.436099999999808e-05, 8.372300000000082e-05, 8.386200000000052e-05, 8.39729999999976e-05, 8.458399999999866e-05, 8.399999999999727e-05, 8.465200000000103e-05, 8.458299999999919e-05, 8.440300000000026e-05, 8.404199999999945e-05, 8.386100000000105e-05, 8.431899999999937e-05, 8.46530000000005e-05, 8.370800000000178e-05, 8.445800000000253e-05, 8.422300000000132e-05, 8.416699999999958e-05, 8.454100000000048e-05, 8.377799999999963e-05]</msg>
<status status="PASS" starttime="20201115 23:01:53.642" endtime="20201115 23:01:53.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.638" endtime="20201115 23:01:53.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.647" endtime="20201115 23:01:53.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.650" endtime="20201115 23:01:53.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.649" endtime="20201115 23:01:53.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.645" endtime="20201115 23:01:53.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.276" endtime="20201115 23:01:53.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.274" endtime="20201115 23:01:53.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.273" endtime="20201115 23:01:53.671"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.674" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.682" endtime="20201115 23:01:53.702"></status>
</kw>
<msg timestamp="20201115 23:01:53.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.680" endtime="20201115 23:01:53.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.703" endtime="20201115 23:01:53.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.706" endtime="20201115 23:01:53.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.678" endtime="20201115 23:01:53.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.676" endtime="20201115 23:01:53.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.716" endtime="20201115 23:01:54.001"></status>
</kw>
<msg timestamp="20201115 23:01:54.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021937611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.714" endtime="20201115 23:01:54.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021937611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.005" endtime="20201115 23:01:54.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.014" endtime="20201115 23:01:54.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.711" endtime="20201115 23:01:54.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.709" endtime="20201115 23:01:54.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:54.020" level="INFO">${RESULT} = [{'time': 0.021937611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.54859999999992e-05, 'source_diff': 8.54859999999992e-05}, {'time': 0.022037625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:54.017" endtime="20201115 23:01:54.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:54.034" level="INFO">${ACCURACY} = {'diff': [8.54859999999992e-05, 8.552800000000138e-05, 8.557000000000009e-05, 8.555500000000105e-05, 8.486200000000152e-05, 8.511200000000177e-05, 8.522299999999886e-05, 8.491600000000085e-05, 8.51390...</msg>
<status status="PASS" starttime="20201115 23:01:54.021" endtime="20201115 23:01:54.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.038" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:01:54.037" endtime="20201115 23:01:54.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.041" level="INFO">VALUE: [8.54859999999992e-05, 8.552800000000138e-05, 8.557000000000009e-05, 8.555500000000105e-05, 8.486200000000152e-05, 8.511200000000177e-05, 8.522299999999886e-05, 8.491600000000085e-05, 8.513900000000144e-05, 8.540200000000178e-05, 8.538899999999822e-05, 8.548600000000267e-05, 8.559699999999976e-05, 8.544400000000049e-05, 8.554200000000095e-05, 8.509699999999926e-05, 8.551399999999834e-05, 8.46530000000005e-05, 8.548700000000214e-05, 8.552800000000138e-05, 8.554200000000095e-05, 8.49590000000025e-05, 8.522199999999938e-05, 8.533299999999994e-05, 8.545800000000006e-05, 8.469399999999974e-05, 8.479100000000073e-05, 8.49309999999999e-05, 8.494399999999999e-05, 8.551400000000181e-05, 8.548600000000267e-05, 8.516700000000058e-05, 8.502799999999741e-05, 8.522300000000232e-05, 8.490300000000076e-05, 8.529100000000123e-05, 8.458299999999919e-05, 8.49859999999987e-05, 8.545800000000006e-05, 8.502800000000088e-05, 8.536100000000255e-05, 8.545800000000006e-05, 8.566700000000108e-05, 8.473600000000192e-05, 8.477800000000063e-05, 8.490300000000076e-05, 8.483399999999891e-05, 8.484800000000195e-05, 8.512500000000187e-05, 8.49859999999987e-05]</msg>
<status status="PASS" starttime="20201115 23:01:54.039" endtime="20201115 23:01:54.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.035" endtime="20201115 23:01:54.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.044" endtime="20201115 23:01:54.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.047" endtime="20201115 23:01:54.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.046" endtime="20201115 23:01:54.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.042" endtime="20201115 23:01:54.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.674" endtime="20201115 23:01:54.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.673" endtime="20201115 23:01:54.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.672" endtime="20201115 23:01:54.068"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.071" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.079" endtime="20201115 23:01:54.100"></status>
</kw>
<msg timestamp="20201115 23:01:54.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.077" endtime="20201115 23:01:54.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.101" endtime="20201115 23:01:54.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.104" endtime="20201115 23:01:54.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.075" endtime="20201115 23:01:54.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.073" endtime="20201115 23:01:54.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.113" endtime="20201115 23:01:54.398"></status>
</kw>
<msg timestamp="20201115 23:01:54.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.112" endtime="20201115 23:01:54.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.402" endtime="20201115 23:01:54.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.411" endtime="20201115 23:01:54.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.109" endtime="20201115 23:01:54.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.107" endtime="20201115 23:01:54.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:54.417" level="INFO">${RESULT} = [{'time': 0.021912292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.630600000000127e-05, 'source_diff': 8.630600000000127e-05}, {'time': 0.022012278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:54.414" endtime="20201115 23:01:54.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:54.431" level="INFO">${ACCURACY} = {'diff': [8.630600000000127e-05, 8.636100000000008e-05, 8.666599999999913e-05, 8.654200000000195e-05, 8.625000000000299e-05, 8.659700000000076e-05, 8.606899999999765e-05, 8.619399999999777e-05, 8.5708...</msg>
<status status="PASS" starttime="20201115 23:01:54.418" endtime="20201115 23:01:54.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.435" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:01:54.434" endtime="20201115 23:01:54.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.438" level="INFO">VALUE: [8.630600000000127e-05, 8.636100000000008e-05, 8.666599999999913e-05, 8.654200000000195e-05, 8.625000000000299e-05, 8.659700000000076e-05, 8.606899999999765e-05, 8.619399999999777e-05, 8.570800000000031e-05, 8.577799999999816e-05, 8.591699999999786e-05, 8.665299999999904e-05, 8.633300000000094e-05, 8.655499999999858e-05, 8.613900000000244e-05, 8.622200000000038e-05, 8.663899999999947e-05, 8.648599999999673e-05, 8.588800000000271e-05, 8.630499999999833e-05, 8.587499999999915e-05, 8.594400000000099e-05, 8.645799999999759e-05, 8.641699999999836e-05, 8.602799999999841e-05, 8.622200000000038e-05, 8.616700000000158e-05, 8.651399999999934e-05, 8.602799999999841e-05, 8.634699999999704e-05, 8.654199999999848e-05, 8.609700000000026e-05, 8.638799999999974e-05, 8.583300000000044e-05, 8.640299999999879e-05, 8.637499999999965e-05, 8.602800000000188e-05, 8.62920000000017e-05, 8.597200000000013e-05, 8.59310000000009e-05, 8.577800000000163e-05, 8.615299999999854e-05, 8.573599999999945e-05, 8.659800000000023e-05, 8.566700000000108e-05, 8.597200000000013e-05, 8.597200000000013e-05, 8.636100000000008e-05, 8.626399999999909e-05, 8.583300000000044e-05]</msg>
<status status="PASS" starttime="20201115 23:01:54.436" endtime="20201115 23:01:54.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.432" endtime="20201115 23:01:54.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.441" endtime="20201115 23:01:54.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.444" endtime="20201115 23:01:54.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.443" endtime="20201115 23:01:54.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.439" endtime="20201115 23:01:54.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.071" endtime="20201115 23:01:54.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.070" endtime="20201115 23:01:54.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.069" endtime="20201115 23:01:54.465"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.468" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.481" endtime="20201115 23:01:54.501"></status>
</kw>
<msg timestamp="20201115 23:01:54.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.480" endtime="20201115 23:01:54.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.503" endtime="20201115 23:01:54.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.505" endtime="20201115 23:01:54.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.472" endtime="20201115 23:01:54.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.470" endtime="20201115 23:01:54.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.515" endtime="20201115 23:01:54.800"></status>
</kw>
<msg timestamp="20201115 23:01:54.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027025542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027112278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.513" endtime="20201115 23:01:54.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027025542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027112278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.804" endtime="20201115 23:01:54.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.812" endtime="20201115 23:01:54.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.510" endtime="20201115 23:01:54.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.509" endtime="20201115 23:01:54.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:54.819" level="INFO">${RESULT} = [{'time': 0.027112278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.673600000000045e-05, 'source_diff': 8.673600000000045e-05}, {'time': 0.027214278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:54.815" endtime="20201115 23:01:54.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:54.832" level="INFO">${ACCURACY} = {'diff': [8.673600000000045e-05, 8.720900000000129e-05, 8.744500000000197e-05, 8.71250000000004e-05, 8.686100000000058e-05, 8.67920000000022e-05, 8.74449999999985e-05, 8.755499999999958e-05, 8.6847000...</msg>
<status status="PASS" starttime="20201115 23:01:54.820" endtime="20201115 23:01:54.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.837" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:01:54.836" endtime="20201115 23:01:54.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.839" level="INFO">VALUE: [8.673600000000045e-05, 8.720900000000129e-05, 8.744500000000197e-05, 8.71250000000004e-05, 8.686100000000058e-05, 8.67920000000022e-05, 8.74449999999985e-05, 8.755499999999958e-05, 8.6847000000001e-05, 8.722200000000138e-05, 8.723600000000095e-05, 8.750000000000077e-05, 8.673600000000045e-05, 8.740299999999979e-05, 8.69310000000019e-05, 8.698599999999723e-05, 8.686100000000058e-05, 8.737500000000065e-05, 8.711100000000083e-05, 8.765300000000004e-05, 8.690199999999981e-05, 8.709699999999779e-05, 8.751400000000034e-05, 8.731900000000237e-05, 8.761100000000133e-05, 8.663899999999947e-05, 8.71669999999991e-05, 8.67920000000022e-05, 8.750000000000077e-05, 8.686200000000005e-05, 8.677799999999916e-05, 8.726400000000009e-05, 8.76669999999996e-05, 8.745799999999859e-05, 8.680499999999883e-05, 8.708300000000169e-05, 8.756899999999915e-05, 8.745900000000154e-05, 8.740299999999979e-05, 8.745799999999859e-05, 8.711100000000083e-05, 8.677800000000263e-05, 8.722199999999791e-05, 8.69869999999967e-05, 8.651400000000281e-05, 8.677799999999569e-05, 8.706899999999518e-05, 8.686100000000058e-05, 8.690199999999981e-05, 8.701400000000331e-05]</msg>
<status status="PASS" starttime="20201115 23:01:54.838" endtime="20201115 23:01:54.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.833" endtime="20201115 23:01:54.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.842" endtime="20201115 23:01:54.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.846" endtime="20201115 23:01:54.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.844" endtime="20201115 23:01:54.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.841" endtime="20201115 23:01:54.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.468" endtime="20201115 23:01:54.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.467" endtime="20201115 23:01:54.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.466" endtime="20201115 23:01:54.867"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.869" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.878" endtime="20201115 23:01:54.899"></status>
</kw>
<msg timestamp="20201115 23:01:54.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.876" endtime="20201115 23:01:54.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.900" endtime="20201115 23:01:54.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.903" endtime="20201115 23:01:54.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.874" endtime="20201115 23:01:54.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.872" endtime="20201115 23:01:54.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.912" endtime="20201115 23:01:55.197"></status>
</kw>
<msg timestamp="20201115 23:01:55.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023254181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023342125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.911" endtime="20201115 23:01:55.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023254181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023342125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.202" endtime="20201115 23:01:55.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.210" endtime="20201115 23:01:55.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.908" endtime="20201115 23:01:55.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.906" endtime="20201115 23:01:55.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.217" level="INFO">${RESULT} = [{'time': 0.023342125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.794399999999952e-05, 'source_diff': 8.794399999999952e-05}, {'time': 0.023444153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:55.213" endtime="20201115 23:01:55.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.231" level="INFO">${ACCURACY} = {'diff': [8.794399999999952e-05, 8.815300000000054e-05, 8.784699999999854e-05, 8.815300000000054e-05, 8.765300000000004e-05, 8.840299999999732e-05, 8.865300000000104e-05, 8.81800000000002e-05, 8.82640...</msg>
<status status="PASS" starttime="20201115 23:01:55.217" endtime="20201115 23:01:55.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.236" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.235" endtime="20201115 23:01:55.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.238" level="INFO">VALUE: [8.794399999999952e-05, 8.815300000000054e-05, 8.784699999999854e-05, 8.815300000000054e-05, 8.765300000000004e-05, 8.840299999999732e-05, 8.865300000000104e-05, 8.81800000000002e-05, 8.826400000000109e-05, 8.869400000000027e-05, 8.801400000000084e-05, 8.783299999999897e-05, 8.862499999999843e-05, 8.827800000000066e-05, 8.86250000000019e-05, 8.777800000000016e-05, 8.813900000000097e-05, 8.786200000000105e-05, 8.776400000000059e-05, 8.777699999999722e-05, 8.851400000000134e-05, 8.826400000000109e-05, 8.840300000000079e-05, 8.837499999999818e-05, 8.770800000000231e-05, 8.795800000000256e-05, 8.86670000000006e-05, 8.829200000000023e-05, 8.76250000000009e-05, 8.826400000000109e-05, 8.815300000000054e-05, 8.822300000000186e-05, 8.802800000000041e-05, 8.852700000000144e-05, 8.808299999999922e-05, 8.784699999999854e-05, 8.809699999999879e-05, 8.841600000000088e-05, 8.825000000000152e-05, 8.840300000000079e-05, 8.809700000000226e-05, 8.791699999999986e-05, 8.838900000000122e-05, 8.787500000000115e-05, 8.854200000000048e-05, 8.829100000000076e-05, 8.834800000000198e-05, 8.772199999999841e-05, 8.852799999999744e-05, 8.840299999999732e-05]</msg>
<status status="PASS" starttime="20201115 23:01:55.237" endtime="20201115 23:01:55.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.232" endtime="20201115 23:01:55.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.242" endtime="20201115 23:01:55.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.245" endtime="20201115 23:01:55.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.244" endtime="20201115 23:01:55.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.240" endtime="20201115 23:01:55.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.870" endtime="20201115 23:01:55.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.868" endtime="20201115 23:01:55.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.867" endtime="20201115 23:01:55.266"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.269" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.277" endtime="20201115 23:01:55.298"></status>
</kw>
<msg timestamp="20201115 23:01:55.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.276" endtime="20201115 23:01:55.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.300" endtime="20201115 23:01:55.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.302" endtime="20201115 23:01:55.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.273" endtime="20201115 23:01:55.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.271" endtime="20201115 23:01:55.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.311" endtime="20201115 23:01:55.596"></status>
</kw>
<msg timestamp="20201115 23:01:55.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022109153, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:55.310" endtime="20201115 23:01:55.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022109153, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:55.600" endtime="20201115 23:01:55.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.609" endtime="20201115 23:01:55.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.307" endtime="20201115 23:01:55.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.305" endtime="20201115 23:01:55.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.616" level="INFO">${RESULT} = [{'time': 0.022109153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.865300000000104e-05, 'source_diff': 8.865300000000104e-05}, {'time': 0.022213167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:55.612" endtime="20201115 23:01:55.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.629" level="INFO">${ACCURACY} = {'diff': [8.865300000000104e-05, 8.877799999999769e-05, 8.94450000000005e-05, 8.941599999999841e-05, 8.909699999999979e-05, 8.905500000000108e-05, 8.94999999999993e-05, 8.954099999999854e-05, 8.956900...</msg>
<status status="PASS" starttime="20201115 23:01:55.617" endtime="20201115 23:01:55.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.634" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.633" endtime="20201115 23:01:55.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.637" level="INFO">VALUE: [8.865300000000104e-05, 8.877799999999769e-05, 8.94450000000005e-05, 8.941599999999841e-05, 8.909699999999979e-05, 8.905500000000108e-05, 8.94999999999993e-05, 8.954099999999854e-05, 8.956900000000115e-05, 8.922199999999991e-05, 8.897199999999966e-05, 8.927800000000166e-05, 8.9638999999999e-05, 8.913900000000197e-05, 8.891700000000086e-05, 8.955600000000105e-05, 8.883399999999944e-05, 8.965299999999857e-05, 8.922199999999991e-05, 8.954099999999854e-05, 8.938899999999875e-05, 8.891699999999739e-05, 8.886099999999911e-05, 8.891700000000086e-05, 8.934700000000004e-05, 8.890299999999782e-05, 8.856999999999962e-05, 8.902799999999794e-05, 8.933399999999994e-05, 8.94860000000032e-05, 8.902800000000141e-05, 8.9332999999997e-05, 8.941699999999789e-05, 8.96670000000016e-05, 8.886099999999911e-05, 8.911100000000283e-05, 8.884699999999954e-05, 8.923600000000295e-05, 8.909699999999979e-05, 8.876399999999812e-05, 8.902799999999794e-05, 8.919500000000025e-05, 8.933399999999994e-05, 8.898599999999923e-05, 8.907000000000012e-05, 8.954099999999854e-05, 8.958300000000072e-05, 8.877700000000169e-05, 8.915300000000154e-05, 8.891700000000086e-05]</msg>
<status status="PASS" starttime="20201115 23:01:55.635" endtime="20201115 23:01:55.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.630" endtime="20201115 23:01:55.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.640" endtime="20201115 23:01:55.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.643" endtime="20201115 23:01:55.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.642" endtime="20201115 23:01:55.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.638" endtime="20201115 23:01:55.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.269" endtime="20201115 23:01:55.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.267" endtime="20201115 23:01:55.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.267" endtime="20201115 23:01:55.664"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.667" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.675" endtime="20201115 23:01:55.696"></status>
</kw>
<msg timestamp="20201115 23:01:55.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.673" endtime="20201115 23:01:55.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.697" endtime="20201115 23:01:55.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.700" endtime="20201115 23:01:55.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.671" endtime="20201115 23:01:55.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.668" endtime="20201115 23:01:55.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.709" endtime="20201115 23:01:55.994"></status>
</kw>
<msg timestamp="20201115 23:01:55.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021926056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.707" endtime="20201115 23:01:55.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021926056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.998" endtime="20201115 23:01:56.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.006" endtime="20201115 23:01:56.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.705" endtime="20201115 23:01:56.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.703" endtime="20201115 23:01:56.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.013" level="INFO">${RESULT} = [{'time': 0.021926056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.047300000000064e-05, 'source_diff': 9.047300000000064e-05}, {'time': 0.022031069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:56.010" endtime="20201115 23:01:56.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.027" level="INFO">${ACCURACY} = {'diff': [9.047300000000064e-05, 8.997200000000066e-05, 8.970800000000084e-05, 9.044499999999803e-05, 8.976399999999912e-05, 9.016599999999916e-05, 9.01389999999995e-05, 9.0639e-05, 8.977799999999869e...</msg>
<status status="PASS" starttime="20201115 23:01:56.015" endtime="20201115 23:01:56.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.032" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.030" endtime="20201115 23:01:56.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.034" level="INFO">VALUE: [9.047300000000064e-05, 8.997200000000066e-05, 8.970800000000084e-05, 9.044499999999803e-05, 8.976399999999912e-05, 9.016599999999916e-05, 9.01389999999995e-05, 9.0639e-05, 8.977799999999869e-05, 9.01389999999995e-05, 9.011100000000036e-05, 9.006899999999818e-05, 8.969499999999728e-05, 8.975000000000302e-05, 9.051399999999987e-05, 8.970900000000032e-05, 9.001400000000284e-05, 9.06800000000027e-05, 8.979099999999879e-05, 8.969400000000127e-05, 9.059700000000129e-05, 9.033400000000094e-05, 9.008300000000122e-05, 9.029200000000223e-05, 9.007000000000112e-05, 8.988899999999925e-05, 8.975000000000302e-05, 9.061200000000033e-05, 9.019500000000125e-05, 9.040199999999984e-05, 8.976399999999912e-05, 9.040299999999932e-05, 8.974999999999955e-05, 9.015299999999907e-05, 9.002799999999894e-05, 8.990299999999882e-05, 9.045799999999812e-05, 8.993099999999796e-05, 8.983400000000044e-05, 8.988899999999925e-05, 8.982000000000087e-05, 9.016600000000263e-05, 8.976399999999912e-05, 8.980499999999836e-05, 9.022199999999744e-05, 8.986100000000011e-05, 9.022300000000039e-05, 8.970800000000084e-05, 9.009700000000079e-05, 9.01670000000021e-05]</msg>
<status status="PASS" starttime="20201115 23:01:56.033" endtime="20201115 23:01:56.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.028" endtime="20201115 23:01:56.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.037" endtime="20201115 23:01:56.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.041" endtime="20201115 23:01:56.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.039" endtime="20201115 23:01:56.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.035" endtime="20201115 23:01:56.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.667" endtime="20201115 23:01:56.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.665" endtime="20201115 23:01:56.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.665" endtime="20201115 23:01:56.062"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.064" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.072" endtime="20201115 23:01:56.092"></status>
</kw>
<msg timestamp="20201115 23:01:56.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.071" endtime="20201115 23:01:56.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.094" endtime="20201115 23:01:56.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.096" endtime="20201115 23:01:56.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.068" endtime="20201115 23:01:56.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.066" endtime="20201115 23:01:56.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.105" endtime="20201115 23:01:56.391"></status>
</kw>
<msg timestamp="20201115 23:01:56.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021879125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.104" endtime="20201115 23:01:56.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021879125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.395" endtime="20201115 23:01:56.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.404" endtime="20201115 23:01:56.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.101" endtime="20201115 23:01:56.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.100" endtime="20201115 23:01:56.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.410" level="INFO">${RESULT} = [{'time': 0.021970514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.138900000000075e-05, 'source_diff': 9.138900000000075e-05}, {'time': 0.022075569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:56.407" endtime="20201115 23:01:56.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.424" level="INFO">${ACCURACY} = {'diff': [9.138900000000075e-05, 9.104100000000004e-05, 9.095900000000157e-05, 9.168099999999971e-05, 9.086200000000058e-05, 9.088900000000025e-05, 9.172200000000241e-05, 9.123600000000148e-05, 9.1249...</msg>
<status status="PASS" starttime="20201115 23:01:56.411" endtime="20201115 23:01:56.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.428" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.427" endtime="20201115 23:01:56.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.431" level="INFO">VALUE: [9.138900000000075e-05, 9.104100000000004e-05, 9.095900000000157e-05, 9.168099999999971e-05, 9.086200000000058e-05, 9.088900000000025e-05, 9.172200000000241e-05, 9.123600000000148e-05, 9.124999999999758e-05, 9.084700000000154e-05, 9.08060000000023e-05, 9.10000000000008e-05, 9.080500000000283e-05, 9.127800000000019e-05, 9.073600000000098e-05, 9.090300000000329e-05, 9.11390000000005e-05, 9.077800000000316e-05, 9.161199999999786e-05, 9.129100000000029e-05, 9.152700000000097e-05, 9.097200000000166e-05, 9.102799999999994e-05, 9.091599999999991e-05, 9.112499999999746e-05, 9.129200000000323e-05, 9.077799999999969e-05, 9.145799999999912e-05, 9.097199999999819e-05, 9.083399999999797e-05, 9.134799999999804e-05, 9.159799999999829e-05, 9.134699999999857e-05, 9.156999999999915e-05, 9.077700000000022e-05, 9.1639000000001e-05, 9.091699999999939e-05, 9.155500000000011e-05, 9.151400000000087e-05, 9.141699999999989e-05, 9.077799999999969e-05, 9.140300000000032e-05, 9.102799999999994e-05, 9.08199999999984e-05, 9.104199999999951e-05, 9.122299999999792e-05, 9.097200000000166e-05, 9.161099999999839e-05, 9.159700000000229e-05, 9.129199999999976e-05]</msg>
<status status="PASS" starttime="20201115 23:01:56.429" endtime="20201115 23:01:56.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.425" endtime="20201115 23:01:56.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.434" endtime="20201115 23:01:56.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.437" endtime="20201115 23:01:56.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.436" endtime="20201115 23:01:56.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.432" endtime="20201115 23:01:56.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.065" endtime="20201115 23:01:56.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.063" endtime="20201115 23:01:56.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.062" endtime="20201115 23:01:56.458"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.461" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.469" endtime="20201115 23:01:56.490"></status>
</kw>
<msg timestamp="20201115 23:01:56.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.467" endtime="20201115 23:01:56.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.491" endtime="20201115 23:01:56.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.494" endtime="20201115 23:01:56.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.465" endtime="20201115 23:01:56.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.463" endtime="20201115 23:01:56.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.504" endtime="20201115 23:01:56.790"></status>
</kw>
<msg timestamp="20201115 23:01:56.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.501" endtime="20201115 23:01:56.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.794" endtime="20201115 23:01:56.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.802" endtime="20201115 23:01:56.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.499" endtime="20201115 23:01:56.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.497" endtime="20201115 23:01:56.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.809" level="INFO">${RESULT} = [{'time': 0.022768278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.176400000000112e-05, 'source_diff': 9.176400000000112e-05}, {'time': 0.022873306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:56.806" endtime="20201115 23:01:56.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.824" level="INFO">${ACCURACY} = {'diff': [9.176400000000112e-05, 9.240299999999785e-05, 9.201400000000137e-05, 9.2333e-05, 9.265199999999862e-05, 9.179099999999732e-05, 9.254200000000101e-05, 9.16659999999972e-05, 9.206900000000018e...</msg>
<status status="PASS" starttime="20201115 23:01:56.810" endtime="20201115 23:01:56.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.828" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.827" endtime="20201115 23:01:56.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.831" level="INFO">VALUE: [9.176400000000112e-05, 9.240299999999785e-05, 9.201400000000137e-05, 9.2333e-05, 9.265199999999862e-05, 9.179099999999732e-05, 9.254200000000101e-05, 9.16659999999972e-05, 9.206900000000018e-05, 9.241700000000089e-05, 9.188899999999778e-05, 9.169499999999928e-05, 9.220899999999935e-05, 9.195900000000257e-05, 9.169500000000275e-05, 9.198600000000223e-05, 9.231899999999696e-05, 9.237500000000218e-05, 9.226399999999815e-05, 9.249999999999883e-05, 9.193099999999996e-05, 9.218100000000021e-05, 9.213799999999855e-05, 9.240300000000132e-05, 9.263899999999853e-05, 9.208399999999922e-05, 9.251400000000187e-05, 9.158399999999872e-05, 9.206900000000018e-05, 9.172199999999894e-05, 9.241599999999794e-05, 9.194400000000005e-05, 9.245800000000012e-05, 9.191700000000039e-05, 9.241700000000089e-05, 9.186099999999864e-05, 9.227800000000119e-05, 9.19719999999992e-05, 9.223599999999901e-05, 9.190299999999735e-05, 9.202800000000094e-05, 9.222199999999944e-05, 9.252700000000197e-05, 9.223599999999901e-05, 9.243000000000098e-05, 9.206900000000018e-05, 9.19719999999992e-05, 9.269500000000028e-05, 9.222199999999944e-05, 9.230600000000033e-05]</msg>
<status status="PASS" starttime="20201115 23:01:56.829" endtime="20201115 23:01:56.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.825" endtime="20201115 23:01:56.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.834" endtime="20201115 23:01:56.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.837" endtime="20201115 23:01:56.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.836" endtime="20201115 23:01:56.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.832" endtime="20201115 23:01:56.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.461" endtime="20201115 23:01:56.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.460" endtime="20201115 23:01:56.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.459" endtime="20201115 23:01:56.858"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.861" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.869" endtime="20201115 23:01:56.889"></status>
</kw>
<msg timestamp="20201115 23:01:56.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.867" endtime="20201115 23:01:56.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.891" endtime="20201115 23:01:56.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.894" endtime="20201115 23:01:56.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.865" endtime="20201115 23:01:56.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.863" endtime="20201115 23:01:56.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.903" endtime="20201115 23:01:57.189"></status>
</kw>
<msg timestamp="20201115 23:01:57.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021966972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.901" endtime="20201115 23:01:57.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021966972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.193" endtime="20201115 23:01:57.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.201" endtime="20201115 23:01:57.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.898" endtime="20201115 23:01:57.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.897" endtime="20201115 23:01:57.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.208" level="INFO">${RESULT} = [{'time': 0.021966972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.298599999999976e-05, 'source_diff': 9.298599999999976e-05}, {'time': 0.022071986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:57.204" endtime="20201115 23:01:57.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.221" level="INFO">${ACCURACY} = {'diff': [9.298599999999976e-05, 9.302799999999847e-05, 9.318099999999774e-05, 9.323600000000001e-05, 9.352799999999897e-05, 9.312499999999946e-05, 9.324999999999958e-05, 9.291599999999844e-05, 9.3026...</msg>
<status status="PASS" starttime="20201115 23:01:57.209" endtime="20201115 23:01:57.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.226" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.225" endtime="20201115 23:01:57.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.228" level="INFO">VALUE: [9.298599999999976e-05, 9.302799999999847e-05, 9.318099999999774e-05, 9.323600000000001e-05, 9.352799999999897e-05, 9.312499999999946e-05, 9.324999999999958e-05, 9.291599999999844e-05, 9.3026999999999e-05, 9.295800000000062e-05, 9.290200000000234e-05, 9.270800000000037e-05, 9.301400000000237e-05, 9.304200000000151e-05, 9.316699999999817e-05, 9.272199999999994e-05, 9.302799999999847e-05, 9.35139999999994e-05, 9.358400000000072e-05, 9.322299999999992e-05, 9.365199999999962e-05, 9.286099999999964e-05, 9.301400000000237e-05, 9.36659999999992e-05, 9.359699999999735e-05, 9.290299999999835e-05, 9.306900000000118e-05, 9.308300000000075e-05, 9.272199999999994e-05, 9.306999999999718e-05, 9.305500000000161e-05, 9.323600000000001e-05, 9.313899999999903e-05, 9.286099999999964e-05, 9.270900000000332e-05, 9.348600000000026e-05, 9.298599999999976e-05, 9.344400000000155e-05, 9.336100000000014e-05, 9.329199999999829e-05, 9.349999999999983e-05, 9.3333000000001e-05, 9.309700000000032e-05, 9.33200000000009e-05, 9.340299999999885e-05, 9.362499999999996e-05, 9.309700000000032e-05, 9.304099999999857e-05, 9.318000000000173e-05, 9.31390000000025e-05]</msg>
<status status="PASS" starttime="20201115 23:01:57.227" endtime="20201115 23:01:57.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.222" endtime="20201115 23:01:57.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.231" endtime="20201115 23:01:57.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.235" endtime="20201115 23:01:57.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.233" endtime="20201115 23:01:57.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.230" endtime="20201115 23:01:57.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.861" endtime="20201115 23:01:57.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.860" endtime="20201115 23:01:57.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.859" endtime="20201115 23:01:57.256"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.258" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.267" endtime="20201115 23:01:57.288"></status>
</kw>
<msg timestamp="20201115 23:01:57.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.265" endtime="20201115 23:01:57.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.290" endtime="20201115 23:01:57.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.292" endtime="20201115 23:01:57.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.262" endtime="20201115 23:01:57.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.260" endtime="20201115 23:01:57.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.301" endtime="20201115 23:01:57.587"></status>
</kw>
<msg timestamp="20201115 23:01:57.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022263153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022357319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.300" endtime="20201115 23:01:57.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022263153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022357319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.591" endtime="20201115 23:01:57.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.600" endtime="20201115 23:01:57.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.297" endtime="20201115 23:01:57.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.295" endtime="20201115 23:01:57.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.606" level="INFO">${RESULT} = [{'time': 0.022357319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.41659999999997e-05, 'source_diff': 9.41659999999997e-05}, {'time': 0.022464278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:57.603" endtime="20201115 23:01:57.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.620" level="INFO">${ACCURACY} = {'diff': [9.41659999999997e-05, 9.384700000000107e-05, 9.451399999999693e-05, 9.41529999999996e-05, 9.370900000000085e-05, 9.397199999999772e-05, 9.458300000000225e-05, 9.404199999999904e-05, 9.402800...</msg>
<status status="PASS" starttime="20201115 23:01:57.607" endtime="20201115 23:01:57.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.625" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.624" endtime="20201115 23:01:57.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.628" level="INFO">VALUE: [9.41659999999997e-05, 9.384700000000107e-05, 9.451399999999693e-05, 9.41529999999996e-05, 9.370900000000085e-05, 9.397199999999772e-05, 9.458300000000225e-05, 9.404199999999904e-05, 9.402800000000294e-05, 9.4333000000002e-05, 9.452799999999997e-05, 9.41529999999996e-05, 9.409699999999785e-05, 9.425000000000058e-05, 9.386100000000064e-05, 9.419499999999831e-05, 9.406900000000218e-05, 9.429099999999982e-05, 9.459700000000182e-05, 9.429200000000276e-05, 9.388899999999978e-05, 9.422199999999797e-05, 9.41529999999996e-05, 9.408300000000175e-05, 9.404199999999904e-05, 9.402799999999947e-05, 9.369500000000128e-05, 9.373699999999999e-05, 9.427799999999972e-05, 9.423700000000049e-05, 9.370900000000085e-05, 9.416600000000316e-05, 9.381899999999846e-05, 9.445799999999865e-05, 9.383299999999803e-05, 9.459699999999835e-05, 9.437500000000071e-05, 9.427699999999678e-05, 9.426400000000015e-05, 9.423599999999754e-05, 9.404199999999904e-05, 9.404199999999904e-05, 9.404199999999904e-05, 9.388899999999978e-05, 9.433299999999853e-05, 9.422200000000144e-05, 9.459700000000182e-05, 9.397199999999772e-05, 9.402799999999947e-05, 9.429199999999929e-05]</msg>
<status status="PASS" starttime="20201115 23:01:57.626" endtime="20201115 23:01:57.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.621" endtime="20201115 23:01:57.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.631" endtime="20201115 23:01:57.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.635" endtime="20201115 23:01:57.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.633" endtime="20201115 23:01:57.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.629" endtime="20201115 23:01:57.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.259" endtime="20201115 23:01:57.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.257" endtime="20201115 23:01:57.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.256" endtime="20201115 23:01:57.656"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.659" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.667" endtime="20201115 23:01:57.687"></status>
</kw>
<msg timestamp="20201115 23:01:57.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.665" endtime="20201115 23:01:57.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.689" endtime="20201115 23:01:57.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.691" endtime="20201115 23:01:57.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.663" endtime="20201115 23:01:57.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.661" endtime="20201115 23:01:57.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.700" endtime="20201115 23:01:57.986"></status>
</kw>
<msg timestamp="20201115 23:01:57.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022347736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.699" endtime="20201115 23:01:57.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022347736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.990" endtime="20201115 23:01:57.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.999" endtime="20201115 23:01:58.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.696" endtime="20201115 23:01:58.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.694" endtime="20201115 23:01:58.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.006" level="INFO">${RESULT} = [{'time': 0.022347736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.52079999999994e-05, 'source_diff': 9.52079999999994e-05}, {'time': 0.022456722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:58.002" endtime="20201115 23:01:58.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.019" level="INFO">${ACCURACY} = {'diff': [9.52079999999994e-05, 9.536099999999867e-05, 9.479199999999979e-05, 9.506899999999971e-05, 9.563900000000153e-05, 9.50140000000009e-05, 9.490300000000035e-05, 9.472299999999795e-05, 9.501400...</msg>
<status status="PASS" starttime="20201115 23:01:58.007" endtime="20201115 23:01:58.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.023" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.022" endtime="20201115 23:01:58.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.026" level="INFO">VALUE: [9.52079999999994e-05, 9.536099999999867e-05, 9.479199999999979e-05, 9.506899999999971e-05, 9.563900000000153e-05, 9.50140000000009e-05, 9.490300000000035e-05, 9.472299999999795e-05, 9.50140000000009e-05, 9.55270000000015e-05, 9.540200000000137e-05, 9.476399999999718e-05, 9.483299999999903e-05, 9.537500000000171e-05, 9.483299999999903e-05, 9.491699999999992e-05, 9.483299999999903e-05, 9.484700000000207e-05, 9.497199999999872e-05, 9.506999999999918e-05, 9.540300000000085e-05, 9.5027999999997e-05, 9.50140000000009e-05, 9.508299999999928e-05, 9.472199999999847e-05, 9.552800000000097e-05, 9.495799999999915e-05, 9.552800000000097e-05, 9.48469999999986e-05, 9.540299999999738e-05, 9.502699999999753e-05, 9.56530000000011e-05, 9.509800000000179e-05, 9.552800000000097e-05, 9.49859999999983e-05, 9.5027000000001e-05, 9.523599999999854e-05, 9.540300000000085e-05, 9.49859999999983e-05, 9.511099999999842e-05, 9.48330000000025e-05, 9.47079999999989e-05, 9.507000000000265e-05, 9.472299999999795e-05, 9.538899999999781e-05, 9.554100000000107e-05, 9.484800000000154e-05, 9.529099999999735e-05, 9.526400000000115e-05, 9.50140000000009e-05]</msg>
<status status="PASS" starttime="20201115 23:01:58.025" endtime="20201115 23:01:58.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.020" endtime="20201115 23:01:58.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.030" endtime="20201115 23:01:58.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.033" endtime="20201115 23:01:58.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.031" endtime="20201115 23:01:58.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.028" endtime="20201115 23:01:58.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.659" endtime="20201115 23:01:58.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.658" endtime="20201115 23:01:58.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.657" endtime="20201115 23:01:58.054"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.056" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.065" endtime="20201115 23:01:58.086"></status>
</kw>
<msg timestamp="20201115 23:01:58.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.063" endtime="20201115 23:01:58.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.088" endtime="20201115 23:01:58.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.090" endtime="20201115 23:01:58.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.060" endtime="20201115 23:01:58.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.058" endtime="20201115 23:01:58.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.099" endtime="20201115 23:01:58.384"></status>
</kw>
<msg timestamp="20201115 23:01:58.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.098" endtime="20201115 23:01:58.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.388" endtime="20201115 23:01:58.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.396" endtime="20201115 23:01:58.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.095" endtime="20201115 23:01:58.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.093" endtime="20201115 23:01:58.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.403" level="INFO">${RESULT} = [{'time': 0.022844708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.636099999999967e-05, 'source_diff': 9.636099999999967e-05}, {'time': 0.022953694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:58.400" endtime="20201115 23:01:58.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.418" level="INFO">${ACCURACY} = {'diff': [9.636099999999967e-05, 9.57079999999999e-05, 9.613899999999856e-05, 9.640300000000185e-05, 9.609699999999985e-05, 9.623599999999954e-05, 9.659700000000035e-05, 9.577799999999775e-05, 9.59590...</msg>
<status status="PASS" starttime="20201115 23:01:58.404" endtime="20201115 23:01:58.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.422" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.421" endtime="20201115 23:01:58.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.425" level="INFO">VALUE: [9.636099999999967e-05, 9.57079999999999e-05, 9.613899999999856e-05, 9.640300000000185e-05, 9.609699999999985e-05, 9.623599999999954e-05, 9.659700000000035e-05, 9.577799999999775e-05, 9.59590000000031e-05, 9.605600000000061e-05, 9.652800000000197e-05, 9.613900000000203e-05, 9.615199999999866e-05, 9.662499999999949e-05, 9.641600000000194e-05, 9.66530000000021e-05, 9.597199999999972e-05, 9.586100000000264e-05, 9.616700000000117e-05, 9.604199999999757e-05, 9.640299999999838e-05, 9.576400000000165e-05, 9.580600000000036e-05, 9.584799999999907e-05, 9.64019999999989e-05, 9.665199999999916e-05, 9.599999999999886e-05, 9.595800000000015e-05, 9.659699999999688e-05, 9.581900000000046e-05, 9.643000000000151e-05, 9.611099999999942e-05, 9.61530000000016e-05, 9.588899999999831e-05, 9.645900000000013e-05, 9.644399999999761e-05, 9.616599999999823e-05, 9.651299999999946e-05, 9.57079999999999e-05, 9.644400000000108e-05, 9.661099999999992e-05, 9.597199999999972e-05, 9.665299999999863e-05, 9.643100000000099e-05, 9.650000000000283e-05, 9.659699999999688e-05, 9.619500000000031e-05, 9.658400000000025e-05, 9.619500000000031e-05, 9.663899999999906e-05]</msg>
<status status="PASS" starttime="20201115 23:01:58.423" endtime="20201115 23:01:58.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.419" endtime="20201115 23:01:58.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.428" endtime="20201115 23:01:58.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.432" endtime="20201115 23:01:58.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.430" endtime="20201115 23:01:58.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.427" endtime="20201115 23:01:58.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.057" endtime="20201115 23:01:58.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.055" endtime="20201115 23:01:58.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.054" endtime="20201115 23:01:58.453"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.455" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.463" endtime="20201115 23:01:58.484"></status>
</kw>
<msg timestamp="20201115 23:01:58.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.462" endtime="20201115 23:01:58.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.486" endtime="20201115 23:01:58.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.488" endtime="20201115 23:01:58.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.459" endtime="20201115 23:01:58.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.457" endtime="20201115 23:01:58.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.497" endtime="20201115 23:01:58.783"></status>
</kw>
<msg timestamp="20201115 23:01:58.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.496" endtime="20201115 23:01:58.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.787" endtime="20201115 23:01:58.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.795" endtime="20201115 23:01:58.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.493" endtime="20201115 23:01:58.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.491" endtime="20201115 23:01:58.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.802" level="INFO">${RESULT} = [{'time': 0.021896167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.690300000000235e-05, 'source_diff': 9.690300000000235e-05}, {'time': 0.022007167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:58.799" endtime="20201115 23:01:58.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.816" level="INFO">${ACCURACY} = {'diff': [9.690300000000235e-05, 9.695900000000063e-05, 9.741699999999895e-05, 9.722300000000045e-05, 9.688799999999984e-05, 9.744399999999862e-05, 9.733300000000153e-05, 9.733299999999806e-05, 9.7652...</msg>
<status status="PASS" starttime="20201115 23:01:58.803" endtime="20201115 23:01:58.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.820" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.819" endtime="20201115 23:01:58.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.823" level="INFO">VALUE: [9.690300000000235e-05, 9.695900000000063e-05, 9.741699999999895e-05, 9.722300000000045e-05, 9.688799999999984e-05, 9.744399999999862e-05, 9.733300000000153e-05, 9.733299999999806e-05, 9.765299999999963e-05, 9.718099999999827e-05, 9.738899999999981e-05, 9.683300000000103e-05, 9.693100000000149e-05, 9.709699999999738e-05, 9.740299999999938e-05, 9.699999999999986e-05, 9.736100000000067e-05, 9.705500000000214e-05, 9.713899999999956e-05, 9.688899999999931e-05, 9.72080000000014e-05, 9.695800000000115e-05, 9.738899999999981e-05, 9.768100000000224e-05, 9.680600000000136e-05, 9.738899999999981e-05, 9.682000000000093e-05, 9.709800000000032e-05, 9.658300000000078e-05, 9.697200000000072e-05, 9.687499999999974e-05, 9.70409999999991e-05, 9.744400000000208e-05, 9.722200000000097e-05, 9.736100000000067e-05, 9.682000000000093e-05, 9.740299999999938e-05, 9.726399999999968e-05, 9.740300000000285e-05, 9.720799999999793e-05, 9.750000000000036e-05, 9.758399999999778e-05, 9.672200000000047e-05, 9.742999999999905e-05, 9.765299999999963e-05, 9.751399999999993e-05, 9.747200000000122e-05, 9.7027999999999e-05, 9.683300000000103e-05, 9.73470000000011e-05]</msg>
<status status="PASS" starttime="20201115 23:01:58.822" endtime="20201115 23:01:58.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.817" endtime="20201115 23:01:58.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.826" endtime="20201115 23:01:58.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.829" endtime="20201115 23:01:58.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.828" endtime="20201115 23:01:58.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.824" endtime="20201115 23:01:58.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.456" endtime="20201115 23:01:58.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.454" endtime="20201115 23:01:58.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.453" endtime="20201115 23:01:58.851"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.853" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.861" endtime="20201115 23:01:58.882"></status>
</kw>
<msg timestamp="20201115 23:01:58.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.860" endtime="20201115 23:01:58.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.883" endtime="20201115 23:01:58.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.886" endtime="20201115 23:01:58.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.857" endtime="20201115 23:01:58.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.855" endtime="20201115 23:01:58.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.895" endtime="20201115 23:01:59.181"></status>
</kw>
<msg timestamp="20201115 23:01:59.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.893" endtime="20201115 23:01:59.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.185" endtime="20201115 23:01:59.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.194" endtime="20201115 23:01:59.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.891" endtime="20201115 23:01:59.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.889" endtime="20201115 23:01:59.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:59.201" level="INFO">${RESULT} = [{'time': 0.022081292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.861099999999845e-05, 'source_diff': 9.861099999999845e-05}, {'time': 0.022194306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:59.197" endtime="20201115 23:01:59.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:59.214" level="INFO">${ACCURACY} = {'diff': [9.861099999999845e-05, 9.79730000000012e-05, 9.861100000000192e-05, 9.795899999999816e-05, 9.769399999999887e-05, 9.784699999999813e-05, 9.833299999999906e-05, 9.791699999999945e-05, 9.78750...</msg>
<status status="PASS" starttime="20201115 23:01:59.202" endtime="20201115 23:01:59.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.219" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:01:59.218" endtime="20201115 23:01:59.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.221" level="INFO">VALUE: [9.861099999999845e-05, 9.79730000000012e-05, 9.861100000000192e-05, 9.795899999999816e-05, 9.769399999999887e-05, 9.784699999999813e-05, 9.833299999999906e-05, 9.791699999999945e-05, 9.787500000000074e-05, 9.800000000000086e-05, 9.784699999999813e-05, 9.808400000000175e-05, 9.786200000000064e-05, 9.78340000000015e-05, 9.768099999999877e-05, 9.838799999999787e-05, 9.833299999999906e-05, 9.78470000000016e-05, 9.797199999999825e-05, 9.86670000000002e-05, 9.770799999999843e-05, 9.845800000000265e-05, 9.777700000000028e-05, 9.822300000000145e-05, 9.813900000000056e-05, 9.859799999999835e-05, 9.780600000000236e-05, 9.777700000000028e-05, 9.780499999999942e-05, 9.782000000000193e-05, 9.822200000000197e-05, 9.784699999999813e-05, 9.78059999999989e-05, 9.861099999999845e-05, 9.770899999999791e-05, 9.859699999999888e-05, 9.866600000000073e-05, 9.86670000000002e-05, 9.773600000000104e-05, 9.801400000000043e-05, 9.852700000000103e-05, 9.827700000000078e-05, 9.83470000000021e-05, 9.79860000000013e-05, 9.8028e-05, 9.825000000000111e-05, 9.783300000000203e-05, 9.826400000000068e-05, 9.798599999999782e-05, 9.822299999999798e-05]</msg>
<status status="PASS" starttime="20201115 23:01:59.220" endtime="20201115 23:01:59.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.215" endtime="20201115 23:01:59.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.224" endtime="20201115 23:01:59.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:59.228" endtime="20201115 23:01:59.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.226" endtime="20201115 23:01:59.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.223" endtime="20201115 23:01:59.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.854" endtime="20201115 23:01:59.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.852" endtime="20201115 23:01:59.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.851" endtime="20201115 23:01:59.249"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.251" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.259" endtime="20201115 23:01:59.281"></status>
</kw>
<msg timestamp="20201115 23:01:59.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.258" endtime="20201115 23:01:59.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.282" endtime="20201115 23:01:59.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.285" endtime="20201115 23:01:59.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.255" endtime="20201115 23:01:59.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.253" endtime="20201115 23:01:59.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.294" endtime="20201115 23:01:59.582"></status>
</kw>
<msg timestamp="20201115 23:01:59.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.292" endtime="20201115 23:01:59.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.586" endtime="20201115 23:01:59.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.594" endtime="20201115 23:01:59.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.290" endtime="20201115 23:01:59.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.288" endtime="20201115 23:01:59.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:59.601" level="INFO">${RESULT} = [{'time': 0.021938667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.872299999999848e-05, 'source_diff': 9.872299999999848e-05}, {'time': 0.022050708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:59.598" endtime="20201115 23:01:59.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:59.614" level="INFO">${ACCURACY} = {'diff': [9.872299999999848e-05, 9.874999999999814e-05, 9.940299999999791e-05, 9.947199999999976e-05, 9.888900000000131e-05, 9.967999999999783e-05, 9.927800000000125e-05, 9.890299999999741e-05, 9.9014...</msg>
<status status="PASS" starttime="20201115 23:01:59.602" endtime="20201115 23:01:59.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.619" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:01:59.618" endtime="20201115 23:01:59.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.621" level="INFO">VALUE: [9.872299999999848e-05, 9.874999999999814e-05, 9.940299999999791e-05, 9.947199999999976e-05, 9.888900000000131e-05, 9.967999999999783e-05, 9.927800000000125e-05, 9.890299999999741e-05, 9.901400000000143e-05, 9.915300000000113e-05, 9.919499999999984e-05, 9.895900000000263e-05, 9.872299999999848e-05, 9.884699999999913e-05, 9.958399999999978e-05, 9.927799999999778e-05, 9.86800000000003e-05, 9.908299999999981e-05, 9.873599999999857e-05, 9.877799999999728e-05, 9.934699999999963e-05, 9.96670000000012e-05, 9.895799999999969e-05, 9.954200000000107e-05, 9.873600000000204e-05, 9.930500000000092e-05, 9.927799999999778e-05, 9.895799999999969e-05, 9.88609999999987e-05, 9.930500000000092e-05, 9.894400000000012e-05, 9.88609999999987e-05, 9.918100000000027e-05, 9.947199999999976e-05, 9.947199999999976e-05, 9.884699999999913e-05, 9.905500000000067e-05, 9.958399999999978e-05, 9.920899999999941e-05, 9.915199999999819e-05, 9.908299999999981e-05, 9.926399999999821e-05, 9.89999999999984e-05, 9.901400000000143e-05, 9.89999999999984e-05, 9.931999999999996e-05, 9.970800000000044e-05, 9.938899999999834e-05, 9.911099999999895e-05, 9.890199999999794e-05]</msg>
<status status="PASS" starttime="20201115 23:01:59.620" endtime="20201115 23:01:59.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.615" endtime="20201115 23:01:59.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.625" endtime="20201115 23:01:59.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:59.628" endtime="20201115 23:01:59.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.627" endtime="20201115 23:01:59.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.623" endtime="20201115 23:01:59.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.252" endtime="20201115 23:01:59.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.250" endtime="20201115 23:01:59.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.249" endtime="20201115 23:01:59.660"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.662" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.670" endtime="20201115 23:01:59.692"></status>
</kw>
<msg timestamp="20201115 23:01:59.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.669" endtime="20201115 23:01:59.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.694" endtime="20201115 23:01:59.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.697" endtime="20201115 23:01:59.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.666" endtime="20201115 23:01:59.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.664" endtime="20201115 23:01:59.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.706" endtime="20201115 23:01:59.991"></status>
</kw>
<msg timestamp="20201115 23:01:59.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033373347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033473931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.704" endtime="20201115 23:01:59.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033373347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033473931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.995" endtime="20201115 23:02:00.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.003" endtime="20201115 23:02:00.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.702" endtime="20201115 23:02:00.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.700" endtime="20201115 23:02:00.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.010" level="INFO">${RESULT} = [{'time': 0.033473931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010058400000000078, 'source_diff': 0.00010058400000000078}, {'time': 0.033588931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:00.007" endtime="20201115 23:02:00.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.024" level="INFO">${ACCURACY} = {'diff': [0.00010058400000000078, 0.0001005280000000025, 9.979100000000185e-05, 0.00010034700000000063, 0.00010047200000000422, 9.97080000000039e-05, 0.00010054199999999514, 9.982000000000046e-05, 0.0...</msg>
<status status="PASS" starttime="20201115 23:02:00.011" endtime="20201115 23:02:00.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.029" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.028" endtime="20201115 23:02:00.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.032" level="INFO">VALUE: [0.00010058400000000078, 0.0001005280000000025, 9.979100000000185e-05, 0.00010034700000000063, 0.00010047200000000422, 9.97080000000039e-05, 0.00010054199999999514, 9.982000000000046e-05, 0.00010054200000000207, 9.983300000000056e-05, 0.00010027799999999532, 0.00010022299999999651, 0.00010006900000000124, 9.983400000000003e-05, 9.990299999999841e-05, 0.00010015199999999919, 9.970799999999697e-05, 0.00010061100000000045, 0.00010009700000000038, 0.00010033299999999412, 0.00010040299999999891, 9.981900000000099e-05, 0.00010044499999999762, 9.969500000000381e-05, 9.969499999999687e-05, 0.00010008400000000028, 0.00010008300000000081, 0.00010027699999999584, 9.991699999999798e-05, 9.970799999999697e-05, 0.0001005280000000025, 0.00010000000000000286, 0.00010040299999999891, 9.969400000000433e-05, 9.972299999999601e-05, 0.00010011199999999942, 0.000100513999999996, 9.979100000000185e-05, 0.00010012499999999952, 0.00010013899999999909, 0.00010047199999999729, 9.973600000000304e-05, 0.00010061100000000045, 0.00010017999999999833, 0.00010056900000000174, 0.00010007000000000071, 0.0001001809999999978, 0.00010020900000000388, 0.0001001530000000056, 0.00010040299999999891]</msg>
<status status="PASS" starttime="20201115 23:02:00.030" endtime="20201115 23:02:00.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.025" endtime="20201115 23:02:00.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.035" endtime="20201115 23:02:00.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.038" endtime="20201115 23:02:00.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.036" endtime="20201115 23:02:00.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.033" endtime="20201115 23:02:00.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.663" endtime="20201115 23:02:00.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.661" endtime="20201115 23:02:00.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.660" endtime="20201115 23:02:00.059"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.062" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.070" endtime="20201115 23:02:00.091"></status>
</kw>
<msg timestamp="20201115 23:02:00.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.068" endtime="20201115 23:02:00.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.093" endtime="20201115 23:02:00.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.095" endtime="20201115 23:02:00.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.065" endtime="20201115 23:02:00.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.063" endtime="20201115 23:02:00.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.105" endtime="20201115 23:02:00.391"></status>
</kw>
<msg timestamp="20201115 23:02:00.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022337389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022438319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.103" endtime="20201115 23:02:00.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022337389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022438319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.395" endtime="20201115 23:02:00.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.403" endtime="20201115 23:02:00.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.100" endtime="20201115 23:02:00.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.099" endtime="20201115 23:02:00.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.410" level="INFO">${RESULT} = [{'time': 0.022438319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010093000000000255, 'source_diff': 0.00010093000000000255}, {'time': 0.022551347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:00.406" endtime="20201115 23:02:00.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.423" level="INFO">${ACCURACY} = {'diff': [0.00010093000000000255, 0.00010136099999999773, 0.00010138900000000034, 0.00010075000000000014, 0.0001008610000000007, 0.00010143099999999905, 0.00010143099999999905, 0.00010127799999999978,...</msg>
<status status="PASS" starttime="20201115 23:02:00.411" endtime="20201115 23:02:00.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.427" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.426" endtime="20201115 23:02:00.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.430" level="INFO">VALUE: [0.00010093000000000255, 0.00010136099999999773, 0.00010138900000000034, 0.00010075000000000014, 0.0001008610000000007, 0.00010143099999999905, 0.00010143099999999905, 0.00010127799999999978, 0.00010152800000000003, 0.0001011809999999988, 0.00010079099999999938, 0.00010095799999999822, 0.00010161100000000145, 0.00010129099999999988, 0.00010163900000000059, 0.00010145799999999872, 0.00010166699999999973, 0.00010102799999999953, 0.00010147200000000176, 0.0001010419999999991, 0.00010123700000000055, 0.00010159799999999788, 0.000100722000000001, 0.0001013619999999972, 0.00010126400000000021, 0.00010062500000000002, 0.00010120799999999847, 0.0001008610000000007, 0.00010120800000000194, 0.00010106899999999877, 0.00010166699999999973, 0.00010144499999999862, 0.00010144499999999862, 0.00010161199999999745, 0.00010147199999999829, 0.00010144399999999915, 0.00010083300000000156, 0.00010098600000000083, 0.00010076399999999971, 0.00010061100000000045, 0.00010091700000000245, 0.00010090299999999941, 0.00010095900000000116, 0.00010143100000000252, 0.00010134799999999763, 0.00010144499999999862, 0.00010117999999999933, 0.00010073600000000058, 0.00010133300000000206, 0.00010127700000000031]</msg>
<status status="PASS" starttime="20201115 23:02:00.428" endtime="20201115 23:02:00.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.424" endtime="20201115 23:02:00.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.433" endtime="20201115 23:02:00.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.436" endtime="20201115 23:02:00.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.435" endtime="20201115 23:02:00.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.431" endtime="20201115 23:02:00.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.062" endtime="20201115 23:02:00.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.060" endtime="20201115 23:02:00.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.060" endtime="20201115 23:02:00.458"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.460" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.469" endtime="20201115 23:02:00.490"></status>
</kw>
<msg timestamp="20201115 23:02:00.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.467" endtime="20201115 23:02:00.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.492" endtime="20201115 23:02:00.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.494" endtime="20201115 23:02:00.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.465" endtime="20201115 23:02:00.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.462" endtime="20201115 23:02:00.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.503" endtime="20201115 23:02:00.790"></status>
</kw>
<msg timestamp="20201115 23:02:00.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022625764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.502" endtime="20201115 23:02:00.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022625764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.794" endtime="20201115 23:02:00.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.803" endtime="20201115 23:02:00.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.499" endtime="20201115 23:02:00.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.498" endtime="20201115 23:02:00.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.809" level="INFO">${RESULT} = [{'time': 0.022625764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010234699999999916, 'source_diff': 0.00010234699999999916}, {'time': 0.022742722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:00.806" endtime="20201115 23:02:00.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.822" level="INFO">${ACCURACY} = {'diff': [0.00010234699999999916, 0.00010226400000000122, 0.00010263900000000159, 0.00010208300000000281, 0.0001021939999999999, 0.00010216700000000023, 0.00010206999999999924, 0.00010184699999999866,...</msg>
<status status="PASS" starttime="20201115 23:02:00.810" endtime="20201115 23:02:00.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.827" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.826" endtime="20201115 23:02:00.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.829" level="INFO">VALUE: [0.00010234699999999916, 0.00010226400000000122, 0.00010263900000000159, 0.00010208300000000281, 0.0001021939999999999, 0.00010216700000000023, 0.00010206999999999924, 0.00010184699999999866, 0.00010208399999999881, 0.00010198599999999836, 0.00010197199999999879, 0.00010175000000000115, 0.00010248600000000233, 0.00010181899999999952, 0.00010259700000000288, 0.00010220799999999947, 0.00010226400000000122, 0.00010191699999999998, 0.0001021809999999998, 0.00010245900000000266, 0.00010252800000000103, 0.00010176400000000071, 0.00010186099999999823, 0.00010225000000000165, 0.00010187500000000127, 0.00010227800000000078, 0.00010176400000000071, 0.00010195800000000269, 0.00010238899999999787, 0.00010213900000000109, 0.00010226400000000122, 0.00010198600000000183, 0.00010215299999999719, 0.00010226399999999775, 0.0001022220000000025, 0.0001022220000000025, 0.00010241700000000048, 0.00010238900000000134, 0.00010263900000000159, 0.00010249999999999843, 0.00010234699999999916, 0.00010262499999999855, 0.00010229200000000035, 0.00010233400000000253, 0.00010265300000000116, 0.00010222299999999851, 0.00010220799999999947, 0.00010191699999999998, 0.00010229100000000088, 0.00010268000000000083]</msg>
<status status="PASS" starttime="20201115 23:02:00.828" endtime="20201115 23:02:00.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.823" endtime="20201115 23:02:00.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.833" endtime="20201115 23:02:00.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.836" endtime="20201115 23:02:00.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.835" endtime="20201115 23:02:00.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.831" endtime="20201115 23:02:00.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.461" endtime="20201115 23:02:00.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.459" endtime="20201115 23:02:00.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.458" endtime="20201115 23:02:00.857"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.860" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.868" endtime="20201115 23:02:00.889"></status>
</kw>
<msg timestamp="20201115 23:02:00.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.866" endtime="20201115 23:02:00.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.891" endtime="20201115 23:02:00.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.893" endtime="20201115 23:02:00.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.864" endtime="20201115 23:02:00.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.862" endtime="20201115 23:02:00.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.902" endtime="20201115 23:02:01.188"></status>
</kw>
<msg timestamp="20201115 23:02:01.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:00.901" endtime="20201115 23:02:01.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:01.192" endtime="20201115 23:02:01.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.200" endtime="20201115 23:02:01.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.898" endtime="20201115 23:02:01.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.897" endtime="20201115 23:02:01.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:01.207" level="INFO">${RESULT} = [{'time': 0.022011236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001032359999999996, 'source_diff': 0.0001032359999999996}, {'time': 0.022129236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:01.203" endtime="20201115 23:02:01.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:01.220" level="INFO">${ACCURACY} = {'diff': [0.0001032359999999996, 0.00010281900000000052, 0.00010270799999999997, 0.00010356900000000127, 0.00010309699999999991, 0.00010351400000000247, 0.00010326400000000222, 0.00010326399999999875,...</msg>
<status status="PASS" starttime="20201115 23:02:01.208" endtime="20201115 23:02:01.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.224" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:02:01.223" endtime="20201115 23:02:01.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.227" level="INFO">VALUE: [0.0001032359999999996, 0.00010281900000000052, 0.00010270799999999997, 0.00010356900000000127, 0.00010309699999999991, 0.00010351400000000247, 0.00010326400000000222, 0.00010326399999999875, 0.00010365300000000216, 0.00010269499999999987, 0.00010309699999999991, 0.00010341599999999854, 0.0001030139999999985, 0.00010277799999999782, 0.00010347200000000029, 0.00010282, 0.00010362499999999955, 0.00010293100000000055, 0.00010358400000000031, 0.00010333400000000006, 0.00010284699999999966, 0.00010340199999999897, 0.00010301400000000197, 0.00010298599999999936, 0.0001033749999999993, 0.00010319399999999743, 0.00010345799999999725, 0.00010320800000000047, 0.00010343099999999758, 0.00010308399999999981, 0.00010345799999999725, 0.00010333400000000006, 0.00010362499999999955, 0.00010320800000000047, 0.00010320800000000047, 0.00010295800000000022, 0.00010365300000000216, 0.00010327800000000179, 0.00010276399999999825, 0.00010284699999999966, 0.00010302799999999807, 0.00010365300000000216, 0.00010270899999999944, 0.00010284799999999913, 0.00010270799999999997, 0.00010302700000000206, 0.00010272199999999954, 0.00010284699999999966, 0.00010327799999999832, 0.00010336099999999973]</msg>
<status status="PASS" starttime="20201115 23:02:01.225" endtime="20201115 23:02:01.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.221" endtime="20201115 23:02:01.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.230" endtime="20201115 23:02:01.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:01.234" endtime="20201115 23:02:01.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.232" endtime="20201115 23:02:01.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.229" endtime="20201115 23:02:01.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.860" endtime="20201115 23:02:01.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.858" endtime="20201115 23:02:01.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.858" endtime="20201115 23:02:01.255"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.257" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.265" endtime="20201115 23:02:01.287"></status>
</kw>
<msg timestamp="20201115 23:02:01.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.264" endtime="20201115 23:02:01.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.288" endtime="20201115 23:02:01.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.291" endtime="20201115 23:02:01.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.261" endtime="20201115 23:02:01.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.259" endtime="20201115 23:02:01.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.300" endtime="20201115 23:02:01.588"></status>
</kw>
<msg timestamp="20201115 23:02:01.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.299" endtime="20201115 23:02:01.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.592" endtime="20201115 23:02:01.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.600" endtime="20201115 23:02:01.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.296" endtime="20201115 23:02:01.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.294" endtime="20201115 23:02:01.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:01.606" level="INFO">${RESULT} = [{'time': 0.022737486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010359700000000041, 'source_diff': 0.00010359700000000041}, {'time': 0.022856472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:01.603" endtime="20201115 23:02:01.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:01.621" level="INFO">${ACCURACY} = {'diff': [0.00010359700000000041, 0.00010419399999999843, 0.00010413900000000309, 0.0001038749999999998, 0.00010395900000000069, 0.00010369500000000087, 0.00010426399999999975, 0.00010433400000000106,...</msg>
<status status="PASS" starttime="20201115 23:02:01.608" endtime="20201115 23:02:01.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.626" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:02:01.625" endtime="20201115 23:02:01.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.628" level="INFO">VALUE: [0.00010359700000000041, 0.00010419399999999843, 0.00010413900000000309, 0.0001038749999999998, 0.00010395900000000069, 0.00010369500000000087, 0.00010426399999999975, 0.00010433400000000106, 0.00010468000000000283, 0.00010458299999999837, 0.00010434699999999769, 0.00010426399999999975, 0.00010412500000000005, 0.00010395800000000122, 0.0001040689999999983, 0.00010413899999999962, 0.00010377799999999882, 0.00010429199999999889, 0.00010413899999999962, 0.00010426400000000322, 0.00010440199999999997, 0.00010377699999999934, 0.00010392999999999861, 0.00010405600000000167, 0.00010440299999999944, 0.00010393100000000155, 0.000104514, 0.00010377799999999882, 0.00010465299999999969, 0.00010409700000000091, 0.00010422300000000051, 0.00010440299999999944, 0.00010395900000000069, 0.00010383300000000109, 0.00010402800000000254, 0.00010447200000000129, 0.00010445800000000172, 0.00010427800000000279, 0.00010370800000000097, 0.00010434699999999769, 0.00010447200000000129, 0.00010427799999999932, 0.00010415299999999919, 0.00010416599999999929, 0.00010417999999999886, 0.00010404100000000263, 0.00010463900000000012, 0.00010390299999999894, 0.00010365199999999922, 0.00010390300000000241]</msg>
<status status="PASS" starttime="20201115 23:02:01.627" endtime="20201115 23:02:01.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.622" endtime="20201115 23:02:01.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.631" endtime="20201115 23:02:01.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:01.635" endtime="20201115 23:02:01.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.633" endtime="20201115 23:02:01.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.630" endtime="20201115 23:02:01.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.258" endtime="20201115 23:02:01.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.256" endtime="20201115 23:02:01.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.255" endtime="20201115 23:02:01.656"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.658" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.666" endtime="20201115 23:02:01.686"></status>
</kw>
<msg timestamp="20201115 23:02:01.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.665" endtime="20201115 23:02:01.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.688" endtime="20201115 23:02:01.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.691" endtime="20201115 23:02:01.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.662" endtime="20201115 23:02:01.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.660" endtime="20201115 23:02:01.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.700" endtime="20201115 23:02:01.985"></status>
</kw>
<msg timestamp="20201115 23:02:01.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.698" endtime="20201115 23:02:01.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.990" endtime="20201115 23:02:01.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.998" endtime="20201115 23:02:02.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.696" endtime="20201115 23:02:02.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.694" endtime="20201115 23:02:02.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.005" level="INFO">${RESULT} = [{'time': 0.022071694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010472199999999807, 'source_diff': 0.00010472199999999807}, {'time': 0.022192681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:02.002" endtime="20201115 23:02:02.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.018" level="INFO">${ACCURACY} = {'diff': [0.00010472199999999807, 0.0001053889999999974, 0.000105207999999999, 0.00010527700000000084, 0.00010561099999999851, 0.00010498600000000136, 0.00010452799999999957, 0.00010484700000000166, 0...</msg>
<status status="PASS" starttime="20201115 23:02:02.006" endtime="20201115 23:02:02.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.023" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.022" endtime="20201115 23:02:02.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.025" level="INFO">VALUE: [0.00010472199999999807, 0.0001053889999999974, 0.000105207999999999, 0.00010527700000000084, 0.00010561099999999851, 0.00010498600000000136, 0.00010452799999999957, 0.00010484700000000166, 0.00010559699999999894, 0.000104820000000002, 0.00010536100000000173, 0.00010533400000000206, 0.00010529199999999989, 0.00010558399999999885, 0.00010522200000000204, 0.00010529199999999989, 0.00010520800000000247, 0.00010516699999999976, 0.00010490299999999994, 0.00010543099999999958, 0.00010476400000000025, 0.00010495900000000169, 0.00010511100000000148, 0.00010544399999999968, 0.00010477699999999687, 0.00010494399999999918, 0.0001050689999999993, 0.00010506900000000277, 0.000105207999999999, 0.0001045550000000027, 0.00010498599999999789, 0.00010508400000000181, 0.00010538900000000087, 0.00010513900000000062, 0.00010491699999999951, 0.00010554100000000066, 0.00010509699999999844, 0.00010491600000000004, 0.00010534700000000216, 0.00010527800000000032, 0.00010491699999999951, 0.00010526400000000075, 0.00010497200000000179, 0.00010516699999999976, 0.00010550000000000143, 0.00010526400000000075, 0.00010520900000000194, 0.0001053880000000014, 0.00010533299999999912, 0.00010497200000000179]</msg>
<status status="PASS" starttime="20201115 23:02:02.024" endtime="20201115 23:02:02.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.019" endtime="20201115 23:02:02.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.028" endtime="20201115 23:02:02.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.032" endtime="20201115 23:02:02.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.030" endtime="20201115 23:02:02.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.027" endtime="20201115 23:02:02.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.659" endtime="20201115 23:02:02.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.657" endtime="20201115 23:02:02.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.656" endtime="20201115 23:02:02.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.311" endtime="20201115 23:02:02.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.061" endtime="20201115 23:02:02.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.059" endtime="20201115 23:02:02.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.058" endtime="20201115 23:02:02.081"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:22.236" endtime="20201115 23:02:02.082" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.089" endtime="20201115 23:02:02.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.088" endtime="20201115 23:02:02.109"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.124" endtime="20201115 23:02:02.141"></status>
</kw>
<msg timestamp="20201115 23:02:02.142" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.122" endtime="20201115 23:02:02.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.145" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.143" endtime="20201115 23:02:02.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.148" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:02:02.146" endtime="20201115 23:02:02.148"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:02.119" endtime="20201115 23:02:02.149"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:02.117" endtime="20201115 23:02:02.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.115" endtime="20201115 23:02:02.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:02:02.153" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:02:02.153" endtime="20201115 23:02:02.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.151" endtime="20201115 23:02:02.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.114" endtime="20201115 23:02:02.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.113" endtime="20201115 23:02:02.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.155" endtime="20201115 23:02:02.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.112" endtime="20201115 23:02:02.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.110" endtime="20201115 23:02:02.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.086" endtime="20201115 23:02:02.158"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.161" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.170" endtime="20201115 23:02:02.187"></status>
</kw>
<msg timestamp="20201115 23:02:02.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.168" endtime="20201115 23:02:02.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.188" endtime="20201115 23:02:02.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.191" endtime="20201115 23:02:02.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.165" endtime="20201115 23:02:02.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.163" endtime="20201115 23:02:02.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.201" endtime="20201115 23:02:02.491"></status>
</kw>
<msg timestamp="20201115 23:02:02.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070469347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070488167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.199" endtime="20201115 23:02:02.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070469347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070488167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.495" endtime="20201115 23:02:02.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.503" endtime="20201115 23:02:02.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.196" endtime="20201115 23:02:02.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.194" endtime="20201115 23:02:02.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.511" level="INFO">${RESULT} = [{'time': 0.070488167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8820000000002723e-05, 'source_diff': 1.8820000000002723e-05}, {'time': 0.070498667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:02.507" endtime="20201115 23:02:02.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.524" level="INFO">${ACCURACY} = {'diff': [1.8820000000002723e-05, 6.041999999997771e-06, 5.55600000000378e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.05600000000428e-06, 5.541999999997271e-06, 5.56899...</msg>
<status status="PASS" starttime="20201115 23:02:02.512" endtime="20201115 23:02:02.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.528" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.527" endtime="20201115 23:02:02.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.531" level="INFO">VALUE: [1.8820000000002723e-05, 6.041999999997771e-06, 5.55600000000378e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.05600000000428e-06, 5.541999999997271e-06, 5.5689999999969375e-06, 6.041999999997771e-06, 5.542000000011149e-06, 5.555999999989902e-06, 6.05600000000428e-06, 6.05600000000428e-06, 5.554999999990429e-06, 6.05600000000428e-06, 5.52800000000464e-06, 5.541999999997271e-06, 5.55600000000378e-06, 6.0279999999912626e-06, 5.541999999997271e-06, 6.070000000010789e-06, 6.055999999990402e-06, 6.52800000000564e-06, 6.041999999997771e-06, 5.485999999998992e-06, 6.041999999997771e-06, 6.02800000000514e-06, 5.639000000001726e-06, 6.041999999997771e-06, 5.540999999997798e-06, 6.054999999990929e-06, 6.0689999999974376e-06, 5.55600000000378e-06, 5.555999999989902e-06, 5.540999999997798e-06, 5.5829999999895685e-06, 5.5550000000043065e-06, 6.041999999997771e-06, 5.540999999997798e-06, 5.55600000000378e-06, 6.0550000000048065e-06, 5.5410000000116755e-06, 5.611000000002586e-06, 6.02800000000514e-06, 5.583000000003446e-06, 5.5410000000116755e-06, 6.070000000010789e-06, 6.125000000009595e-06, 5.971999999992983e-06]</msg>
<status status="PASS" starttime="20201115 23:02:02.530" endtime="20201115 23:02:02.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.525" endtime="20201115 23:02:02.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.534" endtime="20201115 23:02:02.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.537" endtime="20201115 23:02:02.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.536" endtime="20201115 23:02:02.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.532" endtime="20201115 23:02:02.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.162" endtime="20201115 23:02:02.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.160" endtime="20201115 23:02:02.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.159" endtime="20201115 23:02:02.559"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.561" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.569" endtime="20201115 23:02:02.585"></status>
</kw>
<msg timestamp="20201115 23:02:02.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.568" endtime="20201115 23:02:02.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.586" endtime="20201115 23:02:02.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.589" endtime="20201115 23:02:02.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.565" endtime="20201115 23:02:02.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.563" endtime="20201115 23:02:02.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.599" endtime="20201115 23:02:02.886"></status>
</kw>
<msg timestamp="20201115 23:02:02.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.596" endtime="20201115 23:02:02.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.890" endtime="20201115 23:02:02.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.899" endtime="20201115 23:02:02.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.594" endtime="20201115 23:02:02.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.592" endtime="20201115 23:02:02.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.905" level="INFO">${RESULT} = [{'time': 0.022082667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.056000000001811e-06, 'source_diff': 7.056000000001811e-06}, {'time': 0.022093847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:02.902" endtime="20201115 23:02:02.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.919" level="INFO">${ACCURACY} = {'diff': [7.056000000001811e-06, 7.0279999999992016e-06, 6.541999999998271e-06, 6.570000000000881e-06, 6.555999999997841e-06, 7.054999999998868e-06, 6.584000000000451e-06, 6.5829999999975075e-06, 7.05...</msg>
<status status="PASS" starttime="20201115 23:02:02.906" endtime="20201115 23:02:02.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.923" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.922" endtime="20201115 23:02:02.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.925" level="INFO">VALUE: [7.056000000001811e-06, 7.0279999999992016e-06, 6.541999999998271e-06, 6.570000000000881e-06, 6.555999999997841e-06, 7.054999999998868e-06, 6.584000000000451e-06, 6.5829999999975075e-06, 7.055000000002337e-06, 6.568999999997938e-06, 7.0419999999987715e-06, 6.542000000001741e-06, 6.555999999997841e-06, 6.5279999999987015e-06, 7.555999999998841e-06, 7.0419999999987715e-06, 7.055999999998341e-06, 6.499999999999562e-06, 7.055999999998341e-06, 7.056000000001811e-06, 6.542000000001741e-06, 7.042000000002241e-06, 7.054999999998868e-06, 6.569999999997411e-06, 6.541999999998271e-06, 6.556000000001311e-06, 7.056000000001811e-06, 6.555999999997841e-06, 6.569000000001407e-06, 6.541000000002267e-06, 7.042000000002241e-06, 6.542000000001741e-06, 7.000000000000062e-06, 6.540999999998798e-06, 6.583000000000977e-06, 7.040999999999298e-06, 7.040999999999298e-06, 7.0419999999987715e-06, 6.554999999998368e-06, 7.026999999999728e-06, 7.056000000001811e-06, 6.554999999998368e-06, 6.542000000001741e-06, 7.055000000002337e-06, 7.055000000002337e-06, 6.542000000001741e-06, 6.555000000001837e-06, 7.056000000001811e-06, 6.611000000000117e-06, 7.055999999998341e-06]</msg>
<status status="PASS" starttime="20201115 23:02:02.924" endtime="20201115 23:02:02.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.919" endtime="20201115 23:02:02.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.929" endtime="20201115 23:02:02.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.932" endtime="20201115 23:02:02.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.931" endtime="20201115 23:02:02.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.927" endtime="20201115 23:02:02.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.562" endtime="20201115 23:02:02.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.560" endtime="20201115 23:02:02.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.559" endtime="20201115 23:02:02.953"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.956" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.964" endtime="20201115 23:02:02.981"></status>
</kw>
<msg timestamp="20201115 23:02:02.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.962" endtime="20201115 23:02:02.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.983" endtime="20201115 23:02:02.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.985" endtime="20201115 23:02:02.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.960" endtime="20201115 23:02:02.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.958" endtime="20201115 23:02:02.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.995" endtime="20201115 23:02:03.283"></status>
</kw>
<msg timestamp="20201115 23:02:03.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.993" endtime="20201115 23:02:03.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.287" endtime="20201115 23:02:03.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.296" endtime="20201115 23:02:03.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.990" endtime="20201115 23:02:03.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.988" endtime="20201115 23:02:03.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.302" level="INFO">${RESULT} = [{'time': 0.022090486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.022101444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:03.299" endtime="20201115 23:02:03.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:03.317" level="INFO">${ACCURACY} = {'diff': [7.5419999999992715e-06, 7.555000000002837e-06, 8.555000000000368e-06, 7.555999999998841e-06, 8.026999999997259e-06, 8.055999999999341e-06, 8.055999999999341e-06, 8.041000000000298e-06, 7.472...</msg>
<status status="PASS" starttime="20201115 23:02:03.303" endtime="20201115 23:02:03.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.321" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:02:03.320" endtime="20201115 23:02:03.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.324" level="INFO">VALUE: [7.5419999999992715e-06, 7.555000000002837e-06, 8.555000000000368e-06, 7.555999999998841e-06, 8.026999999997259e-06, 8.055999999999341e-06, 8.055999999999341e-06, 8.041000000000298e-06, 7.472000000001422e-06, 7.985999999998022e-06, 7.568999999998938e-06, 7.527000000000228e-06, 8.000000000001062e-06, 8.041999999999772e-06, 8.068999999999438e-06, 8.041000000000298e-06, 8.013999999997162e-06, 8.027000000000728e-06, 7.555999999998841e-06, 8.541000000000798e-06, 7.556000000002311e-06, 7.582999999998508e-06, 7.556000000002311e-06, 8.041999999999772e-06, 8.028000000000202e-06, 7.985999999998022e-06, 8.056000000002811e-06, 7.540999999999798e-06, 8.068999999999438e-06, 8.541000000000798e-06, 8.069999999998911e-06, 7.570000000001881e-06, 7.541000000003267e-06, 8.055999999999341e-06, 8.542000000000272e-06, 8.028000000000202e-06, 7.5419999999992715e-06, 8.096999999998578e-06, 7.986000000001492e-06, 7.554999999999368e-06, 8.055999999999341e-06, 8.041999999999772e-06, 8.027999999996732e-06, 7.556000000002311e-06, 8.055000000003337e-06, 8.055999999999341e-06, 8.055999999999341e-06, 8.569999999999411e-06, 8.569999999999411e-06, 7.459000000001326e-06]</msg>
<status status="PASS" starttime="20201115 23:02:03.323" endtime="20201115 23:02:03.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.318" endtime="20201115 23:02:03.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.327" endtime="20201115 23:02:03.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:03.330" endtime="20201115 23:02:03.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.329" endtime="20201115 23:02:03.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.325" endtime="20201115 23:02:03.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.956" endtime="20201115 23:02:03.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.954" endtime="20201115 23:02:03.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.954" endtime="20201115 23:02:03.352"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.354" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.362" endtime="20201115 23:02:03.380"></status>
</kw>
<msg timestamp="20201115 23:02:03.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.361" endtime="20201115 23:02:03.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.382" endtime="20201115 23:02:03.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.384" endtime="20201115 23:02:03.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.358" endtime="20201115 23:02:03.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.356" endtime="20201115 23:02:03.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.394" endtime="20201115 23:02:03.680"></status>
</kw>
<msg timestamp="20201115 23:02:03.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.392" endtime="20201115 23:02:03.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.684" endtime="20201115 23:02:03.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.692" endtime="20201115 23:02:03.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.389" endtime="20201115 23:02:03.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.388" endtime="20201115 23:02:03.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.699" level="INFO">${RESULT} = [{'time': 0.021905847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.021917792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:03.696" endtime="20201115 23:02:03.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:03.713" level="INFO">${ACCURACY} = {'diff': [9.027999999997732e-06, 9.083999999999481e-06, 8.541000000000798e-06, 9.055999999996872e-06, 9.042000000000772e-06, 9.055000000000868e-06, 9.042000000000772e-06, 9.027999999997732e-06, 9.0549...</msg>
<status status="PASS" starttime="20201115 23:02:03.700" endtime="20201115 23:02:03.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.718" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:02:03.717" endtime="20201115 23:02:03.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.720" level="INFO">VALUE: [9.027999999997732e-06, 9.083999999999481e-06, 8.541000000000798e-06, 9.055999999996872e-06, 9.042000000000772e-06, 9.055000000000868e-06, 9.042000000000772e-06, 9.027999999997732e-06, 9.054999999997398e-06, 8.542000000000272e-06, 9.542000000001272e-06, 9.069000000000438e-06, 9.042000000000772e-06, 8.542000000000272e-06, 9.028000000001202e-06, 8.542000000000272e-06, 9.069999999999911e-06, 9.569000000000938e-06, 8.528000000000702e-06, 9.124999999998717e-06, 9.054999999997398e-06, 9.056000000000342e-06, 8.555000000000368e-06, 9.055000000000868e-06, 9.055000000000868e-06, 9.512999999999189e-06, 9.055999999996872e-06, 8.542000000000272e-06, 9.055000000000868e-06, 9.055000000000868e-06, 9.540999999998329e-06, 9.040999999997829e-06, 8.555999999999842e-06, 9.040999999997829e-06, 8.555000000000368e-06, 8.528000000000702e-06, 8.555999999999842e-06, 8.527999999997232e-06, 8.541999999996802e-06, 9.096999999999578e-06, 8.528000000000702e-06, 8.542000000000272e-06, 9.555000000001368e-06, 9.069999999999911e-06, 9.041000000001298e-06, 8.540999999997329e-06, 9.040999999997829e-06, 9.055000000000868e-06, 8.486000000001992e-06, 8.528000000000702e-06]</msg>
<status status="PASS" starttime="20201115 23:02:03.719" endtime="20201115 23:02:03.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.714" endtime="20201115 23:02:03.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.724" endtime="20201115 23:02:03.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:03.727" endtime="20201115 23:02:03.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.726" endtime="20201115 23:02:03.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.722" endtime="20201115 23:02:03.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.354" endtime="20201115 23:02:03.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.353" endtime="20201115 23:02:03.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.352" endtime="20201115 23:02:03.748"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.751" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.759" endtime="20201115 23:02:03.777"></status>
</kw>
<msg timestamp="20201115 23:02:03.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.758" endtime="20201115 23:02:03.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.778" endtime="20201115 23:02:03.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.781" endtime="20201115 23:02:03.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.755" endtime="20201115 23:02:03.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.753" endtime="20201115 23:02:03.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.790" endtime="20201115 23:02:04.075"></status>
</kw>
<msg timestamp="20201115 23:02:04.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02242925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:03.788" endtime="20201115 23:02:04.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02242925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:04.079" endtime="20201115 23:02:04.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.087" endtime="20201115 23:02:04.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.785" endtime="20201115 23:02:04.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.784" endtime="20201115 23:02:04.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.094" level="INFO">${RESULT} = [{'time': 0.02242925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.022442181, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:02:04.091" endtime="20201115 23:02:04.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.108" level="INFO">${ACCURACY} = {'diff': [1.0056000000001342e-05, 9.986999999999496e-06, 1.0124999999999718e-05, 1.0042000000001772e-05, 1.0041000000002298e-05, 1.0042000000001772e-05, 9.541999999997802e-06, 1.0541999999998802e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:04.095" endtime="20201115 23:02:04.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.112" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.111" endtime="20201115 23:02:04.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.115" level="INFO">VALUE: [1.0056000000001342e-05, 9.986999999999496e-06, 1.0124999999999718e-05, 1.0042000000001772e-05, 1.0041000000002298e-05, 1.0042000000001772e-05, 9.541999999997802e-06, 1.0541999999998802e-05, 1.0069999999997442e-05, 9.542000000001272e-06, 9.542000000001272e-06, 1.0041999999998302e-05, 1.0041000000002298e-05, 1.0040999999998829e-05, 1.0082999999997538e-05, 9.541999999997802e-06, 9.625000000002687e-06, 1.0054999999998399e-05, 9.555000000001368e-06, 1.0054999999998399e-05, 1.0027999999998732e-05, 1.0054999999998399e-05, 1.0040999999998829e-05, 1.0056000000001342e-05, 1.0569999999997942e-05, 1.0083000000001008e-05, 1.0541999999998802e-05, 1.0054999999998399e-05, 1.0013999999999162e-05, 9.569000000000938e-06, 1.0041000000002298e-05, 9.555000000001368e-06, 1.0027999999998732e-05, 9.556000000000842e-06, 1.0054999999998399e-05, 9.570000000000412e-06, 1.0027999999998732e-05, 9.554999999997899e-06, 9.542000000001272e-06, 9.540999999998329e-06, 1.0068999999997968e-05, 1.0568999999998469e-05, 1.0056000000001342e-05, 1.0056000000001342e-05, 9.541999999997802e-06, 1.0042000000001772e-05, 9.959000000000356e-06, 1.0097000000000578e-05, 1.0012999999999689e-05, 1.0485999999997053e-05]</msg>
<status status="PASS" starttime="20201115 23:02:04.113" endtime="20201115 23:02:04.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.108" endtime="20201115 23:02:04.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.118" endtime="20201115 23:02:04.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.122" endtime="20201115 23:02:04.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.120" endtime="20201115 23:02:04.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.116" endtime="20201115 23:02:04.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.752" endtime="20201115 23:02:04.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.749" endtime="20201115 23:02:04.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.748" endtime="20201115 23:02:04.143"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.145" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.153" endtime="20201115 23:02:04.171"></status>
</kw>
<msg timestamp="20201115 23:02:04.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.152" endtime="20201115 23:02:04.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.172" endtime="20201115 23:02:04.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.175" endtime="20201115 23:02:04.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.149" endtime="20201115 23:02:04.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.147" endtime="20201115 23:02:04.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.184" endtime="20201115 23:02:04.471"></status>
</kw>
<msg timestamp="20201115 23:02:04.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.182" endtime="20201115 23:02:04.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.476" endtime="20201115 23:02:04.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.484" endtime="20201115 23:02:04.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.179" endtime="20201115 23:02:04.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.178" endtime="20201115 23:02:04.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.491" level="INFO">${RESULT} = [{'time': 0.021883875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1041999999999302e-05, 'source_diff': 1.1041999999999302e-05}, {'time': 0.021898208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:04.487" endtime="20201115 23:02:04.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.504" level="INFO">${ACCURACY} = {'diff': [1.1041999999999302e-05, 1.1068999999998969e-05, 1.1541999999999802e-05, 1.0526999999999759e-05, 1.1054999999999399e-05, 1.0526999999999759e-05, 1.1055999999998872e-05, 1.0986000000001023e-05...</msg>
<status status="PASS" starttime="20201115 23:02:04.492" endtime="20201115 23:02:04.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.509" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.508" endtime="20201115 23:02:04.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.511" level="INFO">VALUE: [1.1041999999999302e-05, 1.1068999999998969e-05, 1.1541999999999802e-05, 1.0526999999999759e-05, 1.1054999999999399e-05, 1.0526999999999759e-05, 1.1055999999998872e-05, 1.0986000000001023e-05, 1.1069999999998442e-05, 1.0500000000000093e-05, 1.0542000000002272e-05, 1.0540999999999329e-05, 1.1054999999999399e-05, 1.1555999999999372e-05, 1.0554999999998899e-05, 1.0513999999999663e-05, 1.0554999999998899e-05, 1.0526999999999759e-05, 1.1055000000002868e-05, 1.1040999999999829e-05, 1.1541999999999802e-05, 1.0528000000002702e-05, 1.0541999999998802e-05, 1.0540999999999329e-05, 1.0554999999998899e-05, 1.1056000000002342e-05, 1.0555999999998372e-05, 1.1068999999998969e-05, 1.0582999999998038e-05, 1.0541999999998802e-05, 1.1555999999999372e-05, 1.1014000000000163e-05, 1.1041999999999302e-05, 1.0555999999998372e-05, 1.1042000000002772e-05, 1.0556000000001842e-05, 1.1041999999999302e-05, 1.1041999999999302e-05, 1.1055999999998872e-05, 1.0542000000002272e-05, 1.0527999999999232e-05, 1.0570000000001412e-05, 1.1042000000002772e-05, 1.0541999999998802e-05, 1.1527000000000759e-05, 1.0541000000002798e-05, 1.1042000000002772e-05, 1.0541999999998802e-05, 1.0985999999997553e-05, 1.0555999999998372e-05]</msg>
<status status="PASS" starttime="20201115 23:02:04.510" endtime="20201115 23:02:04.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.505" endtime="20201115 23:02:04.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.515" endtime="20201115 23:02:04.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.518" endtime="20201115 23:02:04.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.517" endtime="20201115 23:02:04.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.513" endtime="20201115 23:02:04.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.146" endtime="20201115 23:02:04.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.144" endtime="20201115 23:02:04.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.143" endtime="20201115 23:02:04.539"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.542" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.550" endtime="20201115 23:02:04.567"></status>
</kw>
<msg timestamp="20201115 23:02:04.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.548" endtime="20201115 23:02:04.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.569" endtime="20201115 23:02:04.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.571" endtime="20201115 23:02:04.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.546" endtime="20201115 23:02:04.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.544" endtime="20201115 23:02:04.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.580" endtime="20201115 23:02:04.868"></status>
</kw>
<msg timestamp="20201115 23:02:04.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022041889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.579" endtime="20201115 23:02:04.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022041889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.872" endtime="20201115 23:02:04.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.881" endtime="20201115 23:02:04.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.576" endtime="20201115 23:02:04.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.574" endtime="20201115 23:02:04.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.887" level="INFO">${RESULT} = [{'time': 0.022053889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2000000000001593e-05, 'source_diff': 1.2000000000001593e-05}, {'time': 0.022070042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:04.884" endtime="20201115 23:02:04.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.902" level="INFO">${ACCURACY} = {'diff': [1.2000000000001593e-05, 1.1556000000002842e-05, 1.1541000000000329e-05, 1.2041000000000829e-05, 1.1556000000002842e-05, 1.2041000000000829e-05, 1.2042000000000302e-05, 1.1541999999999802e-05...</msg>
<status status="PASS" starttime="20201115 23:02:04.888" endtime="20201115 23:02:04.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.906" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.905" endtime="20201115 23:02:04.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.916" level="INFO">VALUE: [1.2000000000001593e-05, 1.1556000000002842e-05, 1.1541000000000329e-05, 1.2041000000000829e-05, 1.1556000000002842e-05, 1.2041000000000829e-05, 1.2042000000000302e-05, 1.1541999999999802e-05, 1.2068999999999969e-05, 1.1499999999997623e-05, 1.2042000000000302e-05, 1.2055999999999872e-05, 1.2042000000000302e-05, 1.1541000000000329e-05, 1.1541999999999802e-05, 1.1568999999999469e-05, 1.1459000000001857e-05, 1.2042000000000302e-05, 1.2542000000000803e-05, 1.2055000000000399e-05, 1.2042000000000302e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.1541999999999802e-05, 1.255499999999743e-05, 1.1555999999999372e-05, 1.1528000000000233e-05, 1.1999999999998123e-05, 1.2068999999999969e-05, 1.1611999999997652e-05, 1.2068999999999969e-05, 1.1541999999999802e-05, 1.2042000000000302e-05, 1.2097000000002578e-05, 1.201299999999822e-05, 1.1528000000000233e-05, 1.2042000000000302e-05, 1.2055000000000399e-05, 1.2028000000000733e-05, 1.2042000000000302e-05, 1.2055000000000399e-05, 1.2014000000001163e-05, 1.2055999999999872e-05, 1.2042000000000302e-05, 1.2541000000001329e-05, 1.2083000000003008e-05, 1.2014000000001163e-05, 1.255499999999743e-05, 1.1541999999999802e-05, 1.2596999999999609e-05]</msg>
<status status="PASS" starttime="20201115 23:02:04.907" endtime="20201115 23:02:04.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.903" endtime="20201115 23:02:04.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.919" endtime="20201115 23:02:04.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.923" endtime="20201115 23:02:04.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.921" endtime="20201115 23:02:04.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.917" endtime="20201115 23:02:04.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.542" endtime="20201115 23:02:04.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.541" endtime="20201115 23:02:04.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.540" endtime="20201115 23:02:04.944"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.946" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.954" endtime="20201115 23:02:04.970"></status>
</kw>
<msg timestamp="20201115 23:02:04.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.953" endtime="20201115 23:02:04.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.972" endtime="20201115 23:02:04.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.974" endtime="20201115 23:02:04.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.950" endtime="20201115 23:02:04.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.948" endtime="20201115 23:02:04.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.983" endtime="20201115 23:02:05.271"></status>
</kw>
<msg timestamp="20201115 23:02:05.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.982" endtime="20201115 23:02:05.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.275" endtime="20201115 23:02:05.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.284" endtime="20201115 23:02:05.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.979" endtime="20201115 23:02:05.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.977" endtime="20201115 23:02:05.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:05.290" level="INFO">${RESULT} = [{'time': 0.022046264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3041999999997833e-05, 'source_diff': 1.3041999999997833e-05}, {'time': 0.022064264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:05.287" endtime="20201115 23:02:05.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.304" level="INFO">${ACCURACY} = {'diff': [1.3041999999997833e-05, 1.3056000000000872e-05, 1.304099999999836e-05, 1.3042000000001303e-05, 1.2555000000000899e-05, 1.2985999999999553e-05, 1.2541000000001329e-05, 1.3027999999998263e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:05.292" endtime="20201115 23:02:05.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.308" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.307" endtime="20201115 23:02:05.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.311" level="INFO">VALUE: [1.3041999999997833e-05, 1.3056000000000872e-05, 1.304099999999836e-05, 1.3042000000001303e-05, 1.2555000000000899e-05, 1.2985999999999553e-05, 1.2541000000001329e-05, 1.3027999999998263e-05, 1.3069000000000969e-05, 1.304099999999836e-05, 1.3041000000001829e-05, 1.30689999999975e-05, 1.2555999999996903e-05, 1.3055000000001399e-05, 1.3083000000000539e-05, 1.3042000000001303e-05, 1.2624999999998748e-05, 1.3056000000000872e-05, 1.3570000000000942e-05, 1.2527999999997763e-05, 1.2541999999997333e-05, 1.2555000000000899e-05, 1.3028000000001733e-05, 1.2569999999999942e-05, 1.2542000000000803e-05, 1.2555000000000899e-05, 1.2542000000000803e-05, 1.2541999999997333e-05, 1.2542000000000803e-05, 1.2583000000000039e-05, 1.3056000000000872e-05, 1.2542000000000803e-05, 1.254099999999786e-05, 1.2499999999998623e-05, 1.2555000000000899e-05, 1.2985999999999553e-05, 1.3042000000001303e-05, 1.2527999999997763e-05, 1.2542000000000803e-05, 1.2556000000000372e-05, 1.2569999999999942e-05, 1.254099999999786e-05, 1.3555000000001899e-05, 1.3055000000001399e-05, 1.3042000000001303e-05, 1.2542000000000803e-05, 1.3069000000000969e-05, 1.3056000000000872e-05, 1.3041000000001829e-05, 1.3055000000001399e-05]</msg>
<status status="PASS" starttime="20201115 23:02:05.310" endtime="20201115 23:02:05.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.305" endtime="20201115 23:02:05.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.314" endtime="20201115 23:02:05.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.317" endtime="20201115 23:02:05.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.316" endtime="20201115 23:02:05.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.313" endtime="20201115 23:02:05.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.947" endtime="20201115 23:02:05.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.945" endtime="20201115 23:02:05.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.944" endtime="20201115 23:02:05.339"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.341" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.349" endtime="20201115 23:02:05.366"></status>
</kw>
<msg timestamp="20201115 23:02:05.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.348" endtime="20201115 23:02:05.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.367" endtime="20201115 23:02:05.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.370" endtime="20201115 23:02:05.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.345" endtime="20201115 23:02:05.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.343" endtime="20201115 23:02:05.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.378" endtime="20201115 23:02:05.666"></status>
</kw>
<msg timestamp="20201115 23:02:05.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022007319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.377" endtime="20201115 23:02:05.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022007319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.670" endtime="20201115 23:02:05.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.678" endtime="20201115 23:02:05.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.374" endtime="20201115 23:02:05.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.373" endtime="20201115 23:02:05.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:05.685" level="INFO">${RESULT} = [{'time': 0.022007319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.454099999999986e-05, 'source_diff': 1.454099999999986e-05}, {'time': 0.022024319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:05.682" endtime="20201115 23:02:05.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.699" level="INFO">${ACCURACY} = {'diff': [1.454099999999986e-05, 1.454099999999986e-05, 1.455499999999943e-05, 1.4027999999999263e-05, 1.4069000000001969e-05, 1.355499999999843e-05, 1.404099999999936e-05, 1.3555999999997903e-05, 1.4...</msg>
<status status="PASS" starttime="20201115 23:02:05.686" endtime="20201115 23:02:05.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.703" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.702" endtime="20201115 23:02:05.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.706" level="INFO">VALUE: [1.454099999999986e-05, 1.454099999999986e-05, 1.455499999999943e-05, 1.4027999999999263e-05, 1.4069000000001969e-05, 1.355499999999843e-05, 1.404099999999936e-05, 1.3555999999997903e-05, 1.404099999999936e-05, 1.408299999999807e-05, 1.3569000000001469e-05, 1.3639000000002788e-05, 1.4041000000002829e-05, 1.3541999999998333e-05, 1.40689999999985e-05, 1.4041999999998833e-05, 1.3569000000001469e-05, 1.3556000000001373e-05, 1.4055999999998403e-05, 1.4042000000002303e-05, 1.4056000000001873e-05, 1.3541999999998333e-05, 1.4568999999999e-05, 1.4041999999998833e-05, 1.3555999999997903e-05, 1.3528000000002233e-05, 1.3542000000001803e-05, 1.4042000000002303e-05, 1.3986000000000554e-05, 1.4027999999999263e-05, 1.4083999999997543e-05, 1.4056000000001873e-05, 1.4041999999998833e-05, 1.4097000000001109e-05, 1.3514000000002663e-05, 1.3611000000000179e-05, 1.405499999999893e-05, 1.4027999999999263e-05, 1.351299999999972e-05, 1.3542000000001803e-05, 1.405499999999893e-05, 1.3486000000000054e-05, 1.3555000000001899e-05, 1.4069999999997973e-05, 1.3542000000001803e-05, 1.3569000000001469e-05, 1.3555999999997903e-05, 1.405499999999893e-05, 1.4069999999997973e-05, 1.4556000000002373e-05]</msg>
<status status="PASS" starttime="20201115 23:02:05.704" endtime="20201115 23:02:05.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.700" endtime="20201115 23:02:05.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.709" endtime="20201115 23:02:05.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.712" endtime="20201115 23:02:05.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.711" endtime="20201115 23:02:05.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.707" endtime="20201115 23:02:05.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.342" endtime="20201115 23:02:05.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.340" endtime="20201115 23:02:05.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.339" endtime="20201115 23:02:05.733"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.736" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.745" endtime="20201115 23:02:05.761"></status>
</kw>
<msg timestamp="20201115 23:02:05.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.743" endtime="20201115 23:02:05.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.763" endtime="20201115 23:02:05.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.765" endtime="20201115 23:02:05.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.740" endtime="20201115 23:02:05.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.738" endtime="20201115 23:02:05.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.775" endtime="20201115 23:02:06.061"></status>
</kw>
<msg timestamp="20201115 23:02:06.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023342681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023357736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.773" endtime="20201115 23:02:06.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023342681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023357736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.066" endtime="20201115 23:02:06.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.074" endtime="20201115 23:02:06.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.770" endtime="20201115 23:02:06.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.768" endtime="20201115 23:02:06.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.081" level="INFO">${RESULT} = [{'time': 0.023357736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.505499999999993e-05, 'source_diff': 1.505499999999993e-05}, {'time': 0.023376542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:06.077" endtime="20201115 23:02:06.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.094" level="INFO">${ACCURACY} = {'diff': [1.505499999999993e-05, 1.4514000000000193e-05, 1.461099999999771e-05, 1.5041999999999833e-05, 1.4541999999999333e-05, 1.50689999999995e-05, 1.5500000000001624e-05, 1.4555999999998903e-05, 1....</msg>
<status status="PASS" starttime="20201115 23:02:06.082" endtime="20201115 23:02:06.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.099" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.098" endtime="20201115 23:02:06.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.101" level="INFO">VALUE: [1.505499999999993e-05, 1.4514000000000193e-05, 1.461099999999771e-05, 1.5041999999999833e-05, 1.4541999999999333e-05, 1.50689999999995e-05, 1.5500000000001624e-05, 1.4555999999998903e-05, 1.4499999999997154e-05, 1.5041999999999833e-05, 1.4583999999998043e-05, 1.4568999999999e-05, 1.505499999999993e-05, 1.4541999999999333e-05, 1.5111000000001679e-05, 1.451300000000072e-05, 1.4555999999998903e-05, 1.504100000000036e-05, 1.4624999999997279e-05, 1.5041999999999833e-05, 1.508299999999907e-05, 1.4568999999999e-05, 1.4570000000001943e-05, 1.4555999999998903e-05, 1.5055999999999403e-05, 1.505499999999993e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.5083000000002539e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.454099999999986e-05, 1.4555999999998903e-05, 1.4542000000002803e-05, 1.455499999999943e-05, 1.4986000000001554e-05, 1.5028000000000263e-05, 1.4542000000002803e-05, 1.5041999999999833e-05, 1.5055999999999403e-05, 1.5541999999996864e-05, 1.50689999999995e-05, 1.4555000000002899e-05, 1.5056000000002873e-05, 1.4514000000000193e-05, 1.5070000000002443e-05, 1.5055999999999403e-05, 1.50689999999995e-05, 1.509699999999864e-05, 1.50689999999995e-05]</msg>
<status status="PASS" starttime="20201115 23:02:06.100" endtime="20201115 23:02:06.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.095" endtime="20201115 23:02:06.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.104" endtime="20201115 23:02:06.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.108" endtime="20201115 23:02:06.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.106" endtime="20201115 23:02:06.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.103" endtime="20201115 23:02:06.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.736" endtime="20201115 23:02:06.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.734" endtime="20201115 23:02:06.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.734" endtime="20201115 23:02:06.129"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.131" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.139" endtime="20201115 23:02:06.157"></status>
</kw>
<msg timestamp="20201115 23:02:06.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.138" endtime="20201115 23:02:06.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.159" endtime="20201115 23:02:06.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.162" endtime="20201115 23:02:06.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.135" endtime="20201115 23:02:06.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.133" endtime="20201115 23:02:06.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.171" endtime="20201115 23:02:06.457"></status>
</kw>
<msg timestamp="20201115 23:02:06.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.169" endtime="20201115 23:02:06.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.461" endtime="20201115 23:02:06.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.470" endtime="20201115 23:02:06.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.167" endtime="20201115 23:02:06.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.165" endtime="20201115 23:02:06.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.476" level="INFO">${RESULT} = [{'time': 0.021950597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.605499999999746e-05, 'source_diff': 1.605499999999746e-05}, {'time': 0.021968722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:06.473" endtime="20201115 23:02:06.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.491" level="INFO">${ACCURACY} = {'diff': [1.605499999999746e-05, 1.554100000000086e-05, 1.604099999999789e-05, 1.554099999999739e-05, 1.6556000000000903e-05, 1.6042000000000833e-05, 1.605500000000093e-05, 1.5499999999998154e-05, 1.6...</msg>
<status status="PASS" starttime="20201115 23:02:06.477" endtime="20201115 23:02:06.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.496" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.494" endtime="20201115 23:02:06.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.498" level="INFO">VALUE: [1.605499999999746e-05, 1.554100000000086e-05, 1.604099999999789e-05, 1.554099999999739e-05, 1.6556000000000903e-05, 1.6042000000000833e-05, 1.605500000000093e-05, 1.5499999999998154e-05, 1.6055999999996934e-05, 1.6042000000000833e-05, 1.6056000000000403e-05, 1.5542000000000333e-05, 1.5569999999999473e-05, 1.6542000000001333e-05, 1.554100000000086e-05, 1.555500000000043e-05, 1.6056000000000403e-05, 1.6027999999997794e-05, 1.552699999999782e-05, 1.5542000000000333e-05, 1.6056000000000403e-05, 1.555500000000043e-05, 1.5485999999998584e-05, 1.6056000000000403e-05, 1.5555999999999903e-05, 1.5555999999999903e-05, 1.5569e-05, 1.554100000000086e-05, 1.604099999999789e-05, 1.609699999999964e-05, 1.6055999999996934e-05, 1.6485999999999584e-05, 1.5569e-05, 1.60690000000005e-05, 1.6069999999999973e-05, 1.605499999999746e-05, 1.6056000000000403e-05, 1.6056000000000403e-05, 1.605499999999746e-05, 1.655499999999796e-05, 1.6013999999998224e-05, 1.555500000000043e-05, 1.5542000000000333e-05, 1.5555999999999903e-05, 1.6042000000000833e-05, 1.5542000000000333e-05, 1.6013999999998224e-05, 1.613900000000182e-05, 1.6056000000000403e-05, 1.5555999999999903e-05]</msg>
<status status="PASS" starttime="20201115 23:02:06.497" endtime="20201115 23:02:06.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.492" endtime="20201115 23:02:06.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.501" endtime="20201115 23:02:06.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.505" endtime="20201115 23:02:06.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.503" endtime="20201115 23:02:06.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.500" endtime="20201115 23:02:06.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.132" endtime="20201115 23:02:06.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.130" endtime="20201115 23:02:06.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.129" endtime="20201115 23:02:06.526"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.528" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.537" endtime="20201115 23:02:06.554"></status>
</kw>
<msg timestamp="20201115 23:02:06.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.535" endtime="20201115 23:02:06.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.555" endtime="20201115 23:02:06.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.558" endtime="20201115 23:02:06.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.533" endtime="20201115 23:02:06.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.530" endtime="20201115 23:02:06.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.567" endtime="20201115 23:02:06.852"></status>
</kw>
<msg timestamp="20201115 23:02:06.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022451056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022467611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.565" endtime="20201115 23:02:06.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022451056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022467611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.857" endtime="20201115 23:02:06.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.865" endtime="20201115 23:02:06.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.563" endtime="20201115 23:02:06.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.561" endtime="20201115 23:02:06.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.872" level="INFO">${RESULT} = [{'time': 0.022467611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.655499999999796e-05, 'source_diff': 1.655499999999796e-05}, {'time': 0.022488986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:06.868" endtime="20201115 23:02:06.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.885" level="INFO">${ACCURACY} = {'diff': [1.655499999999796e-05, 1.705499999999846e-05, 1.654100000000186e-05, 1.7487000000000058e-05, 1.6541999999997864e-05, 1.7069999999997504e-05, 1.7056000000001403e-05, 1.6556000000000903e-05, 1...</msg>
<status status="PASS" starttime="20201115 23:02:06.873" endtime="20201115 23:02:06.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.889" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.888" endtime="20201115 23:02:06.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.892" level="INFO">VALUE: [1.655499999999796e-05, 1.705499999999846e-05, 1.654100000000186e-05, 1.7487000000000058e-05, 1.6541999999997864e-05, 1.7069999999997504e-05, 1.7056000000001403e-05, 1.6556000000000903e-05, 1.7055999999997934e-05, 1.654099999999839e-05, 1.70690000000015e-05, 1.754099999999939e-05, 1.704099999999889e-05, 1.754099999999939e-05, 1.6458000000000444e-05, 1.652699999999882e-05, 1.7070000000000973e-05, 1.70690000000015e-05, 1.655499999999796e-05, 1.6569000000001e-05, 1.756899999999853e-05, 1.652699999999882e-05, 1.6556000000000903e-05, 1.655499999999796e-05, 1.704100000000236e-05, 1.655500000000143e-05, 1.7041999999998364e-05, 1.756899999999853e-05, 1.6556000000000903e-05, 1.6542000000001333e-05, 1.754099999999939e-05, 1.7069999999997504e-05, 1.705499999999846e-05, 1.7111999999999683e-05, 1.655500000000143e-05, 1.6569000000001e-05, 1.6556000000000903e-05, 1.7042000000001833e-05, 1.6569999999997004e-05, 1.7555999999998434e-05, 1.7556000000001903e-05, 1.655499999999796e-05, 1.6986000000000084e-05, 1.705500000000193e-05, 1.7069999999997504e-05, 1.662499999999928e-05, 1.654099999999839e-05, 1.7055999999997934e-05, 1.6570000000000473e-05, 1.708300000000107e-05]</msg>
<status status="PASS" starttime="20201115 23:02:06.890" endtime="20201115 23:02:06.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.886" endtime="20201115 23:02:06.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.895" endtime="20201115 23:02:06.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.899" endtime="20201115 23:02:06.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.897" endtime="20201115 23:02:06.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.893" endtime="20201115 23:02:06.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.529" endtime="20201115 23:02:06.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.527" endtime="20201115 23:02:06.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.526" endtime="20201115 23:02:06.920"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.922" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.931" endtime="20201115 23:02:06.948"></status>
</kw>
<msg timestamp="20201115 23:02:06.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.929" endtime="20201115 23:02:06.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.949" endtime="20201115 23:02:06.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.952" endtime="20201115 23:02:06.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.926" endtime="20201115 23:02:06.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.924" endtime="20201115 23:02:06.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.961" endtime="20201115 23:02:07.247"></status>
</kw>
<msg timestamp="20201115 23:02:07.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.959" endtime="20201115 23:02:07.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.252" endtime="20201115 23:02:07.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.260" endtime="20201115 23:02:07.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.957" endtime="20201115 23:02:07.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.955" endtime="20201115 23:02:07.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:07.267" level="INFO">${RESULT} = [{'time': 0.021975264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7542000000002334e-05, 'source_diff': 1.7542000000002334e-05}, {'time': 0.021999403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:07.263" endtime="20201115 23:02:07.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.280" level="INFO">${ACCURACY} = {'diff': [1.7542000000002334e-05, 1.813900000000035e-05, 1.811100000000121e-05, 1.8041999999999364e-05, 1.8055999999998934e-05, 1.804099999999989e-05, 1.756899999999853e-05, 1.756899999999853e-05, 1.7...</msg>
<status status="PASS" starttime="20201115 23:02:07.268" endtime="20201115 23:02:07.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.284" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.283" endtime="20201115 23:02:07.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.287" level="INFO">VALUE: [1.7542000000002334e-05, 1.813900000000035e-05, 1.811100000000121e-05, 1.8041999999999364e-05, 1.8055999999998934e-05, 1.804099999999989e-05, 1.756899999999853e-05, 1.756899999999853e-05, 1.755499999999896e-05, 1.7541999999998864e-05, 1.8055999999998934e-05, 1.754099999999939e-05, 1.7555999999998434e-05, 1.8014000000000224e-05, 1.8041999999999364e-05, 1.8541999999999864e-05, 1.7556000000001903e-05, 1.805499999999946e-05, 1.8555999999999434e-05, 1.8027999999999794e-05, 1.8041999999999364e-05, 1.755499999999896e-05, 1.7541999999998864e-05, 1.8055999999998934e-05, 1.7569999999998004e-05, 1.8041999999999364e-05, 1.7555999999998434e-05, 1.8041999999999364e-05, 1.7541999999998864e-05, 1.7570000000001473e-05, 1.7556000000001903e-05, 1.756899999999853e-05, 1.8042000000002834e-05, 1.755499999999896e-05, 1.804099999999989e-05, 1.804099999999989e-05, 1.7556000000001903e-05, 1.7555999999998434e-05, 1.805499999999946e-05, 1.7556000000001903e-05, 1.7555999999998434e-05, 1.8027999999999794e-05, 1.7569999999998004e-05, 1.8041999999999364e-05, 1.805500000000293e-05, 1.8055999999998934e-05, 1.804099999999989e-05, 1.7556000000001903e-05, 1.754099999999939e-05, 1.7985999999997615e-05]</msg>
<status status="PASS" starttime="20201115 23:02:07.286" endtime="20201115 23:02:07.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.281" endtime="20201115 23:02:07.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.290" endtime="20201115 23:02:07.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.294" endtime="20201115 23:02:07.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.292" endtime="20201115 23:02:07.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.289" endtime="20201115 23:02:07.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.923" endtime="20201115 23:02:07.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.921" endtime="20201115 23:02:07.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.920" endtime="20201115 23:02:07.315"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.317" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.325" endtime="20201115 23:02:07.343"></status>
</kw>
<msg timestamp="20201115 23:02:07.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.324" endtime="20201115 23:02:07.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.345" endtime="20201115 23:02:07.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.347" endtime="20201115 23:02:07.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.321" endtime="20201115 23:02:07.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.319" endtime="20201115 23:02:07.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.356" endtime="20201115 23:02:07.643"></status>
</kw>
<msg timestamp="20201115 23:02:07.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022026806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022045375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.355" endtime="20201115 23:02:07.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022026806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022045375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.647" endtime="20201115 23:02:07.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.655" endtime="20201115 23:02:07.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.352" endtime="20201115 23:02:07.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.350" endtime="20201115 23:02:07.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:07.662" level="INFO">${RESULT} = [{'time': 0.022045375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.856899999999953e-05, 'source_diff': 1.856899999999953e-05}, {'time': 0.022068111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:07.658" endtime="20201115 23:02:07.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.675" level="INFO">${ACCURACY} = {'diff': [1.856899999999953e-05, 1.855499999999996e-05, 1.8528000000000294e-05, 1.955499999999749e-05, 1.8999999999998185e-05, 1.855499999999996e-05, 1.8541999999999864e-05, 1.9055999999999934e-05, 1....</msg>
<status status="PASS" starttime="20201115 23:02:07.663" endtime="20201115 23:02:07.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.680" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.679" endtime="20201115 23:02:07.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.683" level="INFO">VALUE: [1.856899999999953e-05, 1.855499999999996e-05, 1.8528000000000294e-05, 1.955499999999749e-05, 1.8999999999998185e-05, 1.855499999999996e-05, 1.8541999999999864e-05, 1.9055999999999934e-05, 1.9055999999999934e-05, 1.8986000000002085e-05, 1.9527999999997825e-05, 1.904100000000089e-05, 1.906900000000003e-05, 1.9042000000000364e-05, 1.854100000000039e-05, 1.855500000000343e-05, 1.856899999999953e-05, 1.8541999999999864e-05, 1.8541999999999864e-05, 1.862500000000128e-05, 1.85829999999991e-05, 1.8555999999999434e-05, 1.854100000000039e-05, 1.856899999999953e-05, 1.9055999999999934e-05, 1.856899999999953e-05, 1.8541999999999864e-05, 1.856899999999953e-05, 1.9070000000002973e-05, 1.9556000000000434e-05, 1.852700000000082e-05, 1.8569999999999004e-05, 1.9042000000000364e-05, 1.955500000000096e-05, 1.8528000000000294e-05, 1.9055999999999934e-05, 1.9041999999996895e-05, 1.8555999999999434e-05, 1.9028000000000794e-05, 1.905500000000046e-05, 1.8541999999999864e-05, 1.905500000000046e-05, 1.8541999999999864e-05, 1.8555999999999434e-05, 1.902700000000132e-05, 1.854100000000039e-05, 1.8485999999998115e-05, 1.8972000000002515e-05, 1.956900000000053e-05, 1.9013999999997755e-05]</msg>
<status status="PASS" starttime="20201115 23:02:07.681" endtime="20201115 23:02:07.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.676" endtime="20201115 23:02:07.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.686" endtime="20201115 23:02:07.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.689" endtime="20201115 23:02:07.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.688" endtime="20201115 23:02:07.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.684" endtime="20201115 23:02:07.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.318" endtime="20201115 23:02:07.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.316" endtime="20201115 23:02:07.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.315" endtime="20201115 23:02:07.711"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.713" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.721" endtime="20201115 23:02:07.738"></status>
</kw>
<msg timestamp="20201115 23:02:07.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.720" endtime="20201115 23:02:07.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.740" endtime="20201115 23:02:07.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.742" endtime="20201115 23:02:07.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.717" endtime="20201115 23:02:07.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.715" endtime="20201115 23:02:07.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.752" endtime="20201115 23:02:08.039"></status>
</kw>
<msg timestamp="20201115 23:02:08.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.750" endtime="20201115 23:02:08.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.043" endtime="20201115 23:02:08.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.052" endtime="20201115 23:02:08.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.747" endtime="20201115 23:02:08.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.746" endtime="20201115 23:02:08.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.058" level="INFO">${RESULT} = [{'time': 0.022122972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.954100000000139e-05, 'source_diff': 1.954100000000139e-05}, {'time': 0.022144972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:08.055" endtime="20201115 23:02:08.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.073" level="INFO">${ACCURACY} = {'diff': [1.954100000000139e-05, 1.955499999999749e-05, 2.004099999999842e-05, 2.0055999999997465e-05, 1.956900000000053e-05, 1.9556000000000434e-05, 2.0056000000000934e-05, 1.9570000000000004e-05, 1....</msg>
<status status="PASS" starttime="20201115 23:02:08.060" endtime="20201115 23:02:08.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.078" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.077" endtime="20201115 23:02:08.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.081" level="INFO">VALUE: [1.954100000000139e-05, 1.955499999999749e-05, 2.004099999999842e-05, 2.0055999999997465e-05, 1.956900000000053e-05, 1.9556000000000434e-05, 2.0056000000000934e-05, 1.9570000000000004e-05, 1.954099999999792e-05, 2.005500000000146e-05, 2.0555999999997965e-05, 1.9570000000000004e-05, 2.0042000000001364e-05, 2.005500000000146e-05, 2.0041999999997895e-05, 1.9985999999999615e-05, 2.009700000000017e-05, 1.956900000000053e-05, 2.0055999999997465e-05, 2.0070000000000504e-05, 2.0042000000001364e-05, 2.005500000000146e-05, 2.005500000000146e-05, 2.005500000000146e-05, 1.9528000000001294e-05, 2.055499999999849e-05, 1.961099999999924e-05, 1.9542000000000864e-05, 1.95830000000001e-05, 1.9542000000000864e-05, 1.952699999999835e-05, 2.0042000000001364e-05, 2.011099999999974e-05, 2.0070000000000504e-05, 1.954100000000139e-05, 2.0042000000001364e-05, 2.0042000000001364e-05, 1.95830000000001e-05, 1.955499999999749e-05, 1.954099999999792e-05, 2.0028000000001794e-05, 2.005500000000146e-05, 2.0041999999997895e-05, 1.955500000000096e-05, 2.011099999999974e-05, 2.0042000000001364e-05, 2.0056000000000934e-05, 1.9555999999996965e-05, 2.0056000000000934e-05, 1.9556000000000434e-05]</msg>
<status status="PASS" starttime="20201115 23:02:08.079" endtime="20201115 23:02:08.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.074" endtime="20201115 23:02:08.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.084" endtime="20201115 23:02:08.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.087" endtime="20201115 23:02:08.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.085" endtime="20201115 23:02:08.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.082" endtime="20201115 23:02:08.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.714" endtime="20201115 23:02:08.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.712" endtime="20201115 23:02:08.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.711" endtime="20201115 23:02:08.108"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.110" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.119" endtime="20201115 23:02:08.136"></status>
</kw>
<msg timestamp="20201115 23:02:08.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.117" endtime="20201115 23:02:08.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.138" endtime="20201115 23:02:08.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.140" endtime="20201115 23:02:08.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.115" endtime="20201115 23:02:08.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.112" endtime="20201115 23:02:08.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.149" endtime="20201115 23:02:08.434"></status>
</kw>
<msg timestamp="20201115 23:02:08.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.148" endtime="20201115 23:02:08.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.439" endtime="20201115 23:02:08.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.447" endtime="20201115 23:02:08.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.145" endtime="20201115 23:02:08.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.143" endtime="20201115 23:02:08.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.454" level="INFO">${RESULT} = [{'time': 0.022097111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.105499999999899e-05, 'source_diff': 2.105499999999899e-05}, {'time': 0.022122931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:08.451" endtime="20201115 23:02:08.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.467" level="INFO">${ACCURACY} = {'diff': [2.105499999999899e-05, 2.0555999999997965e-05, 2.1055999999998465e-05, 2.1056000000001934e-05, 2.056900000000153e-05, 2.061100000000024e-05, 2.0527999999998825e-05, 2.054099999999892e-05, 2....</msg>
<status status="PASS" starttime="20201115 23:02:08.455" endtime="20201115 23:02:08.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.472" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.471" endtime="20201115 23:02:08.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.475" level="INFO">VALUE: [2.105499999999899e-05, 2.0555999999997965e-05, 2.1055999999998465e-05, 2.1056000000001934e-05, 2.056900000000153e-05, 2.061100000000024e-05, 2.0527999999998825e-05, 2.054099999999892e-05, 2.1000000000000185e-05, 2.1000000000000185e-05, 2.055499999999849e-05, 2.1055999999998465e-05, 2.052700000000282e-05, 2.0555999999997965e-05, 2.1028000000002794e-05, 2.0541999999998395e-05, 2.105499999999899e-05, 2.104099999999942e-05, 2.1556000000002434e-05, 2.0556000000001434e-05, 2.055500000000196e-05, 2.055499999999849e-05, 2.105499999999899e-05, 2.0556000000001434e-05, 2.0555999999997965e-05, 2.0542000000001864e-05, 2.0556000000001434e-05, 2.0542000000001864e-05, 2.0555999999997965e-05, 2.0556000000001434e-05, 2.0542000000001864e-05, 2.1027999999999325e-05, 2.0556000000001434e-05, 2.0541999999998395e-05, 2.155499999999949e-05, 2.1041999999998895e-05, 2.104099999999942e-05, 2.1512999999997312e-05, 2.105500000000246e-05, 2.111100000000074e-05, 2.1070000000001504e-05, 2.106900000000203e-05, 2.0542000000001864e-05, 2.1084000000001074e-05, 2.155499999999949e-05, 2.0570000000001004e-05, 2.061100000000024e-05, 2.0541999999998395e-05, 2.155499999999949e-05, 2.106899999999856e-05]</msg>
<status status="PASS" starttime="20201115 23:02:08.473" endtime="20201115 23:02:08.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.468" endtime="20201115 23:02:08.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.478" endtime="20201115 23:02:08.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.481" endtime="20201115 23:02:08.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.480" endtime="20201115 23:02:08.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.476" endtime="20201115 23:02:08.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.111" endtime="20201115 23:02:08.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.109" endtime="20201115 23:02:08.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.108" endtime="20201115 23:02:08.502"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.505" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.513" endtime="20201115 23:02:08.530"></status>
</kw>
<msg timestamp="20201115 23:02:08.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.511" endtime="20201115 23:02:08.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.532" endtime="20201115 23:02:08.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.534" endtime="20201115 23:02:08.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.509" endtime="20201115 23:02:08.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.507" endtime="20201115 23:02:08.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.544" endtime="20201115 23:02:08.831"></status>
</kw>
<msg timestamp="20201115 23:02:08.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022133306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.542" endtime="20201115 23:02:08.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022133306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.835" endtime="20201115 23:02:08.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.844" endtime="20201115 23:02:08.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.539" endtime="20201115 23:02:08.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.537" endtime="20201115 23:02:08.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.851" level="INFO">${RESULT} = [{'time': 0.022155347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.204100000000042e-05, 'source_diff': 2.204100000000042e-05}, {'time': 0.022181292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:08.847" endtime="20201115 23:02:08.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.864" level="INFO">${ACCURACY} = {'diff': [2.204100000000042e-05, 2.2055999999999465e-05, 2.2069999999999035e-05, 2.1555999999998965e-05, 2.1541999999999395e-05, 2.2041999999999895e-05, 2.20969999999987e-05, 2.25830000000031e-05, 2.1...</msg>
<status status="PASS" starttime="20201115 23:02:08.852" endtime="20201115 23:02:08.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.869" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.868" endtime="20201115 23:02:08.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.872" level="INFO">VALUE: [2.204100000000042e-05, 2.2055999999999465e-05, 2.2069999999999035e-05, 2.1555999999998965e-05, 2.1541999999999395e-05, 2.2041999999999895e-05, 2.20969999999987e-05, 2.25830000000031e-05, 2.1555999999998965e-05, 2.205499999999999e-05, 2.2069999999999035e-05, 2.1541999999999395e-05, 2.1541999999999395e-05, 2.1541999999999395e-05, 2.2026999999997382e-05, 2.155499999999949e-05, 2.2028000000000325e-05, 2.154099999999992e-05, 2.1999999999997716e-05, 2.156899999999906e-05, 2.1541999999999395e-05, 2.1555999999998965e-05, 2.2569999999999535e-05, 2.1514000000000255e-05, 2.1556000000002434e-05, 2.156899999999906e-05, 2.2041999999999895e-05, 2.20830000000026e-05, 2.2041999999999895e-05, 2.1555999999998965e-05, 2.1986000000001615e-05, 2.155499999999949e-05, 2.2041999999999895e-05, 2.1985999999998146e-05, 2.206899999999956e-05, 2.212499999999784e-05, 2.1541999999999395e-05, 2.1500000000000685e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.1556000000002434e-05, 2.1542000000002864e-05, 2.1542000000002864e-05, 2.1500000000000685e-05, 2.155499999999949e-05, 2.1555999999998965e-05, 2.15830000000021e-05, 2.2070000000002504e-05, 2.1555999999998965e-05, 2.204100000000042e-05]</msg>
<status status="PASS" starttime="20201115 23:02:08.870" endtime="20201115 23:02:08.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.865" endtime="20201115 23:02:08.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.875" endtime="20201115 23:02:08.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.878" endtime="20201115 23:02:08.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.877" endtime="20201115 23:02:08.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.873" endtime="20201115 23:02:08.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.505" endtime="20201115 23:02:08.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.504" endtime="20201115 23:02:08.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.503" endtime="20201115 23:02:08.900"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.902" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.910" endtime="20201115 23:02:08.928"></status>
</kw>
<msg timestamp="20201115 23:02:08.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.909" endtime="20201115 23:02:08.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.930" endtime="20201115 23:02:08.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.933" endtime="20201115 23:02:08.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.906" endtime="20201115 23:02:08.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.904" endtime="20201115 23:02:08.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.942" endtime="20201115 23:02:09.229"></status>
</kw>
<msg timestamp="20201115 23:02:09.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022504361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.940" endtime="20201115 23:02:09.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022504361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.233" endtime="20201115 23:02:09.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.241" endtime="20201115 23:02:09.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.938" endtime="20201115 23:02:09.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.936" endtime="20201115 23:02:09.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.248" level="INFO">${RESULT} = [{'time': 0.022527417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3056000000000465e-05, 'source_diff': 2.3056000000000465e-05}, {'time': 0.022553847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:09.245" endtime="20201115 23:02:09.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.262" level="INFO">${ACCURACY} = {'diff': [2.3056000000000465e-05, 2.261099999999877e-05, 2.305500000000099e-05, 2.3499999999999216e-05, 2.2542000000000395e-05, 2.3056000000000465e-05, 2.2542000000000395e-05, 2.3056000000000465e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:09.249" endtime="20201115 23:02:09.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.267" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.266" endtime="20201115 23:02:09.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.269" level="INFO">VALUE: [2.3056000000000465e-05, 2.261099999999877e-05, 2.305500000000099e-05, 2.3499999999999216e-05, 2.2542000000000395e-05, 2.3056000000000465e-05, 2.2542000000000395e-05, 2.3056000000000465e-05, 2.3056000000000465e-05, 2.305500000000099e-05, 2.3542000000001395e-05, 2.308300000000013e-05, 2.305500000000099e-05, 2.2542000000000395e-05, 2.3070000000000035e-05, 2.255500000000049e-05, 2.2540999999997452e-05, 2.255500000000049e-05, 2.3528000000001825e-05, 2.2555999999999965e-05, 2.3556000000000965e-05, 2.345899999999998e-05, 2.2985999999999146e-05, 2.258299999999963e-05, 2.304100000000142e-05, 2.3055999999996996e-05, 2.255500000000049e-05, 2.3000000000002185e-05, 2.2542000000000395e-05, 2.262500000000181e-05, 2.3042000000000895e-05, 2.3556000000000965e-05, 2.308300000000013e-05, 2.255500000000049e-05, 2.256900000000006e-05, 2.305500000000099e-05, 2.2542000000000395e-05, 2.3056000000000465e-05, 2.255500000000049e-05, 2.2999999999998716e-05, 2.3056000000000465e-05, 2.3042000000000895e-05, 2.304100000000142e-05, 2.3056000000000465e-05, 2.3000000000002185e-05, 2.3527999999998356e-05, 2.3041999999997426e-05, 2.2985999999999146e-05, 2.305500000000099e-05, 2.2485999999998646e-05]</msg>
<status status="PASS" starttime="20201115 23:02:09.268" endtime="20201115 23:02:09.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.263" endtime="20201115 23:02:09.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.272" endtime="20201115 23:02:09.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.276" endtime="20201115 23:02:09.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.274" endtime="20201115 23:02:09.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.271" endtime="20201115 23:02:09.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.903" endtime="20201115 23:02:09.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.901" endtime="20201115 23:02:09.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.900" endtime="20201115 23:02:09.297"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.300" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.309" endtime="20201115 23:02:09.327"></status>
</kw>
<msg timestamp="20201115 23:02:09.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.307" endtime="20201115 23:02:09.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.328" endtime="20201115 23:02:09.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.331" endtime="20201115 23:02:09.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.304" endtime="20201115 23:02:09.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.302" endtime="20201115 23:02:09.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.340" endtime="20201115 23:02:09.628"></status>
</kw>
<msg timestamp="20201115 23:02:09.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023107736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023131292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.339" endtime="20201115 23:02:09.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023107736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023131292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.633" endtime="20201115 23:02:09.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.641" endtime="20201115 23:02:09.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.336" endtime="20201115 23:02:09.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.334" endtime="20201115 23:02:09.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.648" level="INFO">${RESULT} = [{'time': 0.023131292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3556000000000965e-05, 'source_diff': 2.3556000000000965e-05}, {'time': 0.023160569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:09.645" endtime="20201115 23:02:09.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.663" level="INFO">${ACCURACY} = {'diff': [2.3556000000000965e-05, 2.3568999999997592e-05, 2.3556000000000965e-05, 2.4555999999998496e-05, 2.355500000000149e-05, 2.4027999999998856e-05, 2.405500000000199e-05, 2.4056000000001465e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:09.649" endtime="20201115 23:02:09.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.668" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.667" endtime="20201115 23:02:09.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.671" level="INFO">VALUE: [2.3556000000000965e-05, 2.3568999999997592e-05, 2.3556000000000965e-05, 2.4555999999998496e-05, 2.355500000000149e-05, 2.4027999999998856e-05, 2.405500000000199e-05, 2.4056000000001465e-05, 2.4555999999998496e-05, 2.4040999999998952e-05, 2.4541999999998926e-05, 2.35970000000002e-05, 2.4054999999998522e-05, 2.405500000000199e-05, 2.402700000000285e-05, 2.3540999999998452e-05, 2.412499999999984e-05, 2.4054999999998522e-05, 2.354100000000192e-05, 2.355500000000149e-05, 2.3570000000000535e-05, 2.41109999999968e-05, 2.4028000000002325e-05, 2.4556000000001965e-05, 2.3999999999999716e-05, 2.4070000000001035e-05, 2.4041999999998426e-05, 2.3527999999998356e-05, 2.355500000000149e-05, 2.3527999999998356e-05, 2.3555999999997496e-05, 2.355500000000149e-05, 2.4055999999997996e-05, 2.4042000000001895e-05, 2.4013999999999286e-05, 2.3570000000000535e-05, 2.3528000000001825e-05, 2.4069999999997566e-05, 2.4540999999999452e-05, 2.404100000000242e-05, 2.3597999999999675e-05, 2.355500000000149e-05, 2.4540999999999452e-05, 2.355500000000149e-05, 2.3541999999997926e-05, 2.3570000000000535e-05, 2.4541999999998926e-05, 2.404100000000242e-05, 2.40970000000007e-05, 2.3555999999997496e-05]</msg>
<status status="PASS" starttime="20201115 23:02:09.669" endtime="20201115 23:02:09.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.664" endtime="20201115 23:02:09.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.674" endtime="20201115 23:02:09.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.678" endtime="20201115 23:02:09.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.676" endtime="20201115 23:02:09.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.672" endtime="20201115 23:02:09.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.300" endtime="20201115 23:02:09.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.298" endtime="20201115 23:02:09.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.297" endtime="20201115 23:02:09.699"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.702" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.710" endtime="20201115 23:02:09.728"></status>
</kw>
<msg timestamp="20201115 23:02:09.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.708" endtime="20201115 23:02:09.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.730" endtime="20201115 23:02:09.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.733" endtime="20201115 23:02:09.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.706" endtime="20201115 23:02:09.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.704" endtime="20201115 23:02:09.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.742" endtime="20201115 23:02:10.028"></status>
</kw>
<msg timestamp="20201115 23:02:10.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022611583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.740" endtime="20201115 23:02:10.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022611583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.032" endtime="20201115 23:02:10.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.041" endtime="20201115 23:02:10.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.738" endtime="20201115 23:02:10.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.736" endtime="20201115 23:02:10.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.048" level="INFO">${RESULT} = [{'time': 0.022611583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.461100000000077e-05, 'source_diff': 2.461100000000077e-05}, {'time': 0.022638833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:10.044" endtime="20201115 23:02:10.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.061" level="INFO">${ACCURACY} = {'diff': [2.461100000000077e-05, 2.5054999999999522e-05, 2.5054999999999522e-05, 2.4555999999998496e-05, 2.4556000000001965e-05, 2.5041999999999426e-05, 2.4541999999998926e-05, 2.5040999999999952e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:10.049" endtime="20201115 23:02:10.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.066" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.065" endtime="20201115 23:02:10.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.068" level="INFO">VALUE: [2.461100000000077e-05, 2.5054999999999522e-05, 2.5054999999999522e-05, 2.4555999999998496e-05, 2.4556000000001965e-05, 2.5041999999999426e-05, 2.4541999999998926e-05, 2.5040999999999952e-05, 2.5040999999999952e-05, 2.5040999999999952e-05, 2.505500000000299e-05, 2.4541999999998926e-05, 2.4568999999998592e-05, 2.5083999999998136e-05, 2.4555999999998496e-05, 2.4555999999998496e-05, 2.5042000000002895e-05, 2.5014000000000286e-05, 2.4540999999999452e-05, 2.4527999999999356e-05, 2.5041999999999426e-05, 2.4554999999999022e-05, 2.4526999999999882e-05, 2.5569999999999066e-05, 2.4999999999997247e-05, 2.4554999999999022e-05, 2.4555999999998496e-05, 2.5055999999998996e-05, 2.4541999999998926e-05, 2.5041999999999426e-05, 2.5041999999999426e-05, 2.5541999999999926e-05, 2.5069999999998566e-05, 2.5040999999999952e-05, 2.5555999999999496e-05, 2.506900000000256e-05, 2.4513999999999786e-05, 2.5055999999998996e-05, 2.4541999999998926e-05, 2.5056000000002465e-05, 2.4527999999999356e-05, 2.5055999999998996e-05, 2.45970000000012e-05, 2.511100000000127e-05, 2.5056000000002465e-05, 2.4554999999999022e-05, 2.5555000000000022e-05, 2.4542000000002395e-05, 2.5041999999999426e-05, 2.461100000000077e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.067" endtime="20201115 23:02:10.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.062" endtime="20201115 23:02:10.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.072" endtime="20201115 23:02:10.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.076" endtime="20201115 23:02:10.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.074" endtime="20201115 23:02:10.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.071" endtime="20201115 23:02:10.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.702" endtime="20201115 23:02:10.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.700" endtime="20201115 23:02:10.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.700" endtime="20201115 23:02:10.097"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.099" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.108" endtime="20201115 23:02:10.126"></status>
</kw>
<msg timestamp="20201115 23:02:10.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.106" endtime="20201115 23:02:10.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.128" endtime="20201115 23:02:10.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.130" endtime="20201115 23:02:10.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.104" endtime="20201115 23:02:10.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.101" endtime="20201115 23:02:10.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.140" endtime="20201115 23:02:10.426"></status>
</kw>
<msg timestamp="20201115 23:02:10.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.138" endtime="20201115 23:02:10.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.431" endtime="20201115 23:02:10.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.439" endtime="20201115 23:02:10.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.135" endtime="20201115 23:02:10.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.134" endtime="20201115 23:02:10.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.446" level="INFO">${RESULT} = [{'time': 0.022568125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5556000000002965e-05, 'source_diff': 2.5556000000002965e-05}, {'time': 0.022599125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:10.442" endtime="20201115 23:02:10.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.460" level="INFO">${ACCURACY} = {'diff': [2.5556000000002965e-05, 2.6042000000000426e-05, 2.5541999999999926e-05, 2.662500000000234e-05, 2.6026999999997913e-05, 2.5555999999999496e-05, 2.5555000000000022e-05, 2.6055000000000522e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:10.447" endtime="20201115 23:02:10.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.464" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.463" endtime="20201115 23:02:10.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.467" level="INFO">VALUE: [2.5556000000002965e-05, 2.6042000000000426e-05, 2.5541999999999926e-05, 2.662500000000234e-05, 2.6026999999997913e-05, 2.5555999999999496e-05, 2.5555000000000022e-05, 2.6055000000000522e-05, 2.5527000000000882e-05, 2.5514000000000786e-05, 2.6069000000000092e-05, 2.5555000000000022e-05, 2.5582999999999162e-05, 2.6054999999997053e-05, 2.5541999999999926e-05, 2.5485999999998177e-05, 2.5555000000000022e-05, 2.547299999999808e-05, 2.5582999999999162e-05, 2.6042000000000426e-05, 2.6042000000000426e-05, 2.5541999999999926e-05, 2.6069999999999566e-05, 2.5541000000000452e-05, 2.5541999999999926e-05, 2.5541999999999926e-05, 2.5555000000000022e-05, 2.6055999999999996e-05, 2.5555000000000022e-05, 2.6055000000000522e-05, 2.6068999999996623e-05, 2.5541000000000452e-05, 2.5485999999998177e-05, 2.5541000000000452e-05, 2.6542000000000926e-05, 2.5568999999999592e-05, 2.5999999999998247e-05, 2.6041999999996956e-05, 2.6041000000000952e-05, 2.55970000000022e-05, 2.6055999999999996e-05, 2.6041999999996956e-05, 2.5541999999999926e-05, 2.5555999999999496e-05, 2.5555999999999496e-05, 2.6542000000000926e-05, 2.5597999999998206e-05, 2.5541999999999926e-05, 2.5556000000002965e-05, 2.6055999999999996e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.465" endtime="20201115 23:02:10.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.461" endtime="20201115 23:02:10.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.471" endtime="20201115 23:02:10.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.474" endtime="20201115 23:02:10.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.473" endtime="20201115 23:02:10.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.469" endtime="20201115 23:02:10.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.100" endtime="20201115 23:02:10.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.098" endtime="20201115 23:02:10.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.097" endtime="20201115 23:02:10.495"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.498" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.507" endtime="20201115 23:02:10.525"></status>
</kw>
<msg timestamp="20201115 23:02:10.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.505" endtime="20201115 23:02:10.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.527" endtime="20201115 23:02:10.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.529" endtime="20201115 23:02:10.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.502" endtime="20201115 23:02:10.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.500" endtime="20201115 23:02:10.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.539" endtime="20201115 23:02:10.826"></status>
</kw>
<msg timestamp="20201115 23:02:10.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022979333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023006375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.537" endtime="20201115 23:02:10.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022979333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023006375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.831" endtime="20201115 23:02:10.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.839" endtime="20201115 23:02:10.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.534" endtime="20201115 23:02:10.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.533" endtime="20201115 23:02:10.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.846" level="INFO">${RESULT} = [{'time': 0.023006375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7041999999997957e-05, 'source_diff': 2.7041999999997957e-05}, {'time': 0.023036208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:10.842" endtime="20201115 23:02:10.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.860" level="INFO">${ACCURACY} = {'diff': [2.7041999999997957e-05, 2.6569000000000592e-05, 2.7513999999999317e-05, 2.7027999999998387e-05, 2.6541000000001452e-05, 2.7054999999998053e-05, 2.6569000000000592e-05, 2.6500000000002216e-05...</msg>
<status status="PASS" starttime="20201115 23:02:10.847" endtime="20201115 23:02:10.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.865" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.864" endtime="20201115 23:02:10.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.867" level="INFO">VALUE: [2.7041999999997957e-05, 2.6569000000000592e-05, 2.7513999999999317e-05, 2.7027999999998387e-05, 2.6541000000001452e-05, 2.7054999999998053e-05, 2.6569000000000592e-05, 2.6500000000002216e-05, 2.7040999999998483e-05, 2.7541999999998457e-05, 2.6568999999997123e-05, 2.7056000000000996e-05, 2.6541000000001452e-05, 2.6569000000000592e-05, 2.6570000000000066e-05, 2.7042000000001426e-05, 2.6583000000000162e-05, 2.7569000000001592e-05, 2.6541999999997457e-05, 2.6624999999998872e-05, 2.7055999999997526e-05, 2.7054999999998053e-05, 2.7055000000001522e-05, 2.6570000000000066e-05, 2.7056000000000996e-05, 2.6542000000000926e-05, 2.7555000000002022e-05, 2.7054999999998053e-05, 2.7055000000001522e-05, 2.6570000000000066e-05, 2.7040999999998483e-05, 2.7070000000000566e-05, 2.6542000000000926e-05, 2.7055000000001522e-05, 2.65970000000032e-05, 2.6556000000000496e-05, 2.6528000000001356e-05, 2.7056000000000996e-05, 2.6555000000001022e-05, 2.7055999999997526e-05, 2.6569000000000592e-05, 2.7070000000000566e-05, 2.7056000000000996e-05, 2.7055999999997526e-05, 2.7042000000001426e-05, 2.7027000000002382e-05, 2.6554999999997553e-05, 2.7040999999998483e-05, 2.6540999999997983e-05, 2.6542000000000926e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.866" endtime="20201115 23:02:10.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.861" endtime="20201115 23:02:10.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.870" endtime="20201115 23:02:10.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.874" endtime="20201115 23:02:10.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.872" endtime="20201115 23:02:10.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.869" endtime="20201115 23:02:10.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.499" endtime="20201115 23:02:10.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.497" endtime="20201115 23:02:10.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.496" endtime="20201115 23:02:10.895"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.898" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.906" endtime="20201115 23:02:10.924"></status>
</kw>
<msg timestamp="20201115 23:02:10.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.905" endtime="20201115 23:02:10.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.926" endtime="20201115 23:02:10.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.928" endtime="20201115 23:02:10.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.902" endtime="20201115 23:02:10.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.900" endtime="20201115 23:02:10.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.938" endtime="20201115 23:02:11.224"></status>
</kw>
<msg timestamp="20201115 23:02:11.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.936" endtime="20201115 23:02:11.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.229" endtime="20201115 23:02:11.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.238" endtime="20201115 23:02:11.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.933" endtime="20201115 23:02:11.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.932" endtime="20201115 23:02:11.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.245" level="INFO">${RESULT} = [{'time': 0.022610542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8056000000001996e-05, 'source_diff': 2.8056000000001996e-05}, {'time': 0.022640681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:11.241" endtime="20201115 23:02:11.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.260" level="INFO">${ACCURACY} = {'diff': [2.8056000000001996e-05, 2.7569999999997596e-05, 2.8054999999999053e-05, 2.8055999999998527e-05, 2.7554999999998553e-05, 2.8028000000002856e-05, 2.7556000000001496e-05, 2.7540999999998983e-05...</msg>
<status status="PASS" starttime="20201115 23:02:11.246" endtime="20201115 23:02:11.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.265" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.264" endtime="20201115 23:02:11.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.267" level="INFO">VALUE: [2.8056000000001996e-05, 2.7569999999997596e-05, 2.8054999999999053e-05, 2.8055999999998527e-05, 2.7554999999998553e-05, 2.8028000000002856e-05, 2.7556000000001496e-05, 2.7540999999998983e-05, 2.7541999999998457e-05, 2.7472000000000607e-05, 2.8125000000000372e-05, 2.8069999999998096e-05, 2.8056000000001996e-05, 2.8540999999999983e-05, 2.8069000000002092e-05, 2.7526999999999413e-05, 2.7542000000001926e-05, 2.8055000000002522e-05, 2.8055999999998527e-05, 2.8041999999998957e-05, 2.8056000000001996e-05, 2.8056000000001996e-05, 2.7555999999998027e-05, 2.7555000000002022e-05, 2.8112000000000276e-05, 2.8082999999998193e-05, 2.7499999999999747e-05, 2.8070000000001566e-05, 2.7556000000001496e-05, 2.8055999999998527e-05, 2.8056000000001996e-05, 2.7554999999998553e-05, 2.7540999999998983e-05, 2.7527000000002882e-05, 2.7556000000001496e-05, 2.8000000000000247e-05, 2.8042000000002426e-05, 2.8054999999999053e-05, 2.7513999999999317e-05, 2.8028000000002856e-05, 2.8068999999998623e-05, 2.7611000000000302e-05, 2.7570000000001066e-05, 2.8082999999998193e-05, 2.8097999999997236e-05, 2.7597000000000732e-05, 2.8041999999998957e-05, 2.8042000000002426e-05, 2.7554999999998553e-05, 2.7611000000000302e-05]</msg>
<status status="PASS" starttime="20201115 23:02:11.266" endtime="20201115 23:02:11.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.261" endtime="20201115 23:02:11.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.270" endtime="20201115 23:02:11.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.274" endtime="20201115 23:02:11.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.272" endtime="20201115 23:02:11.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.269" endtime="20201115 23:02:11.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.898" endtime="20201115 23:02:11.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.896" endtime="20201115 23:02:11.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.896" endtime="20201115 23:02:11.295"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.298" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.306" endtime="20201115 23:02:11.324"></status>
</kw>
<msg timestamp="20201115 23:02:11.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.304" endtime="20201115 23:02:11.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.326" endtime="20201115 23:02:11.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.328" endtime="20201115 23:02:11.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.302" endtime="20201115 23:02:11.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.300" endtime="20201115 23:02:11.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.338" endtime="20201115 23:02:11.623"></status>
</kw>
<msg timestamp="20201115 23:02:11.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.336" endtime="20201115 23:02:11.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.628" endtime="20201115 23:02:11.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.636" endtime="20201115 23:02:11.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.334" endtime="20201115 23:02:11.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.332" endtime="20201115 23:02:11.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.643" level="INFO">${RESULT} = [{'time': 0.022592931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9028000000000387e-05, 'source_diff': 2.9028000000000387e-05}, {'time': 0.022624069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:11.640" endtime="20201115 23:02:11.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.657" level="INFO">${ACCURACY} = {'diff': [2.9028000000000387e-05, 2.8554999999999553e-05, 2.9068999999999623e-05, 2.8554999999999553e-05, 2.9041999999999957e-05, 2.8555999999999027e-05, 2.9055000000000053e-05, 2.8555999999999027e-05...</msg>
<status status="PASS" starttime="20201115 23:02:11.644" endtime="20201115 23:02:11.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.662" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.661" endtime="20201115 23:02:11.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.664" level="INFO">VALUE: [2.9028000000000387e-05, 2.8554999999999553e-05, 2.9068999999999623e-05, 2.8554999999999553e-05, 2.9041999999999957e-05, 2.8555999999999027e-05, 2.9055000000000053e-05, 2.8555999999999027e-05, 2.8584000000001636e-05, 2.9041000000000483e-05, 2.9555000000000553e-05, 2.8485999999997708e-05, 2.8554999999999553e-05, 2.8555999999999027e-05, 2.8527999999999887e-05, 2.8556000000002496e-05, 2.8554999999999553e-05, 2.9110999999998333e-05, 2.8999999999997778e-05, 2.9055999999999527e-05, 2.8555999999999027e-05, 2.8541999999999457e-05, 2.8554999999999553e-05, 2.9068999999999623e-05, 2.8999999999997778e-05, 2.8569999999998597e-05, 2.9542000000000457e-05, 2.8596999999998263e-05, 2.8541999999999457e-05, 2.8554999999999553e-05, 2.9055999999999527e-05, 2.8556000000002496e-05, 2.9055000000000053e-05, 2.9055000000000053e-05, 2.8611000000001302e-05, 2.8554999999999553e-05, 2.9055999999999527e-05, 2.9055999999999527e-05, 2.9068999999999623e-05, 2.9083999999998666e-05, 2.8555999999999027e-05, 2.8555999999999027e-05, 2.8500000000000747e-05, 2.9041999999999957e-05, 2.8554999999999553e-05, 2.9111000000001802e-05, 2.9055999999999527e-05, 2.8555999999999027e-05, 2.9055000000000053e-05, 2.8569999999998597e-05]</msg>
<status status="PASS" starttime="20201115 23:02:11.663" endtime="20201115 23:02:11.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.658" endtime="20201115 23:02:11.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.668" endtime="20201115 23:02:11.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.671" endtime="20201115 23:02:11.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.670" endtime="20201115 23:02:11.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.666" endtime="20201115 23:02:11.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.298" endtime="20201115 23:02:11.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.296" endtime="20201115 23:02:11.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.295" endtime="20201115 23:02:11.692"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.695" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.703" endtime="20201115 23:02:11.721"></status>
</kw>
<msg timestamp="20201115 23:02:11.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.702" endtime="20201115 23:02:11.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.722" endtime="20201115 23:02:11.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.725" endtime="20201115 23:02:11.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.699" endtime="20201115 23:02:11.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.697" endtime="20201115 23:02:11.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.735" endtime="20201115 23:02:12.024"></status>
</kw>
<msg timestamp="20201115 23:02:12.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02247225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:11.733" endtime="20201115 23:02:12.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02247225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:12.029" endtime="20201115 23:02:12.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.037" endtime="20201115 23:02:12.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.731" endtime="20201115 23:02:12.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.729" endtime="20201115 23:02:12.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.044" level="INFO">${RESULT} = [{'time': 0.02247225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9556000000000027e-05, 'source_diff': 2.9556000000000027e-05}, {'time': 0.022508319, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:02:12.041" endtime="20201115 23:02:12.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.058" level="INFO">${ACCURACY} = {'diff': [2.9556000000000027e-05, 3.0040999999998014e-05, 2.9610999999998833e-05, 3.0068999999997154e-05, 3.0070000000000097e-05, 3.0056000000000527e-05, 3.0056000000000527e-05, 3.0042000000000957e-05...</msg>
<status status="PASS" starttime="20201115 23:02:12.045" endtime="20201115 23:02:12.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.062" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.061" endtime="20201115 23:02:12.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.065" level="INFO">VALUE: [2.9556000000000027e-05, 3.0040999999998014e-05, 2.9610999999998833e-05, 3.0068999999997154e-05, 3.0070000000000097e-05, 3.0056000000000527e-05, 3.0056000000000527e-05, 3.0042000000000957e-05, 3.0056000000000527e-05, 3.0070000000000097e-05, 2.9527999999997417e-05, 3.0027999999997917e-05, 3.0042000000000957e-05, 2.9999999999998778e-05, 3.0013999999998348e-05, 3.0070000000000097e-05, 2.9513999999997848e-05, 3.0055000000001053e-05, 2.9556000000000027e-05, 3.0055999999997057e-05, 2.9556000000000027e-05, 2.9556000000000027e-05, 2.9569999999999597e-05, 3.0056000000000527e-05, 3.05700000000006e-05, 2.9556000000000027e-05, 2.9569000000000123e-05, 2.9971999999999638e-05, 3.0054999999997584e-05, 2.9527000000001413e-05, 3.0026999999998444e-05, 2.9554999999997084e-05, 2.9542000000000457e-05, 2.9569000000000123e-05, 3.0042000000000957e-05, 3.0056000000000527e-05, 2.9569999999999597e-05, 2.9542000000000457e-05, 3.0056000000000527e-05, 3.0068999999997154e-05, 2.9542000000000457e-05, 3.0027999999997917e-05, 2.9499999999998278e-05, 2.9542000000000457e-05, 3.0056000000000527e-05, 3.0041000000001483e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9556000000000027e-05, 2.9556000000000027e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.063" endtime="20201115 23:02:12.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.059" endtime="20201115 23:02:12.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.068" endtime="20201115 23:02:12.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.072" endtime="20201115 23:02:12.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.070" endtime="20201115 23:02:12.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.066" endtime="20201115 23:02:12.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.696" endtime="20201115 23:02:12.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.694" endtime="20201115 23:02:12.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.693" endtime="20201115 23:02:12.093"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.095" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.104" endtime="20201115 23:02:12.122"></status>
</kw>
<msg timestamp="20201115 23:02:12.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.103" endtime="20201115 23:02:12.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.124" endtime="20201115 23:02:12.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.127" endtime="20201115 23:02:12.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.100" endtime="20201115 23:02:12.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.098" endtime="20201115 23:02:12.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.136" endtime="20201115 23:02:12.423"></status>
</kw>
<msg timestamp="20201115 23:02:12.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022980569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023011597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.134" endtime="20201115 23:02:12.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022980569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023011597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.427" endtime="20201115 23:02:12.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.436" endtime="20201115 23:02:12.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.132" endtime="20201115 23:02:12.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.130" endtime="20201115 23:02:12.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.443" level="INFO">${RESULT} = [{'time': 0.023011597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.102800000000239e-05, 'source_diff': 3.102800000000239e-05}, {'time': 0.023047931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:12.439" endtime="20201115 23:02:12.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.456" level="INFO">${ACCURACY} = {'diff': [3.102800000000239e-05, 3.05700000000006e-05, 3.105500000000205e-05, 3.055599999999756e-05, 3.104200000000196e-05, 3.105500000000205e-05, 3.055600000000103e-05, 3.104200000000196e-05, 3.05550...</msg>
<status status="PASS" starttime="20201115 23:02:12.444" endtime="20201115 23:02:12.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.461" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.460" endtime="20201115 23:02:12.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.463" level="INFO">VALUE: [3.102800000000239e-05, 3.05700000000006e-05, 3.105500000000205e-05, 3.055599999999756e-05, 3.104200000000196e-05, 3.105500000000205e-05, 3.055600000000103e-05, 3.104200000000196e-05, 3.055500000000155e-05, 3.1068999999998154e-05, 3.0554999999998084e-05, 3.1040999999999014e-05, 3.158300000000169e-05, 3.05700000000006e-05, 3.104200000000196e-05, 3.05700000000006e-05, 3.055600000000103e-05, 3.055599999999756e-05, 3.102799999999892e-05, 3.052800000000189e-05, 3.111100000000033e-05, 3.055600000000103e-05, 3.056900000000112e-05, 3.054199999999799e-05, 3.104200000000196e-05, 3.059700000000026e-05, 3.056900000000112e-05, 3.06249999999994e-05, 3.105599999999806e-05, 3.104199999999849e-05, 3.05700000000006e-05, 3.054100000000198e-05, 3.163899999999997e-05, 3.105599999999806e-05, 3.0513999999998848e-05, 3.1068999999998154e-05, 3.105599999999806e-05, 3.105500000000205e-05, 3.055599999999756e-05, 3.055600000000103e-05, 3.156999999999813e-05, 3.104200000000196e-05, 3.0472000000000138e-05, 3.105600000000153e-05, 3.055600000000103e-05, 3.059700000000026e-05, 3.154199999999899e-05, 3.102799999999892e-05, 3.102799999999892e-05, 3.104199999999849e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.462" endtime="20201115 23:02:12.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.457" endtime="20201115 23:02:12.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.466" endtime="20201115 23:02:12.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.471" endtime="20201115 23:02:12.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.468" endtime="20201115 23:02:12.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.465" endtime="20201115 23:02:12.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.096" endtime="20201115 23:02:12.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.094" endtime="20201115 23:02:12.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.093" endtime="20201115 23:02:12.492"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.494" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.503" endtime="20201115 23:02:12.521"></status>
</kw>
<msg timestamp="20201115 23:02:12.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.501" endtime="20201115 23:02:12.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.523" endtime="20201115 23:02:12.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.525" endtime="20201115 23:02:12.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.498" endtime="20201115 23:02:12.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.496" endtime="20201115 23:02:12.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.535" endtime="20201115 23:02:12.823"></status>
</kw>
<msg timestamp="20201115 23:02:12.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022924181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.533" endtime="20201115 23:02:12.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022924181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.827" endtime="20201115 23:02:12.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.835" endtime="20201115 23:02:12.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.531" endtime="20201115 23:02:12.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.529" endtime="20201115 23:02:12.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.843" level="INFO">${RESULT} = [{'time': 0.022924181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.204199999999949e-05, 'source_diff': 3.204199999999949e-05}, {'time': 0.022961056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:12.839" endtime="20201115 23:02:12.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.859" level="INFO">${ACCURACY} = {'diff': [3.204199999999949e-05, 3.209800000000124e-05, 3.152799999999942e-05, 3.2054999999999584e-05, 3.249999999999781e-05, 3.155600000000203e-05, 3.1554999999999084e-05, 3.2054999999999584e-05, 3.2...</msg>
<status status="PASS" starttime="20201115 23:02:12.844" endtime="20201115 23:02:12.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.863" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.862" endtime="20201115 23:02:12.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.866" level="INFO">VALUE: [3.204199999999949e-05, 3.209800000000124e-05, 3.152799999999942e-05, 3.2054999999999584e-05, 3.249999999999781e-05, 3.155600000000203e-05, 3.1554999999999084e-05, 3.2054999999999584e-05, 3.2541000000000514e-05, 3.206999999999863e-05, 3.154199999999899e-05, 3.205600000000253e-05, 3.2041000000000014e-05, 3.2555000000000084e-05, 3.201400000000035e-05, 3.204199999999949e-05, 3.204199999999949e-05, 3.1568999999998654e-05, 3.204199999999949e-05, 3.2054999999999584e-05, 3.1568999999998654e-05, 3.25700000000026e-05, 3.2041000000000014e-05, 3.15700000000016e-05, 3.2041000000000014e-05, 3.155599999999856e-05, 3.204200000000296e-05, 3.205599999999906e-05, 3.254199999999999e-05, 3.154100000000298e-05, 3.152800000000289e-05, 3.1540999999999514e-05, 3.2054999999999584e-05, 3.204199999999949e-05, 3.155599999999856e-05, 3.2068999999999154e-05, 3.205599999999906e-05, 3.202799999999992e-05, 3.209800000000124e-05, 3.201400000000035e-05, 3.15700000000016e-05, 3.155600000000203e-05, 3.2555000000000084e-05, 3.2555000000000084e-05, 3.155600000000203e-05, 3.2027000000000444e-05, 3.2555000000000084e-05, 3.205599999999906e-05, 3.205599999999906e-05, 3.1540999999999514e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.864" endtime="20201115 23:02:12.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.860" endtime="20201115 23:02:12.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.870" endtime="20201115 23:02:12.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.873" endtime="20201115 23:02:12.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.872" endtime="20201115 23:02:12.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.868" endtime="20201115 23:02:12.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.495" endtime="20201115 23:02:12.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.493" endtime="20201115 23:02:12.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.492" endtime="20201115 23:02:12.894"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.897" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.905" endtime="20201115 23:02:12.923"></status>
</kw>
<msg timestamp="20201115 23:02:12.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.904" endtime="20201115 23:02:12.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.924" endtime="20201115 23:02:12.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.927" endtime="20201115 23:02:12.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.901" endtime="20201115 23:02:12.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.899" endtime="20201115 23:02:12.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.936" endtime="20201115 23:02:13.223"></status>
</kw>
<msg timestamp="20201115 23:02:13.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.935" endtime="20201115 23:02:13.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.227" endtime="20201115 23:02:13.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.236" endtime="20201115 23:02:13.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.932" endtime="20201115 23:02:13.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.930" endtime="20201115 23:02:13.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.243" level="INFO">${RESULT} = [{'time': 0.022596347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.248599999999824e-05, 'source_diff': 3.248599999999824e-05}, {'time': 0.02263325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:13.239" endtime="20201115 23:02:13.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.256" level="INFO">${ACCURACY} = {'diff': [3.248599999999824e-05, 3.255599999999956e-05, 3.255599999999956e-05, 3.2555000000000084e-05, 3.254199999999999e-05, 3.355600000000056e-05, 3.355600000000056e-05, 3.2541000000000514e-05, 3.30...</msg>
<status status="PASS" starttime="20201115 23:02:13.244" endtime="20201115 23:02:13.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.261" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.260" endtime="20201115 23:02:13.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.264" level="INFO">VALUE: [3.248599999999824e-05, 3.255599999999956e-05, 3.255599999999956e-05, 3.2555000000000084e-05, 3.254199999999999e-05, 3.355600000000056e-05, 3.355600000000056e-05, 3.2541000000000514e-05, 3.302799999999745e-05, 3.3055000000000584e-05, 3.252800000000042e-05, 3.2555000000000084e-05, 3.305600000000006e-05, 3.3069000000000154e-05, 3.304200000000049e-05, 3.3041000000001014e-05, 3.304200000000049e-05, 3.254199999999999e-05, 3.300000000000178e-05, 3.3055000000000584e-05, 3.302800000000092e-05, 3.2610999999998364e-05, 3.355600000000056e-05, 3.256999999999913e-05, 3.255599999999956e-05, 3.30839999999992e-05, 3.306999999999963e-05, 3.255599999999956e-05, 3.305600000000006e-05, 3.255600000000303e-05, 3.3055000000000584e-05, 3.255599999999956e-05, 3.254199999999999e-05, 3.2541000000000514e-05, 3.3069000000000154e-05, 3.304200000000049e-05, 3.305600000000006e-05, 3.256999999999913e-05, 3.2555000000000084e-05, 3.30839999999992e-05, 3.26250000000014e-05, 3.355600000000056e-05, 3.305600000000006e-05, 3.304200000000049e-05, 3.2555000000000084e-05, 3.354200000000099e-05, 3.305600000000006e-05, 3.2526999999997475e-05, 3.255599999999956e-05, 3.25700000000026e-05]</msg>
<status status="PASS" starttime="20201115 23:02:13.262" endtime="20201115 23:02:13.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.257" endtime="20201115 23:02:13.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.267" endtime="20201115 23:02:13.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.271" endtime="20201115 23:02:13.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.269" endtime="20201115 23:02:13.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.266" endtime="20201115 23:02:13.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.898" endtime="20201115 23:02:13.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.896" endtime="20201115 23:02:13.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.895" endtime="20201115 23:02:13.292"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.294" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.303" endtime="20201115 23:02:13.321"></status>
</kw>
<msg timestamp="20201115 23:02:13.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.301" endtime="20201115 23:02:13.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.322" endtime="20201115 23:02:13.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.325" endtime="20201115 23:02:13.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.299" endtime="20201115 23:02:13.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.296" endtime="20201115 23:02:13.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.334" endtime="20201115 23:02:13.621"></status>
</kw>
<msg timestamp="20201115 23:02:13.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022511181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022544736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.333" endtime="20201115 23:02:13.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022511181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022544736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.625" endtime="20201115 23:02:13.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.634" endtime="20201115 23:02:13.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.330" endtime="20201115 23:02:13.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.328" endtime="20201115 23:02:13.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.641" level="INFO">${RESULT} = [{'time': 0.022544736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3554999999997615e-05, 'source_diff': 3.3554999999997615e-05}, {'time': 0.022581556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:13.637" endtime="20201115 23:02:13.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.655" level="INFO">${ACCURACY} = {'diff': [3.3554999999997615e-05, 3.405599999999759e-05, 3.404199999999802e-05, 3.3569000000000654e-05, 3.3569000000000654e-05, 3.407000000000063e-05, 3.355600000000056e-05, 3.3569000000000654e-05, 3....</msg>
<status status="PASS" starttime="20201115 23:02:13.642" endtime="20201115 23:02:13.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.660" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.659" endtime="20201115 23:02:13.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.662" level="INFO">VALUE: [3.3554999999997615e-05, 3.405599999999759e-05, 3.404199999999802e-05, 3.3569000000000654e-05, 3.3569000000000654e-05, 3.407000000000063e-05, 3.355600000000056e-05, 3.3569000000000654e-05, 3.4069000000001154e-05, 3.405599999999759e-05, 3.355600000000056e-05, 3.355600000000056e-05, 3.3596999999999794e-05, 3.3555000000001084e-05, 3.3555000000001084e-05, 3.3610999999999364e-05, 3.397299999999964e-05, 3.354200000000099e-05, 3.3512999999998905e-05, 3.4068999999997684e-05, 3.355600000000056e-05, 3.3610999999999364e-05, 3.354199999999752e-05, 3.3555000000001084e-05, 3.4055000000001584e-05, 3.3541000000001514e-05, 3.351400000000185e-05, 3.4055000000001584e-05, 3.455599999999809e-05, 3.4055000000001584e-05, 3.3554999999997615e-05, 3.355600000000056e-05, 3.405600000000106e-05, 3.355600000000056e-05, 3.4582999999997754e-05, 3.354200000000099e-05, 3.352800000000142e-05, 3.348699999999871e-05, 3.402800000000192e-05, 3.354200000000099e-05, 3.405600000000106e-05, 3.4026999999998975e-05, 3.351399999999838e-05, 3.405600000000106e-05, 3.3554999999997615e-05, 3.4040999999998545e-05, 3.4041000000002014e-05, 3.3624999999998934e-05, 3.3555000000001084e-05, 3.3555000000001084e-05]</msg>
<status status="PASS" starttime="20201115 23:02:13.661" endtime="20201115 23:02:13.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.656" endtime="20201115 23:02:13.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.665" endtime="20201115 23:02:13.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.669" endtime="20201115 23:02:13.688"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.667" endtime="20201115 23:02:13.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.664" endtime="20201115 23:02:13.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.295" endtime="20201115 23:02:13.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.293" endtime="20201115 23:02:13.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.292" endtime="20201115 23:02:13.690"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.693" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.701" endtime="20201115 23:02:13.720"></status>
</kw>
<msg timestamp="20201115 23:02:13.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.700" endtime="20201115 23:02:13.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.721" endtime="20201115 23:02:13.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.724" endtime="20201115 23:02:13.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.697" endtime="20201115 23:02:13.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.695" endtime="20201115 23:02:13.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.733" endtime="20201115 23:02:14.021"></status>
</kw>
<msg timestamp="20201115 23:02:14.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022529, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:13.732" endtime="20201115 23:02:14.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022529, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:14.025" endtime="20201115 23:02:14.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.034" endtime="20201115 23:02:14.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.729" endtime="20201115 23:02:14.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.727" endtime="20201115 23:02:14.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.041" level="INFO">${RESULT} = [{'time': 0.022580819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.181899999999809e-05, 'source_diff': 5.181899999999809e-05}, {'time': 0.022637819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:14.038" endtime="20201115 23:02:14.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.055" level="INFO">${ACCURACY} = {'diff': [5.181899999999809e-05, 5.211100000000052e-05, 5.122200000000007e-05, 5.20409999999992e-05, 5.143000000000161e-05, 5.124999999999921e-05, 5.211100000000052e-05, 5.187499999999984e-05, 5.13190...</msg>
<status status="PASS" starttime="20201115 23:02:14.042" endtime="20201115 23:02:14.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.059" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.058" endtime="20201115 23:02:14.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.062" level="INFO">VALUE: [5.181899999999809e-05, 5.211100000000052e-05, 5.122200000000007e-05, 5.20409999999992e-05, 5.143000000000161e-05, 5.124999999999921e-05, 5.211100000000052e-05, 5.187499999999984e-05, 5.131900000000106e-05, 5.123599999999964e-05, 5.182000000000103e-05, 5.215299999999923e-05, 5.174999999999971e-05, 5.125000000000268e-05, 5.20279999999991e-05, 5.187499999999984e-05, 5.181999999999756e-05, 5.18340000000006e-05, 5.163899999999916e-05, 5.212500000000009e-05, 5.222200000000107e-05, 5.112499999999909e-05, 5.187499999999984e-05, 5.1665999999998824e-05, 5.174999999999971e-05, 5.2193999999998464e-05, 5.147200000000032e-05, 5.219400000000193e-05, 5.158300000000088e-05, 5.1916000000002543e-05, 5.137500000000281e-05, 5.219499999999794e-05, 5.123599999999964e-05, 5.21530000000027e-05, 5.137500000000281e-05, 5.1457999999997284e-05, 5.173600000000014e-05, 5.16669999999983e-05, 5.132000000000053e-05, 5.148599999999989e-05, 5.124999999999921e-05, 5.218100000000184e-05, 5.168099999999787e-05, 5.2207999999998034e-05, 5.141700000000152e-05, 5.127700000000235e-05, 5.156900000000131e-05, 5.137499999999934e-05, 5.2151999999999754e-05, 5.147200000000032e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.061" endtime="20201115 23:02:14.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.056" endtime="20201115 23:02:14.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.065" endtime="20201115 23:02:14.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.069" endtime="20201115 23:02:14.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.067" endtime="20201115 23:02:14.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.063" endtime="20201115 23:02:14.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.693" endtime="20201115 23:02:14.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.692" endtime="20201115 23:02:14.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.691" endtime="20201115 23:02:14.090"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.093" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.101" endtime="20201115 23:02:14.119"></status>
</kw>
<msg timestamp="20201115 23:02:14.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.099" endtime="20201115 23:02:14.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.120" endtime="20201115 23:02:14.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.123" endtime="20201115 23:02:14.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.097" endtime="20201115 23:02:14.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.095" endtime="20201115 23:02:14.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.133" endtime="20201115 23:02:14.419"></status>
</kw>
<msg timestamp="20201115 23:02:14.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.131" endtime="20201115 23:02:14.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.424" endtime="20201115 23:02:14.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.432" endtime="20201115 23:02:14.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.128" endtime="20201115 23:02:14.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.126" endtime="20201115 23:02:14.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.439" level="INFO">${RESULT} = [{'time': 0.022606819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2902000000000504e-05, 'source_diff': 5.2902000000000504e-05}, {'time': 0.022663819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:14.436" endtime="20201115 23:02:14.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.454" level="INFO">${ACCURACY} = {'diff': [5.2902000000000504e-05, 5.233300000000163e-05, 5.2429999999999144e-05, 5.251300000000056e-05, 5.243099999999862e-05, 5.234800000000067e-05, 5.2943999999999214e-05, 5.28470000000017e-05, 5.23...</msg>
<status status="PASS" starttime="20201115 23:02:14.440" endtime="20201115 23:02:14.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.459" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.458" endtime="20201115 23:02:14.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.462" level="INFO">VALUE: [5.2902000000000504e-05, 5.233300000000163e-05, 5.2429999999999144e-05, 5.251300000000056e-05, 5.243099999999862e-05, 5.234800000000067e-05, 5.2943999999999214e-05, 5.28470000000017e-05, 5.233300000000163e-05, 5.255499999999927e-05, 5.3166000000000324e-05, 5.284699999999823e-05, 5.2665999999999824e-05, 5.261099999999755e-05, 5.304199999999967e-05, 5.2485999999997424e-05, 5.244500000000166e-05, 5.318099999999937e-05, 5.300000000000096e-05, 5.318099999999937e-05, 5.255599999999874e-05, 5.262500000000059e-05, 5.255600000000221e-05, 5.2999999999997494e-05, 5.255600000000221e-05, 5.312500000000109e-05, 5.2138000000000184e-05, 5.2693999999998964e-05, 5.250000000000046e-05, 5.3152000000000754e-05, 5.254199999999917e-05, 5.238899999999991e-05, 5.3166000000000324e-05, 5.234699999999773e-05, 5.3179999999999894e-05, 5.2708000000002e-05, 5.244400000000218e-05, 5.223600000000064e-05, 5.238899999999991e-05, 5.225000000000021e-05, 5.287500000000084e-05, 5.286100000000127e-05, 5.231999999999806e-05, 5.244499999999819e-05, 5.23470000000012e-05, 5.269499999999844e-05, 5.272200000000157e-05, 5.291699999999955e-05, 5.318099999999937e-05, 5.280599999999899e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.460" endtime="20201115 23:02:14.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.455" endtime="20201115 23:02:14.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.465" endtime="20201115 23:02:14.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.468" endtime="20201115 23:02:14.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.467" endtime="20201115 23:02:14.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.463" endtime="20201115 23:02:14.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.093" endtime="20201115 23:02:14.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.091" endtime="20201115 23:02:14.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.090" endtime="20201115 23:02:14.490"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.492" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.500" endtime="20201115 23:02:14.519"></status>
</kw>
<msg timestamp="20201115 23:02:14.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.499" endtime="20201115 23:02:14.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.521" endtime="20201115 23:02:14.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.524" endtime="20201115 23:02:14.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.496" endtime="20201115 23:02:14.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.494" endtime="20201115 23:02:14.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.533" endtime="20201115 23:02:14.820"></status>
</kw>
<msg timestamp="20201115 23:02:14.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022611417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.531" endtime="20201115 23:02:14.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022611417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.824" endtime="20201115 23:02:14.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.833" endtime="20201115 23:02:14.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.529" endtime="20201115 23:02:14.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.527" endtime="20201115 23:02:14.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.840" level="INFO">${RESULT} = [{'time': 0.022611417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.365300000000073e-05, 'source_diff': 5.365300000000073e-05}, {'time': 0.022668361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:14.836" endtime="20201115 23:02:14.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.853" level="INFO">${ACCURACY} = {'diff': [5.365300000000073e-05, 5.362500000000159e-05, 5.348600000000189e-05, 5.36670000000003e-05, 5.3735999999998674e-05, 5.404200000000067e-05, 5.3499999999997994e-05, 5.36670000000003e-05, 5.4194...</msg>
<status status="PASS" starttime="20201115 23:02:14.841" endtime="20201115 23:02:14.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.858" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.857" endtime="20201115 23:02:14.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.860" level="INFO">VALUE: [5.365300000000073e-05, 5.362500000000159e-05, 5.348600000000189e-05, 5.36670000000003e-05, 5.3735999999998674e-05, 5.404200000000067e-05, 5.3499999999997994e-05, 5.36670000000003e-05, 5.419499999999994e-05, 5.3957999999999784e-05, 5.419499999999994e-05, 5.365299999999726e-05, 5.336100000000177e-05, 5.326299999999784e-05, 5.384800000000217e-05, 5.331899999999959e-05, 5.36670000000003e-05, 5.3749999999998244e-05, 5.331899999999959e-05, 5.4151999999998285e-05, 5.369499999999944e-05, 5.373600000000214e-05, 5.3721999999999104e-05, 5.329100000000045e-05, 5.356899999999984e-05, 5.404200000000067e-05, 5.330599999999949e-05, 5.36670000000003e-05, 5.3693999999999964e-05, 5.368099999999987e-05, 5.369499999999944e-05, 5.395899999999926e-05, 5.406999999999981e-05, 5.400000000000196e-05, 5.366699999999683e-05, 5.405600000000024e-05, 5.387499999999837e-05, 5.369499999999944e-05, 5.393100000000012e-05, 5.341700000000005e-05, 5.405600000000024e-05, 5.3443999999999714e-05, 5.379100000000095e-05, 5.398600000000239e-05, 5.387500000000184e-05, 5.337500000000134e-05, 5.3443999999999714e-05, 5.325000000000121e-05, 5.3235999999998174e-05, 5.315300000000023e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.859" endtime="20201115 23:02:14.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.854" endtime="20201115 23:02:14.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.864" endtime="20201115 23:02:14.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.867" endtime="20201115 23:02:14.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.866" endtime="20201115 23:02:14.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.862" endtime="20201115 23:02:14.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.493" endtime="20201115 23:02:14.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.491" endtime="20201115 23:02:14.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.490" endtime="20201115 23:02:14.889"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.891" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.900" endtime="20201115 23:02:14.918"></status>
</kw>
<msg timestamp="20201115 23:02:14.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.898" endtime="20201115 23:02:14.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.920" endtime="20201115 23:02:14.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.922" endtime="20201115 23:02:14.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.895" endtime="20201115 23:02:14.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.893" endtime="20201115 23:02:14.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.932" endtime="20201115 23:02:15.219"></status>
</kw>
<msg timestamp="20201115 23:02:15.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023277444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023332486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.930" endtime="20201115 23:02:15.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023277444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023332486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.224" endtime="20201115 23:02:15.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.232" endtime="20201115 23:02:15.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.927" endtime="20201115 23:02:15.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.925" endtime="20201115 23:02:15.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.239" level="INFO">${RESULT} = [{'time': 0.023332486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5041999999998203e-05, 'source_diff': 5.5041999999998203e-05}, {'time': 0.023389472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:15.236" endtime="20201115 23:02:15.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.253" level="INFO">${ACCURACY} = {'diff': [5.5041999999998203e-05, 5.48609999999998e-05, 5.5179999999998425e-05, 5.4929999999998175e-05, 5.440300000000148e-05, 5.462499999999912e-05, 5.433399999999963e-05, 5.491700000000155e-05, 5.47...</msg>
<status status="PASS" starttime="20201115 23:02:15.240" endtime="20201115 23:02:15.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.257" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.256" endtime="20201115 23:02:15.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.260" level="INFO">VALUE: [5.5041999999998203e-05, 5.48609999999998e-05, 5.5179999999998425e-05, 5.4929999999998175e-05, 5.440300000000148e-05, 5.462499999999912e-05, 5.433399999999963e-05, 5.491700000000155e-05, 5.4749999999999244e-05, 5.4999999999999494e-05, 5.4680000000001394e-05, 5.4221999999999604e-05, 5.480600000000099e-05, 5.5165999999998855e-05, 5.5222000000000604e-05, 5.4429999999997675e-05, 5.480600000000099e-05, 5.488900000000241e-05, 5.479099999999848e-05, 5.4291999999997453e-05, 5.506900000000134e-05, 5.4972000000000354e-05, 5.4915999999998605e-05, 5.475000000000271e-05, 5.469500000000044e-05, 5.431900000000059e-05, 5.45410000000017e-05, 5.426400000000178e-05, 5.487499999999937e-05, 5.5236000000000174e-05, 5.477800000000185e-05, 5.513900000000266e-05, 5.482000000000056e-05, 5.480599999999752e-05, 5.46670000000013e-05, 5.480599999999752e-05, 5.441700000000105e-05, 5.491699999999808e-05, 5.4763999999998814e-05, 5.4791999999997953e-05, 5.450000000000246e-05, 5.4985999999999924e-05, 5.4735999999999674e-05, 5.4944000000001214e-05, 5.4679999999997925e-05, 5.5194000000001464e-05, 5.412500000000209e-05, 5.4513999999998564e-05, 5.508299999999744e-05, 5.487499999999937e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.259" endtime="20201115 23:02:15.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.254" endtime="20201115 23:02:15.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.263" endtime="20201115 23:02:15.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.267" endtime="20201115 23:02:15.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.265" endtime="20201115 23:02:15.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.262" endtime="20201115 23:02:15.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.892" endtime="20201115 23:02:15.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.890" endtime="20201115 23:02:15.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.889" endtime="20201115 23:02:15.294"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.297" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.305" endtime="20201115 23:02:15.323"></status>
</kw>
<msg timestamp="20201115 23:02:15.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.303" endtime="20201115 23:02:15.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.325" endtime="20201115 23:02:15.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.327" endtime="20201115 23:02:15.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.301" endtime="20201115 23:02:15.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.299" endtime="20201115 23:02:15.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.337" endtime="20201115 23:02:15.624"></status>
</kw>
<msg timestamp="20201115 23:02:15.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028665125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028720611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.335" endtime="20201115 23:02:15.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028665125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028720611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.628" endtime="20201115 23:02:15.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.637" endtime="20201115 23:02:15.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.332" endtime="20201115 23:02:15.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.331" endtime="20201115 23:02:15.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.644" level="INFO">${RESULT} = [{'time': 0.028720611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5486000000000424e-05, 'source_diff': 5.5486000000000424e-05}, {'time': 0.028779597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:15.640" endtime="20201115 23:02:15.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.657" level="INFO">${ACCURACY} = {'diff': [5.5486000000000424e-05, 5.5986000000000924e-05, 5.590299999999951e-05, 5.6179999999999425e-05, 5.609700000000148e-05, 5.537499999999987e-05, 5.5736000000000674e-05, 5.5791999999998954e-05, 5...</msg>
<status status="PASS" starttime="20201115 23:02:15.645" endtime="20201115 23:02:15.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.662" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.661" endtime="20201115 23:02:15.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.664" level="INFO">VALUE: [5.5486000000000424e-05, 5.5986000000000924e-05, 5.590299999999951e-05, 5.6179999999999425e-05, 5.609700000000148e-05, 5.537499999999987e-05, 5.5736000000000674e-05, 5.5791999999998954e-05, 5.554200000000217e-05, 5.5735999999997204e-05, 5.612500000000062e-05, 5.582000000000156e-05, 5.6055999999998773e-05, 5.591699999999908e-05, 5.6041999999999204e-05, 5.608300000000191e-05, 5.593099999999865e-05, 5.531900000000159e-05, 5.616699999999933e-05, 5.588899999999994e-05, 5.580499999999905e-05, 5.538900000000291e-05, 5.530499999999855e-05, 5.5930000000002644e-05, 5.562500000000012e-05, 5.5471999999997385e-05, 5.60549999999993e-05, 5.53610000000003e-05, 5.605500000000277e-05, 5.6000000000000494e-05, 5.554200000000217e-05, 5.5458000000001284e-05, 5.5749999999996774e-05, 5.593099999999865e-05, 5.569500000000144e-05, 5.5805999999998523e-05, 5.558399999999741e-05, 5.604200000000267e-05, 5.5513999999999564e-05, 5.582000000000156e-05, 5.523699999999965e-05, 5.5971999999997885e-05, 5.5750000000000244e-05, 5.58610000000008e-05, 5.581899999999862e-05, 5.527699999999941e-05, 5.606899999999887e-05, 5.5665999999995885e-05, 5.5750000000000244e-05, 5.556899999999837e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.663" endtime="20201115 23:02:15.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.658" endtime="20201115 23:02:15.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.668" endtime="20201115 23:02:15.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.672" endtime="20201115 23:02:15.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.670" endtime="20201115 23:02:15.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.666" endtime="20201115 23:02:15.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.297" endtime="20201115 23:02:15.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.295" endtime="20201115 23:02:15.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.294" endtime="20201115 23:02:15.693"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.695" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.704" endtime="20201115 23:02:15.722"></status>
</kw>
<msg timestamp="20201115 23:02:15.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.702" endtime="20201115 23:02:15.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.724" endtime="20201115 23:02:15.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.726" endtime="20201115 23:02:15.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.700" endtime="20201115 23:02:15.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.698" endtime="20201115 23:02:15.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.736" endtime="20201115 23:02:16.023"></status>
</kw>
<msg timestamp="20201115 23:02:16.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.734" endtime="20201115 23:02:16.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.028" endtime="20201115 23:02:16.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.036" endtime="20201115 23:02:16.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.731" endtime="20201115 23:02:16.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.730" endtime="20201115 23:02:16.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.043" level="INFO">${RESULT} = [{'time': 0.022616986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.713899999999772e-05, 'source_diff': 5.713899999999772e-05}, {'time': 0.022676, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:16.039" endtime="20201115 23:02:16.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.058" level="INFO">${ACCURACY} = {'diff': [5.713899999999772e-05, 5.630600000000249e-05, 5.6791999999999954e-05, 5.638900000000044e-05, 5.7000000000001494e-05, 5.63610000000013e-05, 5.694500000000269e-05, 5.7055999999999774e-05, 5.64...</msg>
<status status="PASS" starttime="20201115 23:02:16.044" endtime="20201115 23:02:16.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.063" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.062" endtime="20201115 23:02:16.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.066" level="INFO">VALUE: [5.713899999999772e-05, 5.630600000000249e-05, 5.6791999999999954e-05, 5.638900000000044e-05, 5.7000000000001494e-05, 5.63610000000013e-05, 5.694500000000269e-05, 5.7055999999999774e-05, 5.6444000000002714e-05, 5.6999999999998024e-05, 5.662500000000112e-05, 5.68749999999979e-05, 5.672300000000158e-05, 5.6693999999999495e-05, 5.622300000000108e-05, 5.658299999999894e-05, 5.634700000000173e-05, 5.6971999999998885e-05, 5.6943999999999745e-05, 5.6235999999997704e-05, 5.7180000000000425e-05, 5.6778000000000384e-05, 5.6236000000001174e-05, 5.688900000000094e-05, 5.6778000000000384e-05, 5.716700000000033e-05, 5.636099999999783e-05, 5.658400000000188e-05, 5.605600000000224e-05, 5.669499999999897e-05, 5.6735999999998205e-05, 5.643100000000262e-05, 5.6764000000000814e-05, 5.68619999999978e-05, 5.676299999999787e-05, 5.636099999999783e-05, 5.6930000000000175e-05, 5.6236000000001174e-05, 5.6485999999997955e-05, 5.6693999999999495e-05, 5.652699999999719e-05, 5.6971999999998885e-05, 5.6763999999997344e-05, 5.6541999999999704e-05, 5.662500000000112e-05, 5.6250000000000744e-05, 5.6500000000000994e-05, 5.691700000000008e-05, 5.6528000000000134e-05, 5.6236000000001174e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.064" endtime="20201115 23:02:16.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.059" endtime="20201115 23:02:16.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.069" endtime="20201115 23:02:16.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.073" endtime="20201115 23:02:16.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.071" endtime="20201115 23:02:16.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.068" endtime="20201115 23:02:16.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.696" endtime="20201115 23:02:16.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.694" endtime="20201115 23:02:16.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.693" endtime="20201115 23:02:16.094"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.097" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.105" endtime="20201115 23:02:16.125"></status>
</kw>
<msg timestamp="20201115 23:02:16.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.103" endtime="20201115 23:02:16.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.127" endtime="20201115 23:02:16.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.129" endtime="20201115 23:02:16.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.101" endtime="20201115 23:02:16.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.099" endtime="20201115 23:02:16.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.139" endtime="20201115 23:02:16.425"></status>
</kw>
<msg timestamp="20201115 23:02:16.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.137" endtime="20201115 23:02:16.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.429" endtime="20201115 23:02:16.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.437" endtime="20201115 23:02:16.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.134" endtime="20201115 23:02:16.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.133" endtime="20201115 23:02:16.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.444" level="INFO">${RESULT} = [{'time': 0.022536153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7292000000000454e-05, 'source_diff': 5.7292000000000454e-05}, {'time': 0.022599153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:16.441" endtime="20201115 23:02:16.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.458" level="INFO">${ACCURACY} = {'diff': [5.7292000000000454e-05, 5.736099999999883e-05, 5.7666000000001355e-05, 5.786099999999933e-05, 5.8070000000000344e-05, 5.762499999999865e-05, 5.8041999999997734e-05, 5.737500000000187e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:02:16.446" endtime="20201115 23:02:16.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.463" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.462" endtime="20201115 23:02:16.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.466" level="INFO">VALUE: [5.7292000000000454e-05, 5.736099999999883e-05, 5.7666000000001355e-05, 5.786099999999933e-05, 5.8070000000000344e-05, 5.762499999999865e-05, 5.8041999999997734e-05, 5.737500000000187e-05, 5.709799999999848e-05, 5.731900000000012e-05, 5.708300000000291e-05, 5.754100000000123e-05, 5.75550000000008e-05, 5.7764000000001814e-05, 5.7999999999999025e-05, 5.734799999999873e-05, 5.8042000000001204e-05, 5.7735999999999205e-05, 5.809700000000001e-05, 5.816699999999786e-05, 5.759699999999951e-05, 5.7985999999999455e-05, 5.815299999999829e-05, 5.7556000000000274e-05, 5.732000000000306e-05, 5.7735999999999205e-05, 5.8056000000000774e-05, 5.770899999999954e-05, 5.736099999999883e-05, 5.8083999999999913e-05, 5.7250000000001744e-05, 5.7764000000001814e-05, 5.7485999999998955e-05, 5.7500000000001994e-05, 5.7680000000000925e-05, 5.7665999999997886e-05, 5.7514000000001564e-05, 5.8208000000000565e-05, 5.7735999999999205e-05, 5.7485999999998955e-05, 5.7735999999999205e-05, 5.816700000000133e-05, 5.7235999999998705e-05, 5.78610000000028e-05, 5.7333999999999163e-05, 5.711099999999858e-05, 5.8222000000000135e-05, 5.793099999999718e-05, 5.776300000000234e-05, 5.78749999999989e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.464" endtime="20201115 23:02:16.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.459" endtime="20201115 23:02:16.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.469" endtime="20201115 23:02:16.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.472" endtime="20201115 23:02:16.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.471" endtime="20201115 23:02:16.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.467" endtime="20201115 23:02:16.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.097" endtime="20201115 23:02:16.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.095" endtime="20201115 23:02:16.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.095" endtime="20201115 23:02:16.494"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.496" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.505" endtime="20201115 23:02:16.523"></status>
</kw>
<msg timestamp="20201115 23:02:16.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.503" endtime="20201115 23:02:16.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.524" endtime="20201115 23:02:16.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.527" endtime="20201115 23:02:16.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.500" endtime="20201115 23:02:16.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.498" endtime="20201115 23:02:16.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.536" endtime="20201115 23:02:16.823"></status>
</kw>
<msg timestamp="20201115 23:02:16.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022877875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.535" endtime="20201115 23:02:16.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022819347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022877875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.827" endtime="20201115 23:02:16.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.836" endtime="20201115 23:02:16.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.532" endtime="20201115 23:02:16.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.530" endtime="20201115 23:02:16.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.843" level="INFO">${RESULT} = [{'time': 0.022877875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8527999999998664e-05, 'source_diff': 5.8527999999998664e-05}, {'time': 0.022939875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:16.839" endtime="20201115 23:02:16.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.856" level="INFO">${ACCURACY} = {'diff': [5.8527999999998664e-05, 5.886099999999686e-05, 5.891700000000208e-05, 5.9070000000001344e-05, 5.9013999999999595e-05, 5.920899999999757e-05, 5.812499999999915e-05, 5.8235999999999705e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:02:16.844" endtime="20201115 23:02:16.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.861" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.860" endtime="20201115 23:02:16.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.864" level="INFO">VALUE: [5.8527999999998664e-05, 5.886099999999686e-05, 5.891700000000208e-05, 5.9070000000001344e-05, 5.9013999999999595e-05, 5.920899999999757e-05, 5.812499999999915e-05, 5.8235999999999705e-05, 5.8556000000001274e-05, 5.843099999999768e-05, 5.898699999999993e-05, 5.8679999999998456e-05, 5.8430000000001675e-05, 5.8680000000001925e-05, 5.9179999999998956e-05, 5.8485999999999955e-05, 5.8429999999998206e-05, 5.880499999999858e-05, 5.8679999999998456e-05, 5.8542000000001704e-05, 5.85550000000018e-05, 5.8542000000001704e-05, 5.8943999999998276e-05, 5.8749999999999775e-05, 5.8320000000000594e-05, 5.866700000000183e-05, 5.9000000000000025e-05, 5.8334000000000163e-05, 5.893100000000165e-05, 5.866699999999836e-05, 5.90689999999984e-05, 5.9000000000000025e-05, 5.812499999999915e-05, 5.8429999999998206e-05, 5.8763999999999345e-05, 5.8708000000001065e-05, 5.830500000000155e-05, 5.811099999999958e-05, 5.884699999999729e-05, 5.9013999999999595e-05, 5.909699999999754e-05, 5.9098000000000483e-05, 5.9055999999998304e-05, 5.840300000000201e-05, 5.9000000000000025e-05, 5.8569999999997374e-05, 5.886100000000033e-05, 5.8820000000001094e-05, 5.8499999999999525e-05, 5.865299999999879e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.862" endtime="20201115 23:02:16.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.857" endtime="20201115 23:02:16.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.867" endtime="20201115 23:02:16.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.871" endtime="20201115 23:02:16.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.869" endtime="20201115 23:02:16.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.865" endtime="20201115 23:02:16.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.497" endtime="20201115 23:02:16.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.495" endtime="20201115 23:02:16.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.494" endtime="20201115 23:02:16.892"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.894" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.903" endtime="20201115 23:02:16.922"></status>
</kw>
<msg timestamp="20201115 23:02:16.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.902" endtime="20201115 23:02:16.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.924" endtime="20201115 23:02:16.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.926" endtime="20201115 23:02:16.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.899" endtime="20201115 23:02:16.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.896" endtime="20201115 23:02:16.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.936" endtime="20201115 23:02:17.223"></status>
</kw>
<msg timestamp="20201115 23:02:17.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023458528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023518347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.934" endtime="20201115 23:02:17.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023458528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023518347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.227" endtime="20201115 23:02:17.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.236" endtime="20201115 23:02:17.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.931" endtime="20201115 23:02:17.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.929" endtime="20201115 23:02:17.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.243" level="INFO">${RESULT} = [{'time': 0.023518347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.981899999999915e-05, 'source_diff': 5.981899999999915e-05}, {'time': 0.023580347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:17.239" endtime="20201115 23:02:17.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.257" level="INFO">${ACCURACY} = {'diff': [5.981899999999915e-05, 5.984700000000176e-05, 5.983299999999872e-05, 5.968099999999893e-05, 5.9736000000001205e-05, 5.9263999999999845e-05, 5.96810000000024e-05, 6.011099999999811e-05, 5.994...</msg>
<status status="PASS" starttime="20201115 23:02:17.244" endtime="20201115 23:02:17.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.261" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.260" endtime="20201115 23:02:17.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.264" level="INFO">VALUE: [5.981899999999915e-05, 5.984700000000176e-05, 5.983299999999872e-05, 5.968099999999893e-05, 5.9736000000001205e-05, 5.9263999999999845e-05, 5.96810000000024e-05, 6.011099999999811e-05, 5.994499999999875e-05, 5.993100000000265e-05, 5.9250000000000275e-05, 5.941699999999911e-05, 5.961100000000108e-05, 5.9541999999999234e-05, 6.0041999999999734e-05, 6.0137999999997777e-05, 5.9250000000000275e-05, 6.004100000000026e-05, 6.0000000000001025e-05, 5.930500000000255e-05, 6.0193999999999526e-05, 5.955499999999933e-05, 5.959699999999804e-05, 5.9236000000000705e-05, 5.9471999999997915e-05, 5.9444000000002245e-05, 5.9348000000000734e-05, 5.936100000000083e-05, 5.9472000000001385e-05, 5.990300000000004e-05, 5.9722000000001635e-05, 5.993099999999918e-05, 6.012500000000115e-05, 5.987499999999743e-05, 5.9708000000002065e-05, 5.9249999999996805e-05, 5.972300000000111e-05, 5.9443999999998776e-05, 5.966699999999936e-05, 5.9750000000000775e-05, 5.968099999999893e-05, 5.911099999999711e-05, 6.005499999999983e-05, 5.986100000000133e-05, 5.9485999999997485e-05, 5.9750000000000775e-05, 5.9249999999996805e-05, 5.984699999999829e-05, 6.016699999999986e-05, 5.941699999999911e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.262" endtime="20201115 23:02:17.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.258" endtime="20201115 23:02:17.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.267" endtime="20201115 23:02:17.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.271" endtime="20201115 23:02:17.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.269" endtime="20201115 23:02:17.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.265" endtime="20201115 23:02:17.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.895" endtime="20201115 23:02:17.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.893" endtime="20201115 23:02:17.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.892" endtime="20201115 23:02:17.292"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.294" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.303" endtime="20201115 23:02:17.324"></status>
</kw>
<msg timestamp="20201115 23:02:17.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.301" endtime="20201115 23:02:17.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.325" endtime="20201115 23:02:17.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.328" endtime="20201115 23:02:17.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.299" endtime="20201115 23:02:17.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.296" endtime="20201115 23:02:17.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.337" endtime="20201115 23:02:17.623"></status>
</kw>
<msg timestamp="20201115 23:02:17.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.336" endtime="20201115 23:02:17.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.628" endtime="20201115 23:02:17.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.636" endtime="20201115 23:02:17.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.333" endtime="20201115 23:02:17.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.331" endtime="20201115 23:02:17.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.643" level="INFO">${RESULT} = [{'time': 0.022654556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0542000000000235e-05, 'source_diff': 6.0542000000000235e-05}, {'time': 0.022720583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:17.640" endtime="20201115 23:02:17.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.658" level="INFO">${ACCURACY} = {'diff': [6.0542000000000235e-05, 6.0513999999997625e-05, 6.0735999999998735e-05, 6.0694000000000026e-05, 6.0430000000000206e-05, 6.080500000000058e-05, 6.030500000000008e-05, 6.086100000000233e-05, 6...</msg>
<status status="PASS" starttime="20201115 23:02:17.644" endtime="20201115 23:02:17.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.663" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.662" endtime="20201115 23:02:17.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.666" level="INFO">VALUE: [6.0542000000000235e-05, 6.0513999999997625e-05, 6.0735999999998735e-05, 6.0694000000000026e-05, 6.0430000000000206e-05, 6.080500000000058e-05, 6.030500000000008e-05, 6.086100000000233e-05, 6.059699999999904e-05, 6.0514000000001095e-05, 6.059700000000251e-05, 6.0471999999998916e-05, 6.0305999999999554e-05, 6.062499999999818e-05, 6.091700000000061e-05, 6.0806000000000054e-05, 6.0792000000000485e-05, 6.095899999999932e-05, 6.0084000000001914e-05, 6.0443999999999776e-05, 6.029100000000051e-05, 6.027700000000094e-05, 6.080500000000058e-05, 6.0500000000001525e-05, 6.036099999999836e-05, 6.0472000000002385e-05, 6.011099999999811e-05, 6.0916000000001136e-05, 6.091700000000061e-05, 6.031899999999965e-05, 6.093100000000018e-05, 6.119399999999706e-05, 6.111100000000258e-05, 6.116699999999739e-05, 6.041700000000011e-05, 6.0513999999997625e-05, 6.040300000000054e-05, 6.118100000000043e-05, 6.0736000000002205e-05, 6.10560000000003e-05, 6.0749999999998305e-05, 6.023699999999771e-05, 6.031899999999965e-05, 6.0542000000000235e-05, 6.087499999999843e-05, 6.0513999999997625e-05, 6.1000000000002025e-05, 6.084699999999929e-05, 6.030500000000008e-05, 6.0930000000000706e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.664" endtime="20201115 23:02:17.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.659" endtime="20201115 23:02:17.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.669" endtime="20201115 23:02:17.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.673" endtime="20201115 23:02:17.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.671" endtime="20201115 23:02:17.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.667" endtime="20201115 23:02:17.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.295" endtime="20201115 23:02:17.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.293" endtime="20201115 23:02:17.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.292" endtime="20201115 23:02:17.694"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.696" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.705" endtime="20201115 23:02:17.724"></status>
</kw>
<msg timestamp="20201115 23:02:17.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.704" endtime="20201115 23:02:17.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.725" endtime="20201115 23:02:17.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.728" endtime="20201115 23:02:17.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.701" endtime="20201115 23:02:17.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.698" endtime="20201115 23:02:17.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.737" endtime="20201115 23:02:18.023"></status>
</kw>
<msg timestamp="20201115 23:02:18.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022969792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023031792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.736" endtime="20201115 23:02:18.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022969792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023031792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.027" endtime="20201115 23:02:18.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.035" endtime="20201115 23:02:18.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.733" endtime="20201115 23:02:18.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.731" endtime="20201115 23:02:18.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.042" level="INFO">${RESULT} = [{'time': 0.023031792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.199999999999956e-05, 'source_diff': 6.199999999999956e-05}, {'time': 0.023098792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:18.039" endtime="20201115 23:02:18.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.056" level="INFO">${ACCURACY} = {'diff': [6.199999999999956e-05, 6.129200000000098e-05, 6.136100000000283e-05, 6.20690000000014e-05, 6.205499999999836e-05, 6.186199999999933e-05, 6.17080000000006e-05, 6.22080000000011e-05, 6.1624999...</msg>
<status status="PASS" starttime="20201115 23:02:18.043" endtime="20201115 23:02:18.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.061" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.060" endtime="20201115 23:02:18.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.063" level="INFO">VALUE: [6.199999999999956e-05, 6.129200000000098e-05, 6.136100000000283e-05, 6.20690000000014e-05, 6.205499999999836e-05, 6.186199999999933e-05, 6.17080000000006e-05, 6.22080000000011e-05, 6.162499999999918e-05, 6.181899999999768e-05, 6.15690000000009e-05, 6.198599999999999e-05, 6.122199999999967e-05, 6.15560000000008e-05, 6.109699999999954e-05, 6.212499999999968e-05, 6.16950000000005e-05, 6.191700000000161e-05, 6.180599999999759e-05, 6.136099999999936e-05, 6.152800000000166e-05, 6.136099999999936e-05, 6.136199999999883e-05, 6.18340000000002e-05, 6.180499999999811e-05, 6.150000000000252e-05, 6.218000000000196e-05, 6.141599999999817e-05, 6.173599999999974e-05, 6.169400000000103e-05, 6.17499999999993e-05, 6.20140000000026e-05, 6.138900000000197e-05, 6.216700000000186e-05, 6.167999999999799e-05, 6.209700000000054e-05, 6.166699999999789e-05, 6.15560000000008e-05, 6.130600000000055e-05, 6.173599999999974e-05, 6.17499999999993e-05, 6.113899999999825e-05, 6.204200000000173e-05, 6.168099999999746e-05, 6.194400000000128e-05, 6.129199999999752e-05, 6.172299999999964e-05, 6.219400000000153e-05, 6.184700000000029e-05, 6.159700000000004e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.062" endtime="20201115 23:02:18.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.057" endtime="20201115 23:02:18.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.066" endtime="20201115 23:02:18.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.070" endtime="20201115 23:02:18.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.068" endtime="20201115 23:02:18.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.065" endtime="20201115 23:02:18.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.697" endtime="20201115 23:02:18.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.695" endtime="20201115 23:02:18.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.694" endtime="20201115 23:02:18.092"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.094" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.102" endtime="20201115 23:02:18.122"></status>
</kw>
<msg timestamp="20201115 23:02:18.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.101" endtime="20201115 23:02:18.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.123" endtime="20201115 23:02:18.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.126" endtime="20201115 23:02:18.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.098" endtime="20201115 23:02:18.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.096" endtime="20201115 23:02:18.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.135" endtime="20201115 23:02:18.421"></status>
</kw>
<msg timestamp="20201115 23:02:18.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.133" endtime="20201115 23:02:18.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.426" endtime="20201115 23:02:18.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.434" endtime="20201115 23:02:18.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.131" endtime="20201115 23:02:18.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.129" endtime="20201115 23:02:18.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.441" level="INFO">${RESULT} = [{'time': 0.022576347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.272200000000117e-05, 'source_diff': 6.272200000000117e-05}, {'time': 0.022644333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:18.437" endtime="20201115 23:02:18.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.455" level="INFO">${ACCURACY} = {'diff': [6.272200000000117e-05, 6.234700000000079e-05, 6.242999999999874e-05, 6.30829999999985e-05, 6.273600000000074e-05, 6.2889e-05, 6.30560000000023e-05, 6.247200000000092e-05, 6.298600000000099e-...</msg>
<status status="PASS" starttime="20201115 23:02:18.442" endtime="20201115 23:02:18.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.459" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.458" endtime="20201115 23:02:18.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.462" level="INFO">VALUE: [6.272200000000117e-05, 6.234700000000079e-05, 6.242999999999874e-05, 6.30829999999985e-05, 6.273600000000074e-05, 6.2889e-05, 6.30560000000023e-05, 6.247200000000092e-05, 6.298600000000099e-05, 6.237499999999993e-05, 6.237499999999993e-05, 6.284800000000076e-05, 6.243099999999821e-05, 6.248599999999702e-05, 6.262500000000018e-05, 6.293099999999871e-05, 6.255499999999886e-05, 6.297200000000142e-05, 6.237499999999993e-05, 6.272200000000117e-05, 6.286100000000086e-05, 6.298600000000099e-05, 6.211100000000011e-05, 6.30560000000023e-05, 6.277800000000291e-05, 6.305599999999884e-05, 6.27500000000003e-05, 6.318099999999896e-05, 6.230600000000155e-05, 6.222200000000067e-05, 6.262500000000018e-05, 6.237499999999993e-05, 6.251399999999963e-05, 6.318100000000243e-05, 6.287500000000043e-05, 6.207000000000087e-05, 6.209700000000054e-05, 6.286100000000086e-05, 6.300000000000056e-05, 6.211100000000011e-05, 6.286099999999739e-05, 6.299999999999709e-05, 6.269399999999856e-05, 6.279100000000301e-05, 6.27080000000016e-05, 6.262500000000018e-05, 6.291700000000261e-05, 6.23889999999995e-05, 6.211100000000011e-05, 6.229200000000198e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.460" endtime="20201115 23:02:18.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.455" endtime="20201115 23:02:18.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.465" endtime="20201115 23:02:18.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.469" endtime="20201115 23:02:18.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.467" endtime="20201115 23:02:18.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.464" endtime="20201115 23:02:18.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.095" endtime="20201115 23:02:18.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.093" endtime="20201115 23:02:18.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.092" endtime="20201115 23:02:18.490"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.493" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.501" endtime="20201115 23:02:18.521"></status>
</kw>
<msg timestamp="20201115 23:02:18.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.500" endtime="20201115 23:02:18.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.522" endtime="20201115 23:02:18.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.525" endtime="20201115 23:02:18.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.497" endtime="20201115 23:02:18.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.495" endtime="20201115 23:02:18.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.534" endtime="20201115 23:02:18.822"></status>
</kw>
<msg timestamp="20201115 23:02:18.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.532" endtime="20201115 23:02:18.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.826" endtime="20201115 23:02:18.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.835" endtime="20201115 23:02:18.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.530" endtime="20201115 23:02:18.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.528" endtime="20201115 23:02:18.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.842" level="INFO">${RESULT} = [{'time': 0.022616417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.368099999999946e-05, 'source_diff': 6.368099999999946e-05}, {'time': 0.022683375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:18.838" endtime="20201115 23:02:18.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.855" level="INFO">${ACCURACY} = {'diff': [6.368099999999946e-05, 6.386099999999839e-05, 6.405599999999984e-05, 6.338899999999703e-05, 6.333399999999823e-05, 6.366699999999989e-05, 6.326400000000038e-05, 6.347199999999845e-05, 6.3514...</msg>
<status status="PASS" starttime="20201115 23:02:18.843" endtime="20201115 23:02:18.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.860" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.859" endtime="20201115 23:02:18.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.863" level="INFO">VALUE: [6.368099999999946e-05, 6.386099999999839e-05, 6.405599999999984e-05, 6.338899999999703e-05, 6.333399999999823e-05, 6.366699999999989e-05, 6.326400000000038e-05, 6.347199999999845e-05, 6.351400000000063e-05, 6.393099999999971e-05, 6.344400000000278e-05, 6.416700000000039e-05, 6.386099999999839e-05, 6.326400000000038e-05, 6.366600000000042e-05, 6.419400000000006e-05, 6.342999999999974e-05, 6.3889000000001e-05, 6.419400000000006e-05, 6.354199999999977e-05, 6.337500000000093e-05, 6.380599999999959e-05, 6.336099999999789e-05, 6.37219999999987e-05, 6.326400000000038e-05, 6.416700000000039e-05, 6.338899999999703e-05, 6.393099999999971e-05, 6.387500000000143e-05, 6.333299999999875e-05, 6.398700000000146e-05, 6.361100000000161e-05, 6.406899999999993e-05, 6.37500000000013e-05, 6.412499999999821e-05, 6.359699999999857e-05, 6.330499999999961e-05, 6.345800000000235e-05, 6.384699999999882e-05, 6.355499999999986e-05, 6.404200000000027e-05, 6.381899999999968e-05, 6.336099999999789e-05, 6.374999999999784e-05, 6.365300000000032e-05, 6.323600000000124e-05, 6.393100000000318e-05, 6.368099999999946e-05, 6.32500000000008e-05, 6.363900000000075e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.861" endtime="20201115 23:02:18.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.856" endtime="20201115 23:02:18.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.866" endtime="20201115 23:02:18.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.870" endtime="20201115 23:02:18.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.868" endtime="20201115 23:02:18.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.865" endtime="20201115 23:02:18.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.493" endtime="20201115 23:02:18.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.491" endtime="20201115 23:02:18.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.491" endtime="20201115 23:02:18.891"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.894" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.902" endtime="20201115 23:02:18.922"></status>
</kw>
<msg timestamp="20201115 23:02:18.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.901" endtime="20201115 23:02:18.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.924" endtime="20201115 23:02:18.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.926" endtime="20201115 23:02:18.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.898" endtime="20201115 23:02:18.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.896" endtime="20201115 23:02:18.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.937" endtime="20201115 23:02:19.224"></status>
</kw>
<msg timestamp="20201115 23:02:19.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.935" endtime="20201115 23:02:19.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.228" endtime="20201115 23:02:19.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.237" endtime="20201115 23:02:19.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.932" endtime="20201115 23:02:19.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.930" endtime="20201115 23:02:19.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.244" level="INFO">${RESULT} = [{'time': 0.022622125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.441700000000064e-05, 'source_diff': 6.441700000000064e-05}, {'time': 0.022689139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:19.240" endtime="20201115 23:02:19.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.259" level="INFO">${ACCURACY} = {'diff': [6.441700000000064e-05, 6.4889000000002e-05, 6.448599999999902e-05, 6.476400000000188e-05, 6.50700000000004e-05, 6.462499999999871e-05, 6.482000000000016e-05, 6.501299999999918e-05, 6.4125000...</msg>
<status status="PASS" starttime="20201115 23:02:19.245" endtime="20201115 23:02:19.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.264" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.263" endtime="20201115 23:02:19.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.267" level="INFO">VALUE: [6.441700000000064e-05, 6.4889000000002e-05, 6.448599999999902e-05, 6.476400000000188e-05, 6.50700000000004e-05, 6.462499999999871e-05, 6.482000000000016e-05, 6.501299999999918e-05, 6.412500000000168e-05, 6.429200000000052e-05, 6.481899999999721e-05, 6.469400000000056e-05, 6.484699999999982e-05, 6.443000000000074e-05, 6.412500000000168e-05, 6.461099999999914e-05, 6.451400000000163e-05, 6.451399999999816e-05, 6.473600000000274e-05, 6.423599999999877e-05, 6.438899999999803e-05, 6.518100000000096e-05, 6.42219999999992e-05, 6.50700000000004e-05, 6.426400000000138e-05, 6.443100000000021e-05, 6.448599999999902e-05, 6.480600000000059e-05, 6.461199999999861e-05, 6.472299999999917e-05, 6.42500000000018e-05, 6.44159999999977e-05, 6.445799999999988e-05, 6.506900000000093e-05, 6.412500000000168e-05, 6.480500000000111e-05, 6.466699999999742e-05, 6.498599999999952e-05, 6.463899999999828e-05, 6.448599999999902e-05, 6.436099999999889e-05, 6.440300000000107e-05, 6.484699999999982e-05, 6.468100000000046e-05, 6.444499999999978e-05, 6.449999999999859e-05, 6.497300000000289e-05, 6.480600000000059e-05, 6.430600000000009e-05, 6.449999999999859e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.265" endtime="20201115 23:02:19.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.260" endtime="20201115 23:02:19.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.270" endtime="20201115 23:02:19.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.273" endtime="20201115 23:02:19.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.272" endtime="20201115 23:02:19.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.268" endtime="20201115 23:02:19.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.894" endtime="20201115 23:02:19.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.892" endtime="20201115 23:02:19.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.892" endtime="20201115 23:02:19.295"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.297" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.306" endtime="20201115 23:02:19.325"></status>
</kw>
<msg timestamp="20201115 23:02:19.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.304" endtime="20201115 23:02:19.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.326" endtime="20201115 23:02:19.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.329" endtime="20201115 23:02:19.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.301" endtime="20201115 23:02:19.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.299" endtime="20201115 23:02:19.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.338" endtime="20201115 23:02:19.626"></status>
</kw>
<msg timestamp="20201115 23:02:19.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.337" endtime="20201115 23:02:19.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.631" endtime="20201115 23:02:19.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.639" endtime="20201115 23:02:19.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.334" endtime="20201115 23:02:19.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.332" endtime="20201115 23:02:19.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.646" level="INFO">${RESULT} = [{'time': 0.022613486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.529199999999805e-05, 'source_diff': 6.529199999999805e-05}, {'time': 0.022682486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:19.642" endtime="20201115 23:02:19.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.659" level="INFO">${ACCURACY} = {'diff': [6.529199999999805e-05, 6.563900000000275e-05, 6.602799999999923e-05, 6.536099999999989e-05, 6.541700000000164e-05, 6.618100000000196e-05, 6.568100000000146e-05, 6.582000000000116e-05, 6.5806...</msg>
<status status="PASS" starttime="20201115 23:02:19.647" endtime="20201115 23:02:19.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.664" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.663" endtime="20201115 23:02:19.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.666" level="INFO">VALUE: [6.529199999999805e-05, 6.563900000000275e-05, 6.602799999999923e-05, 6.536099999999989e-05, 6.541700000000164e-05, 6.618100000000196e-05, 6.568100000000146e-05, 6.582000000000116e-05, 6.580600000000159e-05, 6.574999999999984e-05, 6.569500000000103e-05, 6.591700000000214e-05, 6.57090000000006e-05, 6.59440000000018e-05, 6.562499999999971e-05, 6.605499999999889e-05, 6.526400000000238e-05, 6.548600000000002e-05, 6.567999999999852e-05, 6.594399999999834e-05, 6.548600000000002e-05, 6.555500000000186e-05, 6.59440000000018e-05, 6.549999999999959e-05, 6.549999999999959e-05, 6.60700000000014e-05, 6.574999999999984e-05, 6.602799999999923e-05, 6.524999999999934e-05, 6.54029999999986e-05, 6.52639999999989e-05, 6.579199999999855e-05, 6.605599999999837e-05, 6.619399999999859e-05, 6.523599999999977e-05, 6.527800000000195e-05, 6.567999999999852e-05, 6.592999999999877e-05, 6.592999999999877e-05, 6.565300000000232e-05, 6.597200000000095e-05, 6.541699999999817e-05, 6.618099999999849e-05, 6.555600000000134e-05, 6.570800000000113e-05, 6.545800000000088e-05, 6.580599999999812e-05, 6.600000000000009e-05, 6.544500000000078e-05, 6.522300000000314e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.665" endtime="20201115 23:02:19.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.660" endtime="20201115 23:02:19.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.669" endtime="20201115 23:02:19.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.672" endtime="20201115 23:02:19.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.671" endtime="20201115 23:02:19.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.667" endtime="20201115 23:02:19.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.298" endtime="20201115 23:02:19.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.296" endtime="20201115 23:02:19.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.295" endtime="20201115 23:02:19.693"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.696" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.706" endtime="20201115 23:02:19.726"></status>
</kw>
<msg timestamp="20201115 23:02:19.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.704" endtime="20201115 23:02:19.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.728" endtime="20201115 23:02:19.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.730" endtime="20201115 23:02:19.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.701" endtime="20201115 23:02:19.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.698" endtime="20201115 23:02:19.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.740" endtime="20201115 23:02:20.026"></status>
</kw>
<msg timestamp="20201115 23:02:20.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024653597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.738" endtime="20201115 23:02:20.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024653597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.031" endtime="20201115 23:02:20.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.039" endtime="20201115 23:02:20.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.735" endtime="20201115 23:02:20.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.734" endtime="20201115 23:02:20.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.045" level="INFO">${RESULT} = [{'time': 0.024720181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.658400000000148e-05, 'source_diff': 6.658400000000148e-05}, {'time': 0.024792167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:20.042" endtime="20201115 23:02:20.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.059" level="INFO">${ACCURACY} = {'diff': [6.658400000000148e-05, 6.672300000000117e-05, 6.662500000000071e-05, 6.688900000000053e-05, 6.680499999999964e-05, 6.630499999999914e-05, 6.706899999999946e-05, 6.692999999999977e-05, 6.6304...</msg>
<status status="PASS" starttime="20201115 23:02:20.046" endtime="20201115 23:02:20.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.063" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.062" endtime="20201115 23:02:20.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.065" level="INFO">VALUE: [6.658400000000148e-05, 6.672300000000117e-05, 6.662500000000071e-05, 6.688900000000053e-05, 6.680499999999964e-05, 6.630499999999914e-05, 6.706899999999946e-05, 6.692999999999977e-05, 6.630499999999914e-05, 6.642999999999927e-05, 6.64029999999996e-05, 6.687500000000096e-05, 6.680599999999912e-05, 6.687500000000096e-05, 6.630600000000209e-05, 6.65419999999993e-05, 6.643099999999874e-05, 6.687499999999749e-05, 6.666700000000289e-05, 6.705499999999989e-05, 6.669499999999856e-05, 6.694400000000281e-05, 6.699999999999762e-05, 6.712500000000121e-05, 6.698600000000152e-05, 6.644499999999831e-05, 6.62220000000012e-05, 6.687500000000096e-05, 6.625000000000034e-05, 6.630500000000261e-05, 6.648600000000102e-05, 6.620800000000163e-05, 6.70700000000024e-05, 6.670799999999866e-05, 6.715300000000035e-05, 6.661100000000114e-05, 6.718000000000002e-05, 6.67090000000016e-05, 6.722199999999873e-05, 6.65419999999993e-05, 6.64159999999997e-05, 6.718000000000002e-05, 6.651400000000016e-05, 6.669400000000256e-05, 6.69030000000001e-05, 6.686099999999792e-05, 6.719399999999959e-05, 6.673600000000127e-05, 6.706899999999946e-05, 6.69030000000001e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.064" endtime="20201115 23:02:20.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.060" endtime="20201115 23:02:20.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.069" endtime="20201115 23:02:20.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.072" endtime="20201115 23:02:20.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.070" endtime="20201115 23:02:20.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.067" endtime="20201115 23:02:20.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.696" endtime="20201115 23:02:20.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.695" endtime="20201115 23:02:20.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.694" endtime="20201115 23:02:20.093"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.095" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.103" endtime="20201115 23:02:20.127"></status>
</kw>
<msg timestamp="20201115 23:02:20.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.102" endtime="20201115 23:02:20.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.130" endtime="20201115 23:02:20.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.136" endtime="20201115 23:02:20.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.099" endtime="20201115 23:02:20.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.097" endtime="20201115 23:02:20.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.155" endtime="20201115 23:02:20.449"></status>
</kw>
<msg timestamp="20201115 23:02:20.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.151" endtime="20201115 23:02:20.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.454" endtime="20201115 23:02:20.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.462" endtime="20201115 23:02:20.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.146" endtime="20201115 23:02:20.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.142" endtime="20201115 23:02:20.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.469" level="INFO">${RESULT} = [{'time': 0.022004403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.733399999999876e-05, 'source_diff': 6.733399999999876e-05}, {'time': 0.022076403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:20.465" endtime="20201115 23:02:20.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.482" level="INFO">${ACCURACY} = {'diff': [6.733399999999876e-05, 6.729200000000005e-05, 6.762499999999824e-05, 6.774999999999837e-05, 6.78619999999984e-05, 6.737500000000146e-05, 6.73619999999979e-05, 6.787499999999849e-05, 6.743000...</msg>
<status status="PASS" starttime="20201115 23:02:20.470" endtime="20201115 23:02:20.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.486" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.485" endtime="20201115 23:02:20.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.489" level="INFO">VALUE: [6.733399999999876e-05, 6.729200000000005e-05, 6.762499999999824e-05, 6.774999999999837e-05, 6.78619999999984e-05, 6.737500000000146e-05, 6.73619999999979e-05, 6.787499999999849e-05, 6.743000000000027e-05, 6.730500000000014e-05, 6.77359999999988e-05, 6.77640000000014e-05, 6.762499999999824e-05, 6.729200000000005e-05, 6.786099999999892e-05, 6.72640000000009e-05, 6.765300000000085e-05, 6.801400000000166e-05, 6.761099999999867e-05, 6.768099999999999e-05, 6.788900000000153e-05, 6.793100000000024e-05, 6.751400000000116e-05, 6.791700000000067e-05, 6.797199999999948e-05, 6.744400000000331e-05, 6.738900000000103e-05, 6.811099999999917e-05, 6.744399999999984e-05, 6.74030000000006e-05, 6.793000000000077e-05, 6.741700000000017e-05, 6.741700000000017e-05, 6.793000000000077e-05, 6.780600000000012e-05, 6.802700000000175e-05, 6.780500000000064e-05, 6.732000000000266e-05, 6.756999999999944e-05, 6.786100000000239e-05, 6.819500000000006e-05, 6.818100000000049e-05, 6.745799999999941e-05, 6.793000000000077e-05, 6.763900000000128e-05, 6.786099999999892e-05, 6.80969999999996e-05, 6.750000000000159e-05, 6.783299999999978e-05, 6.776399999999794e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.487" endtime="20201115 23:02:20.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.483" endtime="20201115 23:02:20.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.492" endtime="20201115 23:02:20.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.495" endtime="20201115 23:02:20.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.494" endtime="20201115 23:02:20.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.490" endtime="20201115 23:02:20.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.096" endtime="20201115 23:02:20.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.094" endtime="20201115 23:02:20.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.093" endtime="20201115 23:02:20.516"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.519" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.533" endtime="20201115 23:02:20.552"></status>
</kw>
<msg timestamp="20201115 23:02:20.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.531" endtime="20201115 23:02:20.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.553" endtime="20201115 23:02:20.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.556" endtime="20201115 23:02:20.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.524" endtime="20201115 23:02:20.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.521" endtime="20201115 23:02:20.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.565" endtime="20201115 23:02:20.852"></status>
</kw>
<msg timestamp="20201115 23:02:20.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02800025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028068472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:20.563" endtime="20201115 23:02:20.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02800025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028068472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:20.856" endtime="20201115 23:02:20.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.864" endtime="20201115 23:02:20.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.561" endtime="20201115 23:02:20.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.559" endtime="20201115 23:02:20.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.871" level="INFO">${RESULT} = [{'time': 0.028068472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.822199999999973e-05, 'source_diff': 6.822199999999973e-05}, {'time': 0.028143472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:20.868" endtime="20201115 23:02:20.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.886" level="INFO">${ACCURACY} = {'diff': [6.822199999999973e-05, 6.905499999999842e-05, 6.867999999999805e-05, 6.82359999999993e-05, 6.905500000000189e-05, 6.90970000000006e-05, 6.899999999999962e-05, 6.891700000000167e-05, 6.819400...</msg>
<status status="PASS" starttime="20201115 23:02:20.872" endtime="20201115 23:02:20.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.890" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.889" endtime="20201115 23:02:20.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.893" level="INFO">VALUE: [6.822199999999973e-05, 6.905499999999842e-05, 6.867999999999805e-05, 6.82359999999993e-05, 6.905500000000189e-05, 6.90970000000006e-05, 6.899999999999962e-05, 6.891700000000167e-05, 6.819400000000059e-05, 6.87359999999998e-05, 6.918100000000149e-05, 6.84030000000016e-05, 6.829200000000105e-05, 6.848599999999955e-05, 6.90970000000006e-05, 6.812500000000221e-05, 6.826399999999844e-05, 6.888899999999906e-05, 6.880500000000164e-05, 6.836099999999942e-05, 6.829199999999758e-05, 6.901399999999919e-05, 6.827800000000148e-05, 6.886099999999992e-05, 6.80559999999969e-05, 6.811100000000264e-05, 6.861100000000314e-05, 6.865299999999838e-05, 6.869499999999709e-05, 6.919499999999759e-05, 6.836099999999942e-05, 6.843000000000127e-05, 6.870800000000066e-05, 6.869500000000056e-05, 6.836099999999942e-05, 6.85420000000013e-05, 6.825000000000234e-05, 6.897200000000048e-05, 6.82359999999993e-05, 6.858300000000053e-05, 6.891599999999873e-05, 6.855600000000087e-05, 6.907000000000094e-05, 6.832000000000019e-05, 6.844500000000031e-05, 6.887500000000296e-05, 6.866700000000142e-05, 6.888900000000253e-05, 6.870900000000013e-05, 6.880599999999765e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.891" endtime="20201115 23:02:20.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.887" endtime="20201115 23:02:20.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.896" endtime="20201115 23:02:20.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.899" endtime="20201115 23:02:20.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.898" endtime="20201115 23:02:20.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.894" endtime="20201115 23:02:20.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.520" endtime="20201115 23:02:20.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.517" endtime="20201115 23:02:20.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.517" endtime="20201115 23:02:20.921"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.923" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.932" endtime="20201115 23:02:20.952"></status>
</kw>
<msg timestamp="20201115 23:02:20.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.930" endtime="20201115 23:02:20.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.954" endtime="20201115 23:02:20.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.956" endtime="20201115 23:02:20.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.927" endtime="20201115 23:02:20.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.925" endtime="20201115 23:02:20.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.966" endtime="20201115 23:02:21.251"></status>
</kw>
<msg timestamp="20201115 23:02:21.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023702319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023772028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.965" endtime="20201115 23:02:21.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023702319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023772028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.256" endtime="20201115 23:02:21.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.264" endtime="20201115 23:02:21.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.962" endtime="20201115 23:02:21.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.960" endtime="20201115 23:02:21.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.271" level="INFO">${RESULT} = [{'time': 0.023772028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.970900000000113e-05, 'source_diff': 6.970900000000113e-05}, {'time': 0.023848056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:21.267" endtime="20201115 23:02:21.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.284" level="INFO">${ACCURACY} = {'diff': [6.970900000000113e-05, 7.013900000000031e-05, 6.931899999999824e-05, 6.929200000000205e-05, 6.983299999999831e-05, 6.95979999999971e-05, 7.013900000000031e-05, 7.009699999999813e-05, 6.92779...</msg>
<status status="PASS" starttime="20201115 23:02:21.272" endtime="20201115 23:02:21.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.288" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.287" endtime="20201115 23:02:21.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.291" level="INFO">VALUE: [6.970900000000113e-05, 7.013900000000031e-05, 6.931899999999824e-05, 6.929200000000205e-05, 6.983299999999831e-05, 6.95979999999971e-05, 7.013900000000031e-05, 7.009699999999813e-05, 6.927799999999901e-05, 6.984700000000135e-05, 6.926399999999944e-05, 7.016599999999998e-05, 7.013900000000031e-05, 6.97360000000008e-05, 6.97360000000008e-05, 6.932000000000119e-05, 6.945900000000088e-05, 6.936100000000042e-05, 6.948700000000002e-05, 6.99299999999993e-05, 7.019500000000206e-05, 6.984699999999788e-05, 6.993099999999877e-05, 7.006899999999899e-05, 6.995800000000191e-05, 6.944399999999837e-05, 6.927799999999901e-05, 6.92360000000003e-05, 6.997200000000148e-05, 7.017999999999955e-05, 6.938900000000303e-05, 7.019400000000259e-05, 6.997200000000148e-05, 6.957000000000144e-05, 6.975000000000037e-05, 6.987500000000049e-05, 6.962500000000024e-05, 6.947300000000045e-05, 6.95559999999984e-05, 6.950000000000012e-05, 6.931899999999824e-05, 6.994400000000234e-05, 6.97909999999996e-05, 6.959699999999763e-05, 6.955499999999892e-05, 6.938899999999956e-05, 6.938900000000303e-05, 6.983300000000178e-05, 6.967999999999905e-05, 7.00559999999989e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.289" endtime="20201115 23:02:21.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.285" endtime="20201115 23:02:21.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.294" endtime="20201115 23:02:21.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.297" endtime="20201115 23:02:21.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.296" endtime="20201115 23:02:21.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.292" endtime="20201115 23:02:21.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.924" endtime="20201115 23:02:21.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.922" endtime="20201115 23:02:21.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.921" endtime="20201115 23:02:21.318"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.321" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.329" endtime="20201115 23:02:21.349"></status>
</kw>
<msg timestamp="20201115 23:02:21.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.327" endtime="20201115 23:02:21.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.350" endtime="20201115 23:02:21.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.353" endtime="20201115 23:02:21.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.325" endtime="20201115 23:02:21.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.323" endtime="20201115 23:02:21.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.362" endtime="20201115 23:02:21.649"></status>
</kw>
<msg timestamp="20201115 23:02:21.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.360" endtime="20201115 23:02:21.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.653" endtime="20201115 23:02:21.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.661" endtime="20201115 23:02:21.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.358" endtime="20201115 23:02:21.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.356" endtime="20201115 23:02:21.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.668" level="INFO">${RESULT} = [{'time': 0.021953778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.033400000000176e-05, 'source_diff': 7.033400000000176e-05}, {'time': 0.022028722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:21.665" endtime="20201115 23:02:21.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.681" level="INFO">${ACCURACY} = {'diff': [7.033400000000176e-05, 7.02360000000013e-05, 7.062500000000124e-05, 7.044400000000284e-05, 7.034699999999838e-05, 7.087499999999802e-05, 7.05559999999994e-05, 7.095899999999891e-05, 7.076400...</msg>
<status status="PASS" starttime="20201115 23:02:21.669" endtime="20201115 23:02:21.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.685" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.684" endtime="20201115 23:02:21.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.688" level="INFO">VALUE: [7.033400000000176e-05, 7.02360000000013e-05, 7.062500000000124e-05, 7.044400000000284e-05, 7.034699999999838e-05, 7.087499999999802e-05, 7.05559999999994e-05, 7.095899999999891e-05, 7.076400000000094e-05, 7.068099999999952e-05, 7.037500000000099e-05, 7.075000000000137e-05, 7.080599999999965e-05, 7.036100000000142e-05, 7.043099999999927e-05, 7.097199999999901e-05, 7.1069e-05, 7.044400000000284e-05, 7.036099999999795e-05, 7.033300000000228e-05, 7.091599999999726e-05, 7.122199999999926e-05, 7.036100000000142e-05, 7.036099999999795e-05, 7.112499999999827e-05, 7.049999999999765e-05, 7.048600000000155e-05, 7.116699999999698e-05, 7.077699999999756e-05, 7.068000000000005e-05, 7.056999999999897e-05, 7.043099999999927e-05, 7.043099999999927e-05, 7.087499999999802e-05, 7.080500000000017e-05, 7.050000000000112e-05, 7.025000000000087e-05, 7.094400000000334e-05, 7.033299999999881e-05, 7.041600000000023e-05, 7.022200000000173e-05, 7.063899999999734e-05, 7.029199999999958e-05, 7.02499999999974e-05, 7.07230000000017e-05, 7.080599999999965e-05, 7.080599999999965e-05, 7.100000000000162e-05, 7.080599999999965e-05, 7.012500000000074e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.686" endtime="20201115 23:02:21.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.682" endtime="20201115 23:02:21.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.691" endtime="20201115 23:02:21.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.695" endtime="20201115 23:02:21.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.693" endtime="20201115 23:02:21.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.690" endtime="20201115 23:02:21.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.321" endtime="20201115 23:02:21.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.320" endtime="20201115 23:02:21.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.319" endtime="20201115 23:02:21.716"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.718" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.726" endtime="20201115 23:02:21.745"></status>
</kw>
<msg timestamp="20201115 23:02:21.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.725" endtime="20201115 23:02:21.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.747" endtime="20201115 23:02:21.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.749" endtime="20201115 23:02:21.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.722" endtime="20201115 23:02:21.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.720" endtime="20201115 23:02:21.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.758" endtime="20201115 23:02:22.051"></status>
</kw>
<msg timestamp="20201115 23:02:22.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:21.757" endtime="20201115 23:02:22.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:22.055" endtime="20201115 23:02:22.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.063" endtime="20201115 23:02:22.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.754" endtime="20201115 23:02:22.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.753" endtime="20201115 23:02:22.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.070" level="INFO">${RESULT} = [{'time': 0.021841, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.204199999999786e-05, 'source_diff': 7.204199999999786e-05}, {'time': 0.021918, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.1...</msg>
<status status="PASS" starttime="20201115 23:02:22.067" endtime="20201115 23:02:22.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.083" level="INFO">${ACCURACY} = {'diff': [7.204199999999786e-05, 7.183300000000031e-05, 7.137500000000199e-05, 7.16109999999992e-05, 7.148600000000255e-05, 7.205500000000142e-05, 7.19300000000013e-05, 7.15560000000004e-05, 7.1930000...</msg>
<status status="PASS" starttime="20201115 23:02:22.071" endtime="20201115 23:02:22.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.088" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.087" endtime="20201115 23:02:22.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.090" level="INFO">VALUE: [7.204199999999786e-05, 7.183300000000031e-05, 7.137500000000199e-05, 7.16109999999992e-05, 7.148600000000255e-05, 7.205500000000142e-05, 7.19300000000013e-05, 7.15560000000004e-05, 7.19300000000013e-05, 7.204200000000133e-05, 7.181899999999727e-05, 7.140199999999819e-05, 7.133399999999929e-05, 7.159699999999963e-05, 7.137500000000199e-05, 7.194400000000087e-05, 7.212499999999927e-05, 7.186099999999945e-05, 7.182000000000022e-05, 7.194500000000034e-05, 7.144499999999984e-05, 7.138900000000156e-05, 7.144499999999984e-05, 7.137500000000199e-05, 7.216700000000145e-05, 7.151399999999822e-05, 7.201299999999924e-05, 7.177699999999856e-05, 7.194400000000087e-05, 7.19300000000013e-05, 7.166600000000148e-05, 7.168000000000105e-05, 7.130599999999668e-05, 7.144400000000037e-05, 7.180600000000065e-05, 7.173599999999933e-05, 7.19170000000012e-05, 7.161100000000267e-05, 7.175000000000237e-05, 7.131999999999972e-05, 7.15560000000004e-05, 7.184699999999988e-05, 7.219399999999765e-05, 7.18620000000024e-05, 7.168099999999705e-05, 7.150000000000212e-05, 7.134699999999938e-05, 7.191600000000173e-05, 7.184699999999988e-05, 7.212500000000274e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.089" endtime="20201115 23:02:22.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.084" endtime="20201115 23:02:22.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.093" endtime="20201115 23:02:22.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.097" endtime="20201115 23:02:22.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.095" endtime="20201115 23:02:22.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.092" endtime="20201115 23:02:22.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.719" endtime="20201115 23:02:22.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.717" endtime="20201115 23:02:22.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.716" endtime="20201115 23:02:22.118"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.120" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.128" endtime="20201115 23:02:22.147"></status>
</kw>
<msg timestamp="20201115 23:02:22.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.127" endtime="20201115 23:02:22.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.148" endtime="20201115 23:02:22.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.151" endtime="20201115 23:02:22.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.124" endtime="20201115 23:02:22.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.122" endtime="20201115 23:02:22.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.160" endtime="20201115 23:02:22.447"></status>
</kw>
<msg timestamp="20201115 23:02:22.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02180575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021878806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:22.159" endtime="20201115 23:02:22.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02180575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021878806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:22.451" endtime="20201115 23:02:22.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.459" endtime="20201115 23:02:22.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.156" endtime="20201115 23:02:22.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.154" endtime="20201115 23:02:22.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.466" level="INFO">${RESULT} = [{'time': 0.021878806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.30560000000019e-05, 'source_diff': 7.30560000000019e-05}, {'time': 0.021955819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:22.463" endtime="20201115 23:02:22.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.481" level="INFO">${ACCURACY} = {'diff': [7.30560000000019e-05, 7.315199999999994e-05, 7.298600000000058e-05, 7.213900000000231e-05, 7.279099999999913e-05, 7.29300000000023e-05, 7.236099999999995e-05, 7.287500000000002e-05, 7.254200...</msg>
<status status="PASS" starttime="20201115 23:02:22.467" endtime="20201115 23:02:22.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.485" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.484" endtime="20201115 23:02:22.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.487" level="INFO">VALUE: [7.30560000000019e-05, 7.315199999999994e-05, 7.298600000000058e-05, 7.213900000000231e-05, 7.279099999999913e-05, 7.29300000000023e-05, 7.236099999999995e-05, 7.287500000000002e-05, 7.254200000000183e-05, 7.230600000000115e-05, 7.268099999999805e-05, 7.305599999999843e-05, 7.236099999999995e-05, 7.313899999999984e-05, 7.280600000000165e-05, 7.211100000000317e-05, 7.284800000000036e-05, 7.22499999999994e-05, 7.280599999999818e-05, 7.226400000000244e-05, 7.287500000000002e-05, 7.294500000000134e-05, 7.309700000000113e-05, 7.319399999999865e-05, 7.270800000000119e-05, 7.241699999999823e-05, 7.28049999999987e-05, 7.251399999999922e-05, 7.268100000000152e-05, 7.298599999999711e-05, 7.21109999999997e-05, 7.300000000000015e-05, 7.233300000000081e-05, 7.223599999999983e-05, 7.300000000000015e-05, 7.27499999999999e-05, 7.234799999999986e-05, 7.249999999999965e-05, 7.300000000000015e-05, 7.231899999999777e-05, 7.316699999999898e-05, 7.237500000000299e-05, 7.22910000000021e-05, 7.222200000000026e-05, 7.270800000000119e-05, 7.254199999999836e-05, 7.24309999999978e-05, 7.300000000000015e-05, 7.309800000000061e-05, 7.222200000000026e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.486" endtime="20201115 23:02:22.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.482" endtime="20201115 23:02:22.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.491" endtime="20201115 23:02:22.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.494" endtime="20201115 23:02:22.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.492" endtime="20201115 23:02:22.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.489" endtime="20201115 23:02:22.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.121" endtime="20201115 23:02:22.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.119" endtime="20201115 23:02:22.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.118" endtime="20201115 23:02:22.515"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.517" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.525" endtime="20201115 23:02:22.545"></status>
</kw>
<msg timestamp="20201115 23:02:22.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.524" endtime="20201115 23:02:22.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.546" endtime="20201115 23:02:22.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.549" endtime="20201115 23:02:22.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.521" endtime="20201115 23:02:22.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.519" endtime="20201115 23:02:22.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.558" endtime="20201115 23:02:22.843"></status>
</kw>
<msg timestamp="20201115 23:02:22.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021801278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.556" endtime="20201115 23:02:22.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021801278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.847" endtime="20201115 23:02:22.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.855" endtime="20201115 23:02:22.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.553" endtime="20201115 23:02:22.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.552" endtime="20201115 23:02:22.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.862" level="INFO">${RESULT} = [{'time': 0.021875292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.401400000000072e-05, 'source_diff': 7.401400000000072e-05}, {'time': 0.021953264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:22.859" endtime="20201115 23:02:22.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.875" level="INFO">${ACCURACY} = {'diff': [7.401400000000072e-05, 7.345799999999847e-05, 7.423599999999836e-05, 7.405599999999943e-05, 7.405599999999943e-05, 7.319500000000159e-05, 7.32500000000004e-05, 7.347299999999751e-05, 7.37090...</msg>
<status status="PASS" starttime="20201115 23:02:22.863" endtime="20201115 23:02:22.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.880" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.879" endtime="20201115 23:02:22.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.882" level="INFO">VALUE: [7.401400000000072e-05, 7.345799999999847e-05, 7.423599999999836e-05, 7.405599999999943e-05, 7.405599999999943e-05, 7.319500000000159e-05, 7.32500000000004e-05, 7.347299999999751e-05, 7.370900000000166e-05, 7.326399999999997e-05, 7.338900000000009e-05, 7.400000000000115e-05, 7.327799999999954e-05, 7.377800000000004e-05, 7.354199999999936e-05, 7.395799999999897e-05, 7.337500000000052e-05, 7.405599999999943e-05, 7.39309999999993e-05, 7.362500000000077e-05, 7.416699999999998e-05, 7.348600000000108e-05, 7.354099999999988e-05, 7.309799999999714e-05, 7.384699999999841e-05, 7.323600000000083e-05, 7.413800000000137e-05, 7.34439999999989e-05, 7.398600000000158e-05, 7.381899999999927e-05, 7.370799999999872e-05, 7.373600000000133e-05, 7.405599999999943e-05, 7.381999999999875e-05, 7.373600000000133e-05, 7.380599999999918e-05, 7.39309999999993e-05, 7.380599999999918e-05, 7.394499999999887e-05, 7.387499999999755e-05, 7.3763999999997e-05, 7.415300000000041e-05, 7.367999999999958e-05, 7.338900000000009e-05, 7.342999999999933e-05, 7.33049999999992e-05, 7.418000000000008e-05, 7.379100000000013e-05, 7.356899999999902e-05, 7.344400000000237e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.881" endtime="20201115 23:02:22.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.876" endtime="20201115 23:02:22.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.885" endtime="20201115 23:02:22.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.889" endtime="20201115 23:02:22.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.887" endtime="20201115 23:02:22.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.884" endtime="20201115 23:02:22.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.518" endtime="20201115 23:02:22.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.516" endtime="20201115 23:02:22.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.515" endtime="20201115 23:02:22.910"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.912" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.920" endtime="20201115 23:02:22.940"></status>
</kw>
<msg timestamp="20201115 23:02:22.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.919" endtime="20201115 23:02:22.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.942" endtime="20201115 23:02:22.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.944" endtime="20201115 23:02:22.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.916" endtime="20201115 23:02:22.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.914" endtime="20201115 23:02:22.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.953" endtime="20201115 23:02:23.241"></status>
</kw>
<msg timestamp="20201115 23:02:23.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021948056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.952" endtime="20201115 23:02:23.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021948056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.245" endtime="20201115 23:02:23.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.253" endtime="20201115 23:02:23.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.949" endtime="20201115 23:02:23.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.947" endtime="20201115 23:02:23.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.260" level="INFO">${RESULT} = [{'time': 0.022022597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.454100000000088e-05, 'source_diff': 7.454100000000088e-05}, {'time': 0.022100639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:23.256" endtime="20201115 23:02:23.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.273" level="INFO">${ACCURACY} = {'diff': [7.454100000000088e-05, 7.470799999999972e-05, 7.437500000000152e-05, 7.46249999999983e-05, 7.513899999999837e-05, 7.448599999999861e-05, 7.420800000000269e-05, 7.430600000000315e-05, 7.50979...</msg>
<status status="PASS" starttime="20201115 23:02:23.261" endtime="20201115 23:02:23.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.277" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.276" endtime="20201115 23:02:23.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.280" level="INFO">VALUE: [7.454100000000088e-05, 7.470799999999972e-05, 7.437500000000152e-05, 7.46249999999983e-05, 7.513899999999837e-05, 7.448599999999861e-05, 7.420800000000269e-05, 7.430600000000315e-05, 7.509799999999914e-05, 7.462500000000177e-05, 7.506900000000052e-05, 7.47500000000019e-05, 7.429200000000011e-05, 7.511099999999923e-05, 7.488900000000159e-05, 7.454099999999741e-05, 7.474999999999843e-05, 7.4763999999998e-05, 7.43050000000002e-05, 7.46249999999983e-05, 7.44309999999998e-05, 7.476400000000147e-05, 7.497199999999954e-05, 7.513900000000184e-05, 7.41110000000017e-05, 7.483299999999984e-05, 7.518100000000055e-05, 7.441700000000023e-05, 7.500000000000215e-05, 7.449999999999818e-05, 7.411099999999823e-05, 7.468100000000005e-05, 7.483299999999984e-05, 7.466600000000101e-05, 7.461099999999873e-05, 7.486099999999898e-05, 7.461099999999873e-05, 7.47500000000019e-05, 7.437499999999805e-05, 7.452800000000079e-05, 7.430599999999968e-05, 7.487499999999855e-05, 7.505600000000043e-05, 7.436099999999848e-05, 7.46110000000022e-05, 7.501300000000224e-05, 7.506900000000052e-05, 7.454200000000036e-05, 7.456900000000002e-05, 7.438899999999762e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.278" endtime="20201115 23:02:23.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.273" endtime="20201115 23:02:23.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.283" endtime="20201115 23:02:23.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.286" endtime="20201115 23:02:23.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.284" endtime="20201115 23:02:23.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.281" endtime="20201115 23:02:23.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.913" endtime="20201115 23:02:23.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.911" endtime="20201115 23:02:23.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.910" endtime="20201115 23:02:23.307"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.309" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.318" endtime="20201115 23:02:23.338"></status>
</kw>
<msg timestamp="20201115 23:02:23.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.316" endtime="20201115 23:02:23.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.339" endtime="20201115 23:02:23.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.342" endtime="20201115 23:02:23.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.313" endtime="20201115 23:02:23.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.311" endtime="20201115 23:02:23.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.351" endtime="20201115 23:02:23.636"></status>
</kw>
<msg timestamp="20201115 23:02:23.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022442722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.349" endtime="20201115 23:02:23.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022442722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.641" endtime="20201115 23:02:23.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.649" endtime="20201115 23:02:23.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.347" endtime="20201115 23:02:23.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.345" endtime="20201115 23:02:23.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.655" level="INFO">${RESULT} = [{'time': 0.022442722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.584699999999694e-05, 'source_diff': 7.584699999999694e-05}, {'time': 0.022523722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:23.652" endtime="20201115 23:02:23.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.668" level="INFO">${ACCURACY} = {'diff': [7.584699999999694e-05, 7.61249999999998e-05, 7.590200000000269e-05, 7.536199999999896e-05, 7.580600000000118e-05, 7.54310000000008e-05, 7.569500000000062e-05, 7.611099999999676e-05, 7.543100...</msg>
<status status="PASS" starttime="20201115 23:02:23.656" endtime="20201115 23:02:23.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.673" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.672" endtime="20201115 23:02:23.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.675" level="INFO">VALUE: [7.584699999999694e-05, 7.61249999999998e-05, 7.590200000000269e-05, 7.536199999999896e-05, 7.580600000000118e-05, 7.54310000000008e-05, 7.569500000000062e-05, 7.611099999999676e-05, 7.54310000000008e-05, 7.529200000000111e-05, 7.530600000000068e-05, 7.547299999999951e-05, 7.536199999999896e-05, 7.59310000000013e-05, 7.56249999999993e-05, 7.555499999999798e-05, 7.523599999999936e-05, 7.584700000000041e-05, 7.616700000000198e-05, 7.526400000000197e-05, 7.537499999999905e-05, 7.597199999999707e-05, 7.6070000000001e-05, 7.524999999999893e-05, 7.56249999999993e-05, 7.587499999999955e-05, 7.548600000000308e-05, 7.568099999999758e-05, 7.582000000000075e-05, 7.574999999999943e-05, 7.593099999999783e-05, 7.620800000000122e-05, 7.547200000000004e-05, 7.592999999999836e-05, 7.573599999999986e-05, 7.586099999999998e-05, 7.554099999999841e-05, 7.591699999999826e-05, 7.58189999999978e-05, 7.554200000000136e-05, 7.530600000000068e-05, 7.611100000000023e-05, 7.555600000000093e-05, 7.562500000000277e-05, 7.60830000000011e-05, 7.552799999999832e-05, 7.583300000000084e-05, 7.592999999999836e-05, 7.511099999999923e-05, 7.534699999999991e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.674" endtime="20201115 23:02:23.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.669" endtime="20201115 23:02:23.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.678" endtime="20201115 23:02:23.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.682" endtime="20201115 23:02:23.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.680" endtime="20201115 23:02:23.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.677" endtime="20201115 23:02:23.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.310" endtime="20201115 23:02:23.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.308" endtime="20201115 23:02:23.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.307" endtime="20201115 23:02:23.703"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.706" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.714" endtime="20201115 23:02:23.733"></status>
</kw>
<msg timestamp="20201115 23:02:23.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.712" endtime="20201115 23:02:23.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.734" endtime="20201115 23:02:23.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.737" endtime="20201115 23:02:23.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.710" endtime="20201115 23:02:23.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.707" endtime="20201115 23:02:23.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.746" endtime="20201115 23:02:24.034"></status>
</kw>
<msg timestamp="20201115 23:02:24.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02240875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:23.744" endtime="20201115 23:02:24.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02240875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:24.038" endtime="20201115 23:02:24.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.046" endtime="20201115 23:02:24.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.742" endtime="20201115 23:02:24.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.740" endtime="20201115 23:02:24.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.053" level="INFO">${RESULT} = [{'time': 0.022485417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.666699999999901e-05, 'source_diff': 7.666699999999901e-05}, {'time': 0.022567417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:24.049" endtime="20201115 23:02:24.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.110" level="INFO">${ACCURACY} = {'diff': [7.666699999999901e-05, 7.622300000000026e-05, 7.67770000000001e-05, 7.64310000000018e-05, 7.719399999999918e-05, 7.691599999999979e-05, 7.700000000000068e-05, 7.69579999999985e-05, 7.6526999...</msg>
<status status="PASS" starttime="20201115 23:02:24.054" endtime="20201115 23:02:24.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.115" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.114" endtime="20201115 23:02:24.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.117" level="INFO">VALUE: [7.666699999999901e-05, 7.622300000000026e-05, 7.67770000000001e-05, 7.64310000000018e-05, 7.719399999999918e-05, 7.691599999999979e-05, 7.700000000000068e-05, 7.69579999999985e-05, 7.652699999999985e-05, 7.66250000000003e-05, 7.651399999999975e-05, 7.637500000000005e-05, 7.650000000000018e-05, 7.634700000000091e-05, 7.648600000000061e-05, 7.680599999999871e-05, 7.643099999999833e-05, 7.691599999999979e-05, 7.630599999999821e-05, 7.715200000000047e-05, 7.717999999999961e-05, 7.637500000000005e-05, 7.692999999999936e-05, 7.63050000000022e-05, 7.717999999999961e-05, 7.705499999999949e-05, 7.718099999999908e-05, 7.623600000000036e-05, 7.711100000000123e-05, 7.718099999999908e-05, 7.69029999999997e-05, 7.66250000000003e-05, 7.629099999999917e-05, 7.643099999999833e-05, 7.637500000000005e-05, 7.619500000000112e-05, 7.69449999999984e-05, 7.717999999999961e-05, 7.634799999999692e-05, 7.64029999999992e-05, 7.700000000000068e-05, 7.654100000000288e-05, 7.66250000000003e-05, 7.641600000000276e-05, 7.644399999999843e-05, 7.680599999999871e-05, 7.658299999999812e-05, 7.652800000000279e-05, 7.609700000000066e-05, 7.668099999999858e-05]</msg>
<status status="PASS" starttime="20201115 23:02:24.116" endtime="20201115 23:02:24.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.111" endtime="20201115 23:02:24.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.121" endtime="20201115 23:02:24.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.124" endtime="20201115 23:02:24.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.123" endtime="20201115 23:02:24.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.119" endtime="20201115 23:02:24.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.706" endtime="20201115 23:02:24.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.704" endtime="20201115 23:02:24.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.704" endtime="20201115 23:02:24.145"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.147" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.155" endtime="20201115 23:02:24.176"></status>
</kw>
<msg timestamp="20201115 23:02:24.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.154" endtime="20201115 23:02:24.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.177" endtime="20201115 23:02:24.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.180" endtime="20201115 23:02:24.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.151" endtime="20201115 23:02:24.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.149" endtime="20201115 23:02:24.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.189" endtime="20201115 23:02:24.474"></status>
</kw>
<msg timestamp="20201115 23:02:24.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02233175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:24.187" endtime="20201115 23:02:24.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02233175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:24.478" endtime="20201115 23:02:24.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.486" endtime="20201115 23:02:24.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.185" endtime="20201115 23:02:24.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.183" endtime="20201115 23:02:24.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.493" level="INFO">${RESULT} = [{'time': 0.022409125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.737499999999758e-05, 'source_diff': 7.737499999999758e-05}, {'time': 0.022493139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:24.490" endtime="20201115 23:02:24.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.506" level="INFO">${ACCURACY} = {'diff': [7.737499999999758e-05, 7.79579999999995e-05, 7.79030000000007e-05, 7.798600000000211e-05, 7.751400000000075e-05, 7.770800000000272e-05, 7.811100000000223e-05, 7.783400000000232e-05, 7.754199...</msg>
<status status="PASS" starttime="20201115 23:02:24.494" endtime="20201115 23:02:24.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.511" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.510" endtime="20201115 23:02:24.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.514" level="INFO">VALUE: [7.737499999999758e-05, 7.79579999999995e-05, 7.79030000000007e-05, 7.798600000000211e-05, 7.751400000000075e-05, 7.770800000000272e-05, 7.811100000000223e-05, 7.783400000000232e-05, 7.754199999999989e-05, 7.7457999999999e-05, 7.784699999999894e-05, 7.781999999999928e-05, 7.804100000000092e-05, 7.772199999999882e-05, 7.804100000000092e-05, 7.738899999999715e-05, 7.81380000000019e-05, 7.763900000000087e-05, 7.731900000000277e-05, 7.755599999999946e-05, 7.75700000000025e-05, 7.75969999999987e-05, 7.81389999999979e-05, 7.787500000000155e-05, 7.751300000000128e-05, 7.81250000000018e-05, 7.81250000000018e-05, 7.811099999999876e-05, 7.744399999999943e-05, 7.806900000000006e-05, 7.793000000000036e-05, 7.7457999999999e-05, 7.723599999999789e-05, 7.749999999999771e-05, 7.744500000000237e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.743099999999933e-05, 7.804200000000039e-05, 7.780599999999971e-05, 7.819400000000018e-05, 7.797299999999854e-05, 7.774999999999796e-05, 7.723599999999789e-05, 7.712499999999733e-05, 7.812499999999833e-05, 7.72640000000005e-05, 7.804100000000092e-05, 7.743099999999933e-05, 7.720799999999875e-05]</msg>
<status status="PASS" starttime="20201115 23:02:24.512" endtime="20201115 23:02:24.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.507" endtime="20201115 23:02:24.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.517" endtime="20201115 23:02:24.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.520" endtime="20201115 23:02:24.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.519" endtime="20201115 23:02:24.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.515" endtime="20201115 23:02:24.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.148" endtime="20201115 23:02:24.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.146" endtime="20201115 23:02:24.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.145" endtime="20201115 23:02:24.541"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.544" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.553" endtime="20201115 23:02:24.572"></status>
</kw>
<msg timestamp="20201115 23:02:24.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.551" endtime="20201115 23:02:24.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.574" endtime="20201115 23:02:24.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.576" endtime="20201115 23:02:24.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.548" endtime="20201115 23:02:24.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.545" endtime="20201115 23:02:24.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.585" endtime="20201115 23:02:24.871"></status>
</kw>
<msg timestamp="20201115 23:02:24.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022735306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.584" endtime="20201115 23:02:24.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022735306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.875" endtime="20201115 23:02:24.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.883" endtime="20201115 23:02:24.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.581" endtime="20201115 23:02:24.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.580" endtime="20201115 23:02:24.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.890" level="INFO">${RESULT} = [{'time': 0.022735306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.843100000000033e-05, 'source_diff': 7.843100000000033e-05}, {'time': 0.022818361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:24.887" endtime="20201115 23:02:24.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.904" level="INFO">${ACCURACY} = {'diff': [7.843100000000033e-05, 7.816700000000051e-05, 7.844400000000043e-05, 7.843000000000086e-05, 7.87909999999982e-05, 7.822199999999932e-05, 7.884699999999994e-05, 7.870799999999678e-05, 7.84310...</msg>
<status status="PASS" starttime="20201115 23:02:24.891" endtime="20201115 23:02:24.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.908" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.907" endtime="20201115 23:02:24.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.910" level="INFO">VALUE: [7.843100000000033e-05, 7.816700000000051e-05, 7.844400000000043e-05, 7.843000000000086e-05, 7.87909999999982e-05, 7.822199999999932e-05, 7.884699999999994e-05, 7.870799999999678e-05, 7.843100000000033e-05, 7.89450000000004e-05, 7.912499999999933e-05, 7.901399999999878e-05, 7.868000000000111e-05, 7.907000000000053e-05, 7.918099999999761e-05, 7.805599999999996e-05, 7.886099999999951e-05, 7.905500000000149e-05, 7.880500000000124e-05, 7.901400000000225e-05, 7.886099999999951e-05, 7.865299999999797e-05, 7.8458e-05, 7.812499999999833e-05, 7.886199999999899e-05, 7.854200000000089e-05, 7.907000000000053e-05, 7.820800000000322e-05, 7.857000000000003e-05, 7.870800000000025e-05, 7.899999999999921e-05, 7.881899999999734e-05, 7.848699999999861e-05, 7.868000000000111e-05, 7.848599999999914e-05, 7.843000000000086e-05, 7.855500000000099e-05, 7.898599999999964e-05, 7.880499999999777e-05, 7.842999999999739e-05, 7.905500000000149e-05, 7.904200000000139e-05, 7.863900000000187e-05, 7.834699999999944e-05, 7.89450000000004e-05, 7.836099999999901e-05, 7.893100000000083e-05, 7.848699999999861e-05, 7.904200000000139e-05, 7.869399999999721e-05]</msg>
<status status="PASS" starttime="20201115 23:02:24.909" endtime="20201115 23:02:24.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.904" endtime="20201115 23:02:24.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.914" endtime="20201115 23:02:24.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.917" endtime="20201115 23:02:24.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.916" endtime="20201115 23:02:24.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.912" endtime="20201115 23:02:24.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.544" endtime="20201115 23:02:24.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.542" endtime="20201115 23:02:24.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.542" endtime="20201115 23:02:24.938"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.940" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.950" endtime="20201115 23:02:24.969"></status>
</kw>
<msg timestamp="20201115 23:02:24.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.948" endtime="20201115 23:02:24.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.971" endtime="20201115 23:02:24.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.973" endtime="20201115 23:02:24.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.944" endtime="20201115 23:02:24.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.942" endtime="20201115 23:02:24.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.982" endtime="20201115 23:02:25.267"></status>
</kw>
<msg timestamp="20201115 23:02:25.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022924458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023003931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.980" endtime="20201115 23:02:25.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022924458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023003931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.271" endtime="20201115 23:02:25.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.280" endtime="20201115 23:02:25.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.978" endtime="20201115 23:02:25.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.976" endtime="20201115 23:02:25.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.287" level="INFO">${RESULT} = [{'time': 0.023003931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.947299999999657e-05, 'source_diff': 7.947299999999657e-05}, {'time': 0.023085917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:25.283" endtime="20201115 23:02:25.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.300" level="INFO">${ACCURACY} = {'diff': [7.947299999999657e-05, 7.968100000000158e-05, 7.973699999999986e-05, 7.93190000000013e-05, 7.992999999999889e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.962499999999983e-05, 7.95279...</msg>
<status status="PASS" starttime="20201115 23:02:25.288" endtime="20201115 23:02:25.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.304" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.303" endtime="20201115 23:02:25.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.307" level="INFO">VALUE: [7.947299999999657e-05, 7.968100000000158e-05, 7.973699999999986e-05, 7.93190000000013e-05, 7.992999999999889e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.962499999999983e-05, 7.952799999999885e-05, 7.90970000000002e-05, 7.929199999999817e-05, 8.004199999999892e-05, 8.005599999999849e-05, 7.96389999999994e-05, 7.99580000000015e-05, 7.940299999999872e-05, 7.97230000000003e-05, 8.015299999999947e-05, 7.994399999999846e-05, 7.98190000000018e-05, 7.937499999999958e-05, 7.997200000000107e-05, 7.941599999999882e-05, 8.006899999999859e-05, 8.006900000000206e-05, 7.990299999999922e-05, 7.9458000000001e-05, 7.936100000000001e-05, 7.979199999999867e-05, 7.981999999999781e-05, 7.998600000000064e-05, 7.96389999999994e-05, 7.993099999999836e-05, 7.99169999999988e-05, 7.911199999999924e-05, 7.973699999999986e-05, 7.936100000000001e-05, 8.005500000000249e-05, 7.940299999999872e-05, 7.919399999999771e-05, 7.998600000000064e-05, 7.945799999999753e-05, 7.941700000000176e-05, 7.986100000000051e-05, 7.980600000000171e-05, 7.974999999999996e-05, 8.005600000000196e-05, 7.980599999999824e-05, 7.962499999999983e-05, 7.94450000000009e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.305" endtime="20201115 23:02:25.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.301" endtime="20201115 23:02:25.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.310" endtime="20201115 23:02:25.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.313" endtime="20201115 23:02:25.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.312" endtime="20201115 23:02:25.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.308" endtime="20201115 23:02:25.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.941" endtime="20201115 23:02:25.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.939" endtime="20201115 23:02:25.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.938" endtime="20201115 23:02:25.334"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.337" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.346" endtime="20201115 23:02:25.366"></status>
</kw>
<msg timestamp="20201115 23:02:25.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.343" endtime="20201115 23:02:25.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.367" endtime="20201115 23:02:25.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.370" endtime="20201115 23:02:25.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.341" endtime="20201115 23:02:25.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.339" endtime="20201115 23:02:25.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.379" endtime="20201115 23:02:25.664"></status>
</kw>
<msg timestamp="20201115 23:02:25.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.377" endtime="20201115 23:02:25.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.668" endtime="20201115 23:02:25.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.676" endtime="20201115 23:02:25.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.374" endtime="20201115 23:02:25.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.373" endtime="20201115 23:02:25.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.683" level="INFO">${RESULT} = [{'time': 0.022721431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.04450000000019e-05, 'source_diff': 8.04450000000019e-05}, {'time': 0.022805417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:25.680" endtime="20201115 23:02:25.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.697" level="INFO">${ACCURACY} = {'diff': [8.04450000000019e-05, 8.080600000000271e-05, 8.073600000000139e-05, 8.026300000000056e-05, 8.056900000000256e-05, 8.05970000000017e-05, 8.066600000000007e-05, 8.118000000000014e-05, 8.086100...</msg>
<status status="PASS" starttime="20201115 23:02:25.684" endtime="20201115 23:02:25.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.702" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.701" endtime="20201115 23:02:25.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.704" level="INFO">VALUE: [8.04450000000019e-05, 8.080600000000271e-05, 8.073600000000139e-05, 8.026300000000056e-05, 8.056900000000256e-05, 8.05970000000017e-05, 8.066600000000007e-05, 8.118000000000014e-05, 8.086100000000151e-05, 8.112500000000133e-05, 8.105599999999949e-05, 8.09169999999998e-05, 8.030499999999927e-05, 8.106999999999906e-05, 8.058399999999813e-05, 8.07780000000001e-05, 8.101400000000078e-05, 8.105600000000296e-05, 8.118000000000014e-05, 8.048700000000061e-05, 8.034700000000145e-05, 8.070799999999878e-05, 8.086100000000151e-05, 8.087499999999762e-05, 8.075000000000096e-05, 8.106899999999959e-05, 8.068099999999911e-05, 8.105599999999949e-05, 8.062500000000083e-05, 8.062500000000083e-05, 8.093099999999936e-05, 8.030600000000221e-05, 8.07780000000001e-05, 8.118099999999961e-05, 8.056899999999909e-05, 8.056999999999856e-05, 8.037500000000058e-05, 8.11390000000009e-05, 8.104100000000045e-05, 8.088899999999719e-05, 8.067999999999964e-05, 8.062500000000083e-05, 8.104199999999992e-05, 8.068100000000258e-05, 8.105600000000296e-05, 8.086100000000151e-05, 8.042999999999939e-05, 8.01109999999973e-05, 8.080600000000271e-05, 8.098600000000164e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.703" endtime="20201115 23:02:25.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.698" endtime="20201115 23:02:25.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.707" endtime="20201115 23:02:25.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.711" endtime="20201115 23:02:25.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.709" endtime="20201115 23:02:25.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.706" endtime="20201115 23:02:25.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.337" endtime="20201115 23:02:25.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.336" endtime="20201115 23:02:25.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.335" endtime="20201115 23:02:25.732"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.734" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.742" endtime="20201115 23:02:25.762"></status>
</kw>
<msg timestamp="20201115 23:02:25.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.740" endtime="20201115 23:02:25.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.764" endtime="20201115 23:02:25.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.770" endtime="20201115 23:02:25.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.738" endtime="20201115 23:02:25.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.736" endtime="20201115 23:02:25.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.779" endtime="20201115 23:02:26.065"></status>
</kw>
<msg timestamp="20201115 23:02:26.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022632819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.778" endtime="20201115 23:02:26.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022632819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.069" endtime="20201115 23:02:26.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.077" endtime="20201115 23:02:26.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.775" endtime="20201115 23:02:26.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.774" endtime="20201115 23:02:26.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.084" level="INFO">${RESULT} = [{'time': 0.022714444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.162500000000183e-05, 'source_diff': 8.162500000000183e-05}, {'time': 0.022801486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:26.081" endtime="20201115 23:02:26.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.097" level="INFO">${ACCURACY} = {'diff': [8.162500000000183e-05, 8.2152999999998e-05, 8.143000000000039e-05, 8.104100000000045e-05, 8.20979999999992e-05, 8.195800000000003e-05, 8.179200000000067e-05, 8.209699999999973e-05, 8.2138999...</msg>
<status status="PASS" starttime="20201115 23:02:26.085" endtime="20201115 23:02:26.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.102" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.101" endtime="20201115 23:02:26.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.104" level="INFO">VALUE: [8.162500000000183e-05, 8.2152999999998e-05, 8.143000000000039e-05, 8.104100000000045e-05, 8.20979999999992e-05, 8.195800000000003e-05, 8.179200000000067e-05, 8.209699999999973e-05, 8.213899999999844e-05, 8.130599999999974e-05, 8.126400000000103e-05, 8.206900000000059e-05, 8.156999999999956e-05, 8.137500000000158e-05, 8.198599999999917e-05, 8.133300000000288e-05, 8.123600000000189e-05, 8.184700000000295e-05, 8.175000000000196e-05, 8.21109999999993e-05, 8.187500000000208e-05, 8.186099999999905e-05, 8.143099999999986e-05, 8.109699999999873e-05, 8.187500000000208e-05, 8.137500000000158e-05, 8.148599999999867e-05, 8.126400000000103e-05, 8.138900000000115e-05, 8.166600000000107e-05, 8.101400000000078e-05, 8.174999999999849e-05, 8.138900000000115e-05, 8.169399999999674e-05, 8.136099999999855e-05, 8.144399999999996e-05, 8.13329999999994e-05, 8.10970000000022e-05, 8.126400000000103e-05, 8.17780000000011e-05, 8.198599999999917e-05, 8.220899999999975e-05, 8.216700000000104e-05, 8.18329999999999e-05, 8.129200000000017e-05, 8.125000000000146e-05, 8.154100000000095e-05, 8.138900000000115e-05, 8.172199999999935e-05, 8.145799999999953e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.103" endtime="20201115 23:02:26.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.098" endtime="20201115 23:02:26.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.107" endtime="20201115 23:02:26.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.110" endtime="20201115 23:02:26.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.109" endtime="20201115 23:02:26.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.105" endtime="20201115 23:02:26.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.735" endtime="20201115 23:02:26.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.733" endtime="20201115 23:02:26.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.732" endtime="20201115 23:02:26.132"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.134" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.142" endtime="20201115 23:02:26.162"></status>
</kw>
<msg timestamp="20201115 23:02:26.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.141" endtime="20201115 23:02:26.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.164" endtime="20201115 23:02:26.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.167" endtime="20201115 23:02:26.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.138" endtime="20201115 23:02:26.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.136" endtime="20201115 23:02:26.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.175" endtime="20201115 23:02:26.460"></status>
</kw>
<msg timestamp="20201115 23:02:26.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022476333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.174" endtime="20201115 23:02:26.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022476333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.464" endtime="20201115 23:02:26.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.472" endtime="20201115 23:02:26.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.171" endtime="20201115 23:02:26.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.170" endtime="20201115 23:02:26.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.479" level="INFO">${RESULT} = [{'time': 0.022476333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.240200000000225e-05, 'source_diff': 8.240200000000225e-05}, {'time': 0.022562319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:26.475" endtime="20201115 23:02:26.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.492" level="INFO">${ACCURACY} = {'diff': [8.240200000000225e-05, 8.306900000000159e-05, 8.281900000000134e-05, 8.270900000000025e-05, 8.258400000000013e-05, 8.301399999999931e-05, 8.234699999999998e-05, 8.255600000000099e-05, 8.2499...</msg>
<status status="PASS" starttime="20201115 23:02:26.480" endtime="20201115 23:02:26.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.496" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.495" endtime="20201115 23:02:26.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.499" level="INFO">VALUE: [8.240200000000225e-05, 8.306900000000159e-05, 8.281900000000134e-05, 8.270900000000025e-05, 8.258400000000013e-05, 8.301399999999931e-05, 8.234699999999998e-05, 8.255600000000099e-05, 8.249999999999924e-05, 8.266700000000154e-05, 8.301399999999931e-05, 8.319499999999772e-05, 8.274999999999949e-05, 8.266700000000154e-05, 8.211199999999877e-05, 8.280599999999777e-05, 8.230600000000074e-05, 8.256899999999762e-05, 8.279200000000167e-05, 8.236099999999955e-05, 8.206900000000059e-05, 8.273599999999992e-05, 8.31110000000003e-05, 8.209699999999973e-05, 8.294399999999799e-05, 8.21390000000019e-05, 8.258400000000013e-05, 8.262500000000284e-05, 8.272200000000035e-05, 8.243100000000086e-05, 8.230599999999727e-05, 8.254200000000142e-05, 8.313799999999996e-05, 8.249999999999924e-05, 8.266700000000154e-05, 8.305500000000202e-05, 8.242999999999792e-05, 8.219500000000018e-05, 8.268000000000164e-05, 8.272200000000035e-05, 8.24170000000013e-05, 8.237500000000259e-05, 8.288899999999919e-05, 8.294499999999747e-05, 8.223599999999942e-05, 8.280600000000124e-05, 8.319499999999772e-05, 8.240200000000225e-05, 8.229200000000117e-05, 8.302699999999941e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.497" endtime="20201115 23:02:26.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.493" endtime="20201115 23:02:26.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.502" endtime="20201115 23:02:26.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.505" endtime="20201115 23:02:26.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.504" endtime="20201115 23:02:26.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.500" endtime="20201115 23:02:26.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.134" endtime="20201115 23:02:26.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.133" endtime="20201115 23:02:26.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.132" endtime="20201115 23:02:26.527"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.529" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.537" endtime="20201115 23:02:26.557"></status>
</kw>
<msg timestamp="20201115 23:02:26.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.536" endtime="20201115 23:02:26.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.559" endtime="20201115 23:02:26.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.562" endtime="20201115 23:02:26.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.533" endtime="20201115 23:02:26.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.531" endtime="20201115 23:02:26.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.571" endtime="20201115 23:02:26.856"></status>
</kw>
<msg timestamp="20201115 23:02:26.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023097056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023180722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.569" endtime="20201115 23:02:26.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023097056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023180722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.861" endtime="20201115 23:02:26.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.869" endtime="20201115 23:02:26.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.567" endtime="20201115 23:02:26.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.565" endtime="20201115 23:02:26.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.876" level="INFO">${RESULT} = [{'time': 0.023180722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.36659999999996e-05, 'source_diff': 8.36659999999996e-05}, {'time': 0.023266736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:26.872" endtime="20201115 23:02:26.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.889" level="INFO">${ACCURACY} = {'diff': [8.36659999999996e-05, 8.373600000000092e-05, 8.391699999999933e-05, 8.355599999999852e-05, 8.330600000000174e-05, 8.344499999999797e-05, 8.407000000000206e-05, 8.412500000000087e-05, 8.36669...</msg>
<status status="PASS" starttime="20201115 23:02:26.877" endtime="20201115 23:02:26.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.893" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.892" endtime="20201115 23:02:26.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.896" level="INFO">VALUE: [8.36659999999996e-05, 8.373600000000092e-05, 8.391699999999933e-05, 8.355599999999852e-05, 8.330600000000174e-05, 8.344499999999797e-05, 8.407000000000206e-05, 8.412500000000087e-05, 8.366699999999908e-05, 8.419499999999872e-05, 8.39720000000016e-05, 8.352799999999938e-05, 8.398700000000064e-05, 8.386100000000105e-05, 8.400000000000074e-05, 8.324999999999999e-05, 8.329099999999923e-05, 8.34859999999972e-05, 8.348600000000067e-05, 8.324999999999999e-05, 8.386099999999758e-05, 8.405599999999902e-05, 8.336100000000055e-05, 8.333400000000088e-05, 8.355600000000199e-05, 8.312499999999987e-05, 8.390199999999681e-05, 8.331900000000184e-05, 8.329200000000217e-05, 8.345800000000153e-05, 8.362500000000037e-05, 8.369399999999874e-05, 8.366699999999908e-05, 8.386100000000105e-05, 8.326400000000303e-05, 8.34170000000023e-05, 8.337500000000012e-05, 8.341600000000282e-05, 8.329200000000217e-05, 8.326399999999956e-05, 8.388900000000019e-05, 8.337500000000012e-05, 8.36249999999969e-05, 8.390299999999976e-05, 8.354200000000242e-05, 8.381900000000234e-05, 8.324999999999999e-05, 8.344400000000196e-05, 8.369500000000168e-05, 8.323600000000042e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.894" endtime="20201115 23:02:26.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.890" endtime="20201115 23:02:26.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.899" endtime="20201115 23:02:26.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.903" endtime="20201115 23:02:26.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.901" endtime="20201115 23:02:26.923"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.898" endtime="20201115 23:02:26.923"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.530" endtime="20201115 23:02:26.923"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.528" endtime="20201115 23:02:26.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.527" endtime="20201115 23:02:26.924"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.926" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.934" endtime="20201115 23:02:26.955"></status>
</kw>
<msg timestamp="20201115 23:02:26.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.933" endtime="20201115 23:02:26.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.957" endtime="20201115 23:02:26.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.959" endtime="20201115 23:02:26.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.930" endtime="20201115 23:02:26.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.928" endtime="20201115 23:02:26.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.968" endtime="20201115 23:02:27.254"></status>
</kw>
<msg timestamp="20201115 23:02:27.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.967" endtime="20201115 23:02:27.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.258" endtime="20201115 23:02:27.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.266" endtime="20201115 23:02:27.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.964" endtime="20201115 23:02:27.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.962" endtime="20201115 23:02:27.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.273" level="INFO">${RESULT} = [{'time': 0.022721056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.520899999999929e-05, 'source_diff': 8.520899999999929e-05}, {'time': 0.022808028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.269" endtime="20201115 23:02:27.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.287" level="INFO">${ACCURACY} = {'diff': [8.520899999999929e-05, 8.432000000000231e-05, 8.42919999999997e-05, 8.494499999999947e-05, 8.4846999999999e-05, 8.459699999999876e-05, 8.491600000000085e-05, 8.494399999999999e-05, 8.4236000...</msg>
<status status="PASS" starttime="20201115 23:02:27.274" endtime="20201115 23:02:27.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.292" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.291" endtime="20201115 23:02:27.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.294" level="INFO">VALUE: [8.520899999999929e-05, 8.432000000000231e-05, 8.42919999999997e-05, 8.494499999999947e-05, 8.4846999999999e-05, 8.459699999999876e-05, 8.491600000000085e-05, 8.494399999999999e-05, 8.423600000000142e-05, 8.427700000000066e-05, 8.490199999999781e-05, 8.474999999999802e-05, 8.5153000000001e-05, 8.466700000000008e-05, 8.473599999999845e-05, 8.518000000000067e-05, 8.516700000000058e-05, 8.497300000000207e-05, 8.412500000000087e-05, 8.501400000000131e-05, 8.483400000000238e-05, 8.518100000000015e-05, 8.437500000000112e-05, 8.4153e-05, 8.506900000000012e-05, 8.436100000000155e-05, 8.441699999999983e-05, 8.43049999999998e-05, 8.438900000000069e-05, 8.451400000000081e-05, 8.462500000000137e-05, 8.463900000000094e-05, 8.459799999999823e-05, 8.444499999999897e-05, 8.425000000000099e-05, 8.438900000000069e-05, 8.413800000000096e-05, 8.469399999999974e-05, 8.499999999999827e-05, 8.504099999999751e-05, 8.505500000000055e-05, 8.436100000000155e-05, 8.455500000000005e-05, 8.480599999999977e-05, 8.505500000000055e-05, 8.452800000000038e-05, 8.508399999999916e-05, 8.487500000000162e-05, 8.486099999999858e-05, 8.499999999999827e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.293" endtime="20201115 23:02:27.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.288" endtime="20201115 23:02:27.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.297" endtime="20201115 23:02:27.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.301" endtime="20201115 23:02:27.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.299" endtime="20201115 23:02:27.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.296" endtime="20201115 23:02:27.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.927" endtime="20201115 23:02:27.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.925" endtime="20201115 23:02:27.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.924" endtime="20201115 23:02:27.322"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.324" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.332" endtime="20201115 23:02:27.353"></status>
</kw>
<msg timestamp="20201115 23:02:27.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.331" endtime="20201115 23:02:27.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.354" endtime="20201115 23:02:27.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.357" endtime="20201115 23:02:27.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.328" endtime="20201115 23:02:27.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.326" endtime="20201115 23:02:27.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.366" endtime="20201115 23:02:27.652"></status>
</kw>
<msg timestamp="20201115 23:02:27.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.364" endtime="20201115 23:02:27.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.656" endtime="20201115 23:02:27.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.664" endtime="20201115 23:02:27.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.362" endtime="20201115 23:02:27.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.360" endtime="20201115 23:02:27.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.671" level="INFO">${RESULT} = [{'time': 0.022659361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.552799999999791e-05, 'source_diff': 8.552799999999791e-05}, {'time': 0.022748389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.667" endtime="20201115 23:02:27.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.684" level="INFO">${ACCURACY} = {'diff': [8.552799999999791e-05, 8.54310000000004e-05, 8.56530000000015e-05, 8.544499999999997e-05, 8.561099999999933e-05, 8.559799999999923e-05, 8.59729999999996e-05, 8.544499999999997e-05, 8.5792000...</msg>
<status status="PASS" starttime="20201115 23:02:27.672" endtime="20201115 23:02:27.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.689" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.688" endtime="20201115 23:02:27.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.691" level="INFO">VALUE: [8.552799999999791e-05, 8.54310000000004e-05, 8.56530000000015e-05, 8.544499999999997e-05, 8.561099999999933e-05, 8.559799999999923e-05, 8.59729999999996e-05, 8.544499999999997e-05, 8.57920000000012e-05, 8.616599999999863e-05, 8.579100000000173e-05, 8.524999999999852e-05, 8.576399999999859e-05, 8.541599999999788e-05, 8.540299999999779e-05, 8.556900000000062e-05, 8.620799999999734e-05, 8.54310000000004e-05, 8.581999999999687e-05, 8.566700000000108e-05, 8.527800000000113e-05, 8.605600000000102e-05, 8.570800000000031e-05, 8.531900000000037e-05, 8.52920000000007e-05, 8.591599999999838e-05, 8.549999999999877e-05, 8.61249999999994e-05, 8.606900000000112e-05, 8.573599999999945e-05, 8.569500000000022e-05, 8.54310000000004e-05, 8.537499999999865e-05, 8.559699999999976e-05, 8.59859999999997e-05, 8.597200000000013e-05, 8.619500000000072e-05, 8.530600000000027e-05, 8.524999999999852e-05, 8.615299999999854e-05, 8.568000000000117e-05, 8.605600000000102e-05, 8.555500000000105e-05, 8.512500000000187e-05, 8.554099999999801e-05, 8.526400000000156e-05, 8.534700000000298e-05, 8.568099999999718e-05, 8.572199999999988e-05, 8.56249999999989e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.690" endtime="20201115 23:02:27.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.685" endtime="20201115 23:02:27.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.694" endtime="20201115 23:02:27.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.698" endtime="20201115 23:02:27.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.696" endtime="20201115 23:02:27.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.693" endtime="20201115 23:02:27.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.325" endtime="20201115 23:02:27.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.323" endtime="20201115 23:02:27.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.322" endtime="20201115 23:02:27.719"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.721" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.729" endtime="20201115 23:02:27.750"></status>
</kw>
<msg timestamp="20201115 23:02:27.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.728" endtime="20201115 23:02:27.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.751" endtime="20201115 23:02:27.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.754" endtime="20201115 23:02:27.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.725" endtime="20201115 23:02:27.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.723" endtime="20201115 23:02:27.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.762" endtime="20201115 23:02:28.047"></status>
</kw>
<msg timestamp="20201115 23:02:28.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021969736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.761" endtime="20201115 23:02:28.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021969736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.051" endtime="20201115 23:02:28.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.060" endtime="20201115 23:02:28.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.758" endtime="20201115 23:02:28.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.757" endtime="20201115 23:02:28.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.067" level="INFO">${RESULT} = [{'time': 0.022056681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694500000000147e-05, 'source_diff': 8.694500000000147e-05}, {'time': 0.022147681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:28.063" endtime="20201115 23:02:28.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.081" level="INFO">${ACCURACY} = {'diff': [8.694500000000147e-05, 8.71669999999991e-05, 8.686100000000058e-05, 8.623699999999943e-05, 8.637499999999965e-05, 8.611099999999983e-05, 8.66799999999987e-05, 8.611099999999983e-05, 8.642999...</msg>
<status status="PASS" starttime="20201115 23:02:28.068" endtime="20201115 23:02:28.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.085" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.084" endtime="20201115 23:02:28.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.087" level="INFO">VALUE: [8.694500000000147e-05, 8.71669999999991e-05, 8.686100000000058e-05, 8.623699999999943e-05, 8.637499999999965e-05, 8.611099999999983e-05, 8.66799999999987e-05, 8.611099999999983e-05, 8.642999999999845e-05, 8.688899999999972e-05, 8.644500000000097e-05, 8.631999999999737e-05, 8.69999999999968e-05, 8.706999999999812e-05, 8.68059999999983e-05, 8.63470000000005e-05, 8.64310000000014e-05, 8.672300000000036e-05, 8.700000000000027e-05, 8.672200000000088e-05, 8.713899999999997e-05, 8.654099999999901e-05, 8.705600000000202e-05, 8.623599999999995e-05, 8.690299999999929e-05, 8.718099999999868e-05, 8.673600000000045e-05, 8.626399999999909e-05, 8.668100000000165e-05, 8.673599999999698e-05, 8.624999999999952e-05, 8.663899999999947e-05, 8.687500000000015e-05, 8.63050000000018e-05, 8.647200000000063e-05, 8.66799999999987e-05, 8.636100000000008e-05, 8.622200000000038e-05, 8.647199999999716e-05, 8.705599999999855e-05, 8.626400000000256e-05, 8.630600000000127e-05, 8.66249999999999e-05, 8.630600000000127e-05, 8.624999999999952e-05, 8.638900000000269e-05, 8.638899999999922e-05, 8.622299999999986e-05, 8.64310000000014e-05, 8.642999999999845e-05]</msg>
<status status="PASS" starttime="20201115 23:02:28.086" endtime="20201115 23:02:28.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.082" endtime="20201115 23:02:28.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.091" endtime="20201115 23:02:28.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.094" endtime="20201115 23:02:28.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.092" endtime="20201115 23:02:28.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.089" endtime="20201115 23:02:28.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.722" endtime="20201115 23:02:28.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.720" endtime="20201115 23:02:28.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.719" endtime="20201115 23:02:28.115"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.117" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.126" endtime="20201115 23:02:28.146"></status>
</kw>
<msg timestamp="20201115 23:02:28.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.124" endtime="20201115 23:02:28.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.148" endtime="20201115 23:02:28.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.150" endtime="20201115 23:02:28.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.122" endtime="20201115 23:02:28.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.119" endtime="20201115 23:02:28.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.160" endtime="20201115 23:02:28.443"></status>
</kw>
<msg timestamp="20201115 23:02:28.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.158" endtime="20201115 23:02:28.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.448" endtime="20201115 23:02:28.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.456" endtime="20201115 23:02:28.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.155" endtime="20201115 23:02:28.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.153" endtime="20201115 23:02:28.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.462" level="INFO">${RESULT} = [{'time': 0.022023556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.781999999999887e-05, 'source_diff': 8.781999999999887e-05}, {'time': 0.022117542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:28.459" endtime="20201115 23:02:28.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.476" level="INFO">${ACCURACY} = {'diff': [8.781999999999887e-05, 8.81670000000001e-05, 8.73189999999989e-05, 8.761099999999786e-05, 8.74860000000012e-05, 8.811099999999836e-05, 8.801400000000084e-05, 8.729099999999976e-05, 8.7929999...</msg>
<status status="PASS" starttime="20201115 23:02:28.463" endtime="20201115 23:02:28.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.480" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.479" endtime="20201115 23:02:28.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.483" level="INFO">VALUE: [8.781999999999887e-05, 8.81670000000001e-05, 8.73189999999989e-05, 8.761099999999786e-05, 8.74860000000012e-05, 8.811099999999836e-05, 8.801400000000084e-05, 8.729099999999976e-05, 8.792999999999995e-05, 8.76799999999997e-05, 8.81250000000014e-05, 8.78059999999993e-05, 8.818099999999968e-05, 8.736100000000108e-05, 8.76250000000009e-05, 8.81389999999975e-05, 8.727700000000019e-05, 8.813900000000097e-05, 8.769499999999875e-05, 8.790300000000029e-05, 8.815300000000054e-05, 8.706899999999865e-05, 8.791699999999986e-05, 8.726400000000009e-05, 8.708299999999822e-05, 8.726400000000009e-05, 8.779199999999973e-05, 8.726400000000009e-05, 8.751400000000034e-05, 8.769399999999927e-05, 8.783299999999897e-05, 8.782000000000234e-05, 8.741699999999936e-05, 8.766600000000013e-05, 8.820799999999934e-05, 8.794399999999952e-05, 8.794400000000299e-05, 8.713899999999997e-05, 8.776400000000059e-05, 8.795799999999909e-05, 8.798599999999823e-05, 8.805599999999955e-05, 8.81670000000001e-05, 8.737500000000065e-05, 8.758300000000219e-05, 8.801400000000084e-05, 8.819399999999977e-05, 8.791699999999986e-05, 8.815300000000054e-05, 8.787500000000115e-05]</msg>
<status status="PASS" starttime="20201115 23:02:28.481" endtime="20201115 23:02:28.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.477" endtime="20201115 23:02:28.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.486" endtime="20201115 23:02:28.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.489" endtime="20201115 23:02:28.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.488" endtime="20201115 23:02:28.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.484" endtime="20201115 23:02:28.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.118" endtime="20201115 23:02:28.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.116" endtime="20201115 23:02:28.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.115" endtime="20201115 23:02:28.510"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.512" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.521" endtime="20201115 23:02:28.541"></status>
</kw>
<msg timestamp="20201115 23:02:28.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.519" endtime="20201115 23:02:28.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.543" endtime="20201115 23:02:28.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.546" endtime="20201115 23:02:28.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.516" endtime="20201115 23:02:28.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.514" endtime="20201115 23:02:28.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.555" endtime="20201115 23:02:28.840"></status>
</kw>
<msg timestamp="20201115 23:02:28.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022897361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.553" endtime="20201115 23:02:28.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022897361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.844" endtime="20201115 23:02:28.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.852" endtime="20201115 23:02:28.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.551" endtime="20201115 23:02:28.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.549" endtime="20201115 23:02:28.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.859" level="INFO">${RESULT} = [{'time': 0.022897361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.88190000000004e-05, 'source_diff': 8.88190000000004e-05}, {'time': 0.022990375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:28.856" endtime="20201115 23:02:28.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.874" level="INFO">${ACCURACY} = {'diff': [8.88190000000004e-05, 8.83059999999998e-05, 8.905600000000055e-05, 8.887499999999868e-05, 8.852800000000091e-05, 8.876399999999812e-05, 8.850000000000177e-05, 8.883299999999997e-05, 8.815300...</msg>
<status status="PASS" starttime="20201115 23:02:28.860" endtime="20201115 23:02:28.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.878" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.877" endtime="20201115 23:02:28.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.880" level="INFO">VALUE: [8.88190000000004e-05, 8.83059999999998e-05, 8.905600000000055e-05, 8.887499999999868e-05, 8.852800000000091e-05, 8.876399999999812e-05, 8.850000000000177e-05, 8.883299999999997e-05, 8.815300000000054e-05, 8.873699999999846e-05, 8.876399999999812e-05, 8.86800000000007e-05, 8.91800000000012e-05, 8.906899999999718e-05, 8.904199999999751e-05, 8.823600000000195e-05, 8.855600000000005e-05, 8.805599999999955e-05, 8.823599999999848e-05, 8.861100000000233e-05, 8.893100000000043e-05, 8.841700000000036e-05, 8.902700000000194e-05, 8.918100000000068e-05, 8.876399999999812e-05, 8.834700000000251e-05, 8.91800000000012e-05, 8.826399999999762e-05, 8.920800000000034e-05, 8.861099999999886e-05, 8.894400000000052e-05, 8.838899999999775e-05, 8.898599999999923e-05, 8.879200000000073e-05, 8.905600000000055e-05, 8.907000000000012e-05, 8.843099999999993e-05, 8.886199999999858e-05, 8.908300000000022e-05, 8.89999999999988e-05, 8.890199999999834e-05, 8.905500000000108e-05, 8.830500000000033e-05, 8.868100000000018e-05, 8.870799999999984e-05, 8.91389999999985e-05, 8.913900000000197e-05, 8.874999999999855e-05, 8.831999999999937e-05, 8.862499999999843e-05]</msg>
<status status="PASS" starttime="20201115 23:02:28.879" endtime="20201115 23:02:28.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.874" endtime="20201115 23:02:28.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.884" endtime="20201115 23:02:28.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.887" endtime="20201115 23:02:28.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.885" endtime="20201115 23:02:28.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.882" endtime="20201115 23:02:28.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.513" endtime="20201115 23:02:28.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.511" endtime="20201115 23:02:28.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.511" endtime="20201115 23:02:28.908"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.910" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.919" endtime="20201115 23:02:28.939"></status>
</kw>
<msg timestamp="20201115 23:02:28.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.917" endtime="20201115 23:02:28.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.941" endtime="20201115 23:02:28.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.943" endtime="20201115 23:02:28.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.914" endtime="20201115 23:02:28.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.912" endtime="20201115 23:02:28.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.952" endtime="20201115 23:02:29.237"></status>
</kw>
<msg timestamp="20201115 23:02:29.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.950" endtime="20201115 23:02:29.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.242" endtime="20201115 23:02:29.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.250" endtime="20201115 23:02:29.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.948" endtime="20201115 23:02:29.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.946" endtime="20201115 23:02:29.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.256" level="INFO">${RESULT} = [{'time': 0.022375486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.979199999999826e-05, 'source_diff': 8.979199999999826e-05}, {'time': 0.0224705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:29.253" endtime="20201115 23:02:29.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.269" level="INFO">${ACCURACY} = {'diff': [8.979199999999826e-05, 8.99999999999998e-05, 8.959700000000029e-05, 8.932000000000037e-05, 8.98060000000013e-05, 9.008299999999775e-05, 8.961100000000333e-05, 8.958400000000019e-05, 8.995800...</msg>
<status status="PASS" starttime="20201115 23:02:29.257" endtime="20201115 23:02:29.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.274" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.273" endtime="20201115 23:02:29.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.276" level="INFO">VALUE: [8.979199999999826e-05, 8.99999999999998e-05, 8.959700000000029e-05, 8.932000000000037e-05, 8.98060000000013e-05, 9.008299999999775e-05, 8.961100000000333e-05, 8.958400000000019e-05, 8.995800000000109e-05, 8.99999999999998e-05, 8.927800000000166e-05, 8.983300000000097e-05, 9.001399999999937e-05, 8.93190000000009e-05, 9.020799999999787e-05, 8.98190000000014e-05, 9.005499999999861e-05, 8.957000000000062e-05, 9.005599999999808e-05, 8.933399999999994e-05, 8.955600000000105e-05, 8.938900000000222e-05, 8.972299999999989e-05, 8.974999999999955e-05, 9.013800000000002e-05, 8.940300000000179e-05, 8.986100000000011e-05, 9.002799999999894e-05, 8.961099999999986e-05, 8.9638999999999e-05, 8.918099999999721e-05, 9.007000000000112e-05, 8.975000000000302e-05, 8.973599999999998e-05, 8.982000000000087e-05, 8.912499999999893e-05, 8.951399999999887e-05, 8.924999999999905e-05, 8.925000000000252e-05, 8.938899999999875e-05, 8.929100000000176e-05, 8.96939999999978e-05, 8.980499999999836e-05, 8.956900000000115e-05, 8.929100000000176e-05, 8.951400000000234e-05, 8.926400000000209e-05, 8.990299999999882e-05, 8.911100000000283e-05, 8.938899999999875e-05]</msg>
<status status="PASS" starttime="20201115 23:02:29.275" endtime="20201115 23:02:29.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.270" endtime="20201115 23:02:29.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.280" endtime="20201115 23:02:29.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.283" endtime="20201115 23:02:29.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.281" endtime="20201115 23:02:29.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.278" endtime="20201115 23:02:29.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.911" endtime="20201115 23:02:29.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.909" endtime="20201115 23:02:29.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.908" endtime="20201115 23:02:29.304"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.307" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.315" endtime="20201115 23:02:29.334"></status>
</kw>
<msg timestamp="20201115 23:02:29.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.313" endtime="20201115 23:02:29.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.336" endtime="20201115 23:02:29.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.338" endtime="20201115 23:02:29.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.311" endtime="20201115 23:02:29.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.309" endtime="20201115 23:02:29.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.347" endtime="20201115 23:02:29.632"></status>
</kw>
<msg timestamp="20201115 23:02:29.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.346" endtime="20201115 23:02:29.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.637" endtime="20201115 23:02:29.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.645" endtime="20201115 23:02:29.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.343" endtime="20201115 23:02:29.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.342" endtime="20201115 23:02:29.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.651" level="INFO">${RESULT} = [{'time': 0.022289458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.077700000000022e-05, 'source_diff': 9.077700000000022e-05}, {'time': 0.022385486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:29.648" endtime="20201115 23:02:29.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.664" level="INFO">${ACCURACY} = {'diff': [9.077700000000022e-05, 9.038899999999975e-05, 9.034799999999704e-05, 9.072199999999794e-05, 9.095800000000209e-05, 9.080599999999883e-05, 9.090299999999982e-05, 9.043100000000193e-05, 9.0459...</msg>
<status status="PASS" starttime="20201115 23:02:29.652" endtime="20201115 23:02:29.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.669" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.668" endtime="20201115 23:02:29.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.671" level="INFO">VALUE: [9.077700000000022e-05, 9.038899999999975e-05, 9.034799999999704e-05, 9.072199999999794e-05, 9.095800000000209e-05, 9.080599999999883e-05, 9.090299999999982e-05, 9.043100000000193e-05, 9.045900000000107e-05, 9.051399999999987e-05, 9.083400000000144e-05, 9.047200000000116e-05, 9.075000000000055e-05, 9.08329999999985e-05, 9.048600000000073e-05, 9.048600000000073e-05, 9.067999999999923e-05, 9.11800000000032e-05, 9.023600000000048e-05, 9.108299999999875e-05, 9.044499999999803e-05, 9.051399999999987e-05, 9.033300000000147e-05, 9.106999999999865e-05, 9.051399999999987e-05, 9.01670000000021e-05, 9.05000000000003e-05, 9.094400000000252e-05, 9.11390000000005e-05, 9.062500000000043e-05, 9.080500000000283e-05, 9.055500000000258e-05, 9.058299999999825e-05, 9.044499999999803e-05, 9.087500000000068e-05, 9.011100000000036e-05, 9.102799999999994e-05, 9.118099999999921e-05, 9.034700000000104e-05, 9.056899999999868e-05, 9.036100000000061e-05, 9.086100000000111e-05, 9.101400000000037e-05, 9.086099999999764e-05, 9.087500000000068e-05, 9.038899999999975e-05, 9.025000000000005e-05, 9.051399999999987e-05, 9.093099999999896e-05, 9.105599999999908e-05]</msg>
<status status="PASS" starttime="20201115 23:02:29.670" endtime="20201115 23:02:29.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.665" endtime="20201115 23:02:29.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.675" endtime="20201115 23:02:29.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.678" endtime="20201115 23:02:29.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.677" endtime="20201115 23:02:29.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.673" endtime="20201115 23:02:29.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.307" endtime="20201115 23:02:29.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.306" endtime="20201115 23:02:29.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.305" endtime="20201115 23:02:29.700"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.702" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.710" endtime="20201115 23:02:29.730"></status>
</kw>
<msg timestamp="20201115 23:02:29.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.708" endtime="20201115 23:02:29.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.731" endtime="20201115 23:02:29.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.734" endtime="20201115 23:02:29.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.706" endtime="20201115 23:02:29.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.704" endtime="20201115 23:02:29.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.743" endtime="20201115 23:02:30.028"></status>
</kw>
<msg timestamp="20201115 23:02:30.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02188975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:29.741" endtime="20201115 23:02:30.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02188975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:30.033" endtime="20201115 23:02:30.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.041" endtime="20201115 23:02:30.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.739" endtime="20201115 23:02:30.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.737" endtime="20201115 23:02:30.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.047" level="INFO">${RESULT} = [{'time': 0.021981444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.16939999999998e-05, 'source_diff': 9.16939999999998e-05}, {'time': 0.022079486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:30.044" endtime="20201115 23:02:30.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.060" level="INFO">${ACCURACY} = {'diff': [9.16939999999998e-05, 9.204200000000051e-05, 9.162500000000143e-05, 9.145799999999912e-05, 9.177800000000069e-05, 9.20139999999979e-05, 9.193000000000048e-05, 9.151400000000087e-05, 9.211099...</msg>
<status status="PASS" starttime="20201115 23:02:30.048" endtime="20201115 23:02:30.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.065" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.064" endtime="20201115 23:02:30.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.068" level="INFO">VALUE: [9.16939999999998e-05, 9.204200000000051e-05, 9.162500000000143e-05, 9.145799999999912e-05, 9.177800000000069e-05, 9.20139999999979e-05, 9.193000000000048e-05, 9.151400000000087e-05, 9.211099999999889e-05, 9.162499999999796e-05, 9.132000000000237e-05, 9.186099999999864e-05, 9.206999999999965e-05, 9.152700000000097e-05, 9.130499999999986e-05, 9.179100000000079e-05, 9.144399999999955e-05, 9.159700000000229e-05, 9.206900000000018e-05, 9.211100000000236e-05, 9.181899999999993e-05, 9.132000000000237e-05, 9.187500000000168e-05, 9.21390000000015e-05, 9.219499999999978e-05, 9.179200000000026e-05, 9.174999999999808e-05, 9.13199999999989e-05, 9.14589999999986e-05, 9.201400000000137e-05, 9.193000000000048e-05, 9.204100000000104e-05, 9.21940000000003e-05, 9.216600000000116e-05, 9.18329999999995e-05, 9.170799999999937e-05, 9.126400000000062e-05, 9.193000000000048e-05, 9.145900000000207e-05, 9.202800000000094e-05, 9.138800000000127e-05, 9.159800000000176e-05, 9.151400000000087e-05, 9.130499999999986e-05, 9.133300000000247e-05, 9.142999999999998e-05, 9.186100000000211e-05, 9.155500000000011e-05, 9.155599999999958e-05, 9.211099999999889e-05]</msg>
<status status="PASS" starttime="20201115 23:02:30.066" endtime="20201115 23:02:30.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.061" endtime="20201115 23:02:30.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.071" endtime="20201115 23:02:30.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.074" endtime="20201115 23:02:30.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.073" endtime="20201115 23:02:30.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.069" endtime="20201115 23:02:30.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.702" endtime="20201115 23:02:30.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.701" endtime="20201115 23:02:30.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.700" endtime="20201115 23:02:30.096"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.098" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.107" endtime="20201115 23:02:30.129"></status>
</kw>
<msg timestamp="20201115 23:02:30.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.106" endtime="20201115 23:02:30.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.130" endtime="20201115 23:02:30.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.133" endtime="20201115 23:02:30.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.103" endtime="20201115 23:02:30.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.101" endtime="20201115 23:02:30.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.142" endtime="20201115 23:02:30.427"></status>
</kw>
<msg timestamp="20201115 23:02:30.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024201847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024294278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.140" endtime="20201115 23:02:30.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024201847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024294278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.431" endtime="20201115 23:02:30.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.440" endtime="20201115 23:02:30.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.138" endtime="20201115 23:02:30.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.136" endtime="20201115 23:02:30.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.446" level="INFO">${RESULT} = [{'time': 0.024294278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.243100000000046e-05, 'source_diff': 9.243100000000046e-05}, {'time': 0.024390306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:30.443" endtime="20201115 23:02:30.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.461" level="INFO">${ACCURACY} = {'diff': [9.243100000000046e-05, 9.244500000000003e-05, 9.237499999999871e-05, 9.299999999999933e-05, 9.279100000000179e-05, 9.298599999999976e-05, 9.234700000000304e-05, 9.299999999999933e-05, 9.2264...</msg>
<status status="PASS" starttime="20201115 23:02:30.447" endtime="20201115 23:02:30.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.465" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.464" endtime="20201115 23:02:30.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.468" level="INFO">VALUE: [9.243100000000046e-05, 9.244500000000003e-05, 9.237499999999871e-05, 9.299999999999933e-05, 9.279100000000179e-05, 9.298599999999976e-05, 9.234700000000304e-05, 9.299999999999933e-05, 9.226400000000162e-05, 9.274999999999908e-05, 9.268100000000071e-05, 9.299999999999933e-05, 9.244500000000003e-05, 9.307000000000065e-05, 9.280600000000083e-05, 9.244500000000003e-05, 9.258399999999972e-05, 9.31659999999987e-05, 9.212500000000193e-05, 9.311099999999989e-05, 9.274999999999908e-05, 9.263899999999853e-05, 9.268000000000123e-05, 9.230600000000033e-05, 9.319500000000078e-05, 9.279200000000126e-05, 9.268100000000071e-05, 9.287499999999921e-05, 9.249999999999883e-05, 9.291700000000139e-05, 9.220899999999935e-05, 9.242999999999751e-05, 9.231900000000043e-05, 9.25000000000023e-05, 9.211099999999889e-05, 9.261100000000286e-05, 9.268000000000123e-05, 9.281900000000093e-05, 9.306900000000118e-05, 9.299999999999933e-05, 9.252800000000144e-05, 9.261099999999939e-05, 9.263799999999905e-05, 9.31940000000013e-05, 9.280600000000083e-05, 9.277699999999875e-05, 9.223600000000248e-05, 9.242999999999751e-05, 9.244500000000003e-05, 9.308300000000075e-05]</msg>
<status status="PASS" starttime="20201115 23:02:30.466" endtime="20201115 23:02:30.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.462" endtime="20201115 23:02:30.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.471" endtime="20201115 23:02:30.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.474" endtime="20201115 23:02:30.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.473" endtime="20201115 23:02:30.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.469" endtime="20201115 23:02:30.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.099" endtime="20201115 23:02:30.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.097" endtime="20201115 23:02:30.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.096" endtime="20201115 23:02:30.495"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.498" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.506" endtime="20201115 23:02:30.527"></status>
</kw>
<msg timestamp="20201115 23:02:30.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.504" endtime="20201115 23:02:30.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.528" endtime="20201115 23:02:30.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.531" endtime="20201115 23:02:30.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.502" endtime="20201115 23:02:30.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.500" endtime="20201115 23:02:30.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.540" endtime="20201115 23:02:30.825"></status>
</kw>
<msg timestamp="20201115 23:02:30.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.538" endtime="20201115 23:02:30.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.829" endtime="20201115 23:02:30.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.841" endtime="20201115 23:02:30.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.535" endtime="20201115 23:02:30.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.534" endtime="20201115 23:02:30.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.848" level="INFO">${RESULT} = [{'time': 0.021985597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.387500000000021e-05, 'source_diff': 9.387500000000021e-05}, {'time': 0.022085597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:30.844" endtime="20201115 23:02:30.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.861" level="INFO">${ACCURACY} = {'diff': [9.387500000000021e-05, 9.39859999999973e-05, 9.354199999999854e-05, 9.329200000000176e-05, 9.354200000000201e-05, 9.400000000000033e-05, 9.338900000000275e-05, 9.336100000000014e-05, 9.41809...</msg>
<status status="PASS" starttime="20201115 23:02:30.849" endtime="20201115 23:02:30.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.865" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.864" endtime="20201115 23:02:30.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.868" level="INFO">VALUE: [9.387500000000021e-05, 9.39859999999973e-05, 9.354199999999854e-05, 9.329200000000176e-05, 9.354200000000201e-05, 9.400000000000033e-05, 9.338900000000275e-05, 9.336100000000014e-05, 9.418099999999874e-05, 9.363899999999953e-05, 9.330600000000133e-05, 9.380499999999889e-05, 9.380499999999889e-05, 9.349999999999983e-05, 9.36940000000018e-05, 9.345799999999765e-05, 9.359700000000082e-05, 9.388899999999978e-05, 9.373600000000051e-05, 9.344500000000103e-05, 9.311099999999989e-05, 9.373599999999704e-05, 9.369500000000128e-05, 9.366700000000214e-05, 9.379199999999879e-05, 9.348600000000026e-05, 9.34720000000007e-05, 9.419399999999883e-05, 9.366700000000214e-05, 9.336100000000014e-05, 9.344400000000155e-05, 9.349999999999983e-05, 9.398600000000076e-05, 9.362499999999996e-05, 9.40139999999999e-05, 9.381999999999793e-05, 9.331999999999743e-05, 9.324999999999958e-05, 9.361199999999986e-05, 9.412500000000046e-05, 9.345800000000112e-05, 9.312500000000293e-05, 9.344400000000155e-05, 9.316699999999817e-05, 9.39720000000012e-05, 9.402799999999947e-05, 9.326399999999915e-05, 9.354199999999854e-05, 9.333400000000047e-05, 9.363899999999953e-05]</msg>
<status status="PASS" starttime="20201115 23:02:30.866" endtime="20201115 23:02:30.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.862" endtime="20201115 23:02:30.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.871" endtime="20201115 23:02:30.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.874" endtime="20201115 23:02:30.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.873" endtime="20201115 23:02:30.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.869" endtime="20201115 23:02:30.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.498" endtime="20201115 23:02:30.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.496" endtime="20201115 23:02:30.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.496" endtime="20201115 23:02:30.895"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.898" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.906" endtime="20201115 23:02:30.926"></status>
</kw>
<msg timestamp="20201115 23:02:30.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.904" endtime="20201115 23:02:30.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.927" endtime="20201115 23:02:30.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.930" endtime="20201115 23:02:30.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.902" endtime="20201115 23:02:30.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.900" endtime="20201115 23:02:30.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.939" endtime="20201115 23:02:31.225"></status>
</kw>
<msg timestamp="20201115 23:02:31.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:30.937" endtime="20201115 23:02:31.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:31.229" endtime="20201115 23:02:31.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.238" endtime="20201115 23:02:31.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.934" endtime="20201115 23:02:31.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.933" endtime="20201115 23:02:31.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.244" level="INFO">${RESULT} = [{'time': 0.021832917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.491699999999992e-05, 'source_diff': 9.491699999999992e-05}, {'time': 0.021931931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:31.241" endtime="20201115 23:02:31.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.257" level="INFO">${ACCURACY} = {'diff': [9.491699999999992e-05, 9.487500000000121e-05, 9.466700000000314e-05, 9.481899999999946e-05, 9.486100000000164e-05, 9.461099999999792e-05, 9.422199999999797e-05, 9.493000000000001e-05, 9.5068...</msg>
<status status="PASS" starttime="20201115 23:02:31.245" endtime="20201115 23:02:31.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.262" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.261" endtime="20201115 23:02:31.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.264" level="INFO">VALUE: [9.491699999999992e-05, 9.487500000000121e-05, 9.466700000000314e-05, 9.481899999999946e-05, 9.486100000000164e-05, 9.461099999999792e-05, 9.422199999999797e-05, 9.493000000000001e-05, 9.506899999999971e-05, 9.450000000000083e-05, 9.49720000000022e-05, 9.519500000000278e-05, 9.48469999999986e-05, 9.516700000000017e-05, 9.486099999999817e-05, 9.469500000000228e-05, 9.430499999999939e-05, 9.495799999999915e-05, 9.499999999999786e-05, 9.518000000000026e-05, 9.461099999999792e-05, 9.463900000000053e-05, 9.441700000000289e-05, 9.511100000000189e-05, 9.475000000000108e-05, 9.486099999999817e-05, 9.468099999999924e-05, 9.454199999999954e-05, 9.461099999999792e-05, 9.427700000000025e-05, 9.451300000000093e-05, 9.46940000000028e-05, 9.454100000000007e-05, 9.488900000000078e-05, 9.518000000000026e-05, 9.518000000000026e-05, 9.481900000000293e-05, 9.486100000000164e-05, 9.44859999999978e-05, 9.444499999999856e-05, 9.469499999999881e-05, 9.48339999999985e-05, 9.519499999999931e-05, 9.491699999999992e-05, 9.477699999999728e-05, 9.487499999999774e-05, 9.518000000000026e-05, 9.43469999999981e-05, 9.513899999999756e-05, 9.430499999999939e-05]</msg>
<status status="PASS" starttime="20201115 23:02:31.263" endtime="20201115 23:02:31.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.258" endtime="20201115 23:02:31.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.267" endtime="20201115 23:02:31.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.271" endtime="20201115 23:02:31.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.269" endtime="20201115 23:02:31.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.266" endtime="20201115 23:02:31.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.898" endtime="20201115 23:02:31.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.896" endtime="20201115 23:02:31.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.896" endtime="20201115 23:02:31.292"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.294" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.302" endtime="20201115 23:02:31.322"></status>
</kw>
<msg timestamp="20201115 23:02:31.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.301" endtime="20201115 23:02:31.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.324" endtime="20201115 23:02:31.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.327" endtime="20201115 23:02:31.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.298" endtime="20201115 23:02:31.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.296" endtime="20201115 23:02:31.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.336" endtime="20201115 23:02:31.620"></status>
</kw>
<msg timestamp="20201115 23:02:31.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.334" endtime="20201115 23:02:31.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.624" endtime="20201115 23:02:31.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.632" endtime="20201115 23:02:31.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.332" endtime="20201115 23:02:31.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.330" endtime="20201115 23:02:31.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.639" level="INFO">${RESULT} = [{'time': 0.021872722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.536100000000214e-05, 'source_diff': 9.536100000000214e-05}, {'time': 0.021972722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:31.635" endtime="20201115 23:02:31.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.652" level="INFO">${ACCURACY} = {'diff': [9.536100000000214e-05, 9.593000000000101e-05, 9.586100000000264e-05, 9.613899999999856e-05, 9.593000000000101e-05, 9.612500000000246e-05, 9.573599999999904e-05, 9.604200000000104e-05, 9.6056...</msg>
<status status="PASS" starttime="20201115 23:02:31.640" endtime="20201115 23:02:31.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.657" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.656" endtime="20201115 23:02:31.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.659" level="INFO">VALUE: [9.536100000000214e-05, 9.593000000000101e-05, 9.586100000000264e-05, 9.613899999999856e-05, 9.593000000000101e-05, 9.612500000000246e-05, 9.573599999999904e-05, 9.604200000000104e-05, 9.605600000000061e-05, 9.599999999999886e-05, 9.591700000000092e-05, 9.558299999999978e-05, 9.601399999999843e-05, 9.572299999999895e-05, 9.605500000000114e-05, 9.586100000000264e-05, 9.581899999999699e-05, 9.526400000000115e-05, 9.559699999999935e-05, 9.552800000000097e-05, 9.601399999999843e-05, 9.541700000000042e-05, 9.605599999999714e-05, 9.531899999999996e-05, 9.523600000000201e-05, 9.611199999999889e-05, 9.53880000000018e-05, 9.619400000000083e-05, 9.593000000000101e-05, 9.574999999999861e-05, 9.568000000000076e-05, 9.526400000000115e-05, 9.538900000000128e-05, 9.559700000000282e-05, 9.544499999999956e-05, 9.543099999999999e-05, 9.600000000000233e-05, 9.562499999999849e-05, 9.558399999999925e-05, 9.595800000000015e-05, 9.601300000000243e-05, 9.592999999999755e-05, 9.566599999999773e-05, 9.581900000000046e-05, 9.56660000000012e-05, 9.531899999999996e-05, 9.559699999999935e-05, 9.536099999999867e-05, 9.619500000000031e-05, 9.540299999999738e-05]</msg>
<status status="PASS" starttime="20201115 23:02:31.658" endtime="20201115 23:02:31.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.653" endtime="20201115 23:02:31.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.662" endtime="20201115 23:02:31.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.665" endtime="20201115 23:02:31.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.664" endtime="20201115 23:02:31.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.660" endtime="20201115 23:02:31.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.295" endtime="20201115 23:02:31.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.293" endtime="20201115 23:02:31.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.292" endtime="20201115 23:02:31.686"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.689" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.697" endtime="20201115 23:02:31.719"></status>
</kw>
<msg timestamp="20201115 23:02:31.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.696" endtime="20201115 23:02:31.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.720" endtime="20201115 23:02:31.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.723" endtime="20201115 23:02:31.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.693" endtime="20201115 23:02:31.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.691" endtime="20201115 23:02:31.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.732" endtime="20201115 23:02:32.017"></status>
</kw>
<msg timestamp="20201115 23:02:32.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023135306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023232389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.730" endtime="20201115 23:02:32.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023135306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023232389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.022" endtime="20201115 23:02:32.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.030" endtime="20201115 23:02:32.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.728" endtime="20201115 23:02:32.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.726" endtime="20201115 23:02:32.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.036" level="INFO">${RESULT} = [{'time': 0.023232389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.708299999999781e-05, 'source_diff': 9.708299999999781e-05}, {'time': 0.023331389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:32.033" endtime="20201115 23:02:32.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.051" level="INFO">${ACCURACY} = {'diff': [9.708299999999781e-05, 9.63470000000001e-05, 9.676399999999918e-05, 9.662499999999949e-05, 9.613799999999909e-05, 9.673600000000004e-05, 9.718100000000174e-05, 9.611099999999942e-05, 9.70689...</msg>
<status status="PASS" starttime="20201115 23:02:32.037" endtime="20201115 23:02:32.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.055" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.054" endtime="20201115 23:02:32.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.058" level="INFO">VALUE: [9.708299999999781e-05, 9.63470000000001e-05, 9.676399999999918e-05, 9.662499999999949e-05, 9.613799999999909e-05, 9.673600000000004e-05, 9.718100000000174e-05, 9.611099999999942e-05, 9.706899999999824e-05, 9.680499999999842e-05, 9.705600000000161e-05, 9.691700000000192e-05, 9.644400000000108e-05, 9.713899999999956e-05, 9.713899999999956e-05, 9.630600000000086e-05, 9.654199999999807e-05, 9.677699999999928e-05, 9.69730000000002e-05, 9.699999999999986e-05, 9.623600000000301e-05, 9.623599999999954e-05, 9.623599999999954e-05, 9.683300000000103e-05, 9.662499999999949e-05, 9.715299999999913e-05, 9.654200000000154e-05, 9.673600000000004e-05, 9.690300000000235e-05, 9.643099999999752e-05, 9.699999999999986e-05, 9.669499999999734e-05, 9.631900000000096e-05, 9.686100000000017e-05, 9.686100000000017e-05, 9.691599999999898e-05, 9.708299999999781e-05, 9.623600000000301e-05, 9.638899999999881e-05, 9.686100000000017e-05, 9.666700000000167e-05, 9.673600000000004e-05, 9.712499999999999e-05, 9.691700000000192e-05, 9.682000000000093e-05, 9.691700000000192e-05, 9.624999999999911e-05, 9.643000000000151e-05, 9.687499999999974e-05, 9.669399999999786e-05]</msg>
<status status="PASS" starttime="20201115 23:02:32.056" endtime="20201115 23:02:32.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.052" endtime="20201115 23:02:32.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.061" endtime="20201115 23:02:32.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.064" endtime="20201115 23:02:32.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.063" endtime="20201115 23:02:32.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.059" endtime="20201115 23:02:32.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.689" endtime="20201115 23:02:32.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.688" endtime="20201115 23:02:32.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.687" endtime="20201115 23:02:32.086"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.088" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.096" endtime="20201115 23:02:32.117"></status>
</kw>
<msg timestamp="20201115 23:02:32.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.095" endtime="20201115 23:02:32.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.118" endtime="20201115 23:02:32.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.121" endtime="20201115 23:02:32.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.092" endtime="20201115 23:02:32.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.090" endtime="20201115 23:02:32.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.131" endtime="20201115 23:02:32.416"></status>
</kw>
<msg timestamp="20201115 23:02:32.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022234181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.129" endtime="20201115 23:02:32.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022234181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.421" endtime="20201115 23:02:32.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.429" endtime="20201115 23:02:32.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.126" endtime="20201115 23:02:32.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.124" endtime="20201115 23:02:32.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.435" level="INFO">${RESULT} = [{'time': 0.022331958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.777700000000028e-05, 'source_diff': 9.777700000000028e-05}, {'time': 0.022432972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:32.432" endtime="20201115 23:02:32.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.449" level="INFO">${ACCURACY} = {'diff': [9.777700000000028e-05, 9.794399999999912e-05, 9.762500000000049e-05, 9.815300000000013e-05, 9.775000000000061e-05, 9.78059999999989e-05, 9.776400000000018e-05, 9.732000000000143e-05, 9.74309...</msg>
<status status="PASS" starttime="20201115 23:02:32.436" endtime="20201115 23:02:32.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.453" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.452" endtime="20201115 23:02:32.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.456" level="INFO">VALUE: [9.777700000000028e-05, 9.794399999999912e-05, 9.762500000000049e-05, 9.815300000000013e-05, 9.775000000000061e-05, 9.78059999999989e-05, 9.776400000000018e-05, 9.732000000000143e-05, 9.743099999999852e-05, 9.741700000000242e-05, 9.730499999999892e-05, 9.775000000000061e-05, 9.711100000000042e-05, 9.729199999999882e-05, 9.813900000000056e-05, 9.808299999999881e-05, 9.8028e-05, 9.795799999999869e-05, 9.782000000000193e-05, 9.762499999999702e-05, 9.806999999999871e-05, 9.811100000000142e-05, 9.812500000000099e-05, 9.790299999999988e-05, 9.73470000000011e-05, 9.731900000000196e-05, 9.775000000000061e-05, 9.750000000000036e-05, 9.762500000000049e-05, 9.750000000000036e-05, 9.73470000000011e-05, 9.751399999999993e-05, 9.790199999999694e-05, 9.754199999999907e-05, 9.813899999999709e-05, 9.748599999999732e-05, 9.725000000000011e-05, 9.804199999999957e-05, 9.770900000000138e-05, 9.73470000000011e-05, 9.804199999999957e-05, 9.801400000000043e-05, 9.741599999999948e-05, 9.763900000000006e-05, 9.801400000000043e-05, 9.744500000000156e-05, 9.781999999999846e-05, 9.78470000000016e-05, 9.769499999999834e-05, 9.727699999999978e-05]</msg>
<status status="PASS" starttime="20201115 23:02:32.454" endtime="20201115 23:02:32.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.450" endtime="20201115 23:02:32.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.459" endtime="20201115 23:02:32.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.463" endtime="20201115 23:02:32.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.461" endtime="20201115 23:02:32.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.457" endtime="20201115 23:02:32.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.089" endtime="20201115 23:02:32.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.087" endtime="20201115 23:02:32.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.086" endtime="20201115 23:02:32.484"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.486" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.494" endtime="20201115 23:02:32.514"></status>
</kw>
<msg timestamp="20201115 23:02:32.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.492" endtime="20201115 23:02:32.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.516" endtime="20201115 23:02:32.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.518" endtime="20201115 23:02:32.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.490" endtime="20201115 23:02:32.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.488" endtime="20201115 23:02:32.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.527" endtime="20201115 23:02:32.813"></status>
</kw>
<msg timestamp="20201115 23:02:32.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.526" endtime="20201115 23:02:32.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.817" endtime="20201115 23:02:32.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.825" endtime="20201115 23:02:32.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.523" endtime="20201115 23:02:32.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.522" endtime="20201115 23:02:32.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.832" level="INFO">${RESULT} = [{'time': 0.021962139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.894499999999959e-05, 'source_diff': 9.894499999999959e-05}, {'time': 0.022065139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:32.828" endtime="20201115 23:02:32.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.845" level="INFO">${ACCURACY} = {'diff': [9.894499999999959e-05, 9.881999999999946e-05, 9.893100000000002e-05, 9.869499999999934e-05, 9.898599999999882e-05, 9.823599999999807e-05, 9.89730000000022e-05, 9.850000000000136e-05, 9.86800...</msg>
<status status="PASS" starttime="20201115 23:02:32.833" endtime="20201115 23:02:32.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.850" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.849" endtime="20201115 23:02:32.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.853" level="INFO">VALUE: [9.894499999999959e-05, 9.881999999999946e-05, 9.893100000000002e-05, 9.869499999999934e-05, 9.898599999999882e-05, 9.823599999999807e-05, 9.89730000000022e-05, 9.850000000000136e-05, 9.86800000000003e-05, 9.859699999999888e-05, 9.891600000000098e-05, 9.884699999999913e-05, 9.856900000000321e-05, 9.862500000000149e-05, 9.85280000000005e-05, 9.883399999999903e-05, 9.919499999999984e-05, 9.890299999999741e-05, 9.906999999999971e-05, 9.901300000000196e-05, 9.848700000000127e-05, 9.843099999999952e-05, 9.843000000000005e-05, 9.891600000000098e-05, 9.894400000000012e-05, 9.913900000000156e-05, 9.887499999999827e-05, 9.89999999999984e-05, 9.891700000000045e-05, 9.891700000000045e-05, 9.834699999999863e-05, 9.919499999999984e-05, 9.880500000000042e-05, 9.873699999999805e-05, 9.825000000000111e-05, 9.894400000000012e-05, 9.862499999999802e-05, 9.91670000000007e-05, 9.906999999999971e-05, 9.851400000000093e-05, 9.841699999999995e-05, 9.851400000000093e-05, 9.89860000000023e-05, 9.868099999999977e-05, 9.837500000000124e-05, 9.825000000000111e-05, 9.92219999999995e-05, 9.920799999999994e-05, 9.888900000000131e-05, 9.823599999999807e-05]</msg>
<status status="PASS" starttime="20201115 23:02:32.851" endtime="20201115 23:02:32.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.846" endtime="20201115 23:02:32.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.856" endtime="20201115 23:02:32.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.859" endtime="20201115 23:02:32.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.857" endtime="20201115 23:02:32.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.854" endtime="20201115 23:02:32.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.487" endtime="20201115 23:02:32.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.485" endtime="20201115 23:02:32.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.484" endtime="20201115 23:02:32.880"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.883" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.891" endtime="20201115 23:02:32.911"></status>
</kw>
<msg timestamp="20201115 23:02:32.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.889" endtime="20201115 23:02:32.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.912" endtime="20201115 23:02:32.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.915" endtime="20201115 23:02:32.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.887" endtime="20201115 23:02:32.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.885" endtime="20201115 23:02:32.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.924" endtime="20201115 23:02:33.210"></status>
</kw>
<msg timestamp="20201115 23:02:33.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.922" endtime="20201115 23:02:33.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.214" endtime="20201115 23:02:33.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.222" endtime="20201115 23:02:33.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.920" endtime="20201115 23:02:33.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.918" endtime="20201115 23:02:33.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.229" level="INFO">${RESULT} = [{'time': 0.022017431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.931999999999996e-05, 'source_diff': 9.931999999999996e-05}, {'time': 0.022119431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:33.226" endtime="20201115 23:02:33.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.243" level="INFO">${ACCURACY} = {'diff': [9.931999999999996e-05, 9.911199999999842e-05, 0.00010011199999999942, 0.00010015299999999866, 9.933300000000006e-05, 9.938899999999834e-05, 0.00010005600000000114, 9.931900000000049e-05, 0.0...</msg>
<status status="PASS" starttime="20201115 23:02:33.230" endtime="20201115 23:02:33.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.247" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.246" endtime="20201115 23:02:33.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.250" level="INFO">VALUE: [9.931999999999996e-05, 9.911199999999842e-05, 0.00010011199999999942, 0.00010015299999999866, 9.933300000000006e-05, 9.938899999999834e-05, 0.00010005600000000114, 9.931900000000049e-05, 0.00010008400000000028, 9.955600000000064e-05, 0.00010019500000000084, 9.968100000000077e-05, 9.982000000000046e-05, 9.96670000000012e-05, 9.954200000000107e-05, 9.974999999999914e-05, 9.937499999999877e-05, 9.9722e-05, 9.987500000000274e-05, 9.980500000000142e-05, 9.965300000000163e-05, 9.977799999999828e-05, 9.955599999999717e-05, 9.954200000000107e-05, 9.955600000000064e-05, 0.00010001399999999896, 9.930500000000092e-05, 9.927799999999778e-05, 9.980499999999795e-05, 9.927699999999831e-05, 9.983300000000056e-05, 9.993000000000155e-05, 9.987499999999927e-05, 9.93470000000031e-05, 9.951399999999846e-05, 9.933399999999953e-05, 9.966699999999773e-05, 9.931999999999996e-05, 9.974999999999914e-05, 9.988900000000231e-05, 9.993099999999755e-05, 9.950000000000236e-05, 9.969400000000087e-05, 9.99159999999985e-05, 0.00010005500000000167, 9.994400000000112e-05, 9.965300000000163e-05, 9.993000000000155e-05, 9.934699999999963e-05, 9.968100000000077e-05]</msg>
<status status="PASS" starttime="20201115 23:02:33.248" endtime="20201115 23:02:33.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.244" endtime="20201115 23:02:33.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.253" endtime="20201115 23:02:33.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.256" endtime="20201115 23:02:33.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.254" endtime="20201115 23:02:33.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.251" endtime="20201115 23:02:33.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.883" endtime="20201115 23:02:33.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.881" endtime="20201115 23:02:33.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.881" endtime="20201115 23:02:33.277"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.279" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.288" endtime="20201115 23:02:33.308"></status>
</kw>
<msg timestamp="20201115 23:02:33.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.286" endtime="20201115 23:02:33.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.310" endtime="20201115 23:02:33.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.313" endtime="20201115 23:02:33.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.284" endtime="20201115 23:02:33.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.281" endtime="20201115 23:02:33.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.321" endtime="20201115 23:02:33.606"></status>
</kw>
<msg timestamp="20201115 23:02:33.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022963153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.320" endtime="20201115 23:02:33.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022963153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.610" endtime="20201115 23:02:33.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.618" endtime="20201115 23:02:33.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.317" endtime="20201115 23:02:33.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.316" endtime="20201115 23:02:33.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.625" level="INFO">${RESULT} = [{'time': 0.022963153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010079199999999885, 'source_diff': 0.00010079199999999885}, {'time': 0.023069181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:33.622" endtime="20201115 23:02:33.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.639" level="INFO">${ACCURACY} = {'diff': [0.00010079199999999885, 0.00010012499999999952, 0.00010055600000000164, 0.00010054099999999913, 0.00010012499999999952, 0.00010030500000000192, 0.00010045900000000066, 0.00010117999999999933...</msg>
<status status="PASS" starttime="20201115 23:02:33.626" endtime="20201115 23:02:33.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.644" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.643" endtime="20201115 23:02:33.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.646" level="INFO">VALUE: [0.00010079199999999885, 0.00010012499999999952, 0.00010055600000000164, 0.00010054099999999913, 0.00010012499999999952, 0.00010030500000000192, 0.00010045900000000066, 0.00010117999999999933, 0.0001002220000000005, 0.00010030499999999845, 0.00010106899999999877, 0.00010052799999999903, 0.00010108400000000128, 0.00010101399999999996, 0.0001011809999999988, 0.0001010000000000004, 0.00010065199999999969, 0.00010073700000000005, 0.00010073600000000058, 0.00010054099999999913, 0.00010088899999999984, 0.00010070800000000144, 0.00010037499999999977, 0.00010013899999999909, 0.00010075000000000014, 0.00010055600000000164, 0.00010040299999999891, 0.00010105599999999867, 0.00010098600000000083, 0.00010052799999999903, 0.00010052699999999956, 0.00010098600000000083, 0.00010048599999999686, 0.00010048600000000033, 0.00010011099999999995, 0.00010105500000000267, 0.00010094399999999865, 0.00010080599999999842, 0.00010118100000000227, 0.00010094500000000159, 0.00010062500000000002, 0.00010061099999999698, 0.00010041700000000195, 0.0001010000000000004, 0.00010040299999999891, 0.00010095800000000169, 0.00010030499999999845, 0.00010072199999999754, 0.00010043000000000205, 0.00010105600000000214]</msg>
<status status="PASS" starttime="20201115 23:02:33.645" endtime="20201115 23:02:33.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.640" endtime="20201115 23:02:33.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.649" endtime="20201115 23:02:33.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.652" endtime="20201115 23:02:33.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.651" endtime="20201115 23:02:33.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.647" endtime="20201115 23:02:33.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.280" endtime="20201115 23:02:33.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.278" endtime="20201115 23:02:33.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.277" endtime="20201115 23:02:33.673"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.676" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.684" endtime="20201115 23:02:33.705"></status>
</kw>
<msg timestamp="20201115 23:02:33.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.682" endtime="20201115 23:02:33.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.707" endtime="20201115 23:02:33.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.709" endtime="20201115 23:02:33.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.680" endtime="20201115 23:02:33.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.678" endtime="20201115 23:02:33.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.718" endtime="20201115 23:02:34.004"></status>
</kw>
<msg timestamp="20201115 23:02:34.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.717" endtime="20201115 23:02:34.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.008" endtime="20201115 23:02:34.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.016" endtime="20201115 23:02:34.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.714" endtime="20201115 23:02:34.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.712" endtime="20201115 23:02:34.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.023" level="INFO">${RESULT} = [{'time': 0.022017014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010105600000000214, 'source_diff': 0.00010105600000000214}, {'time': 0.022125014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:34.019" endtime="20201115 23:02:34.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.036" level="INFO">${ACCURACY} = {'diff': [0.00010105600000000214, 0.0001020420000000001, 0.0001018749999999978, 0.00010211100000000195, 0.00010220799999999947, 0.0001015549999999997, 0.00010137500000000077, 0.00010111100000000095, 0...</msg>
<status status="PASS" starttime="20201115 23:02:34.024" endtime="20201115 23:02:34.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.040" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.039" endtime="20201115 23:02:34.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.043" level="INFO">VALUE: [0.00010105600000000214, 0.0001020420000000001, 0.0001018749999999978, 0.00010211100000000195, 0.00010220799999999947, 0.0001015549999999997, 0.00010137500000000077, 0.00010111100000000095, 0.00010211099999999848, 0.00010208299999999934, 0.00010148600000000133, 0.0001020420000000001, 0.00010145899999999819, 0.00010148600000000133, 0.00010138900000000034, 0.00010144499999999862, 0.00010109700000000138, 0.0001013199999999985, 0.00010194500000000259, 0.00010144399999999915, 0.0001020000000000014, 0.00010193000000000008, 0.00010163900000000059, 0.0001012220000000015, 0.00010184699999999866, 0.00010183299999999909, 0.00010180599999999942, 0.00010193100000000302, 0.0001020139999999975, 0.00010129199999999935, 0.00010147300000000123, 0.0001021939999999999, 0.00010198599999999836, 0.00010145799999999872, 0.00010215300000000066, 0.00010181899999999952, 0.00010193000000000008, 0.0001016809999999993, 0.00010182000000000246, 0.00010111100000000095, 0.00010123600000000108, 0.00010148599999999786, 0.00010169499999999887, 0.00010155599999999917, 0.0001021939999999999, 0.00010179100000000038, 0.00010216599999999729, 0.00010169400000000287, 0.00010125000000000065, 0.00010109700000000138]</msg>
<status status="PASS" starttime="20201115 23:02:34.041" endtime="20201115 23:02:34.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.037" endtime="20201115 23:02:34.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.046" endtime="20201115 23:02:34.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.049" endtime="20201115 23:02:34.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.048" endtime="20201115 23:02:34.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.044" endtime="20201115 23:02:34.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.676" endtime="20201115 23:02:34.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.675" endtime="20201115 23:02:34.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.674" endtime="20201115 23:02:34.070"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.073" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.081" endtime="20201115 23:02:34.102"></status>
</kw>
<msg timestamp="20201115 23:02:34.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.079" endtime="20201115 23:02:34.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.103" endtime="20201115 23:02:34.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.106" endtime="20201115 23:02:34.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.076" endtime="20201115 23:02:34.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.074" endtime="20201115 23:02:34.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.115" endtime="20201115 23:02:34.400"></status>
</kw>
<msg timestamp="20201115 23:02:34.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.114" endtime="20201115 23:02:34.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.404" endtime="20201115 23:02:34.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.412" endtime="20201115 23:02:34.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.111" endtime="20201115 23:02:34.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.109" endtime="20201115 23:02:34.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.418" level="INFO">${RESULT} = [{'time': 0.022067736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010227800000000078, 'source_diff': 0.00010227800000000078}, {'time': 0.022173764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:34.415" endtime="20201115 23:02:34.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.431" level="INFO">${ACCURACY} = {'diff': [0.00010227800000000078, 0.0001023199999999995, 0.00010247299999999876, 0.0001031810000000008, 0.0001023749999999983, 0.00010249999999999843, 0.00010272299999999901, 0.0001023879999999984, 0....</msg>
<status status="PASS" starttime="20201115 23:02:34.419" endtime="20201115 23:02:34.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.436" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.435" endtime="20201115 23:02:34.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.438" level="INFO">VALUE: [0.00010227800000000078, 0.0001023199999999995, 0.00010247299999999876, 0.0001031810000000008, 0.0001023749999999983, 0.00010249999999999843, 0.00010272299999999901, 0.0001023879999999984, 0.0001031940000000009, 0.00010236099999999873, 0.00010294400000000065, 0.00010254100000000113, 0.00010301400000000197, 0.00010270799999999997, 0.00010212499999999805, 0.00010222199999999904, 0.00010279200000000085, 0.00010247199999999929, 0.00010233299999999959, 0.00010209699999999891, 0.00010263900000000159, 0.00010299999999999893, 0.00010256900000000027, 0.0001026940000000004, 0.0001026940000000004, 0.00010230599999999992, 0.00010243100000000005, 0.00010293100000000055, 0.00010237500000000177, 0.00010284700000000313, 0.00010294400000000065, 0.00010277700000000181, 0.00010266599999999779, 0.00010261100000000245, 0.00010230500000000045, 0.00010261099999999898, 0.00010306900000000077, 0.00010225000000000165, 0.00010313899999999862, 0.00010256999999999974, 0.00010316699999999776, 0.00010251400000000147, 0.00010236099999999873, 0.00010298599999999936, 0.00010280600000000042, 0.00010288800000000237, 0.00010304099999999816, 0.00010262499999999855, 0.00010212499999999805, 0.00010270799999999997]</msg>
<status status="PASS" starttime="20201115 23:02:34.437" endtime="20201115 23:02:34.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.432" endtime="20201115 23:02:34.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.441" endtime="20201115 23:02:34.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.445" endtime="20201115 23:02:34.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.443" endtime="20201115 23:02:34.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.440" endtime="20201115 23:02:34.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.073" endtime="20201115 23:02:34.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.071" endtime="20201115 23:02:34.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.071" endtime="20201115 23:02:34.466"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.468" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.476" endtime="20201115 23:02:34.497"></status>
</kw>
<msg timestamp="20201115 23:02:34.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.475" endtime="20201115 23:02:34.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.499" endtime="20201115 23:02:34.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.501" endtime="20201115 23:02:34.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.472" endtime="20201115 23:02:34.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.470" endtime="20201115 23:02:34.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.510" endtime="20201115 23:02:34.795"></status>
</kw>
<msg timestamp="20201115 23:02:34.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02233625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:34.508" endtime="20201115 23:02:34.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02233625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:34.800" endtime="20201115 23:02:34.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.807" endtime="20201115 23:02:34.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.506" endtime="20201115 23:02:34.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.504" endtime="20201115 23:02:34.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.814" level="INFO">${RESULT} = [{'time': 0.02233625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010368099999999783, 'source_diff': 0.00010368099999999783}, {'time': 0.022444208, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:02:34.811" endtime="20201115 23:02:34.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.827" level="INFO">${ACCURACY} = {'diff': [0.00010368099999999783, 0.000103513999999999, 0.0001041940000000019, 0.00010345900000000019, 0.00010348599999999986, 0.00010398600000000036, 0.0001040550000000022, 0.00010338899999999887, 0....</msg>
<status status="PASS" starttime="20201115 23:02:34.815" endtime="20201115 23:02:34.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.832" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.831" endtime="20201115 23:02:34.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.834" level="INFO">VALUE: [0.00010368099999999783, 0.000103513999999999, 0.0001041940000000019, 0.00010345900000000019, 0.00010348599999999986, 0.00010398600000000036, 0.0001040550000000022, 0.00010338899999999887, 0.0001038339999999971, 0.00010348599999999986, 0.00010349999999999943, 0.00010362499999999955, 0.00010405600000000167, 0.00010345800000000072, 0.00010358300000000084, 0.00010379100000000238, 0.0001040689999999983, 0.00010326400000000222, 0.00010374999999999968, 0.0001040559999999982, 0.00010408399999999735, 0.0001041810000000018, 0.00010341599999999854, 0.00010366700000000173, 0.00010399999999999993, 0.00010415300000000266, 0.0001036940000000014, 0.00010381899999999805, 0.00010361099999999998, 0.00010336099999999973, 0.00010324999999999918, 0.00010404199999999864, 0.00010340299999999844, 0.00010393099999999808, 0.00010329200000000135, 0.00010365300000000216, 0.00010361199999999945, 0.00010331899999999755, 0.00010398699999999983, 0.00010372200000000054, 0.00010348599999999986, 0.0001035550000000017, 0.00010344399999999768, 0.00010306900000000077, 0.00010330600000000092, 0.00010416700000000223, 0.00010409800000000038, 0.00010338900000000234, 0.0001033200000000005, 0.00010376399999999925]</msg>
<status status="PASS" starttime="20201115 23:02:34.833" endtime="20201115 23:02:34.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.828" endtime="20201115 23:02:34.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.837" endtime="20201115 23:02:34.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.841" endtime="20201115 23:02:34.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.839" endtime="20201115 23:02:34.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.836" endtime="20201115 23:02:34.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.469" endtime="20201115 23:02:34.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.467" endtime="20201115 23:02:34.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.466" endtime="20201115 23:02:34.862"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.864" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.872" endtime="20201115 23:02:34.893"></status>
</kw>
<msg timestamp="20201115 23:02:34.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.871" endtime="20201115 23:02:34.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.895" endtime="20201115 23:02:34.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.897" endtime="20201115 23:02:34.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.868" endtime="20201115 23:02:34.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.866" endtime="20201115 23:02:34.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.906" endtime="20201115 23:02:35.192"></status>
</kw>
<msg timestamp="20201115 23:02:35.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.905" endtime="20201115 23:02:35.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.196" endtime="20201115 23:02:35.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.204" endtime="20201115 23:02:35.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.902" endtime="20201115 23:02:35.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.901" endtime="20201115 23:02:35.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:35.211" level="INFO">${RESULT} = [{'time': 0.022747681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010511199999999749, 'source_diff': 0.00010511199999999749}, {'time': 0.022855708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:35.208" endtime="20201115 23:02:35.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:35.225" level="INFO">${ACCURACY} = {'diff': [0.00010511199999999749, 0.0001050140000000005, 0.00010411100000000048, 0.00010442999999999911, 0.00010452799999999957, 0.00010412500000000005, 0.00010452799999999957, 0.0001042360000000006, ...</msg>
<status status="PASS" starttime="20201115 23:02:35.212" endtime="20201115 23:02:35.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.230" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:02:35.228" endtime="20201115 23:02:35.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.232" level="INFO">VALUE: [0.00010511199999999749, 0.0001050140000000005, 0.00010411100000000048, 0.00010442999999999911, 0.00010452799999999957, 0.00010412500000000005, 0.00010452799999999957, 0.0001042360000000006, 0.00010518099999999933, 0.00010513899999999715, 0.00010500000000000093, 0.0001051810000000028, 0.00010494399999999918, 0.00010427799999999932, 0.00010491699999999951, 0.00010442999999999911, 0.00010431899999999855, 0.00010498600000000136, 0.00010444399999999868, 0.0001050140000000005, 0.00010438899999999987, 0.00010475000000000068, 0.00010457000000000174, 0.00010422199999999757, 0.0001042360000000006, 0.00010440199999999997, 0.00010480500000000295, 0.00010491600000000004, 0.00010517999999999986, 0.000104514, 0.00010488900000000037, 0.00010461100000000098, 0.00010480599999999896, 0.00010473599999999764, 0.00010461100000000098, 0.00010443100000000205, 0.00010463900000000012, 0.00010454199999999914, 0.00010512499999999758, 0.0001050550000000032, 0.00010495799999999875, 0.0001050689999999993, 0.00010431899999999855, 0.00010495799999999875, 0.0001050559999999992, 0.00010463900000000012, 0.0001051810000000028, 0.00010490299999999994, 0.00010456999999999828, 0.00010472299999999754]</msg>
<status status="PASS" starttime="20201115 23:02:35.231" endtime="20201115 23:02:35.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.226" endtime="20201115 23:02:35.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.236" endtime="20201115 23:02:35.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.239" endtime="20201115 23:02:35.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.237" endtime="20201115 23:02:35.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.234" endtime="20201115 23:02:35.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.865" endtime="20201115 23:02:35.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.863" endtime="20201115 23:02:35.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.862" endtime="20201115 23:02:35.260"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.262" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.270" endtime="20201115 23:02:35.291"></status>
</kw>
<msg timestamp="20201115 23:02:35.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.269" endtime="20201115 23:02:35.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.293" endtime="20201115 23:02:35.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.295" endtime="20201115 23:02:35.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.266" endtime="20201115 23:02:35.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.264" endtime="20201115 23:02:35.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.304" endtime="20201115 23:02:35.590"></status>
</kw>
<msg timestamp="20201115 23:02:35.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021874611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.303" endtime="20201115 23:02:35.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021874611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.594" endtime="20201115 23:02:35.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.602" endtime="20201115 23:02:35.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.300" endtime="20201115 23:02:35.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.299" endtime="20201115 23:02:35.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:35.608" level="INFO">${RESULT} = [{'time': 0.021874611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010543000000000011, 'source_diff': 0.00010543000000000011}, {'time': 0.021984611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:35.605" endtime="20201115 23:02:35.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:35.621" level="INFO">${ACCURACY} = {'diff': [0.00010543000000000011, 0.00010598600000000236, 0.00010575000000000168, 0.00010604199999999717, 0.00010586100000000223, 0.000105207999999999, 0.00010586099999999876, 0.000106208, 0.000105374...</msg>
<status status="PASS" starttime="20201115 23:02:35.609" endtime="20201115 23:02:35.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.626" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:02:35.625" endtime="20201115 23:02:35.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.628" level="INFO">VALUE: [0.00010543000000000011, 0.00010598600000000236, 0.00010575000000000168, 0.00010604199999999717, 0.00010586100000000223, 0.000105207999999999, 0.00010586099999999876, 0.000106208, 0.00010537499999999783, 0.00010568000000000036, 0.0001055689999999998, 0.00010581900000000005, 0.00010563899999999765, 0.00010544399999999968, 0.00010583299999999962, 0.00010548599999999839, 0.00010525000000000118, 0.00010548599999999839, 0.00010597299999999879, 0.00010511099999999801, 0.00010597199999999932, 0.00010569399999999993, 0.00010586099999999876, 0.00010549999999999796, 0.00010565300000000069, 0.00010577800000000082, 0.00010595900000000269, 0.00010556999999999928, 0.00010556999999999928, 0.00010559699999999894, 0.00010572200000000254, 0.00010580599999999996, 0.00010600000000000193, 0.0001057499999999982, 0.0001060690000000003, 0.00010601399999999803, 0.00010572199999999907, 0.00010593000000000061, 0.00010587499999999833, 0.00010594400000000018, 0.00010523599999999814, 0.00010586099999999876, 0.0001058750000000018, 0.0001058339999999991, 0.0001055689999999998, 0.00010508299999999887, 0.00010543000000000011, 0.00010529100000000041, 0.00010605500000000073, 0.00010604100000000116]</msg>
<status status="PASS" starttime="20201115 23:02:35.627" endtime="20201115 23:02:35.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.622" endtime="20201115 23:02:35.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.632" endtime="20201115 23:02:35.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.635" endtime="20201115 23:02:35.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.633" endtime="20201115 23:02:35.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.630" endtime="20201115 23:02:35.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.263" endtime="20201115 23:02:35.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.261" endtime="20201115 23:02:35.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.260" endtime="20201115 23:02:35.656"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.658" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.666" endtime="20201115 23:02:35.688"></status>
</kw>
<msg timestamp="20201115 23:02:35.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.665" endtime="20201115 23:02:35.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.689" endtime="20201115 23:02:35.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.692" endtime="20201115 23:02:35.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.662" endtime="20201115 23:02:35.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.660" endtime="20201115 23:02:35.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.701" endtime="20201115 23:02:35.986"></status>
</kw>
<msg timestamp="20201115 23:02:35.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021815333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.699" endtime="20201115 23:02:35.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021815333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.990" endtime="20201115 23:02:35.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.998" endtime="20201115 23:02:36.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.697" endtime="20201115 23:02:36.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.695" endtime="20201115 23:02:36.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:36.005" level="INFO">${RESULT} = [{'time': 0.021815333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010673599999999964, 'source_diff': 0.00010673599999999964}, {'time': 0.021925319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:36.002" endtime="20201115 23:02:36.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:36.024" level="INFO">${ACCURACY} = {'diff': [0.00010673599999999964, 0.00010633300000000012, 0.00010708300000000087, 0.00010699999999999946, 0.00010638900000000187, 0.0001070699999999973, 0.00010652800000000157, 0.00010701399999999903,...</msg>
<status status="PASS" starttime="20201115 23:02:36.012" endtime="20201115 23:02:36.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.028" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:02:36.027" endtime="20201115 23:02:36.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.031" level="INFO">VALUE: [0.00010673599999999964, 0.00010633300000000012, 0.00010708300000000087, 0.00010699999999999946, 0.00010638900000000187, 0.0001070699999999973, 0.00010652800000000157, 0.00010701399999999903, 0.0001066950000000004, 0.00010630600000000046, 0.00010680600000000096, 0.00010684700000000019, 0.00010697200000000032, 0.00010655499999999776, 0.0001062499999999987, 0.00010654199999999767, 0.00010705499999999826, 0.00010612499999999858, 0.0001070560000000012, 0.00010705499999999826, 0.00010675000000000268, 0.00010701399999999903, 0.00010626400000000175, 0.00010675000000000268, 0.00010688900000000237, 0.00010638900000000187, 0.00010722200000000057, 0.00010631900000000055, 0.00010717999999999839, 0.00010695900000000022, 0.00010715299999999872, 0.00010680600000000096, 0.00010644500000000015, 0.00010612499999999858, 0.0001067080000000005, 0.00010676399999999878, 0.00010700000000000293, 0.00010680500000000148, 0.00010631899999999708, 0.00010623599999999914, 0.0001062360000000026, 0.00010675000000000268, 0.00010698599999999989, 0.00010662500000000255, 0.00010668099999999736, 0.00010693100000000108, 0.00010695900000000022, 0.00010681899999999758, 0.0001068750000000028, 0.00010699999999999946]</msg>
<status status="PASS" starttime="20201115 23:02:36.030" endtime="20201115 23:02:36.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.025" endtime="20201115 23:02:36.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.034" endtime="20201115 23:02:36.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:36.037" endtime="20201115 23:02:36.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.036" endtime="20201115 23:02:36.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.032" endtime="20201115 23:02:36.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.659" endtime="20201115 23:02:36.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.657" endtime="20201115 23:02:36.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.656" endtime="20201115 23:02:36.058"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.061" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.069" endtime="20201115 23:02:36.089"></status>
</kw>
<msg timestamp="20201115 23:02:36.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.067" endtime="20201115 23:02:36.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.091" endtime="20201115 23:02:36.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.093" endtime="20201115 23:02:36.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.065" endtime="20201115 23:02:36.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.063" endtime="20201115 23:02:36.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.102" endtime="20201115 23:02:36.387"></status>
</kw>
<msg timestamp="20201115 23:02:36.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021837403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.101" endtime="20201115 23:02:36.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021837403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.392" endtime="20201115 23:02:36.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.400" endtime="20201115 23:02:36.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.098" endtime="20201115 23:02:36.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.097" endtime="20201115 23:02:36.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:36.406" level="INFO">${RESULT} = [{'time': 0.021945125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010772200000000107, 'source_diff': 0.00010772200000000107}, {'time': 0.022058139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:36.403" endtime="20201115 23:02:36.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:36.419" level="INFO">${ACCURACY} = {'diff': [0.00010772200000000107, 0.00010776399999999978, 0.00010812500000000058, 0.00010794500000000165, 0.00010787500000000033, 0.00010765300000000269, 0.0001080560000000022, 0.00010741600000000254,...</msg>
<status status="PASS" starttime="20201115 23:02:36.407" endtime="20201115 23:02:36.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.424" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:02:36.423" endtime="20201115 23:02:36.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.426" level="INFO">VALUE: [0.00010772200000000107, 0.00010776399999999978, 0.00010812500000000058, 0.00010794500000000165, 0.00010787500000000033, 0.00010765300000000269, 0.0001080560000000022, 0.00010741600000000254, 0.00010762500000000008, 0.00010748600000000039, 0.00010762500000000008, 0.00010743100000000158, 0.00010794399999999871, 0.00010736100000000026, 0.00010761099999999704, 0.00010741699999999854, 0.00010805599999999874, 0.00010761100000000051, 0.0001072629999999998, 0.00010743100000000158, 0.00010737499999999983, 0.0001072499999999997, 0.00010791599999999957, 0.00010817999999999939, 0.00010737499999999983, 0.00010786099999999729, 0.0001072499999999997, 0.00010793099999999861, 0.00010794500000000165, 0.0001073889999999994, 0.00010711100000000001, 0.00010815200000000025, 0.00010806899999999883, 0.00010804200000000264, 0.00010761100000000051, 0.00010794399999999871, 0.00010737499999999983, 0.00010781899999999858, 0.00010784700000000119, 0.0001078340000000011, 0.00010766699999999879, 0.00010782000000000153, 0.00010743099999999811, 0.00010794500000000165, 0.00010723600000000014, 0.00010749999999999996, 0.00010784700000000119, 0.00010784700000000119, 0.00010779199999999892, 0.00010768100000000183]</msg>
<status status="PASS" starttime="20201115 23:02:36.425" endtime="20201115 23:02:36.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.420" endtime="20201115 23:02:36.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.429" endtime="20201115 23:02:36.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:36.433" endtime="20201115 23:02:36.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.431" endtime="20201115 23:02:36.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.428" endtime="20201115 23:02:36.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.061" endtime="20201115 23:02:36.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.060" endtime="20201115 23:02:36.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.059" endtime="20201115 23:02:36.454"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.456" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.464" endtime="20201115 23:02:36.486"></status>
</kw>
<msg timestamp="20201115 23:02:36.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.463" endtime="20201115 23:02:36.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.487" endtime="20201115 23:02:36.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.490" endtime="20201115 23:02:36.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.460" endtime="20201115 23:02:36.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.458" endtime="20201115 23:02:36.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.499" endtime="20201115 23:02:36.786"></status>
</kw>
<msg timestamp="20201115 23:02:36.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.497" endtime="20201115 23:02:36.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.790" endtime="20201115 23:02:36.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.798" endtime="20201115 23:02:36.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.495" endtime="20201115 23:02:36.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.493" endtime="20201115 23:02:36.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:36.804" level="INFO">${RESULT} = [{'time': 0.022753653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001085699999999988, 'source_diff': 0.0001085699999999988}, {'time': 0.022866667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:36.801" endtime="20201115 23:02:36.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:36.819" level="INFO">${ACCURACY} = {'diff': [0.0001085699999999988, 0.00010916700000000029, 0.00010887500000000133, 0.00010834800000000117, 0.00010891699999999657, 0.00010905500000000026, 0.00010909699999999897, 0.00010866699999999979,...</msg>
<status status="PASS" starttime="20201115 23:02:36.805" endtime="20201115 23:02:36.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.823" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:02:36.822" endtime="20201115 23:02:36.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.826" level="INFO">VALUE: [0.0001085699999999988, 0.00010916700000000029, 0.00010887500000000133, 0.00010834800000000117, 0.00010891699999999657, 0.00010905500000000026, 0.00010909699999999897, 0.00010866699999999979, 0.0001087219999999986, 0.00010881899999999958, 0.0001082500000000007, 0.0001083890000000004, 0.00010886099999999829, 0.00010838899999999693, 0.00010918099999999986, 0.0001090699999999993, 0.00010881899999999958, 0.00010879100000000044, 0.00010870799999999903, 0.00010808300000000187, 0.0001087219999999986, 0.0001083890000000004, 0.00010848600000000139, 0.00010875000000000121, 0.00010813900000000015, 0.00010848599999999792, 0.00010879100000000044, 0.00010823599999999767, 0.00010897300000000179, 0.00010823600000000114, 0.00010840299999999997, 0.00010898600000000189, 0.00010881899999999958, 0.0001090829999999994, 0.00010861100000000151, 0.00010811100000000101, 0.0001087219999999986, 0.0001085699999999988, 0.00010919499999999943, 0.00010891700000000004, 0.00010843100000000258, 0.00010856899999999933, 0.00010834699999999822, 0.00010895799999999928, 0.00010830599999999899, 0.00010836100000000126, 0.00010861099999999804, 0.00010823600000000114, 0.00010912499999999811, 0.00010893099999999961]</msg>
<status status="PASS" starttime="20201115 23:02:36.824" endtime="20201115 23:02:36.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.820" endtime="20201115 23:02:36.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.829" endtime="20201115 23:02:36.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:36.832" endtime="20201115 23:02:36.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.831" endtime="20201115 23:02:36.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.827" endtime="20201115 23:02:36.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.457" endtime="20201115 23:02:36.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.455" endtime="20201115 23:02:36.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.454" endtime="20201115 23:02:36.853"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.855" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.863" endtime="20201115 23:02:36.885"></status>
</kw>
<msg timestamp="20201115 23:02:36.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.862" endtime="20201115 23:02:36.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.886" endtime="20201115 23:02:36.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.890" endtime="20201115 23:02:36.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.859" endtime="20201115 23:02:36.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.857" endtime="20201115 23:02:36.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.898" endtime="20201115 23:02:37.185"></status>
</kw>
<msg timestamp="20201115 23:02:37.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.897" endtime="20201115 23:02:37.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.189" endtime="20201115 23:02:37.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.197" endtime="20201115 23:02:37.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.894" endtime="20201115 23:02:37.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.893" endtime="20201115 23:02:37.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:37.204" level="INFO">${RESULT} = [{'time': 0.021896847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010954100000000119, 'source_diff': 0.00010954100000000119}, {'time': 0.022008861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:37.201" endtime="20201115 23:02:37.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:37.217" level="INFO">${ACCURACY} = {'diff': [0.00010954100000000119, 0.00010950000000000196, 0.00010984699999999972, 0.00010963899999999818, 0.00011013899999999868, 0.0001100700000000003, 0.00010993100000000061, 0.00010980600000000049,...</msg>
<status status="PASS" starttime="20201115 23:02:37.205" endtime="20201115 23:02:37.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.222" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:02:37.221" endtime="20201115 23:02:37.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.224" level="INFO">VALUE: [0.00010954100000000119, 0.00010950000000000196, 0.00010984699999999972, 0.00010963899999999818, 0.00011013899999999868, 0.0001100700000000003, 0.00010993100000000061, 0.00010980600000000049, 0.00010941700000000054, 0.00011012499999999911, 0.00010994400000000071, 0.00011000000000000246, 0.00010934699999999922, 0.00010925000000000171, 0.00010959699999999947, 0.00010936100000000226, 0.00010979199999999745, 0.00010975000000000221, 0.00010983399999999963, 0.00010936099999999879, 0.0001095419999999972, 0.00010940300000000097, 0.00010962500000000208, 0.00011001399999999856, 0.00010941600000000107, 0.00010936099999999879, 0.00011012499999999911, 0.00010987499999999886, 0.00010968100000000036, 0.00011023599999999967, 0.00010937499999999836, 0.00010969499999999993, 0.00010974999999999874, 0.00010988799999999896, 0.00011000000000000246, 0.00010955600000000024, 0.00011011099999999954, 0.00010954200000000067, 0.00010926399999999781, 0.00010957000000000328, 0.00010952700000000162, 0.00010929200000000042, 0.00010931999999999956, 0.00010988899999999843, 0.0001097089999999995, 0.00010968000000000089, 0.00010983300000000015, 0.0001095549999999973, 0.00010929099999999747, 0.00010923599999999867]</msg>
<status status="PASS" starttime="20201115 23:02:37.223" endtime="20201115 23:02:37.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.218" endtime="20201115 23:02:37.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.227" endtime="20201115 23:02:37.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:37.231" endtime="20201115 23:02:37.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.229" endtime="20201115 23:02:37.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.226" endtime="20201115 23:02:37.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.856" endtime="20201115 23:02:37.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.854" endtime="20201115 23:02:37.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.853" endtime="20201115 23:02:37.252"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.254" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.263" endtime="20201115 23:02:37.284"></status>
</kw>
<msg timestamp="20201115 23:02:37.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.261" endtime="20201115 23:02:37.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.285" endtime="20201115 23:02:37.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.288" endtime="20201115 23:02:37.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.259" endtime="20201115 23:02:37.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.256" endtime="20201115 23:02:37.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.297" endtime="20201115 23:02:37.583"></status>
</kw>
<msg timestamp="20201115 23:02:37.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022434458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.295" endtime="20201115 23:02:37.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022434458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.587" endtime="20201115 23:02:37.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.595" endtime="20201115 23:02:37.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.293" endtime="20201115 23:02:37.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.291" endtime="20201115 23:02:37.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:37.602" level="INFO">${RESULT} = [{'time': 0.022434458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011094400000000171, 'source_diff': 0.00011094400000000171}, {'time': 0.022549472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:37.599" endtime="20201115 23:02:37.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:37.615" level="INFO">${ACCURACY} = {'diff': [0.00011094400000000171, 0.00011074999999999974, 0.00011026399999999881, 0.00011031900000000108, 0.00011113899999999968, 0.00011023599999999967, 0.0001110700000000013, 0.00011054200000000167,...</msg>
<status status="PASS" starttime="20201115 23:02:37.603" endtime="20201115 23:02:37.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.619" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:02:37.618" endtime="20201115 23:02:37.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.622" level="INFO">VALUE: [0.00011094400000000171, 0.00011074999999999974, 0.00011026399999999881, 0.00011031900000000108, 0.00011113899999999968, 0.00011023599999999967, 0.0001110700000000013, 0.00011054200000000167, 0.00011101400000000303, 0.00011032000000000056, 0.00011043100000000111, 0.00011081899999999811, 0.00011056900000000133, 0.00011056900000000133, 0.00011043000000000164, 0.00011062499999999961, 0.00011086100000000029, 0.00011119500000000143, 0.00011013899999999868, 0.00011076399999999931, 0.00011061100000000004, 0.00011088799999999996, 0.00011055599999999777, 0.00011043000000000164, 0.00011112500000000011, 0.00011116600000000282, 0.00011101399999999956, 0.00011119399999999849, 0.00011054200000000167, 0.00011025000000000271, 0.00011088899999999943, 0.00011036099999999979, 0.00011051399999999906, 0.00011104200000000217, 0.00011079100000000244, 0.00011099999999999999, 0.00011069400000000146, 0.00011044400000000121, 0.00011080499999999854, 0.00011055500000000176, 0.00011062499999999961, 0.00011098600000000042, 0.00011099999999999999, 0.00011094400000000171, 0.00011036099999999979, 0.0001110700000000013, 0.00011030499999999804, 0.0001104159999999986, 0.00011117999999999892, 0.00011073600000000017]</msg>
<status status="PASS" starttime="20201115 23:02:37.620" endtime="20201115 23:02:37.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.616" endtime="20201115 23:02:37.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.625" endtime="20201115 23:02:37.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:37.629" endtime="20201115 23:02:37.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.627" endtime="20201115 23:02:37.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.623" endtime="20201115 23:02:37.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.255" endtime="20201115 23:02:37.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.253" endtime="20201115 23:02:37.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.252" endtime="20201115 23:02:37.650"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.652" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.660" endtime="20201115 23:02:37.682"></status>
</kw>
<msg timestamp="20201115 23:02:37.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.658" endtime="20201115 23:02:37.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.683" endtime="20201115 23:02:37.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.686" endtime="20201115 23:02:37.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.656" endtime="20201115 23:02:37.688"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.654" endtime="20201115 23:02:37.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.695" endtime="20201115 23:02:37.980"></status>
</kw>
<msg timestamp="20201115 23:02:37.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021997111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.693" endtime="20201115 23:02:37.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021997111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.984" endtime="20201115 23:02:37.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.992" endtime="20201115 23:02:37.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.691" endtime="20201115 23:02:37.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.689" endtime="20201115 23:02:37.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:37.999" level="INFO">${RESULT} = [{'time': 0.021997111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011192999999999967, 'source_diff': 0.00011192999999999967}, {'time': 0.022112125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:37.995" endtime="20201115 23:02:37.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:38.012" level="INFO">${ACCURACY} = {'diff': [0.00011192999999999967, 0.00011152799999999963, 0.00011205599999999927, 0.00011126399999999981, 0.00011184700000000172, 0.00011183400000000163, 0.00011212499999999764, 0.00011173699999999717...</msg>
<status status="PASS" starttime="20201115 23:02:38.000" endtime="20201115 23:02:38.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.016" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:02:38.015" endtime="20201115 23:02:38.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.019" level="INFO">VALUE: [0.00011192999999999967, 0.00011152799999999963, 0.00011205599999999927, 0.00011126399999999981, 0.00011184700000000172, 0.00011183400000000163, 0.00011212499999999764, 0.00011173699999999717, 0.00011127799999999938, 0.00011158299999999843, 0.00011195800000000228, 0.00011155500000000276, 0.00011155599999999877, 0.00011188900000000043, 0.00011172199999999813, 0.00011144500000000168, 0.00011175000000000074, 0.00011216699999999982, 0.00011134699999999775, 0.0001112220000000011, 0.00011204100000000022, 0.0001114029999999995, 0.00011186100000000129, 0.00011165299999999975, 0.00011200000000000099, 0.00011155599999999877, 0.00011219499999999896, 0.00011175000000000074, 0.00011176400000000031, 0.00011175000000000074, 0.00011208299999999893, 0.00011192999999999967, 0.00011187499999999739, 0.00011216699999999982, 0.00011205500000000326, 0.00011212500000000111, 0.00011145799999999831, 0.00011162500000000061, 0.00011181999999999859, 0.0001115700000000018, 0.00011180599999999902, 0.00011186200000000077, 0.00011212499999999764, 0.00011205599999999927, 0.00011149999999999702, 0.00011136100000000079, 0.00011201400000000056, 0.00011176400000000031, 0.00011147300000000082, 0.0001120700000000023]</msg>
<status status="PASS" starttime="20201115 23:02:38.017" endtime="20201115 23:02:38.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.013" endtime="20201115 23:02:38.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.022" endtime="20201115 23:02:38.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:38.025" endtime="20201115 23:02:38.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.024" endtime="20201115 23:02:38.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.020" endtime="20201115 23:02:38.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.653" endtime="20201115 23:02:38.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.651" endtime="20201115 23:02:38.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.650" endtime="20201115 23:02:38.047"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.049" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.057" endtime="20201115 23:02:38.079"></status>
</kw>
<msg timestamp="20201115 23:02:38.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.055" endtime="20201115 23:02:38.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.081" endtime="20201115 23:02:38.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.083" endtime="20201115 23:02:38.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.053" endtime="20201115 23:02:38.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.051" endtime="20201115 23:02:38.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.092" endtime="20201115 23:02:38.378"></status>
</kw>
<msg timestamp="20201115 23:02:38.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.091" endtime="20201115 23:02:38.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.382" endtime="20201115 23:02:38.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.390" endtime="20201115 23:02:38.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.088" endtime="20201115 23:02:38.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.086" endtime="20201115 23:02:38.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:38.397" level="INFO">${RESULT} = [{'time': 0.022722764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011286099999999882, 'source_diff': 0.00011286099999999882}, {'time': 0.022837708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:38.393" endtime="20201115 23:02:38.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:38.411" level="INFO">${ACCURACY} = {'diff': [0.00011286099999999882, 0.00011250000000000149, 0.00011223600000000167, 0.00011306900000000036, 0.00011212500000000111, 0.00011273600000000217, 0.00011262499999999814, 0.00011277800000000088...</msg>
<status status="PASS" starttime="20201115 23:02:38.398" endtime="20201115 23:02:38.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.415" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:02:38.414" endtime="20201115 23:02:38.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.418" level="INFO">VALUE: [0.00011286099999999882, 0.00011250000000000149, 0.00011223600000000167, 0.00011306900000000036, 0.00011212500000000111, 0.00011273600000000217, 0.00011262499999999814, 0.00011277800000000088, 0.00011236100000000179, 0.00011318100000000039, 0.00011262500000000161, 0.00011230500000000004, 0.00011223600000000167, 0.00011251400000000106, 0.00011222199999999863, 0.00011269399999999999, 0.00011261100000000204, 0.00011302799999999766, 0.00011223600000000167, 0.00011280500000000054, 0.0001125830000000029, 0.00011224999999999777, 0.00011262500000000161, 0.00011238900000000093, 0.0001122220000000021, 0.00011269399999999999, 0.00011216599999999688, 0.00011233299999999918, 0.00011237500000000136, 0.00011262499999999814, 0.00011313899999999821, 0.00011270899999999903, 0.00011244499999999921, 0.00011252800000000063, 0.00011283299999999968, 0.00011299999999999852, 0.00011231899999999961, 0.00011248600000000192, 0.00011293100000000014, 0.00011208299999999893, 0.00011279200000000045, 0.00011244499999999921, 0.00011226400000000081, 0.00011277800000000088, 0.00011247300000000182, 0.00011306900000000036, 0.00011279100000000097, 0.0001123749999999979, 0.00011263900000000118, 0.0001127359999999987]</msg>
<status status="PASS" starttime="20201115 23:02:38.416" endtime="20201115 23:02:38.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.412" endtime="20201115 23:02:38.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.421" endtime="20201115 23:02:38.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:38.425" endtime="20201115 23:02:38.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.423" endtime="20201115 23:02:38.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.420" endtime="20201115 23:02:38.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.050" endtime="20201115 23:02:38.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.048" endtime="20201115 23:02:38.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.047" endtime="20201115 23:02:38.446"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.448" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.456" endtime="20201115 23:02:38.477"></status>
</kw>
<msg timestamp="20201115 23:02:38.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.455" endtime="20201115 23:02:38.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.479" endtime="20201115 23:02:38.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.481" endtime="20201115 23:02:38.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.452" endtime="20201115 23:02:38.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.450" endtime="20201115 23:02:38.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.490" endtime="20201115 23:02:38.775"></status>
</kw>
<msg timestamp="20201115 23:02:38.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.489" endtime="20201115 23:02:38.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.779" endtime="20201115 23:02:38.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.787" endtime="20201115 23:02:38.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.486" endtime="20201115 23:02:38.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.484" endtime="20201115 23:02:38.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:38.794" level="INFO">${RESULT} = [{'time': 0.021910014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011383299999999721, 'source_diff': 0.00011383299999999721}, {'time': 0.022027028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:38.790" endtime="20201115 23:02:38.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:38.807" level="INFO">${ACCURACY} = {'diff': [0.00011383299999999721, 0.00011376400000000231, 0.00011351399999999859, 0.00011363900000000218, 0.00011407000000000084, 0.00011338900000000193, 0.00011361200000000252, 0.00011348700000000239...</msg>
<status status="PASS" starttime="20201115 23:02:38.795" endtime="20201115 23:02:38.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.812" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:02:38.811" endtime="20201115 23:02:38.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.814" level="INFO">VALUE: [0.00011383299999999721, 0.00011376400000000231, 0.00011351399999999859, 0.00011363900000000218, 0.00011407000000000084, 0.00011338900000000193, 0.00011361200000000252, 0.00011348700000000239, 0.00011336099999999932, 0.00011362499999999914, 0.00011336099999999932, 0.00011336099999999932, 0.00011402799999999866, 0.0001132359999999992, 0.00011330599999999705, 0.00011345899999999978, 0.00011393100000000114, 0.00011412499999999964, 0.00011412499999999964, 0.00011347299999999935, 0.00011338899999999846, 0.0001133749999999989, 0.00011345800000000031, 0.00011323600000000267, 0.00011398599999999995, 0.00011401399999999909, 0.00011419500000000096, 0.00011412499999999964, 0.00011418100000000139, 0.00011393099999999767, 0.0001133749999999989, 0.00011374999999999927, 0.00011361100000000304, 0.00011380499999999807, 0.00011329100000000147, 0.00011405600000000127, 0.00011384700000000025, 0.00011311200000000202, 0.00011331900000000061, 0.0001140559999999978, 0.00011343100000000064, 0.00011323699999999867, 0.00011411199999999955, 0.00011337500000000236, 0.00011354099999999825, 0.0001133749999999989, 0.00011386099999999982, 0.00011412499999999964, 0.00011386099999999982, 0.00011419500000000096]</msg>
<status status="PASS" starttime="20201115 23:02:38.813" endtime="20201115 23:02:38.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.808" endtime="20201115 23:02:38.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.817" endtime="20201115 23:02:38.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:38.820" endtime="20201115 23:02:38.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.819" endtime="20201115 23:02:38.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.816" endtime="20201115 23:02:38.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.449" endtime="20201115 23:02:38.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.447" endtime="20201115 23:02:38.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.446" endtime="20201115 23:02:38.842"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.844" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.852" endtime="20201115 23:02:38.874"></status>
</kw>
<msg timestamp="20201115 23:02:38.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.851" endtime="20201115 23:02:38.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.875" endtime="20201115 23:02:38.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.878" endtime="20201115 23:02:38.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.848" endtime="20201115 23:02:38.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.846" endtime="20201115 23:02:38.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.887" endtime="20201115 23:02:39.172"></status>
</kw>
<msg timestamp="20201115 23:02:39.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.885" endtime="20201115 23:02:39.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.176" endtime="20201115 23:02:39.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.184" endtime="20201115 23:02:39.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.883" endtime="20201115 23:02:39.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.881" endtime="20201115 23:02:39.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:39.191" level="INFO">${RESULT} = [{'time': 0.022012736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011444400000000174, 'source_diff': 0.00011444400000000174}, {'time': 0.022131736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:39.188" endtime="20201115 23:02:39.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:39.204" level="INFO">${ACCURACY} = {'diff': [0.00011444400000000174, 0.00011504199999999923, 0.00011480599999999855, 0.00011424999999999977, 0.00011462499999999667, 0.00011463899999999971, 0.00011454199999999873, 0.00011480600000000202...</msg>
<status status="PASS" starttime="20201115 23:02:39.192" endtime="20201115 23:02:39.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.208" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:02:39.207" endtime="20201115 23:02:39.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.211" level="INFO">VALUE: [0.00011444400000000174, 0.00011504199999999923, 0.00011480599999999855, 0.00011424999999999977, 0.00011462499999999667, 0.00011463899999999971, 0.00011454199999999873, 0.00011480600000000202, 0.00011462499999999667, 0.00011438899999999946, 0.0001150689999999989, 0.0001148750000000004, 0.00011519399999999902, 0.00011430599999999805, 0.0001145559999999983, 0.00011479199999999898, 0.00011518100000000239, 0.00011488899999999996, 0.0001150559999999988, 0.00011448599999999698, 0.00011475000000000027, 0.00011450000000000002, 0.0001148750000000004, 0.00011450000000000002, 0.00011445800000000131, 0.00011506999999999837, 0.0001145420000000022, 0.00011451400000000306, 0.00011481999999999812, 0.00011486100000000082, 0.00011463800000000024, 0.00011515200000000031, 0.00011433300000000118, 0.00011411100000000007, 0.00011436100000000032, 0.00011447200000000088, 0.00011419400000000149, 0.00011499999999999705, 0.00011513900000000021, 0.00011519500000000196, 0.00011454199999999873, 0.00011507000000000184, 0.00011444399999999827, 0.00011516599999999988, 0.00011495800000000181, 0.00011433300000000118, 0.00011445800000000131, 0.00011450000000000002, 0.00011417999999999845, 0.00011452799999999916]</msg>
<status status="PASS" starttime="20201115 23:02:39.210" endtime="20201115 23:02:39.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.205" endtime="20201115 23:02:39.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.214" endtime="20201115 23:02:39.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:39.217" endtime="20201115 23:02:39.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.216" endtime="20201115 23:02:39.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.212" endtime="20201115 23:02:39.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.845" endtime="20201115 23:02:39.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.843" endtime="20201115 23:02:39.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.842" endtime="20201115 23:02:39.239"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.241" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.250" endtime="20201115 23:02:39.272"></status>
</kw>
<msg timestamp="20201115 23:02:39.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.248" endtime="20201115 23:02:39.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.273" endtime="20201115 23:02:39.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.276" endtime="20201115 23:02:39.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.245" endtime="20201115 23:02:39.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.243" endtime="20201115 23:02:39.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.285" endtime="20201115 23:02:39.570"></status>
</kw>
<msg timestamp="20201115 23:02:39.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022727792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022843833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.283" endtime="20201115 23:02:39.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022727792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022843833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.574" endtime="20201115 23:02:39.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.583" endtime="20201115 23:02:39.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.280" endtime="20201115 23:02:39.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.279" endtime="20201115 23:02:39.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:39.590" level="INFO">${RESULT} = [{'time': 0.022843833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011604100000000075, 'source_diff': 0.00011604100000000075}, {'time': 0.022963847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:39.586" endtime="20201115 23:02:39.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:39.603" level="INFO">${ACCURACY} = {'diff': [0.00011604100000000075, 0.00011580500000000007, 0.00011512499999999717, 0.00011536100000000132, 0.00011620900000000253, 0.00011543099999999917, 0.00011593100000000314, 0.00011530599999999905...</msg>
<status status="PASS" starttime="20201115 23:02:39.591" endtime="20201115 23:02:39.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.608" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:02:39.607" endtime="20201115 23:02:39.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.610" level="INFO">VALUE: [0.00011604100000000075, 0.00011580500000000007, 0.00011512499999999717, 0.00011536100000000132, 0.00011620900000000253, 0.00011543099999999917, 0.00011593100000000314, 0.00011530599999999905, 0.00011622200000000263, 0.00011619400000000002, 0.0001160689999999999, 0.00011563900000000071, 0.00011576399999999737, 0.00011515299999999978, 0.00011601400000000109, 0.00011613900000000121, 0.00011563900000000071, 0.00011548599999999798, 0.00011601399999999762, 0.00011511100000000107, 0.00011583300000000268, 0.00011604199999999676, 0.00011572200000000213, 0.00011581999999999912, 0.0001157499999999978, 0.00011570800000000256, 0.0001157360000000017, 0.0001155559999999993, 0.00011554199999999973, 0.00011569500000000246, 0.00011612499999999817, 0.00011583299999999921, 0.00011601400000000109, 0.00011548600000000145, 0.00011555499999999982, 0.00011580599999999955, 0.00011565300000000028, 0.000115597000000002, 0.00011550000000000102, 0.00011531999999999862, 0.00011616700000000035, 0.00011615300000000078, 0.00011580599999999955, 0.00011526400000000034, 0.00011530499999999957, 0.0001155689999999994, 0.00011536100000000132, 0.00011527799999999991, 0.00011598599999999848, 0.00011598600000000195]</msg>
<status status="PASS" starttime="20201115 23:02:39.609" endtime="20201115 23:02:39.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.604" endtime="20201115 23:02:39.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.614" endtime="20201115 23:02:39.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:39.617" endtime="20201115 23:02:39.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.615" endtime="20201115 23:02:39.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.612" endtime="20201115 23:02:39.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.242" endtime="20201115 23:02:39.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.240" endtime="20201115 23:02:39.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.239" endtime="20201115 23:02:39.638"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.640" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.649" endtime="20201115 23:02:39.671"></status>
</kw>
<msg timestamp="20201115 23:02:39.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.647" endtime="20201115 23:02:39.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.672" endtime="20201115 23:02:39.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.675" endtime="20201115 23:02:39.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.645" endtime="20201115 23:02:39.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.642" endtime="20201115 23:02:39.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.684" endtime="20201115 23:02:39.970"></status>
</kw>
<msg timestamp="20201115 23:02:39.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023145042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.683" endtime="20201115 23:02:39.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023145042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.974" endtime="20201115 23:02:39.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.982" endtime="20201115 23:02:39.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.680" endtime="20201115 23:02:39.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.678" endtime="20201115 23:02:39.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:39.988" level="INFO">${RESULT} = [{'time': 0.023145042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001162360000000022, 'source_diff': 0.0001162360000000022}, {'time': 0.023265069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:39.985" endtime="20201115 23:02:39.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:40.012" level="INFO">${ACCURACY} = {'diff': [0.0001162360000000022, 0.00011708300000000046, 0.00011644400000000027, 0.00011650000000000202, 0.00011654099999999779, 0.00011694400000000077, 0.00011690299999999806, 0.00011622199999999916,...</msg>
<status status="PASS" starttime="20201115 23:02:39.989" endtime="20201115 23:02:40.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.022" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:02:40.020" endtime="20201115 23:02:40.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.027" level="INFO">VALUE: [0.0001162360000000022, 0.00011708300000000046, 0.00011644400000000027, 0.00011650000000000202, 0.00011654099999999779, 0.00011694400000000077, 0.00011690299999999806, 0.00011622199999999916, 0.0001164300000000007, 0.00011623599999999873, 0.0001167360000000027, 0.0001162499999999983, 0.00011701399999999862, 0.00011638799999999852, 0.00011644400000000027, 0.00011669400000000052, 0.00011691600000000163, 0.00011719400000000102, 0.00011626399999999787, 0.00011719400000000102, 0.00011644499999999974, 0.00011718100000000092, 0.00011715300000000178, 0.00011675000000000227, 0.00011719500000000049, 0.00011679200000000098, 0.00011662499999999867, 0.0001169300000000012, 0.00011644400000000027, 0.00011718100000000092, 0.0001161109999999986, 0.00011623599999999873, 0.00011690299999999806, 0.0001164170000000006, 0.00011623599999999873, 0.00011690300000000153, 0.00011655500000000082, 0.00011691600000000163, 0.00011651400000000159, 0.00011719399999999755, 0.00011699999999999905, 0.00011691699999999763, 0.00011688900000000196, 0.00011647299999999888, 0.00011686099999999935, 0.00011691699999999763, 0.00011679099999999804, 0.00011704100000000175, 0.00011634699999999928, 0.00011701399999999862]</msg>
<status status="PASS" starttime="20201115 23:02:40.024" endtime="20201115 23:02:40.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.014" endtime="20201115 23:02:40.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.034" endtime="20201115 23:02:40.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:40.041" endtime="20201115 23:02:40.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.037" endtime="20201115 23:02:40.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.030" endtime="20201115 23:02:40.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.641" endtime="20201115 23:02:40.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.639" endtime="20201115 23:02:40.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.638" endtime="20201115 23:02:40.066"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.071" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.089" endtime="20201115 23:02:40.112"></status>
</kw>
<msg timestamp="20201115 23:02:40.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.086" endtime="20201115 23:02:40.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.114" endtime="20201115 23:02:40.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.116" endtime="20201115 23:02:40.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.080" endtime="20201115 23:02:40.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.075" endtime="20201115 23:02:40.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.125" endtime="20201115 23:02:40.413"></status>
</kw>
<msg timestamp="20201115 23:02:40.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039355875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039473611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.124" endtime="20201115 23:02:40.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039355875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039473611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.417" endtime="20201115 23:02:40.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.425" endtime="20201115 23:02:40.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.121" endtime="20201115 23:02:40.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.119" endtime="20201115 23:02:40.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:40.431" level="INFO">${RESULT} = [{'time': 0.039473611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011773600000000023, 'source_diff': 0.00011773600000000023}, {'time': 0.039593597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:40.428" endtime="20201115 23:02:40.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:40.444" level="INFO">${ACCURACY} = {'diff': [0.00011773600000000023, 0.00011768000000000195, 0.00011756899999999793, 0.00011800000000000005, 0.00011726399999999887, 0.00011729199999999801, 0.0001178750000000034, 0.0001177499999999998, ...</msg>
<status status="PASS" starttime="20201115 23:02:40.432" endtime="20201115 23:02:40.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.449" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:02:40.448" endtime="20201115 23:02:40.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.451" level="INFO">VALUE: [0.00011773600000000023, 0.00011768000000000195, 0.00011756899999999793, 0.00011800000000000005, 0.00011726399999999887, 0.00011729199999999801, 0.0001178750000000034, 0.0001177499999999998, 0.00011768100000000142, 0.0001181249999999967, 0.00011779199999999851, 0.00011794400000000177, 0.00011738900000000246, 0.00011809699999999757, 0.0001181950000000015, 0.00011723599999999973, 0.00011798600000000048, 0.00011726399999999887, 0.0001181950000000015, 0.00011801300000000015, 0.0001177499999999998, 0.00011779099999999904, 0.00011781900000000511, 0.0001173750000000029, 0.00011818000000000245, 0.00011722200000000016, 0.00011795800000000134, 0.00011816599999999594, 0.00011734800000000323, 0.00011749999999999955, 0.00011743100000000117, 0.00011777799999999894, 0.00011730500000000504, 0.00011747200000000041, 0.0001179300000000022, 0.00011791600000000263, 0.00011748599999999998, 0.00011759799999999654, 0.00011776399999999937, 0.00011732000000000409, 0.00011797200000000091, 0.00011763899999999577, 0.00011711199999999561, 0.00011749999999999955, 0.00011813899999999627, 0.00011747199999999347, 0.00011815300000000278, 0.00011733299999999725, 0.0001175699999999974, 0.00011730600000000452]</msg>
<status status="PASS" starttime="20201115 23:02:40.450" endtime="20201115 23:02:40.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.445" endtime="20201115 23:02:40.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.454" endtime="20201115 23:02:40.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:40.458" endtime="20201115 23:02:40.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.456" endtime="20201115 23:02:40.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.453" endtime="20201115 23:02:40.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.072" endtime="20201115 23:02:40.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.068" endtime="20201115 23:02:40.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.067" endtime="20201115 23:02:40.479"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.482" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.490" endtime="20201115 23:02:40.511"></status>
</kw>
<msg timestamp="20201115 23:02:40.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.488" endtime="20201115 23:02:40.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.513" endtime="20201115 23:02:40.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.515" endtime="20201115 23:02:40.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.485" endtime="20201115 23:02:40.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.483" endtime="20201115 23:02:40.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.524" endtime="20201115 23:02:40.812"></status>
</kw>
<msg timestamp="20201115 23:02:40.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021878931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.522" endtime="20201115 23:02:40.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021878931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.821" endtime="20201115 23:02:40.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.838" endtime="20201115 23:02:40.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.520" endtime="20201115 23:02:40.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.518" endtime="20201115 23:02:40.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:40.852" level="INFO">${RESULT} = [{'time': 0.021878931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011890300000000006, 'source_diff': 0.00011890300000000006}, {'time': 0.022000972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:40.845" endtime="20201115 23:02:40.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:40.881" level="INFO">${ACCURACY} = {'diff': [0.00011890300000000006, 0.0001191110000000016, 0.0001183049999999991, 0.00011836100000000085, 0.00011879199999999951, 0.0001187500000000008, 0.00011887499999999745, 0.0001189029999999966, 0....</msg>
<status status="PASS" starttime="20201115 23:02:40.854" endtime="20201115 23:02:40.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.891" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:02:40.889" endtime="20201115 23:02:40.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.896" level="INFO">VALUE: [0.00011890300000000006, 0.0001191110000000016, 0.0001183049999999991, 0.00011836100000000085, 0.00011879199999999951, 0.0001187500000000008, 0.00011887499999999745, 0.0001189029999999966, 0.00011899999999999758, 0.00011862500000000067, 0.00011892999999999973, 0.00011917999999999998, 0.00011827799999999944, 0.00011872200000000166, 0.00011851400000000012, 0.0001189439999999993, 0.00011842999999999923, 0.00011894499999999877, 0.00011872200000000166, 0.00011915300000000031, 0.00011847199999999794, 0.00011836099999999738, 0.00011887500000000092, 0.00011867999999999948, 0.00011909699999999857, 0.0001189439999999993, 0.00011836100000000085, 0.00011890300000000006, 0.00011905599999999933, 0.00011916699999999988, 0.00011812500000000017, 0.00011901299999999768, 0.00011836200000000033, 0.00011843100000000217, 0.00011837500000000042, 0.00011812500000000017, 0.00011833299999999825, 0.00011898599999999801, 0.00011899999999999758, 0.00011870799999999862, 0.000118389, 0.0001185699999999984, 0.00011850000000000055, 0.000118695000000002, 0.00011829099999999954, 0.00011816699999999888, 0.00011869399999999905, 0.00011892999999999973, 0.00011904199999999976, 0.00011851400000000012]</msg>
<status status="PASS" starttime="20201115 23:02:40.893" endtime="20201115 23:02:40.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.883" endtime="20201115 23:02:40.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.904" endtime="20201115 23:02:40.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:40.911" endtime="20201115 23:02:40.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.907" endtime="20201115 23:02:40.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.900" endtime="20201115 23:02:40.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.482" endtime="20201115 23:02:40.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.480" endtime="20201115 23:02:40.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.480" endtime="20201115 23:02:40.932"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.934" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.942" endtime="20201115 23:02:40.964"></status>
</kw>
<msg timestamp="20201115 23:02:40.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.941" endtime="20201115 23:02:40.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.965" endtime="20201115 23:02:40.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.968" endtime="20201115 23:02:40.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.938" endtime="20201115 23:02:40.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.936" endtime="20201115 23:02:40.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.977" endtime="20201115 23:02:41.262"></status>
</kw>
<msg timestamp="20201115 23:02:41.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.975" endtime="20201115 23:02:41.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.267" endtime="20201115 23:02:41.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.275" endtime="20201115 23:02:41.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.973" endtime="20201115 23:02:41.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.971" endtime="20201115 23:02:41.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:41.282" level="INFO">${RESULT} = [{'time': 0.021879042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011965300000000081, 'source_diff': 0.00011965300000000081}, {'time': 0.022002111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:41.278" endtime="20201115 23:02:41.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:41.295" level="INFO">${ACCURACY} = {'diff': [0.00011965300000000081, 0.00011983299999999975, 0.00011948700000000145, 0.00012006900000000043, 0.00011936100000000185, 0.00011950000000000155, 0.00011979200000000051, 0.00011966700000000038...</msg>
<status status="PASS" starttime="20201115 23:02:41.283" endtime="20201115 23:02:41.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.300" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:02:41.299" endtime="20201115 23:02:41.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.303" level="INFO">VALUE: [0.00011965300000000081, 0.00011983299999999975, 0.00011948700000000145, 0.00012006900000000043, 0.00011936100000000185, 0.00011950000000000155, 0.00011979200000000051, 0.00011966700000000038, 0.00011994499999999977, 0.00011954199999999679, 0.00012016700000000088, 0.0001196379999999983, 0.00011966699999999691, 0.0001201249999999987, 0.00012011099999999914, 0.00011979100000000104, 0.00011981900000000018, 0.00012002799999999772, 0.00011906899999999943, 0.00011963900000000124, 0.00011980600000000008, 0.00011955599999999983, 0.00012005600000000033, 0.00011973599999999876, 0.00011924999999999783, 0.0001193050000000001, 0.000119389000000001, 0.00011951400000000112, 0.00011986100000000235, 0.0001196110000000021, 0.00011948599999999851, 0.00011952800000000069, 0.0001199310000000002, 0.00011968099999999995, 0.00011983299999999975, 0.00012000000000000205, 0.0001193050000000001, 0.00011965200000000134, 0.00011987500000000192, 0.00011948600000000198, 0.00011963900000000124, 0.00011936100000000185, 0.00011929200000000001, 0.00012019500000000002, 0.00011987500000000192, 0.00011987499999999846, 0.00011997299999999891, 0.0001197500000000018, 0.00011963900000000124, 0.00011997199999999944]</msg>
<status status="PASS" starttime="20201115 23:02:41.301" endtime="20201115 23:02:41.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.296" endtime="20201115 23:02:41.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.306" endtime="20201115 23:02:41.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:41.309" endtime="20201115 23:02:41.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.307" endtime="20201115 23:02:41.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.304" endtime="20201115 23:02:41.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.935" endtime="20201115 23:02:41.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.933" endtime="20201115 23:02:41.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.932" endtime="20201115 23:02:41.330"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.332" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.340" endtime="20201115 23:02:41.363"></status>
</kw>
<msg timestamp="20201115 23:02:41.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.339" endtime="20201115 23:02:41.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.364" endtime="20201115 23:02:41.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.367" endtime="20201115 23:02:41.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.336" endtime="20201115 23:02:41.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.334" endtime="20201115 23:02:41.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.376" endtime="20201115 23:02:41.660"></status>
</kw>
<msg timestamp="20201115 23:02:41.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022671125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.374" endtime="20201115 23:02:41.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022671125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.664" endtime="20201115 23:02:41.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.672" endtime="20201115 23:02:41.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.372" endtime="20201115 23:02:41.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.370" endtime="20201115 23:02:41.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:41.678" level="INFO">${RESULT} = [{'time': 0.022792125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012099999999999958, 'source_diff': 0.00012099999999999958}, {'time': 0.022919139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:41.675" endtime="20201115 23:02:41.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:41.693" level="INFO">${ACCURACY} = {'diff': [0.00012099999999999958, 0.00012100000000000305, 0.00012074999999999933, 0.00012084700000000032, 0.00012055599999999736, 0.00012097199999999697, 0.00012098699999999948, 0.00012083299999999728...</msg>
<status status="PASS" starttime="20201115 23:02:41.680" endtime="20201115 23:02:41.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.698" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:02:41.697" endtime="20201115 23:02:41.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.700" level="INFO">VALUE: [0.00012099999999999958, 0.00012100000000000305, 0.00012074999999999933, 0.00012084700000000032, 0.00012055599999999736, 0.00012097199999999697, 0.00012098699999999948, 0.00012083299999999728, 0.00012061099999999964, 0.00012061099999999964, 0.00012117999999999851, 0.00012108299999999753, 0.00012086099999999989, 0.00012016600000000141, 0.00012030600000000058, 0.0001201249999999987, 0.00012087499999999946, 0.00012099999999999958, 0.00012119399999999808, 0.00012101399999999915, 0.00012042999999999776, 0.00012065300000000181, 0.00012072200000000019, 0.00012049999999999908, 0.00012036099999999939, 0.00012054200000000126, 0.00012116700000000188, 0.00012099999999999958, 0.00012056900000000093, 0.00012031900000000068, 0.00012079099999999857, 0.00012061099999999964, 0.00012104199999999829, 0.00012099999999999958, 0.00012079200000000151, 0.0001207639999999989, 0.00012009699999999957, 0.00012045899999999984, 0.00012041699999999766, 0.00012080599999999761, 0.00012051400000000212, 0.00012087500000000292, 0.00012068000000000148, 0.00012072200000000019, 0.00012043099999999723, 0.0001206110000000031, 0.00012074999999999933, 0.00012118100000000145, 0.00012118099999999798, 0.00012081900000000118]</msg>
<status status="PASS" starttime="20201115 23:02:41.699" endtime="20201115 23:02:41.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.694" endtime="20201115 23:02:41.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.703" endtime="20201115 23:02:41.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:41.707" endtime="20201115 23:02:41.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.705" endtime="20201115 23:02:41.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.702" endtime="20201115 23:02:41.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.333" endtime="20201115 23:02:41.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.331" endtime="20201115 23:02:41.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.330" endtime="20201115 23:02:41.728"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.730" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.738" endtime="20201115 23:02:41.758"></status>
</kw>
<msg timestamp="20201115 23:02:41.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.737" endtime="20201115 23:02:41.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.760" endtime="20201115 23:02:41.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.762" endtime="20201115 23:02:41.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.734" endtime="20201115 23:02:41.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.732" endtime="20201115 23:02:41.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.771" endtime="20201115 23:02:42.057"></status>
</kw>
<msg timestamp="20201115 23:02:42.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.770" endtime="20201115 23:02:42.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:42.061" endtime="20201115 23:02:42.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.069" endtime="20201115 23:02:42.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.767" endtime="20201115 23:02:42.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.765" endtime="20201115 23:02:42.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:42.076" level="INFO">${RESULT} = [{'time': 0.021929389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012219500000000202, 'source_diff': 0.00012219500000000202}, {'time': 0.022055403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:42.073" endtime="20201115 23:02:42.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:42.089" level="INFO">${ACCURACY} = {'diff': [0.00012219500000000202, 0.00012144500000000127, 0.00012201400000000015, 0.00012175000000000033, 0.000122083999999998, 0.00012173600000000076, 0.00012124999999999983, 0.00012106900000000143, ...</msg>
<status status="PASS" starttime="20201115 23:02:42.077" endtime="20201115 23:02:42.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.093" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:02:42.092" endtime="20201115 23:02:42.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.096" level="INFO">VALUE: [0.00012219500000000202, 0.00012144500000000127, 0.00012201400000000015, 0.00012175000000000033, 0.000122083999999998, 0.00012173600000000076, 0.00012124999999999983, 0.00012106900000000143, 0.00012205499999999939, 0.00012219399999999908, 0.00012204199999999929, 0.0001219310000000022, 0.00012216599999999994, 0.00012173599999999729, 0.00012206899999999896, 0.00012156899999999846, 0.00012158299999999803, 0.00012204099999999982, 0.00012161100000000064, 0.00012194399999999883, 0.00012197200000000144, 0.00012180599999999861, 0.00012211099999999767, 0.00012138899999999953, 0.00012201399999999668, 0.0001216380000000003, 0.000121389000000003, 0.00012173600000000076, 0.00012198600000000101, 0.00012167999999999901, 0.00012151399999999965, 0.00012212499999999724, 0.00012187499999999699, 0.00012220899999999812, 0.00012187500000000046, 0.00012218099999999898, 0.00012187500000000046, 0.00012201400000000015, 0.00012115300000000231, 0.00012183300000000175, 0.00012138899999999953, 0.00012137499999999996, 0.00012127800000000244, 0.00012183399999999775, 0.00012201400000000015, 0.0001221799999999995, 0.00012202799999999972, 0.00012150000000000008, 0.0001219449999999983, 0.0001213189999999982]</msg>
<status status="PASS" starttime="20201115 23:02:42.094" endtime="20201115 23:02:42.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.090" endtime="20201115 23:02:42.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.099" endtime="20201115 23:02:42.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:42.103" endtime="20201115 23:02:42.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.101" endtime="20201115 23:02:42.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.097" endtime="20201115 23:02:42.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.731" endtime="20201115 23:02:42.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.729" endtime="20201115 23:02:42.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.728" endtime="20201115 23:02:42.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.158" endtime="20201115 23:02:42.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:42.128" endtime="20201115 23:02:42.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.126" endtime="20201115 23:02:42.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.125" endtime="20201115 23:02:42.148"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:02:02.084" endtime="20201115 23:02:42.149" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:01:20.835" endtime="20201115 23:02:42.153"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 23:01:18.918" endtime="20201115 23:02:42.166"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
