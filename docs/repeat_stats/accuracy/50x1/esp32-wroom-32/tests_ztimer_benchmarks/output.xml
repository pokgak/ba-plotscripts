<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:59:46.184" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.749" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:46.757" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:47.732" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:46.747" endtime="20201115 22:59:47.733"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.735" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:47.734" endtime="20201115 22:59:47.736"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.746" endtime="20201115 22:59:47.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.739" endtime="20201115 22:59:47.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.737" endtime="20201115 22:59:47.924"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.936" endtime="20201115 22:59:47.956"></status>
</kw>
<msg timestamp="20201115 22:59:47.957" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.935" endtime="20201115 22:59:47.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.959" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.958" endtime="20201115 22:59:47.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.963" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:47.960" endtime="20201115 22:59:47.963"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:47.932" endtime="20201115 22:59:47.964"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:47.930" endtime="20201115 22:59:47.965"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.929" endtime="20201115 22:59:47.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:47.969" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:47.968" endtime="20201115 22:59:47.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.966" endtime="20201115 22:59:47.969"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.928" endtime="20201115 22:59:47.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.927" endtime="20201115 22:59:47.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.971" endtime="20201115 22:59:47.972"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.926" endtime="20201115 22:59:47.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.973" endtime="20201115 22:59:47.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.924" endtime="20201115 22:59:47.975"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.744" endtime="20201115 22:59:47.976"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.982" endtime="20201115 22:59:48.001"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.980" endtime="20201115 22:59:48.002"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.016" endtime="20201115 22:59:48.033"></status>
</kw>
<msg timestamp="20201115 22:59:48.034" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.014" endtime="20201115 22:59:48.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.036" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.035" endtime="20201115 22:59:48.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.039" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:48.037" endtime="20201115 22:59:48.040"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:48.012" endtime="20201115 22:59:48.040"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:48.009" endtime="20201115 22:59:48.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.007" endtime="20201115 22:59:48.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:48.045" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:48.044" endtime="20201115 22:59:48.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.042" endtime="20201115 22:59:48.045"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.006" endtime="20201115 22:59:48.046"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.006" endtime="20201115 22:59:48.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.046" endtime="20201115 22:59:48.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.004" endtime="20201115 22:59:48.048"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.003" endtime="20201115 22:59:48.049"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.979" endtime="20201115 22:59:48.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.056" endtime="20201115 22:59:48.069"></status>
</kw>
<msg timestamp="20201115 22:59:48.069" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.055" endtime="20201115 22:59:48.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.072" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:48.070" endtime="20201115 22:59:48.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:48.073" endtime="20201115 22:59:48.074"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.052" endtime="20201115 22:59:48.075"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.050" endtime="20201115 22:59:48.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.080" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:59:48.079" endtime="20201115 22:59:48.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.082" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:59:48.081" endtime="20201115 22:59:48.082"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.076" endtime="20201115 22:59:48.082"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:47.976" endtime="20201115 22:59:48.083" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:46.295" endtime="20201115 22:59:48.087"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:48.141" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:48.149" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:49.213" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:48.140" endtime="20201115 22:59:49.214"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.219" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:49.216" endtime="20201115 22:59:49.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.138" endtime="20201115 22:59:49.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.223" endtime="20201115 22:59:49.444"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.222" endtime="20201115 22:59:49.445"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.457" endtime="20201115 22:59:49.478"></status>
</kw>
<msg timestamp="20201115 22:59:49.479" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.455" endtime="20201115 22:59:49.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.481" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.480" endtime="20201115 22:59:49.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.484" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:49.482" endtime="20201115 22:59:49.484"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:49.453" endtime="20201115 22:59:49.485"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:49.451" endtime="20201115 22:59:49.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.450" endtime="20201115 22:59:49.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:49.490" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:49.489" endtime="20201115 22:59:49.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.487" endtime="20201115 22:59:49.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.449" endtime="20201115 22:59:49.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.448" endtime="20201115 22:59:49.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.491" endtime="20201115 22:59:49.493"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.447" endtime="20201115 22:59:49.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.494" endtime="20201115 22:59:49.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.445" endtime="20201115 22:59:49.496"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:48.137" endtime="20201115 22:59:49.496"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.502" endtime="20201115 22:59:49.523"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.501" endtime="20201115 22:59:49.523"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.536" endtime="20201115 22:59:49.553"></status>
</kw>
<msg timestamp="20201115 22:59:49.553" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.535" endtime="20201115 22:59:49.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.556" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.555" endtime="20201115 22:59:49.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.559" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:49.557" endtime="20201115 22:59:49.559"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:49.532" endtime="20201115 22:59:49.560"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:49.530" endtime="20201115 22:59:49.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.528" endtime="20201115 22:59:49.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:49.565" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:49.564" endtime="20201115 22:59:49.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.562" endtime="20201115 22:59:49.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.528" endtime="20201115 22:59:49.565"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.527" endtime="20201115 22:59:49.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.566" endtime="20201115 22:59:49.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.526" endtime="20201115 22:59:49.568"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.524" endtime="20201115 22:59:49.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.499" endtime="20201115 22:59:49.569"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.573" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.582" endtime="20201115 22:59:49.598"></status>
</kw>
<msg timestamp="20201115 22:59:49.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.579" endtime="20201115 22:59:49.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.600" endtime="20201115 22:59:49.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.602" endtime="20201115 22:59:49.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.577" endtime="20201115 22:59:49.604"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.575" endtime="20201115 22:59:49.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.611" endtime="20201115 22:59:49.900"></status>
</kw>
<msg timestamp="20201115 22:59:49.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069098, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069125472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:59:49.610" endtime="20201115 22:59:49.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069098, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069125472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 22:59:49.904" endtime="20201115 22:59:49.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.912" endtime="20201115 22:59:49.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.607" endtime="20201115 22:59:49.914"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.605" endtime="20201115 22:59:49.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:49.919" level="INFO">${RESULT} = [{'time': 0.069125472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.747199999998673e-05, 'source_diff': 2.747199999998673e-05}, {'time': 0.06915475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:59:49.915" endtime="20201115 22:59:49.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:49.933" level="INFO">${ACCURACY} = {'source_diff': [2.747199999998673e-05, 1.3653000000002358e-05, 1.40969999999907e-05, 1.4097000000004578e-05, 1.3610999999996709e-05, 1.3917000000002178e-05, 1.4110999999997209e-05, 1.3929999999995335...</msg>
<status status="PASS" starttime="20201115 22:59:49.920" endtime="20201115 22:59:49.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.937" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 22:59:49.936" endtime="20201115 22:59:49.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.940" level="INFO">VALUE: [2.747199999998673e-05, 1.3653000000002358e-05, 1.40969999999907e-05, 1.4097000000004578e-05, 1.3610999999996709e-05, 1.3917000000002178e-05, 1.4110999999997209e-05, 1.3929999999995335e-05, 1.3638999999995849e-05, 1.3917000000002178e-05, 1.4361000000004398e-05, 1.4110999999997209e-05, 1.4249999999993435e-05, 1.3917000000002178e-05, 1.4236000000000804e-05, 1.4083999999997543e-05, 1.4402999999996169e-05, 1.4500000000000624e-05, 1.3874999999996529e-05, 1.4208000000001664e-05, 1.3972000000000984e-05, 1.4361000000004398e-05, 1.3736000000000304e-05, 1.4041999999991894e-05, 1.4361000000004398e-05, 1.436099999999052e-05, 1.3709000000000637e-05, 1.4042000000005772e-05, 1.384699999999739e-05, 1.3736000000000304e-05, 1.3931000000008686e-05, 1.4222999999993768e-05, 1.4194999999994629e-05, 1.3653000000002358e-05, 1.4195000000008506e-05, 1.3694999999994129e-05, 1.405499999999893e-05, 1.3542000000005272e-05, 1.434699999999789e-05, 1.4097999999990174e-05, 1.3723000000007146e-05, 1.4193999999995155e-05, 1.3665999999995515e-05, 1.4250000000007312e-05, 1.3958000000008353e-05, 1.4416000000003204e-05, 1.4431000000009186e-05, 1.429099999999961e-05, 1.412499999998984e-05, 1.379099999999911e-05]</msg>
<status status="PASS" starttime="20201115 22:59:49.938" endtime="20201115 22:59:49.940"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.934" endtime="20201115 22:59:49.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.943" endtime="20201115 22:59:49.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.946" endtime="20201115 22:59:49.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.945" endtime="20201115 22:59:49.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.941" endtime="20201115 22:59:49.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.573" endtime="20201115 22:59:49.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.571" endtime="20201115 22:59:49.967"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.570" endtime="20201115 22:59:49.967"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.970" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.978" endtime="20201115 22:59:49.996"></status>
</kw>
<msg timestamp="20201115 22:59:49.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.977" endtime="20201115 22:59:49.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.997" endtime="20201115 22:59:49.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.000" endtime="20201115 22:59:50.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.974" endtime="20201115 22:59:50.002"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.972" endtime="20201115 22:59:50.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.009" endtime="20201115 22:59:50.293"></status>
</kw>
<msg timestamp="20201115 22:59:50.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022761, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02277475, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:59:50.007" endtime="20201115 22:59:50.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022761, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02277475, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201115 22:59:50.298" endtime="20201115 22:59:50.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.306" endtime="20201115 22:59:50.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.005" endtime="20201115 22:59:50.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.003" endtime="20201115 22:59:50.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:50.313" level="INFO">${RESULT} = [{'time': 0.02277475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.022804736, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 22:59:50.310" endtime="20201115 22:59:50.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:50.327" level="INFO">${ACCURACY} = {'source_diff': [1.3749999999999873e-05, 1.4471999999998014e-05, 1.4361000000000929e-05, 1.3695000000001067e-05, 1.3666999999998458e-05, 1.3986000000000554e-05, 1.3721999999997264e-05, 1.4027999999999...</msg>
<status status="PASS" starttime="20201115 22:59:50.314" endtime="20201115 22:59:50.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.331" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 22:59:50.330" endtime="20201115 22:59:50.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.334" level="INFO">VALUE: [1.3749999999999873e-05, 1.4471999999998014e-05, 1.4361000000000929e-05, 1.3695000000001067e-05, 1.3666999999998458e-05, 1.3986000000000554e-05, 1.3721999999997264e-05, 1.4027999999999263e-05, 1.4402999999999638e-05, 1.4430999999998778e-05, 1.3917000000002178e-05, 1.4041999999998833e-05, 1.4458000000001914e-05, 1.3874999999999998e-05, 1.431899999999875e-05, 1.3695000000001067e-05, 1.4041999999998833e-05, 1.3847000000000859e-05, 1.4375000000000498e-05, 1.3945000000001317e-05, 1.4458999999997918e-05, 1.3749999999999873e-05, 1.4431000000002248e-05, 1.4361000000000929e-05, 1.3667000000001928e-05, 1.3874999999999998e-05, 1.3848000000000332e-05, 1.3637999999999845e-05, 1.433299999999832e-05, 1.3930000000002274e-05, 1.4473000000000957e-05, 1.3611999999999652e-05, 1.4429999999999304e-05, 1.3472999999999957e-05, 1.3736000000000304e-05, 1.3638999999999318e-05, 1.4208000000001664e-05, 1.3915999999999235e-05, 1.3888000000000095e-05, 1.402699999999979e-05, 1.4166000000002954e-05, 1.4194000000002094e-05, 1.4415999999999735e-05, 1.404099999999936e-05, 1.4236000000000804e-05, 1.3791000000002579e-05, 1.4443999999998874e-05, 1.404099999999936e-05, 1.430499999999918e-05, 1.4152999999999388e-05]</msg>
<status status="PASS" starttime="20201115 22:59:50.332" endtime="20201115 22:59:50.334"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.328" endtime="20201115 22:59:50.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.337" endtime="20201115 22:59:50.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:50.340" endtime="20201115 22:59:50.359"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.339" endtime="20201115 22:59:50.360"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.335" endtime="20201115 22:59:50.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.970" endtime="20201115 22:59:50.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.969" endtime="20201115 22:59:50.361"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.968" endtime="20201115 22:59:50.361"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.364" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.372" endtime="20201115 22:59:50.390"></status>
</kw>
<msg timestamp="20201115 22:59:50.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.370" endtime="20201115 22:59:50.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.391" endtime="20201115 22:59:50.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.394" endtime="20201115 22:59:50.395"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.368" endtime="20201115 22:59:50.396"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.365" endtime="20201115 22:59:50.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.403" endtime="20201115 22:59:50.688"></status>
</kw>
<msg timestamp="20201115 22:59:50.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:50.402" endtime="20201115 22:59:50.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:50.692" endtime="20201115 22:59:50.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.700" endtime="20201115 22:59:50.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.399" endtime="20201115 22:59:50.702"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.397" endtime="20201115 22:59:50.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:50.707" level="INFO">${RESULT} = [{'time': 0.022694167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3667000000001928e-05, 'source_diff': 1.3667000000001928e-05}, {'time': 0.022723181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:50.703" endtime="20201115 22:59:50.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:50.721" level="INFO">${ACCURACY} = {'source_diff': [1.3667000000001928e-05, 1.3736999999999777e-05, 1.4083999999997543e-05, 1.3888000000000095e-05, 1.4430999999998778e-05, 1.3611999999999652e-05, 1.3611000000000179e-05, 1.3736999999999...</msg>
<status status="PASS" starttime="20201115 22:59:50.708" endtime="20201115 22:59:50.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.726" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 22:59:50.725" endtime="20201115 22:59:50.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.729" level="INFO">VALUE: [1.3667000000001928e-05, 1.3736999999999777e-05, 1.4083999999997543e-05, 1.3888000000000095e-05, 1.4430999999998778e-05, 1.3611999999999652e-05, 1.3611000000000179e-05, 1.3736999999999777e-05, 1.3666999999998458e-05, 1.3847999999996863e-05, 1.3973000000000457e-05, 1.4112000000000152e-05, 1.4235999999997334e-05, 1.3986000000000554e-05, 1.3901999999999665e-05, 1.3680000000002024e-05, 1.3986000000000554e-05, 1.4125000000000248e-05, 1.426300000000047e-05, 1.408299999999807e-05, 1.3915999999999235e-05, 1.4179999999999054e-05, 1.380499999999868e-05, 1.3902999999999138e-05, 1.4402000000000165e-05, 1.405499999999893e-05, 1.3638999999999318e-05, 1.4111000000000679e-05, 1.4361000000000929e-05, 1.4389000000000068e-05, 1.4416999999999208e-05, 1.4236000000000804e-05, 1.4472000000001484e-05, 1.3624999999999748e-05, 1.3666999999998458e-05, 1.3693999999998124e-05, 1.4485999999997584e-05, 1.3931000000001748e-05, 1.3736000000000304e-05, 1.3986000000000554e-05, 1.4471999999998014e-05, 1.4360999999997459e-05, 1.3985999999997084e-05, 1.4305999999998653e-05, 1.3861000000000429e-05, 1.405499999999893e-05, 1.3653000000002358e-05, 1.4486000000001054e-05, 1.4000000000000123e-05, 1.4125000000000248e-05]</msg>
<status status="PASS" starttime="20201115 22:59:50.727" endtime="20201115 22:59:50.730"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.722" endtime="20201115 22:59:50.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.732" endtime="20201115 22:59:50.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:50.736" endtime="20201115 22:59:50.755"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.734" endtime="20201115 22:59:50.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.731" endtime="20201115 22:59:50.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.364" endtime="20201115 22:59:50.756"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.362" endtime="20201115 22:59:50.757"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.362" endtime="20201115 22:59:50.757"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.759" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.767" endtime="20201115 22:59:50.785"></status>
</kw>
<msg timestamp="20201115 22:59:50.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.766" endtime="20201115 22:59:50.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.787" endtime="20201115 22:59:50.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.790" endtime="20201115 22:59:50.791"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.763" endtime="20201115 22:59:50.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.761" endtime="20201115 22:59:50.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.798" endtime="20201115 22:59:51.084"></status>
</kw>
<msg timestamp="20201115 22:59:51.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021634903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.797" endtime="20201115 22:59:51.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021634903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.088" endtime="20201115 22:59:51.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.096" endtime="20201115 22:59:51.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.794" endtime="20201115 22:59:51.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.793" endtime="20201115 22:59:51.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.103" level="INFO">${RESULT} = [{'time': 0.021634903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3722000000000734e-05, 'source_diff': 1.3722000000000734e-05}, {'time': 0.021663917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:51.100" endtime="20201115 22:59:51.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.117" level="INFO">${ACCURACY} = {'source_diff': [1.3722000000000734e-05, 1.4375000000000498e-05, 1.3931000000001748e-05, 1.3874999999999998e-05, 1.3611000000000179e-05, 1.3528000000002233e-05, 1.4083999999997543e-05, 1.3848000000000...</msg>
<status status="PASS" starttime="20201115 22:59:51.104" endtime="20201115 22:59:51.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.121" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.120" endtime="20201115 22:59:51.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.123" level="INFO">VALUE: [1.3722000000000734e-05, 1.4375000000000498e-05, 1.3931000000001748e-05, 1.3874999999999998e-05, 1.3611000000000179e-05, 1.3528000000002233e-05, 1.4083999999997543e-05, 1.3848000000000332e-05, 1.3888000000000095e-05, 1.3916999999998708e-05, 1.3666999999998458e-05, 1.4388000000000595e-05, 1.3874999999999998e-05, 1.4415999999999735e-05, 1.4221999999997764e-05, 1.4041999999998833e-05, 1.4180000000002524e-05, 1.377699999999954e-05, 1.3929999999998804e-05, 1.4236000000000804e-05, 1.404099999999936e-05, 1.4111000000000679e-05, 1.4151999999999915e-05, 1.4179999999999054e-05, 1.3736000000000304e-05, 1.3915999999999235e-05, 1.4374999999997029e-05, 1.3665999999998985e-05, 1.4221999999997764e-05, 1.4486000000001054e-05, 1.3639000000002788e-05, 1.4000000000000123e-05, 1.4236000000000804e-05, 1.3652999999998888e-05, 1.4111000000000679e-05, 1.3971999999997514e-05, 1.4486000000001054e-05, 1.4180999999998528e-05, 1.3820000000001192e-05, 1.4292000000002553e-05, 1.4042000000002303e-05, 1.4527999999999763e-05, 1.3638999999999318e-05, 1.4193999999998624e-05, 1.4056000000001873e-05, 1.3541999999998333e-05, 1.4180999999998528e-05, 1.3639000000002788e-05, 1.3624999999999748e-05, 1.3611000000000179e-05]</msg>
<status status="PASS" starttime="20201115 22:59:51.122" endtime="20201115 22:59:51.124"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.117" endtime="20201115 22:59:51.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.127" endtime="20201115 22:59:51.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.130" endtime="20201115 22:59:51.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.129" endtime="20201115 22:59:51.150"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.125" endtime="20201115 22:59:51.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.760" endtime="20201115 22:59:51.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.758" endtime="20201115 22:59:51.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.757" endtime="20201115 22:59:51.151"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.154" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.162" endtime="20201115 22:59:51.179"></status>
</kw>
<msg timestamp="20201115 22:59:51.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.161" endtime="20201115 22:59:51.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.181" endtime="20201115 22:59:51.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.183" endtime="20201115 22:59:51.185"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.158" endtime="20201115 22:59:51.186"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.156" endtime="20201115 22:59:51.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.193" endtime="20201115 22:59:51.478"></status>
</kw>
<msg timestamp="20201115 22:59:51.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.191" endtime="20201115 22:59:51.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.482" endtime="20201115 22:59:51.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.490" endtime="20201115 22:59:51.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.189" endtime="20201115 22:59:51.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.187" endtime="20201115 22:59:51.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.497" level="INFO">${RESULT} = [{'time': 0.022209028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3916999999998708e-05, 'source_diff': 1.3916999999998708e-05}, {'time': 0.022236986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:51.493" endtime="20201115 22:59:51.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.510" level="INFO">${ACCURACY} = {'source_diff': [1.3916999999998708e-05, 1.4375000000000498e-05, 1.4125000000000248e-05, 1.4111000000000679e-05, 1.4041999999998833e-05, 1.4167000000002428e-05, 1.4305999999998653e-05, 1.4111000000000...</msg>
<status status="PASS" starttime="20201115 22:59:51.498" endtime="20201115 22:59:51.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.515" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.514" endtime="20201115 22:59:51.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.517" level="INFO">VALUE: [1.3916999999998708e-05, 1.4375000000000498e-05, 1.4125000000000248e-05, 1.4111000000000679e-05, 1.4041999999998833e-05, 1.4167000000002428e-05, 1.4305999999998653e-05, 1.4111000000000679e-05, 1.3666999999998458e-05, 1.3680999999998028e-05, 1.4416999999999208e-05, 1.3652999999998888e-05, 1.4111000000000679e-05, 1.3736000000000304e-05, 1.4305999999998653e-05, 1.4444999999998348e-05, 1.3542000000001803e-05, 1.433299999999832e-05, 1.3611000000000179e-05, 1.4333000000001789e-05, 1.4111000000000679e-05, 1.3916999999998708e-05, 1.3916999999998708e-05, 1.4375000000000498e-05, 1.3708000000001164e-05, 1.4402999999999638e-05, 1.3694000000001594e-05, 1.3777999999999013e-05, 1.3999999999996654e-05, 1.3680999999998028e-05, 1.3917000000002178e-05, 1.4375000000000498e-05, 1.3723000000000207e-05, 1.3681000000001498e-05, 1.4291999999999083e-05, 1.4471999999998014e-05, 1.3833999999997293e-05, 1.3542000000001803e-05, 1.4305000000002649e-05, 1.4500000000000624e-05, 1.4236000000000804e-05, 1.404099999999936e-05, 1.4098000000000582e-05, 1.4415999999999735e-05, 1.4402000000000165e-05, 1.433299999999832e-05, 1.4263999999999943e-05, 1.4402000000000165e-05, 1.3665999999998985e-05, 1.4472000000001484e-05]</msg>
<status status="PASS" starttime="20201115 22:59:51.516" endtime="20201115 22:59:51.517"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.511" endtime="20201115 22:59:51.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.521" endtime="20201115 22:59:51.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.524" endtime="20201115 22:59:51.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.523" endtime="20201115 22:59:51.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.518" endtime="20201115 22:59:51.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.155" endtime="20201115 22:59:51.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.152" endtime="20201115 22:59:51.545"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.152" endtime="20201115 22:59:51.545"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.547" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.556" endtime="20201115 22:59:51.573"></status>
</kw>
<msg timestamp="20201115 22:59:51.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.554" endtime="20201115 22:59:51.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.575" endtime="20201115 22:59:51.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.577" endtime="20201115 22:59:51.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.552" endtime="20201115 22:59:51.579"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.549" endtime="20201115 22:59:51.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.586" endtime="20201115 22:59:51.872"></status>
</kw>
<msg timestamp="20201115 22:59:51.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.585" endtime="20201115 22:59:51.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.876" endtime="20201115 22:59:51.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.885" endtime="20201115 22:59:51.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.582" endtime="20201115 22:59:51.887"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.580" endtime="20201115 22:59:51.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.891" level="INFO">${RESULT} = [{'time': 0.021695667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3860999999996959e-05, 'source_diff': 1.3860999999996959e-05}, {'time': 0.021722681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:51.888" endtime="20201115 22:59:51.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.904" level="INFO">${ACCURACY} = {'source_diff': [1.3860999999996959e-05, 1.3945000000001317e-05, 1.3598000000000082e-05, 1.4389000000000068e-05, 1.4362000000000402e-05, 1.4362000000000402e-05, 1.4181000000001998e-05, 1.3611999999999...</msg>
<status status="PASS" starttime="20201115 22:59:51.892" endtime="20201115 22:59:51.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.909" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.908" endtime="20201115 22:59:51.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.912" level="INFO">VALUE: [1.3860999999996959e-05, 1.3945000000001317e-05, 1.3598000000000082e-05, 1.4389000000000068e-05, 1.4362000000000402e-05, 1.4362000000000402e-05, 1.4181000000001998e-05, 1.3611999999999652e-05, 1.4138000000000345e-05, 1.3848000000000332e-05, 1.4179999999999054e-05, 1.3568999999998e-05, 1.3986000000000554e-05, 1.404099999999936e-05, 1.3986000000000554e-05, 1.4472000000001484e-05, 1.4194000000002094e-05, 1.3736000000000304e-05, 1.4222000000001234e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.4375000000000498e-05, 1.4097000000001109e-05, 1.4152999999999388e-05, 1.3929999999998804e-05, 1.404099999999936e-05, 1.4221999999997764e-05, 1.3861000000000429e-05, 1.3749999999999873e-05, 1.3624999999999748e-05, 1.3749999999999873e-05, 1.409699999999764e-05, 1.3847000000000859e-05, 1.4000000000000123e-05, 1.3806000000001623e-05, 1.3930999999998278e-05, 1.4180999999998528e-05, 1.4195000000001567e-05, 1.3624999999999748e-05, 1.3597000000000609e-05, 1.4278000000002983e-05, 1.3695000000001067e-05, 1.3556000000001373e-05, 1.3805999999998153e-05, 1.3611000000000179e-05, 1.4291999999999083e-05, 1.3680999999998028e-05, 1.4430999999998778e-05, 1.4360999999997459e-05, 1.3806000000001623e-05]</msg>
<status status="PASS" starttime="20201115 22:59:51.910" endtime="20201115 22:59:51.912"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.905" endtime="20201115 22:59:51.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.915" endtime="20201115 22:59:51.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.918" endtime="20201115 22:59:51.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.917" endtime="20201115 22:59:51.938"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.914" endtime="20201115 22:59:51.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.548" endtime="20201115 22:59:51.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.546" endtime="20201115 22:59:51.939"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.545" endtime="20201115 22:59:51.940"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.942" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.950" endtime="20201115 22:59:51.968"></status>
</kw>
<msg timestamp="20201115 22:59:51.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.948" endtime="20201115 22:59:51.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.970" endtime="20201115 22:59:51.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.972" endtime="20201115 22:59:51.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.946" endtime="20201115 22:59:51.974"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.944" endtime="20201115 22:59:51.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.982" endtime="20201115 22:59:52.268"></status>
</kw>
<msg timestamp="20201115 22:59:52.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.980" endtime="20201115 22:59:52.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.272" endtime="20201115 22:59:52.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.280" endtime="20201115 22:59:52.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.977" endtime="20201115 22:59:52.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.975" endtime="20201115 22:59:52.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.287" level="INFO">${RESULT} = [{'time': 0.022552403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3777999999999013e-05, 'source_diff': 1.3777999999999013e-05}, {'time': 0.022583375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:52.284" endtime="20201115 22:59:52.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:52.301" level="INFO">${ACCURACY} = {'source_diff': [1.3777999999999013e-05, 1.4430999999998778e-05, 1.4027999999999263e-05, 1.3556000000001373e-05, 1.3930999999998278e-05, 1.3652999999998888e-05, 1.3833000000001289e-05, 1.3541999999998...</msg>
<status status="PASS" starttime="20201115 22:59:52.288" endtime="20201115 22:59:52.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.306" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 22:59:52.305" endtime="20201115 22:59:52.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.309" level="INFO">VALUE: [1.3777999999999013e-05, 1.4430999999998778e-05, 1.4027999999999263e-05, 1.3556000000001373e-05, 1.3930999999998278e-05, 1.3652999999998888e-05, 1.3833000000001289e-05, 1.3541999999998333e-05, 1.4027999999999263e-05, 1.3499999999999623e-05, 1.3555999999997903e-05, 1.3583000000001039e-05, 1.3902999999999138e-05, 1.4249999999996904e-05, 1.3874999999999998e-05, 1.4499999999997154e-05, 1.4473000000000957e-05, 1.3778000000002483e-05, 1.3791999999998583e-05, 1.3874999999999998e-05, 1.3930999999998278e-05, 1.4180999999998528e-05, 1.4458000000001914e-05, 1.4430999999998778e-05, 1.4473000000000957e-05, 1.4250000000000373e-05, 1.4110999999997209e-05, 1.3931000000001748e-05, 1.3597000000000609e-05, 1.4180999999998528e-05, 1.3874999999999998e-05, 1.3666999999998458e-05, 1.3819000000001719e-05, 1.3694000000001594e-05, 1.380499999999868e-05, 1.3638999999999318e-05, 1.429099999999961e-05, 1.4235999999997334e-05, 1.4166999999998958e-05, 1.3943999999998374e-05, 1.3902999999999138e-05, 1.401300000000022e-05, 1.379099999999911e-05, 1.3791000000002579e-05, 1.3541000000002329e-05, 1.3624999999999748e-05, 1.3707999999997694e-05, 1.3944000000001844e-05, 1.3679999999998554e-05, 1.3708000000001164e-05]</msg>
<status status="PASS" starttime="20201115 22:59:52.307" endtime="20201115 22:59:52.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.302" endtime="20201115 22:59:52.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.312" endtime="20201115 22:59:52.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:52.315" endtime="20201115 22:59:52.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.314" endtime="20201115 22:59:52.335"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.310" endtime="20201115 22:59:52.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.943" endtime="20201115 22:59:52.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.941" endtime="20201115 22:59:52.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.940" endtime="20201115 22:59:52.336"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.339" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.347" endtime="20201115 22:59:52.363"></status>
</kw>
<msg timestamp="20201115 22:59:52.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.345" endtime="20201115 22:59:52.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.365" endtime="20201115 22:59:52.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.367" endtime="20201115 22:59:52.369"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.343" endtime="20201115 22:59:52.370"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.341" endtime="20201115 22:59:52.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.376" endtime="20201115 22:59:52.660"></status>
</kw>
<msg timestamp="20201115 22:59:52.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.375" endtime="20201115 22:59:52.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.665" endtime="20201115 22:59:52.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.673" endtime="20201115 22:59:52.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.372" endtime="20201115 22:59:52.675"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.371" endtime="20201115 22:59:52.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.680" level="INFO">${RESULT} = [{'time': 0.021664917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.021692917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:52.676" endtime="20201115 22:59:52.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:52.693" level="INFO">${ACCURACY} = {'source_diff': [1.4013999999999693e-05, 1.3958999999997418e-05, 1.3930000000002274e-05, 1.3792000000002053e-05, 1.4347000000001359e-05, 1.4291999999999083e-05, 1.3542000000001803e-05, 1.4277999999999...</msg>
<status status="PASS" starttime="20201115 22:59:52.681" endtime="20201115 22:59:52.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.698" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 22:59:52.697" endtime="20201115 22:59:52.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.700" level="INFO">VALUE: [1.4013999999999693e-05, 1.3958999999997418e-05, 1.3930000000002274e-05, 1.3792000000002053e-05, 1.4347000000001359e-05, 1.4291999999999083e-05, 1.3542000000001803e-05, 1.4277999999999513e-05, 1.405499999999893e-05, 1.4056000000001873e-05, 1.3902999999999138e-05, 1.3834000000000762e-05, 1.4514000000000193e-05, 1.3916999999998708e-05, 1.3987000000000027e-05, 1.4416999999999208e-05, 1.4208999999997668e-05, 1.404099999999936e-05, 1.380499999999868e-05, 1.3597000000000609e-05, 1.4013999999999693e-05, 1.4111000000000679e-05, 1.3611000000000179e-05, 1.4181000000001998e-05, 1.430499999999918e-05, 1.405499999999893e-05, 1.379099999999911e-05, 1.354099999999886e-05, 1.352699999999929e-05, 1.3986000000000554e-05, 1.4208000000001664e-05, 1.4472000000001484e-05, 1.3707999999997694e-05, 1.4180999999998528e-05, 1.4263999999999943e-05, 1.4361000000000929e-05, 1.4277999999999513e-05, 1.4236000000000804e-05, 1.3681000000001498e-05, 1.4179999999999054e-05, 1.3624999999999748e-05, 1.4514000000000193e-05, 1.3972000000000984e-05, 1.3916999999998708e-05, 1.3722000000000734e-05, 1.3972000000000984e-05, 1.4236000000000804e-05, 1.4167000000002428e-05, 1.3555999999997903e-05, 1.4042000000002303e-05]</msg>
<status status="PASS" starttime="20201115 22:59:52.699" endtime="20201115 22:59:52.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.694" endtime="20201115 22:59:52.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.704" endtime="20201115 22:59:52.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:52.707" endtime="20201115 22:59:52.726"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.705" endtime="20201115 22:59:52.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.702" endtime="20201115 22:59:52.727"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.339" endtime="20201115 22:59:52.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.338" endtime="20201115 22:59:52.728"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.337" endtime="20201115 22:59:52.728"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.730" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.738" endtime="20201115 22:59:52.757"></status>
</kw>
<msg timestamp="20201115 22:59:52.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.737" endtime="20201115 22:59:52.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.758" endtime="20201115 22:59:52.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.761" endtime="20201115 22:59:52.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.734" endtime="20201115 22:59:52.763"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.732" endtime="20201115 22:59:52.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.770" endtime="20201115 22:59:53.055"></status>
</kw>
<msg timestamp="20201115 22:59:53.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:52.768" endtime="20201115 22:59:53.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 22:59:53.059" endtime="20201115 22:59:53.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.068" endtime="20201115 22:59:53.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.766" endtime="20201115 22:59:53.070"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.764" endtime="20201115 22:59:53.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.075" level="INFO">${RESULT} = [{'time': 0.021756056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3555999999997903e-05, 'source_diff': 1.3555999999997903e-05}, {'time': 0.021783056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:53.071" endtime="20201115 22:59:53.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.088" level="INFO">${ACCURACY} = {'source_diff': [1.3555999999997903e-05, 1.4430999999998778e-05, 1.3777999999999013e-05, 1.380499999999868e-05, 1.3915999999999235e-05, 1.354099999999886e-05, 1.401300000000022e-05, 1.4431000000002248...</msg>
<status status="PASS" starttime="20201115 22:59:53.076" endtime="20201115 22:59:53.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.093" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.092" endtime="20201115 22:59:53.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.095" level="INFO">VALUE: [1.3555999999997903e-05, 1.4430999999998778e-05, 1.3777999999999013e-05, 1.380499999999868e-05, 1.3915999999999235e-05, 1.354099999999886e-05, 1.401300000000022e-05, 1.4431000000002248e-05, 1.4110999999997209e-05, 1.4416999999999208e-05, 1.4236000000000804e-05, 1.3986000000000554e-05, 1.3777999999999013e-05, 1.4165999999999485e-05, 1.3861000000000429e-05, 1.3568999999998e-05, 1.3805999999998153e-05, 1.3805999999998153e-05, 1.3708000000001164e-05, 1.4167000000002428e-05, 1.4041999999998833e-05, 1.4181000000001998e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.4292000000002553e-05, 1.4263999999999943e-05, 1.3722000000000734e-05, 1.3736000000000304e-05, 1.3556000000001373e-05, 1.4361000000000929e-05, 1.4167000000002428e-05, 1.3583000000001039e-05, 1.3792000000002053e-05, 1.4499999999997154e-05, 1.4070000000001442e-05, 1.4305999999998653e-05, 1.4445000000001817e-05, 1.4472000000001484e-05, 1.4430999999998778e-05, 1.4416999999999208e-05, 1.3986000000000554e-05, 1.3888999999999568e-05, 1.4361999999996933e-05, 1.4291999999999083e-05, 1.4292000000002553e-05, 1.3931000000001748e-05, 1.3541000000002329e-05, 1.4166999999998958e-05, 1.3694999999997598e-05, 1.3541999999998333e-05]</msg>
<status status="PASS" starttime="20201115 22:59:53.094" endtime="20201115 22:59:53.095"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.089" endtime="20201115 22:59:53.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.098" endtime="20201115 22:59:53.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.102" endtime="20201115 22:59:53.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.100" endtime="20201115 22:59:53.121"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.097" endtime="20201115 22:59:53.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.731" endtime="20201115 22:59:53.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.729" endtime="20201115 22:59:53.122"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.728" endtime="20201115 22:59:53.123"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.125" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.133" endtime="20201115 22:59:53.150"></status>
</kw>
<msg timestamp="20201115 22:59:53.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.132" endtime="20201115 22:59:53.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.152" endtime="20201115 22:59:53.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.154" endtime="20201115 22:59:53.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.129" endtime="20201115 22:59:53.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.127" endtime="20201115 22:59:53.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.164" endtime="20201115 22:59:53.447"></status>
</kw>
<msg timestamp="20201115 22:59:53.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021916875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.162" endtime="20201115 22:59:53.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021916875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.451" endtime="20201115 22:59:53.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.459" endtime="20201115 22:59:53.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.159" endtime="20201115 22:59:53.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.157" endtime="20201115 22:59:53.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.466" level="INFO">${RESULT} = [{'time': 0.021930542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3667000000001928e-05, 'source_diff': 1.3667000000001928e-05}, {'time': 0.021957528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:53.463" endtime="20201115 22:59:53.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.480" level="INFO">${ACCURACY} = {'source_diff': [1.3667000000001928e-05, 1.3806000000001623e-05, 1.4097000000001109e-05, 1.4444999999998348e-05, 1.3973000000000457e-05, 1.4348000000000832e-05, 1.4070000000001442e-05, 1.3583000000001...</msg>
<status status="PASS" starttime="20201115 22:59:53.467" endtime="20201115 22:59:53.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.484" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.483" endtime="20201115 22:59:53.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.486" level="INFO">VALUE: [1.3667000000001928e-05, 1.3806000000001623e-05, 1.4097000000001109e-05, 1.4444999999998348e-05, 1.3973000000000457e-05, 1.4348000000000832e-05, 1.4070000000001442e-05, 1.3583000000001039e-05, 1.3638999999999318e-05, 1.355499999999843e-05, 1.3861000000000429e-05, 1.4348000000000832e-05, 1.3583000000001039e-05, 1.434699999999789e-05, 1.3722999999996738e-05, 1.3723000000000207e-05, 1.354099999999886e-05, 1.3847000000000859e-05, 1.4179999999999054e-05, 1.3874999999999998e-05, 1.3833000000001289e-05, 1.4305999999998653e-05, 1.4486000000001054e-05, 1.3569000000001469e-05, 1.4347000000001359e-05, 1.3679999999998554e-05, 1.4250000000000373e-05, 1.379099999999911e-05, 1.4013999999999693e-05, 1.3513999999999193e-05, 1.408299999999807e-05, 1.4111000000000679e-05, 1.3652999999998888e-05, 1.3985999999997084e-05, 1.405499999999893e-05, 1.3736000000000304e-05, 1.3611000000000179e-05, 1.4347000000001359e-05, 1.3556000000001373e-05, 1.381899999999825e-05, 1.4416999999999208e-05, 1.4195000000001567e-05, 1.3792000000002053e-05, 1.3805999999998153e-05, 1.4125000000000248e-05, 1.4263999999999943e-05, 1.4514000000000193e-05, 1.4291999999999083e-05, 1.3986000000000554e-05, 1.3624999999999748e-05]</msg>
<status status="PASS" starttime="20201115 22:59:53.485" endtime="20201115 22:59:53.487"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.481" endtime="20201115 22:59:53.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.490" endtime="20201115 22:59:53.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.493" endtime="20201115 22:59:53.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.491" endtime="20201115 22:59:53.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.488" endtime="20201115 22:59:53.513"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.125" endtime="20201115 22:59:53.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.124" endtime="20201115 22:59:53.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.123" endtime="20201115 22:59:53.514"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.516" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.524" endtime="20201115 22:59:53.542"></status>
</kw>
<msg timestamp="20201115 22:59:53.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.523" endtime="20201115 22:59:53.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.544" endtime="20201115 22:59:53.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.547" endtime="20201115 22:59:53.548"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.520" endtime="20201115 22:59:53.549"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.518" endtime="20201115 22:59:53.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.556" endtime="20201115 22:59:53.841"></status>
</kw>
<msg timestamp="20201115 22:59:53.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.554" endtime="20201115 22:59:53.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.845" endtime="20201115 22:59:53.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.853" endtime="20201115 22:59:53.855"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.552" endtime="20201115 22:59:53.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.550" endtime="20201115 22:59:53.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.860" level="INFO">${RESULT} = [{'time': 0.022557347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4749999999997404e-05, 'source_diff': 1.4749999999997404e-05}, {'time': 0.022588333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:53.857" endtime="20201115 22:59:53.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.875" level="INFO">${ACCURACY} = {'source_diff': [1.4749999999997404e-05, 1.4999999999997654e-05, 1.533299999999932e-05, 1.504100000000036e-05, 1.511099999999821e-05, 1.5264000000000943e-05, 1.5514000000001194e-05, 1.531899999999975e...</msg>
<status status="PASS" starttime="20201115 22:59:53.861" endtime="20201115 22:59:53.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.879" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.878" endtime="20201115 22:59:53.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.882" level="INFO">VALUE: [1.4749999999997404e-05, 1.4999999999997654e-05, 1.533299999999932e-05, 1.504100000000036e-05, 1.511099999999821e-05, 1.5264000000000943e-05, 1.5514000000001194e-05, 1.531899999999975e-05, 1.5249999999997904e-05, 1.5235999999998334e-05, 1.5457999999999444e-05, 1.4597000000001609e-05, 1.4972000000001984e-05, 1.4555999999998903e-05, 1.4514000000000193e-05, 1.5221999999998764e-05, 1.4527999999999763e-05, 1.4805999999999153e-05, 1.4639000000000318e-05, 1.4527999999999763e-05, 1.4999999999997654e-05, 1.461099999999771e-05, 1.5028000000000263e-05, 1.5457999999999444e-05, 1.536100000000193e-05, 1.5264000000000943e-05, 1.536100000000193e-05, 1.5333999999998793e-05, 1.4791999999999583e-05, 1.536099999999846e-05, 1.5305999999999653e-05, 1.5221999999998764e-05, 1.4598000000001082e-05, 1.479100000000011e-05, 1.552700000000129e-05, 1.5306000000003123e-05, 1.4764000000000443e-05, 1.4680999999999028e-05, 1.5055999999999403e-05, 1.5249999999997904e-05, 1.4737000000000777e-05, 1.5459000000002387e-05, 1.5305999999999653e-05, 1.4527999999999763e-05, 1.5249999999997904e-05, 1.5153000000000388e-05, 1.511099999999821e-05, 1.5000000000001124e-05, 1.534700000000236e-05, 1.4943999999999374e-05]</msg>
<status status="PASS" starttime="20201115 22:59:53.880" endtime="20201115 22:59:53.882"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.876" endtime="20201115 22:59:53.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.885" endtime="20201115 22:59:53.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.888" endtime="20201115 22:59:53.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.887" endtime="20201115 22:59:53.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.883" endtime="20201115 22:59:53.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.517" endtime="20201115 22:59:53.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.515" endtime="20201115 22:59:53.909"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.514" endtime="20201115 22:59:53.909"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.912" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.920" endtime="20201115 22:59:53.937"></status>
</kw>
<msg timestamp="20201115 22:59:53.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.919" endtime="20201115 22:59:53.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.938" endtime="20201115 22:59:53.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.941" endtime="20201115 22:59:53.942"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.916" endtime="20201115 22:59:53.943"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.914" endtime="20201115 22:59:53.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.950" endtime="20201115 22:59:54.236"></status>
</kw>
<msg timestamp="20201115 22:59:54.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.948" endtime="20201115 22:59:54.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.240" endtime="20201115 22:59:54.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.248" endtime="20201115 22:59:54.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.945" endtime="20201115 22:59:54.250"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.944" endtime="20201115 22:59:54.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.255" level="INFO">${RESULT} = [{'time': 0.022345486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6014000000001694e-05, 'source_diff': 1.6014000000001694e-05}, {'time': 0.022376444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:54.252" endtime="20201115 22:59:54.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.268" level="INFO">${ACCURACY} = {'source_diff': [1.6014000000001694e-05, 1.581900000000025e-05, 1.6014000000001694e-05, 1.579100000000111e-05, 1.6069999999999973e-05, 1.562499999999828e-05, 1.577700000000154e-05, 1.5901999999998195e...</msg>
<status status="PASS" starttime="20201115 22:59:54.256" endtime="20201115 22:59:54.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.273" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.272" endtime="20201115 22:59:54.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.275" level="INFO">VALUE: [1.6014000000001694e-05, 1.581900000000025e-05, 1.6014000000001694e-05, 1.579100000000111e-05, 1.6069999999999973e-05, 1.562499999999828e-05, 1.577700000000154e-05, 1.5901999999998195e-05, 1.561099999999871e-05, 1.5707999999999694e-05, 1.577700000000154e-05, 1.558299999999957e-05, 1.5680000000000555e-05, 1.5985999999999084e-05, 1.613899999999835e-05, 1.6485999999999584e-05, 1.562500000000175e-05, 1.5985999999999084e-05, 1.643099999999731e-05, 1.6278000000001513e-05, 1.6250000000002374e-05, 1.6056000000000403e-05, 1.609699999999964e-05, 1.6264000000001944e-05, 1.5542000000000333e-05, 1.565300000000089e-05, 1.6472000000000014e-05, 1.6278000000001513e-05, 1.5777999999997544e-05, 1.5931000000000278e-05, 1.584699999999939e-05, 1.6235999999999334e-05, 1.566700000000046e-05, 1.6320000000000223e-05, 1.5709000000002638e-05, 1.6042000000000833e-05, 1.6042000000000833e-05, 1.561100000000218e-05, 1.634699999999989e-05, 1.6181000000000528e-05, 1.591700000000071e-05, 1.6221999999999764e-05, 1.5792000000000583e-05, 1.5722999999998738e-05, 1.587499999999853e-05, 1.5931000000000278e-05, 1.641700000000121e-05, 1.611099999999921e-05, 1.562499999999828e-05, 1.6222999999999238e-05]</msg>
<status status="PASS" starttime="20201115 22:59:54.274" endtime="20201115 22:59:54.275"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.269" endtime="20201115 22:59:54.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.278" endtime="20201115 22:59:54.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.282" endtime="20201115 22:59:54.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.280" endtime="20201115 22:59:54.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.277" endtime="20201115 22:59:54.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.912" endtime="20201115 22:59:54.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.911" endtime="20201115 22:59:54.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.910" endtime="20201115 22:59:54.303"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.306" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.314" endtime="20201115 22:59:54.330"></status>
</kw>
<msg timestamp="20201115 22:59:54.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.312" endtime="20201115 22:59:54.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.332" endtime="20201115 22:59:54.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.335" endtime="20201115 22:59:54.336"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.310" endtime="20201115 22:59:54.337"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.308" endtime="20201115 22:59:54.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.344" endtime="20201115 22:59:54.628"></status>
</kw>
<msg timestamp="20201115 22:59:54.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021705944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021722528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.342" endtime="20201115 22:59:54.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021705944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021722528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.633" endtime="20201115 22:59:54.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.641" endtime="20201115 22:59:54.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.339" endtime="20201115 22:59:54.643"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.338" endtime="20201115 22:59:54.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.648" level="INFO">${RESULT} = [{'time': 0.021722528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6584000000000043e-05, 'source_diff': 1.6584000000000043e-05}, {'time': 0.021752528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:54.644" endtime="20201115 22:59:54.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.661" level="INFO">${ACCURACY} = {'source_diff': [1.6584000000000043e-05, 1.6986000000000084e-05, 1.6735999999999834e-05, 1.715300000000239e-05, 1.6777999999998544e-05, 1.7042000000001833e-05, 1.7348000000000363e-05, 1.73480000000003...</msg>
<status status="PASS" starttime="20201115 22:59:54.649" endtime="20201115 22:59:54.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.666" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.665" endtime="20201115 22:59:54.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.668" level="INFO">VALUE: [1.6584000000000043e-05, 1.6986000000000084e-05, 1.6735999999999834e-05, 1.715300000000239e-05, 1.6777999999998544e-05, 1.7042000000001833e-05, 1.7348000000000363e-05, 1.7348000000000363e-05, 1.715299999999892e-05, 1.7209000000000668e-05, 1.744499999999788e-05, 1.6958000000000945e-05, 1.6584000000000043e-05, 1.741699999999874e-05, 1.711100000000021e-05, 1.668099999999756e-05, 1.686099999999996e-05, 1.716699999999849e-05, 1.7041999999998364e-05, 1.73889999999996e-05, 1.6680000000001555e-05, 1.684700000000039e-05, 1.7401999999999695e-05, 1.655499999999796e-05, 1.6916000000002235e-05, 1.65829999999971e-05, 1.655500000000143e-05, 1.711100000000021e-05, 1.6958000000000945e-05, 1.6999999999999654e-05, 1.712500000000325e-05, 1.7263999999999474e-05, 1.705499999999846e-05, 1.6791999999998114e-05, 1.711100000000021e-05, 1.6569000000001e-05, 1.7013999999999224e-05, 1.7236000000000334e-05, 1.6514000000002194e-05, 1.6778000000002014e-05, 1.7249999999999904e-05, 1.733300000000132e-05, 1.718100000000153e-05, 1.7208000000001195e-05, 1.6972000000000514e-05, 1.6735999999999834e-05, 1.7207999999997725e-05, 1.690299999999867e-05, 1.7263999999999474e-05, 1.7236000000000334e-05]</msg>
<status status="PASS" starttime="20201115 22:59:54.667" endtime="20201115 22:59:54.672"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.662" endtime="20201115 22:59:54.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.675" endtime="20201115 22:59:54.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.678" endtime="20201115 22:59:54.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.677" endtime="20201115 22:59:54.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.673" endtime="20201115 22:59:54.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.306" endtime="20201115 22:59:54.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.304" endtime="20201115 22:59:54.699"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.304" endtime="20201115 22:59:54.699"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.702" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.710" endtime="20201115 22:59:54.727"></status>
</kw>
<msg timestamp="20201115 22:59:54.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.708" endtime="20201115 22:59:54.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.729" endtime="20201115 22:59:54.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.731" endtime="20201115 22:59:54.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.706" endtime="20201115 22:59:54.734"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.704" endtime="20201115 22:59:54.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.740" endtime="20201115 22:59:55.024"></status>
</kw>
<msg timestamp="20201115 22:59:55.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.739" endtime="20201115 22:59:55.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.028" endtime="20201115 22:59:55.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.037" endtime="20201115 22:59:55.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.736" endtime="20201115 22:59:55.039"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.735" endtime="20201115 22:59:55.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:55.043" level="INFO">${RESULT} = [{'time': 0.021820167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7792000000002584e-05, 'source_diff': 1.7792000000002584e-05}, {'time': 0.021854181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:55.040" endtime="20201115 22:59:55.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.057" level="INFO">${ACCURACY} = {'source_diff': [1.7792000000002584e-05, 1.845900000000192e-05, 1.8207999999998725e-05, 1.847299999999802e-05, 1.7792000000002584e-05, 1.8000000000000654e-05, 1.818100000000253e-05, 1.793099999999881e...</msg>
<status status="PASS" starttime="20201115 22:59:55.044" endtime="20201115 22:59:55.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.061" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.060" endtime="20201115 22:59:55.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.064" level="INFO">VALUE: [1.7792000000002584e-05, 1.845900000000192e-05, 1.8207999999998725e-05, 1.847299999999802e-05, 1.7792000000002584e-05, 1.8000000000000654e-05, 1.818100000000253e-05, 1.793099999999881e-05, 1.8056000000002403e-05, 1.7737000000000308e-05, 1.759700000000114e-05, 1.7805999999998684e-05, 1.761100000000071e-05, 1.802699999999685e-05, 1.786100000000096e-05, 1.7777999999999544e-05, 1.786100000000096e-05, 1.802700000000032e-05, 1.7971999999998045e-05, 1.786099999999749e-05, 1.827700000000057e-05, 1.836100000000146e-05, 1.8166000000000015e-05, 1.7735999999997365e-05, 1.7722000000001265e-05, 1.8222000000001765e-05, 1.765299999999942e-05, 1.830499999999971e-05, 1.844499999999888e-05, 1.8179999999999585e-05, 1.8208000000002195e-05, 1.7750000000000404e-05, 1.7555999999998434e-05, 1.833300000000232e-05, 1.8278000000000044e-05, 1.841699999999974e-05, 1.787500000000053e-05, 1.838899999999713e-05, 1.7735999999997365e-05, 1.818100000000253e-05, 1.8278000000000044e-05, 1.761100000000071e-05, 1.790300000000314e-05, 1.8236000000001334e-05, 1.8291999999999614e-05, 1.793099999999881e-05, 1.7527999999999294e-05, 1.7736000000000834e-05, 1.791700000000271e-05, 1.8264000000000474e-05]</msg>
<status status="PASS" starttime="20201115 22:59:55.062" endtime="20201115 22:59:55.065"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.058" endtime="20201115 22:59:55.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.067" endtime="20201115 22:59:55.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.071" endtime="20201115 22:59:55.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.069" endtime="20201115 22:59:55.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.066" endtime="20201115 22:59:55.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.702" endtime="20201115 22:59:55.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.701" endtime="20201115 22:59:55.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.700" endtime="20201115 22:59:55.092"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.094" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.102" endtime="20201115 22:59:55.120"></status>
</kw>
<msg timestamp="20201115 22:59:55.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.101" endtime="20201115 22:59:55.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.122" endtime="20201115 22:59:55.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.124" endtime="20201115 22:59:55.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.098" endtime="20201115 22:59:55.126"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.096" endtime="20201115 22:59:55.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.133" endtime="20201115 22:59:55.418"></status>
</kw>
<msg timestamp="20201115 22:59:55.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.132" endtime="20201115 22:59:55.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.422" endtime="20201115 22:59:55.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.430" endtime="20201115 22:59:55.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.129" endtime="20201115 22:59:55.432"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.127" endtime="20201115 22:59:55.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:55.437" level="INFO">${RESULT} = [{'time': 0.022713542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8985999999998615e-05, 'source_diff': 1.8985999999998615e-05}, {'time': 0.022746542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:55.433" endtime="20201115 22:59:55.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.452" level="INFO">${ACCURACY} = {'source_diff': [1.8985999999998615e-05, 1.937500000000203e-05, 1.934699999999942e-05, 1.918100000000006e-05, 1.934699999999942e-05, 1.912499999999831e-05, 1.9361999999998464e-05, 1.8693999999999655e-...</msg>
<status status="PASS" starttime="20201115 22:59:55.438" endtime="20201115 22:59:55.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.456" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.455" endtime="20201115 22:59:55.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.459" level="INFO">VALUE: [1.8985999999998615e-05, 1.937500000000203e-05, 1.934699999999942e-05, 1.918100000000006e-05, 1.934699999999942e-05, 1.912499999999831e-05, 1.9361999999998464e-05, 1.8693999999999655e-05, 1.893099999999981e-05, 1.8971999999999045e-05, 1.9000000000001654e-05, 1.943100000000031e-05, 1.9416000000001266e-05, 1.8569999999999004e-05, 1.941700000000074e-05, 1.905500000000046e-05, 1.8735999999998365e-05, 1.936099999999899e-05, 1.8986000000002085e-05, 1.936099999999899e-05, 1.912500000000178e-05, 1.909699999999917e-05, 1.9401999999998226e-05, 1.880500000000021e-05, 1.9429999999997366e-05, 1.9236000000002335e-05, 1.884699999999892e-05, 1.9430000000000835e-05, 1.9278000000001044e-05, 1.8542000000003334e-05, 1.9457999999999975e-05, 1.9027999999997325e-05, 1.9222000000002765e-05, 1.9000000000001654e-05, 1.9306000000000184e-05, 1.8735999999998365e-05, 1.941700000000074e-05, 1.9278000000001044e-05, 1.936100000000246e-05, 1.8555999999999434e-05, 1.8500000000001154e-05, 1.915300000000092e-05, 1.9055999999999934e-05, 1.8819999999999254e-05, 1.8764000000000974e-05, 1.9292000000000614e-05, 1.9264000000001474e-05, 1.8584000000002043e-05, 1.8820000000002723e-05, 1.869499999999913e-05]</msg>
<status status="PASS" starttime="20201115 22:59:55.457" endtime="20201115 22:59:55.459"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.453" endtime="20201115 22:59:55.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.462" endtime="20201115 22:59:55.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.465" endtime="20201115 22:59:55.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.464" endtime="20201115 22:59:55.485"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.460" endtime="20201115 22:59:55.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.095" endtime="20201115 22:59:55.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.093" endtime="20201115 22:59:55.486"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.092" endtime="20201115 22:59:55.486"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.489" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.497" endtime="20201115 22:59:55.514"></status>
</kw>
<msg timestamp="20201115 22:59:55.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.495" endtime="20201115 22:59:55.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.516" endtime="20201115 22:59:55.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.518" endtime="20201115 22:59:55.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.493" endtime="20201115 22:59:55.520"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.491" endtime="20201115 22:59:55.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.527" endtime="20201115 22:59:55.812"></status>
</kw>
<msg timestamp="20201115 22:59:55.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021729319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.526" endtime="20201115 22:59:55.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021729319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.816" endtime="20201115 22:59:55.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.824" endtime="20201115 22:59:55.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.523" endtime="20201115 22:59:55.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.521" endtime="20201115 22:59:55.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:55.831" level="INFO">${RESULT} = [{'time': 0.021729319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9887999999999156e-05, 'source_diff': 1.9887999999999156e-05}, {'time': 0.021762319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:55.828" endtime="20201115 22:59:55.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.845" level="INFO">${ACCURACY} = {'source_diff': [1.9887999999999156e-05, 2.0165999999998546e-05, 1.9749999999998935e-05, 2.0472000000000545e-05, 1.9721999999999795e-05, 2.004099999999842e-05, 2.009700000000017e-05, 1.969400000000065...</msg>
<status status="PASS" starttime="20201115 22:59:55.832" endtime="20201115 22:59:55.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.849" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.848" endtime="20201115 22:59:55.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.852" level="INFO">VALUE: [1.9887999999999156e-05, 2.0165999999998546e-05, 1.9749999999998935e-05, 2.0472000000000545e-05, 1.9721999999999795e-05, 2.004099999999842e-05, 2.009700000000017e-05, 1.9694000000000655e-05, 2.0222000000000295e-05, 2.0000000000002655e-05, 1.981899999999731e-05, 1.965299999999795e-05, 2.030499999999824e-05, 1.9792000000001114e-05, 1.993099999999734e-05, 2.016700000000149e-05, 1.9721999999999795e-05, 1.9736000000002835e-05, 2.0486000000000115e-05, 2.044499999999741e-05, 2.0208000000000725e-05, 1.9999999999999185e-05, 1.9736000000002835e-05, 1.98890000000021e-05, 1.980500000000121e-05, 1.9542000000000864e-05, 2.0165999999998546e-05, 2.0306000000001184e-05, 1.966700000000099e-05, 2.0027999999998325e-05, 1.9528000000001294e-05, 2.0348000000003363e-05, 2.018099999999759e-05, 1.968100000000056e-05, 2.0292000000001614e-05, 1.962499999999881e-05, 1.981900000000078e-05, 2.0179999999998116e-05, 2.0013999999998755e-05, 2.00830000000006e-05, 2.038899999999913e-05, 2.0429999999998366e-05, 2.009700000000017e-05, 1.9999999999999185e-05, 2.009700000000017e-05, 2.0166000000002016e-05, 2.036099999999999e-05, 2.0165999999998546e-05, 2.0486000000000115e-05, 2.005500000000146e-05]</msg>
<status status="PASS" starttime="20201115 22:59:55.850" endtime="20201115 22:59:55.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.845" endtime="20201115 22:59:55.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.855" endtime="20201115 22:59:55.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.858" endtime="20201115 22:59:55.877"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.857" endtime="20201115 22:59:55.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.853" endtime="20201115 22:59:55.878"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.489" endtime="20201115 22:59:55.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.487" endtime="20201115 22:59:55.879"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.487" endtime="20201115 22:59:55.879"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.881" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.890" endtime="20201115 22:59:55.907"></status>
</kw>
<msg timestamp="20201115 22:59:55.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.888" endtime="20201115 22:59:55.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.908" endtime="20201115 22:59:55.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.911" endtime="20201115 22:59:55.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.886" endtime="20201115 22:59:55.913"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.883" endtime="20201115 22:59:55.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.920" endtime="20201115 22:59:56.206"></status>
</kw>
<msg timestamp="20201115 22:59:56.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022007847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.918" endtime="20201115 22:59:56.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022007847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.210" endtime="20201115 22:59:56.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.218" endtime="20201115 22:59:56.220"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.916" endtime="20201115 22:59:56.221"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.914" endtime="20201115 22:59:56.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.225" level="INFO">${RESULT} = [{'time': 0.022007847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1000000000000185e-05, 'source_diff': 2.1000000000000185e-05}, {'time': 0.022042861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:56.222" endtime="20201115 22:59:56.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.239" level="INFO">${ACCURACY} = {'source_diff': [2.1000000000000185e-05, 2.062499999999981e-05, 2.1000000000000185e-05, 2.084700000000092e-05, 2.0986000000000615e-05, 2.081899999999831e-05, 2.104100000000289e-05, 2.111100000000074e-...</msg>
<status status="PASS" starttime="20201115 22:59:56.226" endtime="20201115 22:59:56.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.243" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.242" endtime="20201115 22:59:56.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.245" level="INFO">VALUE: [2.1000000000000185e-05, 2.062499999999981e-05, 2.1000000000000185e-05, 2.084700000000092e-05, 2.0986000000000615e-05, 2.081899999999831e-05, 2.104100000000289e-05, 2.111100000000074e-05, 2.134699999999795e-05, 2.137500000000056e-05, 2.113899999999988e-05, 2.144500000000188e-05, 2.1264000000000005e-05, 2.111099999999727e-05, 2.133300000000185e-05, 2.116699999999902e-05, 2.116699999999902e-05, 2.1055999999998465e-05, 2.098700000000009e-05, 2.0542000000001864e-05, 2.1165999999999546e-05, 2.1291999999999145e-05, 2.1207999999998256e-05, 2.141699999999927e-05, 2.115299999999945e-05, 2.068099999999809e-05, 2.059700000000067e-05, 2.1250000000000435e-05, 2.118100000000206e-05, 2.086100000000049e-05, 2.141699999999927e-05, 2.1486000000001115e-05, 2.09029999999992e-05, 2.0542000000001864e-05, 2.0541999999998395e-05, 2.1112000000000214e-05, 2.0777999999999075e-05, 2.118099999999859e-05, 2.144500000000188e-05, 2.123700000000034e-05, 2.105499999999899e-05, 2.055500000000196e-05, 2.0665999999999046e-05, 2.1500000000000685e-05, 2.080500000000221e-05, 2.055499999999849e-05, 2.1208000000001725e-05, 2.1013999999999755e-05, 2.0944000000001906e-05, 2.10830000000016e-05]</msg>
<status status="PASS" starttime="20201115 22:59:56.244" endtime="20201115 22:59:56.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.240" endtime="20201115 22:59:56.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.249" endtime="20201115 22:59:56.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.252" endtime="20201115 22:59:56.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.250" endtime="20201115 22:59:56.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.247" endtime="20201115 22:59:56.272"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.882" endtime="20201115 22:59:56.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.880" endtime="20201115 22:59:56.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.879" endtime="20201115 22:59:56.273"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.275" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.283" endtime="20201115 22:59:56.301"></status>
</kw>
<msg timestamp="20201115 22:59:56.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.282" endtime="20201115 22:59:56.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.303" endtime="20201115 22:59:56.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.306" endtime="20201115 22:59:56.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.279" endtime="20201115 22:59:56.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.277" endtime="20201115 22:59:56.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.315" endtime="20201115 22:59:56.599"></status>
</kw>
<msg timestamp="20201115 22:59:56.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021820764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021843125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.313" endtime="20201115 22:59:56.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021820764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021843125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.603" endtime="20201115 22:59:56.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.611" endtime="20201115 22:59:56.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.311" endtime="20201115 22:59:56.613"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.309" endtime="20201115 22:59:56.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.618" level="INFO">${RESULT} = [{'time': 0.021843125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.236100000000199e-05, 'source_diff': 2.236100000000199e-05}, {'time': 0.021879139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:56.614" endtime="20201115 22:59:56.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.631" level="INFO">${ACCURACY} = {'source_diff': [2.236100000000199e-05, 2.1985999999998146e-05, 2.17229999999978e-05, 2.2485999999998646e-05, 2.2055999999999465e-05, 2.219500000000263e-05, 2.188899999999716e-05, 2.1722000000001795e-...</msg>
<status status="PASS" starttime="20201115 22:59:56.619" endtime="20201115 22:59:56.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.636" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.635" endtime="20201115 22:59:56.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.638" level="INFO">VALUE: [2.236100000000199e-05, 2.1985999999998146e-05, 2.17229999999978e-05, 2.2485999999998646e-05, 2.2055999999999465e-05, 2.219500000000263e-05, 2.188899999999716e-05, 2.1722000000001795e-05, 2.2041999999999895e-05, 2.2000000000001185e-05, 2.2263999999997536e-05, 2.1944000000002906e-05, 2.180499999999974e-05, 2.170899999999823e-05, 2.1791999999999645e-05, 2.241700000000027e-05, 2.2443999999999936e-05, 2.193100000000281e-05, 2.245900000000245e-05, 2.1764000000000505e-05, 2.1929999999999866e-05, 2.184700000000192e-05, 2.236100000000199e-05, 2.1901999999997257e-05, 2.1736000000001365e-05, 2.238900000000113e-05, 2.1901999999997257e-05, 2.1916000000000296e-05, 2.2222000000002295e-05, 2.2028000000000325e-05, 2.1666000000000046e-05, 2.1957999999999006e-05, 2.1722000000001795e-05, 2.2471999999999076e-05, 2.191699999999977e-05, 2.1805999999999215e-05, 2.162500000000081e-05, 2.211099999999827e-05, 2.184700000000192e-05, 2.1736000000001365e-05, 2.1541999999999395e-05, 2.1721999999998326e-05, 2.20969999999987e-05, 2.2014000000000755e-05, 2.165299999999995e-05, 2.166699999999952e-05, 2.161099999999777e-05, 2.2471999999999076e-05, 2.2250000000001435e-05, 2.166699999999952e-05]</msg>
<status status="PASS" starttime="20201115 22:59:56.637" endtime="20201115 22:59:56.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.632" endtime="20201115 22:59:56.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.641" endtime="20201115 22:59:56.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.645" endtime="20201115 22:59:56.664"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.643" endtime="20201115 22:59:56.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.640" endtime="20201115 22:59:56.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.276" endtime="20201115 22:59:56.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.274" endtime="20201115 22:59:56.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.273" endtime="20201115 22:59:56.666"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.668" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.677" endtime="20201115 22:59:56.695"></status>
</kw>
<msg timestamp="20201115 22:59:56.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.675" endtime="20201115 22:59:56.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.697" endtime="20201115 22:59:56.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.699" endtime="20201115 22:59:56.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.673" endtime="20201115 22:59:56.701"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.670" endtime="20201115 22:59:56.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.708" endtime="20201115 22:59:56.994"></status>
</kw>
<msg timestamp="20201115 22:59:56.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022945667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022968319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.707" endtime="20201115 22:59:56.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022945667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022968319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.999" endtime="20201115 22:59:57.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.007" endtime="20201115 22:59:57.008"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.704" endtime="20201115 22:59:57.009"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.702" endtime="20201115 22:59:57.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.013" level="INFO">${RESULT} = [{'time': 0.022968319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2652000000001477e-05, 'source_diff': 2.2652000000001477e-05}, {'time': 0.023007319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:57.010" endtime="20201115 22:59:57.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.028" level="INFO">${ACCURACY} = {'source_diff': [2.2652000000001477e-05, 2.261099999999877e-05, 2.2971999999999576e-05, 2.283299999999988e-05, 2.263899999999791e-05, 2.2944000000000436e-05, 2.283299999999988e-05, 2.256900000000006e-...</msg>
<status status="PASS" starttime="20201115 22:59:57.014" endtime="20201115 22:59:57.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.033" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.032" endtime="20201115 22:59:57.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.035" level="INFO">VALUE: [2.2652000000001477e-05, 2.261099999999877e-05, 2.2971999999999576e-05, 2.283299999999988e-05, 2.263899999999791e-05, 2.2944000000000436e-05, 2.283299999999988e-05, 2.256900000000006e-05, 2.27770000000016e-05, 2.2680000000000616e-05, 2.2944000000000436e-05, 2.2721999999999326e-05, 2.3083999999999605e-05, 2.30969999999997e-05, 2.2555999999999965e-05, 2.337499999999909e-05, 2.3250000000002435e-05, 2.315300000000145e-05, 2.336099999999952e-05, 2.294499999999991e-05, 2.2778000000001075e-05, 2.293100000000034e-05, 2.3472000000000076e-05, 2.3070000000000035e-05, 2.3013999999998286e-05, 2.343100000000084e-05, 2.266700000000052e-05, 2.3042000000000895e-05, 2.337499999999909e-05, 2.266699999999705e-05, 2.341700000000127e-05, 2.2555999999999965e-05, 2.305500000000099e-05, 2.2777999999997606e-05, 2.2762999999998562e-05, 2.2680000000000616e-05, 2.255500000000049e-05, 2.2512999999998312e-05, 2.3028000000001325e-05, 2.316699999999755e-05, 2.334699999999995e-05, 2.2666000000001046e-05, 2.3444000000000936e-05, 2.3472000000000076e-05, 2.2750000000001935e-05, 2.2735999999998896e-05, 2.320899999999973e-05, 2.3499999999999216e-05, 2.286099999999902e-05, 2.3292000000001145e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.034" endtime="20201115 22:59:57.035"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.029" endtime="20201115 22:59:57.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.038" endtime="20201115 22:59:57.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.042" endtime="20201115 22:59:57.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.040" endtime="20201115 22:59:57.062"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.037" endtime="20201115 22:59:57.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.669" endtime="20201115 22:59:57.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.667" endtime="20201115 22:59:57.063"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.666" endtime="20201115 22:59:57.063"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.066" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.074" endtime="20201115 22:59:57.092"></status>
</kw>
<msg timestamp="20201115 22:59:57.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.072" endtime="20201115 22:59:57.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.093" endtime="20201115 22:59:57.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.096" endtime="20201115 22:59:57.097"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.070" endtime="20201115 22:59:57.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.068" endtime="20201115 22:59:57.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.105" endtime="20201115 22:59:57.389"></status>
</kw>
<msg timestamp="20201115 22:59:57.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021703458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.103" endtime="20201115 22:59:57.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021703458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.393" endtime="20201115 22:59:57.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.402" endtime="20201115 22:59:57.403"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.101" endtime="20201115 22:59:57.404"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.099" endtime="20201115 22:59:57.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.408" level="INFO">${RESULT} = [{'time': 0.021703458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3721999999996857e-05, 'source_diff': 2.3721999999996857e-05}, {'time': 0.021742444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:57.405" endtime="20201115 22:59:57.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.422" level="INFO">${ACCURACY} = {'source_diff': [2.3721999999996857e-05, 2.384700000000045e-05, 2.4249999999999966e-05, 2.3999999999999716e-05, 2.388899999999916e-05, 2.3721999999996857e-05, 2.412499999999984e-05, 2.3999999999999716...</msg>
<status status="PASS" starttime="20201115 22:59:57.409" endtime="20201115 22:59:57.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.426" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.425" endtime="20201115 22:59:57.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.428" level="INFO">VALUE: [2.3721999999996857e-05, 2.384700000000045e-05, 2.4249999999999966e-05, 2.3999999999999716e-05, 2.388899999999916e-05, 2.3721999999996857e-05, 2.412499999999984e-05, 2.3999999999999716e-05, 2.3986000000000146e-05, 2.3707999999997287e-05, 2.408300000000113e-05, 2.416699999999855e-05, 2.368100000000109e-05, 2.362499999999934e-05, 2.4027999999998856e-05, 2.3792000000001645e-05, 2.40970000000007e-05, 2.3735999999999896e-05, 2.419499999999769e-05, 2.390299999999873e-05, 2.4472000000001076e-05, 2.3985999999996677e-05, 2.3708000000000756e-05, 2.4222000000000826e-05, 2.368100000000109e-05, 2.4305999999998246e-05, 2.4500000000000216e-05, 2.391700000000177e-05, 2.384700000000045e-05, 2.35970000000002e-05, 2.415299999999898e-05, 2.447300000000055e-05, 2.391700000000177e-05, 2.4179999999998647e-05, 2.440299999999923e-05, 2.448700000000012e-05, 2.3499999999999216e-05, 2.3527999999998356e-05, 2.4304999999998772e-05, 2.4236000000000396e-05, 2.3665999999998577e-05, 2.3665999999998577e-05, 2.3999999999999716e-05, 2.4458000000001506e-05, 2.4443999999998467e-05, 2.3915999999998827e-05, 2.4249999999999966e-05, 2.365299999999848e-05, 2.430500000000224e-05, 2.3735999999999896e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.427" endtime="20201115 22:59:57.429"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.422" endtime="20201115 22:59:57.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.432" endtime="20201115 22:59:57.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.435" endtime="20201115 22:59:57.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.434" endtime="20201115 22:59:57.455"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.430" endtime="20201115 22:59:57.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.066" endtime="20201115 22:59:57.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.064" endtime="20201115 22:59:57.456"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.064" endtime="20201115 22:59:57.456"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.459" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.467" endtime="20201115 22:59:57.484"></status>
</kw>
<msg timestamp="20201115 22:59:57.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.465" endtime="20201115 22:59:57.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.486" endtime="20201115 22:59:57.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.489" endtime="20201115 22:59:57.490"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.463" endtime="20201115 22:59:57.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.461" endtime="20201115 22:59:57.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.498" endtime="20201115 22:59:57.782"></status>
</kw>
<msg timestamp="20201115 22:59:57.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02173375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:57.496" endtime="20201115 22:59:57.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02173375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:57.787" endtime="20201115 22:59:57.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.795" endtime="20201115 22:59:57.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.494" endtime="20201115 22:59:57.797"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.492" endtime="20201115 22:59:57.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.802" level="INFO">${RESULT} = [{'time': 0.02173375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.538900000000066e-05, 'source_diff': 2.538900000000066e-05}, {'time': 0.021771736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:59:57.798" endtime="20201115 22:59:57.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.815" level="INFO">${ACCURACY} = {'source_diff': [2.538900000000066e-05, 2.516699999999955e-05, 2.5332999999998912e-05, 2.516699999999955e-05, 2.5320000000002285e-05, 2.469500000000166e-05, 2.4541999999998926e-05, 2.515299999999998e-...</msg>
<status status="PASS" starttime="20201115 22:59:57.803" endtime="20201115 22:59:57.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.820" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.819" endtime="20201115 22:59:57.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.823" level="INFO">VALUE: [2.538900000000066e-05, 2.516699999999955e-05, 2.5332999999998912e-05, 2.516699999999955e-05, 2.5320000000002285e-05, 2.469500000000166e-05, 2.4541999999998926e-05, 2.515299999999998e-05, 2.5069999999998566e-05, 2.493099999999887e-05, 2.536100000000152e-05, 2.5305999999999246e-05, 2.4556000000001965e-05, 2.45970000000012e-05, 2.468099999999862e-05, 2.4777999999999606e-05, 2.54169999999998e-05, 2.4527999999999356e-05, 2.49169999999993e-05, 2.490299999999973e-05, 2.4847999999997455e-05, 2.463899999999991e-05, 2.486100000000102e-05, 2.4750000000000466e-05, 2.4680000000002617e-05, 2.4584000000001105e-05, 2.5110999999997802e-05, 2.4846999999997982e-05, 2.4834000000001355e-05, 2.5026999999996913e-05, 2.5040999999999952e-05, 2.5416000000000327e-05, 2.5221999999998357e-05, 2.5485999999998177e-05, 2.4693999999998717e-05, 2.4736000000000896e-05, 2.49169999999993e-05, 2.5166000000000077e-05, 2.5179999999999647e-05, 2.4554999999999022e-05, 2.5084000000001605e-05, 2.4778000000003075e-05, 2.463899999999991e-05, 2.4818999999998842e-05, 2.468100000000209e-05, 2.516699999999955e-05, 2.512500000000084e-05, 2.4986000000001146e-05, 2.5514000000000786e-05, 2.5221999999998357e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.821" endtime="20201115 22:59:57.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.816" endtime="20201115 22:59:57.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.827" endtime="20201115 22:59:57.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.831" endtime="20201115 22:59:57.850"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.829" endtime="20201115 22:59:57.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.825" endtime="20201115 22:59:57.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.459" endtime="20201115 22:59:57.851"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.458" endtime="20201115 22:59:57.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.457" endtime="20201115 22:59:57.852"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.854" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.862" endtime="20201115 22:59:57.880"></status>
</kw>
<msg timestamp="20201115 22:59:57.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.861" endtime="20201115 22:59:57.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.881" endtime="20201115 22:59:57.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.884" endtime="20201115 22:59:57.885"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.858" endtime="20201115 22:59:57.886"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.856" endtime="20201115 22:59:57.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.893" endtime="20201115 22:59:58.178"></status>
</kw>
<msg timestamp="20201115 22:59:58.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021786708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.891" endtime="20201115 22:59:58.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021786708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.182" endtime="20201115 22:59:58.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.190" endtime="20201115 22:59:58.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.889" endtime="20201115 22:59:58.192"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.887" endtime="20201115 22:59:58.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.197" level="INFO">${RESULT} = [{'time': 0.021786708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6401999999998288e-05, 'source_diff': 2.6401999999998288e-05}, {'time': 0.021828722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:58.193" endtime="20201115 22:59:58.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.211" level="INFO">${ACCURACY} = {'source_diff': [2.6401999999998288e-05, 2.6458000000000037e-05, 2.6360999999999052e-05, 2.5666000000000577e-05, 2.5818999999999842e-05, 2.6082999999999662e-05, 2.5792000000000176e-05, 2.5917000000000...</msg>
<status status="PASS" starttime="20201115 22:59:58.198" endtime="20201115 22:59:58.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.215" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.214" endtime="20201115 22:59:58.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.218" level="INFO">VALUE: [2.6401999999998288e-05, 2.6458000000000037e-05, 2.6360999999999052e-05, 2.5666000000000577e-05, 2.5818999999999842e-05, 2.6082999999999662e-05, 2.5792000000000176e-05, 2.59170000000003e-05, 2.5624999999997872e-05, 2.563899999999744e-05, 2.586100000000202e-05, 2.6014000000001286e-05, 2.6292000000000676e-05, 2.6360999999999052e-05, 2.644499999999994e-05, 2.5943999999999967e-05, 2.6306000000000246e-05, 2.645899999999951e-05, 2.5722000000002326e-05, 2.5832999999999412e-05, 2.5736000000001896e-05, 2.6207999999999787e-05, 2.6277999999997637e-05, 2.6110999999998802e-05, 2.615300000000098e-05, 2.586100000000202e-05, 2.5888000000001687e-05, 2.616700000000055e-05, 2.572299999999833e-05, 2.623700000000187e-05, 2.6000000000001716e-05, 2.5666000000000577e-05, 2.6291000000001202e-05, 2.6374999999998622e-05, 2.5805000000000272e-05, 2.5943999999999967e-05, 2.6262999999998593e-05, 2.637500000000209e-05, 2.6305000000000772e-05, 2.6082999999999662e-05, 2.6499999999998747e-05, 2.6110999999998802e-05, 2.5943999999999967e-05, 2.55970000000022e-05, 2.5957999999999537e-05, 2.5735999999998427e-05, 2.568099999999962e-05, 2.620899999999926e-05, 2.6444000000000467e-05, 2.565300000000048e-05]</msg>
<status status="PASS" starttime="20201115 22:59:58.216" endtime="20201115 22:59:58.218"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.212" endtime="20201115 22:59:58.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.221" endtime="20201115 22:59:58.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.224" endtime="20201115 22:59:58.243"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.223" endtime="20201115 22:59:58.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.219" endtime="20201115 22:59:58.244"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.855" endtime="20201115 22:59:58.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.853" endtime="20201115 22:59:58.245"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.852" endtime="20201115 22:59:58.245"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.247" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.256" endtime="20201115 22:59:58.274"></status>
</kw>
<msg timestamp="20201115 22:59:58.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.254" endtime="20201115 22:59:58.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.275" endtime="20201115 22:59:58.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.278" endtime="20201115 22:59:58.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.252" endtime="20201115 22:59:58.280"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.249" endtime="20201115 22:59:58.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.287" endtime="20201115 22:59:58.572"></status>
</kw>
<msg timestamp="20201115 22:59:58.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.285" endtime="20201115 22:59:58.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.576" endtime="20201115 22:59:58.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.585" endtime="20201115 22:59:58.586"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.283" endtime="20201115 22:59:58.587"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.281" endtime="20201115 22:59:58.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.592" level="INFO">${RESULT} = [{'time': 0.022579458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7180000000001647e-05, 'source_diff': 2.7180000000001647e-05}, {'time': 0.022622417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:58.588" endtime="20201115 22:59:58.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.606" level="INFO">${ACCURACY} = {'source_diff': [2.7180000000001647e-05, 2.6541999999997457e-05, 2.6999999999999247e-05, 2.7070000000000566e-05, 2.7415999999998858e-05, 2.7097999999999706e-05, 2.6930000000001397e-05, 2.7250000000002...</msg>
<status status="PASS" starttime="20201115 22:59:58.593" endtime="20201115 22:59:58.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.611" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.610" endtime="20201115 22:59:58.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.613" level="INFO">VALUE: [2.7180000000001647e-05, 2.6541999999997457e-05, 2.6999999999999247e-05, 2.7070000000000566e-05, 2.7415999999998858e-05, 2.7097999999999706e-05, 2.6930000000001397e-05, 2.7250000000002966e-05, 2.6930000000001397e-05, 2.6513000000002312e-05, 2.6680000000001147e-05, 2.7124999999999372e-05, 2.7290999999998733e-05, 2.7165999999998608e-05, 2.6943999999997498e-05, 2.7110999999999802e-05, 2.6596999999999732e-05, 2.6528000000001356e-05, 2.6860999999999552e-05, 2.7040999999998483e-05, 2.6749999999998997e-05, 2.7124999999999372e-05, 2.7068999999997623e-05, 2.6610999999999302e-05, 2.691699999999783e-05, 2.7070000000000566e-05, 2.6556000000000496e-05, 2.6528000000001356e-05, 2.7500000000003216e-05, 2.7499999999999747e-05, 2.6777999999998137e-05, 2.7292000000001676e-05, 2.6514000000001786e-05, 2.6985999999999677e-05, 2.6860999999999552e-05, 2.7250000000002966e-05, 2.7486000000000177e-05, 2.673700000000237e-05, 2.7069999999997096e-05, 2.7097999999999706e-05, 2.6598000000002675e-05, 2.7387999999999718e-05, 2.7027999999998387e-05, 2.6847999999999456e-05, 2.666699999999758e-05, 2.6972000000000107e-05, 2.6666000000001577e-05, 2.6735999999999427e-05, 2.716700000000155e-05, 2.7027999999998387e-05]</msg>
<status status="PASS" starttime="20201115 22:59:58.612" endtime="20201115 22:59:58.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.607" endtime="20201115 22:59:58.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.616" endtime="20201115 22:59:58.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.620" endtime="20201115 22:59:58.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.618" endtime="20201115 22:59:58.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.615" endtime="20201115 22:59:58.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.248" endtime="20201115 22:59:58.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.246" endtime="20201115 22:59:58.641"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.245" endtime="20201115 22:59:58.641"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.643" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.651" endtime="20201115 22:59:58.668"></status>
</kw>
<msg timestamp="20201115 22:59:58.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.650" endtime="20201115 22:59:58.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.669" endtime="20201115 22:59:58.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.672" endtime="20201115 22:59:58.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.647" endtime="20201115 22:59:58.674"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.645" endtime="20201115 22:59:58.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.681" endtime="20201115 22:59:58.967"></status>
</kw>
<msg timestamp="20201115 22:59:58.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.679" endtime="20201115 22:59:58.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.971" endtime="20201115 22:59:58.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.979" endtime="20201115 22:59:58.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.677" endtime="20201115 22:59:58.981"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.675" endtime="20201115 22:59:58.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.986" level="INFO">${RESULT} = [{'time': 0.021773306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8152999999999512e-05, 'source_diff': 2.8152999999999512e-05}, {'time': 0.021814347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:58.982" endtime="20201115 22:59:58.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.999" level="INFO">${ACCURACY} = {'source_diff': [2.8152999999999512e-05, 2.8319000000002342e-05, 2.7652999999999012e-05, 2.8152999999999512e-05, 2.8124999999996902e-05, 2.8180000000002647e-05, 2.8318999999998873e-05, 2.8485999999997...</msg>
<status status="PASS" starttime="20201115 22:59:58.987" endtime="20201115 22:59:59.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.004" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.003" endtime="20201115 22:59:59.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.006" level="INFO">VALUE: [2.8152999999999512e-05, 2.8319000000002342e-05, 2.7652999999999012e-05, 2.8152999999999512e-05, 2.8124999999996902e-05, 2.8180000000002647e-05, 2.8318999999998873e-05, 2.8485999999997708e-05, 2.7916000000002827e-05, 2.8472000000001607e-05, 2.7790999999999233e-05, 2.7875000000000122e-05, 2.8361000000001052e-05, 2.8415999999999858e-05, 2.7986000000000677e-05, 2.79170000000023e-05, 2.8125000000000372e-05, 2.8221999999997888e-05, 2.7778000000002606e-05, 2.7847000000000982e-05, 2.7736000000000427e-05, 2.8041999999998957e-05, 2.8111000000000802e-05, 2.8124999999996902e-05, 2.770900000000076e-05, 2.8320000000001816e-05, 2.8152999999999512e-05, 2.8250000000000497e-05, 2.8334000000001386e-05, 2.822299999999736e-05, 2.79170000000023e-05, 2.7542000000001926e-05, 2.7736000000000427e-05, 2.8041999999998957e-05, 2.82370000000004e-05, 2.7875000000000122e-05, 2.7888999999999692e-05, 2.8083999999997666e-05, 2.77369999999999e-05, 2.8375000000000622e-05, 2.8415999999999858e-05, 2.7958000000001537e-05, 2.7555000000002022e-05, 2.8290999999999733e-05, 2.7986000000000677e-05, 2.7749999999999997e-05, 2.8096999999997763e-05, 2.7847000000000982e-05, 2.7583000000001162e-05, 2.8292000000002676e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.005" endtime="20201115 22:59:59.007"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.000" endtime="20201115 22:59:59.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.010" endtime="20201115 22:59:59.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.013" endtime="20201115 22:59:59.032"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.011" endtime="20201115 22:59:59.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.008" endtime="20201115 22:59:59.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.644" endtime="20201115 22:59:59.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.642" endtime="20201115 22:59:59.034"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.641" endtime="20201115 22:59:59.034"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.036" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.045" endtime="20201115 22:59:59.062"></status>
</kw>
<msg timestamp="20201115 22:59:59.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.043" endtime="20201115 22:59:59.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.064" endtime="20201115 22:59:59.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.067" endtime="20201115 22:59:59.068"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.040" endtime="20201115 22:59:59.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.038" endtime="20201115 22:59:59.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.076" endtime="20201115 22:59:59.360"></status>
</kw>
<msg timestamp="20201115 22:59:59.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.074" endtime="20201115 22:59:59.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.364" endtime="20201115 22:59:59.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.373" endtime="20201115 22:59:59.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.072" endtime="20201115 22:59:59.375"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.070" endtime="20201115 22:59:59.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.379" level="INFO">${RESULT} = [{'time': 0.021895694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9541000000000983e-05, 'source_diff': 2.9541000000000983e-05}, {'time': 0.021938681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:59.376" endtime="20201115 22:59:59.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.393" level="INFO">${ACCURACY} = {'source_diff': [2.9541000000000983e-05, 2.9084000000002136e-05, 2.9068999999999623e-05, 2.87370000000009e-05, 2.8874999999997653e-05, 2.9000000000001247e-05, 2.940199999999782e-05, 2.8652000000000538...</msg>
<status status="PASS" starttime="20201115 22:59:59.380" endtime="20201115 22:59:59.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.397" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.396" endtime="20201115 22:59:59.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.400" level="INFO">VALUE: [2.9541000000000983e-05, 2.9084000000002136e-05, 2.9068999999999623e-05, 2.87370000000009e-05, 2.8874999999997653e-05, 2.9000000000001247e-05, 2.940199999999782e-05, 2.8652000000000538e-05, 2.9499999999998278e-05, 2.9542000000000457e-05, 2.9167000000000082e-05, 2.8818999999999373e-05, 2.9180000000000178e-05, 2.9041999999999957e-05, 2.8999999999997778e-05, 2.8653000000000012e-05, 2.8639000000000442e-05, 2.8929999999999928e-05, 2.9000000000001247e-05, 2.8666999999999582e-05, 2.9055999999999527e-05, 2.9305999999999777e-05, 2.8750000000000997e-05, 2.9083000000002662e-05, 2.9110999999998333e-05, 2.9041999999999957e-05, 2.9028000000000387e-05, 2.8596999999998263e-05, 2.8556000000002496e-05, 2.9278000000000637e-05, 2.8888000000001218e-05, 2.9416000000000858e-05, 2.8584000000001636e-05, 2.890199999999732e-05, 2.9264000000001067e-05, 2.8819999999998847e-05, 2.94309999999999e-05, 2.9152999999997042e-05, 2.9041000000000483e-05, 2.9125000000001372e-05, 2.9416000000000858e-05, 2.9055000000000053e-05, 2.8679999999999678e-05, 2.9458000000003037e-05, 2.9221999999998888e-05, 2.8513000000000843e-05, 2.9235999999998458e-05, 2.9277000000001163e-05, 2.8540999999999983e-05, 2.9388999999997723e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.398" endtime="20201115 22:59:59.400"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.394" endtime="20201115 22:59:59.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.403" endtime="20201115 22:59:59.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.406" endtime="20201115 22:59:59.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.405" endtime="20201115 22:59:59.426"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.401" endtime="20201115 22:59:59.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.037" endtime="20201115 22:59:59.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.035" endtime="20201115 22:59:59.427"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.034" endtime="20201115 22:59:59.427"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.430" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.438" endtime="20201115 22:59:59.455"></status>
</kw>
<msg timestamp="20201115 22:59:59.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.437" endtime="20201115 22:59:59.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.456" endtime="20201115 22:59:59.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.459" endtime="20201115 22:59:59.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.434" endtime="20201115 22:59:59.461"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.432" endtime="20201115 22:59:59.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.468" endtime="20201115 22:59:59.754"></status>
</kw>
<msg timestamp="20201115 22:59:59.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022415875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.466" endtime="20201115 22:59:59.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022415875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.758" endtime="20201115 22:59:59.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.766" endtime="20201115 22:59:59.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.464" endtime="20201115 22:59:59.768"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.462" endtime="20201115 22:59:59.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.773" level="INFO">${RESULT} = [{'time': 0.022415875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9999999999998778e-05, 'source_diff': 2.9999999999998778e-05}, {'time': 0.022461861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:59.769" endtime="20201115 22:59:59.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.786" level="INFO">${ACCURACY} = {'source_diff': [2.9999999999998778e-05, 3.0208000000000318e-05, 3.0278000000001637e-05, 2.9749999999998528e-05, 2.9985999999999208e-05, 2.9735999999998958e-05, 3.0013999999998348e-05, 2.9917000000000...</msg>
<status status="PASS" starttime="20201115 22:59:59.774" endtime="20201115 22:59:59.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.791" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.790" endtime="20201115 22:59:59.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.793" level="INFO">VALUE: [2.9999999999998778e-05, 3.0208000000000318e-05, 3.0278000000001637e-05, 2.9749999999998528e-05, 2.9985999999999208e-05, 2.9735999999998958e-05, 3.0013999999998348e-05, 2.9917000000000832e-05, 2.9625000000001872e-05, 2.9625000000001872e-05, 3.0499999999999278e-05, 3.0056000000000527e-05, 3.0388999999998723e-05, 3.0096999999999763e-05, 2.9750000000001997e-05, 3.0221999999999888e-05, 3.0124999999998903e-05, 3.0221999999999888e-05, 2.9639000000001442e-05, 2.9777999999997667e-05, 3.0499999999999278e-05, 2.9735999999998958e-05, 3.0444000000000998e-05, 2.9596999999999263e-05, 3.017999999999771e-05, 3.0360999999999583e-05, 2.9804999999997334e-05, 2.9790999999997764e-05, 2.9611000000002302e-05, 3.0055000000001053e-05, 3.0388999999998723e-05, 3.041599999999839e-05, 3.0360999999999583e-05, 2.9777999999997667e-05, 2.9985999999999208e-05, 3.0221999999999888e-05, 2.9721999999999388e-05, 2.969499999999972e-05, 2.9875000000002122e-05, 3.0540999999998514e-05, 2.9667000000000582e-05, 2.9860999999999083e-05, 2.9931000000000402e-05, 3.0180999999997182e-05, 3.0056000000000527e-05, 2.9805999999996807e-05, 3.0472000000000138e-05, 2.966599999999764e-05, 2.9806000000000277e-05, 2.9917000000000832e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.792" endtime="20201115 22:59:59.794"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.787" endtime="20201115 22:59:59.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.796" endtime="20201115 22:59:59.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.805" endtime="20201115 22:59:59.825"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.798" endtime="20201115 22:59:59.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.795" endtime="20201115 22:59:59.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.430" endtime="20201115 22:59:59.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.428" endtime="20201115 22:59:59.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.428" endtime="20201115 22:59:59.827"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.829" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.838" endtime="20201115 22:59:59.857"></status>
</kw>
<msg timestamp="20201115 22:59:59.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.837" endtime="20201115 22:59:59.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.858" endtime="20201115 22:59:59.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.861" endtime="20201115 22:59:59.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.834" endtime="20201115 22:59:59.863"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.832" endtime="20201115 22:59:59.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.870" endtime="20201115 23:00:00.156"></status>
</kw>
<msg timestamp="20201115 23:00:00.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024078389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024109194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.869" endtime="20201115 23:00:00.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024078389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024109194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.161" endtime="20201115 23:00:00.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.169" endtime="20201115 23:00:00.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.866" endtime="20201115 23:00:00.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.864" endtime="20201115 23:00:00.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.175" level="INFO">${RESULT} = [{'time': 0.024109194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.08050000000018e-05, 'source_diff': 3.08050000000018e-05}, {'time': 0.024153194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:00.172" endtime="20201115 23:00:00.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.190" level="INFO">${ACCURACY} = {'source_diff': [3.08050000000018e-05, 3.1332999999997974e-05, 3.0847999999999987e-05, 3.130600000000178e-05, 3.14579999999981e-05, 3.140199999999982e-05, 3.134700000000101e-05, 3.091599999999889e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:00.176" endtime="20201115 23:00:00.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.195" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.194" endtime="20201115 23:00:00.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.197" level="INFO">VALUE: [3.08050000000018e-05, 3.1332999999997974e-05, 3.0847999999999987e-05, 3.130600000000178e-05, 3.14579999999981e-05, 3.140199999999982e-05, 3.134700000000101e-05, 3.091599999999889e-05, 3.1304999999998834e-05, 3.11249999999999e-05, 3.097200000000064e-05, 3.0554999999998084e-05, 3.150000000000028e-05, 3.0554999999998084e-05, 3.065299999999854e-05, 3.073599999999996e-05, 3.072200000000039e-05, 3.097200000000064e-05, 3.148599999999724e-05, 3.138899999999972e-05, 3.145900000000104e-05, 3.094399999999803e-05, 3.150000000000028e-05, 3.086100000000008e-05, 3.109700000000076e-05, 3.095800000000107e-05, 3.137500000000015e-05, 3.141699999999886e-05, 3.059700000000026e-05, 3.082000000000085e-05, 3.070799999999735e-05, 3.072299999999986e-05, 3.108300000000119e-05, 3.07639999999991e-05, 3.055600000000103e-05, 3.147200000000114e-05, 3.1332999999997974e-05, 3.141599999999939e-05, 3.123600000000046e-05, 3.109700000000076e-05, 3.072200000000039e-05, 3.0526999999998944e-05, 3.0554999999998084e-05, 3.068000000000168e-05, 3.125000000000003e-05, 3.1444000000002e-05, 3.134700000000101e-05, 3.054100000000198e-05, 3.120800000000132e-05, 3.1054999999998584e-05]</msg>
<status status="PASS" starttime="20201115 23:00:00.196" endtime="20201115 23:00:00.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.191" endtime="20201115 23:00:00.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.201" endtime="20201115 23:00:00.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.204" endtime="20201115 23:00:00.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.203" endtime="20201115 23:00:00.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.199" endtime="20201115 23:00:00.224"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.830" endtime="20201115 23:00:00.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.828" endtime="20201115 23:00:00.225"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.827" endtime="20201115 23:00:00.225"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.227" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.236" endtime="20201115 23:00:00.253"></status>
</kw>
<msg timestamp="20201115 23:00:00.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.235" endtime="20201115 23:00:00.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.255" endtime="20201115 23:00:00.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.257" endtime="20201115 23:00:00.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.232" endtime="20201115 23:00:00.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.230" endtime="20201115 23:00:00.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.266" endtime="20201115 23:00:00.551"></status>
</kw>
<msg timestamp="20201115 23:00:00.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.265" endtime="20201115 23:00:00.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.555" endtime="20201115 23:00:00.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.563" endtime="20201115 23:00:00.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.262" endtime="20201115 23:00:00.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.260" endtime="20201115 23:00:00.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.570" level="INFO">${RESULT} = [{'time': 0.022514792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.195899999999807e-05, 'source_diff': 3.195899999999807e-05}, {'time': 0.022559833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:00.567" endtime="20201115 23:00:00.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.584" level="INFO">${ACCURACY} = {'source_diff': [3.195899999999807e-05, 3.216600000000014e-05, 3.163899999999997e-05, 3.190200000000032e-05, 3.192999999999946e-05, 3.2362000000001057e-05, 3.16250000000004e-05, 3.191599999999989e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:00.571" endtime="20201115 23:00:00.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.588" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.587" endtime="20201115 23:00:00.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.591" level="INFO">VALUE: [3.195899999999807e-05, 3.216600000000014e-05, 3.163899999999997e-05, 3.190200000000032e-05, 3.192999999999946e-05, 3.2362000000001057e-05, 3.16250000000004e-05, 3.191599999999989e-05, 3.183300000000194e-05, 3.199999999999731e-05, 3.172199999999792e-05, 3.16250000000004e-05, 3.216600000000014e-05, 3.16250000000004e-05, 3.154199999999899e-05, 3.2068999999999154e-05, 3.188900000000022e-05, 3.179199999999924e-05, 3.154199999999899e-05, 3.222200000000189e-05, 3.227800000000017e-05, 3.227800000000017e-05, 3.197300000000111e-05, 3.190299999999979e-05, 3.179199999999924e-05, 3.225000000000103e-05, 3.202799999999992e-05, 3.234700000000201e-05, 3.163899999999997e-05, 3.2360999999998113e-05, 3.240200000000082e-05, 3.199999999999731e-05, 3.16250000000004e-05, 3.168099999999868e-05, 3.2262999999997655e-05, 3.223700000000093e-05, 3.2304999999999834e-05, 3.154100000000298e-05, 3.187500000000065e-05, 3.170799999999835e-05, 3.236100000000158e-05, 3.184700000000151e-05, 3.17640000000001e-05, 3.2291000000000264e-05, 3.190299999999979e-05, 3.217999999999971e-05, 3.229199999999974e-05, 3.227800000000017e-05, 3.200000000000078e-05, 3.21250000000009e-05]</msg>
<status status="PASS" starttime="20201115 23:00:00.589" endtime="20201115 23:00:00.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.584" endtime="20201115 23:00:00.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.594" endtime="20201115 23:00:00.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.598" endtime="20201115 23:00:00.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.596" endtime="20201115 23:00:00.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.593" endtime="20201115 23:00:00.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.228" endtime="20201115 23:00:00.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.226" endtime="20201115 23:00:00.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.225" endtime="20201115 23:00:00.619"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.621" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.629" endtime="20201115 23:00:00.647"></status>
</kw>
<msg timestamp="20201115 23:00:00.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.628" endtime="20201115 23:00:00.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.649" endtime="20201115 23:00:00.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.651" endtime="20201115 23:00:00.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.625" endtime="20201115 23:00:00.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.623" endtime="20201115 23:00:00.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.660" endtime="20201115 23:00:00.945"></status>
</kw>
<msg timestamp="20201115 23:00:00.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.659" endtime="20201115 23:00:00.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.949" endtime="20201115 23:00:00.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.958" endtime="20201115 23:00:00.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.656" endtime="20201115 23:00:00.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.654" endtime="20201115 23:00:00.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.964" level="INFO">${RESULT} = [{'time': 0.021818708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3055000000000584e-05, 'source_diff': 3.3055000000000584e-05}, {'time': 0.021865694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:00.961" endtime="20201115 23:00:00.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.978" level="INFO">${ACCURACY} = {'source_diff': [3.3055000000000584e-05, 3.319400000000028e-05, 3.323599999999899e-05, 3.326399999999813e-05, 3.3346999999999544e-05, 3.316599999999767e-05, 3.276399999999763e-05, 3.273600000000196e-0...</msg>
<status status="PASS" starttime="20201115 23:00:00.966" endtime="20201115 23:00:00.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.983" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.982" endtime="20201115 23:00:00.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.985" level="INFO">VALUE: [3.3055000000000584e-05, 3.319400000000028e-05, 3.323599999999899e-05, 3.326399999999813e-05, 3.3346999999999544e-05, 3.316599999999767e-05, 3.276399999999763e-05, 3.273600000000196e-05, 3.270799999999935e-05, 3.297199999999917e-05, 3.341700000000086e-05, 3.316700000000061e-05, 3.266700000000011e-05, 3.318100000000018e-05, 3.255599999999956e-05, 3.309799999999877e-05, 3.269500000000272e-05, 3.291699999999689e-05, 3.268099999999968e-05, 3.3124999999998433e-05, 3.302800000000092e-05, 3.298600000000221e-05, 3.297200000000264e-05, 3.29449999999995e-05, 3.299999999999831e-05, 3.334799999999902e-05, 3.341700000000086e-05, 3.2860999999998614e-05, 3.34580000000001e-05, 3.3291000000001264e-05, 3.279200000000024e-05, 3.3055000000000584e-05, 3.3110999999998864e-05, 3.316600000000114e-05, 3.3291000000001264e-05, 3.3360999999999114e-05, 3.261100000000183e-05, 3.288899999999775e-05, 3.298600000000221e-05, 3.258300000000269e-05, 3.324999999999856e-05, 3.273599999999849e-05, 3.3445e-05, 3.256999999999913e-05, 3.327800000000117e-05, 3.298599999999874e-05, 3.282000000000285e-05, 3.341699999999739e-05, 3.263900000000097e-05, 3.286100000000208e-05]</msg>
<status status="PASS" starttime="20201115 23:00:00.984" endtime="20201115 23:00:00.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.979" endtime="20201115 23:00:00.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.988" endtime="20201115 23:00:00.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.992" endtime="20201115 23:00:01.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.990" endtime="20201115 23:00:01.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.987" endtime="20201115 23:00:01.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.622" endtime="20201115 23:00:01.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.620" endtime="20201115 23:00:01.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.619" endtime="20201115 23:00:01.013"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.015" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.023" endtime="20201115 23:00:01.041"></status>
</kw>
<msg timestamp="20201115 23:00:01.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.022" endtime="20201115 23:00:01.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.043" endtime="20201115 23:00:01.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.045" endtime="20201115 23:00:01.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.019" endtime="20201115 23:00:01.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.017" endtime="20201115 23:00:01.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.054" endtime="20201115 23:00:01.341"></status>
</kw>
<msg timestamp="20201115 23:00:01.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.053" endtime="20201115 23:00:01.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.345" endtime="20201115 23:00:01.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.354" endtime="20201115 23:00:01.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.050" endtime="20201115 23:00:01.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.049" endtime="20201115 23:00:01.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.360" level="INFO">${RESULT} = [{'time': 0.021889944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3596999999999794e-05, 'source_diff': 3.3596999999999794e-05}, {'time': 0.021936917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:01.357" endtime="20201115 23:00:01.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.374" level="INFO">${ACCURACY} = {'source_diff': [3.3596999999999794e-05, 3.393100000000093e-05, 3.429200000000174e-05, 3.3888999999998753e-05, 3.41519999999991e-05, 3.4445000000001e-05, 3.372299999999939e-05, 3.382000000000038e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:01.361" endtime="20201115 23:00:01.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.378" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.377" endtime="20201115 23:00:01.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.381" level="INFO">VALUE: [3.3596999999999794e-05, 3.393100000000093e-05, 3.429200000000174e-05, 3.3888999999998753e-05, 3.41519999999991e-05, 3.4445000000001e-05, 3.372299999999939e-05, 3.382000000000038e-05, 3.42779999999987e-05, 3.4388999999999253e-05, 3.427800000000217e-05, 3.4319000000001404e-05, 3.3874999999999184e-05, 3.393000000000146e-05, 3.440200000000282e-05, 3.440199999999935e-05, 3.4083000000000724e-05, 3.391700000000136e-05, 3.417999999999824e-05, 3.398600000000321e-05, 3.39580000000006e-05, 3.418100000000118e-05, 3.4361000000000114e-05, 3.380600000000081e-05, 3.398599999999974e-05, 3.445799999999763e-05, 3.409799999999977e-05, 3.372199999999992e-05, 3.424999999999956e-05, 3.405599999999759e-05, 3.3833000000000474e-05, 3.4124999999999434e-05, 3.363799999999903e-05, 3.3569000000000654e-05, 3.413900000000247e-05, 3.4110999999999864e-05, 3.380600000000081e-05, 3.372299999999939e-05, 3.3624999999998934e-05, 3.3610999999999364e-05, 3.391700000000136e-05, 3.42779999999987e-05, 3.394400000000103e-05, 3.3818999999997434e-05, 3.4361000000000114e-05, 3.391600000000189e-05, 3.3804999999997865e-05, 3.3540999999998045e-05, 3.366600000000164e-05, 3.424999999999956e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.379" endtime="20201115 23:00:01.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.375" endtime="20201115 23:00:01.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.384" endtime="20201115 23:00:01.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.387" endtime="20201115 23:00:01.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.386" endtime="20201115 23:00:01.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.382" endtime="20201115 23:00:01.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.016" endtime="20201115 23:00:01.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.014" endtime="20201115 23:00:01.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.013" endtime="20201115 23:00:01.408"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.411" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.419" endtime="20201115 23:00:01.438"></status>
</kw>
<msg timestamp="20201115 23:00:01.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.417" endtime="20201115 23:00:01.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.439" endtime="20201115 23:00:01.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.442" endtime="20201115 23:00:01.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.415" endtime="20201115 23:00:01.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.413" endtime="20201115 23:00:01.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.451" endtime="20201115 23:00:01.735"></status>
</kw>
<msg timestamp="20201115 23:00:01.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.449" endtime="20201115 23:00:01.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.740" endtime="20201115 23:00:01.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.748" endtime="20201115 23:00:01.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.447" endtime="20201115 23:00:01.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.445" endtime="20201115 23:00:01.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.754" level="INFO">${RESULT} = [{'time': 0.022720042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5360999999997644e-05, 'source_diff': 3.5360999999997644e-05}, {'time': 0.022769042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:01.751" endtime="20201115 23:00:01.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.769" level="INFO">${ACCURACY} = {'source_diff': [3.5360999999997644e-05, 3.497300000000064e-05, 3.522300000000089e-05, 3.536200000000059e-05, 3.469399999999831e-05, 3.473600000000049e-05, 3.497300000000064e-05, 3.515300000000304e-05...</msg>
<status status="PASS" starttime="20201115 23:00:01.755" endtime="20201115 23:00:01.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.774" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.773" endtime="20201115 23:00:01.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.776" level="INFO">VALUE: [3.5360999999997644e-05, 3.497300000000064e-05, 3.522300000000089e-05, 3.536200000000059e-05, 3.469399999999831e-05, 3.473600000000049e-05, 3.497300000000064e-05, 3.515300000000304e-05, 3.505599999999859e-05, 3.454199999999852e-05, 3.5304999999999365e-05, 3.4790999999999295e-05, 3.492999999999899e-05, 3.49719999999977e-05, 3.4874999999996714e-05, 3.516599999999967e-05, 3.540200000000035e-05, 3.477800000000267e-05, 3.468100000000168e-05, 3.480599999999834e-05, 3.5360999999997644e-05, 3.494399999999856e-05, 3.544399999999906e-05, 3.5445000000002e-05, 3.4888999999999754e-05, 3.5152999999999573e-05, 3.491699999999889e-05, 3.4832999999998004e-05, 3.506999999999816e-05, 3.5347000000001544e-05, 3.501399999999988e-05, 3.507000000000163e-05, 3.4861000000000614e-05, 3.46519999999996e-05, 3.531999999999841e-05, 3.5166999999999143e-05, 3.509800000000077e-05, 3.520800000000185e-05, 3.516600000000314e-05, 3.4847000000001044e-05, 3.475000000000006e-05, 3.5375000000000684e-05, 3.547200000000167e-05, 3.5040999999999545e-05, 3.54719999999982e-05, 3.548599999999777e-05, 3.5332999999998504e-05, 3.47779999999992e-05, 3.5166999999999143e-05, 3.469399999999831e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.775" endtime="20201115 23:00:01.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.770" endtime="20201115 23:00:01.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.779" endtime="20201115 23:00:01.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.782" endtime="20201115 23:00:01.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.781" endtime="20201115 23:00:01.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.777" endtime="20201115 23:00:01.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.411" endtime="20201115 23:00:01.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.409" endtime="20201115 23:00:01.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.409" endtime="20201115 23:00:01.804"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.806" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.814" endtime="20201115 23:00:01.832"></status>
</kw>
<msg timestamp="20201115 23:00:01.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.812" endtime="20201115 23:00:01.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.833" endtime="20201115 23:00:01.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.836" endtime="20201115 23:00:01.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.810" endtime="20201115 23:00:01.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.808" endtime="20201115 23:00:01.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.845" endtime="20201115 23:00:02.130"></status>
</kw>
<msg timestamp="20201115 23:00:02.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021714347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021750792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.844" endtime="20201115 23:00:02.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021714347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021750792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.134" endtime="20201115 23:00:02.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.142" endtime="20201115 23:00:02.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.841" endtime="20201115 23:00:02.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.839" endtime="20201115 23:00:02.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.149" level="INFO">${RESULT} = [{'time': 0.021750792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6445000000003e-05, 'source_diff': 3.6445000000003e-05}, {'time': 0.021802806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201115 23:00:02.146" endtime="20201115 23:00:02.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.162" level="INFO">${ACCURACY} = {'source_diff': [3.6445000000003e-05, 3.651400000000138e-05, 3.6110999999998394e-05, 3.618000000000024e-05, 3.56659999999967e-05, 3.624999999999809e-05, 3.6305000000000365e-05, 3.6055000000000115e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:02.150" endtime="20201115 23:00:02.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.167" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.166" endtime="20201115 23:00:02.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.169" level="INFO">VALUE: [3.6445000000003e-05, 3.651400000000138e-05, 3.6110999999998394e-05, 3.618000000000024e-05, 3.56659999999967e-05, 3.624999999999809e-05, 3.6305000000000365e-05, 3.6055000000000115e-05, 3.573600000000149e-05, 3.592999999999999e-05, 3.6291000000000795e-05, 3.604200000000002e-05, 3.572200000000192e-05, 3.6290999999997325e-05, 3.630599999999984e-05, 3.575000000000106e-05, 3.568100000000268e-05, 3.583400000000195e-05, 3.604200000000002e-05, 3.6346999999999074e-05, 3.5903000000000324e-05, 3.604200000000002e-05, 3.582000000000238e-05, 3.572200000000192e-05, 3.600000000000131e-05, 3.5763000000001155e-05, 3.627799999999723e-05, 3.6124999999997964e-05, 3.580599999999934e-05, 3.552799999999995e-05, 3.602800000000045e-05, 3.573700000000096e-05, 3.6305000000000365e-05, 3.64589999999991e-05, 3.5568999999999185e-05, 3.598599999999827e-05, 3.591600000000042e-05, 3.567999999999974e-05, 3.6374999999998214e-05, 3.618000000000024e-05, 3.6305000000000365e-05, 3.6305000000000365e-05, 3.5568999999999185e-05, 3.574999999999759e-05, 3.62919999999968e-05, 3.630599999999984e-05, 3.605599999999959e-05, 3.629200000000027e-05, 3.580600000000281e-05, 3.5583000000002224e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.168" endtime="20201115 23:00:02.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.163" endtime="20201115 23:00:02.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.172" endtime="20201115 23:00:02.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.176" endtime="20201115 23:00:02.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.174" endtime="20201115 23:00:02.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.171" endtime="20201115 23:00:02.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.807" endtime="20201115 23:00:02.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.805" endtime="20201115 23:00:02.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.804" endtime="20201115 23:00:02.197"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.199" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.208" endtime="20201115 23:00:02.226"></status>
</kw>
<msg timestamp="20201115 23:00:02.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.206" endtime="20201115 23:00:02.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.227" endtime="20201115 23:00:02.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.230" endtime="20201115 23:00:02.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.203" endtime="20201115 23:00:02.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.201" endtime="20201115 23:00:02.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.239" endtime="20201115 23:00:02.524"></status>
</kw>
<msg timestamp="20201115 23:00:02.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.237" endtime="20201115 23:00:02.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.528" endtime="20201115 23:00:02.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.536" endtime="20201115 23:00:02.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.235" endtime="20201115 23:00:02.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.233" endtime="20201115 23:00:02.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.543" level="INFO">${RESULT} = [{'time': 0.022201208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7333000000000505e-05, 'source_diff': 3.7333000000000505e-05}, {'time': 0.022251208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:02.540" endtime="20201115 23:00:02.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.557" level="INFO">${ACCURACY} = {'source_diff': [3.7333000000000505e-05, 3.672200000000292e-05, 3.7096999999999825e-05, 3.676400000000163e-05, 3.7388999999998784e-05, 3.6638999999998034e-05, 3.752799999999848e-05, 3.6624999999998464...</msg>
<status status="PASS" starttime="20201115 23:00:02.544" endtime="20201115 23:00:02.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.561" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.560" endtime="20201115 23:00:02.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.563" level="INFO">VALUE: [3.7333000000000505e-05, 3.672200000000292e-05, 3.7096999999999825e-05, 3.676400000000163e-05, 3.7388999999998784e-05, 3.6638999999998034e-05, 3.752799999999848e-05, 3.6624999999998464e-05, 3.7083000000000255e-05, 3.729200000000127e-05, 3.72780000000017e-05, 3.7319000000000935e-05, 3.72780000000017e-05, 3.694400000000056e-05, 3.673600000000249e-05, 3.656999999999966e-05, 3.7431000000000964e-05, 3.7361000000003114e-05, 3.7360999999999644e-05, 3.6681000000000213e-05, 3.7152999999998104e-05, 3.6596999999999325e-05, 3.7195000000000283e-05, 3.6596999999999325e-05, 3.7333000000000505e-05, 3.708399999999973e-05, 3.702800000000145e-05, 3.66520000000016e-05, 3.691600000000142e-05, 3.698599999999927e-05, 3.757000000000066e-05, 3.701399999999841e-05, 3.694399999999709e-05, 3.7125000000002434e-05, 3.71659999999982e-05, 3.723599999999952e-05, 3.7333000000000505e-05, 3.7139000000002004e-05, 3.6625000000001934e-05, 3.702799999999798e-05, 3.744400000000106e-05, 3.6861000000002614e-05, 3.7375000000002684e-05, 3.725000000000256e-05, 3.669499999999978e-05, 3.749999999999934e-05, 3.702800000000145e-05, 3.654200000000052e-05, 3.676399999999816e-05, 3.7138999999998534e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.562" endtime="20201115 23:00:02.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.557" endtime="20201115 23:00:02.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.567" endtime="20201115 23:00:02.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.570" endtime="20201115 23:00:02.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.568" endtime="20201115 23:00:02.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.565" endtime="20201115 23:00:02.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.200" endtime="20201115 23:00:02.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.198" endtime="20201115 23:00:02.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.197" endtime="20201115 23:00:02.591"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.594" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.602" endtime="20201115 23:00:02.622"></status>
</kw>
<msg timestamp="20201115 23:00:02.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.600" endtime="20201115 23:00:02.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.624" endtime="20201115 23:00:02.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.626" endtime="20201115 23:00:02.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.598" endtime="20201115 23:00:02.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.596" endtime="20201115 23:00:02.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.635" endtime="20201115 23:00:02.921"></status>
</kw>
<msg timestamp="20201115 23:00:02.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02234125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:02.634" endtime="20201115 23:00:02.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02234125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:02.925" endtime="20201115 23:00:02.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.934" endtime="20201115 23:00:02.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.631" endtime="20201115 23:00:02.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.630" endtime="20201115 23:00:02.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.941" level="INFO">${RESULT} = [{'time': 0.02234125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7624999999999464e-05, 'source_diff': 3.7624999999999464e-05}, {'time': 0.022392222, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:02.937" endtime="20201115 23:00:02.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.955" level="INFO">${ACCURACY} = {'source_diff': [3.7624999999999464e-05, 3.827799999999923e-05, 3.7888999999999284e-05, 3.8430999999998494e-05, 3.822200000000095e-05, 3.7861000000000145e-05, 3.7930999999997994e-05, 3.75979999999998e...</msg>
<status status="PASS" starttime="20201115 23:00:02.942" endtime="20201115 23:00:02.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.960" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.958" endtime="20201115 23:00:02.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.962" level="INFO">VALUE: [3.7624999999999464e-05, 3.827799999999923e-05, 3.7888999999999284e-05, 3.8430999999998494e-05, 3.822200000000095e-05, 3.7861000000000145e-05, 3.7930999999997994e-05, 3.75979999999998e-05, 3.8166999999998674e-05, 3.808400000000073e-05, 3.8180999999998244e-05, 3.8111000000000395e-05, 3.7624999999999464e-05, 3.75979999999998e-05, 3.75979999999998e-05, 3.823699999999999e-05, 3.77919999999983e-05, 3.7667000000001644e-05, 3.84859999999973e-05, 3.783400000000048e-05, 3.770900000000035e-05, 3.791600000000242e-05, 3.790199999999938e-05, 3.7847000000000575e-05, 3.8111000000000395e-05, 3.794399999999809e-05, 3.8083000000001255e-05, 3.8375000000000214e-05, 3.825000000000009e-05, 3.799999999999984e-05, 3.8096999999997355e-05, 3.7888999999999284e-05, 3.845799999999816e-05, 3.77780000000022e-05, 3.754200000000152e-05, 3.8375000000000214e-05, 3.8430999999998494e-05, 3.830600000000184e-05, 3.8167000000002144e-05, 3.776399999999916e-05, 3.7847000000000575e-05, 3.8180999999998244e-05, 3.798600000000027e-05, 3.7624999999999464e-05, 3.8402999999999354e-05, 3.825000000000009e-05, 3.7555000000001615e-05, 3.7861000000000145e-05, 3.854199999999905e-05, 3.7583000000000755e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.961" endtime="20201115 23:00:02.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.956" endtime="20201115 23:00:02.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.966" endtime="20201115 23:00:02.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.970" endtime="20201115 23:00:02.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.968" endtime="20201115 23:00:02.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.964" endtime="20201115 23:00:02.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.594" endtime="20201115 23:00:02.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.593" endtime="20201115 23:00:02.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.592" endtime="20201115 23:00:02.991"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.993" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.002" endtime="20201115 23:00:03.023"></status>
</kw>
<msg timestamp="20201115 23:00:03.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.000" endtime="20201115 23:00:03.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.024" endtime="20201115 23:00:03.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.027" endtime="20201115 23:00:03.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.997" endtime="20201115 23:00:03.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.995" endtime="20201115 23:00:03.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.036" endtime="20201115 23:00:03.322"></status>
</kw>
<msg timestamp="20201115 23:00:03.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023548153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023586861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.035" endtime="20201115 23:00:03.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023548153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023586861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.326" endtime="20201115 23:00:03.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.334" endtime="20201115 23:00:03.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.032" endtime="20201115 23:00:03.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.030" endtime="20201115 23:00:03.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.341" level="INFO">${RESULT} = [{'time': 0.023586861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.870800000000188e-05, 'source_diff': 3.870800000000188e-05}, {'time': 0.023641861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:03.338" endtime="20201115 23:00:03.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.367" level="INFO">${ACCURACY} = {'source_diff': [3.870800000000188e-05, 3.948600000000177e-05, 3.8874999999997245e-05, 3.873600000000102e-05, 3.9445000000002534e-05, 3.8611000000000895e-05, 3.8944999999998564e-05, 3.904199999999955e...</msg>
<status status="PASS" starttime="20201115 23:00:03.342" endtime="20201115 23:00:03.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.376" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.374" endtime="20201115 23:00:03.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.383" level="INFO">VALUE: [3.870800000000188e-05, 3.948600000000177e-05, 3.8874999999997245e-05, 3.873600000000102e-05, 3.9445000000002534e-05, 3.8611000000000895e-05, 3.8944999999998564e-05, 3.904199999999955e-05, 3.8874999999997245e-05, 3.94859999999983e-05, 3.8916999999999424e-05, 3.884800000000105e-05, 3.873599999999755e-05, 3.8666999999999174e-05, 3.8667000000002644e-05, 3.948700000000124e-05, 3.934799999999808e-05, 3.9096999999998355e-05, 3.85980000000008e-05, 3.894400000000256e-05, 3.86659999999997e-05, 3.8818999999998965e-05, 3.8666999999999174e-05, 3.91660000000002e-05, 3.920799999999891e-05, 3.9041000000000076e-05, 3.872199999999798e-05, 3.9304999999999896e-05, 3.904199999999955e-05, 3.8611000000000895e-05, 3.8554999999999146e-05, 3.922199999999848e-05, 3.87919999999993e-05, 3.9361000000001645e-05, 3.873600000000102e-05, 3.9166999999999674e-05, 3.874999999999712e-05, 3.9458999999998634e-05, 3.8708999999997884e-05, 3.926400000000066e-05, 3.8680999999998744e-05, 3.873600000000102e-05, 3.86119999999969e-05, 3.9416999999999924e-05, 3.934799999999808e-05, 3.940200000000088e-05, 3.944399999999959e-05, 3.898600000000127e-05, 3.947199999999873e-05, 3.869400000000231e-05]</msg>
<status status="PASS" starttime="20201115 23:00:03.379" endtime="20201115 23:00:03.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.369" endtime="20201115 23:00:03.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.390" endtime="20201115 23:00:03.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.397" endtime="20201115 23:00:03.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.394" endtime="20201115 23:00:03.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.386" endtime="20201115 23:00:03.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.994" endtime="20201115 23:00:03.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.992" endtime="20201115 23:00:03.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.991" endtime="20201115 23:00:03.423"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.429" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.447" endtime="20201115 23:00:03.468"></status>
</kw>
<msg timestamp="20201115 23:00:03.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.444" endtime="20201115 23:00:03.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.470" endtime="20201115 23:00:03.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.473" endtime="20201115 23:00:03.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.438" endtime="20201115 23:00:03.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.433" endtime="20201115 23:00:03.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.482" endtime="20201115 23:00:03.768"></status>
</kw>
<msg timestamp="20201115 23:00:03.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04049675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040536514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:03.480" endtime="20201115 23:00:03.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04049675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040536514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:03.772" endtime="20201115 23:00:03.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.781" endtime="20201115 23:00:03.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.478" endtime="20201115 23:00:03.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.476" endtime="20201115 23:00:03.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.788" level="INFO">${RESULT} = [{'time': 0.040536514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.976400000000463e-05, 'source_diff': 3.976400000000463e-05}, {'time': 0.040590528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:03.784" endtime="20201115 23:00:03.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.802" level="INFO">${ACCURACY} = {'source_diff': [3.976400000000463e-05, 3.983400000000248e-05, 4.029199999999733e-05, 4.0430999999993555e-05, 3.9611000000001895e-05, 3.99859999999988e-05, 4.024999999999862e-05, 4.0430999999993555e-0...</msg>
<status status="PASS" starttime="20201115 23:00:03.789" endtime="20201115 23:00:03.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.807" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.806" endtime="20201115 23:00:03.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.810" level="INFO">VALUE: [3.976400000000463e-05, 3.983400000000248e-05, 4.029199999999733e-05, 4.0430999999993555e-05, 3.9611000000001895e-05, 3.99859999999988e-05, 4.024999999999862e-05, 4.0430999999993555e-05, 3.9680999999999744e-05, 3.9680999999999744e-05, 3.984799999999511e-05, 3.9875000000001715e-05, 3.9776999999997786e-05, 3.994400000000009e-05, 4.0389000000001785e-05, 4.041600000000145e-05, 3.9860999999995206e-05, 3.99859999999988e-05, 3.9555000000003615e-05, 3.9597000000002325e-05, 3.955600000000309e-05, 4.047199999999973e-05, 3.9861000000002145e-05, 3.973599999999855e-05, 3.957000000000266e-05, 3.9917000000000424e-05, 4.024999999999862e-05, 4.0181000000000244e-05, 3.980600000000334e-05, 4.0167000000000674e-05, 4.0361000000002645e-05, 3.9667000000000174e-05, 4.008400000000273e-05, 3.954199999999658e-05, 3.999999999999837e-05, 4.02780000000047e-05, 4.051399999999844e-05, 3.9832999999996066e-05, 3.993000000000052e-05, 4.0055000000004115e-05, 4.047199999999973e-05, 4.026399999999819e-05, 4.043000000000102e-05, 3.9847000000002575e-05, 3.99859999999988e-05, 4.01660000000012e-05, 4.027799999999776e-05, 4.0097000000002825e-05, 3.9930999999999994e-05, 4.04859999999993e-05]</msg>
<status status="PASS" starttime="20201115 23:00:03.808" endtime="20201115 23:00:03.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.803" endtime="20201115 23:00:03.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.813" endtime="20201115 23:00:03.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.816" endtime="20201115 23:00:03.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.815" endtime="20201115 23:00:03.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.811" endtime="20201115 23:00:03.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.430" endtime="20201115 23:00:03.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.426" endtime="20201115 23:00:03.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.424" endtime="20201115 23:00:03.837"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.840" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.848" endtime="20201115 23:00:03.869"></status>
</kw>
<msg timestamp="20201115 23:00:03.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.847" endtime="20201115 23:00:03.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.870" endtime="20201115 23:00:03.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.873" endtime="20201115 23:00:03.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.844" endtime="20201115 23:00:03.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.842" endtime="20201115 23:00:03.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.882" endtime="20201115 23:00:04.168"></status>
</kw>
<msg timestamp="20201115 23:00:04.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.881" endtime="20201115 23:00:04.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.172" endtime="20201115 23:00:04.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.181" endtime="20201115 23:00:04.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.878" endtime="20201115 23:00:04.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.876" endtime="20201115 23:00:04.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.188" level="INFO">${RESULT} = [{'time': 0.022533125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0653000000001605e-05, 'source_diff': 4.0653000000001605e-05}, {'time': 0.022587125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:04.185" endtime="20201115 23:00:04.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.202" level="INFO">${ACCURACY} = {'source_diff': [4.0653000000001605e-05, 4.073599999999955e-05, 4.099999999999937e-05, 4.1430999999998025e-05, 4.077800000000173e-05, 4.057000000000019e-05, 4.132000000000094e-05, 4.052800000000148e-0...</msg>
<status status="PASS" starttime="20201115 23:00:04.189" endtime="20201115 23:00:04.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.207" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.206" endtime="20201115 23:00:04.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.209" level="INFO">VALUE: [4.0653000000001605e-05, 4.073599999999955e-05, 4.099999999999937e-05, 4.1430999999998025e-05, 4.077800000000173e-05, 4.057000000000019e-05, 4.132000000000094e-05, 4.052800000000148e-05, 4.104199999999808e-05, 4.105600000000112e-05, 4.0695000000000314e-05, 4.0736999999999024e-05, 4.126399999999919e-05, 4.105599999999765e-05, 4.0805000000001396e-05, 4.0610999999999425e-05, 4.1222999999999954e-05, 4.0805000000001396e-05, 4.0860999999999675e-05, 4.141599999999898e-05, 4.143000000000202e-05, 4.070800000000041e-05, 4.1110999999999925e-05, 4.1416999999998455e-05, 4.126399999999919e-05, 4.068000000000127e-05, 4.094400000000109e-05, 4.07920000000013e-05, 4.097200000000023e-05, 4.052799999999801e-05, 4.131999999999747e-05, 4.054200000000105e-05, 4.083400000000001e-05, 4.1431000000001494e-05, 4.1194999999997345e-05, 4.1416999999998455e-05, 4.1138999999999065e-05, 4.0708999999999884e-05, 4.1069000000001216e-05, 4.105600000000112e-05, 4.093000000000152e-05, 4.0931000000000994e-05, 4.0931000000000994e-05, 4.1291000000002326e-05, 4.099999999999937e-05, 4.140199999999941e-05, 4.100000000000284e-05, 4.0805000000001396e-05, 4.119400000000134e-05, 4.0860999999999675e-05]</msg>
<status status="PASS" starttime="20201115 23:00:04.208" endtime="20201115 23:00:04.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.203" endtime="20201115 23:00:04.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.213" endtime="20201115 23:00:04.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.216" endtime="20201115 23:00:04.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.215" endtime="20201115 23:00:04.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.211" endtime="20201115 23:00:04.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.841" endtime="20201115 23:00:04.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.839" endtime="20201115 23:00:04.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.838" endtime="20201115 23:00:04.237"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.240" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.248" endtime="20201115 23:00:04.269"></status>
</kw>
<msg timestamp="20201115 23:00:04.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.247" endtime="20201115 23:00:04.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.271" endtime="20201115 23:00:04.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.273" endtime="20201115 23:00:04.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.244" endtime="20201115 23:00:04.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.242" endtime="20201115 23:00:04.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.283" endtime="20201115 23:00:04.569"></status>
</kw>
<msg timestamp="20201115 23:00:04.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.281" endtime="20201115 23:00:04.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.573" endtime="20201115 23:00:04.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.582" endtime="20201115 23:00:04.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.278" endtime="20201115 23:00:04.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.276" endtime="20201115 23:00:04.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.589" level="INFO">${RESULT} = [{'time': 0.022569958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2333000000002036e-05, 'source_diff': 4.2333000000002036e-05}, {'time': 0.022625958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:04.585" endtime="20201115 23:00:04.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.603" level="INFO">${ACCURACY} = {'source_diff': [4.2333000000002036e-05, 4.1791000000002826e-05, 4.2375000000000745e-05, 4.242999999999955e-05, 4.155599999999815e-05, 4.205599999999865e-05, 4.222199999999801e-05, 4.24860000000013e-0...</msg>
<status status="PASS" starttime="20201115 23:00:04.590" endtime="20201115 23:00:04.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.607" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.606" endtime="20201115 23:00:04.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.610" level="INFO">VALUE: [4.2333000000002036e-05, 4.1791000000002826e-05, 4.2375000000000745e-05, 4.242999999999955e-05, 4.155599999999815e-05, 4.205599999999865e-05, 4.222199999999801e-05, 4.24860000000013e-05, 4.224999999999715e-05, 4.17920000000023e-05, 4.222199999999801e-05, 4.172200000000098e-05, 4.229199999999933e-05, 4.2124999999997026e-05, 4.236200000000065e-05, 4.182000000000144e-05, 4.1861000000000675e-05, 4.2125000000000495e-05, 4.2166999999999205e-05, 4.1624999999999995e-05, 4.245800000000216e-05, 4.1568999999998246e-05, 4.240199999999694e-05, 4.169399999999837e-05, 4.216599999999973e-05, 4.19860000000008e-05, 4.200000000000037e-05, 4.1624999999999995e-05, 4.177799999999926e-05, 4.176399999999969e-05, 4.223600000000105e-05, 4.23059999999989e-05, 4.2111000000000925e-05, 4.173600000000055e-05, 4.173599999999708e-05, 4.247200000000173e-05, 4.182000000000144e-05, 4.1611000000000425e-05, 4.19999999999969e-05, 4.202800000000298e-05, 4.1680999999998275e-05, 4.250000000000087e-05, 4.1680999999998275e-05, 4.2181000000002244e-05, 4.170800000000141e-05, 4.1554999999998676e-05, 4.16799999999988e-05, 4.1805000000002396e-05, 4.176399999999969e-05, 4.1819000000001966e-05]</msg>
<status status="PASS" starttime="20201115 23:00:04.608" endtime="20201115 23:00:04.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.604" endtime="20201115 23:00:04.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.613" endtime="20201115 23:00:04.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.617" endtime="20201115 23:00:04.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.615" endtime="20201115 23:00:04.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.611" endtime="20201115 23:00:04.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.241" endtime="20201115 23:00:04.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.239" endtime="20201115 23:00:04.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.238" endtime="20201115 23:00:04.638"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.640" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.649" endtime="20201115 23:00:04.668"></status>
</kw>
<msg timestamp="20201115 23:00:04.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.647" endtime="20201115 23:00:04.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.669" endtime="20201115 23:00:04.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.673" endtime="20201115 23:00:04.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.645" endtime="20201115 23:00:04.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.642" endtime="20201115 23:00:04.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.682" endtime="20201115 23:00:04.969"></status>
</kw>
<msg timestamp="20201115 23:00:04.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023395611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023438944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.680" endtime="20201115 23:00:04.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023395611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023438944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.973" endtime="20201115 23:00:04.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.982" endtime="20201115 23:00:04.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.678" endtime="20201115 23:00:04.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.676" endtime="20201115 23:00:04.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.989" level="INFO">${RESULT} = [{'time': 0.023438944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3332999999999566e-05, 'source_diff': 4.3332999999999566e-05}, {'time': 0.023495917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:04.985" endtime="20201115 23:00:04.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.004" level="INFO">${ACCURACY} = {'source_diff': [4.3332999999999566e-05, 4.254200000000305e-05, 4.3125000000001495e-05, 4.2972999999998235e-05, 4.326400000000119e-05, 4.322200000000248e-05, 4.277700000000079e-05, 4.316600000000073e-...</msg>
<status status="PASS" starttime="20201115 23:00:04.990" endtime="20201115 23:00:05.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.009" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.008" endtime="20201115 23:00:05.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.012" level="INFO">VALUE: [4.3332999999999566e-05, 4.254200000000305e-05, 4.3125000000001495e-05, 4.2972999999998235e-05, 4.326400000000119e-05, 4.322200000000248e-05, 4.277700000000079e-05, 4.316600000000073e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.2804999999999926e-05, 4.3124999999998026e-05, 4.2930999999999525e-05, 4.3096999999998886e-05, 4.2930999999999525e-05, 4.2624999999997526e-05, 4.2652999999996666e-05, 4.3444999999999595e-05, 4.2874999999997776e-05, 4.347199999999926e-05, 4.3110999999998456e-05, 4.322199999999901e-05, 4.304200000000008e-05, 4.322199999999901e-05, 4.2916999999999955e-05, 4.2680999999999275e-05, 4.305599999999965e-05, 4.281999999999897e-05, 4.258400000000176e-05, 4.3431000000000025e-05, 4.3124999999998026e-05, 4.341599999999751e-05, 4.2596999999998386e-05, 4.2639000000000565e-05, 4.2541000000000107e-05, 4.2554999999999676e-05, 4.26799999999998e-05, 4.315200000000116e-05, 4.2818999999999496e-05, 4.3041000000000607e-05, 4.3375000000001745e-05, 4.257000000000219e-05, 4.306999999999922e-05, 4.33059999999999e-05, 4.29999999999979e-05, 4.3459000000002634e-05, 4.2695000000002314e-05, 4.2596999999998386e-05, 4.2596999999998386e-05, 4.2680999999999275e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.010" endtime="20201115 23:00:05.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.005" endtime="20201115 23:00:05.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.015" endtime="20201115 23:00:05.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.018" endtime="20201115 23:00:05.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.017" endtime="20201115 23:00:05.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.013" endtime="20201115 23:00:05.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.641" endtime="20201115 23:00:05.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.639" endtime="20201115 23:00:05.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.638" endtime="20201115 23:00:05.040"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.042" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.062" endtime="20201115 23:00:05.079"></status>
</kw>
<msg timestamp="20201115 23:00:05.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.060" endtime="20201115 23:00:05.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.081" endtime="20201115 23:00:05.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.084" endtime="20201115 23:00:05.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.057" endtime="20201115 23:00:05.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.044" endtime="20201115 23:00:05.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.093" endtime="20201115 23:00:05.379"></status>
</kw>
<msg timestamp="20201115 23:00:05.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033627347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033671722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.092" endtime="20201115 23:00:05.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033627347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033671722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.383" endtime="20201115 23:00:05.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.391" endtime="20201115 23:00:05.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.089" endtime="20201115 23:00:05.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.087" endtime="20201115 23:00:05.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.398" level="INFO">${RESULT} = [{'time': 0.033671722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4374999999999276e-05, 'source_diff': 4.4374999999999276e-05}, {'time': 0.033730736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:05.395" endtime="20201115 23:00:05.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.412" level="INFO">${ACCURACY} = {'source_diff': [4.4374999999999276e-05, 4.4124999999999026e-05, 4.36660000000047e-05, 4.3888999999998346e-05, 4.36939999999969e-05, 4.380599999999346e-05, 4.423599999999611e-05, 4.4110999999999456e-0...</msg>
<status status="PASS" starttime="20201115 23:00:05.399" endtime="20201115 23:00:05.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.417" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.416" endtime="20201115 23:00:05.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.420" level="INFO">VALUE: [4.4374999999999276e-05, 4.4124999999999026e-05, 4.36660000000047e-05, 4.3888999999998346e-05, 4.36939999999969e-05, 4.380599999999346e-05, 4.423599999999611e-05, 4.4110999999999456e-05, 4.4166999999997736e-05, 4.4459000000003635e-05, 4.3667000000004175e-05, 4.4360999999999706e-05, 4.3916999999997486e-05, 4.43060000000009e-05, 4.3889000000005285e-05, 4.429200000000133e-05, 4.373600000000255e-05, 4.4180999999997306e-05, 4.3819000000000496e-05, 4.409799999999936e-05, 4.393000000000452e-05, 4.376400000000169e-05, 4.429100000000186e-05, 4.4069000000000746e-05, 4.370799999999647e-05, 4.404100000000161e-05, 4.401400000000194e-05, 4.429100000000186e-05, 4.423600000000305e-05, 4.3666999999997236e-05, 4.4347000000000136e-05, 4.358399999999929e-05, 4.402800000000151e-05, 4.383399999999954e-05, 4.404200000000108e-05, 4.399999999999543e-05, 4.400000000000237e-05, 4.4430999999997556e-05, 4.432000000000047e-05, 4.3723000000002454e-05, 4.433400000000004e-05, 4.3916999999997486e-05, 4.404199999999414e-05, 4.3846999999999636e-05, 4.3874999999998776e-05, 4.427799999999482e-05, 4.443000000000502e-05, 4.351400000000144e-05, 4.367999999999733e-05, 4.369400000000384e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.418" endtime="20201115 23:00:05.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.413" endtime="20201115 23:00:05.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.423" endtime="20201115 23:00:05.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.426" endtime="20201115 23:00:05.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.425" endtime="20201115 23:00:05.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.421" endtime="20201115 23:00:05.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.043" endtime="20201115 23:00:05.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.041" endtime="20201115 23:00:05.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.040" endtime="20201115 23:00:05.448"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.451" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.459" endtime="20201115 23:00:05.477"></status>
</kw>
<msg timestamp="20201115 23:00:05.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.458" endtime="20201115 23:00:05.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.479" endtime="20201115 23:00:05.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.481" endtime="20201115 23:00:05.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.455" endtime="20201115 23:00:05.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.453" endtime="20201115 23:00:05.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.491" endtime="20201115 23:00:05.776"></status>
</kw>
<msg timestamp="20201115 23:00:05.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.489" endtime="20201115 23:00:05.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.781" endtime="20201115 23:00:05.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.789" endtime="20201115 23:00:05.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.486" endtime="20201115 23:00:05.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.485" endtime="20201115 23:00:05.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.796" level="INFO">${RESULT} = [{'time': 0.022594917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.484800000000011e-05, 'source_diff': 4.484800000000011e-05}, {'time': 0.022655917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:05.793" endtime="20201115 23:00:05.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.810" level="INFO">${ACCURACY} = {'source_diff': [4.484800000000011e-05, 4.501399999999947e-05, 4.4945000000001095e-05, 4.5416999999998986e-05, 4.477699999999932e-05, 4.5167000000002205e-05, 4.4638999999999096e-05, 4.538800000000037e...</msg>
<status status="PASS" starttime="20201115 23:00:05.797" endtime="20201115 23:00:05.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.815" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.814" endtime="20201115 23:00:05.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.818" level="INFO">VALUE: [4.484800000000011e-05, 4.501399999999947e-05, 4.4945000000001095e-05, 4.5416999999998986e-05, 4.477699999999932e-05, 4.5167000000002205e-05, 4.4638999999999096e-05, 4.538800000000037e-05, 4.505499999999871e-05, 4.4902999999998916e-05, 4.467999999999833e-05, 4.5138999999999596e-05, 4.472200000000051e-05, 4.497200000000076e-05, 4.531899999999853e-05, 4.5361000000000706e-05, 4.504199999999861e-05, 4.5083000000001316e-05, 4.495800000000119e-05, 4.4653000000002135e-05, 4.454200000000158e-05, 4.5152999999999166e-05, 4.482000000000097e-05, 4.4903000000002385e-05, 4.551399999999997e-05, 4.4930999999998056e-05, 4.5388999999999846e-05, 4.534699999999767e-05, 4.497199999999729e-05, 4.552700000000007e-05, 4.48060000000014e-05, 4.4624999999999526e-05, 4.523600000000058e-05, 4.551399999999997e-05, 4.504099999999914e-05, 4.472200000000051e-05, 4.534699999999767e-05, 4.51800000000023e-05, 4.5069000000001747e-05, 4.4624999999999526e-05, 4.502799999999904e-05, 4.498600000000033e-05, 4.4624999999999526e-05, 4.4597000000000386e-05, 4.548600000000083e-05, 4.5430999999998556e-05, 4.5416999999998986e-05, 4.534699999999767e-05, 4.4930999999998056e-05, 4.5388999999999846e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.816" endtime="20201115 23:00:05.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.811" endtime="20201115 23:00:05.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.821" endtime="20201115 23:00:05.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.825" endtime="20201115 23:00:05.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.823" endtime="20201115 23:00:05.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.820" endtime="20201115 23:00:05.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.451" endtime="20201115 23:00:05.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.449" endtime="20201115 23:00:05.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.448" endtime="20201115 23:00:05.846"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.849" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.857" endtime="20201115 23:00:05.875"></status>
</kw>
<msg timestamp="20201115 23:00:05.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.856" endtime="20201115 23:00:05.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.876" endtime="20201115 23:00:05.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.879" endtime="20201115 23:00:05.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.853" endtime="20201115 23:00:05.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.851" endtime="20201115 23:00:05.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.889" endtime="20201115 23:00:06.175"></status>
</kw>
<msg timestamp="20201115 23:00:06.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.887" endtime="20201115 23:00:06.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.179" endtime="20201115 23:00:06.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.188" endtime="20201115 23:00:06.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.884" endtime="20201115 23:00:06.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.883" endtime="20201115 23:00:06.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.195" level="INFO">${RESULT} = [{'time': 0.022598333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6375000000001276e-05, 'source_diff': 4.6375000000001276e-05}, {'time': 0.022660333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:06.191" endtime="20201115 23:00:06.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.209" level="INFO">${ACCURACY} = {'source_diff': [4.6375000000001276e-05, 4.6111000000001456e-05, 4.5611000000000956e-05, 4.561099999999749e-05, 4.577799999999979e-05, 4.648600000000183e-05, 4.620799999999897e-05, 4.5625000000000526e...</msg>
<status status="PASS" starttime="20201115 23:00:06.196" endtime="20201115 23:00:06.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.214" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.212" endtime="20201115 23:00:06.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.217" level="INFO">VALUE: [4.6375000000001276e-05, 4.6111000000001456e-05, 4.5611000000000956e-05, 4.561099999999749e-05, 4.577799999999979e-05, 4.648600000000183e-05, 4.620799999999897e-05, 4.5625000000000526e-05, 4.5847000000001636e-05, 4.579199999999936e-05, 4.622199999999854e-05, 4.6166999999999736e-05, 4.629199999999986e-05, 4.5889000000000346e-05, 4.649999999999793e-05, 4.605599999999918e-05, 4.6236999999997586e-05, 4.634699999999867e-05, 4.5694999999998376e-05, 4.5875000000000776e-05, 4.56939999999989e-05, 4.5652999999999666e-05, 4.584699999999817e-05, 4.555499999999921e-05, 4.554099999999964e-05, 4.572200000000151e-05, 4.634699999999867e-05, 4.598599999999786e-05, 4.647200000000226e-05, 4.577799999999979e-05, 4.629199999999986e-05, 4.606899999999928e-05, 4.598599999999786e-05, 4.609699999999842e-05, 4.6195000000002345e-05, 4.6444999999999126e-05, 4.573599999999761e-05, 4.622199999999854e-05, 4.60000000000009e-05, 4.577799999999979e-05, 4.622199999999854e-05, 4.6223000000001485e-05, 4.6403000000000416e-05, 4.588899999999688e-05, 4.584800000000111e-05, 4.6472999999998266e-05, 4.574999999999718e-05, 4.5847000000001636e-05, 4.6111000000001456e-05, 4.565200000000019e-05]</msg>
<status status="PASS" starttime="20201115 23:00:06.215" endtime="20201115 23:00:06.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.210" endtime="20201115 23:00:06.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.220" endtime="20201115 23:00:06.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.223" endtime="20201115 23:00:06.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.222" endtime="20201115 23:00:06.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.218" endtime="20201115 23:00:06.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.849" endtime="20201115 23:00:06.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.847" endtime="20201115 23:00:06.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.846" endtime="20201115 23:00:06.245"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.247" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.256" endtime="20201115 23:00:06.275"></status>
</kw>
<msg timestamp="20201115 23:00:06.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.254" endtime="20201115 23:00:06.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.277" endtime="20201115 23:00:06.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.279" endtime="20201115 23:00:06.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.251" endtime="20201115 23:00:06.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.249" endtime="20201115 23:00:06.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.289" endtime="20201115 23:00:06.574"></status>
</kw>
<msg timestamp="20201115 23:00:06.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023456903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023504042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.287" endtime="20201115 23:00:06.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023456903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023504042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.578" endtime="20201115 23:00:06.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.587" endtime="20201115 23:00:06.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.284" endtime="20201115 23:00:06.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.283" endtime="20201115 23:00:06.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.594" level="INFO">${RESULT} = [{'time': 0.023504042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.713899999999813e-05, 'source_diff': 4.713899999999813e-05}, {'time': 0.023564028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:06.590" endtime="20201115 23:00:06.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.609" level="INFO">${ACCURACY} = {'source_diff': [4.713899999999813e-05, 4.6944999999999626e-05, 4.679200000000036e-05, 4.6875000000001776e-05, 4.747199999999979e-05, 4.705500000000071e-05, 4.7403000000001416e-05, 4.690200000000144e-...</msg>
<status status="PASS" starttime="20201115 23:00:06.595" endtime="20201115 23:00:06.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.614" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.613" endtime="20201115 23:00:06.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.617" level="INFO">VALUE: [4.713899999999813e-05, 4.6944999999999626e-05, 4.679200000000036e-05, 4.6875000000001776e-05, 4.747199999999979e-05, 4.705500000000071e-05, 4.7403000000001416e-05, 4.690200000000144e-05, 4.7361000000002706e-05, 4.745800000000022e-05, 4.690200000000144e-05, 4.743000000000108e-05, 4.656899999999978e-05, 4.712499999999856e-05, 4.747199999999979e-05, 4.740200000000194e-05, 4.676400000000122e-05, 4.6889000000001346e-05, 4.731899999999706e-05, 4.7431000000000556e-05, 4.708299999999985e-05, 4.7445000000000126e-05, 4.6694999999999376e-05, 4.711099999999899e-05, 4.697199999999929e-05, 4.740199999999847e-05, 4.7222999999999016e-05, 4.6917000000000486e-05, 4.730600000000043e-05, 4.686099999999874e-05, 4.705600000000018e-05, 4.6875000000001776e-05, 4.749999999999893e-05, 4.697200000000276e-05, 4.731900000000053e-05, 4.729099999999792e-05, 4.654100000000064e-05, 4.7125000000002026e-05, 4.747199999999979e-05, 4.679100000000089e-05, 4.684699999999917e-05, 4.656899999999978e-05, 4.712499999999856e-05, 4.741600000000151e-05, 4.673599999999861e-05, 4.679200000000036e-05, 4.651400000000097e-05, 4.673599999999861e-05, 4.654200000000011e-05, 4.6931000000000056e-05]</msg>
<status status="PASS" starttime="20201115 23:00:06.615" endtime="20201115 23:00:06.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.610" endtime="20201115 23:00:06.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.620" endtime="20201115 23:00:06.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.624" endtime="20201115 23:00:06.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.622" endtime="20201115 23:00:06.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.618" endtime="20201115 23:00:06.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.248" endtime="20201115 23:00:06.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.246" endtime="20201115 23:00:06.645"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.245" endtime="20201115 23:00:06.645"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.647" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.656" endtime="20201115 23:00:06.674"></status>
</kw>
<msg timestamp="20201115 23:00:06.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.654" endtime="20201115 23:00:06.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.676" endtime="20201115 23:00:06.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.678" endtime="20201115 23:00:06.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.651" endtime="20201115 23:00:06.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.649" endtime="20201115 23:00:06.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.688" endtime="20201115 23:00:06.974"></status>
</kw>
<msg timestamp="20201115 23:00:06.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.686" endtime="20201115 23:00:06.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.978" endtime="20201115 23:00:06.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.987" endtime="20201115 23:00:06.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.684" endtime="20201115 23:00:06.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.682" endtime="20201115 23:00:06.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.994" level="INFO">${RESULT} = [{'time': 0.022546778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.804200000000161e-05, 'source_diff': 4.804200000000161e-05}, {'time': 0.022608833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:06.991" endtime="20201115 23:00:06.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.008" level="INFO">${ACCURACY} = {'source_diff': [4.804200000000161e-05, 4.842999999999861e-05, 4.7972999999999766e-05, 4.823600000000011e-05, 4.841699999999852e-05, 4.791699999999802e-05, 4.773599999999961e-05, 4.7722999999999516e-0...</msg>
<status status="PASS" starttime="20201115 23:00:06.995" endtime="20201115 23:00:07.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.013" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.012" endtime="20201115 23:00:07.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.016" level="INFO">VALUE: [4.804200000000161e-05, 4.842999999999861e-05, 4.7972999999999766e-05, 4.823600000000011e-05, 4.841699999999852e-05, 4.791699999999802e-05, 4.773599999999961e-05, 4.7722999999999516e-05, 4.817999999999836e-05, 4.817999999999836e-05, 4.780499999999799e-05, 4.811099999999999e-05, 4.772200000000004e-05, 4.8139000000002596e-05, 4.799999999999943e-05, 4.773599999999961e-05, 4.811099999999999e-05, 4.826400000000272e-05, 4.7681000000000806e-05, 4.812499999999956e-05, 4.798599999999986e-05, 4.823600000000011e-05, 4.809700000000042e-05, 4.787499999999931e-05, 4.8181000000001306e-05, 4.8181000000001306e-05, 4.8431000000001556e-05, 4.7945000000000626e-05, 4.806999999999728e-05, 4.804199999999814e-05, 4.781900000000103e-05, 4.799999999999943e-05, 4.817999999999836e-05, 4.78330000000006e-05, 4.75269999999986e-05, 4.81940000000014e-05, 4.818000000000183e-05, 4.799999999999943e-05, 4.781900000000103e-05, 4.772200000000004e-05, 4.805500000000171e-05, 4.78330000000006e-05, 4.755600000000068e-05, 4.761099999999949e-05, 4.81529999999987e-05, 4.807000000000075e-05, 4.7917000000001486e-05, 4.752799999999807e-05, 4.822200000000054e-05, 4.8153000000002166e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.014" endtime="20201115 23:00:07.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.009" endtime="20201115 23:00:07.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.019" endtime="20201115 23:00:07.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.022" endtime="20201115 23:00:07.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.021" endtime="20201115 23:00:07.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.017" endtime="20201115 23:00:07.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.648" endtime="20201115 23:00:07.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.646" endtime="20201115 23:00:07.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.645" endtime="20201115 23:00:07.044"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.046" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.055" endtime="20201115 23:00:07.073"></status>
</kw>
<msg timestamp="20201115 23:00:07.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.053" endtime="20201115 23:00:07.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.075" endtime="20201115 23:00:07.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.077" endtime="20201115 23:00:07.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.050" endtime="20201115 23:00:07.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.048" endtime="20201115 23:00:07.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.087" endtime="20201115 23:00:07.376"></status>
</kw>
<msg timestamp="20201115 23:00:07.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022586972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.085" endtime="20201115 23:00:07.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022586972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.380" endtime="20201115 23:00:07.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.388" endtime="20201115 23:00:07.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.083" endtime="20201115 23:00:07.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.081" endtime="20201115 23:00:07.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.396" level="INFO">${RESULT} = [{'time': 0.022586972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916599999999979e-05, 'source_diff': 4.916599999999979e-05}, {'time': 0.022648958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:07.393" endtime="20201115 23:00:07.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.410" level="INFO">${ACCURACY} = {'source_diff': [4.916599999999979e-05, 4.875000000000018e-05, 4.883299999999813e-05, 4.936100000000124e-05, 4.913900000000013e-05, 4.848600000000036e-05, 4.904199999999914e-05, 4.941699999999952e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:07.397" endtime="20201115 23:00:07.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.414" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.413" endtime="20201115 23:00:07.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.417" level="INFO">VALUE: [4.916599999999979e-05, 4.875000000000018e-05, 4.883299999999813e-05, 4.936100000000124e-05, 4.913900000000013e-05, 4.848600000000036e-05, 4.904199999999914e-05, 4.941699999999952e-05, 4.9320000000002e-05, 4.893099999999859e-05, 4.912500000000056e-05, 4.884700000000117e-05, 4.9014e-05, 4.879199999999889e-05, 4.888899999999988e-05, 4.922199999999807e-05, 4.943099999999909e-05, 4.884800000000064e-05, 4.9487000000000836e-05, 4.905499999999924e-05, 4.879199999999889e-05, 4.854200000000211e-05, 4.918000000000283e-05, 4.892999999999911e-05, 4.923600000000111e-05, 4.879099999999942e-05, 4.898600000000086e-05, 4.913900000000013e-05, 4.922200000000154e-05, 4.873600000000061e-05, 4.866699999999877e-05, 4.862500000000006e-05, 4.936099999999777e-05, 4.930600000000243e-05, 4.898599999999739e-05, 4.927799999999982e-05, 4.8681000000001806e-05, 4.950000000000093e-05, 4.887500000000031e-05, 4.909800000000089e-05, 4.861199999999996e-05, 4.9223000000001016e-05, 4.861199999999996e-05, 4.937500000000081e-05, 4.873600000000061e-05, 4.861100000000049e-05, 4.881900000000203e-05, 4.904099999999967e-05, 4.898600000000086e-05, 4.897200000000129e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.415" endtime="20201115 23:00:07.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.411" endtime="20201115 23:00:07.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.420" endtime="20201115 23:00:07.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.423" endtime="20201115 23:00:07.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.422" endtime="20201115 23:00:07.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.418" endtime="20201115 23:00:07.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.047" endtime="20201115 23:00:07.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.045" endtime="20201115 23:00:07.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.044" endtime="20201115 23:00:07.444"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.447" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.455" endtime="20201115 23:00:07.473"></status>
</kw>
<msg timestamp="20201115 23:00:07.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.454" endtime="20201115 23:00:07.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.475" endtime="20201115 23:00:07.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.478" endtime="20201115 23:00:07.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.451" endtime="20201115 23:00:07.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.449" endtime="20201115 23:00:07.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.487" endtime="20201115 23:00:07.788"></status>
</kw>
<msg timestamp="20201115 23:00:07.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.485" endtime="20201115 23:00:07.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.794" endtime="20201115 23:00:07.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.802" endtime="20201115 23:00:07.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.483" endtime="20201115 23:00:07.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.481" endtime="20201115 23:00:07.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.809" level="INFO">${RESULT} = [{'time': 0.022072278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.993099999999959e-05, 'source_diff': 4.993099999999959e-05}, {'time': 0.022136333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:07.805" endtime="20201115 23:00:07.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.822" level="INFO">${ACCURACY} = {'source_diff': [4.993099999999959e-05, 5.025000000000168e-05, 4.987499999999784e-05, 5.005599999999971e-05, 4.993099999999959e-05, 5.023600000000211e-05, 5.041700000000052e-05, 5.011200000000146e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:07.810" endtime="20201115 23:00:07.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.827" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.826" endtime="20201115 23:00:07.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.829" level="INFO">VALUE: [4.993099999999959e-05, 5.025000000000168e-05, 4.987499999999784e-05, 5.005599999999971e-05, 4.993099999999959e-05, 5.023600000000211e-05, 5.041700000000052e-05, 5.011200000000146e-05, 4.986200000000121e-05, 5.015200000000122e-05, 4.972200000000204e-05, 4.98330000000026e-05, 5.037500000000181e-05, 5.036099999999877e-05, 5.008299999999938e-05, 4.975000000000118e-05, 5.029100000000092e-05, 4.957000000000225e-05, 5.029199999999692e-05, 4.961100000000149e-05, 5.029200000000039e-05, 5.000000000000143e-05, 5.037499999999834e-05, 5.005599999999971e-05, 5.036100000000224e-05, 5.016700000000027e-05, 4.988900000000088e-05, 4.999999999999796e-05, 4.9722999999998047e-05, 4.961200000000096e-05, 4.991600000000054e-05, 5.009700000000242e-05, 5.041600000000104e-05, 5.025000000000168e-05, 5.027700000000135e-05, 5.029100000000092e-05, 5.045799999999975e-05, 5.025000000000168e-05, 5.016600000000079e-05, 4.956899999999931e-05, 5.009699999999895e-05, 5.018099999999984e-05, 5.037499999999834e-05, 4.961200000000096e-05, 5.047199999999932e-05, 4.998599999999839e-05, 4.973600000000161e-05, 4.990300000000045e-05, 4.961100000000149e-05, 5.027799999999735e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.828" endtime="20201115 23:00:07.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.823" endtime="20201115 23:00:07.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.832" endtime="20201115 23:00:07.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.836" endtime="20201115 23:00:07.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.834" endtime="20201115 23:00:07.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.831" endtime="20201115 23:00:07.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.447" endtime="20201115 23:00:07.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.446" endtime="20201115 23:00:07.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.445" endtime="20201115 23:00:07.857"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.859" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.868" endtime="20201115 23:00:07.887"></status>
</kw>
<msg timestamp="20201115 23:00:07.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.866" endtime="20201115 23:00:07.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.889" endtime="20201115 23:00:07.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.891" endtime="20201115 23:00:07.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.863" endtime="20201115 23:00:07.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.861" endtime="20201115 23:00:07.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.900" endtime="20201115 23:00:08.185"></status>
</kw>
<msg timestamp="20201115 23:00:08.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023188778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023239972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.899" endtime="20201115 23:00:08.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023188778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023239972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.189" endtime="20201115 23:00:08.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.198" endtime="20201115 23:00:08.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.896" endtime="20201115 23:00:08.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.894" endtime="20201115 23:00:08.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.204" level="INFO">${RESULT} = [{'time': 0.023239972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.119400000000093e-05, 'source_diff': 5.119400000000093e-05}, {'time': 0.023305986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:08.201" endtime="20201115 23:00:08.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:08.219" level="INFO">${ACCURACY} = {'source_diff': [5.119400000000093e-05, 5.145800000000075e-05, 5.066700000000077e-05, 5.068100000000034e-05, 5.090300000000145e-05, 5.055600000000021e-05, 5.143100000000109e-05, 5.091700000000102e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:08.205" endtime="20201115 23:00:08.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.224" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:00:08.223" endtime="20201115 23:00:08.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.226" level="INFO">VALUE: [5.119400000000093e-05, 5.145800000000075e-05, 5.066700000000077e-05, 5.068100000000034e-05, 5.090300000000145e-05, 5.055600000000021e-05, 5.143100000000109e-05, 5.091700000000102e-05, 5.118100000000084e-05, 5.130600000000096e-05, 5.149999999999946e-05, 5.107000000000028e-05, 5.15140000000025e-05, 5.0901999999998504e-05, 5.058399999999935e-05, 5.0695000000003376e-05, 5.143100000000109e-05, 5.055500000000074e-05, 5.055500000000074e-05, 5.1401999999999004e-05, 5.073599999999914e-05, 5.106900000000081e-05, 5.066600000000129e-05, 5.073599999999914e-05, 5.069499999999991e-05, 5.061099999999902e-05, 5.076400000000175e-05, 5.091700000000102e-05, 5.14729999999998e-05, 5.065299999999773e-05, 5.054200000000064e-05, 5.097199999999982e-05, 5.107000000000028e-05, 5.137500000000281e-05, 5.123600000000311e-05, 5.072200000000304e-05, 5.098599999999939e-05, 5.143100000000109e-05, 5.0736999999998617e-05, 5.098599999999939e-05, 5.123599999999964e-05, 5.086100000000274e-05, 5.073599999999914e-05, 5.127700000000235e-05, 5.105500000000124e-05, 5.075000000000218e-05, 5.094400000000068e-05, 5.051399999999803e-05, 5.095899999999973e-05, 5.079200000000089e-05]</msg>
<status status="PASS" starttime="20201115 23:00:08.225" endtime="20201115 23:00:08.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.220" endtime="20201115 23:00:08.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.229" endtime="20201115 23:00:08.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:08.232" endtime="20201115 23:00:08.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.231" endtime="20201115 23:00:08.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.227" endtime="20201115 23:00:08.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.860" endtime="20201115 23:00:08.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.858" endtime="20201115 23:00:08.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.857" endtime="20201115 23:00:08.254"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.256" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.265" endtime="20201115 23:00:08.283"></status>
</kw>
<msg timestamp="20201115 23:00:08.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.263" endtime="20201115 23:00:08.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.284" endtime="20201115 23:00:08.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.287" endtime="20201115 23:00:08.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.261" endtime="20201115 23:00:08.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.258" endtime="20201115 23:00:08.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.295" endtime="20201115 23:00:08.581"></status>
</kw>
<msg timestamp="20201115 23:00:08.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022422153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.294" endtime="20201115 23:00:08.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022422153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.585" endtime="20201115 23:00:08.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.594" endtime="20201115 23:00:08.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.291" endtime="20201115 23:00:08.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.290" endtime="20201115 23:00:08.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.600" level="INFO">${RESULT} = [{'time': 0.022422153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.186100000000027e-05, 'source_diff': 5.186100000000027e-05}, {'time': 0.022490181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:08.597" endtime="20201115 23:00:08.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:08.614" level="INFO">${ACCURACY} = {'source_diff': [5.186100000000027e-05, 5.227800000000282e-05, 5.154199999999817e-05, 5.16669999999983e-05, 5.168000000000186e-05, 5.161199999999949e-05, 5.18470000000007e-05, 5.2179999999998894e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:08.601" endtime="20201115 23:00:08.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.618" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:00:08.617" endtime="20201115 23:00:08.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.621" level="INFO">VALUE: [5.186100000000027e-05, 5.227800000000282e-05, 5.154199999999817e-05, 5.16669999999983e-05, 5.168000000000186e-05, 5.161199999999949e-05, 5.18470000000007e-05, 5.2179999999998894e-05, 5.202699999999963e-05, 5.173600000000014e-05, 5.18470000000007e-05, 5.2457999999998284e-05, 5.161100000000002e-05, 5.237500000000034e-05, 5.152800000000207e-05, 5.183300000000113e-05, 5.193000000000211e-05, 5.195800000000125e-05, 5.204200000000214e-05, 5.227799999999935e-05, 5.179199999999842e-05, 5.219500000000141e-05, 5.241700000000252e-05, 5.25409999999997e-05, 5.248600000000089e-05, 5.227799999999935e-05, 5.219500000000141e-05, 5.232000000000153e-05, 5.212500000000009e-05, 5.248600000000089e-05, 5.187499999999984e-05, 5.1915999999999074e-05, 5.2471999999997854e-05, 5.188899999999941e-05, 5.172200000000057e-05, 5.172200000000057e-05, 5.180500000000199e-05, 5.155600000000121e-05, 5.163899999999916e-05, 5.155600000000121e-05, 5.230600000000196e-05, 5.229199999999892e-05, 5.181999999999756e-05, 5.229199999999892e-05, 5.236100000000077e-05, 5.218099999999837e-05, 5.169500000000091e-05, 5.216700000000227e-05, 5.186199999999974e-05, 5.155600000000121e-05]</msg>
<status status="PASS" starttime="20201115 23:00:08.619" endtime="20201115 23:00:08.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.615" endtime="20201115 23:00:08.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.624" endtime="20201115 23:00:08.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:08.628" endtime="20201115 23:00:08.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.626" endtime="20201115 23:00:08.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.623" endtime="20201115 23:00:08.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.257" endtime="20201115 23:00:08.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.255" endtime="20201115 23:00:08.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.254" endtime="20201115 23:00:08.649"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.651" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.659" endtime="20201115 23:00:08.678"></status>
</kw>
<msg timestamp="20201115 23:00:08.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.658" endtime="20201115 23:00:08.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.679" endtime="20201115 23:00:08.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.682" endtime="20201115 23:00:08.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.655" endtime="20201115 23:00:08.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.653" endtime="20201115 23:00:08.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.691" endtime="20201115 23:00:08.976"></status>
</kw>
<msg timestamp="20201115 23:00:08.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.689" endtime="20201115 23:00:08.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.981" endtime="20201115 23:00:08.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.989" endtime="20201115 23:00:08.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.687" endtime="20201115 23:00:08.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.685" endtime="20201115 23:00:08.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.996" level="INFO">${RESULT} = [{'time': 0.021935667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.30280000000001e-05, 'source_diff': 5.30280000000001e-05}, {'time': 0.022003653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:08.993" endtime="20201115 23:00:08.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.010" level="INFO">${ACCURACY} = {'source_diff': [5.30280000000001e-05, 5.286100000000127e-05, 5.262500000000059e-05, 5.294499999999869e-05, 5.31669999999998e-05, 5.283299999999866e-05, 5.33479999999982e-05, 5.286100000000127e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:00:08.997" endtime="20201115 23:00:09.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.014" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.013" endtime="20201115 23:00:09.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.017" level="INFO">VALUE: [5.30280000000001e-05, 5.286100000000127e-05, 5.262500000000059e-05, 5.294499999999869e-05, 5.31669999999998e-05, 5.283299999999866e-05, 5.33479999999982e-05, 5.286100000000127e-05, 5.2902000000000504e-05, 5.35280000000006e-05, 5.350000000000146e-05, 5.286100000000127e-05, 5.2971999999998354e-05, 5.286100000000127e-05, 5.338900000000091e-05, 5.286100000000127e-05, 5.340300000000048e-05, 5.305499999999977e-05, 5.269500000000191e-05, 5.3513999999997564e-05, 5.28609999999978e-05, 5.2985999999997924e-05, 5.322299999999808e-05, 5.3235999999998174e-05, 5.307000000000228e-05, 5.300000000000096e-05, 5.31669999999998e-05, 5.3499999999997994e-05, 5.259800000000092e-05, 5.3443999999999714e-05, 5.30410000000002e-05, 5.283299999999866e-05, 5.281899999999909e-05, 5.261100000000102e-05, 5.33609999999983e-05, 5.276400000000028e-05, 5.279199999999942e-05, 5.325000000000121e-05, 5.268099999999887e-05, 5.31669999999998e-05, 5.298600000000139e-05, 5.290299999999998e-05, 5.25279999999996e-05, 5.311100000000152e-05, 5.344499999999919e-05, 5.320899999999851e-05, 5.332000000000253e-05, 5.331999999999906e-05, 5.305599999999924e-05, 5.31669999999998e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.015" endtime="20201115 23:00:09.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.011" endtime="20201115 23:00:09.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.020" endtime="20201115 23:00:09.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.024" endtime="20201115 23:00:09.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.022" endtime="20201115 23:00:09.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.019" endtime="20201115 23:00:09.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.652" endtime="20201115 23:00:09.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.650" endtime="20201115 23:00:09.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.649" endtime="20201115 23:00:09.045"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.047" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.055" endtime="20201115 23:00:09.073"></status>
</kw>
<msg timestamp="20201115 23:00:09.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.054" endtime="20201115 23:00:09.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.075" endtime="20201115 23:00:09.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.077" endtime="20201115 23:00:09.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.051" endtime="20201115 23:00:09.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.049" endtime="20201115 23:00:09.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.086" endtime="20201115 23:00:09.371"></status>
</kw>
<msg timestamp="20201115 23:00:09.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.085" endtime="20201115 23:00:09.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021684653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021738222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.375" endtime="20201115 23:00:09.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.383" endtime="20201115 23:00:09.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.082" endtime="20201115 23:00:09.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.080" endtime="20201115 23:00:09.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.390" level="INFO">${RESULT} = [{'time': 0.021738222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.356899999999984e-05, 'source_diff': 5.356899999999984e-05}, {'time': 0.021808236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:09.386" endtime="20201115 23:00:09.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.404" level="INFO">${ACCURACY} = {'source_diff': [5.356899999999984e-05, 5.388900000000141e-05, 5.362499999999812e-05, 5.4235999999999174e-05, 5.391700000000055e-05, 5.404200000000067e-05, 5.440300000000148e-05, 5.430500000000102e-05...</msg>
<status status="PASS" starttime="20201115 23:00:09.391" endtime="20201115 23:00:09.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.408" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.407" endtime="20201115 23:00:09.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.411" level="INFO">VALUE: [5.356899999999984e-05, 5.388900000000141e-05, 5.362499999999812e-05, 5.4235999999999174e-05, 5.391700000000055e-05, 5.404200000000067e-05, 5.440300000000148e-05, 5.430500000000102e-05, 5.3721999999999104e-05, 5.43609999999993e-05, 5.400000000000196e-05, 5.411100000000252e-05, 5.41670000000008e-05, 5.443100000000062e-05, 5.365300000000073e-05, 5.379200000000042e-05, 5.4235999999999174e-05, 5.4415999999998105e-05, 5.4485999999999424e-05, 5.362499999999812e-05, 5.35410000000007e-05, 5.3652000000001254e-05, 5.437499999999887e-05, 5.387500000000184e-05, 5.3985999999998924e-05, 5.38470000000027e-05, 5.380500000000052e-05, 5.408399999999938e-05, 5.4471999999999854e-05, 5.443099999999715e-05, 5.359699999999898e-05, 5.397200000000282e-05, 5.388900000000141e-05, 5.4291999999997453e-05, 5.356999999999931e-05, 5.36670000000003e-05, 5.355600000000321e-05, 5.386199999999827e-05, 5.431899999999712e-05, 5.3693999999999964e-05, 5.380500000000052e-05, 5.352700000000113e-05, 5.450000000000246e-05, 5.36670000000003e-05, 5.3735999999998674e-05, 5.411099999999905e-05, 5.412499999999862e-05, 5.398600000000239e-05, 5.440300000000148e-05, 5.355599999999974e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.409" endtime="20201115 23:00:09.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.404" endtime="20201115 23:00:09.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.414" endtime="20201115 23:00:09.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.417" endtime="20201115 23:00:09.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.416" endtime="20201115 23:00:09.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.412" endtime="20201115 23:00:09.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.048" endtime="20201115 23:00:09.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.046" endtime="20201115 23:00:09.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.045" endtime="20201115 23:00:09.438"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.441" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.449" endtime="20201115 23:00:09.468"></status>
</kw>
<msg timestamp="20201115 23:00:09.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.447" endtime="20201115 23:00:09.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.470" endtime="20201115 23:00:09.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.472" endtime="20201115 23:00:09.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.445" endtime="20201115 23:00:09.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.442" endtime="20201115 23:00:09.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.481" endtime="20201115 23:00:09.767"></status>
</kw>
<msg timestamp="20201115 23:00:09.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.480" endtime="20201115 23:00:09.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.771" endtime="20201115 23:00:09.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.780" endtime="20201115 23:00:09.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.477" endtime="20201115 23:00:09.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.475" endtime="20201115 23:00:09.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.786" level="INFO">${RESULT} = [{'time': 0.022596542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.507000000000081e-05, 'source_diff': 5.507000000000081e-05}, {'time': 0.022667486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:09.783" endtime="20201115 23:00:09.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.801" level="INFO">${ACCURACY} = {'source_diff': [5.507000000000081e-05, 5.462499999999912e-05, 5.5486000000000424e-05, 5.532000000000106e-05, 5.543100000000162e-05, 5.5401999999999535e-05, 5.512499999999962e-05, 5.4527999999998134e-...</msg>
<status status="PASS" starttime="20201115 23:00:09.787" endtime="20201115 23:00:09.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.805" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.804" endtime="20201115 23:00:09.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.808" level="INFO">VALUE: [5.507000000000081e-05, 5.462499999999912e-05, 5.5486000000000424e-05, 5.532000000000106e-05, 5.543100000000162e-05, 5.5401999999999535e-05, 5.512499999999962e-05, 5.4527999999998134e-05, 5.4499999999998994e-05, 5.462500000000259e-05, 5.465300000000173e-05, 5.534700000000073e-05, 5.529200000000192e-05, 5.5221999999997134e-05, 5.497299999999983e-05, 5.455500000000127e-05, 5.487499999999937e-05, 5.4999999999999494e-05, 5.506900000000134e-05, 5.458300000000041e-05, 5.55280000000026e-05, 5.4735999999999674e-05, 5.5222000000000604e-05, 5.511100000000005e-05, 5.4749999999999244e-05, 5.477800000000185e-05, 5.505600000000124e-05, 5.511100000000005e-05, 5.512499999999962e-05, 5.5305999999998023e-05, 5.463900000000216e-05, 5.488899999999894e-05, 5.497299999999983e-05, 5.487499999999937e-05, 5.487500000000284e-05, 5.462499999999912e-05, 5.487499999999937e-05, 5.4999999999999494e-05, 5.4916000000002074e-05, 5.504200000000167e-05, 5.4680000000001394e-05, 5.462500000000259e-05, 5.505600000000124e-05, 5.454200000000117e-05, 5.493099999999765e-05, 5.4777999999998384e-05, 5.4777999999998384e-05, 5.481999999999709e-05, 5.461099999999955e-05, 5.4999999999999494e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.807" endtime="20201115 23:00:09.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.802" endtime="20201115 23:00:09.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.811" endtime="20201115 23:00:09.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.815" endtime="20201115 23:00:09.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.813" endtime="20201115 23:00:09.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.809" endtime="20201115 23:00:09.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.441" endtime="20201115 23:00:09.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.439" endtime="20201115 23:00:09.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.438" endtime="20201115 23:00:09.836"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.838" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.846" endtime="20201115 23:00:09.865"></status>
</kw>
<msg timestamp="20201115 23:00:09.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.845" endtime="20201115 23:00:09.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.866" endtime="20201115 23:00:09.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.869" endtime="20201115 23:00:09.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.842" endtime="20201115 23:00:09.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.840" endtime="20201115 23:00:09.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.878" endtime="20201115 23:00:10.165"></status>
</kw>
<msg timestamp="20201115 23:00:10.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021645778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.876" endtime="20201115 23:00:10.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021645778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.169" endtime="20201115 23:00:10.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.178" endtime="20201115 23:00:10.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.874" endtime="20201115 23:00:10.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.872" endtime="20201115 23:00:10.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.184" level="INFO">${RESULT} = [{'time': 0.021702181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.640300000000001e-05, 'source_diff': 5.640300000000001e-05}, {'time': 0.021774222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:10.181" endtime="20201115 23:00:10.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.198" level="INFO">${ACCURACY} = {'source_diff': [5.640300000000001e-05, 5.565299999999926e-05, 5.591699999999908e-05, 5.6179999999999425e-05, 5.6471999999998385e-05, 5.5915999999999605e-05, 5.604099999999973e-05, 5.558300000000141e-...</msg>
<status status="PASS" starttime="20201115 23:00:10.185" endtime="20201115 23:00:10.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.202" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.201" endtime="20201115 23:00:10.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.205" level="INFO">VALUE: [5.640300000000001e-05, 5.565299999999926e-05, 5.591699999999908e-05, 5.6179999999999425e-05, 5.6471999999998385e-05, 5.5915999999999605e-05, 5.604099999999973e-05, 5.558300000000141e-05, 5.632000000000206e-05, 5.580600000000199e-05, 5.5736000000000674e-05, 5.609699999999801e-05, 5.593100000000212e-05, 5.5805999999998523e-05, 5.6499999999997524e-05, 5.558400000000088e-05, 5.561100000000055e-05, 5.591699999999908e-05, 5.6277999999999884e-05, 5.59870000000004e-05, 5.5958000000001784e-05, 5.580499999999905e-05, 5.561100000000055e-05, 5.6165999999999855e-05, 5.581899999999862e-05, 5.586099999999733e-05, 5.613900000000019e-05, 5.629099999999998e-05, 5.5763999999999814e-05, 5.554099999999923e-05, 5.5735999999997204e-05, 5.608300000000191e-05, 5.569500000000144e-05, 5.5707999999998065e-05, 5.6305999999999023e-05, 5.569500000000144e-05, 5.591699999999908e-05, 5.6027999999999634e-05, 5.561100000000055e-05, 5.565299999999926e-05, 5.6291999999999454e-05, 5.561200000000002e-05, 5.638900000000044e-05, 5.569500000000144e-05, 5.6014000000000064e-05, 5.5902000000000035e-05, 5.562500000000012e-05, 5.584700000000123e-05, 5.561100000000055e-05, 5.6235999999997704e-05]</msg>
<status status="PASS" starttime="20201115 23:00:10.203" endtime="20201115 23:00:10.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.199" endtime="20201115 23:00:10.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.208" endtime="20201115 23:00:10.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.211" endtime="20201115 23:00:10.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.210" endtime="20201115 23:00:10.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.206" endtime="20201115 23:00:10.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.839" endtime="20201115 23:00:10.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.837" endtime="20201115 23:00:10.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.836" endtime="20201115 23:00:10.232"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.235" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.243" endtime="20201115 23:00:10.262"></status>
</kw>
<msg timestamp="20201115 23:00:10.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.241" endtime="20201115 23:00:10.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.263" endtime="20201115 23:00:10.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.274" endtime="20201115 23:00:10.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.239" endtime="20201115 23:00:10.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.237" endtime="20201115 23:00:10.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.283" endtime="20201115 23:00:10.569"></status>
</kw>
<msg timestamp="20201115 23:00:10.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021766778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.281" endtime="20201115 23:00:10.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021766778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.573" endtime="20201115 23:00:10.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.581" endtime="20201115 23:00:10.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.279" endtime="20201115 23:00:10.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.277" endtime="20201115 23:00:10.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.588" level="INFO">${RESULT} = [{'time': 0.021766778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7055999999999774e-05, 'source_diff': 5.7055999999999774e-05}, {'time': 0.021836778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:10.584" endtime="20201115 23:00:10.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.601" level="INFO">${ACCURACY} = {'source_diff': [5.7055999999999774e-05, 5.687500000000137e-05, 5.712499999999815e-05, 5.720900000000251e-05, 5.741700000000058e-05, 5.691700000000008e-05, 5.6555999999999274e-05, 5.7180000000000425e-...</msg>
<status status="PASS" starttime="20201115 23:00:10.589" endtime="20201115 23:00:10.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.606" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.605" endtime="20201115 23:00:10.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.608" level="INFO">VALUE: [5.7055999999999774e-05, 5.687500000000137e-05, 5.712499999999815e-05, 5.720900000000251e-05, 5.741700000000058e-05, 5.691700000000008e-05, 5.6555999999999274e-05, 5.7180000000000425e-05, 5.679100000000048e-05, 5.662500000000112e-05, 5.730499999999708e-05, 5.683300000000266e-05, 5.7221999999999135e-05, 5.733299999999969e-05, 5.7221999999999135e-05, 5.6721999999998635e-05, 5.730500000000055e-05, 5.705600000000324e-05, 5.6555999999999274e-05, 5.738900000000144e-05, 5.6986000000001924e-05, 5.6750000000001244e-05, 5.66809999999994e-05, 5.682000000000256e-05, 5.71809999999999e-05, 5.6763999999997344e-05, 5.734699999999926e-05, 5.730500000000055e-05, 5.730500000000055e-05, 5.730500000000055e-05, 5.6666000000000355e-05, 5.6528000000000134e-05, 5.712499999999815e-05, 5.736099999999883e-05, 5.6764000000000814e-05, 5.734700000000273e-05, 5.7014000000001064e-05, 5.7042000000000204e-05, 5.7055999999999774e-05, 5.695900000000226e-05, 5.7236000000002174e-05, 5.7278000000000884e-05, 5.715300000000076e-05, 5.6638000000001215e-05, 5.74870000000019e-05, 5.661099999999808e-05, 5.7499999999998525e-05, 5.734799999999873e-05, 5.7500000000001994e-05, 5.70550000000003e-05]</msg>
<status status="PASS" starttime="20201115 23:00:10.607" endtime="20201115 23:00:10.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.602" endtime="20201115 23:00:10.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.611" endtime="20201115 23:00:10.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.615" endtime="20201115 23:00:10.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.613" endtime="20201115 23:00:10.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.610" endtime="20201115 23:00:10.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.235" endtime="20201115 23:00:10.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.234" endtime="20201115 23:00:10.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.233" endtime="20201115 23:00:10.636"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.638" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.647" endtime="20201115 23:00:10.665"></status>
</kw>
<msg timestamp="20201115 23:00:10.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.645" endtime="20201115 23:00:10.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.667" endtime="20201115 23:00:10.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.670" endtime="20201115 23:00:10.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.642" endtime="20201115 23:00:10.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.640" endtime="20201115 23:00:10.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.678" endtime="20201115 23:00:10.965"></status>
</kw>
<msg timestamp="20201115 23:00:10.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02218625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:10.677" endtime="20201115 23:00:10.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02218625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:10.969" endtime="20201115 23:00:10.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.977" endtime="20201115 23:00:10.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.674" endtime="20201115 23:00:10.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.673" endtime="20201115 23:00:10.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.984" level="INFO">${RESULT} = [{'time': 0.022244097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.784699999999976e-05, 'source_diff': 5.784699999999976e-05}, {'time': 0.022317111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:10.981" endtime="20201115 23:00:10.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.997" level="INFO">${ACCURACY} = {'source_diff': [5.784699999999976e-05, 5.786099999999933e-05, 5.791699999999761e-05, 5.8250000000002744e-05, 5.7556000000000274e-05, 5.766700000000083e-05, 5.811099999999958e-05, 5.809700000000001e-0...</msg>
<status status="PASS" starttime="20201115 23:00:10.985" endtime="20201115 23:00:10.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.002" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.001" endtime="20201115 23:00:11.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.004" level="INFO">VALUE: [5.784699999999976e-05, 5.786099999999933e-05, 5.791699999999761e-05, 5.8250000000002744e-05, 5.7556000000000274e-05, 5.766700000000083e-05, 5.811099999999958e-05, 5.809700000000001e-05, 5.81810000000009e-05, 5.8249999999999275e-05, 5.83749999999994e-05, 5.8334000000000163e-05, 5.812499999999915e-05, 5.7680000000000925e-05, 5.816700000000133e-05, 5.762500000000212e-05, 5.808300000000044e-05, 5.7735999999999205e-05, 5.8485999999999955e-05, 5.780500000000105e-05, 5.8499999999999525e-05, 5.758299999999994e-05, 5.786099999999933e-05, 5.830499999999808e-05, 5.7985999999999455e-05, 5.758299999999994e-05, 5.8528000000002134e-05, 5.794500000000022e-05, 5.7999999999999025e-05, 5.818099999999743e-05, 5.83610000000033e-05, 5.766700000000083e-05, 5.793100000000065e-05, 5.8249999999999275e-05, 5.762499999999865e-05, 5.786099999999933e-05, 5.804099999999826e-05, 5.8180000000001425e-05, 5.80689999999974e-05, 5.7971999999999885e-05, 5.8235999999999705e-05, 5.837500000000287e-05, 5.804099999999826e-05, 5.8292000000001454e-05, 5.8485999999999955e-05, 5.819500000000047e-05, 5.8499999999999525e-05, 5.843100000000115e-05, 5.836099999999983e-05, 5.7820000000000094e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.003" endtime="20201115 23:00:11.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.998" endtime="20201115 23:00:11.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.008" endtime="20201115 23:00:11.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.012" endtime="20201115 23:00:11.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.010" endtime="20201115 23:00:11.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.006" endtime="20201115 23:00:11.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.639" endtime="20201115 23:00:11.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.637" endtime="20201115 23:00:11.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.636" endtime="20201115 23:00:11.033"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.036" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.044" endtime="20201115 23:00:11.065"></status>
</kw>
<msg timestamp="20201115 23:00:11.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.042" endtime="20201115 23:00:11.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.066" endtime="20201115 23:00:11.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.069" endtime="20201115 23:00:11.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.040" endtime="20201115 23:00:11.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.038" endtime="20201115 23:00:11.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.077" endtime="20201115 23:00:11.363"></status>
</kw>
<msg timestamp="20201115 23:00:11.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231605, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023219861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:11.076" endtime="20201115 23:00:11.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0231605, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023219861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:11.367" endtime="20201115 23:00:11.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.376" endtime="20201115 23:00:11.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.073" endtime="20201115 23:00:11.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.072" endtime="20201115 23:00:11.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.382" level="INFO">${RESULT} = [{'time': 0.023219861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.936100000000083e-05, 'source_diff': 5.936100000000083e-05}, {'time': 0.023293875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:11.379" endtime="20201115 23:00:11.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.397" level="INFO">${ACCURACY} = {'source_diff': [5.936100000000083e-05, 5.863899999999922e-05, 5.9236000000000705e-05, 5.8805999999998054e-05, 5.9250000000000275e-05, 5.901300000000012e-05, 5.936100000000083e-05, 5.863900000000269e-...</msg>
<status status="PASS" starttime="20201115 23:00:11.383" endtime="20201115 23:00:11.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.402" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.401" endtime="20201115 23:00:11.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.404" level="INFO">VALUE: [5.936100000000083e-05, 5.863899999999922e-05, 5.9236000000000705e-05, 5.8805999999998054e-05, 5.9250000000000275e-05, 5.901300000000012e-05, 5.936100000000083e-05, 5.863900000000269e-05, 5.8513999999999095e-05, 5.8749999999999775e-05, 5.879099999999901e-05, 5.933300000000169e-05, 5.90689999999984e-05, 5.8749999999999775e-05, 5.912500000000015e-05, 5.858300000000094e-05, 5.9165999999999386e-05, 5.9277999999999414e-05, 5.9277999999999414e-05, 5.940299999999954e-05, 5.9056000000001774e-05, 5.861100000000008e-05, 5.8834000000000664e-05, 5.862499999999965e-05, 5.9334000000001164e-05, 5.888899999999947e-05, 5.929100000000298e-05, 5.8541999999998234e-05, 5.912500000000015e-05, 5.884700000000076e-05, 5.916699999999886e-05, 5.905499999999883e-05, 5.8887999999999996e-05, 5.8749999999999775e-05, 5.911100000000058e-05, 5.934700000000126e-05, 5.9208000000001565e-05, 5.920900000000104e-05, 5.9305999999998554e-05, 5.9056000000001774e-05, 5.9235999999997235e-05, 5.8986000000000455e-05, 5.858300000000094e-05, 5.9306000000002024e-05, 5.9083999999997444e-05, 5.863900000000269e-05, 5.9277999999999414e-05, 5.943100000000215e-05, 5.866700000000183e-05, 5.8763999999999345e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.403" endtime="20201115 23:00:11.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.398" endtime="20201115 23:00:11.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.408" endtime="20201115 23:00:11.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.411" endtime="20201115 23:00:11.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.410" endtime="20201115 23:00:11.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.406" endtime="20201115 23:00:11.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.036" endtime="20201115 23:00:11.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.035" endtime="20201115 23:00:11.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.034" endtime="20201115 23:00:11.432"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.434" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.443" endtime="20201115 23:00:11.461"></status>
</kw>
<msg timestamp="20201115 23:00:11.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.441" endtime="20201115 23:00:11.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.463" endtime="20201115 23:00:11.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.465" endtime="20201115 23:00:11.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.438" endtime="20201115 23:00:11.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.436" endtime="20201115 23:00:11.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.474" endtime="20201115 23:00:11.759"></status>
</kw>
<msg timestamp="20201115 23:00:11.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02168975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:11.473" endtime="20201115 23:00:11.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02168975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:11.763" endtime="20201115 23:00:11.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.771" endtime="20201115 23:00:11.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.470" endtime="20201115 23:00:11.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.468" endtime="20201115 23:00:11.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.778" level="INFO">${RESULT} = [{'time': 0.02168975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0443999999999776e-05, 'source_diff': 6.0443999999999776e-05}, {'time': 0.021764778, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:11.774" endtime="20201115 23:00:11.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.791" level="INFO">${ACCURACY} = {'source_diff': [6.0443999999999776e-05, 6.012499999999768e-05, 5.9957999999998846e-05, 5.990300000000004e-05, 6.0472000000002385e-05, 6.0291999999999984e-05, 5.9735999999997735e-05, 5.984800000000123...</msg>
<status status="PASS" starttime="20201115 23:00:11.779" endtime="20201115 23:00:11.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.796" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.795" endtime="20201115 23:00:11.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.798" level="INFO">VALUE: [6.0443999999999776e-05, 6.012499999999768e-05, 5.9957999999998846e-05, 5.990300000000004e-05, 6.0472000000002385e-05, 6.0291999999999984e-05, 5.9735999999997735e-05, 5.9848000000001234e-05, 5.9750000000000775e-05, 5.9638000000000746e-05, 6.043099999999968e-05, 6.0014000000000595e-05, 5.9679999999999456e-05, 6.03750000000014e-05, 5.9707999999998596e-05, 5.980499999999958e-05, 6.0000000000001025e-05, 6.0291999999999984e-05, 6.0014000000000595e-05, 5.9555999999998804e-05, 6.0500000000001525e-05, 6.0500000000001525e-05, 6.0000000000001025e-05, 6.0250000000001275e-05, 6.011099999999811e-05, 5.961099999999761e-05, 5.973700000000068e-05, 6.023699999999771e-05, 5.966699999999936e-05, 6.011099999999811e-05, 5.9986000000001455e-05, 5.962500000000065e-05, 5.991699999999961e-05, 6.0485999999998485e-05, 5.9750000000000775e-05, 5.991699999999961e-05, 5.980499999999958e-05, 5.9500000000000525e-05, 6.0471999999998916e-05, 5.968099999999893e-05, 5.993100000000265e-05, 6.0500000000001525e-05, 5.9805999999999054e-05, 5.962500000000065e-05, 5.966699999999936e-05, 5.961099999999761e-05, 5.966699999999936e-05, 5.993099999999918e-05, 6.008299999999897e-05, 6.0249999999997805e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.797" endtime="20201115 23:00:11.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.792" endtime="20201115 23:00:11.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.802" endtime="20201115 23:00:11.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.805" endtime="20201115 23:00:11.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.804" endtime="20201115 23:00:11.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.800" endtime="20201115 23:00:11.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.435" endtime="20201115 23:00:11.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.433" endtime="20201115 23:00:11.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.432" endtime="20201115 23:00:11.826"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.828" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.837" endtime="20201115 23:00:11.855"></status>
</kw>
<msg timestamp="20201115 23:00:11.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.835" endtime="20201115 23:00:11.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.856" endtime="20201115 23:00:11.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.859" endtime="20201115 23:00:11.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.832" endtime="20201115 23:00:11.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.830" endtime="20201115 23:00:11.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.868" endtime="20201115 23:00:12.153"></status>
</kw>
<msg timestamp="20201115 23:00:12.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02179525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:11.867" endtime="20201115 23:00:12.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02179525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:12.158" endtime="20201115 23:00:12.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.166" endtime="20201115 23:00:12.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.864" endtime="20201115 23:00:12.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.862" endtime="20201115 23:00:12.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.173" level="INFO">${RESULT} = [{'time': 0.02179525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.141699999999764e-05, 'source_diff': 6.141699999999764e-05}, {'time': 0.021873264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:12.169" endtime="20201115 23:00:12.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.186" level="INFO">${ACCURACY} = {'source_diff': [6.141699999999764e-05, 6.148599999999949e-05, 6.0735999999998735e-05, 6.08750000000019e-05, 6.0750000000001775e-05, 6.0985999999998985e-05, 6.094499999999975e-05, 6.0777999999997445e-...</msg>
<status status="PASS" starttime="20201115 23:00:12.174" endtime="20201115 23:00:12.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.191" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.190" endtime="20201115 23:00:12.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.193" level="INFO">VALUE: [6.141699999999764e-05, 6.148599999999949e-05, 6.0735999999998735e-05, 6.08750000000019e-05, 6.0750000000001775e-05, 6.0985999999998985e-05, 6.094499999999975e-05, 6.0777999999997445e-05, 6.0929999999997236e-05, 6.141599999999817e-05, 6.084699999999929e-05, 6.118000000000096e-05, 6.1000000000002025e-05, 6.0735999999998735e-05, 6.141600000000164e-05, 6.109699999999954e-05, 6.150000000000252e-05, 6.136099999999936e-05, 6.0694000000000026e-05, 6.149999999999906e-05, 6.091700000000061e-05, 6.106999999999987e-05, 6.132000000000012e-05, 6.129200000000098e-05, 6.068099999999993e-05, 6.106999999999987e-05, 6.1195e-05, 6.0598000000001984e-05, 6.076300000000187e-05, 6.0694000000000026e-05, 6.0930000000000706e-05, 6.134699999999979e-05, 6.0957999999999846e-05, 6.0999999999998555e-05, 6.142999999999774e-05, 6.0806000000000054e-05, 6.132000000000012e-05, 6.0792000000000485e-05, 6.0792000000000485e-05, 6.116700000000086e-05, 6.112499999999868e-05, 6.136099999999936e-05, 6.077699999999797e-05, 6.0721999999999166e-05, 6.059700000000251e-05, 6.12499999999988e-05, 6.061100000000208e-05, 6.055500000000033e-05, 6.090299999999757e-05, 6.119400000000053e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.192" endtime="20201115 23:00:12.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.187" endtime="20201115 23:00:12.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.197" endtime="20201115 23:00:12.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.200" endtime="20201115 23:00:12.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.198" endtime="20201115 23:00:12.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.195" endtime="20201115 23:00:12.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.829" endtime="20201115 23:00:12.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.827" endtime="20201115 23:00:12.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.826" endtime="20201115 23:00:12.221"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.223" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.231" endtime="20201115 23:00:12.250"></status>
</kw>
<msg timestamp="20201115 23:00:12.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.230" endtime="20201115 23:00:12.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.252" endtime="20201115 23:00:12.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.254" endtime="20201115 23:00:12.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.227" endtime="20201115 23:00:12.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.225" endtime="20201115 23:00:12.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.263" endtime="20201115 23:00:12.548"></status>
</kw>
<msg timestamp="20201115 23:00:12.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.262" endtime="20201115 23:00:12.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.552" endtime="20201115 23:00:12.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.561" endtime="20201115 23:00:12.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.259" endtime="20201115 23:00:12.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.257" endtime="20201115 23:00:12.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.567" level="INFO">${RESULT} = [{'time': 0.021785972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.234700000000079e-05, 'source_diff': 6.234700000000079e-05}, {'time': 0.021864, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:12.564" endtime="20201115 23:00:12.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.581" level="INFO">${ACCURACY} = {'source_diff': [6.234700000000079e-05, 6.237499999999993e-05, 6.254199999999877e-05, 6.154199999999777e-05, 6.197200000000042e-05, 6.244500000000125e-05, 6.204200000000173e-05, 6.161100000000308e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:12.568" endtime="20201115 23:00:12.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.585" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.584" endtime="20201115 23:00:12.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.588" level="INFO">VALUE: [6.234700000000079e-05, 6.237499999999993e-05, 6.254199999999877e-05, 6.154199999999777e-05, 6.197200000000042e-05, 6.244500000000125e-05, 6.204200000000173e-05, 6.161100000000308e-05, 6.243099999999821e-05, 6.215300000000229e-05, 6.22499999999998e-05, 6.209800000000001e-05, 6.180600000000105e-05, 6.187499999999943e-05, 6.173599999999974e-05, 6.17499999999993e-05, 6.166599999999842e-05, 6.163899999999875e-05, 6.177800000000191e-05, 6.236100000000036e-05, 6.205499999999836e-05, 6.173599999999974e-05, 6.223600000000024e-05, 6.212499999999968e-05, 6.158399999999994e-05, 6.17499999999993e-05, 6.229199999999852e-05, 6.158399999999994e-05, 6.15140000000021e-05, 6.184700000000029e-05, 6.241699999999864e-05, 6.202800000000216e-05, 6.190300000000204e-05, 6.166700000000136e-05, 6.180499999999811e-05, 6.236100000000036e-05, 6.162499999999918e-05, 6.151399999999863e-05, 6.186099999999986e-05, 6.234700000000079e-05, 6.19300000000017e-05, 6.182000000000062e-05, 6.209700000000054e-05, 6.244500000000125e-05, 6.172200000000017e-05, 6.193100000000118e-05, 6.22219999999972e-05, 6.172200000000017e-05, 6.193100000000118e-05, 6.166699999999789e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.587" endtime="20201115 23:00:12.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.582" endtime="20201115 23:00:12.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.591" endtime="20201115 23:00:12.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.595" endtime="20201115 23:00:12.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.593" endtime="20201115 23:00:12.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.589" endtime="20201115 23:00:12.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.224" endtime="20201115 23:00:12.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.222" endtime="20201115 23:00:12.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.221" endtime="20201115 23:00:12.616"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.618" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.626" endtime="20201115 23:00:12.645"></status>
</kw>
<msg timestamp="20201115 23:00:12.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.625" endtime="20201115 23:00:12.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.647" endtime="20201115 23:00:12.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.649" endtime="20201115 23:00:12.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.622" endtime="20201115 23:00:12.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.620" endtime="20201115 23:00:12.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.659" endtime="20201115 23:00:12.945"></status>
</kw>
<msg timestamp="20201115 23:00:12.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022682569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.657" endtime="20201115 23:00:12.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022682569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.949" endtime="20201115 23:00:12.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.957" endtime="20201115 23:00:12.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.654" endtime="20201115 23:00:12.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.653" endtime="20201115 23:00:12.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.964" level="INFO">${RESULT} = [{'time': 0.022682569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.313800000000078e-05, 'source_diff': 6.313800000000078e-05}, {'time': 0.022759569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:12.960" endtime="20201115 23:00:12.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.979" level="INFO">${ACCURACY} = {'source_diff': [6.313800000000078e-05, 6.312500000000068e-05, 6.252700000000319e-05, 6.329199999999952e-05, 6.334700000000179e-05, 6.266699999999889e-05, 6.279099999999954e-05, 6.254099999999929e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:12.965" endtime="20201115 23:00:12.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.983" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.982" endtime="20201115 23:00:12.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.986" level="INFO">VALUE: [6.313800000000078e-05, 6.312500000000068e-05, 6.252700000000319e-05, 6.329199999999952e-05, 6.334700000000179e-05, 6.266699999999889e-05, 6.279099999999954e-05, 6.254099999999929e-05, 6.276399999999988e-05, 6.336099999999789e-05, 6.3195000000002e-05, 6.266699999999889e-05, 6.311099999999764e-05, 6.284700000000129e-05, 6.286100000000086e-05, 6.334699999999832e-05, 6.268099999999846e-05, 6.257000000000137e-05, 6.268099999999846e-05, 6.266699999999889e-05, 6.27500000000003e-05, 6.281999999999816e-05, 6.34020000000006e-05, 6.341600000000017e-05, 6.32500000000008e-05, 6.345800000000235e-05, 6.312500000000068e-05, 6.265299999999932e-05, 6.254200000000223e-05, 6.33340000000017e-05, 6.259700000000104e-05, 6.268099999999846e-05, 6.312500000000068e-05, 6.347199999999845e-05, 6.284699999999782e-05, 6.27219999999977e-05, 6.334800000000126e-05, 6.280600000000205e-05, 6.348600000000149e-05, 6.259799999999704e-05, 6.267999999999899e-05, 6.261100000000061e-05, 6.272200000000117e-05, 6.305500000000283e-05, 6.27500000000003e-05, 6.30690000000024e-05, 6.280600000000205e-05, 6.258300000000147e-05, 6.320900000000157e-05, 6.25699999999979e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.984" endtime="20201115 23:00:12.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.980" endtime="20201115 23:00:12.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.989" endtime="20201115 23:00:12.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.992" endtime="20201115 23:00:13.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.991" endtime="20201115 23:00:13.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.987" endtime="20201115 23:00:13.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.619" endtime="20201115 23:00:13.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.617" endtime="20201115 23:00:13.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.616" endtime="20201115 23:00:13.013"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.016" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.024" endtime="20201115 23:00:13.043"></status>
</kw>
<msg timestamp="20201115 23:00:13.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.022" endtime="20201115 23:00:13.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.045" endtime="20201115 23:00:13.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.048" endtime="20201115 23:00:13.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.020" endtime="20201115 23:00:13.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.018" endtime="20201115 23:00:13.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.057" endtime="20201115 23:00:13.342"></status>
</kw>
<msg timestamp="20201115 23:00:13.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.056" endtime="20201115 23:00:13.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.346" endtime="20201115 23:00:13.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.355" endtime="20201115 23:00:13.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.053" endtime="20201115 23:00:13.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.052" endtime="20201115 23:00:13.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.361" level="INFO">${RESULT} = [{'time': 0.021974597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.437499999999846e-05, 'source_diff': 6.437499999999846e-05}, {'time': 0.022051625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:13.358" endtime="20201115 23:00:13.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.375" level="INFO">${ACCURACY} = {'source_diff': [6.437499999999846e-05, 6.365299999999685e-05, 6.398599999999852e-05, 6.379200000000002e-05, 6.451400000000163e-05, 6.412500000000168e-05, 6.427800000000095e-05, 6.369499999999903e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:13.362" endtime="20201115 23:00:13.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.379" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.378" endtime="20201115 23:00:13.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.382" level="INFO">VALUE: [6.437499999999846e-05, 6.365299999999685e-05, 6.398599999999852e-05, 6.379200000000002e-05, 6.451400000000163e-05, 6.412500000000168e-05, 6.427800000000095e-05, 6.369499999999903e-05, 6.380599999999959e-05, 6.436100000000236e-05, 6.372300000000164e-05, 6.374999999999784e-05, 6.393000000000024e-05, 6.418000000000049e-05, 6.362500000000118e-05, 6.384700000000229e-05, 6.359699999999857e-05, 6.443000000000074e-05, 6.397199999999895e-05, 6.409699999999907e-05, 6.432000000000312e-05, 6.418099999999996e-05, 6.437500000000193e-05, 6.434800000000226e-05, 6.36950000000025e-05, 6.42219999999992e-05, 6.40280000000007e-05, 6.443100000000021e-05, 6.361200000000108e-05, 6.365300000000032e-05, 6.398700000000146e-05, 6.448699999999849e-05, 6.40829999999995e-05, 6.398600000000199e-05, 6.374999999999784e-05, 6.423599999999877e-05, 6.44159999999977e-05, 6.367999999999999e-05, 6.392999999999677e-05, 6.418099999999996e-05, 6.393099999999971e-05, 6.384699999999882e-05, 6.399999999999809e-05, 6.398599999999852e-05, 6.369499999999903e-05, 6.42219999999992e-05, 6.418099999999996e-05, 6.409799999999855e-05, 6.436200000000183e-05, 6.445799999999988e-05]</msg>
<status status="PASS" starttime="20201115 23:00:13.380" endtime="20201115 23:00:13.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.376" endtime="20201115 23:00:13.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.385" endtime="20201115 23:00:13.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.388" endtime="20201115 23:00:13.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.387" endtime="20201115 23:00:13.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.383" endtime="20201115 23:00:13.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.016" endtime="20201115 23:00:13.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.014" endtime="20201115 23:00:13.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.014" endtime="20201115 23:00:13.409"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.412" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.420" endtime="20201115 23:00:13.440"></status>
</kw>
<msg timestamp="20201115 23:00:13.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.419" endtime="20201115 23:00:13.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.441" endtime="20201115 23:00:13.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.444" endtime="20201115 23:00:13.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.416" endtime="20201115 23:00:13.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.413" endtime="20201115 23:00:13.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.453" endtime="20201115 23:00:13.738"></status>
</kw>
<msg timestamp="20201115 23:00:13.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.451" endtime="20201115 23:00:13.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.742" endtime="20201115 23:00:13.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.751" endtime="20201115 23:00:13.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.449" endtime="20201115 23:00:13.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.447" endtime="20201115 23:00:13.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.757" level="INFO">${RESULT} = [{'time': 0.022511333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.530500000000161e-05, 'source_diff': 6.530500000000161e-05}, {'time': 0.022589319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:13.754" endtime="20201115 23:00:13.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.771" level="INFO">${ACCURACY} = {'source_diff': [6.530500000000161e-05, 6.499999999999909e-05, 6.511099999999964e-05, 6.469400000000056e-05, 6.515299999999835e-05, 6.54159999999987e-05, 6.504200000000127e-05, 6.516699999999792e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:13.758" endtime="20201115 23:00:13.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.775" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.774" endtime="20201115 23:00:13.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.778" level="INFO">VALUE: [6.530500000000161e-05, 6.499999999999909e-05, 6.511099999999964e-05, 6.469400000000056e-05, 6.515299999999835e-05, 6.54159999999987e-05, 6.504200000000127e-05, 6.516699999999792e-05, 6.49440000000008e-05, 6.493100000000071e-05, 6.459699999999957e-05, 6.551399999999916e-05, 6.50419999999978e-05, 6.531999999999719e-05, 6.487499999999896e-05, 6.495899999999985e-05, 6.524999999999934e-05, 6.483300000000025e-05, 6.506900000000093e-05, 6.547200000000045e-05, 6.524999999999934e-05, 6.506899999999746e-05, 6.480499999999764e-05, 6.548600000000002e-05, 6.492999999999777e-05, 6.483399999999973e-05, 6.499999999999909e-05, 6.530600000000109e-05, 6.536099999999989e-05, 6.479200000000102e-05, 6.487499999999896e-05, 6.544500000000078e-05, 6.505600000000084e-05, 6.54029999999986e-05, 6.462499999999871e-05, 6.466699999999742e-05, 6.551399999999916e-05, 6.52220000000002e-05, 6.529100000000204e-05, 6.462500000000218e-05, 6.486100000000286e-05, 6.520800000000063e-05, 6.454100000000129e-05, 6.461099999999914e-05, 6.527800000000195e-05, 6.490300000000157e-05, 6.468100000000046e-05, 6.466700000000089e-05, 6.474999999999884e-05, 6.497199999999995e-05]</msg>
<status status="PASS" starttime="20201115 23:00:13.776" endtime="20201115 23:00:13.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.772" endtime="20201115 23:00:13.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.781" endtime="20201115 23:00:13.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.784" endtime="20201115 23:00:13.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.783" endtime="20201115 23:00:13.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.779" endtime="20201115 23:00:13.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.412" endtime="20201115 23:00:13.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.410" endtime="20201115 23:00:13.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.410" endtime="20201115 23:00:13.806"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.808" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.816" endtime="20201115 23:00:13.835"></status>
</kw>
<msg timestamp="20201115 23:00:13.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.815" endtime="20201115 23:00:13.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.837" endtime="20201115 23:00:13.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.839" endtime="20201115 23:00:13.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.812" endtime="20201115 23:00:13.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.810" endtime="20201115 23:00:13.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.848" endtime="20201115 23:00:14.134"></status>
</kw>
<msg timestamp="20201115 23:00:14.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.847" endtime="20201115 23:00:14.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.138" endtime="20201115 23:00:14.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.146" endtime="20201115 23:00:14.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.844" endtime="20201115 23:00:14.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.842" endtime="20201115 23:00:14.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.153" level="INFO">${RESULT} = [{'time': 0.022320833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5889000000003e-05, 'source_diff': 6.5889000000003e-05}, {'time': 0.022399833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201115 23:00:14.150" endtime="20201115 23:00:14.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.166" level="INFO">${ACCURACY} = {'source_diff': [6.5889000000003e-05, 6.586100000000039e-05, 6.59440000000018e-05, 6.640200000000013e-05, 6.611100000000064e-05, 6.59029999999991e-05, 6.598599999999705e-05, 6.625000000000034e-05, 6.5...</msg>
<status status="PASS" starttime="20201115 23:00:14.154" endtime="20201115 23:00:14.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.171" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.170" endtime="20201115 23:00:14.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.173" level="INFO">VALUE: [6.5889000000003e-05, 6.586100000000039e-05, 6.59440000000018e-05, 6.640200000000013e-05, 6.611100000000064e-05, 6.59029999999991e-05, 6.598599999999705e-05, 6.625000000000034e-05, 6.584699999999735e-05, 6.591700000000214e-05, 6.55419999999983e-05, 6.57220000000007e-05, 6.640300000000307e-05, 6.616699999999892e-05, 6.64029999999996e-05, 6.620800000000163e-05, 6.619400000000206e-05, 6.622300000000067e-05, 6.591700000000214e-05, 6.545799999999741e-05, 6.636099999999742e-05, 6.552699999999925e-05, 6.611100000000064e-05, 6.588899999999953e-05, 6.584699999999735e-05, 6.598600000000052e-05, 6.636100000000089e-05, 6.591699999999867e-05, 6.648599999999755e-05, 6.630600000000209e-05, 6.643099999999874e-05, 6.62359999999973e-05, 6.616699999999892e-05, 6.611099999999717e-05, 6.576299999999993e-05, 6.579099999999907e-05, 6.569399999999809e-05, 6.645800000000188e-05, 6.623600000000077e-05, 6.584700000000082e-05, 6.587499999999996e-05, 6.584700000000082e-05, 6.588899999999953e-05, 6.598600000000052e-05, 6.593099999999824e-05, 6.641699999999917e-05, 6.569500000000103e-05, 6.573600000000027e-05, 6.559700000000057e-05, 6.64029999999996e-05]</msg>
<status status="PASS" starttime="20201115 23:00:14.172" endtime="20201115 23:00:14.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.167" endtime="20201115 23:00:14.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.177" endtime="20201115 23:00:14.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.180" endtime="20201115 23:00:14.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.179" endtime="20201115 23:00:14.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.175" endtime="20201115 23:00:14.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.809" endtime="20201115 23:00:14.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.807" endtime="20201115 23:00:14.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.806" endtime="20201115 23:00:14.201"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.204" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.212" endtime="20201115 23:00:14.232"></status>
</kw>
<msg timestamp="20201115 23:00:14.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.210" endtime="20201115 23:00:14.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.233" endtime="20201115 23:00:14.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.236" endtime="20201115 23:00:14.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.208" endtime="20201115 23:00:14.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.206" endtime="20201115 23:00:14.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.245" endtime="20201115 23:00:14.530"></status>
</kw>
<msg timestamp="20201115 23:00:14.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.243" endtime="20201115 23:00:14.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.534" endtime="20201115 23:00:14.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.543" endtime="20201115 23:00:14.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.241" endtime="20201115 23:00:14.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.239" endtime="20201115 23:00:14.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.549" level="INFO">${RESULT} = [{'time': 0.022698458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.750000000000159e-05, 'source_diff': 6.750000000000159e-05}, {'time': 0.022778486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:14.546" endtime="20201115 23:00:14.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.564" level="INFO">${ACCURACY} = {'source_diff': [6.750000000000159e-05, 6.720799999999916e-05, 6.69160000000002e-05, 6.684699999999835e-05, 6.744499999999931e-05, 6.679199999999955e-05, 6.723600000000177e-05, 6.680599999999912e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:14.550" endtime="20201115 23:00:14.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.568" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.567" endtime="20201115 23:00:14.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.571" level="INFO">VALUE: [6.750000000000159e-05, 6.720799999999916e-05, 6.69160000000002e-05, 6.684699999999835e-05, 6.744499999999931e-05, 6.679199999999955e-05, 6.723600000000177e-05, 6.680599999999912e-05, 6.734699999999885e-05, 6.694500000000228e-05, 6.697199999999848e-05, 6.701400000000066e-05, 6.684700000000182e-05, 6.669400000000256e-05, 6.666699999999942e-05, 6.700000000000109e-05, 6.741700000000017e-05, 6.730500000000014e-05, 6.748600000000202e-05, 6.655499999999939e-05, 6.737500000000146e-05, 6.734699999999885e-05, 6.670799999999866e-05, 6.720799999999916e-05, 6.65700000000019e-05, 6.693099999999924e-05, 6.699999999999762e-05, 6.748600000000202e-05, 6.713899999999731e-05, 6.72229999999982e-05, 6.674999999999737e-05, 6.655599999999887e-05, 6.698699999999752e-05, 6.743100000000321e-05, 6.680499999999964e-05, 6.662500000000071e-05, 6.723600000000177e-05, 6.659700000000157e-05, 6.654099999999982e-05, 6.750000000000159e-05, 6.711099999999817e-05, 6.729200000000005e-05, 6.701400000000066e-05, 6.743099999999974e-05, 6.652799999999973e-05, 6.732000000000266e-05, 6.755500000000039e-05, 6.67770000000005e-05, 6.659800000000105e-05, 6.687499999999749e-05]</msg>
<status status="PASS" starttime="20201115 23:00:14.569" endtime="20201115 23:00:14.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.565" endtime="20201115 23:00:14.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.575" endtime="20201115 23:00:14.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.578" endtime="20201115 23:00:14.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.576" endtime="20201115 23:00:14.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.573" endtime="20201115 23:00:14.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.204" endtime="20201115 23:00:14.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.203" endtime="20201115 23:00:14.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.202" endtime="20201115 23:00:14.599"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.601" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.609" endtime="20201115 23:00:14.628"></status>
</kw>
<msg timestamp="20201115 23:00:14.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.608" endtime="20201115 23:00:14.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.630" endtime="20201115 23:00:14.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.632" endtime="20201115 23:00:14.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.605" endtime="20201115 23:00:14.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.603" endtime="20201115 23:00:14.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.641" endtime="20201115 23:00:14.925"></status>
</kw>
<msg timestamp="20201115 23:00:14.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.640" endtime="20201115 23:00:14.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.930" endtime="20201115 23:00:14.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.938" endtime="20201115 23:00:14.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.637" endtime="20201115 23:00:14.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.635" endtime="20201115 23:00:14.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.944" level="INFO">${RESULT} = [{'time': 0.021854653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.812500000000221e-05, 'source_diff': 6.812500000000221e-05}, {'time': 0.021935681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:14.941" endtime="20201115 23:00:14.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.958" level="INFO">${ACCURACY} = {'source_diff': [6.812500000000221e-05, 6.770899999999913e-05, 6.809800000000255e-05, 6.851400000000216e-05, 6.806900000000046e-05, 6.793000000000077e-05, 6.75420000000003e-05, 6.786100000000239e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:14.946" endtime="20201115 23:00:14.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.963" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.962" endtime="20201115 23:00:14.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.965" level="INFO">VALUE: [6.812500000000221e-05, 6.770899999999913e-05, 6.809800000000255e-05, 6.851400000000216e-05, 6.806900000000046e-05, 6.793000000000077e-05, 6.75420000000003e-05, 6.786100000000239e-05, 6.824999999999887e-05, 6.775000000000184e-05, 6.804199999999733e-05, 6.79160000000012e-05, 6.838899999999856e-05, 6.848599999999955e-05, 6.850000000000259e-05, 6.774999999999837e-05, 6.804199999999733e-05, 6.827800000000148e-05, 6.769500000000303e-05, 6.84169999999977e-05, 6.848599999999955e-05, 6.832000000000019e-05, 6.774999999999837e-05, 6.77229999999987e-05, 6.768000000000052e-05, 6.805499999999742e-05, 6.805499999999742e-05, 6.79299999999973e-05, 6.799999999999862e-05, 6.791599999999773e-05, 6.786100000000239e-05, 6.769499999999956e-05, 6.830600000000062e-05, 6.772199999999923e-05, 6.784699999999935e-05, 6.849999999999912e-05, 6.788899999999806e-05, 6.805600000000037e-05, 6.824999999999887e-05, 6.799999999999862e-05, 6.837499999999899e-05, 6.767999999999705e-05, 6.85420000000013e-05, 6.801400000000166e-05, 6.756899999999996e-05, 6.818000000000102e-05, 6.795799999999991e-05, 6.823600000000277e-05, 6.827799999999801e-05, 6.772199999999923e-05]</msg>
<status status="PASS" starttime="20201115 23:00:14.964" endtime="20201115 23:00:14.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.959" endtime="20201115 23:00:14.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.968" endtime="20201115 23:00:14.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.972" endtime="20201115 23:00:14.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.970" endtime="20201115 23:00:14.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.967" endtime="20201115 23:00:14.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.602" endtime="20201115 23:00:14.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.600" endtime="20201115 23:00:14.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.599" endtime="20201115 23:00:14.994"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.996" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.005" endtime="20201115 23:00:15.023"></status>
</kw>
<msg timestamp="20201115 23:00:15.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.003" endtime="20201115 23:00:15.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.025" endtime="20201115 23:00:15.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.027" endtime="20201115 23:00:15.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.000" endtime="20201115 23:00:15.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.998" endtime="20201115 23:00:15.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.037" endtime="20201115 23:00:15.322"></status>
</kw>
<msg timestamp="20201115 23:00:15.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.035" endtime="20201115 23:00:15.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.326" endtime="20201115 23:00:15.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.339" endtime="20201115 23:00:15.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.033" endtime="20201115 23:00:15.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.031" endtime="20201115 23:00:15.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.346" level="INFO">${RESULT} = [{'time': 0.022828347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.863899999999881e-05, 'source_diff': 6.863899999999881e-05}, {'time': 0.022912347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.343" endtime="20201115 23:00:15.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.359" level="INFO">${ACCURACY} = {'source_diff': [6.863899999999881e-05, 6.92360000000003e-05, 6.934700000000085e-05, 6.919499999999759e-05, 6.893099999999777e-05, 6.944399999999837e-05, 6.952800000000273e-05, 6.918099999999802e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:15.347" endtime="20201115 23:00:15.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.364" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.363" endtime="20201115 23:00:15.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.366" level="INFO">VALUE: [6.863899999999881e-05, 6.92360000000003e-05, 6.934700000000085e-05, 6.919499999999759e-05, 6.893099999999777e-05, 6.944399999999837e-05, 6.952800000000273e-05, 6.918099999999802e-05, 6.863899999999881e-05, 6.933299999999781e-05, 6.886099999999992e-05, 6.916699999999845e-05, 6.855500000000139e-05, 6.924999999999987e-05, 6.87640000000024e-05, 6.913899999999931e-05, 6.926399999999944e-05, 6.907000000000094e-05, 6.855499999999792e-05, 6.950000000000012e-05, 6.85420000000013e-05, 6.912500000000321e-05, 6.922200000000073e-05, 6.858300000000053e-05, 6.867999999999805e-05, 6.920900000000063e-05, 6.87359999999998e-05, 6.849999999999912e-05, 6.923699999999977e-05, 6.897199999999701e-05, 6.880500000000164e-05, 6.898600000000005e-05, 6.936100000000042e-05, 6.90840000000005e-05, 6.911100000000017e-05, 6.945800000000141e-05, 6.887499999999949e-05, 6.862499999999924e-05, 6.87229999999997e-05, 6.877799999999851e-05, 6.868099999999752e-05, 6.891700000000167e-05, 6.863899999999881e-05, 6.948600000000055e-05, 6.919399999999812e-05, 6.886099999999992e-05, 6.951300000000021e-05, 6.869400000000109e-05, 6.89299999999983e-05, 6.934700000000085e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.365" endtime="20201115 23:00:15.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.360" endtime="20201115 23:00:15.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.369" endtime="20201115 23:00:15.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.373" endtime="20201115 23:00:15.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.371" endtime="20201115 23:00:15.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.368" endtime="20201115 23:00:15.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.997" endtime="20201115 23:00:15.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.995" endtime="20201115 23:00:15.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.994" endtime="20201115 23:00:15.394"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.397" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.405" endtime="20201115 23:00:15.424"></status>
</kw>
<msg timestamp="20201115 23:00:15.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.403" endtime="20201115 23:00:15.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.425" endtime="20201115 23:00:15.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.428" endtime="20201115 23:00:15.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.401" endtime="20201115 23:00:15.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.399" endtime="20201115 23:00:15.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.437" endtime="20201115 23:00:15.722"></status>
</kw>
<msg timestamp="20201115 23:00:15.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.435" endtime="20201115 23:00:15.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.726" endtime="20201115 23:00:15.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.734" endtime="20201115 23:00:15.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.433" endtime="20201115 23:00:15.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.431" endtime="20201115 23:00:15.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.741" level="INFO">${RESULT} = [{'time': 0.022091653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.983399999999779e-05, 'source_diff': 6.983399999999779e-05}, {'time': 0.022174667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.738" endtime="20201115 23:00:15.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.754" level="INFO">${ACCURACY} = {'source_diff': [6.983399999999779e-05, 6.958399999999754e-05, 6.994500000000181e-05, 7.030600000000262e-05, 7.000000000000062e-05, 7.016599999999998e-05, 6.984800000000083e-05, 7.051400000000069e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:15.742" endtime="20201115 23:00:15.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.759" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.758" endtime="20201115 23:00:15.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.761" level="INFO">VALUE: [6.983399999999779e-05, 6.958399999999754e-05, 6.994500000000181e-05, 7.030600000000262e-05, 7.000000000000062e-05, 7.016599999999998e-05, 6.984800000000083e-05, 7.051400000000069e-05, 7.00970000000016e-05, 7.020799999999869e-05, 6.987500000000049e-05, 6.997200000000148e-05, 7.027700000000053e-05, 6.975000000000037e-05, 7.026400000000044e-05, 7.047200000000198e-05, 7.045799999999894e-05, 7.019500000000206e-05, 7.018100000000249e-05, 7.004199999999933e-05, 7.018099999999902e-05, 6.979199999999908e-05, 7.040300000000013e-05, 6.97230000000007e-05, 6.952800000000273e-05, 7.037499999999752e-05, 6.980499999999917e-05, 6.966599999999948e-05, 7.030499999999967e-05, 7.018099999999902e-05, 7.02360000000013e-05, 7.02360000000013e-05, 6.963899999999981e-05, 7.04169999999997e-05, 6.987500000000049e-05, 6.952799999999926e-05, 7.00420000000028e-05, 6.956999999999797e-05, 7.00559999999989e-05, 7.050000000000112e-05, 6.962500000000024e-05, 6.97230000000007e-05, 7.008399999999804e-05, 7.036100000000142e-05, 7.04299999999998e-05, 6.997200000000148e-05, 6.955499999999892e-05, 7.016699999999945e-05, 6.998600000000105e-05, 6.979199999999908e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.760" endtime="20201115 23:00:15.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.755" endtime="20201115 23:00:15.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.764" endtime="20201115 23:00:15.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.768" endtime="20201115 23:00:15.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.766" endtime="20201115 23:00:15.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.763" endtime="20201115 23:00:15.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.397" endtime="20201115 23:00:15.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.395" endtime="20201115 23:00:15.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.395" endtime="20201115 23:00:15.789"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.791" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.799" endtime="20201115 23:00:15.820"></status>
</kw>
<msg timestamp="20201115 23:00:15.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.798" endtime="20201115 23:00:15.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.822" endtime="20201115 23:00:15.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.825" endtime="20201115 23:00:15.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.795" endtime="20201115 23:00:15.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.793" endtime="20201115 23:00:15.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.834" endtime="20201115 23:00:16.119"></status>
</kw>
<msg timestamp="20201115 23:00:16.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.832" endtime="20201115 23:00:16.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.123" endtime="20201115 23:00:16.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.131" endtime="20201115 23:00:16.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.830" endtime="20201115 23:00:16.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.828" endtime="20201115 23:00:16.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.138" level="INFO">${RESULT} = [{'time': 0.022668556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.054199999999983e-05, 'source_diff': 7.054199999999983e-05}, {'time': 0.022755569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:16.135" endtime="20201115 23:00:16.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.153" level="INFO">${ACCURACY} = {'source_diff': [7.054199999999983e-05, 7.069399999999962e-05, 7.097200000000248e-05, 7.131900000000024e-05, 7.09300000000003e-05, 7.136099999999895e-05, 7.06109999999982e-05, 7.113899999999784e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:00:16.139" endtime="20201115 23:00:16.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.157" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.156" endtime="20201115 23:00:16.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.160" level="INFO">VALUE: [7.054199999999983e-05, 7.069399999999962e-05, 7.097200000000248e-05, 7.131900000000024e-05, 7.09300000000003e-05, 7.136099999999895e-05, 7.06109999999982e-05, 7.113899999999784e-05, 7.126400000000144e-05, 7.081899999999974e-05, 7.070899999999866e-05, 7.080599999999965e-05, 7.075000000000137e-05, 7.149999999999865e-05, 7.151399999999822e-05, 7.111199999999818e-05, 7.07230000000017e-05, 7.062500000000124e-05, 7.104200000000033e-05, 7.062499999999777e-05, 7.104100000000085e-05, 7.108300000000303e-05, 7.087500000000149e-05, 7.101399999999772e-05, 7.14170000000007e-05, 7.129200000000058e-05, 7.13620000000019e-05, 7.052800000000026e-05, 7.072199999999876e-05, 7.07360000000018e-05, 7.093099999999977e-05, 7.127799999999754e-05, 7.151400000000169e-05, 7.112499999999827e-05, 7.119499999999959e-05, 7.130500000000067e-05, 7.1069e-05, 7.141599999999776e-05, 7.14439999999969e-05, 7.055499999999992e-05, 7.1069e-05, 7.070799999999919e-05, 7.069499999999909e-05, 7.14170000000007e-05, 7.097199999999901e-05, 7.108300000000303e-05, 7.143100000000027e-05, 7.079200000000008e-05, 7.093099999999977e-05, 7.079200000000008e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.158" endtime="20201115 23:00:16.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.154" endtime="20201115 23:00:16.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.163" endtime="20201115 23:00:16.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.166" endtime="20201115 23:00:16.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.164" endtime="20201115 23:00:16.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.161" endtime="20201115 23:00:16.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.792" endtime="20201115 23:00:16.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.790" endtime="20201115 23:00:16.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.789" endtime="20201115 23:00:16.187"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.189" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.198" endtime="20201115 23:00:16.218"></status>
</kw>
<msg timestamp="20201115 23:00:16.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.197" endtime="20201115 23:00:16.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.220" endtime="20201115 23:00:16.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.222" endtime="20201115 23:00:16.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.194" endtime="20201115 23:00:16.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.191" endtime="20201115 23:00:16.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.231" endtime="20201115 23:00:16.517"></status>
</kw>
<msg timestamp="20201115 23:00:16.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.230" endtime="20201115 23:00:16.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.521" endtime="20201115 23:00:16.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.530" endtime="20201115 23:00:16.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.227" endtime="20201115 23:00:16.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.225" endtime="20201115 23:00:16.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.536" level="INFO">${RESULT} = [{'time': 0.022344792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.177799999999804e-05, 'source_diff': 7.177799999999804e-05}, {'time': 0.02243275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:16.533" endtime="20201115 23:00:16.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.550" level="INFO">${ACCURACY} = {'source_diff': [7.177799999999804e-05, 7.193100000000077e-05, 7.248600000000008e-05, 7.193100000000077e-05, 7.21109999999997e-05, 7.16109999999992e-05, 7.204100000000185e-05, 7.165299999999791e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:00:16.537" endtime="20201115 23:00:16.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.554" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.553" endtime="20201115 23:00:16.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.557" level="INFO">VALUE: [7.177799999999804e-05, 7.193100000000077e-05, 7.248600000000008e-05, 7.193100000000077e-05, 7.21109999999997e-05, 7.16109999999992e-05, 7.204100000000185e-05, 7.165299999999791e-05, 7.176399999999847e-05, 7.209799999999961e-05, 7.236199999999943e-05, 7.216700000000145e-05, 7.217999999999808e-05, 7.175000000000237e-05, 7.247199999999704e-05, 7.237499999999952e-05, 7.22499999999994e-05, 7.24439999999979e-05, 7.23049999999982e-05, 7.212499999999927e-05, 7.193100000000077e-05, 7.191699999999773e-05, 7.180500000000117e-05, 7.16109999999992e-05, 7.17499999999989e-05, 7.21109999999997e-05, 7.190199999999869e-05, 7.24170000000017e-05, 7.237499999999952e-05, 7.237499999999952e-05, 7.191600000000173e-05, 7.217999999999808e-05, 7.204100000000185e-05, 7.162499999999877e-05, 7.169400000000062e-05, 7.237499999999952e-05, 7.197200000000001e-05, 7.218099999999755e-05, 7.236099999999995e-05, 7.194500000000034e-05, 7.202799999999829e-05, 7.169400000000062e-05, 7.17360000000028e-05, 7.205500000000142e-05, 7.212499999999927e-05, 7.21109999999997e-05, 7.201399999999872e-05, 7.156899999999702e-05, 7.198600000000305e-05, 7.23049999999982e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.555" endtime="20201115 23:00:16.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.551" endtime="20201115 23:00:16.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.560" endtime="20201115 23:00:16.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.563" endtime="20201115 23:00:16.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.562" endtime="20201115 23:00:16.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.558" endtime="20201115 23:00:16.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.190" endtime="20201115 23:00:16.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.188" endtime="20201115 23:00:16.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.187" endtime="20201115 23:00:16.585"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.595" endtime="20201115 23:00:16.615"></status>
</kw>
<msg timestamp="20201115 23:00:16.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.594" endtime="20201115 23:00:16.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.616" endtime="20201115 23:00:16.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.619" endtime="20201115 23:00:16.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.591" endtime="20201115 23:00:16.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.589" endtime="20201115 23:00:16.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.628" endtime="20201115 23:00:16.913"></status>
</kw>
<msg timestamp="20201115 23:00:16.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022319389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.626" endtime="20201115 23:00:16.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022319389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.917" endtime="20201115 23:00:16.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.926" endtime="20201115 23:00:16.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.623" endtime="20201115 23:00:16.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.622" endtime="20201115 23:00:16.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.932" level="INFO">${RESULT} = [{'time': 0.022319389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.347199999999804e-05, 'source_diff': 7.347199999999804e-05}, {'time': 0.022407403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:16.929" endtime="20201115 23:00:16.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.946" level="INFO">${ACCURACY} = {'source_diff': [7.347199999999804e-05, 7.276399999999947e-05, 7.279199999999861e-05, 7.26110000000002e-05, 7.343100000000227e-05, 7.306899999999852e-05, 7.33049999999992e-05, 7.336099999999748e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:00:16.933" endtime="20201115 23:00:16.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.950" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.949" endtime="20201115 23:00:16.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.953" level="INFO">VALUE: [7.347199999999804e-05, 7.276399999999947e-05, 7.279199999999861e-05, 7.26110000000002e-05, 7.343100000000227e-05, 7.306899999999852e-05, 7.33049999999992e-05, 7.336099999999748e-05, 7.294400000000187e-05, 7.270800000000119e-05, 7.27910000000026e-05, 7.319399999999865e-05, 7.336100000000095e-05, 7.300000000000015e-05, 7.337499999999705e-05, 7.300000000000015e-05, 7.265299999999891e-05, 7.26110000000002e-05, 7.312500000000027e-05, 7.282000000000122e-05, 7.330600000000215e-05, 7.251399999999922e-05, 7.273600000000033e-05, 7.266699999999848e-05, 7.298600000000058e-05, 7.312500000000027e-05, 7.316599999999951e-05, 7.326399999999997e-05, 7.334700000000138e-05, 7.26110000000002e-05, 7.34439999999989e-05, 7.312500000000027e-05, 7.315299999999941e-05, 7.293100000000177e-05, 7.259700000000063e-05, 7.287500000000002e-05, 7.350000000000065e-05, 7.336100000000095e-05, 7.257000000000097e-05, 7.34309999999988e-05, 7.277799999999904e-05, 7.288800000000012e-05, 7.317999999999908e-05, 7.348600000000108e-05, 7.273600000000033e-05, 7.318099999999855e-05, 7.330600000000215e-05, 7.305599999999843e-05, 7.312500000000027e-05, 7.319400000000212e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.951" endtime="20201115 23:00:16.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.947" endtime="20201115 23:00:16.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.956" endtime="20201115 23:00:16.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.960" endtime="20201115 23:00:16.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.958" endtime="20201115 23:00:16.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.955" endtime="20201115 23:00:16.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.588" endtime="20201115 23:00:16.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.586" endtime="20201115 23:00:16.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.585" endtime="20201115 23:00:16.981"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.983" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.991" endtime="20201115 23:00:17.011"></status>
</kw>
<msg timestamp="20201115 23:00:17.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.990" endtime="20201115 23:00:17.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.013" endtime="20201115 23:00:17.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.015" endtime="20201115 23:00:17.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.987" endtime="20201115 23:00:17.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.985" endtime="20201115 23:00:17.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.024" endtime="20201115 23:00:17.310"></status>
</kw>
<msg timestamp="20201115 23:00:17.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:17.023" endtime="20201115 23:00:17.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:17.314" endtime="20201115 23:00:17.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.322" endtime="20201115 23:00:17.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.020" endtime="20201115 23:00:17.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.018" endtime="20201115 23:00:17.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.329" level="INFO">${RESULT} = [{'time': 0.0220485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.416699999999998e-05, 'source_diff': 7.416699999999998e-05}, {'time': 0.022137514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:17.325" endtime="20201115 23:00:17.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.342" level="INFO">${ACCURACY} = {'source_diff': [7.416699999999998e-05, 7.445799999999947e-05, 7.397199999999854e-05, 7.39309999999993e-05, 7.366699999999948e-05, 7.369499999999862e-05, 7.373600000000133e-05, 7.380599999999918e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:17.330" endtime="20201115 23:00:17.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.346" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.345" endtime="20201115 23:00:17.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.349" level="INFO">VALUE: [7.416699999999998e-05, 7.445799999999947e-05, 7.397199999999854e-05, 7.39309999999993e-05, 7.366699999999948e-05, 7.369499999999862e-05, 7.373600000000133e-05, 7.380599999999918e-05, 7.398700000000105e-05, 7.399999999999768e-05, 7.441699999999676e-05, 7.400000000000115e-05, 7.423600000000183e-05, 7.386100000000145e-05, 7.356899999999902e-05, 7.437499999999805e-05, 7.436099999999848e-05, 7.355599999999893e-05, 7.380599999999918e-05, 7.379199999999961e-05, 7.398600000000158e-05, 7.420899999999869e-05, 7.441700000000023e-05, 7.361099999999773e-05, 7.419499999999912e-05, 7.37370000000008e-05, 7.419399999999965e-05, 7.361099999999773e-05, 7.352700000000031e-05, 7.455599999999993e-05, 7.363900000000034e-05, 7.398599999999811e-05, 7.367999999999958e-05, 7.412500000000127e-05, 7.401399999999725e-05, 7.354200000000283e-05, 7.412500000000127e-05, 7.373599999999786e-05, 7.397299999999801e-05, 7.436100000000195e-05, 7.42500000000014e-05, 7.368099999999905e-05, 7.401400000000072e-05, 7.447199999999904e-05, 7.44439999999999e-05, 7.448600000000208e-05, 7.391600000000026e-05, 7.450000000000165e-05, 7.386100000000145e-05, 7.404199999999986e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.348" endtime="20201115 23:00:17.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.343" endtime="20201115 23:00:17.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.353" endtime="20201115 23:00:17.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.356" endtime="20201115 23:00:17.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.354" endtime="20201115 23:00:17.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.351" endtime="20201115 23:00:17.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.984" endtime="20201115 23:00:17.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.982" endtime="20201115 23:00:17.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.981" endtime="20201115 23:00:17.377"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.379" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.388" endtime="20201115 23:00:17.407"></status>
</kw>
<msg timestamp="20201115 23:00:17.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.386" endtime="20201115 23:00:17.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.409" endtime="20201115 23:00:17.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.412" endtime="20201115 23:00:17.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.383" endtime="20201115 23:00:17.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.381" endtime="20201115 23:00:17.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.420" endtime="20201115 23:00:17.706"></status>
</kw>
<msg timestamp="20201115 23:00:17.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022868139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.419" endtime="20201115 23:00:17.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022868139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.710" endtime="20201115 23:00:17.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.718" endtime="20201115 23:00:17.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.416" endtime="20201115 23:00:17.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.415" endtime="20201115 23:00:17.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.725" level="INFO">${RESULT} = [{'time': 0.022868139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.523599999999936e-05, 'source_diff': 7.523599999999936e-05}, {'time': 0.022957167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:17.722" endtime="20201115 23:00:17.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.740" level="INFO">${ACCURACY} = {'source_diff': [7.523599999999936e-05, 7.505600000000043e-05, 7.536100000000295e-05, 7.474999999999843e-05, 7.544500000000037e-05, 7.459799999999864e-05, 7.531900000000077e-05, 7.45699999999995e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:17.726" endtime="20201115 23:00:17.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.745" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.744" endtime="20201115 23:00:17.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.747" level="INFO">VALUE: [7.523599999999936e-05, 7.505600000000043e-05, 7.536100000000295e-05, 7.474999999999843e-05, 7.544500000000037e-05, 7.459799999999864e-05, 7.531900000000077e-05, 7.45699999999995e-05, 7.502800000000129e-05, 7.474999999999843e-05, 7.53050000000012e-05, 7.495799999999997e-05, 7.49029999999977e-05, 7.55700000000005e-05, 7.49310000000003e-05, 7.481999999999975e-05, 7.454199999999689e-05, 7.498599999999911e-05, 7.541699999999776e-05, 7.46249999999983e-05, 7.486199999999846e-05, 7.45699999999995e-05, 7.519400000000065e-05, 7.548599999999961e-05, 7.456900000000002e-05, 7.493000000000083e-05, 7.522199999999979e-05, 7.488899999999812e-05, 7.488899999999812e-05, 7.47500000000019e-05, 7.461099999999873e-05, 7.513899999999837e-05, 7.466699999999701e-05, 7.51249999999988e-05, 7.49310000000003e-05, 7.480600000000018e-05, 7.502800000000129e-05, 7.466700000000048e-05, 7.518000000000108e-05, 7.551399999999875e-05, 7.550000000000265e-05, 7.497199999999954e-05, 7.455500000000045e-05, 7.46110000000022e-05, 7.527799999999807e-05, 7.483299999999984e-05, 7.529200000000111e-05, 7.519500000000012e-05, 7.523599999999936e-05, 7.466700000000048e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.746" endtime="20201115 23:00:17.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.741" endtime="20201115 23:00:17.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.750" endtime="20201115 23:00:17.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.754" endtime="20201115 23:00:17.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.752" endtime="20201115 23:00:17.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.748" endtime="20201115 23:00:17.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.380" endtime="20201115 23:00:17.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.378" endtime="20201115 23:00:17.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.377" endtime="20201115 23:00:17.775"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.777" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.785" endtime="20201115 23:00:17.805"></status>
</kw>
<msg timestamp="20201115 23:00:17.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.784" endtime="20201115 23:00:17.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.807" endtime="20201115 23:00:17.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.809" endtime="20201115 23:00:17.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.781" endtime="20201115 23:00:17.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.779" endtime="20201115 23:00:17.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.818" endtime="20201115 23:00:18.103"></status>
</kw>
<msg timestamp="20201115 23:00:18.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.817" endtime="20201115 23:00:18.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.108" endtime="20201115 23:00:18.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.117" endtime="20201115 23:00:18.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.814" endtime="20201115 23:00:18.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.812" endtime="20201115 23:00:18.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.124" level="INFO">${RESULT} = [{'time': 0.021956847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.565300000000191e-05, 'source_diff': 7.565300000000191e-05}, {'time': 0.022048847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:18.120" endtime="20201115 23:00:18.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.137" level="INFO">${ACCURACY} = {'source_diff': [7.565300000000191e-05, 7.617999999999861e-05, 7.552799999999832e-05, 7.574999999999943e-05, 7.552799999999832e-05, 7.637500000000005e-05, 7.64029999999992e-05, 7.586099999999998e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:18.125" endtime="20201115 23:00:18.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.142" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.141" endtime="20201115 23:00:18.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.144" level="INFO">VALUE: [7.565300000000191e-05, 7.617999999999861e-05, 7.552799999999832e-05, 7.574999999999943e-05, 7.552799999999832e-05, 7.637500000000005e-05, 7.64029999999992e-05, 7.586099999999998e-05, 7.579199999999814e-05, 7.637500000000005e-05, 7.555599999999746e-05, 7.599999999999968e-05, 7.555600000000093e-05, 7.599999999999968e-05, 7.584800000000336e-05, 7.561099999999973e-05, 7.637500000000005e-05, 7.605499999999848e-05, 7.617999999999861e-05, 7.565300000000191e-05, 7.634700000000091e-05, 7.591700000000173e-05, 7.618099999999808e-05, 7.627799999999907e-05, 7.587499999999955e-05, 7.643099999999833e-05, 7.576400000000247e-05, 7.55830000000006e-05, 7.651399999999975e-05, 7.626300000000003e-05, 7.64440000000019e-05, 7.640199999999972e-05, 7.567999999999811e-05, 7.618000000000208e-05, 7.630600000000168e-05, 7.591600000000226e-05, 7.599999999999968e-05, 7.595900000000044e-05, 7.648600000000061e-05, 7.609700000000066e-05, 7.618099999999808e-05, 7.634700000000091e-05, 7.630599999999821e-05, 7.59310000000013e-05, 7.558299999999712e-05, 7.584700000000041e-05, 7.586099999999998e-05, 7.577800000000204e-05, 7.617999999999861e-05, 7.59440000000014e-05]</msg>
<status status="PASS" starttime="20201115 23:00:18.143" endtime="20201115 23:00:18.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.138" endtime="20201115 23:00:18.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.147" endtime="20201115 23:00:18.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.151" endtime="20201115 23:00:18.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.149" endtime="20201115 23:00:18.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.146" endtime="20201115 23:00:18.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.778" endtime="20201115 23:00:18.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.776" endtime="20201115 23:00:18.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.775" endtime="20201115 23:00:18.172"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.174" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.183" endtime="20201115 23:00:18.202"></status>
</kw>
<msg timestamp="20201115 23:00:18.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.181" endtime="20201115 23:00:18.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.203" endtime="20201115 23:00:18.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.206" endtime="20201115 23:00:18.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.178" endtime="20201115 23:00:18.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.176" endtime="20201115 23:00:18.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.215" endtime="20201115 23:00:18.499"></status>
</kw>
<msg timestamp="20201115 23:00:18.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.213" endtime="20201115 23:00:18.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.504" endtime="20201115 23:00:18.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.512" endtime="20201115 23:00:18.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.211" endtime="20201115 23:00:18.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.209" endtime="20201115 23:00:18.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.519" level="INFO">${RESULT} = [{'time': 0.022006264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.704199999999939e-05, 'source_diff': 7.704199999999939e-05}, {'time': 0.022097306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:18.515" endtime="20201115 23:00:18.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.532" level="INFO">${ACCURACY} = {'source_diff': [7.704199999999939e-05, 7.716699999999951e-05, 7.65700000000015e-05, 7.698600000000111e-05, 7.738899999999715e-05, 7.711099999999776e-05, 7.719399999999918e-05, 7.675000000000043e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:18.520" endtime="20201115 23:00:18.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.537" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.536" endtime="20201115 23:00:18.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.539" level="INFO">VALUE: [7.704199999999939e-05, 7.716699999999951e-05, 7.65700000000015e-05, 7.698600000000111e-05, 7.738899999999715e-05, 7.711099999999776e-05, 7.719399999999918e-05, 7.675000000000043e-05, 7.72770000000006e-05, 7.69440000000024e-05, 7.698600000000111e-05, 7.706900000000252e-05, 7.752800000000032e-05, 7.69449999999984e-05, 7.693099999999883e-05, 7.669500000000162e-05, 7.737500000000105e-05, 7.719499999999865e-05, 7.656999999999803e-05, 7.665199999999997e-05, 7.668099999999858e-05, 7.654100000000288e-05, 7.69029999999997e-05, 7.6764e-05, 7.72640000000005e-05, 7.687500000000055e-05, 7.692999999999936e-05, 7.701400000000025e-05, 7.715299999999994e-05, 7.688900000000012e-05, 7.672199999999782e-05, 7.669499999999815e-05, 7.732000000000225e-05, 7.711100000000123e-05, 7.654200000000236e-05, 7.750000000000118e-05, 7.679199999999914e-05, 7.720799999999875e-05, 7.716600000000004e-05, 7.725000000000093e-05, 7.679099999999967e-05, 7.694399999999893e-05, 7.748599999999814e-05, 7.679199999999914e-05, 7.656900000000202e-05, 7.738899999999715e-05, 7.741699999999976e-05, 7.725000000000093e-05, 7.66250000000003e-05, 7.66250000000003e-05]</msg>
<status status="PASS" starttime="20201115 23:00:18.538" endtime="20201115 23:00:18.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.533" endtime="20201115 23:00:18.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.542" endtime="20201115 23:00:18.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.546" endtime="20201115 23:00:18.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.544" endtime="20201115 23:00:18.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.541" endtime="20201115 23:00:18.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.175" endtime="20201115 23:00:18.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.173" endtime="20201115 23:00:18.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.172" endtime="20201115 23:00:18.567"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.569" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.577" endtime="20201115 23:00:18.597"></status>
</kw>
<msg timestamp="20201115 23:00:18.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.576" endtime="20201115 23:00:18.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.599" endtime="20201115 23:00:18.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.602" endtime="20201115 23:00:18.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.573" endtime="20201115 23:00:18.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.571" endtime="20201115 23:00:18.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.611" endtime="20201115 23:00:18.896"></status>
</kw>
<msg timestamp="20201115 23:00:18.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.609" endtime="20201115 23:00:18.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.900" endtime="20201115 23:00:18.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.908" endtime="20201115 23:00:18.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.606" endtime="20201115 23:00:18.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.605" endtime="20201115 23:00:18.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.915" level="INFO">${RESULT} = [{'time': 0.021929194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777699999999763e-05, 'source_diff': 7.777699999999763e-05}, {'time': 0.022023194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:18.912" endtime="20201115 23:00:18.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.928" level="INFO">${ACCURACY} = {'source_diff': [7.777699999999763e-05, 7.756899999999955e-05, 7.818000000000061e-05, 7.794399999999993e-05, 7.783299999999937e-05, 7.763900000000087e-05, 7.793000000000036e-05, 7.838900000000162e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:18.916" endtime="20201115 23:00:18.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.933" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.932" endtime="20201115 23:00:18.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.935" level="INFO">VALUE: [7.777699999999763e-05, 7.756899999999955e-05, 7.818000000000061e-05, 7.794399999999993e-05, 7.783299999999937e-05, 7.763900000000087e-05, 7.793000000000036e-05, 7.838900000000162e-05, 7.83190000000003e-05, 7.780599999999971e-05, 7.837499999999858e-05, 7.831999999999978e-05, 7.812499999999833e-05, 7.827800000000107e-05, 7.847299999999904e-05, 7.756899999999955e-05, 7.75969999999987e-05, 7.759700000000216e-05, 7.836099999999901e-05, 7.804100000000092e-05, 7.818000000000061e-05, 7.761100000000173e-05, 7.797200000000254e-05, 7.777800000000057e-05, 7.800000000000168e-05, 7.75969999999987e-05, 7.822199999999932e-05, 7.837499999999858e-05, 7.851300000000228e-05, 7.806900000000006e-05, 7.841700000000076e-05, 7.831999999999978e-05, 7.812499999999833e-05, 7.847199999999957e-05, 7.837499999999858e-05, 7.773599999999839e-05, 7.772199999999882e-05, 7.754199999999989e-05, 7.801400000000125e-05, 7.81250000000018e-05, 7.79449999999994e-05, 7.812499999999833e-05, 7.816700000000051e-05, 7.837500000000205e-05, 7.790200000000122e-05, 7.75700000000025e-05, 7.836099999999901e-05, 7.772300000000176e-05, 7.787500000000155e-05, 7.811099999999876e-05]</msg>
<status status="PASS" starttime="20201115 23:00:18.934" endtime="20201115 23:00:18.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.929" endtime="20201115 23:00:18.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.938" endtime="20201115 23:00:18.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.942" endtime="20201115 23:00:18.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.940" endtime="20201115 23:00:18.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.937" endtime="20201115 23:00:18.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.570" endtime="20201115 23:00:18.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.568" endtime="20201115 23:00:18.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.567" endtime="20201115 23:00:18.963"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.965" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.974" endtime="20201115 23:00:18.995"></status>
</kw>
<msg timestamp="20201115 23:00:18.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.972" endtime="20201115 23:00:18.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.996" endtime="20201115 23:00:18.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.999" endtime="20201115 23:00:19.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.969" endtime="20201115 23:00:19.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.967" endtime="20201115 23:00:19.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.008" endtime="20201115 23:00:19.294"></status>
</kw>
<msg timestamp="20201115 23:00:19.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023341139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.006" endtime="20201115 23:00:19.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023341139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.298" endtime="20201115 23:00:19.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.306" endtime="20201115 23:00:19.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.004" endtime="20201115 23:00:19.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.002" endtime="20201115 23:00:19.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.313" level="INFO">${RESULT} = [{'time': 0.023420319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.917999999999814e-05, 'source_diff': 7.917999999999814e-05}, {'time': 0.023513361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:19.310" endtime="20201115 23:00:19.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.328" level="INFO">${ACCURACY} = {'source_diff': [7.917999999999814e-05, 7.940299999999872e-05, 7.886100000000298e-05, 7.88190000000008e-05, 7.911099999999976e-05, 7.951399999999928e-05, 7.943100000000133e-05, 7.850000000000218e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:19.314" endtime="20201115 23:00:19.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.332" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.331" endtime="20201115 23:00:19.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.335" level="INFO">VALUE: [7.917999999999814e-05, 7.940299999999872e-05, 7.886100000000298e-05, 7.88190000000008e-05, 7.911099999999976e-05, 7.951399999999928e-05, 7.943100000000133e-05, 7.850000000000218e-05, 7.85969999999997e-05, 7.956899999999809e-05, 7.904100000000192e-05, 7.930600000000121e-05, 7.909799999999967e-05, 7.949999999999971e-05, 7.916700000000151e-05, 7.937499999999958e-05, 7.888899999999865e-05, 7.936100000000001e-05, 7.855500000000099e-05, 7.894400000000093e-05, 7.887499999999908e-05, 7.918100000000108e-05, 7.866699999999754e-05, 7.91250000000028e-05, 7.852799999999785e-05, 7.899999999999921e-05, 7.875000000000243e-05, 7.897200000000007e-05, 7.940199999999925e-05, 7.859799999999917e-05, 7.926300000000303e-05, 7.905499999999802e-05, 7.874999999999896e-05, 7.929199999999817e-05, 7.87909999999982e-05, 7.87909999999982e-05, 7.943000000000186e-05, 7.866699999999754e-05, 7.868099999999711e-05, 7.923599999999989e-05, 7.91389999999989e-05, 7.934700000000044e-05, 7.86389999999984e-05, 7.912499999999933e-05, 7.94169999999983e-05, 7.874999999999896e-05, 7.899999999999921e-05, 7.898599999999964e-05, 7.930499999999827e-05, 7.876399999999853e-05]</msg>
<status status="PASS" starttime="20201115 23:00:19.333" endtime="20201115 23:00:19.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.329" endtime="20201115 23:00:19.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.338" endtime="20201115 23:00:19.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.341" endtime="20201115 23:00:19.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.340" endtime="20201115 23:00:19.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.336" endtime="20201115 23:00:19.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.966" endtime="20201115 23:00:19.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.964" endtime="20201115 23:00:19.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.963" endtime="20201115 23:00:19.363"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.365" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.373" endtime="20201115 23:00:19.393"></status>
</kw>
<msg timestamp="20201115 23:00:19.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.372" endtime="20201115 23:00:19.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.394" endtime="20201115 23:00:19.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.397" endtime="20201115 23:00:19.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.369" endtime="20201115 23:00:19.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.367" endtime="20201115 23:00:19.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.406" endtime="20201115 23:00:19.691"></status>
</kw>
<msg timestamp="20201115 23:00:19.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02215675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:19.404" endtime="20201115 23:00:19.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02215675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:19.696" endtime="20201115 23:00:19.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.704" endtime="20201115 23:00:19.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.402" endtime="20201115 23:00:19.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.400" endtime="20201115 23:00:19.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.712" level="INFO">${RESULT} = [{'time': 0.022236444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.969400000000168e-05, 'source_diff': 7.969400000000168e-05}, {'time': 0.022330458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:19.708" endtime="20201115 23:00:19.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.725" level="INFO">${ACCURACY} = {'source_diff': [7.969400000000168e-05, 8.040200000000025e-05, 8.048599999999767e-05, 8.036100000000101e-05, 8.038900000000015e-05, 8.018000000000261e-05, 8.005499999999902e-05, 8.025000000000046e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:19.713" endtime="20201115 23:00:19.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.730" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.729" endtime="20201115 23:00:19.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.732" level="INFO">VALUE: [7.969400000000168e-05, 8.040200000000025e-05, 8.048599999999767e-05, 8.036100000000101e-05, 8.038900000000015e-05, 8.018000000000261e-05, 8.005499999999902e-05, 8.025000000000046e-05, 8.029199999999917e-05, 8.012500000000033e-05, 7.980600000000171e-05, 7.998600000000064e-05, 7.958299999999766e-05, 8.022199999999785e-05, 7.98329999999979e-05, 8.018099999999861e-05, 8.029199999999917e-05, 7.981899999999834e-05, 8.006899999999859e-05, 8.023600000000089e-05, 7.954099999999895e-05, 7.987500000000008e-05, 7.967999999999864e-05, 8.001399999999978e-05, 8.022200000000132e-05, 8.048599999999767e-05, 8.005599999999849e-05, 8.020900000000122e-05, 7.954199999999842e-05, 8.009800000000067e-05, 7.99169999999988e-05, 8.0458999999998e-05, 8.019499999999818e-05, 8.030499999999927e-05, 7.980499999999877e-05, 8.048600000000114e-05, 8.034699999999798e-05, 7.955499999999852e-05, 8.009699999999773e-05, 8.043099999999886e-05, 7.995799999999803e-05, 7.998700000000011e-05, 7.970900000000072e-05, 8.018099999999861e-05, 7.99030000000027e-05, 8.041700000000276e-05, 8.004199999999892e-05, 8.034700000000145e-05, 8.016600000000304e-05, 8.037500000000058e-05]</msg>
<status status="PASS" starttime="20201115 23:00:19.731" endtime="20201115 23:00:19.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.726" endtime="20201115 23:00:19.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.736" endtime="20201115 23:00:19.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.739" endtime="20201115 23:00:19.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.738" endtime="20201115 23:00:19.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.734" endtime="20201115 23:00:19.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.366" endtime="20201115 23:00:19.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.364" endtime="20201115 23:00:19.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.363" endtime="20201115 23:00:19.760"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.763" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.771" endtime="20201115 23:00:19.790"></status>
</kw>
<msg timestamp="20201115 23:00:19.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.769" endtime="20201115 23:00:19.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.792" endtime="20201115 23:00:19.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.795" endtime="20201115 23:00:19.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.767" endtime="20201115 23:00:19.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.765" endtime="20201115 23:00:19.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.804" endtime="20201115 23:00:20.091"></status>
</kw>
<msg timestamp="20201115 23:00:20.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02190825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:19.802" endtime="20201115 23:00:20.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02190825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:20.095" endtime="20201115 23:00:20.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.104" endtime="20201115 23:00:20.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.800" endtime="20201115 23:00:20.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.798" endtime="20201115 23:00:20.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.110" level="INFO">${RESULT} = [{'time': 0.02190825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.065299999999997e-05, 'source_diff': 8.065299999999997e-05}, {'time': 0.022004236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:20.107" endtime="20201115 23:00:20.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.124" level="INFO">${ACCURACY} = {'source_diff': [8.065299999999997e-05, 8.149999999999824e-05, 8.07910000000002e-05, 8.076400000000053e-05, 8.119399999999971e-05, 8.098600000000164e-05, 8.068099999999911e-05, 8.144499999999943e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:20.111" endtime="20201115 23:00:20.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.128" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.127" endtime="20201115 23:00:20.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.131" level="INFO">VALUE: [8.065299999999997e-05, 8.149999999999824e-05, 8.07910000000002e-05, 8.076400000000053e-05, 8.119399999999971e-05, 8.098600000000164e-05, 8.068099999999911e-05, 8.144499999999943e-05, 8.113899999999744e-05, 8.112500000000133e-05, 8.058299999999866e-05, 8.12919999999967e-05, 8.080499999999977e-05, 8.131899999999984e-05, 8.094399999999946e-05, 8.105500000000002e-05, 8.124999999999799e-05, 8.143099999999986e-05, 8.140300000000072e-05, 8.105500000000002e-05, 8.09169999999998e-05, 8.051399999999681e-05, 8.144499999999943e-05, 8.059699999999823e-05, 8.106999999999906e-05, 8.068099999999911e-05, 8.055599999999899e-05, 8.06390000000004e-05, 8.051400000000028e-05, 8.065299999999997e-05, 8.129099999999723e-05, 8.145799999999953e-05, 8.079199999999967e-05, 8.143099999999986e-05, 8.086100000000151e-05, 8.143099999999986e-05, 8.118099999999961e-05, 8.098600000000164e-05, 8.113899999999744e-05, 8.066699999999954e-05, 8.149999999999824e-05, 8.09169999999998e-05, 8.074999999999749e-05, 8.052700000000038e-05, 8.092999999999989e-05, 8.106899999999959e-05, 8.14719999999991e-05, 8.073599999999792e-05, 8.086099999999805e-05, 8.136099999999855e-05]</msg>
<status status="PASS" starttime="20201115 23:00:20.129" endtime="20201115 23:00:20.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.125" endtime="20201115 23:00:20.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.134" endtime="20201115 23:00:20.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.138" endtime="20201115 23:00:20.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.137" endtime="20201115 23:00:20.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.133" endtime="20201115 23:00:20.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.763" endtime="20201115 23:00:20.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.762" endtime="20201115 23:00:20.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.761" endtime="20201115 23:00:20.160"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.162" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.170" endtime="20201115 23:00:20.189"></status>
</kw>
<msg timestamp="20201115 23:00:20.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.168" endtime="20201115 23:00:20.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.191" endtime="20201115 23:00:20.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.194" endtime="20201115 23:00:20.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.166" endtime="20201115 23:00:20.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.164" endtime="20201115 23:00:20.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.203" endtime="20201115 23:00:20.488"></status>
</kw>
<msg timestamp="20201115 23:00:20.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.201" endtime="20201115 23:00:20.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.492" endtime="20201115 23:00:20.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.500" endtime="20201115 23:00:20.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.199" endtime="20201115 23:00:20.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.197" endtime="20201115 23:00:20.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.507" level="INFO">${RESULT} = [{'time': 0.022024264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.232000000000031e-05, 'source_diff': 8.232000000000031e-05}, {'time': 0.022121306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:20.504" endtime="20201115 23:00:20.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.527" level="INFO">${ACCURACY} = {'source_diff': [8.232000000000031e-05, 8.176400000000153e-05, 8.198599999999917e-05, 8.218099999999715e-05, 8.166700000000054e-05, 8.245800000000053e-05, 8.173599999999892e-05, 8.17780000000011e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:20.514" endtime="20201115 23:00:20.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.531" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.530" endtime="20201115 23:00:20.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.534" level="INFO">VALUE: [8.232000000000031e-05, 8.176400000000153e-05, 8.198599999999917e-05, 8.218099999999715e-05, 8.166700000000054e-05, 8.245800000000053e-05, 8.173599999999892e-05, 8.17780000000011e-05, 8.212499999999887e-05, 8.175000000000196e-05, 8.244400000000096e-05, 8.230500000000127e-05, 8.156900000000009e-05, 8.162499999999837e-05, 8.180600000000024e-05, 8.180600000000024e-05, 8.190300000000122e-05, 8.172199999999935e-05, 8.197299999999907e-05, 8.20979999999992e-05, 8.226399999999856e-05, 8.194400000000046e-05, 8.22919999999977e-05, 8.155499999999705e-05, 8.166699999999708e-05, 8.195800000000003e-05, 8.21109999999993e-05, 8.19170000000008e-05, 8.198599999999917e-05, 8.173599999999892e-05, 8.179200000000067e-05, 8.248599999999967e-05, 8.181999999999981e-05, 8.19309999999969e-05, 8.168000000000064e-05, 8.240299999999826e-05, 8.218100000000061e-05, 8.15970000000027e-05, 8.184700000000295e-05, 8.173600000000239e-05, 8.173600000000239e-05, 8.218000000000114e-05, 8.212499999999887e-05, 8.162499999999837e-05, 8.201399999999831e-05, 8.248599999999967e-05, 8.161100000000227e-05, 8.170899999999925e-05, 8.17919999999972e-05, 8.155599999999999e-05]</msg>
<status status="PASS" starttime="20201115 23:00:20.533" endtime="20201115 23:00:20.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.528" endtime="20201115 23:00:20.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.537" endtime="20201115 23:00:20.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.541" endtime="20201115 23:00:20.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.539" endtime="20201115 23:00:20.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.536" endtime="20201115 23:00:20.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.162" endtime="20201115 23:00:20.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.161" endtime="20201115 23:00:20.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.160" endtime="20201115 23:00:20.562"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.564" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.572" endtime="20201115 23:00:20.593"></status>
</kw>
<msg timestamp="20201115 23:00:20.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.571" endtime="20201115 23:00:20.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.595" endtime="20201115 23:00:20.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.597" endtime="20201115 23:00:20.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.568" endtime="20201115 23:00:20.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.566" endtime="20201115 23:00:20.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.606" endtime="20201115 23:00:20.892"></status>
</kw>
<msg timestamp="20201115 23:00:20.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.605" endtime="20201115 23:00:20.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.896" endtime="20201115 23:00:20.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.904" endtime="20201115 23:00:20.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.602" endtime="20201115 23:00:20.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.600" endtime="20201115 23:00:20.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.911" level="INFO">${RESULT} = [{'time': 0.022584139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.3152999999999e-05, 'source_diff': 8.3152999999999e-05}, {'time': 0.022681125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201115 23:00:20.908" endtime="20201115 23:00:20.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.926" level="INFO">${ACCURACY} = {'source_diff': [8.3152999999999e-05, 8.324999999999999e-05, 8.34309999999984e-05, 8.347199999999763e-05, 8.312499999999987e-05, 8.326399999999956e-05, 8.320799999999781e-05, 8.312499999999987e-05, 8....</msg>
<status status="PASS" starttime="20201115 23:00:20.912" endtime="20201115 23:00:20.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.930" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.929" endtime="20201115 23:00:20.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.933" level="INFO">VALUE: [8.3152999999999e-05, 8.324999999999999e-05, 8.34309999999984e-05, 8.347199999999763e-05, 8.312499999999987e-05, 8.326399999999956e-05, 8.320799999999781e-05, 8.312499999999987e-05, 8.315199999999953e-05, 8.306900000000159e-05, 8.279099999999873e-05, 8.287499999999962e-05, 8.273599999999992e-05, 8.294400000000146e-05, 8.345800000000153e-05, 8.29309999999979e-05, 8.308300000000116e-05, 8.326399999999956e-05, 8.33469999999975e-05, 8.276399999999906e-05, 8.337500000000012e-05, 8.32369999999999e-05, 8.342999999999892e-05, 8.304099999999898e-05, 8.298600000000017e-05, 8.319400000000171e-05, 8.268000000000164e-05, 8.286100000000005e-05, 8.269400000000121e-05, 8.272200000000035e-05, 8.301399999999931e-05, 8.282000000000081e-05, 8.312499999999987e-05, 8.337500000000012e-05, 8.343100000000186e-05, 8.299999999999974e-05, 8.255599999999752e-05, 8.313899999999944e-05, 8.294400000000146e-05, 8.294399999999799e-05, 8.351399999999981e-05, 8.338899999999969e-05, 8.286100000000005e-05, 8.31110000000003e-05, 8.309699999999726e-05, 8.298699999999964e-05, 8.258299999999719e-05, 8.262500000000284e-05, 8.290299999999876e-05, 8.323600000000042e-05]</msg>
<status status="PASS" starttime="20201115 23:00:20.931" endtime="20201115 23:00:20.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.927" endtime="20201115 23:00:20.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.936" endtime="20201115 23:00:20.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.939" endtime="20201115 23:00:20.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.938" endtime="20201115 23:00:20.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.934" endtime="20201115 23:00:20.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.565" endtime="20201115 23:00:20.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.563" endtime="20201115 23:00:20.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.562" endtime="20201115 23:00:20.961"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.963" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.971" endtime="20201115 23:00:20.991"></status>
</kw>
<msg timestamp="20201115 23:00:20.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.969" endtime="20201115 23:00:20.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.993" endtime="20201115 23:00:20.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.995" endtime="20201115 23:00:20.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.967" endtime="20201115 23:00:20.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.965" endtime="20201115 23:00:20.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.005" endtime="20201115 23:00:21.289"></status>
</kw>
<msg timestamp="20201115 23:00:21.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.003" endtime="20201115 23:00:21.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.293" endtime="20201115 23:00:21.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.301" endtime="20201115 23:00:21.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.000" endtime="20201115 23:00:21.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.998" endtime="20201115 23:00:21.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.308" level="INFO">${RESULT} = [{'time': 0.021872708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.369400000000221e-05, 'source_diff': 8.369400000000221e-05}, {'time': 0.021971708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:21.305" endtime="20201115 23:00:21.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.321" level="INFO">${ACCURACY} = {'source_diff': [8.369400000000221e-05, 8.369399999999874e-05, 8.41249999999974e-05, 8.391599999999985e-05, 8.422200000000185e-05, 8.44859999999982e-05, 8.382000000000181e-05, 8.441699999999983e-05, 8...</msg>
<status status="PASS" starttime="20201115 23:00:21.309" endtime="20201115 23:00:21.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.326" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.325" endtime="20201115 23:00:21.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.328" level="INFO">VALUE: [8.369400000000221e-05, 8.369399999999874e-05, 8.41249999999974e-05, 8.391599999999985e-05, 8.422200000000185e-05, 8.44859999999982e-05, 8.382000000000181e-05, 8.441699999999983e-05, 8.359700000000123e-05, 8.393000000000289e-05, 8.391599999999985e-05, 8.395799999999856e-05, 8.404199999999945e-05, 8.400000000000074e-05, 8.404099999999998e-05, 8.44859999999982e-05, 8.406899999999912e-05, 8.426400000000056e-05, 8.391699999999933e-05, 8.39309999999989e-05, 8.399999999999727e-05, 8.438900000000069e-05, 8.362500000000037e-05, 8.372300000000082e-05, 8.39170000000028e-05, 8.41249999999974e-05, 8.438900000000069e-05, 8.437500000000112e-05, 8.448600000000167e-05, 8.398600000000117e-05, 8.394399999999899e-05, 8.355500000000252e-05, 8.447300000000157e-05, 8.36110000000008e-05, 8.434700000000198e-05, 8.370799999999831e-05, 8.405599999999902e-05, 8.436100000000155e-05, 8.402700000000041e-05, 8.450000000000124e-05, 8.382000000000181e-05, 8.386099999999758e-05, 8.405499999999955e-05, 8.412500000000087e-05, 8.431899999999937e-05, 8.44720000000021e-05, 8.42919999999997e-05, 8.429200000000317e-05, 8.356899999999862e-05, 8.44859999999982e-05]</msg>
<status status="PASS" starttime="20201115 23:00:21.327" endtime="20201115 23:00:21.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.322" endtime="20201115 23:00:21.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.331" endtime="20201115 23:00:21.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.335" endtime="20201115 23:00:21.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.333" endtime="20201115 23:00:21.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.330" endtime="20201115 23:00:21.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.963" endtime="20201115 23:00:21.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.962" endtime="20201115 23:00:21.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.961" endtime="20201115 23:00:21.356"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.358" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.366" endtime="20201115 23:00:21.387"></status>
</kw>
<msg timestamp="20201115 23:00:21.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.365" endtime="20201115 23:00:21.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.388" endtime="20201115 23:00:21.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.391" endtime="20201115 23:00:21.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.362" endtime="20201115 23:00:21.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.360" endtime="20201115 23:00:21.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.400" endtime="20201115 23:00:21.686"></status>
</kw>
<msg timestamp="20201115 23:00:21.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021631736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:21.399" endtime="20201115 23:00:21.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021631736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:21.690" endtime="20201115 23:00:21.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.698" endtime="20201115 23:00:21.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.396" endtime="20201115 23:00:21.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.394" endtime="20201115 23:00:21.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.705" level="INFO">${RESULT} = [{'time': 0.0217165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.476400000000106e-05, 'source_diff': 8.476400000000106e-05}, {'time': 0.0218155, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201115 23:00:21.702" endtime="20201115 23:00:21.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.718" level="INFO">${ACCURACY} = {'source_diff': [8.476400000000106e-05, 8.456900000000309e-05, 8.51110000000023e-05, 8.491700000000033e-05, 8.469499999999922e-05, 8.509699999999926e-05, 8.455599999999952e-05, 8.465299999999704e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:21.706" endtime="20201115 23:00:21.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.723" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.722" endtime="20201115 23:00:21.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.725" level="INFO">VALUE: [8.476400000000106e-05, 8.456900000000309e-05, 8.51110000000023e-05, 8.491700000000033e-05, 8.469499999999922e-05, 8.509699999999926e-05, 8.455599999999952e-05, 8.465299999999704e-05, 8.525000000000199e-05, 8.520800000000328e-05, 8.526300000000209e-05, 8.519400000000024e-05, 8.479100000000073e-05, 8.494399999999999e-05, 8.46110000000018e-05, 8.466700000000008e-05, 8.522299999999886e-05, 8.49309999999999e-05, 8.536100000000255e-05, 8.480599999999977e-05, 8.526399999999809e-05, 8.537500000000212e-05, 8.487499999999815e-05, 8.487500000000162e-05, 8.46110000000018e-05, 8.46110000000018e-05, 8.46660000000006e-05, 8.501399999999784e-05, 8.54310000000004e-05, 8.472200000000235e-05, 8.490299999999729e-05, 8.457000000000256e-05, 8.488899999999772e-05, 8.540299999999779e-05, 8.486100000000205e-05, 8.49309999999999e-05, 8.54729999999991e-05, 8.475000000000149e-05, 8.538900000000169e-05, 8.537500000000212e-05, 8.525000000000199e-05, 8.461099999999833e-05, 8.520799999999981e-05, 8.511099999999883e-05, 8.518100000000015e-05, 8.550000000000224e-05, 8.544499999999997e-05, 8.470899999999879e-05, 8.466700000000008e-05, 8.530600000000027e-05]</msg>
<status status="PASS" starttime="20201115 23:00:21.724" endtime="20201115 23:00:21.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.719" endtime="20201115 23:00:21.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.728" endtime="20201115 23:00:21.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.732" endtime="20201115 23:00:21.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.730" endtime="20201115 23:00:21.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.727" endtime="20201115 23:00:21.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.359" endtime="20201115 23:00:21.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.357" endtime="20201115 23:00:21.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.356" endtime="20201115 23:00:21.753"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.755" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.764" endtime="20201115 23:00:21.784"></status>
</kw>
<msg timestamp="20201115 23:00:21.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.762" endtime="20201115 23:00:21.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.786" endtime="20201115 23:00:21.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.788" endtime="20201115 23:00:21.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.759" endtime="20201115 23:00:21.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.757" endtime="20201115 23:00:21.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.797" endtime="20201115 23:00:22.083"></status>
</kw>
<msg timestamp="20201115 23:00:22.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.796" endtime="20201115 23:00:22.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.087" endtime="20201115 23:00:22.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.095" endtime="20201115 23:00:22.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.793" endtime="20201115 23:00:22.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.792" endtime="20201115 23:00:22.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.102" level="INFO">${RESULT} = [{'time': 0.022286292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.609799999999973e-05, 'source_diff': 8.609799999999973e-05}, {'time': 0.022388292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:22.098" endtime="20201115 23:00:22.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.115" level="INFO">${ACCURACY} = {'source_diff': [8.609799999999973e-05, 8.638899999999922e-05, 8.59859999999997e-05, 8.566599999999813e-05, 8.630499999999833e-05, 8.626399999999909e-05, 8.590199999999881e-05, 8.592999999999795e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:22.103" endtime="20201115 23:00:22.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.120" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.119" endtime="20201115 23:00:22.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.122" level="INFO">VALUE: [8.609799999999973e-05, 8.638899999999922e-05, 8.59859999999997e-05, 8.566599999999813e-05, 8.630499999999833e-05, 8.626399999999909e-05, 8.590199999999881e-05, 8.592999999999795e-05, 8.626400000000256e-05, 8.56799999999977e-05, 8.568099999999718e-05, 8.59310000000009e-05, 8.61669999999981e-05, 8.591700000000133e-05, 8.638900000000269e-05, 8.641699999999836e-05, 8.624999999999952e-05, 8.573599999999945e-05, 8.554100000000148e-05, 8.605500000000155e-05, 8.629099999999876e-05, 8.56249999999989e-05, 8.601399999999884e-05, 8.58189999999974e-05, 8.607000000000059e-05, 8.620900000000029e-05, 8.566700000000108e-05, 8.624999999999952e-05, 8.59859999999997e-05, 8.637499999999965e-05, 8.620900000000029e-05, 8.572299999999936e-05, 8.605499999999808e-05, 8.583300000000044e-05, 8.618000000000167e-05, 8.56249999999989e-05, 8.593000000000142e-05, 8.580600000000077e-05, 8.591699999999786e-05, 8.587500000000262e-05, 8.651399999999934e-05, 8.630600000000127e-05, 8.569500000000022e-05, 8.645900000000054e-05, 8.611200000000277e-05, 8.619399999999777e-05, 8.561099999999933e-05, 8.622200000000038e-05, 8.62920000000017e-05, 8.556900000000062e-05]</msg>
<status status="PASS" starttime="20201115 23:00:22.121" endtime="20201115 23:00:22.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.116" endtime="20201115 23:00:22.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.125" endtime="20201115 23:00:22.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.128" endtime="20201115 23:00:22.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.127" endtime="20201115 23:00:22.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.123" endtime="20201115 23:00:22.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.756" endtime="20201115 23:00:22.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.754" endtime="20201115 23:00:22.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.753" endtime="20201115 23:00:22.150"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.152" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.160" endtime="20201115 23:00:22.181"></status>
</kw>
<msg timestamp="20201115 23:00:22.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.159" endtime="20201115 23:00:22.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.182" endtime="20201115 23:00:22.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.185" endtime="20201115 23:00:22.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.156" endtime="20201115 23:00:22.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.154" endtime="20201115 23:00:22.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.194" endtime="20201115 23:00:22.480"></status>
</kw>
<msg timestamp="20201115 23:00:22.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023096514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.193" endtime="20201115 23:00:22.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023096514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023183569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.484" endtime="20201115 23:00:22.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.492" endtime="20201115 23:00:22.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.190" endtime="20201115 23:00:22.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.188" endtime="20201115 23:00:22.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.499" level="INFO">${RESULT} = [{'time': 0.023183569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.705500000000255e-05, 'source_diff': 8.705500000000255e-05}, {'time': 0.023285583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:22.495" endtime="20201115 23:00:22.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.514" level="INFO">${ACCURACY} = {'source_diff': [8.705500000000255e-05, 8.720799999999834e-05, 8.725000000000052e-05, 8.652699999999944e-05, 8.711100000000083e-05, 8.686100000000058e-05, 8.711100000000083e-05, 8.655600000000152e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:22.500" endtime="20201115 23:00:22.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.518" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.517" endtime="20201115 23:00:22.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.520" level="INFO">VALUE: [8.705500000000255e-05, 8.720799999999834e-05, 8.725000000000052e-05, 8.652699999999944e-05, 8.711100000000083e-05, 8.686100000000058e-05, 8.711100000000083e-05, 8.655600000000152e-05, 8.669499999999775e-05, 8.713800000000049e-05, 8.740299999999979e-05, 8.719499999999825e-05, 8.702799999999941e-05, 8.668000000000217e-05, 8.719400000000224e-05, 8.722199999999791e-05, 8.654099999999901e-05, 8.720800000000181e-05, 8.711100000000083e-05, 8.725000000000052e-05, 8.691699999999886e-05, 8.677799999999916e-05, 8.688899999999972e-05, 8.6847000000001e-05, 8.716700000000258e-05, 8.751400000000034e-05, 8.708300000000169e-05, 8.66249999999999e-05, 8.711099999999736e-05, 8.672199999999741e-05, 8.654099999999901e-05, 8.658300000000119e-05, 8.66249999999999e-05, 8.693099999999843e-05, 8.745800000000206e-05, 8.738900000000022e-05, 8.64860000000002e-05, 8.691700000000233e-05, 8.661099999999686e-05, 8.687500000000015e-05, 8.657000000000109e-05, 8.737500000000065e-05, 8.686100000000058e-05, 8.736099999999761e-05, 8.700000000000027e-05, 8.673600000000045e-05, 8.672200000000088e-05, 8.718100000000215e-05, 8.690299999999929e-05, 8.687500000000015e-05]</msg>
<status status="PASS" starttime="20201115 23:00:22.519" endtime="20201115 23:00:22.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.514" endtime="20201115 23:00:22.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.524" endtime="20201115 23:00:22.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.527" endtime="20201115 23:00:22.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.526" endtime="20201115 23:00:22.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.522" endtime="20201115 23:00:22.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.153" endtime="20201115 23:00:22.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.151" endtime="20201115 23:00:22.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.150" endtime="20201115 23:00:22.548"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.551" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.559" endtime="20201115 23:00:22.580"></status>
</kw>
<msg timestamp="20201115 23:00:22.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.557" endtime="20201115 23:00:22.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.581" endtime="20201115 23:00:22.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.584" endtime="20201115 23:00:22.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.555" endtime="20201115 23:00:22.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.553" endtime="20201115 23:00:22.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.593" endtime="20201115 23:00:22.878"></status>
</kw>
<msg timestamp="20201115 23:00:22.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.591" endtime="20201115 23:00:22.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.882" endtime="20201115 23:00:22.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.891" endtime="20201115 23:00:22.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.589" endtime="20201115 23:00:22.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.587" endtime="20201115 23:00:22.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.897" level="INFO">${RESULT} = [{'time': 0.021978931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.791699999999986e-05, 'source_diff': 8.791699999999986e-05}, {'time': 0.022082944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:22.894" endtime="20201115 23:00:22.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.911" level="INFO">${ACCURACY} = {'source_diff': [8.791699999999986e-05, 8.78189999999994e-05, 8.804199999999998e-05, 8.787500000000115e-05, 8.759699999999829e-05, 8.847199999999916e-05, 8.804100000000051e-05, 8.801400000000084e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:22.898" endtime="20201115 23:00:22.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.915" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.914" endtime="20201115 23:00:22.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.918" level="INFO">VALUE: [8.791699999999986e-05, 8.78189999999994e-05, 8.804199999999998e-05, 8.787500000000115e-05, 8.759699999999829e-05, 8.847199999999916e-05, 8.804100000000051e-05, 8.801400000000084e-05, 8.805500000000008e-05, 8.76669999999996e-05, 8.851400000000134e-05, 8.770799999999884e-05, 8.811099999999836e-05, 8.76250000000009e-05, 8.827799999999719e-05, 8.81800000000002e-05, 8.829200000000023e-05, 8.809800000000173e-05, 8.765300000000004e-05, 8.790200000000081e-05, 8.791699999999986e-05, 8.843000000000045e-05, 8.836099999999861e-05, 8.84999999999983e-05, 8.784800000000148e-05, 8.834699999999904e-05, 8.811099999999836e-05, 8.841700000000036e-05, 8.772199999999841e-05, 8.786200000000105e-05, 8.845799999999959e-05, 8.776400000000059e-05, 8.788900000000072e-05, 8.81800000000002e-05, 8.837500000000165e-05, 8.76799999999997e-05, 8.83189999999999e-05, 8.76669999999996e-05, 8.761100000000133e-05, 8.819399999999977e-05, 8.84999999999983e-05, 8.773600000000145e-05, 8.779199999999973e-05, 8.841700000000036e-05, 8.76250000000009e-05, 8.791600000000038e-05, 8.797199999999866e-05, 8.838900000000122e-05, 8.754100000000001e-05, 8.827799999999719e-05]</msg>
<status status="PASS" starttime="20201115 23:00:22.916" endtime="20201115 23:00:22.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.911" endtime="20201115 23:00:22.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.921" endtime="20201115 23:00:22.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.924" endtime="20201115 23:00:22.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.923" endtime="20201115 23:00:22.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.919" endtime="20201115 23:00:22.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.551" endtime="20201115 23:00:22.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.550" endtime="20201115 23:00:22.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.549" endtime="20201115 23:00:22.945"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.948" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.956" endtime="20201115 23:00:22.976"></status>
</kw>
<msg timestamp="20201115 23:00:22.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.954" endtime="20201115 23:00:22.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.978" endtime="20201115 23:00:22.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.980" endtime="20201115 23:00:22.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.952" endtime="20201115 23:00:22.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.950" endtime="20201115 23:00:22.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.989" endtime="20201115 23:00:23.275"></status>
</kw>
<msg timestamp="20201115 23:00:23.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.988" endtime="20201115 23:00:23.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.279" endtime="20201115 23:00:23.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.287" endtime="20201115 23:00:23.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.985" endtime="20201115 23:00:23.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.983" endtime="20201115 23:00:23.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.294" level="INFO">${RESULT} = [{'time': 0.021856833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.941599999999841e-05, 'source_diff': 8.941599999999841e-05}, {'time': 0.021961917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:23.290" endtime="20201115 23:00:23.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.308" level="INFO">${ACCURACY} = {'source_diff': [8.941599999999841e-05, 8.907000000000012e-05, 8.920800000000034e-05, 8.898599999999923e-05, 8.918100000000068e-05, 8.861099999999886e-05, 8.863900000000147e-05, 8.904200000000098e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:23.295" endtime="20201115 23:00:23.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.312" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.311" endtime="20201115 23:00:23.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.315" level="INFO">VALUE: [8.941599999999841e-05, 8.907000000000012e-05, 8.920800000000034e-05, 8.898599999999923e-05, 8.918100000000068e-05, 8.861099999999886e-05, 8.863900000000147e-05, 8.904200000000098e-05, 8.918100000000068e-05, 8.862499999999843e-05, 8.855499999999711e-05, 8.950000000000277e-05, 8.91670000000011e-05, 8.923599999999948e-05, 8.897199999999966e-05, 8.917999999999773e-05, 8.947200000000016e-05, 8.911099999999936e-05, 8.91670000000011e-05, 8.922199999999991e-05, 8.905599999999708e-05, 8.869499999999975e-05, 8.94869999999992e-05, 8.886199999999858e-05, 8.855500000000058e-05, 8.937499999999918e-05, 8.920800000000034e-05, 8.895800000000009e-05, 8.876399999999812e-05, 8.887499999999868e-05, 8.927799999999819e-05, 8.887500000000215e-05, 8.927799999999819e-05, 8.861099999999886e-05, 8.951399999999887e-05, 8.93060000000008e-05, 8.8945e-05, 8.927800000000166e-05, 8.936099999999961e-05, 8.938899999999875e-05, 8.933300000000047e-05, 8.85129999999984e-05, 8.917999999999773e-05, 8.924999999999905e-05, 8.86800000000007e-05, 8.930500000000133e-05, 8.856999999999962e-05, 8.905600000000055e-05, 8.852800000000091e-05, 8.859699999999929e-05]</msg>
<status status="PASS" starttime="20201115 23:00:23.313" endtime="20201115 23:00:23.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.308" endtime="20201115 23:00:23.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.318" endtime="20201115 23:00:23.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.321" endtime="20201115 23:00:23.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.319" endtime="20201115 23:00:23.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.316" endtime="20201115 23:00:23.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.948" endtime="20201115 23:00:23.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.947" endtime="20201115 23:00:23.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.946" endtime="20201115 23:00:23.342"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.344" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.353" endtime="20201115 23:00:23.373"></status>
</kw>
<msg timestamp="20201115 23:00:23.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.351" endtime="20201115 23:00:23.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.374" endtime="20201115 23:00:23.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.377" endtime="20201115 23:00:23.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.348" endtime="20201115 23:00:23.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.346" endtime="20201115 23:00:23.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.386" endtime="20201115 23:00:23.670"></status>
</kw>
<msg timestamp="20201115 23:00:23.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.384" endtime="20201115 23:00:23.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.674" endtime="20201115 23:00:23.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.683" endtime="20201115 23:00:23.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.382" endtime="20201115 23:00:23.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.380" endtime="20201115 23:00:23.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.690" level="INFO">${RESULT} = [{'time': 0.021858583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.005500000000208e-05, 'source_diff': 9.005500000000208e-05}, {'time': 0.021963583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:23.686" endtime="20201115 23:00:23.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.703" level="INFO">${ACCURACY} = {'source_diff': [9.005500000000208e-05, 8.997199999999719e-05, 9.048600000000073e-05, 9.004099999999904e-05, 9.027800000000266e-05, 9.026399999999962e-05, 9.012499999999993e-05, 8.973599999999998e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:23.691" endtime="20201115 23:00:23.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.708" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.707" endtime="20201115 23:00:23.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.710" level="INFO">VALUE: [9.005500000000208e-05, 8.997199999999719e-05, 9.048600000000073e-05, 9.004099999999904e-05, 9.027800000000266e-05, 9.026399999999962e-05, 9.012499999999993e-05, 8.973599999999998e-05, 8.972200000000041e-05, 9.023600000000048e-05, 9.019500000000125e-05, 8.954200000000148e-05, 9.030500000000233e-05, 8.974999999999955e-05, 9.016599999999916e-05, 9.041599999999941e-05, 8.968100000000118e-05, 9.015300000000254e-05, 9.009700000000079e-05, 8.9638999999999e-05, 9.008400000000069e-05, 9.047200000000116e-05, 8.957000000000062e-05, 9.040299999999932e-05, 8.955600000000105e-05, 8.988899999999925e-05, 9.029199999999876e-05, 8.991599999999891e-05, 9.037500000000018e-05, 9.036100000000061e-05, 8.982000000000087e-05, 9.005499999999861e-05, 8.979199999999826e-05, 9.004199999999851e-05, 9.029099999999929e-05, 9.008299999999775e-05, 9.034699999999757e-05, 9.011100000000036e-05, 8.99869999999997e-05, 8.991599999999891e-05, 9.023600000000048e-05, 8.986100000000011e-05, 9.05000000000003e-05, 9.036100000000061e-05, 9.047200000000116e-05, 8.970800000000084e-05, 9.048600000000073e-05, 9.016699999999864e-05, 9.008400000000069e-05, 8.98060000000013e-05]</msg>
<status status="PASS" starttime="20201115 23:00:23.709" endtime="20201115 23:00:23.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.704" endtime="20201115 23:00:23.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.713" endtime="20201115 23:00:23.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.717" endtime="20201115 23:00:23.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.715" endtime="20201115 23:00:23.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.712" endtime="20201115 23:00:23.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.345" endtime="20201115 23:00:23.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.343" endtime="20201115 23:00:23.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.342" endtime="20201115 23:00:23.738"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.740" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.748" endtime="20201115 23:00:23.769"></status>
</kw>
<msg timestamp="20201115 23:00:23.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.747" endtime="20201115 23:00:23.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.771" endtime="20201115 23:00:23.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.773" endtime="20201115 23:00:23.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.744" endtime="20201115 23:00:23.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.742" endtime="20201115 23:00:23.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.783" endtime="20201115 23:00:24.067"></status>
</kw>
<msg timestamp="20201115 23:00:24.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022797944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022888986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.781" endtime="20201115 23:00:24.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022797944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022888986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.071" endtime="20201115 23:00:24.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.080" endtime="20201115 23:00:24.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.778" endtime="20201115 23:00:24.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.776" endtime="20201115 23:00:24.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.086" level="INFO">${RESULT} = [{'time': 0.022888986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.104199999999951e-05, 'source_diff': 9.104199999999951e-05}, {'time': 0.022994014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:24.083" endtime="20201115 23:00:24.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.101" level="INFO">${ACCURACY} = {'source_diff': [9.104199999999951e-05, 9.14719999999987e-05, 9.047200000000116e-05, 9.079200000000273e-05, 9.11390000000005e-05, 9.109800000000126e-05, 9.105600000000255e-05, 9.112500000000093e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:00:24.087" endtime="20201115 23:00:24.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.105" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.104" endtime="20201115 23:00:24.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.108" level="INFO">VALUE: [9.104199999999951e-05, 9.14719999999987e-05, 9.047200000000116e-05, 9.079200000000273e-05, 9.11390000000005e-05, 9.109800000000126e-05, 9.105600000000255e-05, 9.112500000000093e-05, 9.055499999999911e-05, 9.087500000000068e-05, 9.136099999999814e-05, 9.116699999999964e-05, 9.070800000000184e-05, 9.137499999999771e-05, 9.111099999999789e-05, 9.149999999999783e-05, 9.073599999999751e-05, 9.076400000000012e-05, 9.083400000000144e-05, 9.101400000000037e-05, 9.137499999999771e-05, 9.061200000000033e-05, 9.147300000000164e-05, 9.094399999999905e-05, 9.111099999999789e-05, 9.056899999999868e-05, 9.105499999999961e-05, 9.105499999999961e-05, 9.151400000000087e-05, 9.122200000000191e-05, 9.084699999999807e-05, 9.143099999999946e-05, 9.094400000000252e-05, 9.132000000000237e-05, 9.098599999999776e-05, 9.131899999999943e-05, 9.066599999999966e-05, 9.142999999999998e-05, 9.0639e-05, 9.138900000000075e-05, 9.061200000000033e-05, 9.061100000000086e-05, 9.105600000000255e-05, 9.0639e-05, 9.091699999999939e-05, 9.151400000000087e-05, 9.140300000000032e-05, 9.105600000000255e-05, 9.061099999999739e-05, 9.076300000000065e-05]</msg>
<status status="PASS" starttime="20201115 23:00:24.106" endtime="20201115 23:00:24.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.102" endtime="20201115 23:00:24.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.111" endtime="20201115 23:00:24.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.114" endtime="20201115 23:00:24.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.113" endtime="20201115 23:00:24.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.109" endtime="20201115 23:00:24.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.741" endtime="20201115 23:00:24.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.739" endtime="20201115 23:00:24.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.738" endtime="20201115 23:00:24.135"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.138" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.146" endtime="20201115 23:00:24.166"></status>
</kw>
<msg timestamp="20201115 23:00:24.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.144" endtime="20201115 23:00:24.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.167" endtime="20201115 23:00:24.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.170" endtime="20201115 23:00:24.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.142" endtime="20201115 23:00:24.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.140" endtime="20201115 23:00:24.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.179" endtime="20201115 23:00:24.465"></status>
</kw>
<msg timestamp="20201115 23:00:24.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.178" endtime="20201115 23:00:24.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.469" endtime="20201115 23:00:24.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.477" endtime="20201115 23:00:24.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.175" endtime="20201115 23:00:24.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.173" endtime="20201115 23:00:24.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.484" level="INFO">${RESULT} = [{'time': 0.021904667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.23199999999999e-05, 'source_diff': 9.23199999999999e-05}, {'time': 0.022009639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:24.481" endtime="20201115 23:00:24.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.498" level="INFO">${ACCURACY} = {'source_diff': [9.23199999999999e-05, 9.212500000000193e-05, 9.155599999999958e-05, 9.173599999999851e-05, 9.191700000000039e-05, 9.154200000000001e-05, 9.166700000000014e-05, 9.244400000000055e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:24.485" endtime="20201115 23:00:24.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.502" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.501" endtime="20201115 23:00:24.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.505" level="INFO">VALUE: [9.23199999999999e-05, 9.212500000000193e-05, 9.155599999999958e-05, 9.173599999999851e-05, 9.191700000000039e-05, 9.154200000000001e-05, 9.166700000000014e-05, 9.244400000000055e-05, 9.24719999999997e-05, 9.24719999999997e-05, 9.238900000000175e-05, 9.223599999999901e-05, 9.249999999999883e-05, 9.156999999999915e-05, 9.161100000000186e-05, 9.211100000000236e-05, 9.152799999999697e-05, 9.205600000000008e-05, 9.204200000000051e-05, 9.161200000000133e-05, 9.213899999999803e-05, 9.234699999999957e-05, 9.155500000000011e-05, 9.21940000000003e-05, 9.204100000000104e-05, 9.236099999999914e-05, 9.162499999999796e-05, 9.248600000000273e-05, 9.223599999999901e-05, 9.155599999999958e-05, 9.24719999999997e-05, 9.180599999999983e-05, 9.16939999999998e-05, 9.229200000000076e-05, 9.216600000000116e-05, 9.199999999999833e-05, 9.241700000000089e-05, 9.190300000000082e-05, 9.172199999999894e-05, 9.166700000000014e-05, 9.198600000000223e-05, 9.188899999999778e-05, 9.161100000000186e-05, 9.176400000000112e-05, 9.179200000000026e-05, 9.216600000000116e-05, 9.24589999999996e-05, 9.148600000000173e-05, 9.174999999999808e-05, 9.159699999999882e-05]</msg>
<status status="PASS" starttime="20201115 23:00:24.503" endtime="20201115 23:00:24.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.499" endtime="20201115 23:00:24.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.508" endtime="20201115 23:00:24.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.511" endtime="20201115 23:00:24.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.510" endtime="20201115 23:00:24.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.506" endtime="20201115 23:00:24.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.138" endtime="20201115 23:00:24.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.136" endtime="20201115 23:00:24.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.136" endtime="20201115 23:00:24.532"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.535" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.543" endtime="20201115 23:00:24.564"></status>
</kw>
<msg timestamp="20201115 23:00:24.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.542" endtime="20201115 23:00:24.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.565" endtime="20201115 23:00:24.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.568" endtime="20201115 23:00:24.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.539" endtime="20201115 23:00:24.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.537" endtime="20201115 23:00:24.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.577" endtime="20201115 23:00:24.862"></status>
</kw>
<msg timestamp="20201115 23:00:24.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.575" endtime="20201115 23:00:24.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022297806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.866" endtime="20201115 23:00:24.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.874" endtime="20201115 23:00:24.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.572" endtime="20201115 23:00:24.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.571" endtime="20201115 23:00:24.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.881" level="INFO">${RESULT} = [{'time': 0.022391278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.34720000000007e-05, 'source_diff': 9.34720000000007e-05}, {'time': 0.022498347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:24.878" endtime="20201115 23:00:24.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.894" level="INFO">${ACCURACY} = {'source_diff': [9.34720000000007e-05, 9.305499999999814e-05, 9.291699999999792e-05, 9.263799999999905e-05, 9.309700000000032e-05, 9.349999999999983e-05, 9.304100000000204e-05, 9.349999999999983e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:24.882" endtime="20201115 23:00:24.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.899" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.898" endtime="20201115 23:00:24.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.901" level="INFO">VALUE: [9.34720000000007e-05, 9.305499999999814e-05, 9.291699999999792e-05, 9.263799999999905e-05, 9.309700000000032e-05, 9.349999999999983e-05, 9.304100000000204e-05, 9.349999999999983e-05, 9.255500000000111e-05, 9.276399999999865e-05, 9.290299999999835e-05, 9.2639000000002e-05, 9.34720000000007e-05, 9.280600000000083e-05, 9.322299999999992e-05, 9.259700000000329e-05, 9.34720000000007e-05, 9.273599999999951e-05, 9.298599999999976e-05, 9.28330000000005e-05, 9.338899999999928e-05, 9.272199999999994e-05, 9.262500000000243e-05, 9.258300000000025e-05, 9.348600000000026e-05, 9.348600000000026e-05, 9.319499999999731e-05, 9.323600000000001e-05, 9.277799999999822e-05, 9.259799999999929e-05, 9.313899999999903e-05, 9.26940000000008e-05, 9.331900000000143e-05, 9.29720000000002e-05, 9.3333000000001e-05, 9.294399999999758e-05, 9.293100000000096e-05, 9.266700000000114e-05, 9.274999999999908e-05, 9.270899999999985e-05, 9.349999999999983e-05, 9.351299999999993e-05, 9.256900000000068e-05, 9.334800000000004e-05, 9.280499999999789e-05, 9.259699999999982e-05, 9.313899999999903e-05, 9.341699999999842e-05, 9.337499999999971e-05, 9.266700000000114e-05]</msg>
<status status="PASS" starttime="20201115 23:00:24.900" endtime="20201115 23:00:24.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.895" endtime="20201115 23:00:24.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.905" endtime="20201115 23:00:24.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.908" endtime="20201115 23:00:24.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.906" endtime="20201115 23:00:24.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.903" endtime="20201115 23:00:24.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.535" endtime="20201115 23:00:24.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.534" endtime="20201115 23:00:24.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.533" endtime="20201115 23:00:24.929"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.932" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.940" endtime="20201115 23:00:24.960"></status>
</kw>
<msg timestamp="20201115 23:00:24.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.938" endtime="20201115 23:00:24.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.962" endtime="20201115 23:00:24.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.964" endtime="20201115 23:00:24.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.936" endtime="20201115 23:00:24.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.934" endtime="20201115 23:00:24.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.973" endtime="20201115 23:00:25.259"></status>
</kw>
<msg timestamp="20201115 23:00:25.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022386792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:24.972" endtime="20201115 23:00:25.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022386792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:25.264" endtime="20201115 23:00:25.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.272" endtime="20201115 23:00:25.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.969" endtime="20201115 23:00:25.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.967" endtime="20201115 23:00:25.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.278" level="INFO">${RESULT} = [{'time': 0.022481, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.420800000000187e-05, 'source_diff': 9.420800000000187e-05}, {'time': 0.022588986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:25.275" endtime="20201115 23:00:25.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.292" level="INFO">${ACCURACY} = {'source_diff': [9.420800000000187e-05, 9.352799999999897e-05, 9.429199999999929e-05, 9.36529999999991e-05, 9.405600000000208e-05, 9.441699999999942e-05, 9.429199999999929e-05, 9.426400000000015e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:25.279" endtime="20201115 23:00:25.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.296" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.295" endtime="20201115 23:00:25.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.299" level="INFO">VALUE: [9.420800000000187e-05, 9.352799999999897e-05, 9.429199999999929e-05, 9.36529999999991e-05, 9.405600000000208e-05, 9.441699999999942e-05, 9.429199999999929e-05, 9.426400000000015e-05, 9.44859999999978e-05, 9.406900000000218e-05, 9.386100000000064e-05, 9.430599999999886e-05, 9.422200000000144e-05, 9.388899999999978e-05, 9.437500000000071e-05, 9.436099999999767e-05, 9.437500000000071e-05, 9.427799999999972e-05, 9.444499999999856e-05, 9.356899999999821e-05, 9.380599999999836e-05, 9.357000000000115e-05, 9.354199999999854e-05, 9.44859999999978e-05, 9.425000000000058e-05, 9.405499999999914e-05, 9.448600000000126e-05, 9.406900000000218e-05, 9.427799999999972e-05, 9.387500000000021e-05, 9.354200000000201e-05, 9.405600000000208e-05, 9.358400000000072e-05, 9.406999999999818e-05, 9.441700000000289e-05, 9.448600000000126e-05, 9.375000000000008e-05, 9.38469999999976e-05, 9.444400000000255e-05, 9.447199999999822e-05, 9.436100000000114e-05, 9.423700000000049e-05, 9.349999999999983e-05, 9.408300000000175e-05, 9.394499999999806e-05, 9.400000000000033e-05, 9.436100000000114e-05, 9.373600000000051e-05, 9.376399999999965e-05, 9.444399999999908e-05]</msg>
<status status="PASS" starttime="20201115 23:00:25.298" endtime="20201115 23:00:25.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.293" endtime="20201115 23:00:25.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.302" endtime="20201115 23:00:25.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.306" endtime="20201115 23:00:25.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.304" endtime="20201115 23:00:25.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.301" endtime="20201115 23:00:25.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.932" endtime="20201115 23:00:25.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.931" endtime="20201115 23:00:25.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.930" endtime="20201115 23:00:25.327"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.329" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.337" endtime="20201115 23:00:25.359"></status>
</kw>
<msg timestamp="20201115 23:00:25.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.336" endtime="20201115 23:00:25.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.361" endtime="20201115 23:00:25.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.363" endtime="20201115 23:00:25.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.333" endtime="20201115 23:00:25.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.331" endtime="20201115 23:00:25.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.372" endtime="20201115 23:00:25.657"></status>
</kw>
<msg timestamp="20201115 23:00:25.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022624889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.371" endtime="20201115 23:00:25.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022624889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.661" endtime="20201115 23:00:25.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.669" endtime="20201115 23:00:25.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.368" endtime="20201115 23:00:25.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.366" endtime="20201115 23:00:25.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.675" level="INFO">${RESULT} = [{'time': 0.022720125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.523600000000201e-05, 'source_diff': 9.523600000000201e-05}, {'time': 0.022829125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:25.672" endtime="20201115 23:00:25.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.690" level="INFO">${ACCURACY} = {'source_diff': [9.523600000000201e-05, 9.473599999999804e-05, 9.461100000000139e-05, 9.490300000000035e-05, 9.468099999999924e-05, 9.472300000000142e-05, 9.49859999999983e-05, 9.533299999999953e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:25.676" endtime="20201115 23:00:25.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.695" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.694" endtime="20201115 23:00:25.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.698" level="INFO">VALUE: [9.523600000000201e-05, 9.473599999999804e-05, 9.461100000000139e-05, 9.490300000000035e-05, 9.468099999999924e-05, 9.472300000000142e-05, 9.49859999999983e-05, 9.533299999999953e-05, 9.534799999999857e-05, 9.541599999999748e-05, 9.490200000000087e-05, 9.46530000000001e-05, 9.461099999999792e-05, 9.504200000000004e-05, 9.479199999999979e-05, 9.516700000000017e-05, 9.543099999999999e-05, 9.524999999999811e-05, 9.459699999999835e-05, 9.543099999999999e-05, 9.479199999999979e-05, 9.536099999999867e-05, 9.533299999999953e-05, 9.523599999999854e-05, 9.477800000000022e-05, 9.51660000000007e-05, 9.538900000000128e-05, 9.540300000000085e-05, 9.500000000000133e-05, 9.53469999999991e-05, 9.481999999999893e-05, 9.547199999999922e-05, 9.468099999999924e-05, 9.536200000000161e-05, 9.497300000000167e-05, 9.486199999999764e-05, 9.46940000000028e-05, 9.50140000000009e-05, 9.518000000000026e-05, 9.50140000000009e-05, 9.512500000000146e-05, 9.537500000000171e-05, 9.504200000000004e-05, 9.479199999999979e-05, 9.508399999999875e-05, 9.499999999999786e-05, 9.481999999999893e-05, 9.506899999999971e-05, 9.469399999999933e-05, 9.51660000000007e-05]</msg>
<status status="PASS" starttime="20201115 23:00:25.696" endtime="20201115 23:00:25.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.691" endtime="20201115 23:00:25.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.701" endtime="20201115 23:00:25.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.704" endtime="20201115 23:00:25.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.703" endtime="20201115 23:00:25.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.699" endtime="20201115 23:00:25.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.330" endtime="20201115 23:00:25.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.328" endtime="20201115 23:00:25.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.327" endtime="20201115 23:00:25.725"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.728" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.736" endtime="20201115 23:00:25.756"></status>
</kw>
<msg timestamp="20201115 23:00:25.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.734" endtime="20201115 23:00:25.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.757" endtime="20201115 23:00:25.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.760" endtime="20201115 23:00:25.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.732" endtime="20201115 23:00:25.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.730" endtime="20201115 23:00:25.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.769" endtime="20201115 23:00:26.053"></status>
</kw>
<msg timestamp="20201115 23:00:26.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.767" endtime="20201115 23:00:26.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.057" endtime="20201115 23:00:26.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.065" endtime="20201115 23:00:26.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.765" endtime="20201115 23:00:26.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.763" endtime="20201115 23:00:26.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.072" level="INFO">${RESULT} = [{'time': 0.021781722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.623599999999954e-05, 'source_diff': 9.623599999999954e-05}, {'time': 0.021892708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:26.068" endtime="20201115 23:00:26.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.085" level="INFO">${ACCURACY} = {'source_diff': [9.623599999999954e-05, 9.605500000000114e-05, 9.579099999999785e-05, 9.576400000000165e-05, 9.641699999999795e-05, 9.604199999999757e-05, 9.579200000000079e-05, 9.58059999999969e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:26.073" endtime="20201115 23:00:26.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.090" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.089" endtime="20201115 23:00:26.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.092" level="INFO">VALUE: [9.623599999999954e-05, 9.605500000000114e-05, 9.579099999999785e-05, 9.576400000000165e-05, 9.641699999999795e-05, 9.604199999999757e-05, 9.579200000000079e-05, 9.58059999999969e-05, 9.609699999999985e-05, 9.561100000000239e-05, 9.58059999999969e-05, 9.636099999999967e-05, 9.636099999999967e-05, 9.568000000000076e-05, 9.588900000000178e-05, 9.555499999999717e-05, 9.583300000000003e-05, 9.552800000000097e-05, 9.561099999999892e-05, 9.629199999999782e-05, 9.575000000000208e-05, 9.643100000000099e-05, 9.580600000000036e-05, 9.61799999999978e-05, 9.622299999999945e-05, 9.584799999999907e-05, 9.630500000000139e-05, 9.556900000000021e-05, 9.609699999999985e-05, 9.644400000000108e-05, 9.636099999999967e-05, 9.652800000000197e-05, 9.59859999999993e-05, 9.570899999999938e-05, 9.586099999999917e-05, 9.619500000000031e-05, 9.586199999999864e-05, 9.568000000000076e-05, 9.593000000000101e-05, 9.56660000000012e-05, 9.606900000000071e-05, 9.611099999999942e-05, 9.623599999999954e-05, 9.587499999999874e-05, 9.613900000000203e-05, 9.593100000000049e-05, 9.591700000000092e-05, 9.647200000000022e-05, 9.622300000000292e-05, 9.570899999999938e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.091" endtime="20201115 23:00:26.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.086" endtime="20201115 23:00:26.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.096" endtime="20201115 23:00:26.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.099" endtime="20201115 23:00:26.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.098" endtime="20201115 23:00:26.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.094" endtime="20201115 23:00:26.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.728" endtime="20201115 23:00:26.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.727" endtime="20201115 23:00:26.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.726" endtime="20201115 23:00:26.120"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.122" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.131" endtime="20201115 23:00:26.151"></status>
</kw>
<msg timestamp="20201115 23:00:26.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.129" endtime="20201115 23:00:26.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.153" endtime="20201115 23:00:26.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.155" endtime="20201115 23:00:26.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.126" endtime="20201115 23:00:26.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.124" endtime="20201115 23:00:26.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.164" endtime="20201115 23:00:26.449"></status>
</kw>
<msg timestamp="20201115 23:00:26.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.163" endtime="20201115 23:00:26.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.453" endtime="20201115 23:00:26.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.461" endtime="20201115 23:00:26.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.160" endtime="20201115 23:00:26.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.158" endtime="20201115 23:00:26.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.468" level="INFO">${RESULT} = [{'time': 0.021895583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.672200000000047e-05, 'source_diff': 9.672200000000047e-05}, {'time': 0.022008597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:26.465" endtime="20201115 23:00:26.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.482" level="INFO">${ACCURACY} = {'source_diff': [9.672200000000047e-05, 9.699999999999986e-05, 9.704100000000257e-05, 9.738899999999981e-05, 9.726399999999968e-05, 9.733399999999753e-05, 9.680600000000136e-05, 9.727800000000272e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:26.469" endtime="20201115 23:00:26.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.486" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.485" endtime="20201115 23:00:26.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.488" level="INFO">VALUE: [9.672200000000047e-05, 9.699999999999986e-05, 9.704100000000257e-05, 9.738899999999981e-05, 9.726399999999968e-05, 9.733399999999753e-05, 9.680600000000136e-05, 9.727800000000272e-05, 9.744500000000156e-05, 9.743100000000199e-05, 9.719500000000131e-05, 9.74730000000007e-05, 9.736100000000067e-05, 9.736100000000067e-05, 9.719400000000183e-05, 9.694399999999812e-05, 9.677799999999875e-05, 9.73609999999972e-05, 9.744500000000156e-05, 9.705600000000161e-05, 9.71669999999987e-05, 9.708300000000128e-05, 9.711100000000042e-05, 9.668100000000124e-05, 9.673600000000004e-05, 9.713899999999956e-05, 9.733300000000153e-05, 9.723600000000054e-05, 9.725000000000011e-05, 9.708299999999781e-05, 9.66669999999982e-05, 9.738899999999981e-05, 9.729199999999882e-05, 9.709700000000085e-05, 9.718099999999827e-05, 9.718000000000226e-05, 9.706999999999771e-05, 9.71669999999987e-05, 9.711100000000042e-05, 9.743000000000251e-05, 9.693000000000201e-05, 9.668100000000124e-05, 9.682000000000093e-05, 9.748700000000027e-05, 9.73470000000011e-05, 9.663899999999906e-05, 9.72219999999975e-05, 9.66669999999982e-05, 9.751300000000046e-05, 9.67080000000009e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.487" endtime="20201115 23:00:26.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.482" endtime="20201115 23:00:26.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.492" endtime="20201115 23:00:26.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.495" endtime="20201115 23:00:26.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.493" endtime="20201115 23:00:26.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.490" endtime="20201115 23:00:26.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.123" endtime="20201115 23:00:26.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.121" endtime="20201115 23:00:26.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.120" endtime="20201115 23:00:26.516"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.519" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.527" endtime="20201115 23:00:26.548"></status>
</kw>
<msg timestamp="20201115 23:00:26.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.525" endtime="20201115 23:00:26.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.549" endtime="20201115 23:00:26.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.552" endtime="20201115 23:00:26.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.523" endtime="20201115 23:00:26.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.521" endtime="20201115 23:00:26.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.561" endtime="20201115 23:00:26.847"></status>
</kw>
<msg timestamp="20201115 23:00:26.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021711625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.559" endtime="20201115 23:00:26.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021711625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.851" endtime="20201115 23:00:26.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.859" endtime="20201115 23:00:26.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.556" endtime="20201115 23:00:26.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.555" endtime="20201115 23:00:26.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.866" level="INFO">${RESULT} = [{'time': 0.021809764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.813900000000056e-05, 'source_diff': 9.813900000000056e-05}, {'time': 0.021921764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:26.863" endtime="20201115 23:00:26.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.879" level="INFO">${ACCURACY} = {'source_diff': [9.813900000000056e-05, 9.78059999999989e-05, 9.791699999999945e-05, 9.795800000000215e-05, 9.822300000000145e-05, 9.811100000000142e-05, 9.76799999999993e-05, 9.845799999999919e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:00:26.867" endtime="20201115 23:00:26.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.884" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.883" endtime="20201115 23:00:26.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.886" level="INFO">VALUE: [9.813900000000056e-05, 9.78059999999989e-05, 9.791699999999945e-05, 9.795800000000215e-05, 9.822300000000145e-05, 9.811100000000142e-05, 9.76799999999993e-05, 9.845799999999919e-05, 9.847199999999875e-05, 9.772200000000147e-05, 9.763900000000006e-05, 9.841699999999995e-05, 9.818099999999927e-05, 9.838900000000081e-05, 9.804199999999957e-05, 9.780499999999942e-05, 9.816700000000317e-05, 9.763800000000059e-05, 9.811100000000142e-05, 9.822200000000197e-05, 9.780499999999942e-05, 9.812500000000099e-05, 9.844400000000308e-05, 9.793100000000249e-05, 9.811099999999795e-05, 9.786100000000117e-05, 9.770900000000138e-05, 9.75279999999995e-05, 9.83059999999994e-05, 9.775000000000061e-05, 9.841699999999995e-05, 9.823600000000154e-05, 9.74860000000008e-05, 9.784699999999813e-05, 9.787499999999727e-05, 9.822200000000197e-05, 9.84860000000018e-05, 9.81669999999997e-05, 9.76530000000031e-05, 9.772299999999748e-05, 9.754200000000254e-05, 9.773600000000104e-05, 9.851300000000146e-05, 9.756999999999821e-05, 9.84999999999979e-05, 9.790299999999988e-05, 9.81799999999998e-05, 9.78470000000016e-05, 9.75279999999995e-05, 9.841699999999995e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.885" endtime="20201115 23:00:26.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.880" endtime="20201115 23:00:26.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.889" endtime="20201115 23:00:26.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.893" endtime="20201115 23:00:26.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.891" endtime="20201115 23:00:26.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.888" endtime="20201115 23:00:26.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.519" endtime="20201115 23:00:26.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.517" endtime="20201115 23:00:26.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.517" endtime="20201115 23:00:26.914"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.916" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.924" endtime="20201115 23:00:26.945"></status>
</kw>
<msg timestamp="20201115 23:00:26.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.923" endtime="20201115 23:00:26.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.947" endtime="20201115 23:00:26.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.950" endtime="20201115 23:00:26.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.920" endtime="20201115 23:00:26.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.918" endtime="20201115 23:00:26.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.959" endtime="20201115 23:00:27.244"></status>
</kw>
<msg timestamp="20201115 23:00:27.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02254325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:26.957" endtime="20201115 23:00:27.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02254325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:27.248" endtime="20201115 23:00:27.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.257" endtime="20201115 23:00:27.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.955" endtime="20201115 23:00:27.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.953" endtime="20201115 23:00:27.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.264" level="INFO">${RESULT} = [{'time': 0.022641889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.863899999999759e-05, 'source_diff': 9.863899999999759e-05}, {'time': 0.022755917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:27.260" endtime="20201115 23:00:27.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.278" level="INFO">${ACCURACY} = {'source_diff': [9.863899999999759e-05, 9.865300000000063e-05, 9.912499999999852e-05, 9.879200000000032e-05, 9.894499999999959e-05, 9.916600000000123e-05, 9.90410000000011e-05, 9.924999999999864e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:27.265" endtime="20201115 23:00:27.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.283" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.282" endtime="20201115 23:00:27.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.285" level="INFO">VALUE: [9.863899999999759e-05, 9.865300000000063e-05, 9.912499999999852e-05, 9.879200000000032e-05, 9.894499999999959e-05, 9.916600000000123e-05, 9.90410000000011e-05, 9.924999999999864e-05, 9.89159999999975e-05, 9.937499999999877e-05, 9.86670000000002e-05, 9.870899999999891e-05, 9.94999999999989e-05, 9.93060000000004e-05, 9.93609999999992e-05, 9.862499999999802e-05, 9.909800000000232e-05, 9.911200000000189e-05, 9.85410000000006e-05, 9.880500000000042e-05, 9.887500000000174e-05, 9.937499999999877e-05, 9.900000000000186e-05, 9.924999999999864e-05, 9.918100000000027e-05, 9.863900000000106e-05, 9.854200000000007e-05, 9.874999999999814e-05, 9.925000000000211e-05, 9.911200000000189e-05, 9.90419999999971e-05, 9.94999999999989e-05, 9.893000000000055e-05, 9.913899999999809e-05, 9.924999999999864e-05, 9.861100000000192e-05, 9.901399999999796e-05, 9.924999999999864e-05, 9.945800000000019e-05, 9.863899999999759e-05, 9.900000000000186e-05, 9.909800000000232e-05, 9.905600000000014e-05, 9.86670000000002e-05, 9.913899999999809e-05, 9.84999999999979e-05, 9.869399999999987e-05, 9.874999999999814e-05, 9.859700000000235e-05, 9.88609999999987e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.284" endtime="20201115 23:00:27.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.279" endtime="20201115 23:00:27.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.288" endtime="20201115 23:00:27.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.292" endtime="20201115 23:00:27.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.290" endtime="20201115 23:00:27.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.287" endtime="20201115 23:00:27.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.917" endtime="20201115 23:00:27.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.915" endtime="20201115 23:00:27.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.914" endtime="20201115 23:00:27.313"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.315" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.324" endtime="20201115 23:00:27.344"></status>
</kw>
<msg timestamp="20201115 23:00:27.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.322" endtime="20201115 23:00:27.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.346" endtime="20201115 23:00:27.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.349" endtime="20201115 23:00:27.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.319" endtime="20201115 23:00:27.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.317" endtime="20201115 23:00:27.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.358" endtime="20201115 23:00:27.643"></status>
</kw>
<msg timestamp="20201115 23:00:27.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.356" endtime="20201115 23:00:27.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.648" endtime="20201115 23:00:27.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.656" endtime="20201115 23:00:27.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.354" endtime="20201115 23:00:27.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.352" endtime="20201115 23:00:27.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.662" level="INFO">${RESULT} = [{'time': 0.022290819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.970800000000044e-05, 'source_diff': 9.970800000000044e-05}, {'time': 0.022403764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:27.659" endtime="20201115 23:00:27.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.676" level="INFO">${ACCURACY} = {'source_diff': [9.970800000000044e-05, 0.00010034700000000063, 9.988899999999884e-05, 0.00010024999999999964, 0.00010019500000000084, 9.98479999999996e-05, 9.995800000000069e-05, 9.96800000000013e-05...</msg>
<status status="PASS" starttime="20201115 23:00:27.663" endtime="20201115 23:00:27.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.680" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.679" endtime="20201115 23:00:27.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.683" level="INFO">VALUE: [9.970800000000044e-05, 0.00010034700000000063, 9.988899999999884e-05, 0.00010024999999999964, 0.00010019500000000084, 9.98479999999996e-05, 9.995800000000069e-05, 9.96800000000013e-05, 0.00010005500000000167, 9.963899999999859e-05, 0.00010023600000000008, 0.00010040299999999891, 0.00010001399999999896, 9.98479999999996e-05, 0.00010016699999999823, 0.00010001399999999896, 0.00010005600000000114, 0.00010048600000000033, 9.998599999999983e-05, 0.0001004869999999998, 9.96939999999974e-05, 0.00010011099999999995, 0.00010023600000000008, 9.984700000000013e-05, 9.973599999999957e-05, 0.00010004200000000157, 9.961099999999945e-05, 0.00010027699999999931, 9.965300000000163e-05, 9.961099999999945e-05, 0.00010004200000000157, 9.987500000000274e-05, 9.990299999999841e-05, 0.0001000410000000021, 9.988900000000231e-05, 9.98609999999997e-05, 0.00010020800000000094, 0.00010037499999999977, 0.00010024999999999964, 0.00010006999999999724, 0.00010029200000000182, 0.00010043099999999805, 0.00010044399999999815, 9.995800000000069e-05, 9.983400000000003e-05, 9.988899999999884e-05, 9.962499999999902e-05, 0.00010008299999999734, 9.984700000000013e-05, 9.969500000000034e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.681" endtime="20201115 23:00:27.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.677" endtime="20201115 23:00:27.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.686" endtime="20201115 23:00:27.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.689" endtime="20201115 23:00:27.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.687" endtime="20201115 23:00:27.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.684" endtime="20201115 23:00:27.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.316" endtime="20201115 23:00:27.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.314" endtime="20201115 23:00:27.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.313" endtime="20201115 23:00:27.711"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.713" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.721" endtime="20201115 23:00:27.742"></status>
</kw>
<msg timestamp="20201115 23:00:27.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.720" endtime="20201115 23:00:27.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.744" endtime="20201115 23:00:27.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.746" endtime="20201115 23:00:27.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.717" endtime="20201115 23:00:27.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.715" endtime="20201115 23:00:27.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.755" endtime="20201115 23:00:28.040"></status>
</kw>
<msg timestamp="20201115 23:00:28.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.754" endtime="20201115 23:00:28.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.044" endtime="20201115 23:00:28.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.052" endtime="20201115 23:00:28.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.751" endtime="20201115 23:00:28.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.750" endtime="20201115 23:00:28.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.059" level="INFO">${RESULT} = [{'time': 0.022429264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010090299999999941, 'source_diff': 0.00010090299999999941}, {'time': 0.02254625, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:28.056" endtime="20201115 23:00:28.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.072" level="INFO">${ACCURACY} = {'source_diff': [0.00010090299999999941, 0.00010143099999999905, 0.0001010419999999991, 0.0001015000000000009, 0.00010073600000000058, 0.00010059700000000088, 0.0001005419999999986, 0.0001013189999999...</msg>
<status status="PASS" starttime="20201115 23:00:28.060" endtime="20201115 23:00:28.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.076" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.075" endtime="20201115 23:00:28.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.079" level="INFO">VALUE: [0.00010090299999999941, 0.00010143099999999905, 0.0001010419999999991, 0.0001015000000000009, 0.00010073600000000058, 0.00010059700000000088, 0.0001005419999999986, 0.00010131899999999902, 0.000101416, 0.00010149999999999743, 0.00010142999999999958, 0.00010115299999999966, 0.00010097300000000073, 0.00010127799999999978, 0.00010111100000000095, 0.00010068100000000177, 0.00010079199999999885, 0.00010138900000000034, 0.00010073700000000005, 0.00010090299999999941, 0.0001010000000000004, 0.00010125000000000065, 0.00010123600000000108, 0.00010062500000000002, 0.0001013610000000012, 0.00010083400000000103, 0.00010125000000000065, 0.00010144499999999862, 0.00010076399999999971, 0.0001006809999999983, 0.00010073700000000005, 0.0001013610000000012, 0.00010054099999999913, 0.00010059700000000088, 0.00010065299999999916, 0.00010075000000000014, 0.00010087500000000027, 0.00010093099999999855, 0.00010111100000000095, 0.0001009870000000003, 0.00010079200000000232, 0.00010112500000000052, 0.00010069400000000187, 0.00010087500000000027, 0.00010112499999999705, 0.00010059700000000088, 0.00010067999999999883, 0.000101416, 0.00010076399999999971, 0.00010105600000000214]</msg>
<status status="PASS" starttime="20201115 23:00:28.077" endtime="20201115 23:00:28.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.073" endtime="20201115 23:00:28.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.082" endtime="20201115 23:00:28.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.086" endtime="20201115 23:00:28.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.084" endtime="20201115 23:00:28.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.081" endtime="20201115 23:00:28.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.714" endtime="20201115 23:00:28.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.712" endtime="20201115 23:00:28.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.711" endtime="20201115 23:00:28.107"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.109" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.117" endtime="20201115 23:00:28.138"></status>
</kw>
<msg timestamp="20201115 23:00:28.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.116" endtime="20201115 23:00:28.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.139" endtime="20201115 23:00:28.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.142" endtime="20201115 23:00:28.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.113" endtime="20201115 23:00:28.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.111" endtime="20201115 23:00:28.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.151" endtime="20201115 23:00:28.438"></status>
</kw>
<msg timestamp="20201115 23:00:28.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.149" endtime="20201115 23:00:28.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.442" endtime="20201115 23:00:28.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.450" endtime="20201115 23:00:28.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.146" endtime="20201115 23:00:28.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.145" endtime="20201115 23:00:28.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.457" level="INFO">${RESULT} = [{'time': 0.021835431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010172299999999801, 'source_diff': 0.00010172299999999801}, {'time': 0.021953431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:28.453" endtime="20201115 23:00:28.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.470" level="INFO">${ACCURACY} = {'source_diff': [0.00010172299999999801, 0.00010193099999999955, 0.00010212500000000152, 0.00010208299999999934, 0.0001015549999999997, 0.00010201400000000097, 0.00010180599999999942, 0.00010179199999...</msg>
<status status="PASS" starttime="20201115 23:00:28.458" endtime="20201115 23:00:28.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.475" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.474" endtime="20201115 23:00:28.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.478" level="INFO">VALUE: [0.00010172299999999801, 0.00010193099999999955, 0.00010212500000000152, 0.00010208299999999934, 0.0001015549999999997, 0.00010201400000000097, 0.00010180599999999942, 0.00010179199999999985, 0.00010208300000000281, 0.00010216700000000023, 0.00010162500000000102, 0.00010186099999999823, 0.00010245799999999972, 0.00010220899999999894, 0.0001018610000000017, 0.00010218000000000033, 0.00010216600000000076, 0.00010240300000000091, 0.00010220799999999947, 0.00010180599999999942, 0.0001022359999999986, 0.00010184700000000213, 0.00010240300000000091, 0.0001023749999999983, 0.0001018749999999978, 0.0001016939999999994, 0.00010195799999999922, 0.00010165300000000016, 0.00010208299999999934, 0.00010161099999999798, 0.00010191699999999998, 0.00010176399999999725, 0.00010205599999999967, 0.00010159799999999788, 0.00010163899999999712, 0.00010245799999999972, 0.00010198599999999836, 0.00010180599999999942, 0.00010231900000000002, 0.00010230500000000045, 0.0001025000000000019, 0.00010208299999999934, 0.00010205599999999967, 0.0001023610000000022, 0.0001021809999999998, 0.00010161099999999798, 0.00010211100000000195, 0.00010236200000000167, 0.00010172300000000148, 0.00010188900000000084]</msg>
<status status="PASS" starttime="20201115 23:00:28.476" endtime="20201115 23:00:28.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.471" endtime="20201115 23:00:28.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.481" endtime="20201115 23:00:28.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.484" endtime="20201115 23:00:28.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.483" endtime="20201115 23:00:28.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.479" endtime="20201115 23:00:28.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.110" endtime="20201115 23:00:28.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.108" endtime="20201115 23:00:28.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.107" endtime="20201115 23:00:28.505"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.508" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.516" endtime="20201115 23:00:28.538"></status>
</kw>
<msg timestamp="20201115 23:00:28.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.514" endtime="20201115 23:00:28.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.539" endtime="20201115 23:00:28.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.542" endtime="20201115 23:00:28.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.512" endtime="20201115 23:00:28.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.510" endtime="20201115 23:00:28.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.551" endtime="20201115 23:00:28.837"></status>
</kw>
<msg timestamp="20201115 23:00:28.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02283675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:28.549" endtime="20201115 23:00:28.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02283675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:28.841" endtime="20201115 23:00:28.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.849" endtime="20201115 23:00:28.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.547" endtime="20201115 23:00:28.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.545" endtime="20201115 23:00:28.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.856" level="INFO">${RESULT} = [{'time': 0.02283675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010298599999999936, 'source_diff': 0.00010298599999999936}, {'time': 0.022955778, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:28.853" endtime="20201115 23:00:28.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.871" level="INFO">${ACCURACY} = {'source_diff': [0.00010298599999999936, 0.00010341699999999801, 0.00010266699999999726, 0.00010330600000000092, 0.00010343100000000105, 0.00010311099999999948, 0.00010282, 0.00010273699999999858, 0.0...</msg>
<status status="PASS" starttime="20201115 23:00:28.857" endtime="20201115 23:00:28.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.875" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.874" endtime="20201115 23:00:28.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.877" level="INFO">VALUE: [0.00010298599999999936, 0.00010341699999999801, 0.00010266699999999726, 0.00010330600000000092, 0.00010343100000000105, 0.00010311099999999948, 0.00010282, 0.00010273699999999858, 0.00010305499999999773, 0.00010298599999999936, 0.00010283300000000009, 0.00010274999999999868, 0.00010348599999999986, 0.00010348599999999986, 0.00010252800000000103, 0.00010261099999999898, 0.00010325000000000265, 0.0001026810000000003, 0.0001026810000000003, 0.00010280600000000042, 0.00010274999999999868, 0.00010333300000000059, 0.00010340299999999844, 0.00010349999999999943, 0.00010295800000000022, 0.00010329200000000135, 0.00010306900000000077, 0.0001031810000000008, 0.00010309699999999991, 0.00010347200000000029, 0.00010274999999999868, 0.00010294400000000065, 0.00010336099999999973, 0.00010330600000000092, 0.00010341599999999854, 0.00010284699999999966, 0.00010279100000000138, 0.00010277800000000128, 0.00010326399999999875, 0.00010270799999999997, 0.00010277799999999782, 0.00010288900000000184, 0.0001025000000000019, 0.00010255600000000017, 0.0001025550000000007, 0.00010338900000000234, 0.0001029299999999976, 0.00010343000000000158, 0.00010302800000000154, 0.00010334700000000016]</msg>
<status status="PASS" starttime="20201115 23:00:28.876" endtime="20201115 23:00:28.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.872" endtime="20201115 23:00:28.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.881" endtime="20201115 23:00:28.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.884" endtime="20201115 23:00:28.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.882" endtime="20201115 23:00:28.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.879" endtime="20201115 23:00:28.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.508" endtime="20201115 23:00:28.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.506" endtime="20201115 23:00:28.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.506" endtime="20201115 23:00:28.905"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.907" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.915" endtime="20201115 23:00:28.935"></status>
</kw>
<msg timestamp="20201115 23:00:28.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.914" endtime="20201115 23:00:28.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.936" endtime="20201115 23:00:28.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.939" endtime="20201115 23:00:28.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.911" endtime="20201115 23:00:28.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.909" endtime="20201115 23:00:28.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.948" endtime="20201115 23:00:29.233"></status>
</kw>
<msg timestamp="20201115 23:00:29.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.946" endtime="20201115 23:00:29.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.237" endtime="20201115 23:00:29.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.246" endtime="20201115 23:00:29.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.944" endtime="20201115 23:00:29.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.942" endtime="20201115 23:00:29.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.252" level="INFO">${RESULT} = [{'time': 0.021900611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001036940000000014, 'source_diff': 0.0001036940000000014}, {'time': 0.022020611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:29.249" endtime="20201115 23:00:29.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.266" level="INFO">${ACCURACY} = {'source_diff': [0.0001036940000000014, 0.00010354199999999814, 0.00010369399999999793, 0.00010380599999999796, 0.00010411100000000048, 0.00010444499999999815, 0.0001040420000000021, 0.000104236000000...</msg>
<status status="PASS" starttime="20201115 23:00:29.253" endtime="20201115 23:00:29.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.270" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.269" endtime="20201115 23:00:29.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.273" level="INFO">VALUE: [0.0001036940000000014, 0.00010354199999999814, 0.00010369399999999793, 0.00010380599999999796, 0.00010411100000000048, 0.00010444499999999815, 0.0001040420000000021, 0.0001042360000000006, 0.0001040139999999995, 0.00010436100000000073, 0.00010380499999999848, 0.00010379199999999839, 0.00010366600000000226, 0.00010398600000000036, 0.00010358300000000084, 0.00010380600000000142, 0.00010376399999999925, 0.0001035420000000016, 0.00010427800000000279, 0.00010401300000000002, 0.000104207999999998, 0.00010447199999999782, 0.00010357000000000074, 0.00010390199999999947, 0.0001042360000000006, 0.00010441699999999901, 0.00010444400000000215, 0.00010368099999999783, 0.00010363899999999912, 0.00010412500000000005, 0.00010434700000000116, 0.00010362499999999955, 0.00010380500000000195, 0.00010370800000000097, 0.0001043750000000003, 0.00010404099999999916, 0.00010354099999999866, 0.00010438899999999987, 0.00010383299999999762, 0.0001037360000000001, 0.00010438899999999987, 0.000103820000000001, 0.00010441699999999901, 0.00010362499999999955, 0.0001040689999999983, 0.00010383300000000109, 0.00010372200000000054, 0.00010384700000000066, 0.00010374999999999968, 0.00010442999999999911]</msg>
<status status="PASS" starttime="20201115 23:00:29.272" endtime="20201115 23:00:29.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.267" endtime="20201115 23:00:29.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.276" endtime="20201115 23:00:29.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.280" endtime="20201115 23:00:29.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.279" endtime="20201115 23:00:29.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.275" endtime="20201115 23:00:29.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.908" endtime="20201115 23:00:29.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.906" endtime="20201115 23:00:29.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.905" endtime="20201115 23:00:29.302"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.569" endtime="20201115 23:00:29.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.306" endtime="20201115 23:00:29.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.305" endtime="20201115 23:00:29.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.303" endtime="20201115 23:00:29.326"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:49.497" endtime="20201115 23:00:29.327" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.334" endtime="20201115 23:00:29.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.333" endtime="20201115 23:00:29.354"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.368" endtime="20201115 23:00:29.386"></status>
</kw>
<msg timestamp="20201115 23:00:29.387" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.366" endtime="20201115 23:00:29.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.389" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.388" endtime="20201115 23:00:29.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.392" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:00:29.390" endtime="20201115 23:00:29.393"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:29.364" endtime="20201115 23:00:29.393"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:29.361" endtime="20201115 23:00:29.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.359" endtime="20201115 23:00:29.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:00:29.398" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:00:29.397" endtime="20201115 23:00:29.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.395" endtime="20201115 23:00:29.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.358" endtime="20201115 23:00:29.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.358" endtime="20201115 23:00:29.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.399" endtime="20201115 23:00:29.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.356" endtime="20201115 23:00:29.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.355" endtime="20201115 23:00:29.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.331" endtime="20201115 23:00:29.402"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.406" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.414" endtime="20201115 23:00:29.431"></status>
</kw>
<msg timestamp="20201115 23:00:29.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.412" endtime="20201115 23:00:29.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.433" endtime="20201115 23:00:29.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.435" endtime="20201115 23:00:29.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.410" endtime="20201115 23:00:29.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.408" endtime="20201115 23:00:29.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.446" endtime="20201115 23:00:29.732"></status>
</kw>
<msg timestamp="20201115 23:00:29.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070117861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070151236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.444" endtime="20201115 23:00:29.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070117861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070151236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.736" endtime="20201115 23:00:29.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.744" endtime="20201115 23:00:29.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.440" endtime="20201115 23:00:29.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.438" endtime="20201115 23:00:29.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.751" level="INFO">${RESULT} = [{'time': 0.070151236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.337500000000215e-05, 'source_diff': 3.337500000000215e-05}, {'time': 0.070186194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:29.747" endtime="20201115 23:00:29.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.765" level="INFO">${ACCURACY} = {'source_diff': [3.337500000000215e-05, 3.0526999999988536e-05, 3.052799999998801e-05, 3.0512999999995905e-05, 3.055600000000103e-05, 3.052800000000189e-05, 3.0513999999995378e-05, 3.052799999998801e-...</msg>
<status status="PASS" starttime="20201115 23:00:29.752" endtime="20201115 23:00:29.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.769" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.768" endtime="20201115 23:00:29.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.772" level="INFO">VALUE: [3.337500000000215e-05, 3.0526999999988536e-05, 3.052799999998801e-05, 3.0512999999995905e-05, 3.055600000000103e-05, 3.052800000000189e-05, 3.0513999999995378e-05, 3.052799999998801e-05, 3.0568999999994184e-05, 3.054199999999452e-05, 3.054199999999452e-05, 3.055600000000103e-05, 3.052800000000189e-05, 3.054199999999452e-05, 3.0513999999995378e-05, 3.0500000000002747e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0514000000009256e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.058300000000069e-05, 3.054199999999452e-05, 3.0514000000009256e-05, 3.052800000000189e-05, 3.0526999999988536e-05, 3.048599999999624e-05, 3.0570000000007536e-05, 3.052800000000189e-05, 3.058300000000069e-05, 3.0512999999995905e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0514000000009256e-05, 3.052800000000189e-05, 3.0542000000008396e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.052799999998801e-05, 3.052800000000189e-05, 3.047300000000308e-05, 3.0526999999988536e-05, 3.0513999999995378e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.054199999999452e-05, 3.0514000000009256e-05, 3.0514000000009256e-05, 3.052800000000189e-05, 3.0540999999995044e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.770" endtime="20201115 23:00:29.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.765" endtime="20201115 23:00:29.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.775" endtime="20201115 23:00:29.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.778" endtime="20201115 23:00:29.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.776" endtime="20201115 23:00:29.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.773" endtime="20201115 23:00:29.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.406" endtime="20201115 23:00:29.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.404" endtime="20201115 23:00:29.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.404" endtime="20201115 23:00:29.799"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.802" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.810" endtime="20201115 23:00:29.828"></status>
</kw>
<msg timestamp="20201115 23:00:29.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.808" endtime="20201115 23:00:29.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.829" endtime="20201115 23:00:29.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.832" endtime="20201115 23:00:29.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.806" endtime="20201115 23:00:29.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.804" endtime="20201115 23:00:29.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.842" endtime="20201115 23:00:30.128"></status>
</kw>
<msg timestamp="20201115 23:00:30.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022170542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.839" endtime="20201115 23:00:30.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022170542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.133" endtime="20201115 23:00:30.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.141" endtime="20201115 23:00:30.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.837" endtime="20201115 23:00:30.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.835" endtime="20201115 23:00:30.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.148" level="INFO">${RESULT} = [{'time': 0.022170542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.062500000000287e-05, 'source_diff': 3.062500000000287e-05}, {'time': 0.022205181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:30.144" endtime="20201115 23:00:30.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.161" level="INFO">${ACCURACY} = {'source_diff': [3.062500000000287e-05, 3.0514000000002317e-05, 3.054100000000198e-05, 3.054100000000198e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.0485999999999708e-05, 3.052800000000189e-0...</msg>
<status status="PASS" starttime="20201115 23:00:30.149" endtime="20201115 23:00:30.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.166" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.165" endtime="20201115 23:00:30.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.168" level="INFO">VALUE: [3.062500000000287e-05, 3.0514000000002317e-05, 3.054100000000198e-05, 3.054100000000198e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.0485999999999708e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.054199999999799e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.05700000000006e-05, 3.05700000000006e-05, 3.052800000000189e-05, 3.05700000000006e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.0485999999999708e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0554999999998084e-05, 3.0485999999999708e-05, 3.0512999999999374e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.0512999999999374e-05, 3.0500000000002747e-05, 3.052800000000189e-05, 3.056900000000112e-05, 3.058300000000069e-05, 3.052799999999842e-05, 3.0458000000000568e-05, 3.052800000000189e-05, 3.05700000000006e-05, 3.052799999999842e-05, 3.0582999999997224e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052700000000241e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.045900000000004e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.167" endtime="20201115 23:00:30.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.162" endtime="20201115 23:00:30.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.171" endtime="20201115 23:00:30.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.175" endtime="20201115 23:00:30.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.173" endtime="20201115 23:00:30.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.170" endtime="20201115 23:00:30.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.802" endtime="20201115 23:00:30.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.800" endtime="20201115 23:00:30.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.799" endtime="20201115 23:00:30.196"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.198" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.206" endtime="20201115 23:00:30.224"></status>
</kw>
<msg timestamp="20201115 23:00:30.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.205" endtime="20201115 23:00:30.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.226" endtime="20201115 23:00:30.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.228" endtime="20201115 23:00:30.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.202" endtime="20201115 23:00:30.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.200" endtime="20201115 23:00:30.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.239" endtime="20201115 23:00:30.524"></status>
</kw>
<msg timestamp="20201115 23:00:30.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:30.236" endtime="20201115 23:00:30.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:30.529" endtime="20201115 23:00:30.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.537" endtime="20201115 23:00:30.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.234" endtime="20201115 23:00:30.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.232" endtime="20201115 23:00:30.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.543" level="INFO">${RESULT} = [{'time': 0.022165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.022198944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:30.540" endtime="20201115 23:00:30.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.558" level="INFO">${ACCURACY} = {'source_diff': [3.063899999999897e-05, 3.052700000000241e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.0513999999998848e-...</msg>
<status status="PASS" starttime="20201115 23:00:30.544" endtime="20201115 23:00:30.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.563" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.562" endtime="20201115 23:00:30.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.565" level="INFO">VALUE: [3.063899999999897e-05, 3.052700000000241e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.05700000000006e-05, 3.054199999999799e-05, 3.0514000000002317e-05, 3.054199999999799e-05, 3.05700000000006e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0485999999999708e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0485999999999708e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.0568999999997654e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.054199999999799e-05, 3.055600000000103e-05, 3.0526999999998944e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.048699999999918e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.0513999999998848e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.564" endtime="20201115 23:00:30.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.559" endtime="20201115 23:00:30.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.568" endtime="20201115 23:00:30.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.572" endtime="20201115 23:00:30.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.570" endtime="20201115 23:00:30.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.567" endtime="20201115 23:00:30.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.199" endtime="20201115 23:00:30.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.197" endtime="20201115 23:00:30.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.196" endtime="20201115 23:00:30.593"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.595" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.603" endtime="20201115 23:00:30.621"></status>
</kw>
<msg timestamp="20201115 23:00:30.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.602" endtime="20201115 23:00:30.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.627" endtime="20201115 23:00:30.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.630" endtime="20201115 23:00:30.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.599" endtime="20201115 23:00:30.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.597" endtime="20201115 23:00:30.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.639" endtime="20201115 23:00:30.926"></status>
</kw>
<msg timestamp="20201115 23:00:30.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.637" endtime="20201115 23:00:30.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.930" endtime="20201115 23:00:30.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.938" endtime="20201115 23:00:30.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.635" endtime="20201115 23:00:30.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.633" endtime="20201115 23:00:30.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.945" level="INFO">${RESULT} = [{'time': 0.022026389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.02205975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:30.942" endtime="20201115 23:00:30.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.958" level="INFO">${ACCURACY} = {'source_diff': [3.059700000000026e-05, 3.0513999999998848e-05, 3.054100000000198e-05, 3.054200000000146e-05, 3.0512999999999374e-05, 3.0485999999999708e-05, 3.054200000000146e-05, 3.0513999999998848e...</msg>
<status status="PASS" starttime="20201115 23:00:30.946" endtime="20201115 23:00:30.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.963" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.962" endtime="20201115 23:00:30.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.965" level="INFO">VALUE: [3.059700000000026e-05, 3.0513999999998848e-05, 3.054100000000198e-05, 3.054200000000146e-05, 3.0512999999999374e-05, 3.0485999999999708e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.055599999999756e-05, 3.054200000000146e-05, 3.052700000000241e-05, 3.054200000000146e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.0485999999999708e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.054199999999799e-05, 3.0526999999998944e-05, 3.0554999999998084e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.05700000000006e-05, 3.052800000000189e-05, 3.0472000000000138e-05, 3.0540999999998514e-05, 3.058300000000069e-05, 3.052800000000189e-05, 3.058300000000069e-05, 3.0526999999998944e-05, 3.045900000000004e-05, 3.0499999999999278e-05, 3.054199999999799e-05, 3.0513999999998848e-05, 3.0568999999997654e-05, 3.0513999999998848e-05, 3.0499999999999278e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.0485999999999708e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.0526999999998944e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.964" endtime="20201115 23:00:30.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.959" endtime="20201115 23:00:30.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.968" endtime="20201115 23:00:30.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.972" endtime="20201115 23:00:30.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.970" endtime="20201115 23:00:30.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.967" endtime="20201115 23:00:30.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.596" endtime="20201115 23:00:30.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.594" endtime="20201115 23:00:30.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.593" endtime="20201115 23:00:30.993"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.995" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.004" endtime="20201115 23:00:31.021"></status>
</kw>
<msg timestamp="20201115 23:00:31.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.002" endtime="20201115 23:00:31.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.023" endtime="20201115 23:00:31.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.025" endtime="20201115 23:00:31.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.999" endtime="20201115 23:00:31.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.997" endtime="20201115 23:00:31.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.034" endtime="20201115 23:00:31.320"></status>
</kw>
<msg timestamp="20201115 23:00:31.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.033" endtime="20201115 23:00:31.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.324" endtime="20201115 23:00:31.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.332" endtime="20201115 23:00:31.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.030" endtime="20201115 23:00:31.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.028" endtime="20201115 23:00:31.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.339" level="INFO">${RESULT} = [{'time': 0.022594944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.022628347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:31.335" endtime="20201115 23:00:31.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.352" level="INFO">${ACCURACY} = {'source_diff': [3.061099999999983e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0584000000000167e-05, 3.052799999999842e-05, 3.05839999999967e-05, 3.0526999999998944e-...</msg>
<status status="PASS" starttime="20201115 23:00:31.340" endtime="20201115 23:00:31.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.357" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.356" endtime="20201115 23:00:31.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.359" level="INFO">VALUE: [3.061099999999983e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0584000000000167e-05, 3.052799999999842e-05, 3.05839999999967e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0472000000000138e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.0582999999997224e-05, 3.05700000000006e-05, 3.044500000000047e-05, 3.0554999999998084e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.056900000000112e-05, 3.0568999999997654e-05, 3.0540999999998514e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.05700000000006e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0554999999998084e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.0499999999999278e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.052800000000189e-05, 3.058300000000069e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.054199999999799e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.358" endtime="20201115 23:00:31.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.353" endtime="20201115 23:00:31.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.363" endtime="20201115 23:00:31.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.366" endtime="20201115 23:00:31.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.365" endtime="20201115 23:00:31.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.361" endtime="20201115 23:00:31.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.996" endtime="20201115 23:00:31.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.994" endtime="20201115 23:00:31.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.993" endtime="20201115 23:00:31.387"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.390" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.398" endtime="20201115 23:00:31.415"></status>
</kw>
<msg timestamp="20201115 23:00:31.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.396" endtime="20201115 23:00:31.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.417" endtime="20201115 23:00:31.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.419" endtime="20201115 23:00:31.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.394" endtime="20201115 23:00:31.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.392" endtime="20201115 23:00:31.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.428" endtime="20201115 23:00:31.714"></status>
</kw>
<msg timestamp="20201115 23:00:31.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.427" endtime="20201115 23:00:31.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.718" endtime="20201115 23:00:31.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.726" endtime="20201115 23:00:31.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.424" endtime="20201115 23:00:31.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.422" endtime="20201115 23:00:31.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.733" level="INFO">${RESULT} = [{'time': 0.021847944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.06379999999995e-05, 'source_diff': 3.06379999999995e-05}, {'time': 0.021881708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:31.730" endtime="20201115 23:00:31.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.746" level="INFO">${ACCURACY} = {'source_diff': [3.06379999999995e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.055500000000155e-05, 3.052800000000189e-05, 3.0513999999998848e-0...</msg>
<status status="PASS" starttime="20201115 23:00:31.734" endtime="20201115 23:00:31.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.751" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.750" endtime="20201115 23:00:31.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.753" level="INFO">VALUE: [3.06379999999995e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.055500000000155e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.0485999999999708e-05, 3.055500000000155e-05, 3.05700000000006e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.054200000000146e-05, 3.0485999999999708e-05, 3.055599999999756e-05, 3.0597999999999737e-05, 3.058300000000069e-05, 3.0485999999999708e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.0513000000002843e-05, 3.0513999999998848e-05, 3.044500000000047e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.055500000000155e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.054100000000198e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.058300000000069e-05, 3.052799999999842e-05, 3.0540999999998514e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.752" endtime="20201115 23:00:31.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.747" endtime="20201115 23:00:31.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.757" endtime="20201115 23:00:31.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.760" endtime="20201115 23:00:31.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.759" endtime="20201115 23:00:31.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.755" endtime="20201115 23:00:31.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.390" endtime="20201115 23:00:31.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.389" endtime="20201115 23:00:31.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.388" endtime="20201115 23:00:31.781"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.784" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.792" endtime="20201115 23:00:31.809"></status>
</kw>
<msg timestamp="20201115 23:00:31.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.790" endtime="20201115 23:00:31.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.811" endtime="20201115 23:00:31.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.813" endtime="20201115 23:00:31.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.788" endtime="20201115 23:00:31.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.785" endtime="20201115 23:00:31.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.822" endtime="20201115 23:00:32.108"></status>
</kw>
<msg timestamp="20201115 23:00:32.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.821" endtime="20201115 23:00:32.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.112" endtime="20201115 23:00:32.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.120" endtime="20201115 23:00:32.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.818" endtime="20201115 23:00:32.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.816" endtime="20201115 23:00:32.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.127" level="INFO">${RESULT} = [{'time': 0.021881694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.021916792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:32.124" endtime="20201115 23:00:32.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.142" level="INFO">${ACCURACY} = {'source_diff': [3.059700000000026e-05, 3.0514000000002317e-05, 3.0540999999998514e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.052700000000241...</msg>
<status status="PASS" starttime="20201115 23:00:32.128" endtime="20201115 23:00:32.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.146" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.145" endtime="20201115 23:00:32.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.149" level="INFO">VALUE: [3.059700000000026e-05, 3.0514000000002317e-05, 3.0540999999998514e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.052700000000241e-05, 3.0513999999998848e-05, 3.0485999999999708e-05, 3.054200000000146e-05, 3.0540999999998514e-05, 3.0513999999998848e-05, 3.052700000000241e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0485999999999708e-05, 3.0512999999999374e-05, 3.054200000000146e-05, 3.0500000000002747e-05, 3.0500000000002747e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0458000000000568e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.0513999999998848e-05, 3.056900000000112e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0499999999999278e-05, 3.054100000000198e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0512999999999374e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.055599999999756e-05, 3.0584000000000167e-05, 3.0540999999998514e-05, 3.0597999999999737e-05, 3.052799999999842e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.147" endtime="20201115 23:00:32.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.143" endtime="20201115 23:00:32.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.152" endtime="20201115 23:00:32.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.156" endtime="20201115 23:00:32.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.154" endtime="20201115 23:00:32.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.151" endtime="20201115 23:00:32.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.784" endtime="20201115 23:00:32.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.782" endtime="20201115 23:00:32.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.782" endtime="20201115 23:00:32.177"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.179" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.187" endtime="20201115 23:00:32.204"></status>
</kw>
<msg timestamp="20201115 23:00:32.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.186" endtime="20201115 23:00:32.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.205" endtime="20201115 23:00:32.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.208" endtime="20201115 23:00:32.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.183" endtime="20201115 23:00:32.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.181" endtime="20201115 23:00:32.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.217" endtime="20201115 23:00:32.502"></status>
</kw>
<msg timestamp="20201115 23:00:32.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021815944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.215" endtime="20201115 23:00:32.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021815944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.507" endtime="20201115 23:00:32.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.515" endtime="20201115 23:00:32.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.213" endtime="20201115 23:00:32.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.211" endtime="20201115 23:00:32.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.522" level="INFO">${RESULT} = [{'time': 0.021815944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.058300000000069e-05, 'source_diff': 3.058300000000069e-05}, {'time': 0.021851403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:32.518" endtime="20201115 23:00:32.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.535" level="INFO">${ACCURACY} = {'source_diff': [3.058300000000069e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.054199999999799e-05, 3.047199999999667e-0...</msg>
<status status="PASS" starttime="20201115 23:00:32.523" endtime="20201115 23:00:32.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.540" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.539" endtime="20201115 23:00:32.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.542" level="INFO">VALUE: [3.058300000000069e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.054199999999799e-05, 3.047199999999667e-05, 3.0499999999999278e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0499999999999278e-05, 3.054100000000198e-05, 3.0499999999999278e-05, 3.0513999999998848e-05, 3.0458000000000568e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.056900000000112e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.0499999999999278e-05, 3.0568999999997654e-05, 3.052800000000189e-05, 3.0512999999999374e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.047299999999961e-05, 3.0513999999998848e-05, 3.0582999999997224e-05, 3.052799999999842e-05, 3.0458000000000568e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.541" endtime="20201115 23:00:32.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.536" endtime="20201115 23:00:32.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.545" endtime="20201115 23:00:32.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.549" endtime="20201115 23:00:32.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.547" endtime="20201115 23:00:32.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.544" endtime="20201115 23:00:32.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.180" endtime="20201115 23:00:32.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.178" endtime="20201115 23:00:32.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.177" endtime="20201115 23:00:32.570"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.572" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.580" endtime="20201115 23:00:32.597"></status>
</kw>
<msg timestamp="20201115 23:00:32.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.579" endtime="20201115 23:00:32.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.599" endtime="20201115 23:00:32.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.601" endtime="20201115 23:00:32.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.576" endtime="20201115 23:00:32.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.574" endtime="20201115 23:00:32.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.610" endtime="20201115 23:00:32.896"></status>
</kw>
<msg timestamp="20201115 23:00:32.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.609" endtime="20201115 23:00:32.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.901" endtime="20201115 23:00:32.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.909" endtime="20201115 23:00:32.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.606" endtime="20201115 23:00:32.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.604" endtime="20201115 23:00:32.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.916" level="INFO">${RESULT} = [{'time': 0.021858458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.021891431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:32.913" endtime="20201115 23:00:32.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.929" level="INFO">${ACCURACY} = {'source_diff': [3.061099999999983e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.0499999999999278e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.052799999999842e-0...</msg>
<status status="PASS" starttime="20201115 23:00:32.917" endtime="20201115 23:00:32.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.934" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.933" endtime="20201115 23:00:32.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.936" level="INFO">VALUE: [3.061099999999983e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.0499999999999278e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.054200000000146e-05, 3.04579999999971e-05, 3.0500000000002747e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.059700000000026e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0597999999999737e-05, 3.054100000000198e-05, 3.052800000000189e-05, 3.055500000000155e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0554999999998084e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.054199999999799e-05, 3.0526999999998944e-05, 3.056900000000112e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.935" endtime="20201115 23:00:32.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.930" endtime="20201115 23:00:32.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.939" endtime="20201115 23:00:32.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.943" endtime="20201115 23:00:32.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.941" endtime="20201115 23:00:32.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.938" endtime="20201115 23:00:32.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.573" endtime="20201115 23:00:32.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.571" endtime="20201115 23:00:32.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.570" endtime="20201115 23:00:32.964"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.966" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.974" endtime="20201115 23:00:32.991"></status>
</kw>
<msg timestamp="20201115 23:00:32.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.973" endtime="20201115 23:00:32.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.993" endtime="20201115 23:00:32.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.995" endtime="20201115 23:00:32.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.970" endtime="20201115 23:00:32.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.968" endtime="20201115 23:00:32.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.005" endtime="20201115 23:00:33.292"></status>
</kw>
<msg timestamp="20201115 23:00:33.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.003" endtime="20201115 23:00:33.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.296" endtime="20201115 23:00:33.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.304" endtime="20201115 23:00:33.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.000" endtime="20201115 23:00:33.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.998" endtime="20201115 23:00:33.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.311" level="INFO">${RESULT} = [{'time': 0.021968389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.022003181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:33.307" endtime="20201115 23:00:33.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.324" level="INFO">${ACCURACY} = {'source_diff': [3.059700000000026e-05, 3.054200000000146e-05, 3.0513000000002843e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.056900000000112e-05, 3.052800000000189e-05, 3.052800000000189e-0...</msg>
<status status="PASS" starttime="20201115 23:00:33.312" endtime="20201115 23:00:33.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.329" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.328" endtime="20201115 23:00:33.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.332" level="INFO">VALUE: [3.059700000000026e-05, 3.054200000000146e-05, 3.0513000000002843e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.056900000000112e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0513000000002843e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.0485999999999708e-05, 3.058300000000069e-05, 3.054200000000146e-05, 3.0512999999999374e-05, 3.052800000000189e-05, 3.0513000000002843e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.047300000000308e-05, 3.0526999999998944e-05, 3.0485999999999708e-05, 3.052700000000241e-05, 3.054200000000146e-05, 3.055599999999756e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.0554999999998084e-05, 3.0514000000002317e-05, 3.0540999999998514e-05, 3.055599999999756e-05, 3.054100000000198e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0540999999998514e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.330" endtime="20201115 23:00:33.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.325" endtime="20201115 23:00:33.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.335" endtime="20201115 23:00:33.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.339" endtime="20201115 23:00:33.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.337" endtime="20201115 23:00:33.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.334" endtime="20201115 23:00:33.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.967" endtime="20201115 23:00:33.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.965" endtime="20201115 23:00:33.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.964" endtime="20201115 23:00:33.360"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.363" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.371" endtime="20201115 23:00:33.389"></status>
</kw>
<msg timestamp="20201115 23:00:33.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.369" endtime="20201115 23:00:33.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.391" endtime="20201115 23:00:33.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.394" endtime="20201115 23:00:33.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.367" endtime="20201115 23:00:33.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.365" endtime="20201115 23:00:33.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.403" endtime="20201115 23:00:33.690"></status>
</kw>
<msg timestamp="20201115 23:00:33.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022034, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:33.401" endtime="20201115 23:00:33.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022034, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:33.694" endtime="20201115 23:00:33.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.702" endtime="20201115 23:00:33.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.398" endtime="20201115 23:00:33.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.397" endtime="20201115 23:00:33.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.709" level="INFO">${RESULT} = [{'time': 0.022034, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.058300000000069e-05, 'source_diff': 3.058300000000069e-05}, {'time': 0.022067083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:33.705" endtime="20201115 23:00:33.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.723" level="INFO">${ACCURACY} = {'source_diff': [3.058300000000069e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0500000000002747e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.0499999999999278e-...</msg>
<status status="PASS" starttime="20201115 23:00:33.710" endtime="20201115 23:00:33.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.728" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.727" endtime="20201115 23:00:33.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.730" level="INFO">VALUE: [3.058300000000069e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0500000000002747e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.0499999999999278e-05, 3.0513999999998848e-05, 3.055500000000155e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.0540999999998514e-05, 3.0499999999999278e-05, 3.0540999999998514e-05, 3.047299999999961e-05, 3.0514000000002317e-05, 3.0485999999999708e-05, 3.059700000000026e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.0514000000002317e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.055600000000103e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.0485999999999708e-05, 3.054199999999799e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.054100000000198e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.052700000000241e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.0472000000000138e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.0554999999998084e-05, 3.0513999999998848e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.729" endtime="20201115 23:00:33.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.724" endtime="20201115 23:00:33.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.733" endtime="20201115 23:00:33.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.737" endtime="20201115 23:00:33.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.735" endtime="20201115 23:00:33.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.732" endtime="20201115 23:00:33.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.363" endtime="20201115 23:00:33.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.362" endtime="20201115 23:00:33.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.361" endtime="20201115 23:00:33.758"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.760" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.769" endtime="20201115 23:00:33.785"></status>
</kw>
<msg timestamp="20201115 23:00:33.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.767" endtime="20201115 23:00:33.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.786" endtime="20201115 23:00:33.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.789" endtime="20201115 23:00:33.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.765" endtime="20201115 23:00:33.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.762" endtime="20201115 23:00:33.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.798" endtime="20201115 23:00:34.082"></status>
</kw>
<msg timestamp="20201115 23:00:34.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.796" endtime="20201115 23:00:34.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.086" endtime="20201115 23:00:34.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.094" endtime="20201115 23:00:34.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.794" endtime="20201115 23:00:34.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.792" endtime="20201115 23:00:34.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.101" level="INFO">${RESULT} = [{'time': 0.022597986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.022632833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:34.098" endtime="20201115 23:00:34.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.114" level="INFO">${ACCURACY} = {'source_diff': [3.061099999999983e-05, 3.052700000000241e-05, 3.0513999999998848e-05, 3.058300000000069e-05, 3.0584000000000167e-05, 3.056900000000112e-05, 3.0513999999998848e-05, 3.054200000000146e-...</msg>
<status status="PASS" starttime="20201115 23:00:34.102" endtime="20201115 23:00:34.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.119" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.118" endtime="20201115 23:00:34.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.121" level="INFO">VALUE: [3.061099999999983e-05, 3.052700000000241e-05, 3.0513999999998848e-05, 3.058300000000069e-05, 3.0584000000000167e-05, 3.056900000000112e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.055600000000103e-05, 3.047300000000308e-05, 3.054199999999799e-05, 3.0513999999998848e-05, 3.052700000000241e-05, 3.047300000000308e-05, 3.0526999999998944e-05, 3.055599999999756e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.054100000000198e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.0485999999999708e-05, 3.0472000000000138e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.0584000000000167e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0499999999999278e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.047299999999961e-05, 3.0554999999998084e-05, 3.052799999999842e-05, 3.0514000000002317e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.120" endtime="20201115 23:00:34.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.115" endtime="20201115 23:00:34.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.125" endtime="20201115 23:00:34.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.128" endtime="20201115 23:00:34.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.126" endtime="20201115 23:00:34.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.123" endtime="20201115 23:00:34.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.761" endtime="20201115 23:00:34.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.759" endtime="20201115 23:00:34.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.758" endtime="20201115 23:00:34.149"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.152" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.160" endtime="20201115 23:00:34.177"></status>
</kw>
<msg timestamp="20201115 23:00:34.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.158" endtime="20201115 23:00:34.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.179" endtime="20201115 23:00:34.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.181" endtime="20201115 23:00:34.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.156" endtime="20201115 23:00:34.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.154" endtime="20201115 23:00:34.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.190" endtime="20201115 23:00:34.477"></status>
</kw>
<msg timestamp="20201115 23:00:34.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02215825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:34.189" endtime="20201115 23:00:34.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02215825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:34.481" endtime="20201115 23:00:34.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.489" endtime="20201115 23:00:34.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.186" endtime="20201115 23:00:34.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.185" endtime="20201115 23:00:34.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.496" level="INFO">${RESULT} = [{'time': 0.022188903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.065299999999854e-05, 'source_diff': 3.065299999999854e-05}, {'time': 0.022225403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:34.492" endtime="20201115 23:00:34.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.509" level="INFO">${ACCURACY} = {'source_diff': [3.065299999999854e-05, 3.0514000000002317e-05, 3.056900000000112e-05, 3.0499999999999278e-05, 3.091699999999836e-05, 3.088899999999922e-05, 3.0500000000002747e-05, 3.0540999999998514e...</msg>
<status status="PASS" starttime="20201115 23:00:34.497" endtime="20201115 23:00:34.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.514" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.513" endtime="20201115 23:00:34.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.516" level="INFO">VALUE: [3.065299999999854e-05, 3.0514000000002317e-05, 3.056900000000112e-05, 3.0499999999999278e-05, 3.091699999999836e-05, 3.088899999999922e-05, 3.0500000000002747e-05, 3.0540999999998514e-05, 3.058300000000069e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.056900000000112e-05, 3.055599999999756e-05, 3.058300000000069e-05, 3.095800000000107e-05, 3.0526999999998944e-05, 3.054199999999799e-05, 3.0485999999999708e-05, 3.054199999999799e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.059700000000026e-05, 3.154199999999899e-05, 3.055600000000103e-05, 3.054100000000198e-05, 3.0512999999999374e-05, 3.094500000000097e-05, 3.05839999999967e-05, 3.091699999999836e-05, 3.054200000000146e-05, 3.09440000000015e-05, 3.055600000000103e-05, 3.091699999999836e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.0514000000002317e-05, 3.05700000000006e-05, 3.056900000000112e-05, 3.1540999999999514e-05, 3.056900000000112e-05, 3.055500000000155e-05, 3.090299999999879e-05, 3.059700000000026e-05, 3.0568999999997654e-05, 3.094500000000097e-05, 3.054100000000198e-05, 3.05700000000006e-05, 3.152799999999942e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.515" endtime="20201115 23:00:34.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.510" endtime="20201115 23:00:34.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.520" endtime="20201115 23:00:34.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.523" endtime="20201115 23:00:34.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.521" endtime="20201115 23:00:34.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.518" endtime="20201115 23:00:34.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.152" endtime="20201115 23:00:34.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.151" endtime="20201115 23:00:34.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.150" endtime="20201115 23:00:34.544"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.546" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.555" endtime="20201115 23:00:34.573"></status>
</kw>
<msg timestamp="20201115 23:00:34.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.553" endtime="20201115 23:00:34.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.574" endtime="20201115 23:00:34.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.577" endtime="20201115 23:00:34.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.551" endtime="20201115 23:00:34.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.548" endtime="20201115 23:00:34.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.585" endtime="20201115 23:00:34.872"></status>
</kw>
<msg timestamp="20201115 23:00:34.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021985125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.584" endtime="20201115 23:00:34.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021985125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.876" endtime="20201115 23:00:34.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.884" endtime="20201115 23:00:34.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.581" endtime="20201115 23:00:34.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.580" endtime="20201115 23:00:34.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.891" level="INFO">${RESULT} = [{'time': 0.022015778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.065299999999854e-05, 'source_diff': 3.065299999999854e-05}, {'time': 0.022053667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:34.888" endtime="20201115 23:00:34.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.904" level="INFO">${ACCURACY} = {'source_diff': [3.065299999999854e-05, 3.372299999999939e-05, 3.058300000000069e-05, 3.3638999999998503e-05, 3.365200000000207e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.3624999999998934e...</msg>
<status status="PASS" starttime="20201115 23:00:34.892" endtime="20201115 23:00:34.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.909" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.908" endtime="20201115 23:00:34.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.912" level="INFO">VALUE: [3.065299999999854e-05, 3.372299999999939e-05, 3.058300000000069e-05, 3.3638999999998503e-05, 3.365200000000207e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.052800000000189e-05, 3.3624999999998934e-05, 3.365200000000207e-05, 3.36519999999986e-05, 3.3638999999998503e-05, 3.052799999999842e-05, 3.0582999999997224e-05, 3.0568999999997654e-05, 3.052800000000189e-05, 3.056900000000112e-05, 3.3638999999998503e-05, 3.055600000000103e-05, 3.05839999999967e-05, 3.055600000000103e-05, 3.363900000000197e-05, 3.370800000000035e-05, 3.363900000000197e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.365300000000154e-05, 3.365300000000154e-05, 3.368100000000068e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.35839999999997e-05, 3.05700000000006e-05, 3.36519999999986e-05, 3.36380000000025e-05, 3.056999999999713e-05, 3.363900000000197e-05, 3.3624999999998934e-05, 3.365299999999807e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.363799999999903e-05, 3.3624999999998934e-05, 3.370800000000035e-05, 3.0526999999998944e-05, 3.055600000000103e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.910" endtime="20201115 23:00:34.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.905" endtime="20201115 23:00:34.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.915" endtime="20201115 23:00:34.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.918" endtime="20201115 23:00:34.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.917" endtime="20201115 23:00:34.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.913" endtime="20201115 23:00:34.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.547" endtime="20201115 23:00:34.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.545" endtime="20201115 23:00:34.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.544" endtime="20201115 23:00:34.939"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.942" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.950" endtime="20201115 23:00:34.968"></status>
</kw>
<msg timestamp="20201115 23:00:34.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.948" endtime="20201115 23:00:34.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.969" endtime="20201115 23:00:34.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.972" endtime="20201115 23:00:34.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.946" endtime="20201115 23:00:34.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.944" endtime="20201115 23:00:34.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.981" endtime="20201115 23:00:35.268"></status>
</kw>
<msg timestamp="20201115 23:00:35.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.979" endtime="20201115 23:00:35.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.272" endtime="20201115 23:00:35.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.280" endtime="20201115 23:00:35.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.977" endtime="20201115 23:00:35.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.975" endtime="20201115 23:00:35.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.286" level="INFO">${RESULT} = [{'time': 0.021995889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.380600000000081e-05, 'source_diff': 3.380600000000081e-05}, {'time': 0.022031972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:35.283" endtime="20201115 23:00:35.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.302" level="INFO">${ACCURACY} = {'source_diff': [3.380600000000081e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.366599999999817e-05, 3.3638999999998503e-05, 3.3610999999999364e-05, 3.365300000000154e-05, 3.3638999999998503e...</msg>
<status status="PASS" starttime="20201115 23:00:35.288" endtime="20201115 23:00:35.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.306" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.305" endtime="20201115 23:00:35.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.309" level="INFO">VALUE: [3.380600000000081e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.366599999999817e-05, 3.3638999999998503e-05, 3.3610999999999364e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.366699999999764e-05, 3.365299999999807e-05, 3.365300000000154e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.361199999999884e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.365200000000207e-05, 3.365299999999807e-05, 3.3568999999997184e-05, 3.36250000000024e-05, 3.363900000000197e-05, 3.370800000000035e-05, 3.372299999999939e-05, 3.363900000000197e-05, 3.3583000000000224e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.361100000000283e-05, 3.36250000000024e-05, 3.365300000000154e-05, 3.36380000000025e-05, 3.3624999999998934e-05, 3.363900000000197e-05]</msg>
<status status="PASS" starttime="20201115 23:00:35.307" endtime="20201115 23:00:35.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.303" endtime="20201115 23:00:35.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.312" endtime="20201115 23:00:35.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.315" endtime="20201115 23:00:35.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.314" endtime="20201115 23:00:35.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.310" endtime="20201115 23:00:35.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.942" endtime="20201115 23:00:35.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.941" endtime="20201115 23:00:35.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.940" endtime="20201115 23:00:35.336"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.339" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.347" endtime="20201115 23:00:35.365"></status>
</kw>
<msg timestamp="20201115 23:00:35.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.345" endtime="20201115 23:00:35.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.366" endtime="20201115 23:00:35.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.369" endtime="20201115 23:00:35.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.343" endtime="20201115 23:00:35.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.341" endtime="20201115 23:00:35.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.378" endtime="20201115 23:00:35.663"></status>
</kw>
<msg timestamp="20201115 23:00:35.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.376" endtime="20201115 23:00:35.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.667" endtime="20201115 23:00:35.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.680" endtime="20201115 23:00:35.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.374" endtime="20201115 23:00:35.682"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.372" endtime="20201115 23:00:35.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.686" level="INFO">${RESULT} = [{'time': 0.021898611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.37779999999982e-05, 'source_diff': 3.37779999999982e-05}, {'time': 0.021937486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:35.683" endtime="20201115 23:00:35.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.700" level="INFO">${ACCURACY} = {'source_diff': [3.37779999999982e-05, 3.3624999999998934e-05, 3.363799999999903e-05, 3.36250000000024e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.36250000000024e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:35.687" endtime="20201115 23:00:35.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.704" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.703" endtime="20201115 23:00:35.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.707" level="INFO">VALUE: [3.37779999999982e-05, 3.3624999999998934e-05, 3.363799999999903e-05, 3.36250000000024e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.36250000000024e-05, 3.3569000000000654e-05, 3.3624999999998934e-05, 3.363799999999903e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.366700000000111e-05, 3.3624999999998934e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.3596999999999794e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.370899999999982e-05, 3.3638999999998503e-05, 3.366699999999764e-05, 3.363900000000197e-05, 3.365299999999807e-05, 3.3624999999998934e-05, 3.363799999999903e-05, 3.3596999999999794e-05, 3.3624999999998934e-05, 3.3583000000000224e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.36380000000025e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.35839999999997e-05, 3.366699999999764e-05, 3.3638999999998503e-05, 3.368100000000068e-05, 3.363799999999903e-05, 3.363799999999903e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.363799999999903e-05, 3.365300000000154e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.365200000000207e-05]</msg>
<status status="PASS" starttime="20201115 23:00:35.705" endtime="20201115 23:00:35.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.701" endtime="20201115 23:00:35.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.710" endtime="20201115 23:00:35.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.713" endtime="20201115 23:00:35.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.712" endtime="20201115 23:00:35.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.708" endtime="20201115 23:00:35.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.339" endtime="20201115 23:00:35.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.337" endtime="20201115 23:00:35.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.337" endtime="20201115 23:00:35.734"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.737" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.745" endtime="20201115 23:00:35.762"></status>
</kw>
<msg timestamp="20201115 23:00:35.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.743" endtime="20201115 23:00:35.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.764" endtime="20201115 23:00:35.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.766" endtime="20201115 23:00:35.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.741" endtime="20201115 23:00:35.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.739" endtime="20201115 23:00:35.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.776" endtime="20201115 23:00:36.062"></status>
</kw>
<msg timestamp="20201115 23:00:36.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.774" endtime="20201115 23:00:36.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.066" endtime="20201115 23:00:36.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.075" endtime="20201115 23:00:36.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.771" endtime="20201115 23:00:36.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.769" endtime="20201115 23:00:36.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.081" level="INFO">${RESULT} = [{'time': 0.021955847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.37640000000021e-05, 'source_diff': 3.37640000000021e-05}, {'time': 0.021993431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:36.078" endtime="20201115 23:00:36.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.095" level="INFO">${ACCURACY} = {'source_diff': [3.37640000000021e-05, 3.370899999999982e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.35839999999997e-05, 3.363900000000197e-05, 3.365200000000207e-05, 3.363900000000197e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:36.082" endtime="20201115 23:00:36.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.099" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.098" endtime="20201115 23:00:36.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.102" level="INFO">VALUE: [3.37640000000021e-05, 3.370899999999982e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.35839999999997e-05, 3.363900000000197e-05, 3.365200000000207e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.363900000000197e-05, 3.36250000000024e-05, 3.365200000000207e-05, 3.3610999999999364e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3569000000000654e-05, 3.3596999999999794e-05, 3.369500000000025e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.372199999999992e-05, 3.365300000000154e-05, 3.3583000000000224e-05, 3.3638999999998503e-05, 3.359700000000326e-05, 3.363900000000197e-05, 3.370800000000035e-05, 3.369400000000078e-05, 3.36250000000024e-05, 3.363900000000197e-05, 3.36519999999986e-05, 3.363799999999903e-05, 3.3638999999998503e-05, 3.368100000000068e-05, 3.3638999999998503e-05, 3.3624999999998934e-05]</msg>
<status status="PASS" starttime="20201115 23:00:36.100" endtime="20201115 23:00:36.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.096" endtime="20201115 23:00:36.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.105" endtime="20201115 23:00:36.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.108" endtime="20201115 23:00:36.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.107" endtime="20201115 23:00:36.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.103" endtime="20201115 23:00:36.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.737" endtime="20201115 23:00:36.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.736" endtime="20201115 23:00:36.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.735" endtime="20201115 23:00:36.129"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.131" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.140" endtime="20201115 23:00:36.157"></status>
</kw>
<msg timestamp="20201115 23:00:36.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.138" endtime="20201115 23:00:36.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.159" endtime="20201115 23:00:36.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.162" endtime="20201115 23:00:36.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.135" endtime="20201115 23:00:36.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.133" endtime="20201115 23:00:36.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.171" endtime="20201115 23:00:36.457"></status>
</kw>
<msg timestamp="20201115 23:00:36.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.169" endtime="20201115 23:00:36.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.462" endtime="20201115 23:00:36.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.470" endtime="20201115 23:00:36.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.167" endtime="20201115 23:00:36.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.165" endtime="20201115 23:00:36.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.476" level="INFO">${RESULT} = [{'time': 0.021923833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.475000000000006e-05, 'source_diff': 3.475000000000006e-05}, {'time': 0.021961292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:36.473" endtime="20201115 23:00:36.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.490" level="INFO">${ACCURACY} = {'source_diff': [3.475000000000006e-05, 3.3624999999998934e-05, 3.4110999999999864e-05, 3.363799999999903e-05, 3.3638999999998503e-05, 3.4305000000001834e-05, 3.365200000000207e-05, 3.47779999999992e-...</msg>
<status status="PASS" starttime="20201115 23:00:36.477" endtime="20201115 23:00:36.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.494" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.493" endtime="20201115 23:00:36.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.497" level="INFO">VALUE: [3.475000000000006e-05, 3.3624999999998934e-05, 3.4110999999999864e-05, 3.363799999999903e-05, 3.3638999999998503e-05, 3.4305000000001834e-05, 3.365200000000207e-05, 3.47779999999992e-05, 3.5125000000000434e-05, 3.4597000000000794e-05, 3.426399999999913e-05, 3.42640000000026e-05, 3.370800000000035e-05, 3.4875000000000184e-05, 3.424999999999956e-05, 3.4097000000000294e-05, 3.369400000000078e-05, 3.4541000000002514e-05, 3.473699999999996e-05, 3.4611000000000364e-05, 3.4333000000000974e-05, 3.4540999999999045e-05, 3.426399999999913e-05, 3.45840000000007e-05, 3.363900000000197e-05, 3.518099999999871e-05, 3.369500000000025e-05, 3.427800000000217e-05, 3.4124999999999434e-05, 3.4624999999999934e-05, 3.4374999999999684e-05, 3.451399999999938e-05, 3.424999999999956e-05, 3.518099999999871e-05, 3.3638999999998503e-05, 3.4152999999998573e-05, 3.365300000000154e-05, 3.463900000000297e-05, 3.368100000000068e-05, 3.4554999999998615e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.4054999999998115e-05, 3.457000000000113e-05, 3.3790999999998295e-05, 3.466699999999864e-05, 3.4110999999999864e-05, 3.3847000000000044e-05, 3.397200000000017e-05, 3.369400000000078e-05]</msg>
<status status="PASS" starttime="20201115 23:00:36.495" endtime="20201115 23:00:36.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.491" endtime="20201115 23:00:36.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.500" endtime="20201115 23:00:36.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.503" endtime="20201115 23:00:36.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.502" endtime="20201115 23:00:36.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.498" endtime="20201115 23:00:36.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.132" endtime="20201115 23:00:36.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.130" endtime="20201115 23:00:36.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.130" endtime="20201115 23:00:36.524"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.527" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.535" endtime="20201115 23:00:36.553"></status>
</kw>
<msg timestamp="20201115 23:00:36.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.534" endtime="20201115 23:00:36.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.554" endtime="20201115 23:00:36.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.556" endtime="20201115 23:00:36.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.531" endtime="20201115 23:00:36.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.529" endtime="20201115 23:00:36.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.566" endtime="20201115 23:00:36.851"></status>
</kw>
<msg timestamp="20201115 23:00:36.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.564" endtime="20201115 23:00:36.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.855" endtime="20201115 23:00:36.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.864" endtime="20201115 23:00:36.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.561" endtime="20201115 23:00:36.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.560" endtime="20201115 23:00:36.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.870" level="INFO">${RESULT} = [{'time': 0.022450417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.62780000000007e-05, 'source_diff': 3.62780000000007e-05}, {'time': 0.022491236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:36.867" endtime="20201115 23:00:36.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.885" level="INFO">${ACCURACY} = {'source_diff': [3.62780000000007e-05, 3.5139000000000004e-05, 3.501399999999988e-05, 3.605599999999959e-05, 3.6153000000000574e-05, 3.544400000000253e-05, 3.4847000000001044e-05, 3.5625000000000934e-...</msg>
<status status="PASS" starttime="20201115 23:00:36.871" endtime="20201115 23:00:36.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.890" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.889" endtime="20201115 23:00:36.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.892" level="INFO">VALUE: [3.62780000000007e-05, 3.5139000000000004e-05, 3.501399999999988e-05, 3.605599999999959e-05, 3.6153000000000574e-05, 3.544400000000253e-05, 3.4847000000001044e-05, 3.5625000000000934e-05, 3.5139000000000004e-05, 3.49719999999977e-05, 3.5832999999999005e-05, 3.6124999999997964e-05, 3.525000000000056e-05, 3.497200000000117e-05, 3.5653000000000074e-05, 3.520899999999785e-05, 3.498599999999727e-05, 3.49719999999977e-05, 3.4804999999998865e-05, 3.565199999999713e-05, 3.543099999999896e-05, 3.516700000000261e-05, 3.516700000000261e-05, 3.5125000000000434e-05, 3.50840000000012e-05, 3.567999999999974e-05, 3.507000000000163e-05, 3.5611000000001364e-05, 3.491599999999942e-05, 3.5902999999996854e-05, 3.5068999999998685e-05, 3.5582999999998755e-05, 3.545900000000157e-05, 3.518100000000218e-05, 3.520799999999838e-05, 3.604200000000002e-05, 3.6139000000001004e-05, 3.5527000000000475e-05, 3.582000000000238e-05, 3.54589999999981e-05, 3.520900000000132e-05, 3.604200000000002e-05, 3.6124999999997964e-05, 3.541599999999992e-05, 3.5847000000002044e-05, 3.547200000000167e-05, 3.520900000000132e-05, 3.49719999999977e-05, 3.54719999999982e-05, 3.544400000000253e-05]</msg>
<status status="PASS" starttime="20201115 23:00:36.891" endtime="20201115 23:00:36.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.886" endtime="20201115 23:00:36.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.895" endtime="20201115 23:00:36.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.899" endtime="20201115 23:00:36.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.897" endtime="20201115 23:00:36.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.894" endtime="20201115 23:00:36.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.527" endtime="20201115 23:00:36.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.525" endtime="20201115 23:00:36.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.525" endtime="20201115 23:00:36.920"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.922" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.931" endtime="20201115 23:00:36.947"></status>
</kw>
<msg timestamp="20201115 23:00:36.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.929" endtime="20201115 23:00:36.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.948" endtime="20201115 23:00:36.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.951" endtime="20201115 23:00:36.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.926" endtime="20201115 23:00:36.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.924" endtime="20201115 23:00:36.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.959" endtime="20201115 23:00:37.245"></status>
</kw>
<msg timestamp="20201115 23:00:37.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.958" endtime="20201115 23:00:37.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.249" endtime="20201115 23:00:37.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.257" endtime="20201115 23:00:37.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.955" endtime="20201115 23:00:37.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.954" endtime="20201115 23:00:37.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.264" level="INFO">${RESULT} = [{'time': 0.022011444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6305000000000365e-05, 'source_diff': 3.6305000000000365e-05}, {'time': 0.022050097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:37.261" endtime="20201115 23:00:37.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.277" level="INFO">${ACCURACY} = {'source_diff': [3.6305000000000365e-05, 3.6403000000000824e-05, 3.6917000000000894e-05, 3.598599999999827e-05, 3.672199999999945e-05, 3.61520000000011e-05, 3.6388999999997784e-05, 3.5860999999998144e...</msg>
<status status="PASS" starttime="20201115 23:00:37.265" endtime="20201115 23:00:37.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.282" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.281" endtime="20201115 23:00:37.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.284" level="INFO">VALUE: [3.6305000000000365e-05, 3.6403000000000824e-05, 3.6917000000000894e-05, 3.598599999999827e-05, 3.672199999999945e-05, 3.61520000000011e-05, 3.6388999999997784e-05, 3.5860999999998144e-05, 3.607000000000263e-05, 3.697299999999917e-05, 3.692999999999752e-05, 3.698600000000274e-05, 3.699999999999884e-05, 3.699999999999884e-05, 3.5847000000002044e-05, 3.580599999999934e-05, 3.695800000000013e-05, 3.594499999999903e-05, 3.673600000000249e-05, 3.700000000000231e-05, 3.704200000000102e-05, 3.592999999999999e-05, 3.5833000000002474e-05, 3.698699999999874e-05, 3.7041000000001545e-05, 3.701399999999841e-05, 3.6180999999999713e-05, 3.650000000000181e-05, 3.69719999999997e-05, 3.594399999999956e-05, 3.598600000000174e-05, 3.698600000000274e-05, 3.694400000000056e-05, 3.702800000000145e-05, 3.593100000000293e-05, 3.6389000000001254e-05, 3.69719999999997e-05, 3.701400000000188e-05, 3.700000000000231e-05, 3.698599999999927e-05, 3.5916999999999893e-05, 3.5903000000000324e-05, 3.7068999999997215e-05, 3.6096999999998824e-05, 3.6430999999999963e-05, 3.697200000000317e-05, 3.594499999999903e-05, 3.5903000000000324e-05, 3.6417000000000394e-05, 3.622199999999895e-05]</msg>
<status status="PASS" starttime="20201115 23:00:37.283" endtime="20201115 23:00:37.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.278" endtime="20201115 23:00:37.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.288" endtime="20201115 23:00:37.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.291" endtime="20201115 23:00:37.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.290" endtime="20201115 23:00:37.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.286" endtime="20201115 23:00:37.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.923" endtime="20201115 23:00:37.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.921" endtime="20201115 23:00:37.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.920" endtime="20201115 23:00:37.312"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.315" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.323" endtime="20201115 23:00:37.341"></status>
</kw>
<msg timestamp="20201115 23:00:37.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.321" endtime="20201115 23:00:37.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.342" endtime="20201115 23:00:37.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.345" endtime="20201115 23:00:37.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.319" endtime="20201115 23:00:37.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.317" endtime="20201115 23:00:37.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.354" endtime="20201115 23:00:37.640"></status>
</kw>
<msg timestamp="20201115 23:00:37.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022075347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.352" endtime="20201115 23:00:37.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022075347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.644" endtime="20201115 23:00:37.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.652" endtime="20201115 23:00:37.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.350" endtime="20201115 23:00:37.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.348" endtime="20201115 23:00:37.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.659" level="INFO">${RESULT} = [{'time': 0.022075347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8040999999999076e-05, 'source_diff': 3.8040999999999076e-05}, {'time': 0.022118333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:37.655" endtime="20201115 23:00:37.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.672" level="INFO">${ACCURACY} = {'source_diff': [3.8040999999999076e-05, 3.8083000000001255e-05, 3.7318999999997465e-05, 3.748599999999977e-05, 3.8054999999998645e-05, 3.774999999999959e-05, 3.749999999999934e-05, 3.719400000000081e...</msg>
<status status="PASS" starttime="20201115 23:00:37.660" endtime="20201115 23:00:37.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.677" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.676" endtime="20201115 23:00:37.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.680" level="INFO">VALUE: [3.8040999999999076e-05, 3.8083000000001255e-05, 3.7318999999997465e-05, 3.748599999999977e-05, 3.8054999999998645e-05, 3.774999999999959e-05, 3.749999999999934e-05, 3.719400000000081e-05, 3.743000000000149e-05, 3.7804999999998395e-05, 3.7666999999998174e-05, 3.7804999999998395e-05, 3.7624999999999464e-05, 3.7861000000000145e-05, 3.776399999999916e-05, 3.751399999999891e-05, 3.758400000000023e-05, 3.745800000000063e-05, 3.7667000000001644e-05, 3.720899999999985e-05, 3.798600000000027e-05, 3.749999999999934e-05, 3.802799999999898e-05, 3.7874999999999714e-05, 3.7360999999999644e-05, 3.7403000000001824e-05, 3.765199999999913e-05, 3.722299999999942e-05, 3.7444999999997064e-05, 3.807000000000116e-05, 3.8083000000001255e-05, 3.7569000000001185e-05, 3.7555000000001615e-05, 3.770800000000088e-05, 3.8124999999999964e-05, 3.7597000000000325e-05, 3.801399999999941e-05, 3.742999999999802e-05, 3.7181000000000713e-05, 3.744400000000106e-05, 3.7832999999997535e-05, 3.7375000000002684e-05, 3.7152999999998104e-05, 3.79720000000007e-05, 3.7569000000001185e-05, 3.8082999999997785e-05, 3.7597000000000325e-05, 3.7931000000001464e-05, 3.7431000000000964e-05, 3.720800000000038e-05]</msg>
<status status="PASS" starttime="20201115 23:00:37.678" endtime="20201115 23:00:37.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.673" endtime="20201115 23:00:37.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.683" endtime="20201115 23:00:37.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.686" endtime="20201115 23:00:37.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.685" endtime="20201115 23:00:37.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.681" endtime="20201115 23:00:37.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.315" endtime="20201115 23:00:37.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.313" endtime="20201115 23:00:37.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.313" endtime="20201115 23:00:37.707"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.710" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.718" endtime="20201115 23:00:37.736"></status>
</kw>
<msg timestamp="20201115 23:00:37.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.716" endtime="20201115 23:00:37.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.738" endtime="20201115 23:00:37.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.740" endtime="20201115 23:00:37.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.714" endtime="20201115 23:00:37.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.712" endtime="20201115 23:00:37.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.749" endtime="20201115 23:00:38.035"></status>
</kw>
<msg timestamp="20201115 23:00:38.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.747" endtime="20201115 23:00:38.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.039" endtime="20201115 23:00:38.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.047" endtime="20201115 23:00:38.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.745" endtime="20201115 23:00:38.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.743" endtime="20201115 23:00:38.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.054" level="INFO">${RESULT} = [{'time': 0.022104611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8347000000001075e-05, 'source_diff': 3.8347000000001075e-05}, {'time': 0.022146597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:38.051" endtime="20201115 23:00:38.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.068" level="INFO">${ACCURACY} = {'source_diff': [3.8347000000001075e-05, 3.875000000000059e-05, 3.8138999999999534e-05, 3.8291000000002795e-05, 3.844400000000206e-05, 3.820800000000138e-05, 3.8318999999998465e-05, 3.8554999999999146...</msg>
<status status="PASS" starttime="20201115 23:00:38.055" endtime="20201115 23:00:38.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.072" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.071" endtime="20201115 23:00:38.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.075" level="INFO">VALUE: [3.8347000000001075e-05, 3.875000000000059e-05, 3.8138999999999534e-05, 3.8291000000002795e-05, 3.844400000000206e-05, 3.820800000000138e-05, 3.8318999999998465e-05, 3.8554999999999146e-05, 3.830599999999837e-05, 3.826400000000313e-05, 3.8874999999997245e-05, 3.876400000000016e-05, 3.8611000000000895e-05, 3.8945000000002034e-05, 3.825000000000009e-05, 3.8375000000000214e-05, 3.832000000000141e-05, 3.8361000000000645e-05, 3.897199999999823e-05, 3.831999999999794e-05, 3.9139000000000534e-05, 3.901400000000041e-05, 3.9069000000002685e-05, 3.8832999999998535e-05, 3.870799999999841e-05, 3.854199999999905e-05, 3.850000000000034e-05, 3.81659999999992e-05, 3.892999999999952e-05, 3.8889000000000284e-05, 3.8861000000001145e-05, 3.8431000000001964e-05, 3.8568999999998715e-05, 3.905599999999912e-05, 3.8652999999999604e-05, 3.8333000000001505e-05, 3.86659999999997e-05, 3.901400000000041e-05, 3.8568999999998715e-05, 3.822200000000095e-05, 3.8361000000000645e-05, 3.8152999999999104e-05, 3.8180999999998244e-05, 3.8861000000001145e-05, 3.8195000000001283e-05, 3.8861000000001145e-05, 3.87919999999993e-05, 3.906999999999869e-05, 3.830599999999837e-05, 3.876400000000016e-05]</msg>
<status status="PASS" starttime="20201115 23:00:38.074" endtime="20201115 23:00:38.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.069" endtime="20201115 23:00:38.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.078" endtime="20201115 23:00:38.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.081" endtime="20201115 23:00:38.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.080" endtime="20201115 23:00:38.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.076" endtime="20201115 23:00:38.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.710" endtime="20201115 23:00:38.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.709" endtime="20201115 23:00:38.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.708" endtime="20201115 23:00:38.102"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.105" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.113" endtime="20201115 23:00:38.130"></status>
</kw>
<msg timestamp="20201115 23:00:38.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.111" endtime="20201115 23:00:38.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.132" endtime="20201115 23:00:38.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.134" endtime="20201115 23:00:38.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.109" endtime="20201115 23:00:38.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.107" endtime="20201115 23:00:38.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.143" endtime="20201115 23:00:38.429"></status>
</kw>
<msg timestamp="20201115 23:00:38.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.141" endtime="20201115 23:00:38.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.433" endtime="20201115 23:00:38.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.442" endtime="20201115 23:00:38.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.139" endtime="20201115 23:00:38.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.137" endtime="20201115 23:00:38.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.449" level="INFO">${RESULT} = [{'time': 0.021918389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9903000000000854e-05, 'source_diff': 3.9903000000000854e-05}, {'time': 0.021960361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:38.445" endtime="20201115 23:00:38.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.463" level="INFO">${ACCURACY} = {'source_diff': [3.9903000000000854e-05, 3.9416999999999924e-05, 3.927800000000023e-05, 3.9194999999998814e-05, 3.9403000000000354e-05, 3.980599999999987e-05, 3.97920000000003e-05, 3.945799999999916e-...</msg>
<status status="PASS" starttime="20201115 23:00:38.450" endtime="20201115 23:00:38.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.468" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.467" endtime="20201115 23:00:38.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.471" level="INFO">VALUE: [3.9903000000000854e-05, 3.9416999999999924e-05, 3.927800000000023e-05, 3.9194999999998814e-05, 3.9403000000000354e-05, 3.980599999999987e-05, 3.97920000000003e-05, 3.945799999999916e-05, 3.9611000000001895e-05, 3.952800000000048e-05, 3.9195000000002284e-05, 4.001400000000141e-05, 3.9304999999999896e-05, 4.020799999999991e-05, 3.919399999999934e-05, 3.970799999999941e-05, 3.969399999999984e-05, 3.998700000000174e-05, 3.9875000000001715e-05, 3.993000000000052e-05, 4.0082999999999785e-05, 3.9346999999998605e-05, 3.9318999999999465e-05, 3.9638999999997565e-05, 4.0082999999999785e-05, 3.92919999999998e-05, 3.9596999999998855e-05, 3.9846999999999105e-05, 3.9805000000000396e-05, 4.0055000000000646e-05, 4.0069000000000216e-05, 3.952800000000048e-05, 3.9680999999999744e-05, 3.944399999999959e-05, 3.952800000000048e-05, 3.9194999999998814e-05, 3.97920000000003e-05, 3.9125000000000965e-05, 3.9708999999998884e-05, 3.9194999999998814e-05, 3.980599999999987e-05, 3.974999999999812e-05, 3.932000000000241e-05, 3.931999999999894e-05, 3.973700000000149e-05, 3.970799999999941e-05, 3.988799999999834e-05, 3.950000000000134e-05, 3.9236999999997524e-05, 3.9596999999998855e-05]</msg>
<status status="PASS" starttime="20201115 23:00:38.469" endtime="20201115 23:00:38.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.464" endtime="20201115 23:00:38.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.474" endtime="20201115 23:00:38.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.477" endtime="20201115 23:00:38.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.476" endtime="20201115 23:00:38.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.472" endtime="20201115 23:00:38.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.105" endtime="20201115 23:00:38.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.104" endtime="20201115 23:00:38.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.103" endtime="20201115 23:00:38.498"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.500" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.509" endtime="20201115 23:00:38.524"></status>
</kw>
<msg timestamp="20201115 23:00:38.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.507" endtime="20201115 23:00:38.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.526" endtime="20201115 23:00:38.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.528" endtime="20201115 23:00:38.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.505" endtime="20201115 23:00:38.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.502" endtime="20201115 23:00:38.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.538" endtime="20201115 23:00:38.824"></status>
</kw>
<msg timestamp="20201115 23:00:38.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.536" endtime="20201115 23:00:38.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.828" endtime="20201115 23:00:38.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.836" endtime="20201115 23:00:38.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.533" endtime="20201115 23:00:38.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.532" endtime="20201115 23:00:38.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.843" level="INFO">${RESULT} = [{'time': 0.022079278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.055600000000062e-05, 'source_diff': 4.055600000000062e-05}, {'time': 0.022122278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:38.839" endtime="20201115 23:00:38.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.856" level="INFO">${ACCURACY} = {'source_diff': [4.055600000000062e-05, 4.0416999999997455e-05, 4.107000000000069e-05, 4.0666999999997705e-05, 4.026400000000166e-05, 4.0431000000000494e-05, 4.088800000000281e-05, 4.086200000000262e-...</msg>
<status status="PASS" starttime="20201115 23:00:38.844" endtime="20201115 23:00:38.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.861" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.860" endtime="20201115 23:00:38.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.863" level="INFO">VALUE: [4.055600000000062e-05, 4.0416999999997455e-05, 4.107000000000069e-05, 4.0666999999997705e-05, 4.026400000000166e-05, 4.0431000000000494e-05, 4.088800000000281e-05, 4.086200000000262e-05, 4.020799999999991e-05, 4.0375000000002215e-05, 4.019400000000034e-05, 4.075000000000259e-05, 4.0639000000002035e-05, 4.07920000000013e-05, 4.0153000000001104e-05, 4.068000000000127e-05, 4.0638999999998565e-05, 4.0138999999998065e-05, 4.09859999999998e-05, 4.1069000000001216e-05, 4.0569000000000716e-05, 4.073600000000302e-05, 4.0167000000000674e-05, 4.0181000000000244e-05, 4.0888999999998815e-05, 4.074999999999912e-05, 4.031999999999994e-05, 4.09859999999998e-05, 4.0360999999999175e-05, 4.076399999999869e-05, 4.0888999999998815e-05, 4.0444999999996595e-05, 4.116599999999873e-05, 4.0194999999999814e-05, 4.03059999999969e-05, 4.0694999999996845e-05, 4.026399999999819e-05, 4.090200000000238e-05, 4.099999999999937e-05, 4.1055000000001646e-05, 4.0818999999997496e-05, 4.0346999999999605e-05, 4.0540999999998106e-05, 4.022199999999948e-05, 4.0625000000002465e-05, 4.074999999999912e-05, 4.0139000000001535e-05, 4.066599999999823e-05, 4.0124999999998495e-05, 4.0431000000000494e-05]</msg>
<status status="PASS" starttime="20201115 23:00:38.862" endtime="20201115 23:00:38.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.857" endtime="20201115 23:00:38.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.866" endtime="20201115 23:00:38.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.870" endtime="20201115 23:00:38.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.868" endtime="20201115 23:00:38.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.864" endtime="20201115 23:00:38.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.501" endtime="20201115 23:00:38.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.499" endtime="20201115 23:00:38.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.498" endtime="20201115 23:00:38.891"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.893" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.901" endtime="20201115 23:00:38.917"></status>
</kw>
<msg timestamp="20201115 23:00:38.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.900" endtime="20201115 23:00:38.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.919" endtime="20201115 23:00:38.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.922" endtime="20201115 23:00:38.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.897" endtime="20201115 23:00:38.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.895" endtime="20201115 23:00:38.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.931" endtime="20201115 23:00:39.218"></status>
</kw>
<msg timestamp="20201115 23:00:39.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.929" endtime="20201115 23:00:39.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.222" endtime="20201115 23:00:39.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.230" endtime="20201115 23:00:39.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.927" endtime="20201115 23:00:39.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.925" endtime="20201115 23:00:39.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.237" level="INFO">${RESULT} = [{'time': 0.021940306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1709000000000884e-05, 'source_diff': 4.1709000000000884e-05}, {'time': 0.021988319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:39.234" endtime="20201115 23:00:39.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.250" level="INFO">${ACCURACY} = {'source_diff': [4.1709000000000884e-05, 4.201300000000047e-05, 4.1667000000002175e-05, 4.1124999999999495e-05, 4.202800000000298e-05, 4.1902999999999385e-05, 4.1319000000001466e-05, 4.192999999999905...</msg>
<status status="PASS" starttime="20201115 23:00:39.238" endtime="20201115 23:00:39.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.255" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.254" endtime="20201115 23:00:39.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.257" level="INFO">VALUE: [4.1709000000000884e-05, 4.201300000000047e-05, 4.1667000000002175e-05, 4.1124999999999495e-05, 4.202800000000298e-05, 4.1902999999999385e-05, 4.1319000000001466e-05, 4.192999999999905e-05, 4.123600000000005e-05, 4.1804999999998926e-05, 4.194399999999862e-05, 4.2124999999997026e-05, 4.2082999999998316e-05, 4.194399999999862e-05, 4.2111000000000925e-05, 4.1666999999998705e-05, 4.18059999999984e-05, 4.1973000000000704e-05, 4.179199999999883e-05, 4.201399999999994e-05, 4.1402999999998885e-05, 4.1597000000000856e-05, 4.158400000000076e-05, 4.205600000000212e-05, 4.127799999999876e-05, 4.1695000000001314e-05, 4.175000000000012e-05, 4.1180999999997775e-05, 4.1930999999998525e-05, 4.1568999999998246e-05, 4.192999999999905e-05, 4.1555000000002146e-05, 4.1624999999999995e-05, 4.149999999999987e-05, 4.197199999999776e-05, 4.1389000000002785e-05, 4.1681000000001744e-05, 4.151400000000291e-05, 4.2068999999998746e-05, 4.194400000000209e-05, 4.155599999999815e-05, 4.1875000000000245e-05, 4.1930999999998525e-05, 4.155599999999815e-05, 4.1638999999999565e-05, 4.19860000000008e-05, 4.1888999999999815e-05, 4.1445000000001064e-05, 4.155600000000162e-05, 4.18059999999984e-05]</msg>
<status status="PASS" starttime="20201115 23:00:39.256" endtime="20201115 23:00:39.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.251" endtime="20201115 23:00:39.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.260" endtime="20201115 23:00:39.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.264" endtime="20201115 23:00:39.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.262" endtime="20201115 23:00:39.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.259" endtime="20201115 23:00:39.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.894" endtime="20201115 23:00:39.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.892" endtime="20201115 23:00:39.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.891" endtime="20201115 23:00:39.285"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.287" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.296" endtime="20201115 23:00:39.314"></status>
</kw>
<msg timestamp="20201115 23:00:39.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.294" endtime="20201115 23:00:39.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.315" endtime="20201115 23:00:39.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.318" endtime="20201115 23:00:39.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.292" endtime="20201115 23:00:39.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.289" endtime="20201115 23:00:39.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.327" endtime="20201115 23:00:39.615"></status>
</kw>
<msg timestamp="20201115 23:00:39.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.325" endtime="20201115 23:00:39.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.619" endtime="20201115 23:00:39.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.628" endtime="20201115 23:00:39.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.323" endtime="20201115 23:00:39.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.321" endtime="20201115 23:00:39.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.634" level="INFO">${RESULT} = [{'time': 0.022446111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.294399999999962e-05, 'source_diff': 4.294399999999962e-05}, {'time': 0.022494111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:39.631" endtime="20201115 23:00:39.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.648" level="INFO">${ACCURACY} = {'source_diff': [4.294399999999962e-05, 4.223600000000105e-05, 4.227799999999976e-05, 4.2304999999999426e-05, 4.245799999999869e-05, 4.2889000000000815e-05, 4.2680999999999275e-05, 4.2723000000001454e...</msg>
<status status="PASS" starttime="20201115 23:00:39.635" endtime="20201115 23:00:39.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.652" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.651" endtime="20201115 23:00:39.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.655" level="INFO">VALUE: [4.294399999999962e-05, 4.223600000000105e-05, 4.227799999999976e-05, 4.2304999999999426e-05, 4.245799999999869e-05, 4.2889000000000815e-05, 4.2680999999999275e-05, 4.2723000000001454e-05, 4.274999999999765e-05, 4.2930999999999525e-05, 4.2708999999998415e-05, 4.279199999999983e-05, 4.255599999999915e-05, 4.3041000000000607e-05, 4.2944999999999095e-05, 4.232000000000194e-05, 4.2931000000002995e-05, 4.255600000000262e-05, 4.2638999999997096e-05, 4.2846999999998636e-05, 4.28059999999994e-05, 4.2875000000001245e-05, 4.2389000000000315e-05, 4.272199999999851e-05, 4.2139000000000065e-05, 4.2375000000000745e-05, 4.2554999999999676e-05, 4.244399999999912e-05, 4.2166999999999205e-05, 4.293000000000005e-05, 4.29860000000018e-05, 4.251399999999697e-05, 4.23059999999989e-05, 4.3068999999999746e-05, 4.28059999999994e-05, 4.226400000000019e-05, 4.298599999999833e-05, 4.301399999999747e-05, 4.2402999999999885e-05, 4.283399999999854e-05, 4.2208999999997915e-05, 4.230600000000237e-05, 4.2374999999997276e-05, 4.2167000000002675e-05, 4.2680999999999275e-05, 4.247199999999826e-05, 4.2416999999999455e-05, 4.226400000000019e-05, 4.3012999999998e-05, 4.244400000000259e-05]</msg>
<status status="PASS" starttime="20201115 23:00:39.653" endtime="20201115 23:00:39.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.649" endtime="20201115 23:00:39.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.658" endtime="20201115 23:00:39.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.662" endtime="20201115 23:00:39.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.660" endtime="20201115 23:00:39.682"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.656" endtime="20201115 23:00:39.682"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.288" endtime="20201115 23:00:39.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.286" endtime="20201115 23:00:39.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.285" endtime="20201115 23:00:39.683"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.685" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.693" endtime="20201115 23:00:39.712"></status>
</kw>
<msg timestamp="20201115 23:00:39.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.692" endtime="20201115 23:00:39.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.713" endtime="20201115 23:00:39.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.716" endtime="20201115 23:00:39.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.689" endtime="20201115 23:00:39.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.687" endtime="20201115 23:00:39.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.725" endtime="20201115 23:00:40.011"></status>
</kw>
<msg timestamp="20201115 23:00:40.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.723" endtime="20201115 23:00:40.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.015" endtime="20201115 23:00:40.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.024" endtime="20201115 23:00:40.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.720" endtime="20201115 23:00:40.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.719" endtime="20201115 23:00:40.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.030" level="INFO">${RESULT} = [{'time': 0.021994667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333399999999904e-05, 'source_diff': 4.333399999999904e-05}, {'time': 0.022042639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:40.027" endtime="20201115 23:00:40.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.045" level="INFO">${ACCURACY} = {'source_diff': [4.333399999999904e-05, 4.323599999999858e-05, 4.3458999999999165e-05, 4.323599999999858e-05, 4.331999999999947e-05, 4.377800000000126e-05, 4.34999999999984e-05, 4.4111000000002926e-05...</msg>
<status status="PASS" starttime="20201115 23:00:40.031" endtime="20201115 23:00:40.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.050" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.049" endtime="20201115 23:00:40.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.052" level="INFO">VALUE: [4.333399999999904e-05, 4.323599999999858e-05, 4.3458999999999165e-05, 4.323599999999858e-05, 4.331999999999947e-05, 4.377800000000126e-05, 4.34999999999984e-05, 4.4111000000002926e-05, 4.3360999999998706e-05, 4.3124999999998026e-05, 4.3582999999999816e-05, 4.4097000000003356e-05, 4.3388999999997846e-05, 4.317999999999683e-05, 4.4125000000002496e-05, 4.4139000000002065e-05, 4.4069000000000746e-05, 4.3639000000001565e-05, 4.4069000000000746e-05, 4.3318999999999996e-05, 4.344400000000012e-05, 4.324999999999815e-05, 4.3389000000001315e-05, 4.3375000000001745e-05, 4.4153000000001635e-05, 4.3610999999998956e-05, 4.3195000000002814e-05, 4.3945000000000095e-05, 4.33059999999999e-05, 4.3610999999998956e-05, 4.3958999999999665e-05, 4.3431000000000025e-05, 4.377799999999779e-05, 4.324999999999815e-05, 4.358399999999929e-05, 4.407000000000022e-05, 4.400000000000237e-05, 4.3332999999999566e-05, 4.395800000000019e-05, 4.379199999999736e-05, 4.3833000000000066e-05, 4.34860000000023e-05, 4.3402999999997416e-05, 4.3582999999999816e-05, 4.374999999999865e-05, 4.4152999999998166e-05, 4.3318999999999996e-05, 4.4124999999999026e-05, 4.3305000000000426e-05, 4.3389000000001315e-05]</msg>
<status status="PASS" starttime="20201115 23:00:40.051" endtime="20201115 23:00:40.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.046" endtime="20201115 23:00:40.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.056" endtime="20201115 23:00:40.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.059" endtime="20201115 23:00:40.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.058" endtime="20201115 23:00:40.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.054" endtime="20201115 23:00:40.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.686" endtime="20201115 23:00:40.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.684" endtime="20201115 23:00:40.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.683" endtime="20201115 23:00:40.080"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.083" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.091" endtime="20201115 23:00:40.108"></status>
</kw>
<msg timestamp="20201115 23:00:40.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.089" endtime="20201115 23:00:40.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.110" endtime="20201115 23:00:40.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.112" endtime="20201115 23:00:40.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.087" endtime="20201115 23:00:40.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.085" endtime="20201115 23:00:40.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.121" endtime="20201115 23:00:40.408"></status>
</kw>
<msg timestamp="20201115 23:00:40.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.119" endtime="20201115 23:00:40.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.412" endtime="20201115 23:00:40.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.420" endtime="20201115 23:00:40.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.117" endtime="20201115 23:00:40.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.115" endtime="20201115 23:00:40.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.427" level="INFO">${RESULT} = [{'time': 0.021989514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4597000000000386e-05, 'source_diff': 4.4597000000000386e-05}, {'time': 0.022038514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:40.423" endtime="20201115 23:00:40.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.441" level="INFO">${ACCURACY} = {'source_diff': [4.4597000000000386e-05, 4.4638999999999096e-05, 4.4624999999999526e-05, 4.4708999999996946e-05, 4.426400000000219e-05, 4.4431000000001025e-05, 4.455600000000115e-05, 4.474999999999965...</msg>
<status status="PASS" starttime="20201115 23:00:40.428" endtime="20201115 23:00:40.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.445" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.444" endtime="20201115 23:00:40.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.448" level="INFO">VALUE: [4.4597000000000386e-05, 4.4638999999999096e-05, 4.4624999999999526e-05, 4.4708999999996946e-05, 4.426400000000219e-05, 4.4431000000001025e-05, 4.455600000000115e-05, 4.474999999999965e-05, 4.415199999999869e-05, 4.484800000000011e-05, 4.490199999999944e-05, 4.44999999999994e-05, 4.4083000000000316e-05, 4.4874999999999776e-05, 4.4903000000002385e-05, 4.4360999999999706e-05, 4.4208999999999915e-05, 4.445800000000069e-05, 4.4819000000001497e-05, 4.44999999999994e-05, 4.502799999999904e-05, 4.4333000000000566e-05, 4.443000000000155e-05, 4.4861000000000206e-05, 4.4319000000000996e-05, 4.4445000000000595e-05, 4.507000000000122e-05, 4.432000000000047e-05, 4.4930999999998056e-05, 4.4653000000002135e-05, 4.5111000000000456e-05, 4.4638999999999096e-05, 4.4459000000000165e-05, 4.4638999999999096e-05, 4.4195000000000345e-05, 4.480599999999793e-05, 4.420800000000044e-05, 4.429199999999786e-05, 4.476299999999975e-05, 4.482000000000097e-05, 4.486199999999968e-05, 4.420800000000044e-05, 4.444400000000112e-05, 4.491599999999901e-05, 4.4374999999999276e-05, 4.451400000000244e-05, 4.502699999999957e-05, 4.4638999999999096e-05, 4.4888999999999346e-05, 4.452799999999854e-05]</msg>
<status status="PASS" starttime="20201115 23:00:40.446" endtime="20201115 23:00:40.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.442" endtime="20201115 23:00:40.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.451" endtime="20201115 23:00:40.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.455" endtime="20201115 23:00:40.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.453" endtime="20201115 23:00:40.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.450" endtime="20201115 23:00:40.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.083" endtime="20201115 23:00:40.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.081" endtime="20201115 23:00:40.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.081" endtime="20201115 23:00:40.476"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.478" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.487" endtime="20201115 23:00:40.505"></status>
</kw>
<msg timestamp="20201115 23:00:40.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.485" endtime="20201115 23:00:40.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.506" endtime="20201115 23:00:40.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.508" endtime="20201115 23:00:40.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.483" endtime="20201115 23:00:40.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.480" endtime="20201115 23:00:40.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.517" endtime="20201115 23:00:40.803"></status>
</kw>
<msg timestamp="20201115 23:00:40.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.516" endtime="20201115 23:00:40.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.808" endtime="20201115 23:00:40.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.816" endtime="20201115 23:00:40.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.513" endtime="20201115 23:00:40.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.512" endtime="20201115 23:00:40.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.823" level="INFO">${RESULT} = [{'time': 0.022378375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.559699999999792e-05, 'source_diff': 4.559699999999792e-05}, {'time': 0.022426347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:40.819" endtime="20201115 23:00:40.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.841" level="INFO">${ACCURACY} = {'source_diff': [4.559699999999792e-05, 4.523600000000058e-05, 4.505500000000218e-05, 4.5639000000000096e-05, 4.5417000000002455e-05, 4.5125000000000026e-05, 4.5416999999998986e-05, 4.554199999999911e...</msg>
<status status="PASS" starttime="20201115 23:00:40.828" endtime="20201115 23:00:40.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.845" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.844" endtime="20201115 23:00:40.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.848" level="INFO">VALUE: [4.559699999999792e-05, 4.523600000000058e-05, 4.505500000000218e-05, 4.5639000000000096e-05, 4.5417000000002455e-05, 4.5125000000000026e-05, 4.5416999999998986e-05, 4.554199999999911e-05, 4.5945000000002095e-05, 4.542999999999908e-05, 4.5694999999998376e-05, 4.5167000000002205e-05, 4.576400000000022e-05, 4.556999999999825e-05, 4.555599999999868e-05, 4.5444999999998126e-05, 4.526399999999972e-05, 4.55130000000005e-05, 4.576400000000022e-05, 4.56939999999989e-05, 4.592999999999958e-05, 4.519400000000187e-05, 4.5625000000000526e-05, 4.548600000000083e-05, 4.516599999999926e-05, 4.547200000000126e-05, 4.5625000000000526e-05, 4.5403000000002885e-05, 4.6125000000001026e-05, 4.55000000000004e-05, 4.51939999999984e-05, 4.5680999999998806e-05, 4.5930999999999056e-05, 4.556999999999825e-05, 4.5445000000001595e-05, 4.5681000000002275e-05, 4.551399999999997e-05, 4.5639000000000096e-05, 4.5181000000001775e-05, 4.576400000000022e-05, 4.597200000000176e-05, 4.6125000000001026e-05, 4.532000000000147e-05, 4.529099999999939e-05, 4.552700000000007e-05, 4.607000000000222e-05, 4.6083000000002317e-05, 4.554099999999964e-05, 4.5569000000002247e-05, 4.567999999999933e-05]</msg>
<status status="PASS" starttime="20201115 23:00:40.847" endtime="20201115 23:00:40.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.842" endtime="20201115 23:00:40.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.851" endtime="20201115 23:00:40.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.854" endtime="20201115 23:00:40.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.853" endtime="20201115 23:00:40.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.849" endtime="20201115 23:00:40.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.479" endtime="20201115 23:00:40.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.477" endtime="20201115 23:00:40.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.476" endtime="20201115 23:00:40.876"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.878" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.886" endtime="20201115 23:00:40.904"></status>
</kw>
<msg timestamp="20201115 23:00:40.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.885" endtime="20201115 23:00:40.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.905" endtime="20201115 23:00:40.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.907" endtime="20201115 23:00:40.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.882" endtime="20201115 23:00:40.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.880" endtime="20201115 23:00:40.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.916" endtime="20201115 23:00:41.203"></status>
</kw>
<msg timestamp="20201115 23:00:41.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.915" endtime="20201115 23:00:41.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.207" endtime="20201115 23:00:41.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.216" endtime="20201115 23:00:41.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.912" endtime="20201115 23:00:41.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.911" endtime="20201115 23:00:41.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.222" level="INFO">${RESULT} = [{'time': 0.021986889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6944999999999626e-05, 'source_diff': 4.6944999999999626e-05}, {'time': 0.022037917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:41.219" endtime="20201115 23:00:41.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.236" level="INFO">${ACCURACY} = {'source_diff': [4.6944999999999626e-05, 4.6125000000001026e-05, 4.627700000000082e-05, 4.699999999999843e-05, 4.647200000000226e-05, 4.6319999999999e-05, 4.7125000000002026e-05, 4.690200000000144e-05...</msg>
<status status="PASS" starttime="20201115 23:00:41.224" endtime="20201115 23:00:41.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.241" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.240" endtime="20201115 23:00:41.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.243" level="INFO">VALUE: [4.6944999999999626e-05, 4.6125000000001026e-05, 4.627700000000082e-05, 4.699999999999843e-05, 4.647200000000226e-05, 4.6319999999999e-05, 4.7125000000002026e-05, 4.690200000000144e-05, 4.630599999999943e-05, 4.625000000000115e-05, 4.681900000000003e-05, 4.6139000000000596e-05, 4.673599999999861e-05, 4.626400000000072e-05, 4.708299999999985e-05, 4.688899999999788e-05, 4.680500000000046e-05, 4.6889000000001346e-05, 4.6667000000000236e-05, 4.6139000000000596e-05, 4.617999999999983e-05, 4.6139000000000596e-05, 4.68199999999995e-05, 4.6680999999999806e-05, 4.677799999999732e-05, 4.6180999999999306e-05, 4.648600000000183e-05, 4.6194999999998876e-05, 4.665200000000119e-05, 4.6931000000000056e-05, 4.638899999999738e-05, 4.616600000000026e-05, 4.625000000000115e-05, 4.622200000000201e-05, 4.63329999999991e-05, 4.6473000000001735e-05, 4.675000000000165e-05, 4.673600000000208e-05, 4.630499999999996e-05, 4.652800000000054e-05, 4.626400000000072e-05, 4.617999999999983e-05, 4.6667000000000236e-05, 4.617999999999983e-05, 4.648599999999836e-05, 4.627800000000029e-05, 4.655500000000021e-05, 4.638899999999738e-05, 4.61939999999994e-05, 4.654200000000011e-05]</msg>
<status status="PASS" starttime="20201115 23:00:41.242" endtime="20201115 23:00:41.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.237" endtime="20201115 23:00:41.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.246" endtime="20201115 23:00:41.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.249" endtime="20201115 23:00:41.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.248" endtime="20201115 23:00:41.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.244" endtime="20201115 23:00:41.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.879" endtime="20201115 23:00:41.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.877" endtime="20201115 23:00:41.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.876" endtime="20201115 23:00:41.271"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.273" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.281" endtime="20201115 23:00:41.299"></status>
</kw>
<msg timestamp="20201115 23:00:41.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.280" endtime="20201115 23:00:41.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.300" endtime="20201115 23:00:41.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.303" endtime="20201115 23:00:41.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.277" endtime="20201115 23:00:41.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.275" endtime="20201115 23:00:41.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.312" endtime="20201115 23:00:41.600"></status>
</kw>
<msg timestamp="20201115 23:00:41.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.310" endtime="20201115 23:00:41.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022159167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.605" endtime="20201115 23:00:41.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.613" endtime="20201115 23:00:41.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.308" endtime="20201115 23:00:41.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.306" endtime="20201115 23:00:41.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.619" level="INFO">${RESULT} = [{'time': 0.022206569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.740199999999847e-05, 'source_diff': 4.740199999999847e-05}, {'time': 0.022258597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:41.616" endtime="20201115 23:00:41.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.634" level="INFO">${ACCURACY} = {'source_diff': [4.740199999999847e-05, 4.731900000000053e-05, 4.744400000000065e-05, 4.742999999999761e-05, 4.743000000000108e-05, 4.737499999999881e-05, 4.793099999999759e-05, 4.780500000000146e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:41.620" endtime="20201115 23:00:41.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.639" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.638" endtime="20201115 23:00:41.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.641" level="INFO">VALUE: [4.740199999999847e-05, 4.731900000000053e-05, 4.744400000000065e-05, 4.742999999999761e-05, 4.743000000000108e-05, 4.737499999999881e-05, 4.793099999999759e-05, 4.780500000000146e-05, 4.727799999999782e-05, 4.762499999999906e-05, 4.7194999999999876e-05, 4.786099999999974e-05, 4.76529999999982e-05, 4.762499999999906e-05, 4.805599999999771e-05, 4.7445000000000126e-05, 4.7458999999999696e-05, 4.724999999999868e-05, 4.799999999999943e-05, 4.723599999999911e-05, 4.758399999999982e-05, 4.7597000000003387e-05, 4.756900000000078e-05, 4.7986999999999336e-05, 4.759699999999992e-05, 4.812499999999956e-05, 4.811099999999999e-05, 4.769399999999743e-05, 4.755500000000121e-05, 4.812499999999956e-05, 4.756900000000078e-05, 4.731900000000053e-05, 4.717999999999736e-05, 4.7389000000001846e-05, 4.71940000000004e-05, 4.774999999999918e-05, 4.7445000000000126e-05, 4.723599999999911e-05, 4.7361000000002706e-05, 4.723599999999911e-05, 4.78200000000005e-05, 4.78330000000006e-05, 4.733399999999957e-05, 4.752799999999807e-05, 4.736099999999924e-05, 4.7695000000000376e-05, 4.7708999999999946e-05, 4.7931000000001056e-05, 4.71940000000004e-05, 4.781900000000103e-05]</msg>
<status status="PASS" starttime="20201115 23:00:41.640" endtime="20201115 23:00:41.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.635" endtime="20201115 23:00:41.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.644" endtime="20201115 23:00:41.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.648" endtime="20201115 23:00:41.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.646" endtime="20201115 23:00:41.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.643" endtime="20201115 23:00:41.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.274" endtime="20201115 23:00:41.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.272" endtime="20201115 23:00:41.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.271" endtime="20201115 23:00:41.669"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.671" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.679" endtime="20201115 23:00:41.698"></status>
</kw>
<msg timestamp="20201115 23:00:41.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.678" endtime="20201115 23:00:41.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.699" endtime="20201115 23:00:41.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.702" endtime="20201115 23:00:41.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.675" endtime="20201115 23:00:41.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.673" endtime="20201115 23:00:41.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.711" endtime="20201115 23:00:41.997"></status>
</kw>
<msg timestamp="20201115 23:00:42.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.710" endtime="20201115 23:00:42.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.001" endtime="20201115 23:00:42.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.009" endtime="20201115 23:00:42.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.707" endtime="20201115 23:00:42.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.705" endtime="20201115 23:00:42.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.016" level="INFO">${RESULT} = [{'time': 0.022145958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.856900000000178e-05, 'source_diff': 4.856900000000178e-05}, {'time': 0.022197972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:42.013" endtime="20201115 23:00:42.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.029" level="INFO">${ACCURACY} = {'source_diff': [4.856900000000178e-05, 4.86529999999992e-05, 4.85139999999995e-05, 4.866599999999929e-05, 4.873600000000061e-05, 4.9014e-05, 4.849999999999993e-05, 4.8707999999998e-05, 4.817999999999...</msg>
<status status="PASS" starttime="20201115 23:00:42.017" endtime="20201115 23:00:42.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.034" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.033" endtime="20201115 23:00:42.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.036" level="INFO">VALUE: [4.856900000000178e-05, 4.86529999999992e-05, 4.85139999999995e-05, 4.866599999999929e-05, 4.873600000000061e-05, 4.9014e-05, 4.849999999999993e-05, 4.8707999999998e-05, 4.817999999999836e-05, 4.894399999999868e-05, 4.822200000000054e-05, 4.8681000000001806e-05, 4.840299999999895e-05, 4.824999999999968e-05, 4.8889000000003346e-05, 4.830600000000143e-05, 4.8681000000001806e-05, 4.8708999999997477e-05, 4.836100000000024e-05, 4.8195000000000876e-05, 4.862500000000006e-05, 4.876399999999975e-05, 4.877699999999985e-05, 4.83330000000011e-05, 4.855499999999874e-05, 4.908300000000185e-05, 4.830500000000196e-05, 4.86940000000019e-05, 4.873600000000061e-05, 4.875000000000018e-05, 4.868000000000233e-05, 4.894399999999868e-05, 4.81529999999987e-05, 4.9014e-05, 4.869399999999843e-05, 4.900000000000043e-05, 4.876399999999975e-05, 4.873600000000061e-05, 4.900000000000043e-05, 4.8431000000001556e-05, 4.908400000000132e-05, 4.8445000000001126e-05, 4.88200000000015e-05, 4.900000000000043e-05, 4.886100000000074e-05, 4.836099999999677e-05, 4.8417000000001986e-05, 4.826299999999978e-05, 4.824999999999968e-05, 4.813799999999965e-05]</msg>
<status status="PASS" starttime="20201115 23:00:42.035" endtime="20201115 23:00:42.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.030" endtime="20201115 23:00:42.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.039" endtime="20201115 23:00:42.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.043" endtime="20201115 23:00:42.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.041" endtime="20201115 23:00:42.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.038" endtime="20201115 23:00:42.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.672" endtime="20201115 23:00:42.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.670" endtime="20201115 23:00:42.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.669" endtime="20201115 23:00:42.064"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.066" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.075" endtime="20201115 23:00:42.093"></status>
</kw>
<msg timestamp="20201115 23:00:42.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.073" endtime="20201115 23:00:42.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.095" endtime="20201115 23:00:42.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.097" endtime="20201115 23:00:42.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.071" endtime="20201115 23:00:42.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.068" endtime="20201115 23:00:42.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.106" endtime="20201115 23:00:42.391"></status>
</kw>
<msg timestamp="20201115 23:00:42.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.105" endtime="20201115 23:00:42.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.395" endtime="20201115 23:00:42.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.404" endtime="20201115 23:00:42.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.102" endtime="20201115 23:00:42.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.100" endtime="20201115 23:00:42.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.410" level="INFO">${RESULT} = [{'time': 0.022707236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.006899999999981e-05, 'source_diff': 5.006899999999981e-05}, {'time': 0.022759236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:42.407" endtime="20201115 23:00:42.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.424" level="INFO">${ACCURACY} = {'source_diff': [5.006899999999981e-05, 4.987499999999784e-05, 4.916699999999927e-05, 4.994399999999968e-05, 4.936100000000124e-05, 4.962500000000106e-05, 4.929199999999939e-05, 4.995799999999925e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:42.411" endtime="20201115 23:00:42.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.428" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.427" endtime="20201115 23:00:42.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.431" level="INFO">VALUE: [5.006899999999981e-05, 4.987499999999784e-05, 4.916699999999927e-05, 4.994399999999968e-05, 4.936100000000124e-05, 4.962500000000106e-05, 4.929199999999939e-05, 4.995799999999925e-05, 4.974999999999771e-05, 5.000000000000143e-05, 4.963900000000063e-05, 4.926400000000025e-05, 4.983400000000207e-05, 5.012499999999809e-05, 4.923600000000111e-05, 4.9431000000002556e-05, 4.986099999999827e-05, 4.9888000000001403e-05, 4.981899999999956e-05, 4.927700000000035e-05, 5.006899999999981e-05, 4.999999999999796e-05, 4.997199999999882e-05, 4.976400000000075e-05, 4.969399999999943e-05, 4.933299999999863e-05, 4.956899999999931e-05, 4.922199999999807e-05, 4.987500000000131e-05, 4.919399999999893e-05, 4.976400000000075e-05, 5.013899999999766e-05, 4.988900000000088e-05, 4.977800000000032e-05, 4.968099999999934e-05, 4.988900000000088e-05, 4.943099999999909e-05, 4.9959000000002196e-05, 4.976400000000075e-05, 4.973599999999814e-05, 4.951299999999756e-05, 4.998599999999839e-05, 4.977699999999738e-05, 4.995800000000272e-05, 4.96940000000029e-05, 4.92079999999985e-05, 5.018099999999984e-05, 4.949999999999746e-05, 5.012500000000156e-05, 4.987499999999784e-05]</msg>
<status status="PASS" starttime="20201115 23:00:42.429" endtime="20201115 23:00:42.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.424" endtime="20201115 23:00:42.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.434" endtime="20201115 23:00:42.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.437" endtime="20201115 23:00:42.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.436" endtime="20201115 23:00:42.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.432" endtime="20201115 23:00:42.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.067" endtime="20201115 23:00:42.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.065" endtime="20201115 23:00:42.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.064" endtime="20201115 23:00:42.459"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.462" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.471" endtime="20201115 23:00:42.488"></status>
</kw>
<msg timestamp="20201115 23:00:42.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.469" endtime="20201115 23:00:42.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.490" endtime="20201115 23:00:42.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.492" endtime="20201115 23:00:42.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.466" endtime="20201115 23:00:42.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.464" endtime="20201115 23:00:42.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.501" endtime="20201115 23:00:42.788"></status>
</kw>
<msg timestamp="20201115 23:00:42.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023890375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023941514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.500" endtime="20201115 23:00:42.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023890375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023941514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.792" endtime="20201115 23:00:42.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.800" endtime="20201115 23:00:42.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.497" endtime="20201115 23:00:42.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.496" endtime="20201115 23:00:42.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.807" level="INFO">${RESULT} = [{'time': 0.023941514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.113900000000213e-05, 'source_diff': 5.113900000000213e-05}, {'time': 0.023995514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:42.804" endtime="20201115 23:00:42.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.820" level="INFO">${ACCURACY} = {'source_diff': [5.113900000000213e-05, 5.098599999999939e-05, 5.094500000000016e-05, 5.019499999999941e-05, 5.019499999999941e-05, 5.038899999999791e-05, 5.076400000000175e-05, 5.08339999999996e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:42.808" endtime="20201115 23:00:42.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.825" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.824" endtime="20201115 23:00:42.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.827" level="INFO">VALUE: [5.113900000000213e-05, 5.098599999999939e-05, 5.094500000000016e-05, 5.019499999999941e-05, 5.019499999999941e-05, 5.038899999999791e-05, 5.076400000000175e-05, 5.08339999999996e-05, 5.055600000000021e-05, 5.074999999999871e-05, 5.012500000000156e-05, 5.083299999999666e-05, 5.106900000000081e-05, 5.087500000000231e-05, 5.116700000000127e-05, 5.105500000000124e-05, 5.093000000000111e-05, 5.033299999999963e-05, 5.016600000000079e-05, 5.083300000000013e-05, 5.081900000000056e-05, 5.031900000000006e-05, 5.030599999999996e-05, 5.093100000000059e-05, 5.061100000000249e-05, 5.052800000000107e-05, 5.105600000000071e-05, 5.037500000000181e-05, 5.10279999999981e-05, 5.09729999999993e-05, 5.055600000000021e-05, 5.05140000000015e-05, 5.0737000000002086e-05, 5.094500000000016e-05, 5.072199999999957e-05, 5.080499999999752e-05, 5.063899999999816e-05, 5.105500000000124e-05, 5.05140000000015e-05, 5.081900000000056e-05, 5.030500000000049e-05, 5.097199999999982e-05, 5.077800000000132e-05, 5.088900000000188e-05, 5.077799999999785e-05, 5.0388000000001903e-05, 5.019499999999941e-05, 5.068100000000034e-05, 5.075000000000218e-05, 5.056999999999978e-05]</msg>
<status status="PASS" starttime="20201115 23:00:42.826" endtime="20201115 23:00:42.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.821" endtime="20201115 23:00:42.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.831" endtime="20201115 23:00:42.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.834" endtime="20201115 23:00:42.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.833" endtime="20201115 23:00:42.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.829" endtime="20201115 23:00:42.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.462" endtime="20201115 23:00:42.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.460" endtime="20201115 23:00:42.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.459" endtime="20201115 23:00:42.855"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.857" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.866" endtime="20201115 23:00:42.885"></status>
</kw>
<msg timestamp="20201115 23:00:42.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.864" endtime="20201115 23:00:42.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.887" endtime="20201115 23:00:42.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.889" endtime="20201115 23:00:42.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.862" endtime="20201115 23:00:42.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.860" endtime="20201115 23:00:42.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.898" endtime="20201115 23:00:43.184"></status>
</kw>
<msg timestamp="20201115 23:00:43.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.896" endtime="20201115 23:00:43.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.188" endtime="20201115 23:00:43.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.196" endtime="20201115 23:00:43.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.894" endtime="20201115 23:00:43.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.892" endtime="20201115 23:00:43.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.203" level="INFO">${RESULT} = [{'time': 0.021920861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.138899999999891e-05, 'source_diff': 5.138899999999891e-05}, {'time': 0.021974861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:43.199" endtime="20201115 23:00:43.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.218" level="INFO">${ACCURACY} = {'source_diff': [5.138899999999891e-05, 5.130499999999802e-05, 5.180599999999799e-05, 5.140299999999848e-05, 5.199999999999996e-05, 5.137499999999934e-05, 5.194500000000116e-05, 5.204199999999867e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:43.204" endtime="20201115 23:00:43.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.222" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.221" endtime="20201115 23:00:43.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.225" level="INFO">VALUE: [5.138899999999891e-05, 5.130499999999802e-05, 5.180599999999799e-05, 5.140299999999848e-05, 5.199999999999996e-05, 5.137499999999934e-05, 5.194500000000116e-05, 5.204199999999867e-05, 5.138899999999891e-05, 5.20409999999992e-05, 5.165299999999873e-05, 5.188899999999941e-05, 5.168100000000134e-05, 5.168000000000186e-05, 5.126299999999931e-05, 5.158300000000088e-05, 5.145900000000023e-05, 5.195800000000125e-05, 5.1929999999998644e-05, 5.124999999999921e-05, 5.1193999999997464e-05, 5.180500000000199e-05, 5.131900000000106e-05, 5.191699999999855e-05, 5.180599999999799e-05, 5.119400000000093e-05, 5.138899999999891e-05, 5.157000000000078e-05, 5.207000000000128e-05, 5.162499999999959e-05, 5.176399999999928e-05, 5.144500000000066e-05, 5.176399999999928e-05, 5.194500000000116e-05, 5.174999999999971e-05, 5.138899999999891e-05, 5.188899999999941e-05, 5.1236999999999117e-05, 5.151399999999903e-05, 5.169499999999744e-05, 5.156900000000131e-05, 5.199999999999996e-05, 5.176400000000275e-05, 5.156899999999784e-05, 5.161100000000002e-05, 5.125000000000268e-05, 5.151399999999903e-05, 5.191700000000202e-05, 5.158300000000088e-05, 5.127800000000182e-05]</msg>
<status status="PASS" starttime="20201115 23:00:43.223" endtime="20201115 23:00:43.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.218" endtime="20201115 23:00:43.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.228" endtime="20201115 23:00:43.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.232" endtime="20201115 23:00:43.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.230" endtime="20201115 23:00:43.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.227" endtime="20201115 23:00:43.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.858" endtime="20201115 23:00:43.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.856" endtime="20201115 23:00:43.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.856" endtime="20201115 23:00:43.253"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.255" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.263" endtime="20201115 23:00:43.283"></status>
</kw>
<msg timestamp="20201115 23:00:43.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.262" endtime="20201115 23:00:43.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.284" endtime="20201115 23:00:43.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.287" endtime="20201115 23:00:43.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.259" endtime="20201115 23:00:43.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.257" endtime="20201115 23:00:43.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.296" endtime="20201115 23:00:43.582"></status>
</kw>
<msg timestamp="20201115 23:00:43.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021885111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.294" endtime="20201115 23:00:43.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021885111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.586" endtime="20201115 23:00:43.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.594" endtime="20201115 23:00:43.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.292" endtime="20201115 23:00:43.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.290" endtime="20201115 23:00:43.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.601" level="INFO">${RESULT} = [{'time': 0.021885111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.265299999999973e-05, 'source_diff': 5.265299999999973e-05}, {'time': 0.021943097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:43.597" endtime="20201115 23:00:43.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.614" level="INFO">${ACCURACY} = {'source_diff': [5.265299999999973e-05, 5.233300000000163e-05, 5.261100000000102e-05, 5.288900000000041e-05, 5.306999999999881e-05, 5.262500000000059e-05, 5.307000000000228e-05, 5.245900000000123e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:43.602" endtime="20201115 23:00:43.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.619" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.618" endtime="20201115 23:00:43.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.621" level="INFO">VALUE: [5.265299999999973e-05, 5.233300000000163e-05, 5.261100000000102e-05, 5.288900000000041e-05, 5.306999999999881e-05, 5.262500000000059e-05, 5.307000000000228e-05, 5.245900000000123e-05, 5.305600000000271e-05, 5.230599999999849e-05, 5.313900000000066e-05, 5.258399999999788e-05, 5.255599999999874e-05, 5.276400000000028e-05, 5.2999999999997494e-05, 5.231899999999859e-05, 5.304199999999967e-05, 5.2665999999999824e-05, 5.311100000000152e-05, 5.2207999999998034e-05, 5.263900000000016e-05, 5.300000000000096e-05, 5.2179999999998894e-05, 5.256900000000231e-05, 5.233299999999816e-05, 5.275000000000071e-05, 5.308300000000238e-05, 5.273600000000114e-05, 5.237500000000034e-05, 5.212500000000009e-05, 5.227799999999935e-05, 5.283399999999813e-05, 5.247200000000132e-05, 5.250000000000046e-05, 5.268099999999887e-05, 5.268100000000234e-05, 5.252700000000013e-05, 5.220899999999751e-05, 5.275000000000071e-05, 5.251299999999709e-05, 5.270900000000148e-05, 5.2138000000000184e-05, 5.225000000000021e-05, 5.283299999999866e-05, 5.233299999999816e-05, 5.312500000000109e-05, 5.218000000000236e-05, 5.2929999999999644e-05, 5.275000000000071e-05, 5.288900000000041e-05]</msg>
<status status="PASS" starttime="20201115 23:00:43.620" endtime="20201115 23:00:43.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.615" endtime="20201115 23:00:43.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.624" endtime="20201115 23:00:43.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.628" endtime="20201115 23:00:43.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.626" endtime="20201115 23:00:43.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.623" endtime="20201115 23:00:43.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.256" endtime="20201115 23:00:43.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.254" endtime="20201115 23:00:43.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.253" endtime="20201115 23:00:43.649"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.651" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.659" endtime="20201115 23:00:43.678"></status>
</kw>
<msg timestamp="20201115 23:00:43.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.658" endtime="20201115 23:00:43.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.680" endtime="20201115 23:00:43.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.682" endtime="20201115 23:00:43.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.655" endtime="20201115 23:00:43.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.653" endtime="20201115 23:00:43.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.691" endtime="20201115 23:00:43.979"></status>
</kw>
<msg timestamp="20201115 23:00:43.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.690" endtime="20201115 23:00:43.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.984" endtime="20201115 23:00:43.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.992" endtime="20201115 23:00:43.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.687" endtime="20201115 23:00:43.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.685" endtime="20201115 23:00:43.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.999" level="INFO">${RESULT} = [{'time': 0.021976139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.391699999999708e-05, 'source_diff': 5.391699999999708e-05}, {'time': 0.022033153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:43.995" endtime="20201115 23:00:43.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.012" level="INFO">${ACCURACY} = {'source_diff': [5.391699999999708e-05, 5.388900000000141e-05, 5.393100000000012e-05, 5.405600000000024e-05, 5.398600000000239e-05, 5.318100000000284e-05, 5.311100000000152e-05, 5.320899999999851e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:44.000" endtime="20201115 23:00:44.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.017" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.016" endtime="20201115 23:00:44.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.019" level="INFO">VALUE: [5.391699999999708e-05, 5.388900000000141e-05, 5.393100000000012e-05, 5.405600000000024e-05, 5.398600000000239e-05, 5.318100000000284e-05, 5.311100000000152e-05, 5.320899999999851e-05, 5.356899999999984e-05, 5.34869999999979e-05, 5.395899999999926e-05, 5.368099999999987e-05, 5.3415999999997105e-05, 5.3680000000000394e-05, 5.3207999999999034e-05, 5.351400000000103e-05, 5.3430000000000144e-05, 5.380500000000052e-05, 5.3693999999999964e-05, 5.358300000000288e-05, 5.356899999999984e-05, 5.355599999999974e-05, 5.3944000000000214e-05, 5.376400000000128e-05, 5.332000000000253e-05, 5.368099999999987e-05, 5.400000000000196e-05, 5.331999999999906e-05, 5.39730000000023e-05, 5.36670000000003e-05, 5.3985999999998924e-05, 5.402700000000163e-05, 5.412499999999862e-05, 5.336199999999777e-05, 5.382000000000303e-05, 5.3680000000000394e-05, 5.330500000000002e-05, 5.412499999999862e-05, 5.380500000000052e-05, 5.401400000000153e-05, 5.3193999999999464e-05, 5.408299999999991e-05, 5.406900000000034e-05, 5.337500000000134e-05, 5.400000000000196e-05, 5.358299999999941e-05, 5.386100000000227e-05, 5.382000000000303e-05, 5.3499999999997994e-05, 5.369499999999944e-05]</msg>
<status status="PASS" starttime="20201115 23:00:44.018" endtime="20201115 23:00:44.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.013" endtime="20201115 23:00:44.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.022" endtime="20201115 23:00:44.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.026" endtime="20201115 23:00:44.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.024" endtime="20201115 23:00:44.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.021" endtime="20201115 23:00:44.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.652" endtime="20201115 23:00:44.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.650" endtime="20201115 23:00:44.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.649" endtime="20201115 23:00:44.047"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.049" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.057" endtime="20201115 23:00:44.076"></status>
</kw>
<msg timestamp="20201115 23:00:44.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.056" endtime="20201115 23:00:44.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.077" endtime="20201115 23:00:44.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.080" endtime="20201115 23:00:44.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.053" endtime="20201115 23:00:44.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.051" endtime="20201115 23:00:44.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.089" endtime="20201115 23:00:44.375"></status>
</kw>
<msg timestamp="20201115 23:00:44.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.087" endtime="20201115 23:00:44.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.379" endtime="20201115 23:00:44.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.388" endtime="20201115 23:00:44.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.085" endtime="20201115 23:00:44.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.083" endtime="20201115 23:00:44.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.394" level="INFO">${RESULT} = [{'time': 0.021955292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.50280000000021e-05, 'source_diff': 5.50280000000021e-05}, {'time': 0.022012319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:44.391" endtime="20201115 23:00:44.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.408" level="INFO">${ACCURACY} = {'source_diff': [5.50280000000021e-05, 5.4901999999999035e-05, 5.483299999999719e-05, 5.4693999999997495e-05, 5.477800000000185e-05, 5.4194000000000464e-05, 5.4694000000000964e-05, 5.511100000000005e-...</msg>
<status status="PASS" starttime="20201115 23:00:44.395" endtime="20201115 23:00:44.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.412" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.411" endtime="20201115 23:00:44.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.415" level="INFO">VALUE: [5.50280000000021e-05, 5.4901999999999035e-05, 5.483299999999719e-05, 5.4693999999997495e-05, 5.477800000000185e-05, 5.4194000000000464e-05, 5.4694000000000964e-05, 5.511100000000005e-05, 5.4958000000000784e-05, 5.4916000000002074e-05, 5.4249999999998744e-05, 5.4444000000000714e-05, 5.461099999999955e-05, 5.454200000000117e-05, 5.507000000000081e-05, 5.41809999999969e-05, 5.426400000000178e-05, 5.508400000000038e-05, 5.4999999999999494e-05, 5.425000000000221e-05, 5.420899999999951e-05, 5.457000000000031e-05, 5.4680000000001394e-05, 5.431900000000059e-05, 5.452700000000213e-05, 5.4458000000000284e-05, 5.429100000000145e-05, 5.43609999999993e-05, 5.4513999999998564e-05, 5.490299999999851e-05, 5.4749999999999244e-05, 5.4929999999998175e-05, 5.415299999999776e-05, 5.48609999999998e-05, 5.465299999999826e-05, 5.426400000000178e-05, 5.4735999999999674e-05, 5.4527999999998134e-05, 5.468100000000087e-05, 5.475000000000271e-05, 5.463900000000216e-05, 5.412500000000209e-05, 5.505600000000124e-05, 5.488899999999894e-05, 5.448600000000289e-05, 5.4749999999999244e-05, 5.425000000000221e-05, 5.488899999999894e-05, 5.4194000000000464e-05, 5.4444000000000714e-05]</msg>
<status status="PASS" starttime="20201115 23:00:44.413" endtime="20201115 23:00:44.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.409" endtime="20201115 23:00:44.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.418" endtime="20201115 23:00:44.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.421" endtime="20201115 23:00:44.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.420" endtime="20201115 23:00:44.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.416" endtime="20201115 23:00:44.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.050" endtime="20201115 23:00:44.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.048" endtime="20201115 23:00:44.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.047" endtime="20201115 23:00:44.442"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.445" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.453" endtime="20201115 23:00:44.471"></status>
</kw>
<msg timestamp="20201115 23:00:44.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.451" endtime="20201115 23:00:44.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.473" endtime="20201115 23:00:44.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.476" endtime="20201115 23:00:44.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.449" endtime="20201115 23:00:44.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.447" endtime="20201115 23:00:44.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.485" endtime="20201115 23:00:44.772"></status>
</kw>
<msg timestamp="20201115 23:00:44.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.483" endtime="20201115 23:00:44.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.776" endtime="20201115 23:00:44.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.784" endtime="20201115 23:00:44.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.481" endtime="20201115 23:00:44.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.479" endtime="20201115 23:00:44.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.791" level="INFO">${RESULT} = [{'time': 0.021941625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.609699999999801e-05, 'source_diff': 5.609699999999801e-05}, {'time': 0.022002569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:44.787" endtime="20201115 23:00:44.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.805" level="INFO">${ACCURACY} = {'source_diff': [5.609699999999801e-05, 5.551300000000009e-05, 5.576300000000034e-05, 5.5722000000001104e-05, 5.5443999999998245e-05, 5.583300000000166e-05, 5.530500000000202e-05, 5.588899999999994e-0...</msg>
<status status="PASS" starttime="20201115 23:00:44.792" endtime="20201115 23:00:44.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.810" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.809" endtime="20201115 23:00:44.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.812" level="INFO">VALUE: [5.609699999999801e-05, 5.551300000000009e-05, 5.576300000000034e-05, 5.5722000000001104e-05, 5.5443999999998245e-05, 5.583300000000166e-05, 5.530500000000202e-05, 5.588899999999994e-05, 5.562500000000012e-05, 5.5458000000001284e-05, 5.5693999999998495e-05, 5.5499999999999994e-05, 5.530499999999855e-05, 5.56670000000023e-05, 5.593100000000212e-05, 5.5805999999998523e-05, 5.582000000000156e-05, 5.594499999999822e-05, 5.613900000000019e-05, 5.544500000000119e-05, 5.5305999999998023e-05, 5.533400000000063e-05, 5.580600000000199e-05, 5.547300000000033e-05, 5.5387999999999965e-05, 5.5499999999999994e-05, 5.612500000000062e-05, 5.5943999999998745e-05, 5.584700000000123e-05, 5.529099999999898e-05, 5.5944000000002214e-05, 5.5179999999998425e-05, 5.515299999999876e-05, 5.5194000000001464e-05, 5.53610000000003e-05, 5.5485999999996954e-05, 5.5444000000001714e-05, 5.5208000000001034e-05, 5.5750000000000244e-05, 5.608400000000138e-05, 5.5763999999999814e-05, 5.533399999999716e-05, 5.538899999999944e-05, 5.5513999999999564e-05, 5.58610000000008e-05, 5.5499999999999994e-05, 5.597300000000083e-05, 5.582000000000156e-05, 5.533299999999769e-05, 5.5930000000002644e-05]</msg>
<status status="PASS" starttime="20201115 23:00:44.811" endtime="20201115 23:00:44.813"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.806" endtime="20201115 23:00:44.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.815" endtime="20201115 23:00:44.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.819" endtime="20201115 23:00:44.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.817" endtime="20201115 23:00:44.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.814" endtime="20201115 23:00:44.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.445" endtime="20201115 23:00:44.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.443" endtime="20201115 23:00:44.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.443" endtime="20201115 23:00:44.840"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.842" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.851" endtime="20201115 23:00:44.869"></status>
</kw>
<msg timestamp="20201115 23:00:44.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.849" endtime="20201115 23:00:44.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.871" endtime="20201115 23:00:44.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.873" endtime="20201115 23:00:44.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.846" endtime="20201115 23:00:44.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.844" endtime="20201115 23:00:44.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.882" endtime="20201115 23:00:45.168"></status>
</kw>
<msg timestamp="20201115 23:00:45.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022497375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.880" endtime="20201115 23:00:45.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022497375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.172" endtime="20201115 23:00:45.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.181" endtime="20201115 23:00:45.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.878" endtime="20201115 23:00:45.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.876" endtime="20201115 23:00:45.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.187" level="INFO">${RESULT} = [{'time': 0.022497375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.688900000000094e-05, 'source_diff': 5.688900000000094e-05}, {'time': 0.022559375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:45.184" endtime="20201115 23:00:45.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.201" level="INFO">${ACCURACY} = {'source_diff': [5.688900000000094e-05, 5.633299999999869e-05, 5.6444000000002714e-05, 5.709699999999901e-05, 5.7042000000000204e-05, 5.688900000000094e-05, 5.66809999999994e-05, 5.620900000000151e-05...</msg>
<status status="PASS" starttime="20201115 23:00:45.188" endtime="20201115 23:00:45.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.205" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.204" endtime="20201115 23:00:45.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.208" level="INFO">VALUE: [5.688900000000094e-05, 5.633299999999869e-05, 5.6444000000002714e-05, 5.709699999999901e-05, 5.7042000000000204e-05, 5.688900000000094e-05, 5.66809999999994e-05, 5.620900000000151e-05, 5.662499999999765e-05, 5.680600000000299e-05, 5.6541999999999704e-05, 5.694499999999922e-05, 5.619499999999847e-05, 5.6528000000000134e-05, 5.6152000000000285e-05, 5.713899999999772e-05, 5.666699999999983e-05, 5.6943999999999745e-05, 5.680500000000005e-05, 5.637500000000087e-05, 5.656899999999937e-05, 5.63749999999974e-05, 5.638900000000044e-05, 5.688899999999747e-05, 5.6721999999998635e-05, 5.6514000000000564e-05, 5.61809999999989e-05, 5.643100000000262e-05, 5.6750000000001244e-05, 5.666699999999983e-05, 5.6750000000001244e-05, 5.6999999999998024e-05, 5.640300000000001e-05, 5.6222000000001604e-05, 5.66809999999994e-05, 5.6165999999999855e-05, 5.6749999999997774e-05, 5.658299999999894e-05, 5.634700000000173e-05, 5.6721999999998635e-05, 5.6750000000001244e-05, 5.615299999999976e-05, 5.7000000000001494e-05, 5.6707999999999065e-05, 5.691700000000008e-05, 5.630499999999955e-05, 5.6735999999998205e-05, 5.6207999999998565e-05, 5.686099999999833e-05, 5.663899999999722e-05]</msg>
<status status="PASS" starttime="20201115 23:00:45.206" endtime="20201115 23:00:45.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.202" endtime="20201115 23:00:45.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.211" endtime="20201115 23:00:45.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.214" endtime="20201115 23:00:45.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.213" endtime="20201115 23:00:45.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.209" endtime="20201115 23:00:45.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.843" endtime="20201115 23:00:45.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.841" endtime="20201115 23:00:45.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.840" endtime="20201115 23:00:45.236"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.238" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.246" endtime="20201115 23:00:45.265"></status>
</kw>
<msg timestamp="20201115 23:00:45.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.245" endtime="20201115 23:00:45.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.267" endtime="20201115 23:00:45.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.269" endtime="20201115 23:00:45.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.242" endtime="20201115 23:00:45.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.240" endtime="20201115 23:00:45.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.279" endtime="20201115 23:00:45.567"></status>
</kw>
<msg timestamp="20201115 23:00:45.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02237425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022431944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:45.277" endtime="20201115 23:00:45.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02237425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022431944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:45.571" endtime="20201115 23:00:45.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.579" endtime="20201115 23:00:45.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.274" endtime="20201115 23:00:45.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.273" endtime="20201115 23:00:45.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.586" level="INFO">${RESULT} = [{'time': 0.022431944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7694000000000495e-05, 'source_diff': 5.7694000000000495e-05}, {'time': 0.022494875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:45.583" endtime="20201115 23:00:45.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.599" level="INFO">${ACCURACY} = {'source_diff': [5.7694000000000495e-05, 5.737500000000187e-05, 5.743100000000015e-05, 5.8027999999998164e-05, 5.786099999999933e-05, 5.794500000000022e-05, 5.8027999999998164e-05, 5.7556000000000274e...</msg>
<status status="PASS" starttime="20201115 23:00:45.587" endtime="20201115 23:00:45.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.604" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.603" endtime="20201115 23:00:45.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.606" level="INFO">VALUE: [5.7694000000000495e-05, 5.737500000000187e-05, 5.743100000000015e-05, 5.8027999999998164e-05, 5.786099999999933e-05, 5.794500000000022e-05, 5.8027999999998164e-05, 5.7556000000000274e-05, 5.7985999999999455e-05, 5.7430000000000675e-05, 5.73619999999983e-05, 5.78749999999989e-05, 5.743100000000015e-05, 5.74870000000019e-05, 5.763900000000169e-05, 5.8013999999998594e-05, 5.759699999999951e-05, 5.7944000000000745e-05, 5.73610000000023e-05, 5.7749999999998775e-05, 5.78749999999989e-05, 5.8000000000002494e-05, 5.711099999999858e-05, 5.812499999999915e-05, 5.783300000000019e-05, 5.8042000000001204e-05, 5.769499999999997e-05, 5.719499999999947e-05, 5.7264000000001314e-05, 5.7249999999998274e-05, 5.762499999999865e-05, 5.73749999999984e-05, 5.751300000000209e-05, 5.71809999999999e-05, 5.7887999999998996e-05, 5.811099999999958e-05, 5.816700000000133e-05, 5.786099999999933e-05, 5.7999999999999025e-05, 5.709699999999901e-05, 5.78749999999989e-05, 5.8013999999998594e-05, 5.7721999999999635e-05, 5.780499999999758e-05, 5.7708000000000065e-05, 5.765299999999779e-05, 5.794500000000022e-05, 5.737500000000187e-05, 5.815299999999829e-05, 5.7333999999999163e-05]</msg>
<status status="PASS" starttime="20201115 23:00:45.605" endtime="20201115 23:00:45.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.600" endtime="20201115 23:00:45.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.610" endtime="20201115 23:00:45.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.613" endtime="20201115 23:00:45.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.612" endtime="20201115 23:00:45.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.608" endtime="20201115 23:00:45.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.239" endtime="20201115 23:00:45.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.237" endtime="20201115 23:00:45.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.236" endtime="20201115 23:00:45.634"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.637" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.645" endtime="20201115 23:00:45.663"></status>
</kw>
<msg timestamp="20201115 23:00:45.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.643" endtime="20201115 23:00:45.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.665" endtime="20201115 23:00:45.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.667" endtime="20201115 23:00:45.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.641" endtime="20201115 23:00:45.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.639" endtime="20201115 23:00:45.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.676" endtime="20201115 23:00:45.962"></status>
</kw>
<msg timestamp="20201115 23:00:45.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.675" endtime="20201115 23:00:45.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.966" endtime="20201115 23:00:45.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.974" endtime="20201115 23:00:45.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.672" endtime="20201115 23:00:45.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.670" endtime="20201115 23:00:45.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.981" level="INFO">${RESULT} = [{'time': 0.022031403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8542000000001704e-05, 'source_diff': 5.8542000000001704e-05}, {'time': 0.022093389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:45.978" endtime="20201115 23:00:45.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.995" level="INFO">${ACCURACY} = {'source_diff': [5.8542000000001704e-05, 5.886100000000033e-05, 5.9070000000001344e-05, 5.8334000000000163e-05, 5.8320000000000594e-05, 5.866699999999836e-05, 5.820900000000004e-05, 5.852699999999919e...</msg>
<status status="PASS" starttime="20201115 23:00:45.982" endtime="20201115 23:00:45.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.999" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.998" endtime="20201115 23:00:46.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.007" level="INFO">VALUE: [5.8542000000001704e-05, 5.886100000000033e-05, 5.9070000000001344e-05, 5.8334000000000163e-05, 5.8320000000000594e-05, 5.866699999999836e-05, 5.820900000000004e-05, 5.852699999999919e-05, 5.848699999999943e-05, 5.88749999999999e-05, 5.8430000000001675e-05, 5.8208000000000565e-05, 5.88749999999999e-05, 5.8249999999999275e-05, 5.8693999999998026e-05, 5.811099999999958e-05, 5.8513999999999095e-05, 5.8930000000002175e-05, 5.8235999999999705e-05, 5.8570000000000844e-05, 5.83749999999994e-05, 5.8820000000001094e-05, 5.837500000000287e-05, 5.8749999999999775e-05, 5.830499999999808e-05, 5.822299999999961e-05, 5.838899999999897e-05, 5.894500000000122e-05, 5.888899999999947e-05, 5.836099999999983e-05, 5.894500000000122e-05, 5.8637999999999746e-05, 5.909699999999754e-05, 5.8736000000000205e-05, 5.815299999999829e-05, 5.862499999999965e-05, 5.830500000000155e-05, 5.8444000000001245e-05, 5.884700000000076e-05, 5.85550000000018e-05, 5.908300000000144e-05, 5.890300000000251e-05, 5.83749999999994e-05, 5.8736000000000205e-05, 5.863899999999922e-05, 5.8250000000002744e-05, 5.893100000000165e-05, 5.866699999999836e-05, 5.8263999999998844e-05, 5.8707999999997595e-05]</msg>
<status status="PASS" starttime="20201115 23:00:46.000" endtime="20201115 23:00:46.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.996" endtime="20201115 23:00:46.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.010" endtime="20201115 23:00:46.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.013" endtime="20201115 23:00:46.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.012" endtime="20201115 23:00:46.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.008" endtime="20201115 23:00:46.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.637" endtime="20201115 23:00:46.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.635" endtime="20201115 23:00:46.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.635" endtime="20201115 23:00:46.035"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.037" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.045" endtime="20201115 23:00:46.063"></status>
</kw>
<msg timestamp="20201115 23:00:46.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.044" endtime="20201115 23:00:46.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.065" endtime="20201115 23:00:46.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.067" endtime="20201115 23:00:46.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.041" endtime="20201115 23:00:46.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.039" endtime="20201115 23:00:46.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.076" endtime="20201115 23:00:46.362"></status>
</kw>
<msg timestamp="20201115 23:00:46.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.075" endtime="20201115 23:00:46.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.367" endtime="20201115 23:00:46.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.375" endtime="20201115 23:00:46.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.072" endtime="20201115 23:00:46.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.071" endtime="20201115 23:00:46.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.381" level="INFO">${RESULT} = [{'time': 0.022130681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.962500000000065e-05, 'source_diff': 5.962500000000065e-05}, {'time': 0.022192681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:46.378" endtime="20201115 23:00:46.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.397" level="INFO">${ACCURACY} = {'source_diff': [5.962500000000065e-05, 5.9861999999997334e-05, 5.9569999999998374e-05, 5.9764000000000345e-05, 6.005499999999983e-05, 5.959699999999804e-05, 5.980499999999958e-05, 5.990300000000004e-...</msg>
<status status="PASS" starttime="20201115 23:00:46.383" endtime="20201115 23:00:46.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.401" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.400" endtime="20201115 23:00:46.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.404" level="INFO">VALUE: [5.962500000000065e-05, 5.9861999999997334e-05, 5.9569999999998374e-05, 5.9764000000000345e-05, 6.005499999999983e-05, 5.959699999999804e-05, 5.980499999999958e-05, 5.990300000000004e-05, 5.913899999999972e-05, 5.933299999999822e-05, 5.983299999999872e-05, 5.966699999999936e-05, 5.9819999999998624e-05, 5.944500000000172e-05, 6.013900000000072e-05, 5.962499999999718e-05, 5.959700000000151e-05, 5.9514000000000095e-05, 5.970900000000154e-05, 5.9236000000000705e-05, 5.9444000000002245e-05, 5.9207999999998095e-05, 5.920900000000104e-05, 6.008299999999897e-05, 5.9320000000001594e-05, 5.938899999999997e-05, 5.9486000000000955e-05, 5.981900000000262e-05, 5.959699999999804e-05, 5.9750000000000775e-05, 5.9222000000001135e-05, 5.944499999999825e-05, 5.943099999999868e-05, 6.0028000000000165e-05, 5.912500000000015e-05, 5.9819999999998624e-05, 5.962500000000065e-05, 6.0028000000000165e-05, 5.961100000000108e-05, 5.9486000000000955e-05, 5.9402000000000066e-05, 5.943099999999868e-05, 5.9916000000000136e-05, 5.966699999999936e-05, 5.9443999999998776e-05, 5.9486000000000955e-05, 5.9986000000001455e-05, 5.981899999999915e-05, 5.931899999999865e-05, 5.9514000000000095e-05]</msg>
<status status="PASS" starttime="20201115 23:00:46.403" endtime="20201115 23:00:46.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.398" endtime="20201115 23:00:46.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.407" endtime="20201115 23:00:46.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.410" endtime="20201115 23:00:46.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.409" endtime="20201115 23:00:46.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.405" endtime="20201115 23:00:46.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.038" endtime="20201115 23:00:46.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.036" endtime="20201115 23:00:46.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.035" endtime="20201115 23:00:46.431"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.434" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.442" endtime="20201115 23:00:46.462"></status>
</kw>
<msg timestamp="20201115 23:00:46.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.441" endtime="20201115 23:00:46.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.464" endtime="20201115 23:00:46.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.466" endtime="20201115 23:00:46.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.438" endtime="20201115 23:00:46.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.436" endtime="20201115 23:00:46.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.475" endtime="20201115 23:00:46.761"></status>
</kw>
<msg timestamp="20201115 23:00:46.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.474" endtime="20201115 23:00:46.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.765" endtime="20201115 23:00:46.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.774" endtime="20201115 23:00:46.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.471" endtime="20201115 23:00:46.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.470" endtime="20201115 23:00:46.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.781" level="INFO">${RESULT} = [{'time': 0.022150667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0499999999998055e-05, 'source_diff': 6.0499999999998055e-05}, {'time': 0.022214708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:46.777" endtime="20201115 23:00:46.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.794" level="INFO">${ACCURACY} = {'source_diff': [6.0499999999998055e-05, 6.0721999999999166e-05, 6.1013999999998125e-05, 6.043099999999968e-05, 6.0443999999999776e-05, 6.0207999999999096e-05, 6.0666000000000886e-05, 6.08050000000005...</msg>
<status status="PASS" starttime="20201115 23:00:46.782" endtime="20201115 23:00:46.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.799" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.798" endtime="20201115 23:00:46.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.801" level="INFO">VALUE: [6.0499999999998055e-05, 6.0721999999999166e-05, 6.1013999999998125e-05, 6.043099999999968e-05, 6.0443999999999776e-05, 6.0207999999999096e-05, 6.0666000000000886e-05, 6.080500000000058e-05, 6.083299999999972e-05, 6.0750000000001775e-05, 6.0694000000000026e-05, 6.0971999999999416e-05, 6.0764000000001345e-05, 6.0944000000000276e-05, 6.072299999999864e-05, 6.10560000000003e-05, 6.0264000000000845e-05, 6.0527999999997195e-05, 6.06949999999995e-05, 6.095899999999932e-05, 6.058299999999947e-05, 6.0555999999999804e-05, 6.093100000000018e-05, 6.052700000000119e-05, 6.0500000000001525e-05, 6.011100000000158e-05, 6.0749999999998305e-05, 6.0985999999998985e-05, 6.0250000000001275e-05, 6.0443999999999776e-05, 6.0250000000001275e-05, 6.08750000000019e-05, 6.108299999999997e-05, 6.0194999999999e-05, 6.0278000000000415e-05, 6.0249999999997805e-05, 6.070899999999907e-05, 6.093100000000018e-05, 6.094499999999975e-05, 6.066700000000036e-05, 6.0999999999998555e-05, 6.041700000000011e-05, 6.0222000000002135e-05, 6.0555999999999804e-05, 6.08750000000019e-05, 6.0555999999999804e-05, 6.083300000000319e-05, 6.0985999999998985e-05, 6.0485999999998485e-05, 6.0249999999997805e-05]</msg>
<status status="PASS" starttime="20201115 23:00:46.800" endtime="20201115 23:00:46.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.795" endtime="20201115 23:00:46.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.804" endtime="20201115 23:00:46.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.808" endtime="20201115 23:00:46.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.806" endtime="20201115 23:00:46.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.803" endtime="20201115 23:00:46.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.435" endtime="20201115 23:00:46.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.433" endtime="20201115 23:00:46.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.432" endtime="20201115 23:00:46.829"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.831" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.839" endtime="20201115 23:00:46.858"></status>
</kw>
<msg timestamp="20201115 23:00:46.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.838" endtime="20201115 23:00:46.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.859" endtime="20201115 23:00:46.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.862" endtime="20201115 23:00:46.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.835" endtime="20201115 23:00:46.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.833" endtime="20201115 23:00:46.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.871" endtime="20201115 23:00:47.158"></status>
</kw>
<msg timestamp="20201115 23:00:47.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.869" endtime="20201115 23:00:47.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.162" endtime="20201115 23:00:47.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.171" endtime="20201115 23:00:47.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.867" endtime="20201115 23:00:47.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.865" endtime="20201115 23:00:47.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.177" level="INFO">${RESULT} = [{'time': 0.022210681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.180600000000105e-05, 'source_diff': 6.180600000000105e-05}, {'time': 0.022277694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:47.174" endtime="20201115 23:00:47.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.191" level="INFO">${ACCURACY} = {'source_diff': [6.180600000000105e-05, 6.17629999999994e-05, 6.166700000000136e-05, 6.1888999999999e-05, 6.183300000000072e-05, 6.136099999999936e-05, 6.206899999999793e-05, 6.19439999999978e-05, 6.1...</msg>
<status status="PASS" starttime="20201115 23:00:47.178" endtime="20201115 23:00:47.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.195" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.194" endtime="20201115 23:00:47.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.197" level="INFO">VALUE: [6.180600000000105e-05, 6.17629999999994e-05, 6.166700000000136e-05, 6.1888999999999e-05, 6.183300000000072e-05, 6.136099999999936e-05, 6.206899999999793e-05, 6.19439999999978e-05, 6.131899999999718e-05, 6.145800000000035e-05, 6.13889999999985e-05, 6.190299999999857e-05, 6.182000000000062e-05, 6.190299999999857e-05, 6.132000000000012e-05, 6.15279999999982e-05, 6.143100000000068e-05, 6.191599999999867e-05, 6.16950000000005e-05, 6.212499999999968e-05, 6.177700000000244e-05, 6.194400000000128e-05, 6.201399999999913e-05, 6.20690000000014e-05, 6.20140000000026e-05, 6.142999999999774e-05, 6.12499999999988e-05, 6.186099999999986e-05, 6.129200000000098e-05, 6.127800000000141e-05, 6.15560000000008e-05, 6.12360000000027e-05, 6.20690000000014e-05, 6.17499999999993e-05, 6.208399999999697e-05, 6.161100000000308e-05, 6.118100000000043e-05, 6.176399999999888e-05, 6.212499999999968e-05, 6.157000000000037e-05, 6.13750000000024e-05, 6.118000000000096e-05, 6.15279999999982e-05, 6.17080000000006e-05, 6.181900000000115e-05, 6.183300000000072e-05, 6.115300000000129e-05, 6.176399999999888e-05, 6.213899999999925e-05, 6.195800000000085e-05]</msg>
<status status="PASS" starttime="20201115 23:00:47.196" endtime="20201115 23:00:47.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.191" endtime="20201115 23:00:47.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.201" endtime="20201115 23:00:47.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.204" endtime="20201115 23:00:47.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.203" endtime="20201115 23:00:47.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.199" endtime="20201115 23:00:47.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.832" endtime="20201115 23:00:47.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.830" endtime="20201115 23:00:47.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.829" endtime="20201115 23:00:47.225"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.227" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.236" endtime="20201115 23:00:47.254"></status>
</kw>
<msg timestamp="20201115 23:00:47.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.234" endtime="20201115 23:00:47.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.256" endtime="20201115 23:00:47.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.259" endtime="20201115 23:00:47.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.232" endtime="20201115 23:00:47.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.229" endtime="20201115 23:00:47.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.268" endtime="20201115 23:00:47.554"></status>
</kw>
<msg timestamp="20201115 23:00:47.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.266" endtime="20201115 23:00:47.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.558" endtime="20201115 23:00:47.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.567" endtime="20201115 23:00:47.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.264" endtime="20201115 23:00:47.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.262" endtime="20201115 23:00:47.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.573" level="INFO">${RESULT} = [{'time': 0.022078014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.230600000000155e-05, 'source_diff': 6.230600000000155e-05}, {'time': 0.022145028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:47.570" endtime="20201115 23:00:47.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.587" level="INFO">${ACCURACY} = {'source_diff': [6.230600000000155e-05, 6.23340000000007e-05, 6.262500000000018e-05, 6.27500000000003e-05, 6.290300000000304e-05, 6.237499999999993e-05, 6.242999999999874e-05, 6.29020000000001e-05, 6....</msg>
<status status="PASS" starttime="20201115 23:00:47.574" endtime="20201115 23:00:47.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.591" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.590" endtime="20201115 23:00:47.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.594" level="INFO">VALUE: [6.230600000000155e-05, 6.23340000000007e-05, 6.262500000000018e-05, 6.27500000000003e-05, 6.290300000000304e-05, 6.237499999999993e-05, 6.242999999999874e-05, 6.29020000000001e-05, 6.244400000000178e-05, 6.229100000000251e-05, 6.27500000000003e-05, 6.281899999999868e-05, 6.262500000000018e-05, 6.236100000000036e-05, 6.287500000000043e-05, 6.226399999999938e-05, 6.262500000000018e-05, 6.300000000000056e-05, 6.262500000000018e-05, 6.27080000000016e-05, 6.287500000000043e-05, 6.295899999999785e-05, 6.257000000000137e-05, 6.294499999999828e-05, 6.293099999999871e-05, 6.247200000000092e-05, 6.237499999999993e-05, 6.217999999999849e-05, 6.24439999999983e-05, 6.237499999999993e-05, 6.294400000000228e-05, 6.23889999999995e-05, 6.245799999999788e-05, 6.294400000000228e-05, 6.281899999999868e-05, 6.298600000000099e-05, 6.27080000000016e-05, 6.233300000000122e-05, 6.261100000000061e-05, 6.287500000000043e-05, 6.222200000000067e-05, 6.218099999999796e-05, 6.244500000000125e-05, 6.297300000000089e-05, 6.272300000000064e-05, 6.287500000000043e-05, 6.213899999999925e-05, 6.249999999999659e-05, 6.29020000000001e-05, 6.274999999999684e-05]</msg>
<status status="PASS" starttime="20201115 23:00:47.592" endtime="20201115 23:00:47.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.588" endtime="20201115 23:00:47.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.597" endtime="20201115 23:00:47.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.600" endtime="20201115 23:00:47.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.599" endtime="20201115 23:00:47.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.595" endtime="20201115 23:00:47.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.228" endtime="20201115 23:00:47.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.226" endtime="20201115 23:00:47.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.225" endtime="20201115 23:00:47.621"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.624" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.632" endtime="20201115 23:00:47.651"></status>
</kw>
<msg timestamp="20201115 23:00:47.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.631" endtime="20201115 23:00:47.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.652" endtime="20201115 23:00:47.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.655" endtime="20201115 23:00:47.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.628" endtime="20201115 23:00:47.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.626" endtime="20201115 23:00:47.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.664" endtime="20201115 23:00:47.949"></status>
</kw>
<msg timestamp="20201115 23:00:47.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022430375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.662" endtime="20201115 23:00:47.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022430375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.953" endtime="20201115 23:00:47.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.961" endtime="20201115 23:00:47.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.660" endtime="20201115 23:00:47.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.658" endtime="20201115 23:00:47.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.968" level="INFO">${RESULT} = [{'time': 0.022494139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.376400000000088e-05, 'source_diff': 6.376400000000088e-05}, {'time': 0.022564125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:47.965" endtime="20201115 23:00:47.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.983" level="INFO">${ACCURACY} = {'source_diff': [6.376400000000088e-05, 6.405599999999984e-05, 6.37089999999986e-05, 6.326400000000038e-05, 6.407000000000287e-05, 6.3195000000002e-05, 6.398600000000199e-05, 6.394500000000275e-05, 6....</msg>
<status status="PASS" starttime="20201115 23:00:47.969" endtime="20201115 23:00:47.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.987" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.986" endtime="20201115 23:00:47.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.990" level="INFO">VALUE: [6.376400000000088e-05, 6.405599999999984e-05, 6.37089999999986e-05, 6.326400000000038e-05, 6.407000000000287e-05, 6.3195000000002e-05, 6.398600000000199e-05, 6.394500000000275e-05, 6.323700000000071e-05, 6.384699999999882e-05, 6.319399999999906e-05, 6.33890000000005e-05, 6.337500000000093e-05, 6.35690000000029e-05, 6.406899999999993e-05, 6.415300000000082e-05, 6.337500000000093e-05, 6.386099999999839e-05, 6.377800000000045e-05, 6.337500000000093e-05, 6.324999999999734e-05, 6.408300000000297e-05, 6.331999999999866e-05, 6.387499999999796e-05, 6.313899999999678e-05, 6.312500000000068e-05, 6.363900000000075e-05, 6.36950000000025e-05, 6.361200000000108e-05, 6.32080000000021e-05, 6.341699999999964e-05, 6.337500000000093e-05, 6.369399999999956e-05, 6.374999999999784e-05, 6.337500000000093e-05, 6.3582999999999e-05, 6.32219999999982e-05, 6.400000000000156e-05, 6.323599999999777e-05, 6.358400000000194e-05, 6.394500000000275e-05, 6.358400000000194e-05, 6.40280000000007e-05, 6.331999999999866e-05, 6.347200000000192e-05, 6.387499999999796e-05, 6.369499999999903e-05, 6.395799999999938e-05, 6.369499999999903e-05, 6.377700000000097e-05]</msg>
<status status="PASS" starttime="20201115 23:00:47.989" endtime="20201115 23:00:47.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.984" endtime="20201115 23:00:47.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.993" endtime="20201115 23:00:47.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.996" endtime="20201115 23:00:48.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.995" endtime="20201115 23:00:48.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.991" endtime="20201115 23:00:48.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.624" endtime="20201115 23:00:48.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.623" endtime="20201115 23:00:48.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.622" endtime="20201115 23:00:48.018"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.020" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.028" endtime="20201115 23:00:48.047"></status>
</kw>
<msg timestamp="20201115 23:00:48.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.027" endtime="20201115 23:00:48.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.049" endtime="20201115 23:00:48.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.051" endtime="20201115 23:00:48.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.024" endtime="20201115 23:00:48.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.022" endtime="20201115 23:00:48.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.060" endtime="20201115 23:00:48.345"></status>
</kw>
<msg timestamp="20201115 23:00:48.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.059" endtime="20201115 23:00:48.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.349" endtime="20201115 23:00:48.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.357" endtime="20201115 23:00:48.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.056" endtime="20201115 23:00:48.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.054" endtime="20201115 23:00:48.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.363" level="INFO">${RESULT} = [{'time': 0.022417778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.508399999999998e-05, 'source_diff': 6.508399999999998e-05}, {'time': 0.022487806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:48.360" endtime="20201115 23:00:48.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.377" level="INFO">${ACCURACY} = {'source_diff': [6.508399999999998e-05, 6.413899999999778e-05, 6.422299999999867e-05, 6.429200000000052e-05, 6.479199999999755e-05, 6.470800000000013e-05, 6.412500000000168e-05, 6.511099999999964e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:48.364" endtime="20201115 23:00:48.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.381" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.380" endtime="20201115 23:00:48.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.384" level="INFO">VALUE: [6.508399999999998e-05, 6.413899999999778e-05, 6.422299999999867e-05, 6.429200000000052e-05, 6.479199999999755e-05, 6.470800000000013e-05, 6.412500000000168e-05, 6.511099999999964e-05, 6.424999999999834e-05, 6.495899999999985e-05, 6.424999999999834e-05, 6.420799999999963e-05, 6.413900000000125e-05, 6.468000000000099e-05, 6.476400000000188e-05, 6.436099999999889e-05, 6.445899999999935e-05, 6.436100000000236e-05, 6.449999999999859e-05, 6.487499999999896e-05, 6.42089999999991e-05, 6.482000000000016e-05, 6.493100000000071e-05, 6.506900000000093e-05, 6.493099999999724e-05, 6.451399999999816e-05, 6.42639999999979e-05, 6.427799999999748e-05, 6.499999999999909e-05, 6.419400000000006e-05, 6.445799999999988e-05, 6.420799999999963e-05, 6.501399999999866e-05, 6.457000000000337e-05, 6.474999999999884e-05, 6.495899999999985e-05, 6.463900000000175e-05, 6.448599999999902e-05, 6.455600000000034e-05, 6.451400000000163e-05, 6.430600000000009e-05, 6.495899999999985e-05, 6.483300000000025e-05, 6.461200000000208e-05, 6.454100000000129e-05, 6.437500000000193e-05, 6.426400000000138e-05, 6.481900000000068e-05, 6.466599999999795e-05, 6.418099999999996e-05]</msg>
<status status="PASS" starttime="20201115 23:00:48.382" endtime="20201115 23:00:48.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.378" endtime="20201115 23:00:48.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.387" endtime="20201115 23:00:48.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.391" endtime="20201115 23:00:48.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.389" endtime="20201115 23:00:48.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.386" endtime="20201115 23:00:48.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.021" endtime="20201115 23:00:48.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.019" endtime="20201115 23:00:48.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.018" endtime="20201115 23:00:48.412"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.414" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.422" endtime="20201115 23:00:48.441"></status>
</kw>
<msg timestamp="20201115 23:00:48.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.421" endtime="20201115 23:00:48.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.443" endtime="20201115 23:00:48.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.445" endtime="20201115 23:00:48.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.418" endtime="20201115 23:00:48.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.416" endtime="20201115 23:00:48.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.454" endtime="20201115 23:00:48.741"></status>
</kw>
<msg timestamp="20201115 23:00:48.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.453" endtime="20201115 23:00:48.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.745" endtime="20201115 23:00:48.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.753" endtime="20201115 23:00:48.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.450" endtime="20201115 23:00:48.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.448" endtime="20201115 23:00:48.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.760" level="INFO">${RESULT} = [{'time': 0.021956417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.583399999999726e-05, 'source_diff': 6.583399999999726e-05}, {'time': 0.022026417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:48.756" endtime="20201115 23:00:48.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.773" level="INFO">${ACCURACY} = {'source_diff': [6.583399999999726e-05, 6.52639999999989e-05, 6.562500000000318e-05, 6.549999999999959e-05, 6.537499999999946e-05, 6.587499999999996e-05, 6.551299999999968e-05, 6.592999999999877e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:48.761" endtime="20201115 23:00:48.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.777" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.776" endtime="20201115 23:00:48.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.780" level="INFO">VALUE: [6.583399999999726e-05, 6.52639999999989e-05, 6.562500000000318e-05, 6.549999999999959e-05, 6.537499999999946e-05, 6.587499999999996e-05, 6.551299999999968e-05, 6.592999999999877e-05, 6.583399999999726e-05, 6.577800000000245e-05, 6.53890000000025e-05, 6.57220000000007e-05, 6.580499999999864e-05, 6.537499999999946e-05, 6.545800000000088e-05, 6.595800000000138e-05, 6.605600000000184e-05, 6.552799999999873e-05, 6.538899999999903e-05, 6.536099999999989e-05, 6.598600000000052e-05, 6.519500000000053e-05, 6.544500000000078e-05, 6.54020000000026e-05, 6.615299999999935e-05, 6.551299999999968e-05, 6.548600000000002e-05, 6.519399999999759e-05, 6.57639999999994e-05, 6.565299999999885e-05, 6.562499999999971e-05, 6.542999999999827e-05, 6.547200000000045e-05, 6.587499999999996e-05, 6.579200000000202e-05, 6.549999999999959e-05, 6.527799999999848e-05, 6.594500000000128e-05, 6.541700000000164e-05, 6.541700000000164e-05, 6.526400000000238e-05, 6.566600000000242e-05, 6.530600000000109e-05, 6.526400000000238e-05, 6.568099999999799e-05, 6.580600000000159e-05, 6.580500000000211e-05, 6.601399999999966e-05, 6.586100000000039e-05, 6.613899999999978e-05]</msg>
<status status="PASS" starttime="20201115 23:00:48.778" endtime="20201115 23:00:48.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.774" endtime="20201115 23:00:48.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.783" endtime="20201115 23:00:48.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.787" endtime="20201115 23:00:48.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.785" endtime="20201115 23:00:48.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.782" endtime="20201115 23:00:48.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.415" endtime="20201115 23:00:48.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.413" endtime="20201115 23:00:48.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.412" endtime="20201115 23:00:48.808"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.810" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.818" endtime="20201115 23:00:48.838"></status>
</kw>
<msg timestamp="20201115 23:00:48.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.817" endtime="20201115 23:00:48.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.839" endtime="20201115 23:00:48.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.842" endtime="20201115 23:00:48.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.814" endtime="20201115 23:00:48.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.812" endtime="20201115 23:00:48.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.851" endtime="20201115 23:00:49.138"></status>
</kw>
<msg timestamp="20201115 23:00:49.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:48.849" endtime="20201115 23:00:49.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:49.143" endtime="20201115 23:00:49.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.151" endtime="20201115 23:00:49.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.847" endtime="20201115 23:00:49.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.845" endtime="20201115 23:00:49.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.157" level="INFO">${RESULT} = [{'time': 0.021961, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.659700000000157e-05, 'source_diff': 6.659700000000157e-05}, {'time': 0.022033042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:49.154" endtime="20201115 23:00:49.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.171" level="INFO">${ACCURACY} = {'source_diff': [6.659700000000157e-05, 6.691699999999967e-05, 6.637500000000046e-05, 6.662500000000071e-05, 6.651400000000016e-05, 6.702700000000075e-05, 6.694499999999881e-05, 6.65969999999981e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:49.159" endtime="20201115 23:00:49.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.176" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.175" endtime="20201115 23:00:49.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.178" level="INFO">VALUE: [6.659700000000157e-05, 6.691699999999967e-05, 6.637500000000046e-05, 6.662500000000071e-05, 6.651400000000016e-05, 6.702700000000075e-05, 6.694499999999881e-05, 6.65969999999981e-05, 6.694500000000228e-05, 6.715300000000035e-05, 6.681899999999921e-05, 6.638900000000003e-05, 6.625000000000034e-05, 6.659700000000157e-05, 6.636100000000089e-05, 6.694399999999934e-05, 6.613899999999978e-05, 6.688899999999706e-05, 6.681899999999921e-05, 6.698600000000152e-05, 6.651400000000016e-05, 6.636100000000089e-05, 6.644499999999831e-05, 6.637500000000046e-05, 6.620899999999763e-05, 6.655599999999887e-05, 6.701400000000066e-05, 6.680599999999912e-05, 6.693099999999924e-05, 6.694500000000228e-05, 6.670799999999866e-05, 6.667999999999952e-05, 6.630599999999862e-05, 6.64440000000023e-05, 6.681899999999921e-05, 6.675000000000084e-05, 6.697199999999848e-05, 6.661100000000114e-05, 6.67220000000017e-05, 6.637500000000046e-05, 6.652799999999973e-05, 6.69030000000001e-05, 6.616700000000239e-05, 6.69030000000001e-05, 6.668099999999899e-05, 6.652799999999973e-05, 6.630599999999862e-05, 6.697200000000195e-05, 6.688800000000106e-05, 6.712499999999774e-05]</msg>
<status status="PASS" starttime="20201115 23:00:49.177" endtime="20201115 23:00:49.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.172" endtime="20201115 23:00:49.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.181" endtime="20201115 23:00:49.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.185" endtime="20201115 23:00:49.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.183" endtime="20201115 23:00:49.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.180" endtime="20201115 23:00:49.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.811" endtime="20201115 23:00:49.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.809" endtime="20201115 23:00:49.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.808" endtime="20201115 23:00:49.206"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.208" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.216" endtime="20201115 23:00:49.235"></status>
</kw>
<msg timestamp="20201115 23:00:49.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.215" endtime="20201115 23:00:49.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.237" endtime="20201115 23:00:49.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.239" endtime="20201115 23:00:49.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.212" endtime="20201115 23:00:49.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.210" endtime="20201115 23:00:49.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.248" endtime="20201115 23:00:49.535"></status>
</kw>
<msg timestamp="20201115 23:00:49.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.247" endtime="20201115 23:00:49.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.539" endtime="20201115 23:00:49.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.547" endtime="20201115 23:00:49.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.244" endtime="20201115 23:00:49.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.243" endtime="20201115 23:00:49.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.554" level="INFO">${RESULT} = [{'time': 0.021990708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.786100000000239e-05, 'source_diff': 6.786100000000239e-05}, {'time': 0.022061708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:49.551" endtime="20201115 23:00:49.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.569" level="INFO">${ACCURACY} = {'source_diff': [6.786100000000239e-05, 6.719399999999959e-05, 6.801399999999819e-05, 6.712500000000121e-05, 6.77640000000014e-05, 6.793000000000077e-05, 6.740299999999713e-05, 6.788900000000153e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:49.555" endtime="20201115 23:00:49.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.574" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.573" endtime="20201115 23:00:49.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.576" level="INFO">VALUE: [6.786100000000239e-05, 6.719399999999959e-05, 6.801399999999819e-05, 6.712500000000121e-05, 6.77640000000014e-05, 6.793000000000077e-05, 6.740299999999713e-05, 6.788900000000153e-05, 6.750000000000159e-05, 6.730599999999962e-05, 6.769499999999956e-05, 6.802799999999776e-05, 6.743000000000027e-05, 6.815300000000135e-05, 6.780600000000012e-05, 6.709799999999808e-05, 6.787499999999849e-05, 6.727699999999753e-05, 6.780500000000064e-05, 6.731899999999971e-05, 6.788899999999806e-05, 6.780500000000064e-05, 6.715300000000035e-05, 6.719399999999959e-05, 6.777799999999751e-05, 6.736099999999842e-05, 6.781900000000021e-05, 6.750000000000159e-05, 6.77229999999987e-05, 6.798600000000252e-05, 6.708299999999903e-05, 6.801400000000166e-05, 6.745799999999941e-05, 6.723600000000177e-05, 6.801400000000166e-05, 6.780500000000064e-05, 6.740199999999766e-05, 6.744399999999984e-05, 6.802700000000175e-05, 6.730500000000014e-05, 6.815299999999788e-05, 6.744499999999931e-05, 6.733299999999928e-05, 6.725000000000134e-05, 6.77229999999987e-05, 6.761099999999867e-05, 6.743099999999974e-05, 6.795799999999991e-05, 6.806999999999994e-05, 6.729100000000057e-05]</msg>
<status status="PASS" starttime="20201115 23:00:49.575" endtime="20201115 23:00:49.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.570" endtime="20201115 23:00:49.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.579" endtime="20201115 23:00:49.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.583" endtime="20201115 23:00:49.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.581" endtime="20201115 23:00:49.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.578" endtime="20201115 23:00:49.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.209" endtime="20201115 23:00:49.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.207" endtime="20201115 23:00:49.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.206" endtime="20201115 23:00:49.604"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.606" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.614" endtime="20201115 23:00:49.633"></status>
</kw>
<msg timestamp="20201115 23:00:49.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.613" endtime="20201115 23:00:49.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.635" endtime="20201115 23:00:49.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.637" endtime="20201115 23:00:49.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.610" endtime="20201115 23:00:49.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.608" endtime="20201115 23:00:49.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.647" endtime="20201115 23:00:49.932"></status>
</kw>
<msg timestamp="20201115 23:00:49.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219545, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:49.645" endtime="20201115 23:00:49.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219545, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:49.936" endtime="20201115 23:00:49.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.944" endtime="20201115 23:00:49.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.642" endtime="20201115 23:00:49.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.640" endtime="20201115 23:00:49.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.951" level="INFO">${RESULT} = [{'time': 0.0219545, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.868099999999752e-05, 'source_diff': 6.868099999999752e-05}, {'time': 0.022027486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:49.948" endtime="20201115 23:00:49.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.964" level="INFO">${ACCURACY} = {'source_diff': [6.868099999999752e-05, 6.847199999999998e-05, 6.818100000000049e-05, 6.906999999999747e-05, 6.907000000000094e-05, 6.824999999999887e-05, 6.826399999999844e-05, 6.848600000000302e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:49.952" endtime="20201115 23:00:49.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.969" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.968" endtime="20201115 23:00:49.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.971" level="INFO">VALUE: [6.868099999999752e-05, 6.847199999999998e-05, 6.818100000000049e-05, 6.906999999999747e-05, 6.907000000000094e-05, 6.824999999999887e-05, 6.826399999999844e-05, 6.848600000000302e-05, 6.867999999999805e-05, 6.833399999999976e-05, 6.838800000000256e-05, 6.893100000000124e-05, 6.826300000000243e-05, 6.881899999999774e-05, 6.855499999999792e-05, 6.899999999999962e-05, 6.837499999999899e-05, 6.908299999999756e-05, 6.89030000000021e-05, 6.863899999999881e-05, 6.820800000000016e-05, 6.845899999999988e-05, 6.849999999999912e-05, 6.813899999999831e-05, 6.880600000000112e-05, 6.825000000000234e-05, 6.811099999999917e-05, 6.844500000000031e-05, 6.902699999999928e-05, 6.883300000000078e-05, 6.877699999999903e-05, 6.872200000000023e-05, 6.906900000000146e-05, 6.880500000000164e-05, 6.87359999999998e-05, 6.880499999999817e-05, 6.895800000000091e-05, 6.881899999999774e-05, 6.894399999999787e-05, 6.888899999999906e-05, 6.882000000000069e-05, 6.823600000000277e-05, 6.874999999999937e-05, 6.844400000000084e-05, 6.845899999999988e-05, 6.834699999999985e-05, 6.820800000000016e-05, 6.886099999999992e-05, 6.858300000000053e-05, 6.844400000000084e-05]</msg>
<status status="PASS" starttime="20201115 23:00:49.970" endtime="20201115 23:00:49.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.965" endtime="20201115 23:00:49.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.974" endtime="20201115 23:00:49.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.978" endtime="20201115 23:00:49.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.976" endtime="20201115 23:00:49.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.973" endtime="20201115 23:00:49.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.607" endtime="20201115 23:00:49.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.605" endtime="20201115 23:00:49.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.604" endtime="20201115 23:00:49.999"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.001" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.009" endtime="20201115 23:00:50.028"></status>
</kw>
<msg timestamp="20201115 23:00:50.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.008" endtime="20201115 23:00:50.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.030" endtime="20201115 23:00:50.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.033" endtime="20201115 23:00:50.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.005" endtime="20201115 23:00:50.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.003" endtime="20201115 23:00:50.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.042" endtime="20201115 23:00:50.329"></status>
</kw>
<msg timestamp="20201115 23:00:50.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.040" endtime="20201115 23:00:50.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.333" endtime="20201115 23:00:50.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.341" endtime="20201115 23:00:50.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.038" endtime="20201115 23:00:50.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.036" endtime="20201115 23:00:50.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.348" level="INFO">${RESULT} = [{'time': 0.022147931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.980599999999865e-05, 'source_diff': 6.980599999999865e-05}, {'time': 0.022220958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:50.345" endtime="20201115 23:00:50.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.361" level="INFO">${ACCURACY} = {'source_diff': [6.980599999999865e-05, 6.970799999999819e-05, 6.943100000000174e-05, 6.961100000000067e-05, 6.911100000000017e-05, 6.952799999999926e-05, 6.929199999999858e-05, 6.933300000000128e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:50.349" endtime="20201115 23:00:50.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.366" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.365" endtime="20201115 23:00:50.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.368" level="INFO">VALUE: [6.980599999999865e-05, 6.970799999999819e-05, 6.943100000000174e-05, 6.961100000000067e-05, 6.911100000000017e-05, 6.952799999999926e-05, 6.929199999999858e-05, 6.933300000000128e-05, 7.012500000000074e-05, 6.962499999999677e-05, 7.004199999999933e-05, 6.976399999999994e-05, 6.934800000000033e-05, 7.012500000000074e-05, 6.988900000000006e-05, 6.95420000000023e-05, 6.975000000000037e-05, 6.981999999999822e-05, 6.933400000000076e-05, 6.958399999999754e-05, 6.947200000000098e-05, 6.976300000000046e-05, 7.008399999999804e-05, 6.912499999999974e-05, 6.908299999999756e-05, 6.981899999999874e-05, 6.92360000000003e-05, 6.943000000000227e-05, 7.004199999999933e-05, 6.936099999999695e-05, 6.918100000000149e-05, 6.969400000000209e-05, 6.988900000000006e-05, 6.969499999999809e-05, 6.963899999999981e-05, 6.986100000000092e-05, 6.963800000000034e-05, 6.976399999999994e-05, 6.94160000000027e-05, 6.948600000000055e-05, 6.936100000000042e-05, 6.988900000000006e-05, 7.008300000000203e-05, 6.937499999999999e-05, 6.963899999999981e-05, 6.998600000000105e-05, 7.006900000000246e-05, 6.95970000000011e-05, 6.961100000000067e-05, 6.945800000000141e-05]</msg>
<status status="PASS" starttime="20201115 23:00:50.367" endtime="20201115 23:00:50.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.362" endtime="20201115 23:00:50.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.371" endtime="20201115 23:00:50.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.375" endtime="20201115 23:00:50.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.373" endtime="20201115 23:00:50.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.370" endtime="20201115 23:00:50.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.002" endtime="20201115 23:00:50.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.000" endtime="20201115 23:00:50.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.999" endtime="20201115 23:00:50.396"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.398" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.407" endtime="20201115 23:00:50.426"></status>
</kw>
<msg timestamp="20201115 23:00:50.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.405" endtime="20201115 23:00:50.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.428" endtime="20201115 23:00:50.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.430" endtime="20201115 23:00:50.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.402" endtime="20201115 23:00:50.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.400" endtime="20201115 23:00:50.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.439" endtime="20201115 23:00:50.726"></status>
</kw>
<msg timestamp="20201115 23:00:50.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.438" endtime="20201115 23:00:50.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.730" endtime="20201115 23:00:50.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.738" endtime="20201115 23:00:50.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.435" endtime="20201115 23:00:50.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.433" endtime="20201115 23:00:50.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.745" level="INFO">${RESULT} = [{'time': 0.022501986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.036100000000142e-05, 'source_diff': 7.036100000000142e-05}, {'time': 0.022577944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:50.742" endtime="20201115 23:00:50.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.759" level="INFO">${ACCURACY} = {'source_diff': [7.036100000000142e-05, 7.112499999999827e-05, 7.080500000000017e-05, 7.030599999999915e-05, 7.081899999999974e-05, 7.04299999999998e-05, 7.063899999999734e-05, 7.013899999999684e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:50.746" endtime="20201115 23:00:50.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.763" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.762" endtime="20201115 23:00:50.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.765" level="INFO">VALUE: [7.036100000000142e-05, 7.112499999999827e-05, 7.080500000000017e-05, 7.030599999999915e-05, 7.081899999999974e-05, 7.04299999999998e-05, 7.063899999999734e-05, 7.013899999999684e-05, 7.047299999999798e-05, 7.029199999999958e-05, 7.031999999999872e-05, 7.048599999999808e-05, 7.040300000000013e-05, 7.095900000000238e-05, 7.063900000000081e-05, 7.056999999999897e-05, 7.034699999999838e-05, 7.086099999999845e-05, 7.022199999999826e-05, 7.026400000000044e-05, 7.037500000000099e-05, 7.097199999999901e-05, 7.1069e-05, 7.019399999999912e-05, 7.066699999999995e-05, 7.087499999999802e-05, 7.051400000000069e-05, 7.068000000000005e-05, 7.081899999999974e-05, 7.070799999999919e-05, 7.093099999999977e-05, 7.019499999999859e-05, 7.054100000000035e-05, 7.095899999999891e-05, 7.076400000000094e-05, 7.088900000000106e-05, 7.052800000000026e-05, 7.09170000000002e-05, 7.07910000000006e-05, 7.058299999999906e-05, 7.033300000000228e-05, 7.111100000000217e-05, 7.05689999999995e-05, 7.065300000000038e-05, 7.108299999999956e-05, 7.055499999999992e-05, 7.083299999999931e-05, 7.095799999999944e-05, 7.015299999999988e-05, 7.038900000000056e-05]</msg>
<status status="PASS" starttime="20201115 23:00:50.764" endtime="20201115 23:00:50.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.760" endtime="20201115 23:00:50.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.769" endtime="20201115 23:00:50.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.772" endtime="20201115 23:00:50.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.771" endtime="20201115 23:00:50.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.767" endtime="20201115 23:00:50.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.399" endtime="20201115 23:00:50.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.397" endtime="20201115 23:00:50.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.396" endtime="20201115 23:00:50.794"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.796" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.804" endtime="20201115 23:00:50.824"></status>
</kw>
<msg timestamp="20201115 23:00:50.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.803" endtime="20201115 23:00:50.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.825" endtime="20201115 23:00:50.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.828" endtime="20201115 23:00:50.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.800" endtime="20201115 23:00:50.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.798" endtime="20201115 23:00:50.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.837" endtime="20201115 23:00:51.123"></status>
</kw>
<msg timestamp="20201115 23:00:51.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.835" endtime="20201115 23:00:51.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.127" endtime="20201115 23:00:51.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.135" endtime="20201115 23:00:51.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.833" endtime="20201115 23:00:51.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.831" endtime="20201115 23:00:51.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.142" level="INFO">${RESULT} = [{'time': 0.022621292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.159800000000258e-05, 'source_diff': 7.159800000000258e-05}, {'time': 0.022698278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:51.139" endtime="20201115 23:00:51.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.157" level="INFO">${ACCURACY} = {'source_diff': [7.159800000000258e-05, 7.123599999999883e-05, 7.181900000000074e-05, 7.145799999999994e-05, 7.116700000000045e-05, 7.202800000000176e-05, 7.201400000000219e-05, 7.195800000000044e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:51.143" endtime="20201115 23:00:51.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.161" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.160" endtime="20201115 23:00:51.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.164" level="INFO">VALUE: [7.159800000000258e-05, 7.123599999999883e-05, 7.181900000000074e-05, 7.145799999999994e-05, 7.116700000000045e-05, 7.202800000000176e-05, 7.201400000000219e-05, 7.195800000000044e-05, 7.15690000000005e-05, 7.16109999999992e-05, 7.152799999999779e-05, 7.138900000000156e-05, 7.15560000000004e-05, 7.145799999999994e-05, 7.149999999999865e-05, 7.183300000000031e-05, 7.143100000000027e-05, 7.187499999999902e-05, 7.131999999999972e-05, 7.118100000000002e-05, 7.119499999999959e-05, 7.142999999999733e-05, 7.19439999999974e-05, 7.131900000000024e-05, 7.119400000000012e-05, 7.206899999999752e-05, 7.118000000000055e-05, 7.12360000000023e-05, 7.108299999999956e-05, 7.113899999999784e-05, 7.188900000000206e-05, 7.162499999999877e-05, 7.122199999999926e-05, 7.147300000000245e-05, 7.138899999999809e-05, 7.123599999999883e-05, 7.195899999999991e-05, 7.120899999999916e-05, 7.138899999999809e-05, 7.138799999999862e-05, 7.198700000000252e-05, 7.152700000000178e-05, 7.162500000000224e-05, 7.144400000000037e-05, 7.137499999999852e-05, 7.183300000000031e-05, 7.15690000000005e-05, 7.149999999999865e-05, 7.212499999999927e-05, 7.165299999999791e-05]</msg>
<status status="PASS" starttime="20201115 23:00:51.162" endtime="20201115 23:00:51.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.158" endtime="20201115 23:00:51.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.178" endtime="20201115 23:00:51.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.182" endtime="20201115 23:00:51.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.180" endtime="20201115 23:00:51.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.177" endtime="20201115 23:00:51.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.797" endtime="20201115 23:00:51.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.795" endtime="20201115 23:00:51.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.794" endtime="20201115 23:00:51.203"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.205" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.213" endtime="20201115 23:00:51.233"></status>
</kw>
<msg timestamp="20201115 23:00:51.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.212" endtime="20201115 23:00:51.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.235" endtime="20201115 23:00:51.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.237" endtime="20201115 23:00:51.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.209" endtime="20201115 23:00:51.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.207" endtime="20201115 23:00:51.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.246" endtime="20201115 23:00:51.530"></status>
</kw>
<msg timestamp="20201115 23:00:51.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.245" endtime="20201115 23:00:51.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.534" endtime="20201115 23:00:51.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.543" endtime="20201115 23:00:51.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.242" endtime="20201115 23:00:51.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.240" endtime="20201115 23:00:51.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.549" level="INFO">${RESULT} = [{'time': 0.021990917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.320899999999769e-05, 'source_diff': 7.320899999999769e-05}, {'time': 0.022069889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:51.546" endtime="20201115 23:00:51.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.563" level="INFO">${ACCURACY} = {'source_diff': [7.320899999999769e-05, 7.300000000000015e-05, 7.293100000000177e-05, 7.302800000000276e-05, 7.252800000000226e-05, 7.272199999999729e-05, 7.213899999999884e-05, 7.286199999999993e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:51.550" endtime="20201115 23:00:51.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.567" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.566" endtime="20201115 23:00:51.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.570" level="INFO">VALUE: [7.320899999999769e-05, 7.300000000000015e-05, 7.293100000000177e-05, 7.302800000000276e-05, 7.252800000000226e-05, 7.272199999999729e-05, 7.213899999999884e-05, 7.286199999999993e-05, 7.258300000000106e-05, 7.244400000000137e-05, 7.287500000000002e-05, 7.283300000000131e-05, 7.306899999999852e-05, 7.273599999999686e-05, 7.306899999999852e-05, 7.236099999999995e-05, 7.305599999999843e-05, 7.262499999999977e-05, 7.22499999999994e-05, 7.25699999999975e-05, 7.25560000000014e-05, 7.262500000000324e-05, 7.213899999999884e-05, 7.287500000000002e-05, 7.251399999999922e-05, 7.312500000000027e-05, 7.213800000000284e-05, 7.312500000000027e-05, 7.240299999999866e-05, 7.306899999999852e-05, 7.291599999999926e-05, 7.250000000000312e-05, 7.22499999999994e-05, 7.248600000000008e-05, 7.244400000000137e-05, 7.276399999999947e-05, 7.281899999999827e-05, 7.244499999999737e-05, 7.302799999999929e-05, 7.277800000000251e-05, 7.216700000000145e-05, 7.301300000000024e-05, 7.2763e-05, 7.22499999999994e-05, 7.216600000000198e-05, 7.311099999999723e-05, 7.227799999999854e-05, 7.309699999999766e-05, 7.24439999999979e-05, 7.230500000000167e-05]</msg>
<status status="PASS" starttime="20201115 23:00:51.568" endtime="20201115 23:00:51.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.564" endtime="20201115 23:00:51.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.573" endtime="20201115 23:00:51.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.577" endtime="20201115 23:00:51.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.575" endtime="20201115 23:00:51.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.572" endtime="20201115 23:00:51.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.206" endtime="20201115 23:00:51.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.204" endtime="20201115 23:00:51.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.203" endtime="20201115 23:00:51.598"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.600" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.608" endtime="20201115 23:00:51.628"></status>
</kw>
<msg timestamp="20201115 23:00:51.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.607" endtime="20201115 23:00:51.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.630" endtime="20201115 23:00:51.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.632" endtime="20201115 23:00:51.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.604" endtime="20201115 23:00:51.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.602" endtime="20201115 23:00:51.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.641" endtime="20201115 23:00:51.928"></status>
</kw>
<msg timestamp="20201115 23:00:51.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.640" endtime="20201115 23:00:51.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.932" endtime="20201115 23:00:51.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.941" endtime="20201115 23:00:51.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.637" endtime="20201115 23:00:51.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.635" endtime="20201115 23:00:51.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.947" level="INFO">${RESULT} = [{'time': 0.022398903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.352799999999979e-05, 'source_diff': 7.352799999999979e-05}, {'time': 0.022477972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:51.944" endtime="20201115 23:00:51.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.961" level="INFO">${ACCURACY} = {'source_diff': [7.352799999999979e-05, 7.419399999999965e-05, 7.344499999999837e-05, 7.345899999999794e-05, 7.388900000000059e-05, 7.329199999999911e-05, 7.381899999999927e-05, 7.370799999999872e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:51.949" endtime="20201115 23:00:51.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.966" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.965" endtime="20201115 23:00:51.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.968" level="INFO">VALUE: [7.352799999999979e-05, 7.419399999999965e-05, 7.344499999999837e-05, 7.345899999999794e-05, 7.388900000000059e-05, 7.329199999999911e-05, 7.381899999999927e-05, 7.370799999999872e-05, 7.345800000000194e-05, 7.395799999999897e-05, 7.41249999999978e-05, 7.398599999999811e-05, 7.366700000000295e-05, 7.40829999999991e-05, 7.319499999999812e-05, 7.412500000000127e-05, 7.392999999999983e-05, 7.408399999999857e-05, 7.381999999999875e-05, 7.401400000000072e-05, 7.390200000000069e-05, 7.361099999999773e-05, 7.34439999999989e-05, 7.409699999999866e-05, 7.38049999999997e-05, 7.359699999999816e-05, 7.404100000000038e-05, 7.323600000000083e-05, 7.358300000000206e-05, 7.377800000000004e-05, 7.393100000000277e-05, 7.383399999999832e-05, 7.349999999999718e-05, 7.370900000000166e-05, 7.34309999999988e-05, 7.347300000000098e-05, 7.352799999999979e-05, 7.400000000000115e-05, 7.383399999999832e-05, 7.344400000000237e-05, 7.40829999999991e-05, 7.404100000000038e-05, 7.36110000000012e-05, 7.340299999999966e-05, 7.39439999999994e-05, 7.340299999999966e-05, 7.392999999999983e-05, 7.351400000000022e-05, 7.405599999999943e-05, 7.369499999999862e-05]</msg>
<status status="PASS" starttime="20201115 23:00:51.967" endtime="20201115 23:00:51.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.962" endtime="20201115 23:00:51.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.971" endtime="20201115 23:00:51.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.975" endtime="20201115 23:00:51.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.973" endtime="20201115 23:00:51.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.970" endtime="20201115 23:00:51.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.601" endtime="20201115 23:00:51.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.599" endtime="20201115 23:00:51.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.598" endtime="20201115 23:00:51.996"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.998" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.006" endtime="20201115 23:00:52.026"></status>
</kw>
<msg timestamp="20201115 23:00:52.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.005" endtime="20201115 23:00:52.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.028" endtime="20201115 23:00:52.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.030" endtime="20201115 23:00:52.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.002" endtime="20201115 23:00:52.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.000" endtime="20201115 23:00:52.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.039" endtime="20201115 23:00:52.326"></status>
</kw>
<msg timestamp="20201115 23:00:52.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022211403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.038" endtime="20201115 23:00:52.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022211403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.330" endtime="20201115 23:00:52.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.338" endtime="20201115 23:00:52.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.035" endtime="20201115 23:00:52.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.033" endtime="20201115 23:00:52.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.345" level="INFO">${RESULT} = [{'time': 0.022211403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513900000000184e-05, 'source_diff': 7.513900000000184e-05}, {'time': 0.022288417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:52.342" endtime="20201115 23:00:52.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.359" level="INFO">${ACCURACY} = {'source_diff': [7.513900000000184e-05, 7.470900000000266e-05, 7.472299999999876e-05, 7.436099999999848e-05, 7.495799999999997e-05, 7.438900000000109e-05, 7.44439999999999e-05, 7.459699999999916e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:52.346" endtime="20201115 23:00:52.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.363" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.362" endtime="20201115 23:00:52.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.365" level="INFO">VALUE: [7.513900000000184e-05, 7.470900000000266e-05, 7.472299999999876e-05, 7.436099999999848e-05, 7.495799999999997e-05, 7.438900000000109e-05, 7.44439999999999e-05, 7.459699999999916e-05, 7.456900000000002e-05, 7.41110000000017e-05, 7.427800000000054e-05, 7.505500000000095e-05, 7.506900000000052e-05, 7.46110000000022e-05, 7.502800000000129e-05, 7.447299999999851e-05, 7.47500000000019e-05, 7.420900000000216e-05, 7.491699999999726e-05, 7.481999999999975e-05, 7.438900000000109e-05, 7.497199999999954e-05, 7.448599999999861e-05, 7.506900000000052e-05, 7.506900000000052e-05, 7.488900000000159e-05, 7.445800000000294e-05, 7.436099999999848e-05, 7.483299999999984e-05, 7.481900000000027e-05, 7.501400000000172e-05, 7.46249999999983e-05, 7.495799999999997e-05, 7.49310000000003e-05, 7.413900000000084e-05, 7.47500000000019e-05, 7.436100000000195e-05, 7.509699999999966e-05, 7.44029999999972e-05, 7.422199999999879e-05, 7.498599999999911e-05, 7.445799999999947e-05, 7.44439999999999e-05, 7.481900000000027e-05, 7.479100000000113e-05, 7.47500000000019e-05, 7.506900000000052e-05, 7.483299999999984e-05, 7.469400000000015e-05, 7.444499999999937e-05]</msg>
<status status="PASS" starttime="20201115 23:00:52.364" endtime="20201115 23:00:52.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.359" endtime="20201115 23:00:52.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.368" endtime="20201115 23:00:52.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.372" endtime="20201115 23:00:52.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.370" endtime="20201115 23:00:52.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.367" endtime="20201115 23:00:52.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.999" endtime="20201115 23:00:52.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.997" endtime="20201115 23:00:52.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.996" endtime="20201115 23:00:52.393"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.395" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.404" endtime="20201115 23:00:52.424"></status>
</kw>
<msg timestamp="20201115 23:00:52.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.402" endtime="20201115 23:00:52.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.426" endtime="20201115 23:00:52.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.428" endtime="20201115 23:00:52.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.400" endtime="20201115 23:00:52.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.397" endtime="20201115 23:00:52.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.437" endtime="20201115 23:00:52.724"></status>
</kw>
<msg timestamp="20201115 23:00:52.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02223425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:52.435" endtime="20201115 23:00:52.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02223425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:52.728" endtime="20201115 23:00:52.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.736" endtime="20201115 23:00:52.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.433" endtime="20201115 23:00:52.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.431" endtime="20201115 23:00:52.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.743" level="INFO">${RESULT} = [{'time': 0.02223425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.540300000000166e-05, 'source_diff': 7.540300000000166e-05}, {'time': 0.022313264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:52.739" endtime="20201115 23:00:52.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.801" level="INFO">${ACCURACY} = {'source_diff': [7.540300000000166e-05, 7.580599999999771e-05, 7.577800000000204e-05, 7.518100000000055e-05, 7.56249999999993e-05, 7.559799999999964e-05, 7.569500000000062e-05, 7.518100000000055e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:52.744" endtime="20201115 23:00:52.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.805" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.804" endtime="20201115 23:00:52.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.807" level="INFO">VALUE: [7.540300000000166e-05, 7.580599999999771e-05, 7.577800000000204e-05, 7.518100000000055e-05, 7.56249999999993e-05, 7.559799999999964e-05, 7.569500000000062e-05, 7.518100000000055e-05, 7.588899999999912e-05, 7.60969999999972e-05, 7.60830000000011e-05, 7.59440000000014e-05, 7.531900000000077e-05, 7.606900000000152e-05, 7.549999999999918e-05, 7.573600000000333e-05, 7.598600000000011e-05, 7.606999999999753e-05, 7.519399999999718e-05, 7.551399999999875e-05, 7.538899999999862e-05, 7.568100000000105e-05, 7.587499999999955e-05, 7.587499999999955e-05, 7.574999999999943e-05, 7.606899999999805e-05, 7.568000000000158e-05, 7.60830000000011e-05, 7.55969999999967e-05, 7.566699999999801e-05, 7.59440000000014e-05, 7.530599999999721e-05, 7.574999999999943e-05, 7.515299999999794e-05, 7.558400000000007e-05, 7.55700000000005e-05, 7.53890000000021e-05, 7.61249999999998e-05, 7.60830000000011e-05, 7.591600000000226e-05, 7.569500000000062e-05, 7.562500000000277e-05, 7.605600000000143e-05, 7.569499999999715e-05, 7.613899999999937e-05, 7.595800000000097e-05, 7.538899999999862e-05, 7.612500000000327e-05, 7.580499999999823e-05, 7.604199999999839e-05]</msg>
<status status="PASS" starttime="20201115 23:00:52.806" endtime="20201115 23:00:52.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.801" endtime="20201115 23:00:52.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.811" endtime="20201115 23:00:52.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.814" endtime="20201115 23:00:52.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.812" endtime="20201115 23:00:52.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.809" endtime="20201115 23:00:52.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.396" endtime="20201115 23:00:52.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.394" endtime="20201115 23:00:52.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.393" endtime="20201115 23:00:52.835"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.837" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.845" endtime="20201115 23:00:52.866"></status>
</kw>
<msg timestamp="20201115 23:00:52.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.844" endtime="20201115 23:00:52.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.867" endtime="20201115 23:00:52.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.870" endtime="20201115 23:00:52.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.841" endtime="20201115 23:00:52.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.839" endtime="20201115 23:00:52.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.879" endtime="20201115 23:00:53.164"></status>
</kw>
<msg timestamp="20201115 23:00:53.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022624319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.878" endtime="20201115 23:00:53.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022624319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.168" endtime="20201115 23:00:53.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.176" endtime="20201115 23:00:53.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.875" endtime="20201115 23:00:53.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.874" endtime="20201115 23:00:53.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.183" level="INFO">${RESULT} = [{'time': 0.022701208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.688900000000012e-05, 'source_diff': 7.688900000000012e-05}, {'time': 0.022782167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:53.179" endtime="20201115 23:00:53.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.196" level="INFO">${ACCURACY} = {'source_diff': [7.688900000000012e-05, 7.613899999999937e-05, 7.651399999999975e-05, 7.709799999999767e-05, 7.706899999999905e-05, 7.698600000000111e-05, 7.68189999999988e-05, 7.71250000000008e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:00:53.184" endtime="20201115 23:00:53.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.201" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.200" endtime="20201115 23:00:53.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.203" level="INFO">VALUE: [7.688900000000012e-05, 7.613899999999937e-05, 7.651399999999975e-05, 7.709799999999767e-05, 7.706899999999905e-05, 7.698600000000111e-05, 7.68189999999988e-05, 7.71250000000008e-05, 7.622199999999732e-05, 7.63050000000022e-05, 7.624999999999993e-05, 7.71250000000008e-05, 7.656900000000202e-05, 7.641700000000223e-05, 7.702799999999982e-05, 7.633400000000082e-05, 7.622200000000079e-05, 7.687500000000055e-05, 7.6764e-05, 7.61249999999998e-05, 7.686200000000046e-05, 7.688900000000012e-05, 7.642999999999886e-05, 7.71250000000008e-05, 7.693000000000283e-05, 7.637500000000005e-05, 7.652799999999932e-05, 7.63189999999983e-05, 7.637500000000005e-05, 7.6764e-05, 7.615300000000241e-05, 7.674999999999696e-05, 7.64029999999992e-05, 7.672300000000076e-05, 7.638899999999962e-05, 7.643099999999833e-05, 7.638899999999962e-05, 7.615200000000294e-05, 7.630599999999821e-05, 7.687499999999708e-05, 7.694399999999893e-05, 7.622199999999732e-05, 7.618000000000208e-05, 7.68050000000027e-05, 7.633299999999787e-05, 7.62639999999995e-05, 7.654199999999889e-05, 7.637500000000005e-05, 7.680599999999871e-05, 7.651399999999975e-05]</msg>
<status status="PASS" starttime="20201115 23:00:53.202" endtime="20201115 23:00:53.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.197" endtime="20201115 23:00:53.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.206" endtime="20201115 23:00:53.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.210" endtime="20201115 23:00:53.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.208" endtime="20201115 23:00:53.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.205" endtime="20201115 23:00:53.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.838" endtime="20201115 23:00:53.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.836" endtime="20201115 23:00:53.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.835" endtime="20201115 23:00:53.231"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.233" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.242" endtime="20201115 23:00:53.262"></status>
</kw>
<msg timestamp="20201115 23:00:53.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.241" endtime="20201115 23:00:53.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.264" endtime="20201115 23:00:53.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.266" endtime="20201115 23:00:53.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.238" endtime="20201115 23:00:53.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.235" endtime="20201115 23:00:53.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.275" endtime="20201115 23:00:53.561"></status>
</kw>
<msg timestamp="20201115 23:00:53.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023169472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023247125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.274" endtime="20201115 23:00:53.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023169472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023247125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.566" endtime="20201115 23:00:53.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.574" endtime="20201115 23:00:53.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.271" endtime="20201115 23:00:53.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.270" endtime="20201115 23:00:53.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.580" level="INFO">${RESULT} = [{'time': 0.023247125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.765300000000044e-05, 'source_diff': 7.765300000000044e-05}, {'time': 0.023328111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:53.577" endtime="20201115 23:00:53.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.594" level="INFO">${ACCURACY} = {'source_diff': [7.765300000000044e-05, 7.806900000000006e-05, 7.777699999999763e-05, 7.779200000000014e-05, 7.751400000000075e-05, 7.800000000000168e-05, 7.74030000000002e-05, 7.75700000000025e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:00:53.581" endtime="20201115 23:00:53.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.598" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.597" endtime="20201115 23:00:53.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.601" level="INFO">VALUE: [7.765300000000044e-05, 7.806900000000006e-05, 7.777699999999763e-05, 7.779200000000014e-05, 7.751400000000075e-05, 7.800000000000168e-05, 7.74030000000002e-05, 7.75700000000025e-05, 7.751400000000075e-05, 7.7764000000001e-05, 7.797199999999907e-05, 7.720899999999822e-05, 7.777800000000057e-05, 7.772200000000229e-05, 7.809799999999867e-05, 7.780599999999971e-05, 7.734699999999844e-05, 7.75830000000026e-05, 7.779100000000067e-05, 7.74030000000002e-05, 7.812499999999833e-05, 7.773599999999839e-05, 7.816700000000051e-05, 7.812499999999833e-05, 7.787500000000155e-05, 7.813900000000137e-05, 7.755600000000293e-05, 7.76250000000013e-05, 7.7764000000001e-05, 7.741699999999976e-05, 7.732000000000225e-05, 7.76250000000013e-05, 7.812499999999833e-05, 7.751400000000075e-05, 7.773599999999839e-05, 7.80969999999992e-05, 7.738900000000062e-05, 7.712499999999733e-05, 7.765299999999697e-05, 7.777800000000057e-05, 7.743000000000333e-05, 7.74030000000002e-05, 7.793099999999983e-05, 7.793099999999983e-05, 7.725000000000093e-05, 7.786200000000146e-05, 7.719499999999865e-05, 7.737500000000105e-05, 7.736099999999801e-05, 7.805599999999996e-05]</msg>
<status status="PASS" starttime="20201115 23:00:53.599" endtime="20201115 23:00:53.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.595" endtime="20201115 23:00:53.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.604" endtime="20201115 23:00:53.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.607" endtime="20201115 23:00:53.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.606" endtime="20201115 23:00:53.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.602" endtime="20201115 23:00:53.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.234" endtime="20201115 23:00:53.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.232" endtime="20201115 23:00:53.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.231" endtime="20201115 23:00:53.629"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.631" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.640" endtime="20201115 23:00:53.660"></status>
</kw>
<msg timestamp="20201115 23:00:53.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.639" endtime="20201115 23:00:53.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.662" endtime="20201115 23:00:53.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.664" endtime="20201115 23:00:53.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.635" endtime="20201115 23:00:53.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.633" endtime="20201115 23:00:53.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.673" endtime="20201115 23:00:53.960"></status>
</kw>
<msg timestamp="20201115 23:00:53.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023487, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:53.672" endtime="20201115 23:00:53.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023487, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:53.965" endtime="20201115 23:00:53.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.973" endtime="20201115 23:00:53.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.669" endtime="20201115 23:00:53.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.667" endtime="20201115 23:00:53.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.979" level="INFO">${RESULT} = [{'time': 0.023565347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.834699999999944e-05, 'source_diff': 7.834699999999944e-05}, {'time': 0.023646347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:53.976" endtime="20201115 23:00:53.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.993" level="INFO">${ACCURACY} = {'source_diff': [7.834699999999944e-05, 7.875000000000243e-05, 7.894399999999746e-05, 7.856900000000056e-05, 7.836099999999901e-05, 7.854200000000089e-05, 7.906999999999706e-05, 7.912499999999933e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:53.980" endtime="20201115 23:00:53.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.997" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.996" endtime="20201115 23:00:53.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.000" level="INFO">VALUE: [7.834699999999944e-05, 7.875000000000243e-05, 7.894399999999746e-05, 7.856900000000056e-05, 7.836099999999901e-05, 7.854200000000089e-05, 7.906999999999706e-05, 7.912499999999933e-05, 7.877800000000157e-05, 7.818100000000008e-05, 7.89450000000004e-05, 7.852800000000132e-05, 7.902700000000235e-05, 7.890199999999875e-05, 7.905600000000096e-05, 7.829100000000117e-05, 7.833299999999987e-05, 7.848599999999914e-05, 7.852800000000132e-05, 7.825000000000193e-05, 7.887499999999908e-05, 7.907000000000053e-05, 7.84030000000012e-05, 7.831999999999978e-05, 7.855599999999699e-05, 7.816600000000104e-05, 7.895899999999997e-05, 7.833399999999935e-05, 7.830600000000021e-05, 7.844400000000043e-05, 7.862499999999883e-05, 7.869400000000068e-05, 7.86389999999984e-05, 7.887500000000255e-05, 7.823599999999889e-05, 7.844399999999696e-05, 7.838899999999815e-05, 7.836100000000248e-05, 7.843100000000033e-05, 7.820799999999975e-05, 7.891700000000126e-05, 7.834699999999944e-05, 7.862499999999883e-05, 7.901400000000225e-05, 7.855600000000046e-05, 7.880600000000071e-05, 7.824999999999846e-05, 7.841600000000129e-05, 7.86389999999984e-05, 7.820800000000322e-05]</msg>
<status status="PASS" starttime="20201115 23:00:53.998" endtime="20201115 23:00:54.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.994" endtime="20201115 23:00:54.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.004" endtime="20201115 23:00:54.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.007" endtime="20201115 23:00:54.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.005" endtime="20201115 23:00:54.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.002" endtime="20201115 23:00:54.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.632" endtime="20201115 23:00:54.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.630" endtime="20201115 23:00:54.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.629" endtime="20201115 23:00:54.028"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.030" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.038" endtime="20201115 23:00:54.059"></status>
</kw>
<msg timestamp="20201115 23:00:54.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.037" endtime="20201115 23:00:54.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.061" endtime="20201115 23:00:54.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.063" endtime="20201115 23:00:54.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.034" endtime="20201115 23:00:54.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.032" endtime="20201115 23:00:54.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.072" endtime="20201115 23:00:54.357"></status>
</kw>
<msg timestamp="20201115 23:00:54.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022853431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.071" endtime="20201115 23:00:54.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022853431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.362" endtime="20201115 23:00:54.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.370" endtime="20201115 23:00:54.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.068" endtime="20201115 23:00:54.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.066" endtime="20201115 23:00:54.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.376" level="INFO">${RESULT} = [{'time': 0.022933278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.984700000000094e-05, 'source_diff': 7.984700000000094e-05}, {'time': 0.023015292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:54.373" endtime="20201115 23:00:54.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.391" level="INFO">${ACCURACY} = {'source_diff': [7.984700000000094e-05, 7.924999999999946e-05, 7.937499999999958e-05, 7.99580000000015e-05, 7.980599999999824e-05, 7.95970000000007e-05, 7.990199999999975e-05, 7.994400000000193e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:00:54.377" endtime="20201115 23:00:54.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.395" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.394" endtime="20201115 23:00:54.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.398" level="INFO">VALUE: [7.984700000000094e-05, 7.924999999999946e-05, 7.937499999999958e-05, 7.99580000000015e-05, 7.980599999999824e-05, 7.95970000000007e-05, 7.990199999999975e-05, 7.994400000000193e-05, 7.925000000000293e-05, 7.930500000000174e-05, 7.997200000000107e-05, 7.967999999999864e-05, 8.00970000000012e-05, 7.968099999999811e-05, 7.976399999999953e-05, 7.919500000000065e-05, 7.91389999999989e-05, 7.995900000000097e-05, 8.012500000000033e-05, 8.001400000000325e-05, 7.99169999999988e-05, 7.919399999999771e-05, 7.938899999999915e-05, 7.924999999999946e-05, 8.009699999999773e-05, 7.940299999999872e-05, 7.937500000000305e-05, 7.931899999999784e-05, 7.94030000000022e-05, 7.949999999999971e-05, 7.962499999999983e-05, 7.95970000000007e-05, 7.96389999999994e-05, 7.944499999999743e-05, 7.92640000000025e-05, 7.937499999999958e-05, 8.012500000000033e-05, 7.969400000000168e-05, 7.998700000000011e-05, 8.008300000000163e-05, 8.006900000000206e-05, 7.940299999999872e-05, 7.956900000000156e-05, 7.980499999999877e-05, 8.006899999999859e-05, 7.961100000000026e-05, 8.007000000000153e-05, 7.988899999999965e-05, 7.988900000000312e-05, 7.998600000000064e-05]</msg>
<status status="PASS" starttime="20201115 23:00:54.396" endtime="20201115 23:00:54.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.392" endtime="20201115 23:00:54.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.402" endtime="20201115 23:00:54.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.405" endtime="20201115 23:00:54.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.403" endtime="20201115 23:00:54.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.400" endtime="20201115 23:00:54.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.031" endtime="20201115 23:00:54.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.029" endtime="20201115 23:00:54.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.028" endtime="20201115 23:00:54.426"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.428" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.436" endtime="20201115 23:00:54.457"></status>
</kw>
<msg timestamp="20201115 23:00:54.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.435" endtime="20201115 23:00:54.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.458" endtime="20201115 23:00:54.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.461" endtime="20201115 23:00:54.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.432" endtime="20201115 23:00:54.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.430" endtime="20201115 23:00:54.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.470" endtime="20201115 23:00:54.755"></status>
</kw>
<msg timestamp="20201115 23:00:54.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022622083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022702833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.468" endtime="20201115 23:00:54.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022622083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022702833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.759" endtime="20201115 23:00:54.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.767" endtime="20201115 23:00:54.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.466" endtime="20201115 23:00:54.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.464" endtime="20201115 23:00:54.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.774" level="INFO">${RESULT} = [{'time': 0.022702833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.074999999999749e-05, 'source_diff': 8.074999999999749e-05}, {'time': 0.022786819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:54.771" endtime="20201115 23:00:54.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.788" level="INFO">${ACCURACY} = {'source_diff': [8.074999999999749e-05, 8.042999999999939e-05, 8.069399999999921e-05, 8.042999999999939e-05, 8.06390000000004e-05, 8.063899999999694e-05, 8.100000000000121e-05, 8.048600000000114e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:54.775" endtime="20201115 23:00:54.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.793" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.791" endtime="20201115 23:00:54.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.795" level="INFO">VALUE: [8.074999999999749e-05, 8.042999999999939e-05, 8.069399999999921e-05, 8.042999999999939e-05, 8.06390000000004e-05, 8.063899999999694e-05, 8.100000000000121e-05, 8.048600000000114e-05, 8.079199999999967e-05, 8.018100000000208e-05, 8.082000000000228e-05, 8.030499999999927e-05, 8.075000000000096e-05, 8.045900000000147e-05, 8.041599999999982e-05, 8.057000000000203e-05, 8.019399999999871e-05, 8.04719999999981e-05, 8.081899999999934e-05, 8.069399999999921e-05, 8.026400000000003e-05, 8.105500000000002e-05, 8.072200000000182e-05, 8.030599999999874e-05, 8.034700000000145e-05, 8.097299999999807e-05, 8.049999999999724e-05, 8.112500000000133e-05, 8.105599999999949e-05, 8.073600000000139e-05, 8.070799999999878e-05, 8.044399999999896e-05, 8.036100000000101e-05, 8.061100000000126e-05, 8.101400000000078e-05, 8.108299999999916e-05, 8.019400000000218e-05, 8.038900000000015e-05, 8.026400000000003e-05, 8.019500000000165e-05, 8.072199999999835e-05, 8.102799999999688e-05, 8.055599999999899e-05, 8.011200000000024e-05, 8.056999999999856e-05, 8.018100000000208e-05, 8.037500000000058e-05, 8.072199999999835e-05, 8.069399999999921e-05, 8.062500000000083e-05]</msg>
<status status="PASS" starttime="20201115 23:00:54.794" endtime="20201115 23:00:54.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.789" endtime="20201115 23:00:54.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.798" endtime="20201115 23:00:54.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.802" endtime="20201115 23:00:54.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.800" endtime="20201115 23:00:54.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.796" endtime="20201115 23:00:54.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.429" endtime="20201115 23:00:54.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.427" endtime="20201115 23:00:54.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.426" endtime="20201115 23:00:54.823"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.825" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.833" endtime="20201115 23:00:54.852"></status>
</kw>
<msg timestamp="20201115 23:00:54.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.832" endtime="20201115 23:00:54.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.854" endtime="20201115 23:00:54.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.856" endtime="20201115 23:00:54.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.829" endtime="20201115 23:00:54.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.827" endtime="20201115 23:00:54.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.865" endtime="20201115 23:00:55.151"></status>
</kw>
<msg timestamp="20201115 23:00:55.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021964986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.864" endtime="20201115 23:00:55.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021964986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.155" endtime="20201115 23:00:55.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.163" endtime="20201115 23:00:55.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.861" endtime="20201115 23:00:55.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.859" endtime="20201115 23:00:55.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.170" level="INFO">${RESULT} = [{'time': 0.021964986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.2152999999998e-05, 'source_diff': 8.2152999999998e-05}, {'time': 0.02205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.120...</msg>
<status status="PASS" starttime="20201115 23:00:55.167" endtime="20201115 23:00:55.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.183" level="INFO">${ACCURACY} = {'source_diff': [8.2152999999998e-05, 8.120799999999928e-05, 8.18329999999999e-05, 8.122199999999885e-05, 8.140299999999726e-05, 8.2152999999998e-05, 8.170899999999925e-05, 8.211199999999877e-05, 8.14...</msg>
<status status="PASS" starttime="20201115 23:00:55.171" endtime="20201115 23:00:55.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.188" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.187" endtime="20201115 23:00:55.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.190" level="INFO">VALUE: [8.2152999999998e-05, 8.120799999999928e-05, 8.18329999999999e-05, 8.122199999999885e-05, 8.140299999999726e-05, 8.2152999999998e-05, 8.170899999999925e-05, 8.211199999999877e-05, 8.143100000000333e-05, 8.190300000000122e-05, 8.147200000000257e-05, 8.133300000000288e-05, 8.198599999999917e-05, 8.208300000000016e-05, 8.18329999999999e-05, 8.13329999999994e-05, 8.14170000000003e-05, 8.173599999999892e-05, 8.201400000000178e-05, 8.184699999999948e-05, 8.21109999999993e-05, 8.156999999999956e-05, 8.201399999999831e-05, 8.126399999999756e-05, 8.19589999999995e-05, 8.120799999999928e-05, 8.174999999999849e-05, 8.136099999999855e-05, 8.16520000000015e-05, 8.173599999999892e-05, 8.125000000000146e-05, 8.16390000000014e-05, 8.188900000000165e-05, 8.13329999999994e-05, 8.144399999999996e-05, 8.169400000000021e-05, 8.140299999999726e-05, 8.123599999999842e-05, 8.140299999999726e-05, 8.205500000000102e-05, 8.131999999999931e-05, 8.13329999999994e-05, 8.166700000000054e-05, 8.131899999999984e-05, 8.123600000000189e-05, 8.14719999999991e-05, 8.138899999999769e-05, 8.124999999999799e-05, 8.14719999999991e-05, 8.144399999999996e-05]</msg>
<status status="PASS" starttime="20201115 23:00:55.189" endtime="20201115 23:00:55.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.184" endtime="20201115 23:00:55.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.194" endtime="20201115 23:00:55.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.197" endtime="20201115 23:00:55.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.195" endtime="20201115 23:00:55.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.192" endtime="20201115 23:00:55.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.826" endtime="20201115 23:00:55.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.824" endtime="20201115 23:00:55.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.823" endtime="20201115 23:00:55.218"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.220" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.228" endtime="20201115 23:00:55.249"></status>
</kw>
<msg timestamp="20201115 23:00:55.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.227" endtime="20201115 23:00:55.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.250" endtime="20201115 23:00:55.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.253" endtime="20201115 23:00:55.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.224" endtime="20201115 23:00:55.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.222" endtime="20201115 23:00:55.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.262" endtime="20201115 23:00:55.547"></status>
</kw>
<msg timestamp="20201115 23:00:55.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022775167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022858222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.260" endtime="20201115 23:00:55.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022775167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022858222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.552" endtime="20201115 23:00:55.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.560" endtime="20201115 23:00:55.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.258" endtime="20201115 23:00:55.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.256" endtime="20201115 23:00:55.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.566" level="INFO">${RESULT} = [{'time': 0.022858222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305500000000202e-05, 'source_diff': 8.305500000000202e-05}, {'time': 0.022946208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:55.563" endtime="20201115 23:00:55.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.580" level="INFO">${ACCURACY} = {'source_diff': [8.305500000000202e-05, 8.217999999999767e-05, 8.23330000000004e-05, 8.263899999999894e-05, 8.251400000000228e-05, 8.218100000000061e-05, 8.301399999999931e-05, 8.237499999999912e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:55.567" endtime="20201115 23:00:55.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.584" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.583" endtime="20201115 23:00:55.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.587" level="INFO">VALUE: [8.305500000000202e-05, 8.217999999999767e-05, 8.23330000000004e-05, 8.263899999999894e-05, 8.251400000000228e-05, 8.218100000000061e-05, 8.301399999999931e-05, 8.237499999999912e-05, 8.294500000000093e-05, 8.269500000000068e-05, 8.312499999999987e-05, 8.282000000000081e-05, 8.220899999999975e-05, 8.237499999999912e-05, 8.262499999999937e-05, 8.220800000000028e-05, 8.222199999999985e-05, 8.218000000000114e-05, 8.26390000000024e-05, 8.290299999999876e-05, 8.216700000000104e-05, 8.211100000000277e-05, 8.29309999999979e-05, 8.226400000000203e-05, 8.213899999999844e-05, 8.226399999999856e-05, 8.282000000000081e-05, 8.227699999999866e-05, 8.250000000000271e-05, 8.273599999999992e-05, 8.280500000000177e-05, 8.273599999999992e-05, 8.251399999999881e-05, 8.268000000000164e-05, 8.216699999999758e-05, 8.294400000000146e-05, 8.29170000000018e-05, 8.213899999999844e-05, 8.280599999999777e-05, 8.293100000000136e-05, 8.300000000000321e-05, 8.308400000000063e-05, 8.216699999999758e-05, 8.237499999999912e-05, 8.255600000000099e-05, 8.306900000000159e-05, 8.312499999999987e-05, 8.295799999999756e-05, 8.215300000000147e-05, 8.281900000000134e-05]</msg>
<status status="PASS" starttime="20201115 23:00:55.585" endtime="20201115 23:00:55.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.581" endtime="20201115 23:00:55.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.590" endtime="20201115 23:00:55.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.593" endtime="20201115 23:00:55.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.592" endtime="20201115 23:00:55.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.588" endtime="20201115 23:00:55.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.221" endtime="20201115 23:00:55.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.219" endtime="20201115 23:00:55.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.218" endtime="20201115 23:00:55.614"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.617" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.625" endtime="20201115 23:00:55.645"></status>
</kw>
<msg timestamp="20201115 23:00:55.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.623" endtime="20201115 23:00:55.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.647" endtime="20201115 23:00:55.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.650" endtime="20201115 23:00:55.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.621" endtime="20201115 23:00:55.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.619" endtime="20201115 23:00:55.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.660" endtime="20201115 23:00:55.946"></status>
</kw>
<msg timestamp="20201115 23:00:55.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022856556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022940569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.659" endtime="20201115 23:00:55.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022856556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022940569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.950" endtime="20201115 23:00:55.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.958" endtime="20201115 23:00:55.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.656" endtime="20201115 23:00:55.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.654" endtime="20201115 23:00:55.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.965" level="INFO">${RESULT} = [{'time': 0.022940569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.401300000000084e-05, 'source_diff': 8.401300000000084e-05}, {'time': 0.023028542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:55.962" endtime="20201115 23:00:55.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.980" level="INFO">${ACCURACY} = {'source_diff': [8.401300000000084e-05, 8.331999999999784e-05, 8.408299999999869e-05, 8.394500000000193e-05, 8.350000000000024e-05, 8.375000000000049e-05, 8.355600000000199e-05, 8.380500000000277e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:55.966" endtime="20201115 23:00:55.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.984" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.983" endtime="20201115 23:00:55.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.987" level="INFO">VALUE: [8.401300000000084e-05, 8.331999999999784e-05, 8.408299999999869e-05, 8.394500000000193e-05, 8.350000000000024e-05, 8.375000000000049e-05, 8.355600000000199e-05, 8.380500000000277e-05, 8.311099999999683e-05, 8.377799999999963e-05, 8.373599999999745e-05, 8.369500000000168e-05, 8.318100000000161e-05, 8.408399999999816e-05, 8.41110000000013e-05, 8.322199999999738e-05, 8.357000000000156e-05, 8.41110000000013e-05, 8.327699999999966e-05, 8.365200000000003e-05, 8.398700000000064e-05, 8.345799999999806e-05, 8.39859999999977e-05, 8.319400000000171e-05, 8.376400000000006e-05, 8.337500000000012e-05, 8.319499999999772e-05, 8.322200000000085e-05, 8.320799999999781e-05, 8.36529999999995e-05, 8.393100000000236e-05, 8.340300000000272e-05, 8.401400000000031e-05, 8.381999999999834e-05, 8.408399999999816e-05, 8.405599999999902e-05, 8.345800000000153e-05, 8.388900000000019e-05, 8.413900000000044e-05, 8.401400000000031e-05, 8.399999999999727e-05, 8.406899999999912e-05, 8.33330000000014e-05, 8.36249999999969e-05, 8.377799999999963e-05, 8.318100000000161e-05, 8.412500000000087e-05, 8.376400000000006e-05, 8.332000000000131e-05, 8.35980000000007e-05]</msg>
<status status="PASS" starttime="20201115 23:00:55.985" endtime="20201115 23:00:55.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.981" endtime="20201115 23:00:55.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.990" endtime="20201115 23:00:55.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.993" endtime="20201115 23:00:56.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.992" endtime="20201115 23:00:56.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.988" endtime="20201115 23:00:56.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.617" endtime="20201115 23:00:56.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.616" endtime="20201115 23:00:56.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.615" endtime="20201115 23:00:56.014"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.017" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.025" endtime="20201115 23:00:56.044"></status>
</kw>
<msg timestamp="20201115 23:00:56.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.024" endtime="20201115 23:00:56.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.046" endtime="20201115 23:00:56.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.048" endtime="20201115 23:00:56.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.021" endtime="20201115 23:00:56.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.018" endtime="20201115 23:00:56.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.058" endtime="20201115 23:00:56.342"></status>
</kw>
<msg timestamp="20201115 23:00:56.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.056" endtime="20201115 23:00:56.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.346" endtime="20201115 23:00:56.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.355" endtime="20201115 23:00:56.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.053" endtime="20201115 23:00:56.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.052" endtime="20201115 23:00:56.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.361" level="INFO">${RESULT} = [{'time': 0.022507042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.522300000000232e-05, 'source_diff': 8.522300000000232e-05}, {'time': 0.022597097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:56.358" endtime="20201115 23:00:56.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.375" level="INFO">${ACCURACY} = {'source_diff': [8.522300000000232e-05, 8.505500000000055e-05, 8.470900000000225e-05, 8.426399999999709e-05, 8.481999999999934e-05, 8.499999999999827e-05, 8.463799999999799e-05, 8.456899999999962e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:56.362" endtime="20201115 23:00:56.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.379" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.378" endtime="20201115 23:00:56.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.382" level="INFO">VALUE: [8.522300000000232e-05, 8.505500000000055e-05, 8.470900000000225e-05, 8.426399999999709e-05, 8.481999999999934e-05, 8.499999999999827e-05, 8.463799999999799e-05, 8.456899999999962e-05, 8.501399999999784e-05, 8.501399999999784e-05, 8.43330000000024e-05, 8.483299999999944e-05, 8.505600000000002e-05, 8.437499999999765e-05, 8.427800000000013e-05, 8.474999999999802e-05, 8.505600000000002e-05, 8.454199999999995e-05, 8.509699999999926e-05, 8.43049999999998e-05, 8.456999999999909e-05, 8.436099999999808e-05, 8.475000000000149e-05, 8.476400000000106e-05, 8.512500000000187e-05, 8.437499999999765e-05, 8.49309999999999e-05, 8.501399999999784e-05, 8.46530000000005e-05, 8.461099999999833e-05, 8.426399999999709e-05, 8.505600000000002e-05, 8.472199999999888e-05, 8.476399999999759e-05, 8.481999999999934e-05, 8.412500000000087e-05, 8.456900000000309e-05, 8.425000000000099e-05, 8.425000000000099e-05, 8.438900000000069e-05, 8.427800000000013e-05, 8.469399999999974e-05, 8.487500000000162e-05, 8.455599999999952e-05, 8.433400000000188e-05, 8.44859999999982e-05, 8.424999999999752e-05, 8.49859999999987e-05, 8.4153e-05, 8.427800000000013e-05]</msg>
<status status="PASS" starttime="20201115 23:00:56.380" endtime="20201115 23:00:56.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.376" endtime="20201115 23:00:56.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.385" endtime="20201115 23:00:56.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.388" endtime="20201115 23:00:56.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.387" endtime="20201115 23:00:56.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.383" endtime="20201115 23:00:56.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.017" endtime="20201115 23:00:56.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.015" endtime="20201115 23:00:56.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.015" endtime="20201115 23:00:56.414"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.416" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.424" endtime="20201115 23:00:56.443"></status>
</kw>
<msg timestamp="20201115 23:00:56.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.423" endtime="20201115 23:00:56.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.445" endtime="20201115 23:00:56.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.447" endtime="20201115 23:00:56.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.420" endtime="20201115 23:00:56.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.418" endtime="20201115 23:00:56.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.457" endtime="20201115 23:00:56.742"></status>
</kw>
<msg timestamp="20201115 23:00:56.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026385819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026471792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.455" endtime="20201115 23:00:56.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026385819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026471792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.746" endtime="20201115 23:00:56.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.754" endtime="20201115 23:00:56.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.452" endtime="20201115 23:00:56.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.451" endtime="20201115 23:00:56.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.761" level="INFO">${RESULT} = [{'time': 0.026471792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.59729999999996e-05, 'source_diff': 8.59729999999996e-05}, {'time': 0.026562778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:56.758" endtime="20201115 23:00:56.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.774" level="INFO">${ACCURACY} = {'source_diff': [8.59729999999996e-05, 8.537499999999865e-05, 8.526400000000156e-05, 8.573600000000292e-05, 8.593099999999743e-05, 8.579199999999773e-05, 8.602799999999841e-05, 8.543000000000092e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:56.762" endtime="20201115 23:00:56.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.779" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.778" endtime="20201115 23:00:56.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.781" level="INFO">VALUE: [8.59729999999996e-05, 8.537499999999865e-05, 8.526400000000156e-05, 8.573600000000292e-05, 8.593099999999743e-05, 8.579199999999773e-05, 8.602799999999841e-05, 8.543000000000092e-05, 8.544400000000049e-05, 8.555500000000105e-05, 8.594400000000099e-05, 8.543000000000092e-05, 8.568000000000117e-05, 8.583299999999697e-05, 8.552800000000138e-05, 8.551400000000181e-05, 8.569500000000022e-05, 8.518100000000015e-05, 8.520899999999929e-05, 8.602799999999841e-05, 8.550000000000224e-05, 8.547199999999963e-05, 8.540300000000126e-05, 8.606899999999765e-05, 8.551399999999834e-05, 8.526400000000156e-05, 8.54859999999992e-05, 8.588900000000219e-05, 8.608300000000069e-05, 8.561099999999933e-05, 8.584799999999948e-05, 8.551399999999834e-05, 8.558399999999966e-05, 8.54310000000004e-05, 8.588900000000219e-05, 8.519400000000024e-05, 8.601299999999937e-05, 8.520799999999981e-05, 8.537500000000212e-05, 8.549999999999877e-05, 8.526400000000156e-05, 8.590300000000176e-05, 8.605600000000102e-05, 8.586099999999958e-05, 8.587500000000262e-05, 8.537499999999865e-05, 8.523599999999895e-05, 8.555500000000105e-05, 8.59729999999996e-05, 8.608300000000069e-05]</msg>
<status status="PASS" starttime="20201115 23:00:56.780" endtime="20201115 23:00:56.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.775" endtime="20201115 23:00:56.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.785" endtime="20201115 23:00:56.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.788" endtime="20201115 23:00:56.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.787" endtime="20201115 23:00:56.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.783" endtime="20201115 23:00:56.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.417" endtime="20201115 23:00:56.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.415" endtime="20201115 23:00:56.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.414" endtime="20201115 23:00:56.809"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.812" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.820" endtime="20201115 23:00:56.840"></status>
</kw>
<msg timestamp="20201115 23:00:56.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.818" endtime="20201115 23:00:56.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.841" endtime="20201115 23:00:56.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.844" endtime="20201115 23:00:56.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.816" endtime="20201115 23:00:56.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.813" endtime="20201115 23:00:56.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.853" endtime="20201115 23:00:57.138"></status>
</kw>
<msg timestamp="20201115 23:00:57.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.851" endtime="20201115 23:00:57.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.142" endtime="20201115 23:00:57.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.150" endtime="20201115 23:00:57.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.849" endtime="20201115 23:00:57.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.847" endtime="20201115 23:00:57.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.157" level="INFO">${RESULT} = [{'time': 0.021967111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.68050000000023e-05, 'source_diff': 8.68050000000023e-05}, {'time': 0.022060111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:57.153" endtime="20201115 23:00:57.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.170" level="INFO">${ACCURACY} = {'source_diff': [8.68050000000023e-05, 8.700000000000027e-05, 8.66249999999999e-05, 8.644400000000149e-05, 8.675000000000002e-05, 8.701399999999984e-05, 8.698599999999723e-05, 8.651399999999934e-05, 8...</msg>
<status status="PASS" starttime="20201115 23:00:57.158" endtime="20201115 23:00:57.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.174" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.173" endtime="20201115 23:00:57.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.177" level="INFO">VALUE: [8.68050000000023e-05, 8.700000000000027e-05, 8.66249999999999e-05, 8.644400000000149e-05, 8.675000000000002e-05, 8.701399999999984e-05, 8.698599999999723e-05, 8.651399999999934e-05, 8.71250000000004e-05, 8.665199999999956e-05, 8.636100000000008e-05, 8.683299999999797e-05, 8.708300000000169e-05, 8.656899999999815e-05, 8.631900000000137e-05, 8.68189999999984e-05, 8.649999999999977e-05, 8.66249999999999e-05, 8.702799999999941e-05, 8.711100000000083e-05, 8.683400000000091e-05, 8.638899999999922e-05, 8.690299999999929e-05, 8.713899999999997e-05, 8.622200000000038e-05, 8.68189999999984e-05, 8.673600000000045e-05, 8.630499999999833e-05, 8.649999999999977e-05, 8.701399999999984e-05, 8.692999999999895e-05, 8.704200000000245e-05, 8.618000000000167e-05, 8.620800000000081e-05, 8.687500000000015e-05, 8.669500000000122e-05, 8.626399999999909e-05, 8.687500000000015e-05, 8.651299999999987e-05, 8.702699999999994e-05, 8.636199999999955e-05, 8.663799999999999e-05, 8.642999999999845e-05, 8.633299999999747e-05, 8.630499999999833e-05, 8.644400000000149e-05, 8.688899999999972e-05, 8.654199999999848e-05, 8.654199999999848e-05, 8.616700000000158e-05]</msg>
<status status="PASS" starttime="20201115 23:00:57.176" endtime="20201115 23:00:57.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.171" endtime="20201115 23:00:57.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.181" endtime="20201115 23:00:57.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.184" endtime="20201115 23:00:57.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.182" endtime="20201115 23:00:57.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.179" endtime="20201115 23:00:57.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.812" endtime="20201115 23:00:57.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.810" endtime="20201115 23:00:57.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.810" endtime="20201115 23:00:57.205"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.208" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.216" endtime="20201115 23:00:57.236"></status>
</kw>
<msg timestamp="20201115 23:00:57.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.214" endtime="20201115 23:00:57.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.238" endtime="20201115 23:00:57.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.240" endtime="20201115 23:00:57.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.212" endtime="20201115 23:00:57.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.210" endtime="20201115 23:00:57.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.249" endtime="20201115 23:00:57.534"></status>
</kw>
<msg timestamp="20201115 23:00:57.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022906681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.248" endtime="20201115 23:00:57.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022906681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.538" endtime="20201115 23:00:57.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.546" endtime="20201115 23:00:57.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.245" endtime="20201115 23:00:57.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.244" endtime="20201115 23:00:57.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.553" level="INFO">${RESULT} = [{'time': 0.022994347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.766599999999666e-05, 'source_diff': 8.766599999999666e-05}, {'time': 0.023085431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:57.550" endtime="20201115 23:00:57.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.568" level="INFO">${ACCURACY} = {'source_diff': [8.766599999999666e-05, 8.751400000000034e-05, 8.737500000000065e-05, 8.79999999999978e-05, 8.78059999999993e-05, 8.800000000000127e-05, 8.740299999999979e-05, 8.79860000000017e-05, 8....</msg>
<status status="PASS" starttime="20201115 23:00:57.554" endtime="20201115 23:00:57.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.573" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.572" endtime="20201115 23:00:57.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.575" level="INFO">VALUE: [8.766599999999666e-05, 8.751400000000034e-05, 8.737500000000065e-05, 8.79999999999978e-05, 8.78059999999993e-05, 8.800000000000127e-05, 8.740299999999979e-05, 8.79860000000017e-05, 8.737500000000065e-05, 8.776300000000112e-05, 8.765200000000056e-05, 8.800000000000127e-05, 8.750000000000077e-05, 8.806899999999965e-05, 8.78189999999994e-05, 8.751400000000034e-05, 8.76669999999996e-05, 8.718099999999868e-05, 8.81250000000014e-05, 8.808399999999869e-05, 8.774999999999755e-05, 8.76250000000009e-05, 8.769499999999875e-05, 8.73059999999988e-05, 8.719500000000172e-05, 8.774999999999755e-05, 8.768000000000317e-05, 8.787499999999768e-05, 8.751400000000034e-05, 8.794399999999952e-05, 8.723600000000095e-05, 8.745799999999859e-05, 8.736100000000108e-05, 8.750000000000077e-05, 8.813900000000097e-05, 8.761099999999786e-05, 8.777800000000016e-05, 8.777800000000016e-05, 8.804199999999998e-05, 8.808299999999922e-05, 8.76250000000009e-05, 8.76250000000009e-05, 8.76669999999996e-05, 8.71799999999992e-05, 8.78189999999994e-05, 8.772200000000188e-05, 8.723599999999748e-05, 8.745800000000206e-05, 8.732000000000184e-05, 8.800000000000127e-05]</msg>
<status status="PASS" starttime="20201115 23:00:57.574" endtime="20201115 23:00:57.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.569" endtime="20201115 23:00:57.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.578" endtime="20201115 23:00:57.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.582" endtime="20201115 23:00:57.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.580" endtime="20201115 23:00:57.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.577" endtime="20201115 23:00:57.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.208" endtime="20201115 23:00:57.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.206" endtime="20201115 23:00:57.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.205" endtime="20201115 23:00:57.603"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.605" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.613" endtime="20201115 23:00:57.633"></status>
</kw>
<msg timestamp="20201115 23:00:57.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.612" endtime="20201115 23:00:57.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.634" endtime="20201115 23:00:57.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.637" endtime="20201115 23:00:57.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.609" endtime="20201115 23:00:57.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.607" endtime="20201115 23:00:57.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.646" endtime="20201115 23:00:57.932"></status>
</kw>
<msg timestamp="20201115 23:00:57.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.644" endtime="20201115 23:00:57.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.936" endtime="20201115 23:00:57.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.944" endtime="20201115 23:00:57.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.642" endtime="20201115 23:00:57.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.640" endtime="20201115 23:00:57.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.951" level="INFO">${RESULT} = [{'time': 0.022118653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.836099999999861e-05, 'source_diff': 8.836099999999861e-05}, {'time': 0.022213653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:57.948" endtime="20201115 23:00:57.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.964" level="INFO">${ACCURACY} = {'source_diff': [8.836099999999861e-05, 8.901399999999837e-05, 8.856999999999962e-05, 8.826399999999762e-05, 8.855600000000005e-05, 8.89999999999988e-05, 8.837500000000165e-05, 8.838899999999775e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:57.952" endtime="20201115 23:00:57.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.969" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.968" endtime="20201115 23:00:57.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.971" level="INFO">VALUE: [8.836099999999861e-05, 8.901399999999837e-05, 8.856999999999962e-05, 8.826399999999762e-05, 8.855600000000005e-05, 8.89999999999988e-05, 8.837500000000165e-05, 8.838899999999775e-05, 8.826399999999762e-05, 8.861099999999886e-05, 8.840199999999784e-05, 8.880500000000083e-05, 8.88190000000004e-05, 8.852800000000091e-05, 8.86670000000006e-05, 8.843099999999993e-05, 8.862499999999843e-05, 8.893000000000095e-05, 8.872299999999889e-05, 8.843099999999993e-05, 8.815300000000054e-05, 8.872199999999941e-05, 8.870800000000331e-05, 8.86800000000007e-05, 8.88190000000004e-05, 8.851399999999787e-05, 8.852800000000091e-05, 8.818099999999968e-05, 8.870799999999984e-05, 8.837500000000165e-05, 8.843099999999993e-05, 8.851399999999787e-05, 8.901400000000184e-05, 8.863799999999852e-05, 8.902800000000141e-05, 8.887499999999868e-05, 8.830500000000033e-05, 8.824999999999805e-05, 8.865299999999757e-05, 8.911099999999936e-05, 8.843000000000045e-05, 8.815300000000054e-05, 8.845899999999907e-05, 8.825000000000152e-05, 8.897199999999966e-05, 8.905600000000055e-05, 8.826400000000109e-05, 8.856999999999962e-05, 8.833299999999947e-05, 8.865300000000104e-05]</msg>
<status status="PASS" starttime="20201115 23:00:57.970" endtime="20201115 23:00:57.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.965" endtime="20201115 23:00:57.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.974" endtime="20201115 23:00:57.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.978" endtime="20201115 23:00:57.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.976" endtime="20201115 23:00:57.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.973" endtime="20201115 23:00:57.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.606" endtime="20201115 23:00:57.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.604" endtime="20201115 23:00:57.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.603" endtime="20201115 23:00:57.999"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.001" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.010" endtime="20201115 23:00:58.029"></status>
</kw>
<msg timestamp="20201115 23:00:58.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.008" endtime="20201115 23:00:58.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.031" endtime="20201115 23:00:58.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.033" endtime="20201115 23:00:58.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.005" endtime="20201115 23:00:58.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.003" endtime="20201115 23:00:58.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.043" endtime="20201115 23:00:58.327"></status>
</kw>
<msg timestamp="20201115 23:00:58.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.041" endtime="20201115 23:00:58.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.331" endtime="20201115 23:00:58.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.340" endtime="20201115 23:00:58.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.038" endtime="20201115 23:00:58.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.037" endtime="20201115 23:00:58.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.346" level="INFO">${RESULT} = [{'time': 0.022316181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.002800000000241e-05, 'source_diff': 9.002800000000241e-05}, {'time': 0.022410194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:58.343" endtime="20201115 23:00:58.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.360" level="INFO">${ACCURACY} = {'source_diff': [9.002800000000241e-05, 8.988799999999977e-05, 8.969400000000127e-05, 8.984700000000054e-05, 8.988900000000272e-05, 8.962499999999943e-05, 8.924999999999905e-05, 8.998600000000023e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:58.347" endtime="20201115 23:00:58.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.364" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.363" endtime="20201115 23:00:58.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.367" level="INFO">VALUE: [9.002800000000241e-05, 8.988799999999977e-05, 8.969400000000127e-05, 8.984700000000054e-05, 8.988900000000272e-05, 8.962499999999943e-05, 8.924999999999905e-05, 8.998600000000023e-05, 9.008300000000122e-05, 8.94999999999993e-05, 9.002799999999894e-05, 8.919500000000025e-05, 8.987500000000315e-05, 8.919500000000025e-05, 8.987499999999968e-05, 8.970799999999737e-05, 8.931899999999743e-05, 8.994399999999805e-05, 8.99999999999998e-05, 8.920800000000034e-05, 8.965299999999857e-05, 8.962499999999943e-05, 8.943100000000093e-05, 9.01389999999995e-05, 8.970900000000032e-05, 8.988899999999925e-05, 8.969500000000075e-05, 8.957000000000062e-05, 8.963799999999952e-05, 8.926299999999915e-05, 8.951400000000234e-05, 8.966600000000213e-05, 8.954100000000201e-05, 8.987499999999968e-05, 8.919400000000077e-05, 8.920800000000034e-05, 8.980499999999836e-05, 8.988899999999925e-05, 8.94999999999993e-05, 8.951400000000234e-05, 8.969500000000075e-05, 8.983399999999697e-05, 8.918100000000068e-05, 8.998600000000023e-05, 8.976299999999965e-05, 8.987499999999968e-05, 8.920800000000034e-05, 8.938899999999875e-05, 9.011100000000036e-05, 8.931899999999743e-05]</msg>
<status status="PASS" starttime="20201115 23:00:58.365" endtime="20201115 23:00:58.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.361" endtime="20201115 23:00:58.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.370" endtime="20201115 23:00:58.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.373" endtime="20201115 23:00:58.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.372" endtime="20201115 23:00:58.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.368" endtime="20201115 23:00:58.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.002" endtime="20201115 23:00:58.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.000" endtime="20201115 23:00:58.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.999" endtime="20201115 23:00:58.394"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.397" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.405" endtime="20201115 23:00:58.425"></status>
</kw>
<msg timestamp="20201115 23:00:58.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.403" endtime="20201115 23:00:58.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.426" endtime="20201115 23:00:58.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.429" endtime="20201115 23:00:58.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.401" endtime="20201115 23:00:58.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.398" endtime="20201115 23:00:58.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.438" endtime="20201115 23:00:58.723"></status>
</kw>
<msg timestamp="20201115 23:00:58.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.437" endtime="20201115 23:00:58.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.728" endtime="20201115 23:00:58.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.736" endtime="20201115 23:00:58.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.434" endtime="20201115 23:00:58.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.432" endtime="20201115 23:00:58.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.742" level="INFO">${RESULT} = [{'time': 0.021920583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.061100000000086e-05, 'source_diff': 9.061100000000086e-05}, {'time': 0.022015583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:58.739" endtime="20201115 23:00:58.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.756" level="INFO">${ACCURACY} = {'source_diff': [9.061100000000086e-05, 9.091599999999991e-05, 9.090299999999982e-05, 9.115300000000007e-05, 9.101400000000037e-05, 9.01389999999995e-05, 9.084800000000101e-05, 9.107000000000212e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:58.743" endtime="20201115 23:00:58.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.761" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.759" endtime="20201115 23:00:58.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.763" level="INFO">VALUE: [9.061100000000086e-05, 9.091599999999991e-05, 9.090299999999982e-05, 9.115300000000007e-05, 9.101400000000037e-05, 9.01389999999995e-05, 9.084800000000101e-05, 9.107000000000212e-05, 9.111200000000083e-05, 9.10139999999969e-05, 9.093099999999896e-05, 9.056999999999815e-05, 9.109699999999832e-05, 9.073699999999699e-05, 9.108299999999875e-05, 9.088900000000025e-05, 9.083300000000197e-05, 9.027799999999919e-05, 9.070799999999837e-05, 9.052800000000291e-05, 9.102799999999994e-05, 9.051399999999987e-05, 9.107000000000212e-05, 9.020900000000082e-05, 9.023600000000048e-05, 9.020900000000082e-05, 9.036100000000061e-05, 9.01939999999983e-05, 9.101400000000037e-05, 9.073600000000098e-05, 9.070800000000184e-05, 9.025000000000005e-05, 9.038899999999975e-05, 9.0639e-05, 9.045799999999812e-05, 9.044399999999855e-05, 9.10000000000008e-05, 9.062500000000043e-05, 9.05000000000003e-05, 9.093099999999896e-05, 9.10000000000008e-05, 9.093100000000243e-05, 9.072200000000141e-05, 9.080499999999936e-05, 9.067999999999923e-05, 9.033300000000147e-05, 9.065299999999957e-05, 9.045799999999812e-05, 9.020800000000134e-05, 9.044499999999803e-05]</msg>
<status status="PASS" starttime="20201115 23:00:58.762" endtime="20201115 23:00:58.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.757" endtime="20201115 23:00:58.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.766" endtime="20201115 23:00:58.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.769" endtime="20201115 23:00:58.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.768" endtime="20201115 23:00:58.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.764" endtime="20201115 23:00:58.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.397" endtime="20201115 23:00:58.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.395" endtime="20201115 23:00:58.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.395" endtime="20201115 23:00:58.790"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.793" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.801" endtime="20201115 23:00:58.822"></status>
</kw>
<msg timestamp="20201115 23:00:58.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.800" endtime="20201115 23:00:58.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.824" endtime="20201115 23:00:58.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.826" endtime="20201115 23:00:58.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.797" endtime="20201115 23:00:58.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.795" endtime="20201115 23:00:58.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.835" endtime="20201115 23:00:59.122"></status>
</kw>
<msg timestamp="20201115 23:00:59.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023362208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.834" endtime="20201115 23:00:59.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023362208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.126" endtime="20201115 23:00:59.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.134" endtime="20201115 23:00:59.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.831" endtime="20201115 23:00:59.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.830" endtime="20201115 23:00:59.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.140" level="INFO">${RESULT} = [{'time': 0.023362208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.163899999999753e-05, 'source_diff': 9.163899999999753e-05}, {'time': 0.023456222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:59.137" endtime="20201115 23:00:59.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.155" level="INFO">${ACCURACY} = {'source_diff': [9.163899999999753e-05, 9.138899999999728e-05, 9.174999999999808e-05, 9.161100000000186e-05, 9.108300000000222e-05, 9.175000000000155e-05, 9.21529999999976e-05, 9.209699999999932e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:59.141" endtime="20201115 23:00:59.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.160" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.158" endtime="20201115 23:00:59.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.162" level="INFO">VALUE: [9.163899999999753e-05, 9.138899999999728e-05, 9.174999999999808e-05, 9.161100000000186e-05, 9.108300000000222e-05, 9.175000000000155e-05, 9.21529999999976e-05, 9.209699999999932e-05, 9.206999999999965e-05, 9.179200000000026e-05, 9.206999999999965e-05, 9.194499999999953e-05, 9.148600000000173e-05, 9.11520000000006e-05, 9.11939999999993e-05, 9.1332999999999e-05, 9.161100000000186e-05, 9.176400000000112e-05, 9.199999999999833e-05, 9.195799999999962e-05, 9.123600000000148e-05, 9.127800000000019e-05, 9.123599999999801e-05, 9.183399999999897e-05, 9.159699999999882e-05, 9.11390000000005e-05, 9.162499999999796e-05, 9.173600000000198e-05, 9.194400000000005e-05, 9.144399999999955e-05, 9.20000000000018e-05, 9.169400000000327e-05, 9.131899999999943e-05, 9.187499999999821e-05, 9.184699999999907e-05, 9.20000000000018e-05, 9.206999999999965e-05, 9.125000000000105e-05, 9.140300000000032e-05, 9.188900000000125e-05, 9.170800000000284e-05, 9.176400000000112e-05, 9.213899999999803e-05, 9.195799999999962e-05, 9.179100000000079e-05, 9.195799999999962e-05, 9.123600000000148e-05, 9.145799999999912e-05, 9.187500000000168e-05, 9.175000000000155e-05]</msg>
<status status="PASS" starttime="20201115 23:00:59.161" endtime="20201115 23:00:59.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.156" endtime="20201115 23:00:59.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.165" endtime="20201115 23:00:59.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.169" endtime="20201115 23:00:59.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.167" endtime="20201115 23:00:59.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.164" endtime="20201115 23:00:59.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.793" endtime="20201115 23:00:59.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.792" endtime="20201115 23:00:59.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.791" endtime="20201115 23:00:59.190"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.192" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.201" endtime="20201115 23:00:59.221"></status>
</kw>
<msg timestamp="20201115 23:00:59.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.199" endtime="20201115 23:00:59.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.222" endtime="20201115 23:00:59.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.225" endtime="20201115 23:00:59.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.196" endtime="20201115 23:00:59.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.194" endtime="20201115 23:00:59.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.234" endtime="20201115 23:00:59.519"></status>
</kw>
<msg timestamp="20201115 23:00:59.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.232" endtime="20201115 23:00:59.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.523" endtime="20201115 23:00:59.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.532" endtime="20201115 23:00:59.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.229" endtime="20201115 23:00:59.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.228" endtime="20201115 23:00:59.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.538" level="INFO">${RESULT} = [{'time': 0.022542014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.29720000000002e-05, 'source_diff': 9.29720000000002e-05}, {'time': 0.022638028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:59.535" endtime="20201115 23:00:59.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.552" level="INFO">${ACCURACY} = {'source_diff': [9.29720000000002e-05, 9.294500000000053e-05, 9.2639000000002e-05, 9.21520000000016e-05, 9.276300000000265e-05, 9.281899999999746e-05, 9.275000000000255e-05, 9.2333e-05, 9.244400000000...</msg>
<status status="PASS" starttime="20201115 23:00:59.539" endtime="20201115 23:00:59.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.556" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.555" endtime="20201115 23:00:59.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.558" level="INFO">VALUE: [9.29720000000002e-05, 9.294500000000053e-05, 9.2639000000002e-05, 9.21520000000016e-05, 9.276300000000265e-05, 9.281899999999746e-05, 9.275000000000255e-05, 9.2333e-05, 9.244400000000055e-05, 9.245800000000012e-05, 9.229200000000076e-05, 9.273599999999951e-05, 9.216700000000064e-05, 9.223599999999901e-05, 9.216699999999717e-05, 9.307000000000065e-05, 9.3026999999999e-05, 9.299999999999933e-05, 9.281899999999746e-05, 9.262499999999896e-05, 9.306899999999771e-05, 9.211099999999889e-05, 9.218000000000073e-05, 9.302799999999847e-05, 9.238899999999828e-05, 9.23199999999999e-05, 9.281900000000093e-05, 9.252800000000144e-05, 9.262499999999896e-05, 9.254100000000154e-05, 9.238900000000175e-05, 9.25130000000024e-05, 9.280600000000083e-05, 9.258300000000025e-05, 9.222200000000291e-05, 9.249999999999883e-05, 9.226399999999815e-05, 9.308300000000075e-05, 9.266699999999767e-05, 9.236099999999914e-05, 9.308300000000075e-05, 9.301400000000237e-05, 9.243100000000046e-05, 9.268100000000071e-05, 9.305499999999814e-05, 9.244500000000003e-05, 9.279200000000126e-05, 9.290199999999887e-05, 9.275000000000255e-05, 9.227800000000119e-05]</msg>
<status status="PASS" starttime="20201115 23:00:59.557" endtime="20201115 23:00:59.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.552" endtime="20201115 23:00:59.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.562" endtime="20201115 23:00:59.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.566" endtime="20201115 23:00:59.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.564" endtime="20201115 23:00:59.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.560" endtime="20201115 23:00:59.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.193" endtime="20201115 23:00:59.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.191" endtime="20201115 23:00:59.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.190" endtime="20201115 23:00:59.587"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.589" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.597" endtime="20201115 23:00:59.617"></status>
</kw>
<msg timestamp="20201115 23:00:59.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.596" endtime="20201115 23:00:59.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.619" endtime="20201115 23:00:59.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.621" endtime="20201115 23:00:59.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.593" endtime="20201115 23:00:59.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.591" endtime="20201115 23:00:59.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.633" endtime="20201115 23:00:59.919"></status>
</kw>
<msg timestamp="20201115 23:00:59.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.631" endtime="20201115 23:00:59.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.923" endtime="20201115 23:00:59.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.931" endtime="20201115 23:00:59.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.628" endtime="20201115 23:00:59.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.626" endtime="20201115 23:00:59.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.938" level="INFO">${RESULT} = [{'time': 0.022030764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.418100000000221e-05, 'source_diff': 9.418100000000221e-05}, {'time': 0.022128708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:59.934" endtime="20201115 23:00:59.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.951" level="INFO">${ACCURACY} = {'source_diff': [9.418100000000221e-05, 9.380499999999889e-05, 9.394399999999858e-05, 9.367999999999876e-05, 9.394400000000205e-05, 9.327799999999872e-05, 9.393099999999849e-05, 9.354200000000201e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:59.939" endtime="20201115 23:00:59.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.956" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.955" endtime="20201115 23:00:59.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.958" level="INFO">VALUE: [9.418100000000221e-05, 9.380499999999889e-05, 9.394399999999858e-05, 9.367999999999876e-05, 9.394400000000205e-05, 9.327799999999872e-05, 9.393099999999849e-05, 9.354200000000201e-05, 9.369500000000128e-05, 9.36529999999991e-05, 9.394499999999806e-05, 9.380600000000183e-05, 9.361100000000039e-05, 9.362499999999996e-05, 9.358300000000125e-05, 9.380500000000236e-05, 9.319399999999783e-05, 9.387500000000021e-05, 9.406899999999871e-05, 9.40139999999999e-05, 9.357000000000115e-05, 9.340299999999885e-05, 9.338899999999928e-05, 9.394499999999806e-05, 9.394500000000153e-05, 9.319499999999731e-05, 9.390199999999987e-05, 9.402799999999947e-05, 9.39720000000012e-05, 9.394399999999858e-05, 9.3333000000001e-05, 9.31940000000013e-05, 9.379199999999879e-05, 9.376400000000312e-05, 9.325000000000305e-05, 9.394499999999806e-05, 9.361100000000039e-05, 9.319500000000078e-05, 9.398699999999677e-05, 9.352700000000297e-05, 9.340299999999885e-05, 9.349999999999983e-05, 9.402799999999947e-05, 9.372199999999747e-05, 9.338899999999928e-05, 9.319399999999783e-05, 9.315300000000207e-05, 9.322200000000044e-05, 9.387500000000021e-05, 9.3333999999997e-05]</msg>
<status status="PASS" starttime="20201115 23:00:59.957" endtime="20201115 23:00:59.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.952" endtime="20201115 23:00:59.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.962" endtime="20201115 23:00:59.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.965" endtime="20201115 23:00:59.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.964" endtime="20201115 23:00:59.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.960" endtime="20201115 23:00:59.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.590" endtime="20201115 23:00:59.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.588" endtime="20201115 23:00:59.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.587" endtime="20201115 23:00:59.986"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.988" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.997" endtime="20201115 23:01:00.017"></status>
</kw>
<msg timestamp="20201115 23:01:00.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.995" endtime="20201115 23:01:00.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.019" endtime="20201115 23:01:00.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.022" endtime="20201115 23:01:00.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.993" endtime="20201115 23:01:00.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.991" endtime="20201115 23:01:00.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.030" endtime="20201115 23:01:00.316"></status>
</kw>
<msg timestamp="20201115 23:01:00.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.029" endtime="20201115 23:01:00.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.320" endtime="20201115 23:01:00.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.329" endtime="20201115 23:01:00.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.026" endtime="20201115 23:01:00.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.025" endtime="20201115 23:01:00.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.336" level="INFO">${RESULT} = [{'time': 0.022028764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.466699999999967e-05, 'source_diff': 9.466699999999967e-05}, {'time': 0.022125792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:00.332" endtime="20201115 23:01:00.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.350" level="INFO">${ACCURACY} = {'source_diff': [9.466699999999967e-05, 9.416699999999917e-05, 9.513900000000103e-05, 9.41529999999996e-05, 9.43200000000019e-05, 9.438900000000028e-05, 9.50140000000009e-05, 9.431900000000243e-05, 9....</msg>
<status status="PASS" starttime="20201115 23:01:00.337" endtime="20201115 23:01:00.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.355" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.354" endtime="20201115 23:01:00.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.358" level="INFO">VALUE: [9.466699999999967e-05, 9.416699999999917e-05, 9.513900000000103e-05, 9.41529999999996e-05, 9.43200000000019e-05, 9.438900000000028e-05, 9.50140000000009e-05, 9.431900000000243e-05, 9.505500000000014e-05, 9.455599999999911e-05, 9.417999999999926e-05, 9.468099999999924e-05, 9.481899999999946e-05, 9.467999999999976e-05, 9.456899999999921e-05, 9.479100000000032e-05, 9.442999999999951e-05, 9.481899999999946e-05, 9.488900000000078e-05, 9.480599999999936e-05, 9.46940000000028e-05, 9.475000000000108e-05, 9.454100000000007e-05, 9.456899999999921e-05, 9.455499999999964e-05, 9.493000000000001e-05, 9.426400000000015e-05, 9.433299999999853e-05, 9.48200000000024e-05, 9.43200000000019e-05, 9.480599999999936e-05, 9.495899999999863e-05, 9.490300000000035e-05, 9.437500000000071e-05, 9.450000000000083e-05, 9.437499999999724e-05, 9.465200000000062e-05, 9.430499999999939e-05, 9.476400000000065e-05, 9.483299999999903e-05, 9.501399999999743e-05, 9.440299999999985e-05, 9.472200000000194e-05, 9.499999999999786e-05, 9.509699999999885e-05, 9.493099999999949e-05, 9.470900000000185e-05, 9.491699999999992e-05, 9.423700000000049e-05, 9.469399999999933e-05]</msg>
<status status="PASS" starttime="20201115 23:01:00.356" endtime="20201115 23:01:00.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.351" endtime="20201115 23:01:00.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.361" endtime="20201115 23:01:00.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.365" endtime="20201115 23:01:00.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.363" endtime="20201115 23:01:00.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.359" endtime="20201115 23:01:00.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.989" endtime="20201115 23:01:00.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.987" endtime="20201115 23:01:00.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.987" endtime="20201115 23:01:00.386"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.388" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.397" endtime="20201115 23:01:00.419"></status>
</kw>
<msg timestamp="20201115 23:01:00.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.395" endtime="20201115 23:01:00.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.420" endtime="20201115 23:01:00.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.423" endtime="20201115 23:01:00.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.393" endtime="20201115 23:01:00.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.390" endtime="20201115 23:01:00.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.433" endtime="20201115 23:01:00.720"></status>
</kw>
<msg timestamp="20201115 23:01:00.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023751458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023847167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.431" endtime="20201115 23:01:00.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023751458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023847167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.724" endtime="20201115 23:01:00.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.733" endtime="20201115 23:01:00.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.428" endtime="20201115 23:01:00.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.426" endtime="20201115 23:01:00.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.740" level="INFO">${RESULT} = [{'time': 0.023847167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.570899999999938e-05, 'source_diff': 9.570899999999938e-05}, {'time': 0.023949236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:00.736" endtime="20201115 23:01:00.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.761" level="INFO">${ACCURACY} = {'source_diff': [9.570899999999938e-05, 9.62080000000004e-05, 9.558299999999978e-05, 9.555600000000011e-05, 9.613900000000203e-05, 9.531899999999996e-05, 9.543000000000051e-05, 9.52079999999994e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:01:00.741" endtime="20201115 23:01:00.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.770" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.768" endtime="20201115 23:01:00.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.775" level="INFO">VALUE: [9.570899999999938e-05, 9.62080000000004e-05, 9.558299999999978e-05, 9.555600000000011e-05, 9.613900000000203e-05, 9.531899999999996e-05, 9.543000000000051e-05, 9.52079999999994e-05, 9.524999999999811e-05, 9.530500000000039e-05, 9.609699999999985e-05, 9.556999999999968e-05, 9.608399999999975e-05, 9.607000000000018e-05, 9.519499999999931e-05, 9.607000000000018e-05, 9.562499999999849e-05, 9.576300000000218e-05, 9.576399999999818e-05, 9.55140000000014e-05, 9.58469999999996e-05, 9.575000000000208e-05, 9.537499999999824e-05, 9.61530000000016e-05, 9.575000000000208e-05, 9.556999999999968e-05, 9.538899999999781e-05, 9.608399999999975e-05, 9.59859999999993e-05, 9.558400000000272e-05, 9.555600000000011e-05, 9.605500000000114e-05, 9.552699999999803e-05, 9.550000000000183e-05, 9.513900000000103e-05, 9.606900000000071e-05, 9.58469999999996e-05, 9.583300000000003e-05, 9.519499999999931e-05, 9.591700000000092e-05, 9.562499999999849e-05, 9.56530000000011e-05, 9.544499999999956e-05, 9.602800000000147e-05, 9.543099999999999e-05, 9.595800000000015e-05, 9.538899999999781e-05, 9.576399999999818e-05, 9.543000000000051e-05, 9.606900000000071e-05]</msg>
<status status="PASS" starttime="20201115 23:01:00.772" endtime="20201115 23:01:00.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.763" endtime="20201115 23:01:00.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.782" endtime="20201115 23:01:00.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.789" endtime="20201115 23:01:00.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.786" endtime="20201115 23:01:00.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.779" endtime="20201115 23:01:00.813"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.389" endtime="20201115 23:01:00.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.387" endtime="20201115 23:01:00.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.386" endtime="20201115 23:01:00.815"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.820" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.837" endtime="20201115 23:01:00.859"></status>
</kw>
<msg timestamp="20201115 23:01:00.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.834" endtime="20201115 23:01:00.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.861" endtime="20201115 23:01:00.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.863" endtime="20201115 23:01:00.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.828" endtime="20201115 23:01:00.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.824" endtime="20201115 23:01:00.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.873" endtime="20201115 23:01:01.158"></status>
</kw>
<msg timestamp="20201115 23:01:01.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038974236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039071042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.871" endtime="20201115 23:01:01.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038974236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039071042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.162" endtime="20201115 23:01:01.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.170" endtime="20201115 23:01:01.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.868" endtime="20201115 23:01:01.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.866" endtime="20201115 23:01:01.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.177" level="INFO">${RESULT} = [{'time': 0.039071042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.68059999999979e-05, 'source_diff': 9.68059999999979e-05}, {'time': 0.039174083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:01.173" endtime="20201115 23:01:01.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.191" level="INFO">${ACCURACY} = {'source_diff': [9.68059999999979e-05, 9.711099999999695e-05, 9.687500000000321e-05, 9.611099999999595e-05, 9.61660000000017e-05, 9.659700000000382e-05, 9.638900000000228e-05, 9.612499999999552e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:01:01.178" endtime="20201115 23:01:01.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.196" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.195" endtime="20201115 23:01:01.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.199" level="INFO">VALUE: [9.68059999999979e-05, 9.711099999999695e-05, 9.687500000000321e-05, 9.611099999999595e-05, 9.61660000000017e-05, 9.659700000000382e-05, 9.638900000000228e-05, 9.612499999999552e-05, 9.718100000000174e-05, 9.709699999999738e-05, 9.647200000000022e-05, 9.711200000000336e-05, 9.644500000000056e-05, 9.637500000000271e-05, 9.63609999999962e-05, 9.644500000000056e-05, 9.612499999999552e-05, 9.627699999999878e-05, 9.688899999999584e-05, 9.644400000000108e-05, 9.699999999999986e-05, 9.695800000000115e-05, 9.662499999999602e-05, 9.626399999999868e-05, 9.688900000000278e-05, 9.679199999999832e-05, 9.681999999999746e-05, 9.693100000000149e-05, 9.69860000000003e-05, 9.626299999999921e-05, 9.64859999999998e-05, 9.62080000000004e-05, 9.697200000000072e-05, 9.649999999999936e-05, 9.616599999999476e-05, 9.681899999999799e-05, 9.695799999999422e-05, 9.673600000000004e-05, 9.68200000000044e-05, 9.713900000000303e-05, 9.624999999999911e-05, 9.65409999999986e-05, 9.672200000000047e-05, 9.656999999999721e-05, 9.622199999999997e-05, 9.679099999999885e-05, 9.618000000000126e-05, 9.684800000000354e-05, 9.624999999999911e-05, 9.619400000000083e-05]</msg>
<status status="PASS" starttime="20201115 23:01:01.197" endtime="20201115 23:01:01.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.193" endtime="20201115 23:01:01.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.202" endtime="20201115 23:01:01.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.205" endtime="20201115 23:01:01.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.204" endtime="20201115 23:01:01.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.200" endtime="20201115 23:01:01.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.821" endtime="20201115 23:01:01.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.817" endtime="20201115 23:01:01.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.816" endtime="20201115 23:01:01.226"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.229" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.237" endtime="20201115 23:01:01.257"></status>
</kw>
<msg timestamp="20201115 23:01:01.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.235" endtime="20201115 23:01:01.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.258" endtime="20201115 23:01:01.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.261" endtime="20201115 23:01:01.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.233" endtime="20201115 23:01:01.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.231" endtime="20201115 23:01:01.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.271" endtime="20201115 23:01:01.556"></status>
</kw>
<msg timestamp="20201115 23:01:01.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022146236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.269" endtime="20201115 23:01:01.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022146236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.561" endtime="20201115 23:01:01.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.569" endtime="20201115 23:01:01.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.266" endtime="20201115 23:01:01.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.265" endtime="20201115 23:01:01.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.576" level="INFO">${RESULT} = [{'time': 0.022244181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.794499999999859e-05, 'source_diff': 9.794499999999859e-05}, {'time': 0.022345181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:01.572" endtime="20201115 23:01:01.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.589" level="INFO">${ACCURACY} = {'source_diff': [9.794499999999859e-05, 9.731999999999796e-05, 9.751399999999993e-05, 9.719499999999784e-05, 9.74019999999999e-05, 9.750000000000036e-05, 9.777800000000322e-05, 9.738899999999981e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:01.577" endtime="20201115 23:01:01.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.595" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.594" endtime="20201115 23:01:01.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.597" level="INFO">VALUE: [9.794499999999859e-05, 9.731999999999796e-05, 9.751399999999993e-05, 9.719499999999784e-05, 9.74019999999999e-05, 9.750000000000036e-05, 9.777800000000322e-05, 9.738899999999981e-05, 9.713899999999956e-05, 9.737500000000024e-05, 9.794500000000206e-05, 9.756999999999821e-05, 9.800000000000086e-05, 9.768099999999877e-05, 9.712499999999999e-05, 9.730499999999892e-05, 9.78059999999989e-05, 9.741599999999948e-05, 9.726399999999968e-05, 9.815300000000013e-05, 9.761099999999745e-05, 9.802799999999653e-05, 9.762500000000049e-05, 9.769500000000181e-05, 9.772300000000095e-05, 9.731999999999796e-05, 9.741699999999895e-05, 9.795899999999816e-05, 9.737500000000024e-05, 9.780499999999942e-05, 9.795799999999869e-05, 9.769399999999887e-05, 9.76799999999993e-05, 9.762500000000049e-05, 9.730499999999892e-05, 9.761099999999745e-05, 9.806999999999871e-05, 9.72219999999975e-05, 9.708299999999781e-05, 9.757000000000168e-05, 9.713899999999956e-05, 9.752700000000003e-05, 9.74019999999999e-05, 9.798700000000077e-05, 9.783300000000203e-05, 9.788900000000031e-05, 9.806899999999924e-05, 9.762500000000049e-05, 9.715299999999913e-05, 9.765299999999963e-05]</msg>
<status status="PASS" starttime="20201115 23:01:01.596" endtime="20201115 23:01:01.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.590" endtime="20201115 23:01:01.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.601" endtime="20201115 23:01:01.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.604" endtime="20201115 23:01:01.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.603" endtime="20201115 23:01:01.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.599" endtime="20201115 23:01:01.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.229" endtime="20201115 23:01:01.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.227" endtime="20201115 23:01:01.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.227" endtime="20201115 23:01:01.625"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.628" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.643" endtime="20201115 23:01:01.663"></status>
</kw>
<msg timestamp="20201115 23:01:01.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.641" endtime="20201115 23:01:01.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.665" endtime="20201115 23:01:01.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.667" endtime="20201115 23:01:01.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.632" endtime="20201115 23:01:01.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.630" endtime="20201115 23:01:01.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.677" endtime="20201115 23:01:01.963"></status>
</kw>
<msg timestamp="20201115 23:01:01.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029456667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029555722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.675" endtime="20201115 23:01:01.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029456667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029555722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.968" endtime="20201115 23:01:01.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.976" endtime="20201115 23:01:01.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.672" endtime="20201115 23:01:01.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.671" endtime="20201115 23:01:01.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.983" level="INFO">${RESULT} = [{'time': 0.029555722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.905500000000067e-05, 'source_diff': 9.905500000000067e-05}, {'time': 0.029658722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:01.979" endtime="20201115 23:01:01.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.997" level="INFO">${ACCURACY} = {'source_diff': [9.905500000000067e-05, 9.84999999999979e-05, 9.819399999999937e-05, 9.845799999999919e-05, 9.841699999999995e-05, 9.901399999999796e-05, 9.904200000000057e-05, 9.837500000000124e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:01.984" endtime="20201115 23:01:01.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.002" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.001" endtime="20201115 23:01:02.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.004" level="INFO">VALUE: [9.905500000000067e-05, 9.84999999999979e-05, 9.819399999999937e-05, 9.845799999999919e-05, 9.841699999999995e-05, 9.901399999999796e-05, 9.904200000000057e-05, 9.837500000000124e-05, 9.883399999999903e-05, 9.85410000000006e-05, 9.850000000000136e-05, 9.86670000000002e-05, 9.908299999999981e-05, 9.844399999999962e-05, 9.854099999999713e-05, 9.883299999999956e-05, 9.909699999999938e-05, 9.826399999999721e-05, 9.875000000000161e-05, 9.908399999999928e-05, 9.906999999999971e-05, 9.820799999999547e-05, 9.836100000000514e-05, 9.87080000000029e-05, 9.908399999999928e-05, 9.822199999999504e-05, 9.875000000000161e-05, 9.880500000000042e-05, 9.855500000000017e-05, 9.831899999999949e-05, 9.824999999999418e-05, 9.909700000000632e-05, 9.844500000000256e-05, 9.893100000000349e-05, 9.833399999999853e-05, 9.865200000000462e-05, 9.865200000000462e-05, 9.830499999999992e-05, 9.904200000000057e-05, 9.867999999999683e-05, 9.848599999999486e-05, 9.856899999999974e-05, 9.844399999999615e-05, 9.818100000000274e-05, 9.83609999999982e-05, 9.819500000000231e-05, 9.909699999999938e-05, 9.833399999999853e-05, 9.83059999999994e-05, 9.876400000000118e-05]</msg>
<status status="PASS" starttime="20201115 23:01:02.003" endtime="20201115 23:01:02.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.998" endtime="20201115 23:01:02.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.008" endtime="20201115 23:01:02.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.011" endtime="20201115 23:01:02.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.009" endtime="20201115 23:01:02.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.006" endtime="20201115 23:01:02.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.628" endtime="20201115 23:01:02.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.626" endtime="20201115 23:01:02.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.625" endtime="20201115 23:01:02.033"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.035" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.043" endtime="20201115 23:01:02.065"></status>
</kw>
<msg timestamp="20201115 23:01:02.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.042" endtime="20201115 23:01:02.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.066" endtime="20201115 23:01:02.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.069" endtime="20201115 23:01:02.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.039" endtime="20201115 23:01:02.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.037" endtime="20201115 23:01:02.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.078" endtime="20201115 23:01:02.363"></status>
</kw>
<msg timestamp="20201115 23:01:02.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023349847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023449931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.076" endtime="20201115 23:01:02.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023349847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023449931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.368" endtime="20201115 23:01:02.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.376" endtime="20201115 23:01:02.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.074" endtime="20201115 23:01:02.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.072" endtime="20201115 23:01:02.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.383" level="INFO">${RESULT} = [{'time': 0.023449931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010008400000000028, 'source_diff': 0.00010008400000000028}, {'time': 0.023552972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:02.379" endtime="20201115 23:01:02.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.398" level="INFO">${ACCURACY} = {'source_diff': [0.00010008400000000028, 0.0001000549999999982, 0.00010012499999999952, 9.941600000000148e-05, 9.951400000000193e-05, 9.911099999999895e-05, 9.955500000000117e-05, 9.925000000000211e-0...</msg>
<status status="PASS" starttime="20201115 23:01:02.384" endtime="20201115 23:01:02.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.403" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.402" endtime="20201115 23:01:02.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.405" level="INFO">VALUE: [0.00010008400000000028, 0.0001000549999999982, 0.00010012499999999952, 9.941600000000148e-05, 9.951400000000193e-05, 9.911099999999895e-05, 9.955500000000117e-05, 9.925000000000211e-05, 9.919400000000037e-05, 9.923599999999907e-05, 0.0001000419999999981, 9.919499999999984e-05, 9.987499999999927e-05, 9.927700000000178e-05, 9.995800000000069e-05, 9.943100000000052e-05, 9.931900000000049e-05, 0.00010005600000000114, 9.941600000000148e-05, 0.00010001399999999896, 9.944400000000062e-05, 9.983300000000056e-05, 9.957000000000021e-05, 9.926400000000168e-05, 9.926399999999821e-05, 9.937499999999877e-05, 9.979199999999785e-05, 9.995900000000016e-05, 9.919400000000037e-05, 9.95280000000015e-05, 9.988900000000231e-05, 9.96670000000012e-05, 9.99159999999985e-05, 9.977800000000175e-05, 9.966699999999773e-05, 9.937500000000224e-05, 9.961099999999945e-05, 9.957000000000021e-05, 9.920899999999941e-05, 0.00010002799999999853, 9.998599999999983e-05, 0.00010008299999999734, 9.931900000000049e-05, 0.00010001399999999896, 0.00010006899999999777, 9.963900000000206e-05, 9.919400000000037e-05, 9.995799999999722e-05, 9.957000000000021e-05, 9.975000000000261e-05]</msg>
<status status="PASS" starttime="20201115 23:01:02.404" endtime="20201115 23:01:02.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.399" endtime="20201115 23:01:02.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.409" endtime="20201115 23:01:02.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.413" endtime="20201115 23:01:02.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.411" endtime="20201115 23:01:02.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.407" endtime="20201115 23:01:02.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.036" endtime="20201115 23:01:02.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.034" endtime="20201115 23:01:02.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.033" endtime="20201115 23:01:02.434"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.436" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.444" endtime="20201115 23:01:02.465"></status>
</kw>
<msg timestamp="20201115 23:01:02.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.443" endtime="20201115 23:01:02.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.467" endtime="20201115 23:01:02.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.469" endtime="20201115 23:01:02.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.440" endtime="20201115 23:01:02.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.438" endtime="20201115 23:01:02.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.478" endtime="20201115 23:01:02.764"></status>
</kw>
<msg timestamp="20201115 23:01:02.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022160292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.477" endtime="20201115 23:01:02.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022160292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.768" endtime="20201115 23:01:02.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.776" endtime="20201115 23:01:02.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.474" endtime="20201115 23:01:02.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.472" endtime="20201115 23:01:02.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.783" level="INFO">${RESULT} = [{'time': 0.022160292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010057000000000121, 'source_diff': 0.00010057000000000121}, {'time': 0.022265306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:02.779" endtime="20201115 23:01:02.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.797" level="INFO">${ACCURACY} = {'source_diff': [0.00010057000000000121, 0.00010106999999999824, 0.00010077699999999981, 0.00010112500000000052, 0.00010080499999999895, 0.00010024999999999964, 0.00010091699999999898, 0.0001002080000...</msg>
<status status="PASS" starttime="20201115 23:01:02.784" endtime="20201115 23:01:02.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.802" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.801" endtime="20201115 23:01:02.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.804" level="INFO">VALUE: [0.00010057000000000121, 0.00010106999999999824, 0.00010077699999999981, 0.00010112500000000052, 0.00010080499999999895, 0.00010024999999999964, 0.00010091699999999898, 0.00010020800000000094, 0.00010038899999999934, 0.00010069500000000134, 0.00010058400000000078, 0.00010083399999999756, 0.00010070900000000091, 0.00010044500000000109, 0.00010088899999999984, 0.00010047300000000023, 0.00010026299999999974, 0.0001004999999999999, 0.00010102799999999953, 0.00010013899999999909, 0.00010090299999999941, 0.00010069499999999787, 0.00010081900000000199, 0.00010050000000000336, 0.00010061099999999698, 0.00010077800000000275, 0.00010094500000000159, 0.00010056999999999774, 0.00010059700000000088, 0.00010070800000000144, 0.00010075000000000014, 0.00010083300000000156, 0.00010101399999999996, 0.00010075000000000014, 0.00010109700000000138, 0.0001010419999999991, 0.00010076399999999971, 0.00010093099999999855, 0.00010087500000000027, 0.00010094400000000212, 0.00010026399999999921, 0.00010088899999999984, 0.00010088899999999984, 0.00010080499999999895, 0.00010058299999999784, 0.00010013899999999909, 0.00010045800000000119, 0.00010030499999999845, 0.00010106899999999877, 0.00010106999999999824]</msg>
<status status="PASS" starttime="20201115 23:01:02.803" endtime="20201115 23:01:02.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.798" endtime="20201115 23:01:02.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.808" endtime="20201115 23:01:02.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.811" endtime="20201115 23:01:02.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.809" endtime="20201115 23:01:02.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.806" endtime="20201115 23:01:02.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.437" endtime="20201115 23:01:02.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.435" endtime="20201115 23:01:02.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.434" endtime="20201115 23:01:02.832"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.835" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.843" endtime="20201115 23:01:02.864"></status>
</kw>
<msg timestamp="20201115 23:01:02.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.841" endtime="20201115 23:01:02.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.866" endtime="20201115 23:01:02.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.868" endtime="20201115 23:01:02.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.839" endtime="20201115 23:01:02.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.836" endtime="20201115 23:01:02.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.877" endtime="20201115 23:01:03.164"></status>
</kw>
<msg timestamp="20201115 23:01:03.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.876" endtime="20201115 23:01:03.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.168" endtime="20201115 23:01:03.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.176" endtime="20201115 23:01:03.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.873" endtime="20201115 23:01:03.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.872" endtime="20201115 23:01:03.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.183" level="INFO">${RESULT} = [{'time': 0.022258639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010156999999999874, 'source_diff': 0.00010156999999999874}, {'time': 0.022363583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:03.179" endtime="20201115 23:01:03.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.197" level="INFO">${ACCURACY} = {'source_diff': [0.00010156999999999874, 0.00010138900000000034, 0.0001020550000000002, 0.0001020000000000014, 0.00010145800000000219, 0.00010206899999999977, 0.0001015419999999996, 0.0001019720000000...</msg>
<status status="PASS" starttime="20201115 23:01:03.184" endtime="20201115 23:01:03.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.202" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.201" endtime="20201115 23:01:03.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.204" level="INFO">VALUE: [0.00010156999999999874, 0.00010138900000000034, 0.0001020550000000002, 0.0001020000000000014, 0.00010145800000000219, 0.00010206899999999977, 0.0001015419999999996, 0.00010197200000000226, 0.00010169500000000234, 0.00010133400000000153, 0.000101819999999999, 0.00010190200000000094, 0.00010194499999999912, 0.00010159699999999841, 0.0001012359999999976, 0.00010152800000000003, 0.00010208300000000281, 0.00010115299999999966, 0.00010208300000000281, 0.0001020420000000001, 0.00010170799999999897, 0.00010202700000000106, 0.00010127799999999978, 0.00010175000000000115, 0.00010193099999999955, 0.0001013610000000012, 0.0001012220000000015, 0.0001013610000000012, 0.00010117999999999933, 0.00010195800000000269, 0.00010215299999999719, 0.00010179199999999985, 0.00010145799999999872, 0.00010212499999999805, 0.00010170899999999844, 0.00010180599999999942, 0.00010204100000000063, 0.0001018060000000029, 0.00010134700000000163, 0.00010127700000000031, 0.00010131900000000249, 0.00010176400000000071, 0.0001020000000000014, 0.00010170799999999897, 0.00010170799999999897, 0.00010194499999999912, 0.00010195899999999869, 0.00010186099999999823, 0.0001018749999999978, 0.00010199999999999793]</msg>
<status status="PASS" starttime="20201115 23:01:03.203" endtime="20201115 23:01:03.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.198" endtime="20201115 23:01:03.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.208" endtime="20201115 23:01:03.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.211" endtime="20201115 23:01:03.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.209" endtime="20201115 23:01:03.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.206" endtime="20201115 23:01:03.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.835" endtime="20201115 23:01:03.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.833" endtime="20201115 23:01:03.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.832" endtime="20201115 23:01:03.232"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.235" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.243" endtime="20201115 23:01:03.263"></status>
</kw>
<msg timestamp="20201115 23:01:03.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.241" endtime="20201115 23:01:03.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.265" endtime="20201115 23:01:03.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.267" endtime="20201115 23:01:03.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.239" endtime="20201115 23:01:03.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.237" endtime="20201115 23:01:03.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.276" endtime="20201115 23:01:03.563"></status>
</kw>
<msg timestamp="20201115 23:01:03.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022190361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:03.275" endtime="20201115 23:01:03.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022190361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:03.567" endtime="20201115 23:01:03.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.575" endtime="20201115 23:01:03.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.272" endtime="20201115 23:01:03.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.271" endtime="20201115 23:01:03.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.582" level="INFO">${RESULT} = [{'time': 0.022190361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010236099999999873, 'source_diff': 0.00010236099999999873}, {'time': 0.022298389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:03.578" endtime="20201115 23:01:03.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.596" level="INFO">${ACCURACY} = {'source_diff': [0.00010236099999999873, 0.00010276399999999825, 0.00010212499999999805, 0.00010294500000000012, 0.00010288899999999837, 0.0001026810000000003, 0.00010308399999999981, 0.00010242999999...</msg>
<status status="PASS" starttime="20201115 23:01:03.583" endtime="20201115 23:01:03.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.601" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.600" endtime="20201115 23:01:03.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.603" level="INFO">VALUE: [0.00010236099999999873, 0.00010276399999999825, 0.00010212499999999805, 0.00010294500000000012, 0.00010288899999999837, 0.0001026810000000003, 0.00010308399999999981, 0.0001024299999999971, 0.00010262499999999855, 0.00010252800000000103, 0.00010262500000000202, 0.00010233299999999959, 0.00010294400000000065, 0.0001023749999999983, 0.00010270799999999997, 0.00010238900000000134, 0.00010312499999999905, 0.00010265300000000116, 0.00010227700000000131, 0.0001024299999999971, 0.00010236200000000167, 0.00010226299999999827, 0.00010298599999999936, 0.00010215300000000066, 0.00010233299999999959, 0.00010290299999999794, 0.00010224999999999818, 0.00010288900000000184, 0.00010298699999999883, 0.00010245799999999972, 0.00010215300000000066, 0.00010313900000000209, 0.00010308300000000034, 0.0001030000000000024, 0.00010263899999999812, 0.0001029299999999976, 0.00010237500000000177, 0.00010283300000000009, 0.00010290300000000141, 0.00010283399999999956, 0.0001026810000000003, 0.00010277799999999782, 0.00010247300000000223, 0.00010295900000000316, 0.00010229099999999741, 0.00010252699999999809, 0.00010279100000000138, 0.00010290300000000141, 0.00010274999999999868, 0.00010262500000000202]</msg>
<status status="PASS" starttime="20201115 23:01:03.602" endtime="20201115 23:01:03.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.597" endtime="20201115 23:01:03.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.606" endtime="20201115 23:01:03.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.610" endtime="20201115 23:01:03.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.608" endtime="20201115 23:01:03.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.605" endtime="20201115 23:01:03.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.235" endtime="20201115 23:01:03.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.233" endtime="20201115 23:01:03.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.233" endtime="20201115 23:01:03.631"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.634" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.642" endtime="20201115 23:01:03.663"></status>
</kw>
<msg timestamp="20201115 23:01:03.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.640" endtime="20201115 23:01:03.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.665" endtime="20201115 23:01:03.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.667" endtime="20201115 23:01:03.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.638" endtime="20201115 23:01:03.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.636" endtime="20201115 23:01:03.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.677" endtime="20201115 23:01:03.962"></status>
</kw>
<msg timestamp="20201115 23:01:03.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023015056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023118819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.675" endtime="20201115 23:01:03.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023015056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023118819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.966" endtime="20201115 23:01:03.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.974" endtime="20201115 23:01:03.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.672" endtime="20201115 23:01:03.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.671" endtime="20201115 23:01:03.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.981" level="INFO">${RESULT} = [{'time': 0.023118819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010376299999999977, 'source_diff': 0.00010376299999999977}, {'time': 0.023225833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:03.978" endtime="20201115 23:01:03.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.997" level="INFO">${ACCURACY} = {'source_diff': [0.00010376299999999977, 0.00010320800000000047, 0.00010386100000000023, 0.0001033749999999993, 0.0001040000000000034, 0.00010412500000000005, 0.0001040420000000021, 0.0001036389999999...</msg>
<status status="PASS" starttime="20201115 23:01:03.982" endtime="20201115 23:01:03.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.001" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.000" endtime="20201115 23:01:04.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.004" level="INFO">VALUE: [0.00010376299999999977, 0.00010320800000000047, 0.00010386100000000023, 0.0001033749999999993, 0.0001040000000000034, 0.00010412500000000005, 0.0001040420000000021, 0.00010363899999999912, 0.00010376400000000272, 0.000103820000000001, 0.00010333300000000059, 0.00010340199999999897, 0.00010388899999999937, 0.00010340199999999897, 0.00010326399999999875, 0.00010408300000000134, 0.0001037360000000001, 0.00010383300000000109, 0.0001036940000000014, 0.00010412500000000005, 0.00010376399999999925, 0.00010340299999999844, 0.00010358400000000031, 0.00010376399999999925, 0.00010412500000000005, 0.00010349999999999943, 0.0001037360000000001, 0.0001032359999999996, 0.0001040559999999982, 0.00010324999999999918, 0.00010340299999999844, 0.00010398599999999689, 0.00010383300000000109, 0.00010399999999999993, 0.00010363899999999912, 0.00010415299999999919, 0.00010374999999999968, 0.00010357000000000074, 0.00010313899999999862, 0.00010394400000000165, 0.00010341599999999854, 0.00010358300000000084, 0.00010338899999999887, 0.00010391699999999851, 0.00010329199999999789, 0.00010333300000000059, 0.00010357000000000074, 0.0001032359999999996, 0.00010312499999999905, 0.00010393100000000155]</msg>
<status status="PASS" starttime="20201115 23:01:04.002" endtime="20201115 23:01:04.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.998" endtime="20201115 23:01:04.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.007" endtime="20201115 23:01:04.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.010" endtime="20201115 23:01:04.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.009" endtime="20201115 23:01:04.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.005" endtime="20201115 23:01:04.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.634" endtime="20201115 23:01:04.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.632" endtime="20201115 23:01:04.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.631" endtime="20201115 23:01:04.032"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.034" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.042" endtime="20201115 23:01:04.064"></status>
</kw>
<msg timestamp="20201115 23:01:04.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.041" endtime="20201115 23:01:04.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.065" endtime="20201115 23:01:04.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.068" endtime="20201115 23:01:04.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.038" endtime="20201115 23:01:04.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.036" endtime="20201115 23:01:04.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.077" endtime="20201115 23:01:04.363"></status>
</kw>
<msg timestamp="20201115 23:01:04.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.076" endtime="20201115 23:01:04.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.367" endtime="20201115 23:01:04.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.375" endtime="20201115 23:01:04.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.073" endtime="20201115 23:01:04.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.071" endtime="20201115 23:01:04.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.382" level="INFO">${RESULT} = [{'time': 0.022301444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010515200000000072, 'source_diff': 0.00010515200000000072}, {'time': 0.022408472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:04.378" endtime="20201115 23:01:04.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.396" level="INFO">${ACCURACY} = {'source_diff': [0.00010515200000000072, 0.00010452799999999957, 0.00010481899999999905, 0.00010466599999999979, 0.00010415300000000266, 0.00010509700000000191, 0.00010494499999999865, 0.0001048340000...</msg>
<status status="PASS" starttime="20201115 23:01:04.383" endtime="20201115 23:01:04.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.401" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.400" endtime="20201115 23:01:04.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.403" level="INFO">VALUE: [0.00010515200000000072, 0.00010452799999999957, 0.00010481899999999905, 0.00010466599999999979, 0.00010415300000000266, 0.00010509700000000191, 0.00010494499999999865, 0.00010483400000000156, 0.00010443100000000205, 0.00010416599999999929, 0.00010493099999999908, 0.00010500000000000093, 0.00010442999999999911, 0.00010426399999999975, 0.0001045689999999988, 0.00010438899999999987, 0.00010481899999999905, 0.00010470800000000197, 0.00010481899999999905, 0.00010440300000000291, 0.00010458400000000131, 0.000104514, 0.00010457000000000174, 0.0001050140000000005, 0.00010444399999999868, 0.00010438899999999987, 0.00010415299999999919, 0.00010488900000000037, 0.00010469399999999893, 0.00010419399999999843, 0.00010438900000000334, 0.0001047079999999985, 0.00010475000000000068, 0.00010488900000000037, 0.0001050140000000005, 0.00010448699999999686, 0.00010413800000000015, 0.000104514, 0.00010426399999999975, 0.00010458299999999837, 0.00010455499999999923, 0.00010436100000000073, 0.00010430499999999898, 0.00010494400000000265, 0.00010476400000000025, 0.0001046949999999984, 0.00010483400000000156, 0.00010467999999999936, 0.00010433299999999812, 0.00010423700000000008]</msg>
<status status="PASS" starttime="20201115 23:01:04.402" endtime="20201115 23:01:04.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.397" endtime="20201115 23:01:04.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.406" endtime="20201115 23:01:04.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.410" endtime="20201115 23:01:04.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.408" endtime="20201115 23:01:04.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.405" endtime="20201115 23:01:04.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.035" endtime="20201115 23:01:04.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.033" endtime="20201115 23:01:04.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.032" endtime="20201115 23:01:04.431"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.433" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.442" endtime="20201115 23:01:04.463"></status>
</kw>
<msg timestamp="20201115 23:01:04.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.441" endtime="20201115 23:01:04.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.464" endtime="20201115 23:01:04.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.467" endtime="20201115 23:01:04.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.438" endtime="20201115 23:01:04.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.435" endtime="20201115 23:01:04.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.476" endtime="20201115 23:01:04.762"></status>
</kw>
<msg timestamp="20201115 23:01:04.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022733083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.474" endtime="20201115 23:01:04.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022733083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.766" endtime="20201115 23:01:04.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.774" endtime="20201115 23:01:04.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.472" endtime="20201115 23:01:04.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.470" endtime="20201115 23:01:04.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.782" level="INFO">${RESULT} = [{'time': 0.022733083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001052360000000016, 'source_diff': 0.0001052360000000016}, {'time': 0.022843097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:04.778" endtime="20201115 23:01:04.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.796" level="INFO">${ACCURACY} = {'source_diff': [0.0001052360000000016, 0.00010576400000000125, 0.0001052360000000016, 0.00010533299999999912, 0.00010512500000000105, 0.00010526400000000075, 0.0001060560000000002, 0.0001055969999999...</msg>
<status status="PASS" starttime="20201115 23:01:04.783" endtime="20201115 23:01:04.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.801" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.800" endtime="20201115 23:01:04.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.803" level="INFO">VALUE: [0.0001052360000000016, 0.00010576400000000125, 0.0001052360000000016, 0.00010533299999999912, 0.00010512500000000105, 0.00010526400000000075, 0.0001060560000000002, 0.00010559699999999894, 0.00010598599999999889, 0.00010534699999999869, 0.00010544399999999968, 0.00010580599999999996, 0.00010559700000000241, 0.0001055689999999998, 0.00010543000000000011, 0.00010562500000000155, 0.00010587499999999833, 0.0001051949999999989, 0.00010613899999999815, 0.00010577800000000082, 0.00010559699999999894, 0.0001058889999999979, 0.00010556999999999928, 0.00010544399999999968, 0.00010513900000000062, 0.00010519399999999943, 0.0001060140000000015, 0.00010515300000000019, 0.0001055689999999998, 0.00010523599999999814, 0.00010587499999999833, 0.00010538900000000087, 0.00010558299999999937, 0.00010609700000000291, 0.00010580599999999996, 0.00010604100000000116, 0.0001057079999999995, 0.00010544399999999968, 0.00010584699999999919, 0.00010558299999999937, 0.00010559699999999894, 0.0001060140000000015, 0.0001060140000000015, 0.00010594499999999965, 0.0001053889999999974, 0.00010608400000000281, 0.00010530499999999998, 0.00010545799999999925, 0.00010520800000000247, 0.00010580500000000048]</msg>
<status status="PASS" starttime="20201115 23:01:04.802" endtime="20201115 23:01:04.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.797" endtime="20201115 23:01:04.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.806" endtime="20201115 23:01:04.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.810" endtime="20201115 23:01:04.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.808" endtime="20201115 23:01:04.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.805" endtime="20201115 23:01:04.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.434" endtime="20201115 23:01:04.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.432" endtime="20201115 23:01:04.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.431" endtime="20201115 23:01:04.832"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.834" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.842" endtime="20201115 23:01:04.863"></status>
</kw>
<msg timestamp="20201115 23:01:04.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.841" endtime="20201115 23:01:04.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.864" endtime="20201115 23:01:04.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.867" endtime="20201115 23:01:04.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.838" endtime="20201115 23:01:04.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.836" endtime="20201115 23:01:04.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.876" endtime="20201115 23:01:05.161"></status>
</kw>
<msg timestamp="20201115 23:01:05.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.875" endtime="20201115 23:01:05.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.165" endtime="20201115 23:01:05.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.173" endtime="20201115 23:01:05.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.872" endtime="20201115 23:01:05.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.870" endtime="20201115 23:01:05.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.180" level="INFO">${RESULT} = [{'time': 0.022372028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001070699999999973, 'source_diff': 0.0001070699999999973}, {'time': 0.022482056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:05.177" endtime="20201115 23:01:05.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.194" level="INFO">${ACCURACY} = {'source_diff': [0.0001070699999999973, 0.00010657000000000028, 0.00010708300000000087, 0.0001062499999999987, 0.00010687499999999933, 0.00010679099999999844, 0.000106208, 0.00010676399999999878, 0.00...</msg>
<status status="PASS" starttime="20201115 23:01:05.181" endtime="20201115 23:01:05.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.199" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.198" endtime="20201115 23:01:05.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.201" level="INFO">VALUE: [0.0001070699999999973, 0.00010657000000000028, 0.00010708300000000087, 0.0001062499999999987, 0.00010687499999999933, 0.00010679099999999844, 0.000106208, 0.00010676399999999878, 0.00010623599999999914, 0.00010657000000000028, 0.00010701399999999903, 0.0001065560000000007, 0.00010657000000000028, 0.00010690299999999847, 0.00010673699999999911, 0.00010644500000000015, 0.0001067629999999993, 0.000106208, 0.00010629100000000141, 0.00010626399999999828, 0.00010708300000000087, 0.00010644399999999721, 0.00010690299999999847, 0.00010670899999999997, 0.00010701399999999903, 0.00010654200000000114, 0.00010620899999999947, 0.00010673700000000258, 0.0001067499999999992, 0.0001067499999999992, 0.00010708300000000087, 0.00010692999999999814, 0.00010690300000000194, 0.00010712499999999958, 0.00010709700000000044, 0.00010713899999999915, 0.00010647299999999929, 0.00010662500000000255, 0.0001068340000000001, 0.00010657000000000028, 0.00010683300000000062, 0.00010684700000000019, 0.00010713899999999915, 0.00010701399999999903, 0.00010652800000000157, 0.00010630500000000098, 0.00010701399999999903, 0.00010680600000000096, 0.00010641700000000101, 0.00010708400000000035]</msg>
<status status="PASS" starttime="20201115 23:01:05.200" endtime="20201115 23:01:05.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.195" endtime="20201115 23:01:05.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.205" endtime="20201115 23:01:05.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.208" endtime="20201115 23:01:05.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.207" endtime="20201115 23:01:05.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.203" endtime="20201115 23:01:05.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.835" endtime="20201115 23:01:05.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.833" endtime="20201115 23:01:05.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.832" endtime="20201115 23:01:05.229"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.232" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.240" endtime="20201115 23:01:05.262"></status>
</kw>
<msg timestamp="20201115 23:01:05.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.238" endtime="20201115 23:01:05.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.263" endtime="20201115 23:01:05.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.266" endtime="20201115 23:01:05.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.236" endtime="20201115 23:01:05.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.234" endtime="20201115 23:01:05.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.275" endtime="20201115 23:01:05.561"></status>
</kw>
<msg timestamp="20201115 23:01:05.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022987306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023094806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.274" endtime="20201115 23:01:05.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022987306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023094806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.565" endtime="20201115 23:01:05.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.573" endtime="20201115 23:01:05.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.271" endtime="20201115 23:01:05.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.269" endtime="20201115 23:01:05.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.580" level="INFO">${RESULT} = [{'time': 0.023094806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010749999999999996, 'source_diff': 0.00010749999999999996}, {'time': 0.023204819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:05.577" endtime="20201115 23:01:05.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.595" level="INFO">${ACCURACY} = {'source_diff': [0.00010749999999999996, 0.00010751300000000005, 0.00010731900000000155, 0.00010806899999999883, 0.0001080690000000023, 0.00010777799999999935, 0.00010769499999999793, 0.00010776399999...</msg>
<status status="PASS" starttime="20201115 23:01:05.581" endtime="20201115 23:01:05.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.600" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.598" endtime="20201115 23:01:05.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.603" level="INFO">VALUE: [0.00010749999999999996, 0.00010751300000000005, 0.00010731900000000155, 0.00010806899999999883, 0.0001080690000000023, 0.00010777799999999935, 0.00010769499999999793, 0.00010776399999999978, 0.00010737499999999983, 0.00010716699999999829, 0.00010761100000000051, 0.00010731999999999756, 0.00010722300000000004, 0.00010742999999999864, 0.00010725000000000318, 0.0001077080000000015, 0.00010765299999999922, 0.00010801400000000003, 0.0001072219999999971, 0.00010773600000000064, 0.00010751399999999953, 0.00010726399999999928, 0.00010763899999999965, 0.0001073889999999994, 0.0001072499999999997, 0.00010768099999999836, 0.0001072499999999997, 0.00010730499999999851, 0.0001073889999999994, 0.00010763899999999965, 0.00010719399999999796, 0.00010769400000000193, 0.00010747200000000082, 0.00010755599999999824, 0.00010773600000000064, 0.00010797199999999785, 0.0001073340000000006, 0.00010751399999999953, 0.00010788800000000043, 0.00010712499999999958, 0.00010784700000000119, 0.00010745800000000125, 0.00010723600000000014, 0.00010776399999999978, 0.0001075699999999978, 0.00010807000000000178, 0.00010781999999999806, 0.0001073889999999994, 0.00010761100000000051, 0.00010777699999999987]</msg>
<status status="PASS" starttime="20201115 23:01:05.601" endtime="20201115 23:01:05.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.596" endtime="20201115 23:01:05.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.606" endtime="20201115 23:01:05.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.610" endtime="20201115 23:01:05.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.608" endtime="20201115 23:01:05.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.604" endtime="20201115 23:01:05.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.232" endtime="20201115 23:01:05.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.231" endtime="20201115 23:01:05.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.230" endtime="20201115 23:01:05.631"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.633" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.642" endtime="20201115 23:01:05.663"></status>
</kw>
<msg timestamp="20201115 23:01:05.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.640" endtime="20201115 23:01:05.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.665" endtime="20201115 23:01:05.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.668" endtime="20201115 23:01:05.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.637" endtime="20201115 23:01:05.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.635" endtime="20201115 23:01:05.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.677" endtime="20201115 23:01:05.983"></status>
</kw>
<msg timestamp="20201115 23:01:05.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022712708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.675" endtime="20201115 23:01:05.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022712708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.987" endtime="20201115 23:01:05.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.995" endtime="20201115 23:01:05.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.673" endtime="20201115 23:01:05.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.671" endtime="20201115 23:01:05.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:06.002" level="INFO">${RESULT} = [{'time': 0.022712708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010902700000000112, 'source_diff': 0.00010902700000000112}, {'time': 0.022824722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:05.999" endtime="20201115 23:01:06.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:06.016" level="INFO">${ACCURACY} = {'source_diff': [0.00010902700000000112, 0.00010874999999999774, 0.0001085280000000001, 0.00010865299999999675, 0.00010901400000000103, 0.00010837500000000083, 0.00010862499999999761, 0.00010852800000...</msg>
<status status="PASS" starttime="20201115 23:01:06.004" endtime="20201115 23:01:06.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.021" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:01:06.020" endtime="20201115 23:01:06.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.023" level="INFO">VALUE: [0.00010902700000000112, 0.00010874999999999774, 0.0001085280000000001, 0.00010865299999999675, 0.00010901400000000103, 0.00010837500000000083, 0.00010862499999999761, 0.0001085280000000001, 0.00010836099999999779, 0.00010865199999999728, 0.00010831899999999908, 0.00010836099999999779, 0.00010915300000000072, 0.00010826400000000028, 0.00010830499999999951, 0.00010854199999999967, 0.00010895799999999928, 0.00010815299999999972, 0.00010911099999999854, 0.00010859700000000194, 0.00010837500000000083, 0.0001083890000000004, 0.00010843100000000258, 0.0001082630000000008, 0.00010901400000000103, 0.00010897199999999885, 0.000108208000000002, 0.00010912499999999811, 0.00010823600000000114, 0.00010893099999999961, 0.00010837499999999736, 0.00010881899999999958, 0.00010863900000000065, 0.00010881999999999906, 0.00010833300000000212, 0.00010905500000000026, 0.00010881899999999958, 0.00010813900000000015, 0.00010830599999999899, 0.00010906899999999983, 0.00010845800000000225, 0.00010833300000000212, 0.00010913899999999768, 0.00010840299999999997, 0.00010851400000000053, 0.00010837500000000083, 0.000108902000000001, 0.00010913899999999768, 0.0001088890000000009, 0.00010817999999999939]</msg>
<status status="PASS" starttime="20201115 23:01:06.022" endtime="20201115 23:01:06.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.017" endtime="20201115 23:01:06.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.027" endtime="20201115 23:01:06.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.030" endtime="20201115 23:01:06.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.029" endtime="20201115 23:01:06.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.025" endtime="20201115 23:01:06.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.634" endtime="20201115 23:01:06.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.632" endtime="20201115 23:01:06.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.631" endtime="20201115 23:01:06.052"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.054" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.062" endtime="20201115 23:01:06.084"></status>
</kw>
<msg timestamp="20201115 23:01:06.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.061" endtime="20201115 23:01:06.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.085" endtime="20201115 23:01:06.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.088" endtime="20201115 23:01:06.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.058" endtime="20201115 23:01:06.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.056" endtime="20201115 23:01:06.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.097" endtime="20201115 23:01:06.383"></status>
</kw>
<msg timestamp="20201115 23:01:06.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.096" endtime="20201115 23:01:06.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.387" endtime="20201115 23:01:06.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.396" endtime="20201115 23:01:06.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.093" endtime="20201115 23:01:06.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.091" endtime="20201115 23:01:06.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:06.403" level="INFO">${RESULT} = [{'time': 0.022685569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010968000000000089, 'source_diff': 0.00010968000000000089}, {'time': 0.022799583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:06.399" endtime="20201115 23:01:06.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:06.416" level="INFO">${ACCURACY} = {'source_diff': [0.00010968000000000089, 0.00011008299999999693, 0.00010981900000000058, 0.00010923599999999867, 0.00010961099999999904, 0.0001095829999999999, 0.0001095829999999999, 0.000109763999999...</msg>
<status status="PASS" starttime="20201115 23:01:06.404" endtime="20201115 23:01:06.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.421" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:01:06.420" endtime="20201115 23:01:06.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.424" level="INFO">VALUE: [0.00010968000000000089, 0.00011008299999999693, 0.00010981900000000058, 0.00010923599999999867, 0.00010961099999999904, 0.0001095829999999999, 0.0001095829999999999, 0.00010976399999999831, 0.00010965300000000122, 0.00010931999999999956, 0.0001100700000000003, 0.0001098890000000019, 0.00010918099999999986, 0.00010931900000000008, 0.00010952699999999815, 0.00010980500000000101, 0.00010924999999999824, 0.00010993100000000061, 0.00011006900000000083, 0.00010950000000000196, 0.00010983300000000015, 0.00010951399999999806, 0.00010987499999999886, 0.00010950000000000196, 0.00010941700000000054, 0.0001100700000000003, 0.0001095829999999999, 0.00010948599999999892, 0.00010979100000000144, 0.00010987500000000233, 0.0001095829999999999, 0.0001092219999999991, 0.00010932000000000303, 0.00011013900000000215, 0.00010943100000000011, 0.00010945899999999925, 0.00010925000000000171, 0.00011002700000000212, 0.00011013899999999868, 0.00010919399999999996, 0.00010956900000000033, 0.0001100830000000004, 0.00010945799999999978, 0.00010919399999999996, 0.00011004200000000117, 0.00010931999999999956, 0.00010944499999999968, 0.00010944499999999968, 0.00010913899999999768, 0.00010958300000000337]</msg>
<status status="PASS" starttime="20201115 23:01:06.422" endtime="20201115 23:01:06.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.417" endtime="20201115 23:01:06.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.427" endtime="20201115 23:01:06.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.431" endtime="20201115 23:01:06.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.429" endtime="20201115 23:01:06.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.425" endtime="20201115 23:01:06.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.055" endtime="20201115 23:01:06.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.053" endtime="20201115 23:01:06.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.052" endtime="20201115 23:01:06.452"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.454" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.463" endtime="20201115 23:01:06.484"></status>
</kw>
<msg timestamp="20201115 23:01:06.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.461" endtime="20201115 23:01:06.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.485" endtime="20201115 23:01:06.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.488" endtime="20201115 23:01:06.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.458" endtime="20201115 23:01:06.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.456" endtime="20201115 23:01:06.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.498" endtime="20201115 23:01:06.784"></status>
</kw>
<msg timestamp="20201115 23:01:06.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022581972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.496" endtime="20201115 23:01:06.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022581972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.789" endtime="20201115 23:01:06.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.797" endtime="20201115 23:01:06.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.493" endtime="20201115 23:01:06.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.491" endtime="20201115 23:01:06.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:06.804" level="INFO">${RESULT} = [{'time': 0.022692236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011026400000000228, 'source_diff': 0.00011026400000000228}, {'time': 0.022807222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:06.801" endtime="20201115 23:01:06.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:06.818" level="INFO">${ACCURACY} = {'source_diff': [0.00011026400000000228, 0.00011081899999999811, 0.00011013899999999868, 0.00011036099999999979, 0.00011016699999999782, 0.0001104029999999985, 0.00011094499999999771, 0.00011033400000...</msg>
<status status="PASS" starttime="20201115 23:01:06.805" endtime="20201115 23:01:06.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.823" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:01:06.822" endtime="20201115 23:01:06.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.826" level="INFO">VALUE: [0.00011026400000000228, 0.00011081899999999811, 0.00011013899999999868, 0.00011036099999999979, 0.00011016699999999782, 0.0001104029999999985, 0.00011094499999999771, 0.00011033400000000013, 0.00011019500000000043, 0.00011020800000000053, 0.0001110830000000014, 0.00011065299999999875, 0.00011076399999999931, 0.000110209, 0.00011101399999999956, 0.00011015299999999825, 0.00011062499999999961, 0.0001105419999999982, 0.00011101399999999956, 0.00011112500000000011, 0.00011082000000000106, 0.00011111100000000054, 0.00011076399999999931, 0.00011069399999999799, 0.00011074999999999974, 0.0001107220000000006, 0.00011074999999999974, 0.00011056900000000133, 0.00011056899999999786, 0.0001107090000000005, 0.00011113899999999968, 0.00011081999999999759, 0.00011108399999999741, 0.00011049999999999949, 0.00011056899999999786, 0.00011075000000000321, 0.00011062499999999961, 0.00011061100000000004, 0.00011051399999999906, 0.00011034699999999675, 0.00011020800000000053, 0.00011018100000000086, 0.00011081999999999759, 0.00011026399999999881, 0.00011034699999999675, 0.00011055600000000124, 0.00011037499999999936, 0.00011029200000000142, 0.0001110280000000026, 0.00011094400000000171]</msg>
<status status="PASS" starttime="20201115 23:01:06.824" endtime="20201115 23:01:06.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.819" endtime="20201115 23:01:06.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.829" endtime="20201115 23:01:06.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.833" endtime="20201115 23:01:06.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.831" endtime="20201115 23:01:06.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.827" endtime="20201115 23:01:06.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.455" endtime="20201115 23:01:06.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.453" endtime="20201115 23:01:06.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.452" endtime="20201115 23:01:06.854"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.856" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.865" endtime="20201115 23:01:06.887"></status>
</kw>
<msg timestamp="20201115 23:01:06.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.863" endtime="20201115 23:01:06.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.888" endtime="20201115 23:01:06.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.895" endtime="20201115 23:01:06.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.861" endtime="20201115 23:01:06.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.858" endtime="20201115 23:01:06.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.905" endtime="20201115 23:01:07.191"></status>
</kw>
<msg timestamp="20201115 23:01:07.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023497125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023608583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.903" endtime="20201115 23:01:07.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023497125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023608583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.195" endtime="20201115 23:01:07.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.203" endtime="20201115 23:01:07.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.900" endtime="20201115 23:01:07.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.898" endtime="20201115 23:01:07.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:07.210" level="INFO">${RESULT} = [{'time': 0.023608583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011145799999999831, 'source_diff': 0.00011145799999999831}, {'time': 0.023723528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:07.207" endtime="20201115 23:01:07.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:07.225" level="INFO">${ACCURACY} = {'source_diff': [0.00011145799999999831, 0.00011205599999999927, 0.00011145899999999778, 0.00011150000000000049, 0.00011158399999999791, 0.00011195800000000228, 0.00011188900000000043, 0.0001112500000...</msg>
<status status="PASS" starttime="20201115 23:01:07.211" endtime="20201115 23:01:07.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.230" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:01:07.229" endtime="20201115 23:01:07.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.232" level="INFO">VALUE: [0.00011145799999999831, 0.00011205599999999927, 0.00011145899999999778, 0.00011150000000000049, 0.00011158399999999791, 0.00011195800000000228, 0.00011188900000000043, 0.00011125000000000024, 0.00011134700000000122, 0.00011125000000000024, 0.00011177799999999988, 0.00011119399999999849, 0.0001120419999999997, 0.00011138899999999993, 0.00011144500000000168, 0.00011169499999999846, 0.0001120419999999997, 0.00011118000000000239, 0.00011122199999999763, 0.00011120800000000153, 0.00011145799999999831, 0.00011119399999999849, 0.00011215300000000025, 0.00011181899999999911, 0.00011119499999999796, 0.00011180599999999902, 0.00011165299999999975, 0.00011191699999999957, 0.00011143099999999864, 0.00011120800000000153, 0.00011113800000000021, 0.00011127799999999938, 0.000111903, 0.0001114159999999996, 0.00011129199999999895, 0.00011197200000000185, 0.00011158399999999791, 0.00011194500000000218, 0.00011152799999999963, 0.00011119499999999796, 0.00011200000000000099, 0.00011192999999999967, 0.00011186100000000129, 0.00011143000000000264, 0.00011187500000000086, 0.00011194399999999924, 0.00011176400000000031, 0.00011206999999999884, 0.00011140300000000297, 0.00011202700000000065]</msg>
<status status="PASS" starttime="20201115 23:01:07.231" endtime="20201115 23:01:07.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.226" endtime="20201115 23:01:07.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.235" endtime="20201115 23:01:07.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:07.239" endtime="20201115 23:01:07.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.237" endtime="20201115 23:01:07.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.234" endtime="20201115 23:01:07.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.857" endtime="20201115 23:01:07.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.855" endtime="20201115 23:01:07.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.854" endtime="20201115 23:01:07.260"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.263" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.272" endtime="20201115 23:01:07.293"></status>
</kw>
<msg timestamp="20201115 23:01:07.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.270" endtime="20201115 23:01:07.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.295" endtime="20201115 23:01:07.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.297" endtime="20201115 23:01:07.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.267" endtime="20201115 23:01:07.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.265" endtime="20201115 23:01:07.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.307" endtime="20201115 23:01:07.593"></status>
</kw>
<msg timestamp="20201115 23:01:07.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023151722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023264014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.305" endtime="20201115 23:01:07.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023151722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023264014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.597" endtime="20201115 23:01:07.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.606" endtime="20201115 23:01:07.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.302" endtime="20201115 23:01:07.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.301" endtime="20201115 23:01:07.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:07.613" level="INFO">${RESULT} = [{'time': 0.023264014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011229199999999995, 'source_diff': 0.00011229199999999995}, {'time': 0.023379028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:07.609" endtime="20201115 23:01:07.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:07.628" level="INFO">${ACCURACY} = {'source_diff': [0.00011229199999999995, 0.00011268099999999989, 0.00011258399999999891, 0.00011304100000000122, 0.0001122359999999982, 0.00011233300000000265, 0.00011287500000000186, 0.00011276400000...</msg>
<status status="PASS" starttime="20201115 23:01:07.614" endtime="20201115 23:01:07.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.632" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:01:07.631" endtime="20201115 23:01:07.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.635" level="INFO">VALUE: [0.00011229199999999995, 0.00011268099999999989, 0.00011258399999999891, 0.00011304100000000122, 0.0001122359999999982, 0.00011233300000000265, 0.00011287500000000186, 0.00011276400000000131, 0.00011270799999999956, 0.00011313900000000168, 0.00011276399999999784, 0.00011295799999999981, 0.00011237500000000136, 0.00011213899999999721, 0.00011220899999999853, 0.00011226399999999734, 0.00011301400000000156, 0.00011227699999999743, 0.00011222199999999863, 0.00011299999999999852, 0.0001127359999999987, 0.00011283299999999968, 0.00011281900000000011, 0.00011238899999999746, 0.00011222300000000157, 0.00011226400000000081, 0.00011298600000000242, 0.00011313799999999874, 0.00011233300000000265, 0.00011247199999999888, 0.00011244399999999974, 0.00011280500000000054, 0.00011227799999999691, 0.00011251400000000106, 0.00011294400000000024, 0.00011295799999999981, 0.00011248599999999845, 0.00011256999999999934, 0.00011276400000000131, 0.00011233400000000213, 0.00011301299999999861, 0.00011262500000000161, 0.00011311099999999907, 0.00011251400000000106, 0.00011306900000000036, 0.00011251400000000106, 0.00011305600000000027, 0.00011233299999999918, 0.00011256999999999934, 0.00011233399999999866]</msg>
<status status="PASS" starttime="20201115 23:01:07.633" endtime="20201115 23:01:07.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.629" endtime="20201115 23:01:07.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.638" endtime="20201115 23:01:07.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:07.642" endtime="20201115 23:01:07.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.640" endtime="20201115 23:01:07.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.636" endtime="20201115 23:01:07.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.263" endtime="20201115 23:01:07.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.262" endtime="20201115 23:01:07.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.261" endtime="20201115 23:01:07.663"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.666" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.675" endtime="20201115 23:01:07.696"></status>
</kw>
<msg timestamp="20201115 23:01:07.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.673" endtime="20201115 23:01:07.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.697" endtime="20201115 23:01:07.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.700" endtime="20201115 23:01:07.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.670" endtime="20201115 23:01:07.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.668" endtime="20201115 23:01:07.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.710" endtime="20201115 23:01:07.995"></status>
</kw>
<msg timestamp="20201115 23:01:07.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023085792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023199417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.708" endtime="20201115 23:01:07.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023085792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023199417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.999" endtime="20201115 23:01:08.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.008" endtime="20201115 23:01:08.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.705" endtime="20201115 23:01:08.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.703" endtime="20201115 23:01:08.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:08.015" level="INFO">${RESULT} = [{'time': 0.023199417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011362499999999914, 'source_diff': 0.00011362499999999914}, {'time': 0.023315444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:08.011" endtime="20201115 23:01:08.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:08.028" level="INFO">${ACCURACY} = {'source_diff': [0.00011362499999999914, 0.00011315200000000178, 0.00011330499999999757, 0.00011337500000000236, 0.00011380499999999807, 0.00011377799999999841, 0.00011384700000000025, 0.0001139580000...</msg>
<status status="PASS" starttime="20201115 23:01:08.016" endtime="20201115 23:01:08.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.033" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:01:08.032" endtime="20201115 23:01:08.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.035" level="INFO">VALUE: [0.00011362499999999914, 0.00011315200000000178, 0.00011330499999999757, 0.00011337500000000236, 0.00011380499999999807, 0.00011377799999999841, 0.00011384700000000025, 0.00011395800000000081, 0.00011398599999999995, 0.00011366700000000132, 0.00011395900000000028, 0.00011320800000000006, 0.00011331899999999714, 0.0001137359999999997, 0.00011352800000000163, 0.00011395799999999734, 0.00011345800000000031, 0.00011395799999999734, 0.00011374999999999927, 0.00011320899999999953, 0.00011343100000000064, 0.00011333399999999966, 0.0001138749999999994, 0.00011368100000000089, 0.00011404199999999823, 0.00011401399999999909, 0.0001133749999999989, 0.00011388899999999896, 0.00011405499999999832, 0.00011319400000000049, 0.00011415300000000225, 0.00011405600000000127, 0.00011341700000000107, 0.00011340299999999803, 0.00011344400000000074, 0.00011412500000000311, 0.00011330500000000104, 0.00011399999999999952, 0.00011405600000000127, 0.00011376399999999884, 0.00011337500000000236, 0.00011358300000000043, 0.00011344500000000021, 0.00011369500000000046, 0.00011333399999999966, 0.00011306999999999984, 0.00011369500000000046, 0.00011397200000000038, 0.00011408300000000093, 0.00011347199999999988]</msg>
<status status="PASS" starttime="20201115 23:01:08.034" endtime="20201115 23:01:08.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.029" endtime="20201115 23:01:08.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.039" endtime="20201115 23:01:08.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:08.043" endtime="20201115 23:01:08.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.041" endtime="20201115 23:01:08.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.037" endtime="20201115 23:01:08.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.667" endtime="20201115 23:01:08.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.665" endtime="20201115 23:01:08.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.664" endtime="20201115 23:01:08.064"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.066" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.075" endtime="20201115 23:01:08.096"></status>
</kw>
<msg timestamp="20201115 23:01:08.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.073" endtime="20201115 23:01:08.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.098" endtime="20201115 23:01:08.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.100" endtime="20201115 23:01:08.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.071" endtime="20201115 23:01:08.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.068" endtime="20201115 23:01:08.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.110" endtime="20201115 23:01:08.395"></status>
</kw>
<msg timestamp="20201115 23:01:08.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022744444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.108" endtime="20201115 23:01:08.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022744444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.399" endtime="20201115 23:01:08.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.407" endtime="20201115 23:01:08.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.105" endtime="20201115 23:01:08.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.104" endtime="20201115 23:01:08.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:08.414" level="INFO">${RESULT} = [{'time': 0.022744444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011483299999999821, 'source_diff': 0.00011483299999999821}, {'time': 0.022862458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:08.411" endtime="20201115 23:01:08.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:08.428" level="INFO">${ACCURACY} = {'source_diff': [0.00011483299999999821, 0.00011483299999999821, 0.00011452799999999916, 0.00011505499999999932, 0.00011440299999999903, 0.00011447200000000088, 0.00011479199999999898, 0.0001146249999...</msg>
<status status="PASS" starttime="20201115 23:01:08.415" endtime="20201115 23:01:08.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.433" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:01:08.432" endtime="20201115 23:01:08.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.436" level="INFO">VALUE: [0.00011483299999999821, 0.00011483299999999821, 0.00011452799999999916, 0.00011505499999999932, 0.00011440299999999903, 0.00011447200000000088, 0.00011479199999999898, 0.00011462499999999667, 0.00011493099999999867, 0.00011456999999999787, 0.00011420900000000053, 0.00011466699999999885, 0.00011468000000000242, 0.00011416700000000182, 0.00011513900000000021, 0.00011483300000000168, 0.00011481900000000211, 0.00011501400000000009, 0.00011416699999999835, 0.00011463899999999971, 0.00011481999999999812, 0.0001145559999999983, 0.00011508299999999846, 0.00011466600000000285, 0.00011426399999999934, 0.00011433299999999771, 0.0001143749999999999, 0.00011454199999999873, 0.00011488899999999996, 0.00011465299999999928, 0.00011451399999999959, 0.00011455600000000177, 0.0001148750000000004, 0.00011475000000000027, 0.00011483299999999821, 0.00011501400000000009, 0.00011431899999999814, 0.00011470800000000156, 0.00011477799999999941, 0.00011448600000000045, 0.00011462500000000014, 0.00011438899999999946, 0.00011429200000000195, 0.00011419500000000096, 0.00011488899999999996, 0.00011481899999999864, 0.00011501400000000009, 0.00011475000000000027, 0.00011463899999999971, 0.00011502799999999966]</msg>
<status status="PASS" starttime="20201115 23:01:08.434" endtime="20201115 23:01:08.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.429" endtime="20201115 23:01:08.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.439" endtime="20201115 23:01:08.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:08.443" endtime="20201115 23:01:08.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.441" endtime="20201115 23:01:08.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.437" endtime="20201115 23:01:08.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.067" endtime="20201115 23:01:08.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.065" endtime="20201115 23:01:08.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.064" endtime="20201115 23:01:08.464"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.466" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.475" endtime="20201115 23:01:08.497"></status>
</kw>
<msg timestamp="20201115 23:01:08.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.473" endtime="20201115 23:01:08.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.499" endtime="20201115 23:01:08.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.502" endtime="20201115 23:01:08.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.471" endtime="20201115 23:01:08.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.468" endtime="20201115 23:01:08.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.511" endtime="20201115 23:01:08.797"></status>
</kw>
<msg timestamp="20201115 23:01:08.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023607458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023723514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.510" endtime="20201115 23:01:08.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023607458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023723514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.801" endtime="20201115 23:01:08.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.809" endtime="20201115 23:01:08.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.507" endtime="20201115 23:01:08.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.505" endtime="20201115 23:01:08.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:08.816" level="INFO">${RESULT} = [{'time': 0.023723514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001160559999999998, 'source_diff': 0.0001160559999999998}, {'time': 0.0238455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:08.813" endtime="20201115 23:01:08.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:08.832" level="INFO">${ACCURACY} = {'source_diff': [0.0001160559999999998, 0.00011602799999999719, 0.00011575000000000127, 0.00011587499999999792, 0.00011557000000000234, 0.0001159170000000001, 0.00011597299999999838, 0.000115834000000...</msg>
<status status="PASS" starttime="20201115 23:01:08.818" endtime="20201115 23:01:08.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.837" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:01:08.836" endtime="20201115 23:01:08.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.840" level="INFO">VALUE: [0.0001160559999999998, 0.00011602799999999719, 0.00011575000000000127, 0.00011587499999999792, 0.00011557000000000234, 0.0001159170000000001, 0.00011597299999999838, 0.00011583400000000216, 0.00011563799999999777, 0.00011566600000000038, 0.00011519400000000249, 0.0001160689999999999, 0.0001158750000000014, 0.00011613900000000121, 0.00011532000000000209, 0.00011613900000000121, 0.00011590300000000053, 0.00011598599999999848, 0.00011518099999999892, 0.00011602700000000118, 0.00011544399999999927, 0.0001157360000000017, 0.00011577800000000041, 0.00011540300000000003, 0.00011540300000000003, 0.00011555600000000277, 0.00011518099999999892, 0.0001159170000000001, 0.00011556999999999887, 0.00011531899999999914, 0.00011584699999999878, 0.00011563800000000124, 0.0001160689999999999, 0.00011594399999999977, 0.00011579199999999998, 0.00011573599999999823, 0.00011612500000000164, 0.00011556999999999887, 0.00011541700000000307, 0.00011583399999999869, 0.00011550000000000102, 0.00011581999999999912, 0.00011569500000000246, 0.00011569400000000299, 0.00011545799999999884, 0.00011554199999999973, 0.00011569399999999952, 0.00011518099999999892, 0.00011519499999999849, 0.00011580599999999955]</msg>
<status status="PASS" starttime="20201115 23:01:08.838" endtime="20201115 23:01:08.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.833" endtime="20201115 23:01:08.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.843" endtime="20201115 23:01:08.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:08.847" endtime="20201115 23:01:08.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.845" endtime="20201115 23:01:08.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.841" endtime="20201115 23:01:08.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.467" endtime="20201115 23:01:08.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.465" endtime="20201115 23:01:08.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.464" endtime="20201115 23:01:08.868"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.871" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.879" endtime="20201115 23:01:08.899"></status>
</kw>
<msg timestamp="20201115 23:01:08.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.878" endtime="20201115 23:01:08.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.901" endtime="20201115 23:01:08.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.904" endtime="20201115 23:01:08.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.875" endtime="20201115 23:01:08.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.873" endtime="20201115 23:01:08.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.913" endtime="20201115 23:01:09.199"></status>
</kw>
<msg timestamp="20201115 23:01:09.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022940417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023057083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.911" endtime="20201115 23:01:09.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022940417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023057083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.203" endtime="20201115 23:01:09.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.212" endtime="20201115 23:01:09.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.909" endtime="20201115 23:01:09.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.907" endtime="20201115 23:01:09.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:09.219" level="INFO">${RESULT} = [{'time': 0.023057083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011666599999999791, 'source_diff': 0.00011666599999999791}, {'time': 0.023178125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:09.216" endtime="20201115 23:01:09.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:09.233" level="INFO">${ACCURACY} = {'source_diff': [0.00011666599999999791, 0.00011654200000000073, 0.00011708399999999994, 0.00011677800000000141, 0.00011615300000000078, 0.00011676399999999837, 0.00011626400000000134, 0.0001161530000...</msg>
<status status="PASS" starttime="20201115 23:01:09.220" endtime="20201115 23:01:09.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.237" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:01:09.236" endtime="20201115 23:01:09.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.240" level="INFO">VALUE: [0.00011666599999999791, 0.00011654200000000073, 0.00011708399999999994, 0.00011677800000000141, 0.00011615300000000078, 0.00011676399999999837, 0.00011626400000000134, 0.00011615300000000078, 0.0001170560000000008, 0.00011622199999999916, 0.00011704099999999829, 0.00011691600000000163, 0.00011615300000000078, 0.0001167499999999988, 0.00011698599999999948, 0.0001165690000000004, 0.00011656999999999987, 0.00011708399999999994, 0.00011651400000000159, 0.00011693100000000067, 0.00011699999999999905, 0.00011681900000000064, 0.00011613900000000121, 0.00011638900000000146, 0.00011708300000000046, 0.00011663900000000171, 0.00011631999999999962, 0.00011676399999999837, 0.00011701400000000209, 0.00011668100000000042, 0.00011647299999999888, 0.00011608299999999946, 0.00011686099999999935, 0.00011619400000000002, 0.00011694400000000077, 0.00011622199999999916, 0.00011687499999999892, 0.00011702799999999819, 0.00011611100000000207, 0.00011682000000000012, 0.00011644499999999974, 0.0001163750000000019, 0.00011623599999999873, 0.00011690200000000206, 0.0001170690000000009, 0.00011616700000000035, 0.00011702800000000166, 0.00011654199999999726, 0.00011688900000000196, 0.00011633299999999971]</msg>
<status status="PASS" starttime="20201115 23:01:09.239" endtime="20201115 23:01:09.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.234" endtime="20201115 23:01:09.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.243" endtime="20201115 23:01:09.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:09.247" endtime="20201115 23:01:09.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.245" endtime="20201115 23:01:09.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.242" endtime="20201115 23:01:09.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.872" endtime="20201115 23:01:09.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.870" endtime="20201115 23:01:09.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.869" endtime="20201115 23:01:09.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.403" endtime="20201115 23:01:09.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:09.277" endtime="20201115 23:01:09.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.275" endtime="20201115 23:01:09.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.274" endtime="20201115 23:01:09.297"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:00:29.329" endtime="20201115 23:01:09.298" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:48.094" endtime="20201115 23:01:09.302"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:59:46.187" endtime="20201115 23:01:09.317"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
