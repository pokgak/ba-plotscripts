<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201117 14:46:49.634" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:46:50.193" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:46:50.201" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:46:51.174" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:46:50.192" endtime="20201117 14:46:51.175"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.177" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:46:51.176" endtime="20201117 14:46:51.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:50.191" endtime="20201117 14:46:51.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:51.181" endtime="20201117 14:46:51.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.179" endtime="20201117 14:46:51.364"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.377" endtime="20201117 14:46:51.398"></status>
</kw>
<msg timestamp="20201117 14:46:51.398" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:51.375" endtime="20201117 14:46:51.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.401" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:51.399" endtime="20201117 14:46:51.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.404" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:51.402" endtime="20201117 14:46:51.404"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:51.373" endtime="20201117 14:46:51.405"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:51.370" endtime="20201117 14:46:51.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.369" endtime="20201117 14:46:51.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:51.409" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:51.409" endtime="20201117 14:46:51.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.407" endtime="20201117 14:46:51.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.368" endtime="20201117 14:46:51.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.368" endtime="20201117 14:46:51.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.411" endtime="20201117 14:46:51.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.366" endtime="20201117 14:46:51.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.414" endtime="20201117 14:46:51.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.365" endtime="20201117 14:46:51.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:50.189" endtime="20201117 14:46:51.416"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:51.422" endtime="20201117 14:46:51.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.421" endtime="20201117 14:46:51.443"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.457" endtime="20201117 14:46:51.475"></status>
</kw>
<msg timestamp="20201117 14:46:51.475" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:51.454" endtime="20201117 14:46:51.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.478" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:51.476" endtime="20201117 14:46:51.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.481" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:51.479" endtime="20201117 14:46:51.481"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:51.452" endtime="20201117 14:46:51.482"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:51.449" endtime="20201117 14:46:51.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.448" endtime="20201117 14:46:51.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:51.486" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:51.485" endtime="20201117 14:46:51.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.483" endtime="20201117 14:46:51.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.447" endtime="20201117 14:46:51.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.446" endtime="20201117 14:46:51.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.488" endtime="20201117 14:46:51.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.445" endtime="20201117 14:46:51.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.443" endtime="20201117 14:46:51.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.419" endtime="20201117 14:46:51.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.498" endtime="20201117 14:46:51.512"></status>
</kw>
<msg timestamp="20201117 14:46:51.513" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:51.496" endtime="20201117 14:46:51.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.515" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:51.514" endtime="20201117 14:46:51.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:51.516" endtime="20201117 14:46:51.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.493" endtime="20201117 14:46:51.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.491" endtime="20201117 14:46:51.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.523" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201117 14:46:51.522" endtime="20201117 14:46:51.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.525" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201117 14:46:51.524" endtime="20201117 14:46:51.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.519" endtime="20201117 14:46:51.526"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:46:51.417" endtime="20201117 14:46:51.526" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:46:49.743" endtime="20201117 14:46:51.529"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.583" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:46:51.590" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:46:52.704" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:46:51.581" endtime="20201117 14:46:52.704"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.707" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:46:52.705" endtime="20201117 14:46:52.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.580" endtime="20201117 14:46:52.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:52.710" endtime="20201117 14:46:52.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.708" endtime="20201117 14:46:52.930"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.942" endtime="20201117 14:46:52.962"></status>
</kw>
<msg timestamp="20201117 14:46:52.963" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.941" endtime="20201117 14:46:52.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.965" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:52.964" endtime="20201117 14:46:52.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.968" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:52.966" endtime="20201117 14:46:52.968"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:52.938" endtime="20201117 14:46:52.969"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:52.936" endtime="20201117 14:46:52.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.935" endtime="20201117 14:46:52.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:52.974" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:52.973" endtime="20201117 14:46:52.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.971" endtime="20201117 14:46:52.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.934" endtime="20201117 14:46:52.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.934" endtime="20201117 14:46:52.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.975" endtime="20201117 14:46:52.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.932" endtime="20201117 14:46:52.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:52.978" endtime="20201117 14:46:52.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.931" endtime="20201117 14:46:52.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.578" endtime="20201117 14:46:52.980"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:52.986" endtime="20201117 14:46:53.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.985" endtime="20201117 14:46:53.007"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.020" endtime="20201117 14:46:53.038"></status>
</kw>
<msg timestamp="20201117 14:46:53.038" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.018" endtime="20201117 14:46:53.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.041" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.040" endtime="20201117 14:46:53.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.044" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:53.042" endtime="20201117 14:46:53.045"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:53.016" endtime="20201117 14:46:53.045"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:53.014" endtime="20201117 14:46:53.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.013" endtime="20201117 14:46:53.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:53.050" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:53.049" endtime="20201117 14:46:53.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.047" endtime="20201117 14:46:53.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.012" endtime="20201117 14:46:53.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.011" endtime="20201117 14:46:53.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.052" endtime="20201117 14:46:53.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.010" endtime="20201117 14:46:53.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.008" endtime="20201117 14:46:53.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.983" endtime="20201117 14:46:53.054"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.058" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.067" endtime="20201117 14:46:53.085"></status>
</kw>
<msg timestamp="20201117 14:46:53.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.065" endtime="20201117 14:46:53.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.086" endtime="20201117 14:46:53.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.089" endtime="20201117 14:46:53.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.062" endtime="20201117 14:46:53.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.060" endtime="20201117 14:46:53.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.098" endtime="20201117 14:46:53.389"></status>
</kw>
<msg timestamp="20201117 14:46:53.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070479292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070506333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:53.096" endtime="20201117 14:46:53.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070479292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070506333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:53.393" endtime="20201117 14:46:53.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.401" endtime="20201117 14:46:53.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.094" endtime="20201117 14:46:53.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.092" endtime="20201117 14:46:53.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:53.408" level="INFO">${RESULT} = [{'time': 0.070506333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7041000000005422e-05, 'source_diff': 2.7041000000005422e-05}, {'time': 0.070535597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:53.405" endtime="20201117 14:46:53.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:53.422" level="INFO">${ACCURACY} = {'diff': [2.7041000000005422e-05, 1.3499999999999623e-05, 1.4165999999996015e-05, 1.404099999999242e-05, 1.3610999999996709e-05, 1.3902999999995669e-05, 1.40969999999907e-05, 1.3958000000008353e-05, 1...</msg>
<status status="PASS" starttime="20201117 14:46:53.409" endtime="20201117 14:46:53.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.426" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:46:53.425" endtime="20201117 14:46:53.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.429" level="INFO">VALUE: [2.7041000000005422e-05, 1.3499999999999623e-05, 1.4165999999996015e-05, 1.404099999999242e-05, 1.3610999999996709e-05, 1.3902999999995669e-05, 1.40969999999907e-05, 1.3958000000008353e-05, 1.3722999999993268e-05, 1.3931000000008686e-05, 1.4374999999997029e-05, 1.4125000000003718e-05, 1.4181000000001998e-05, 1.3874999999996529e-05, 1.4208000000001664e-05, 1.4027999999999263e-05, 1.4417000000002678e-05, 1.4457999999994975e-05, 1.3915999999988826e-05, 1.4166999999995489e-05, 1.3985999999993615e-05, 1.4361000000004398e-05, 1.3736000000000304e-05, 1.4027999999999263e-05, 1.436099999999052e-05, 1.4347000000011767e-05, 1.376299999999997e-05, 1.412499999998984e-05, 1.3847000000011267e-05, 1.386099999999002e-05, 1.3930999999994809e-05, 1.4221999999994295e-05, 1.4209000000001137e-05, 1.3611999999996183e-05, 1.4194999999994629e-05, 1.3709000000000637e-05, 1.4069000000005438e-05, 1.3527999999998763e-05, 1.4277999999992574e-05, 1.4097000000004578e-05, 1.3763999999999443e-05, 1.4222000000008173e-05, 1.3708000000001164e-05, 1.4250000000007312e-05, 1.4014000000006632e-05, 1.4401999999996695e-05, 1.4417000000002678e-05, 1.429099999999961e-05, 1.4111000000011087e-05, 1.379099999999911e-05]</msg>
<status status="PASS" starttime="20201117 14:46:53.427" endtime="20201117 14:46:53.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.423" endtime="20201117 14:46:53.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.432" endtime="20201117 14:46:53.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:53.435" endtime="20201117 14:46:53.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.434" endtime="20201117 14:46:53.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.430" endtime="20201117 14:46:53.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.059" endtime="20201117 14:46:53.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.057" endtime="20201117 14:46:53.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.056" endtime="20201117 14:46:53.456"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.459" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.467" endtime="20201117 14:46:53.485"></status>
</kw>
<msg timestamp="20201117 14:46:53.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.465" endtime="20201117 14:46:53.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.487" endtime="20201117 14:46:53.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.489" endtime="20201117 14:46:53.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.463" endtime="20201117 14:46:53.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.461" endtime="20201117 14:46:53.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.498" endtime="20201117 14:46:53.784"></status>
</kw>
<msg timestamp="20201117 14:46:53.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:53.496" endtime="20201117 14:46:53.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:53.789" endtime="20201117 14:46:53.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.797" endtime="20201117 14:46:53.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.494" endtime="20201117 14:46:53.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.492" endtime="20201117 14:46:53.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:53.804" level="INFO">${RESULT} = [{'time': 0.022361319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3722000000000734e-05, 'source_diff': 1.3722000000000734e-05}, {'time': 0.022390306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:53.800" endtime="20201117 14:46:53.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:53.817" level="INFO">${ACCURACY} = {'diff': [1.3722000000000734e-05, 1.3541999999998333e-05, 1.4389000000000068e-05, 1.3638000000003314e-05, 1.3707999999997694e-05, 1.4013999999999693e-05, 1.3749999999999873e-05, 1.4083000000001539e-05...</msg>
<status status="PASS" starttime="20201117 14:46:53.805" endtime="20201117 14:46:53.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.822" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:46:53.821" endtime="20201117 14:46:53.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.824" level="INFO">VALUE: [1.3722000000000734e-05, 1.3541999999998333e-05, 1.4389000000000068e-05, 1.3638000000003314e-05, 1.3707999999997694e-05, 1.4013999999999693e-05, 1.3749999999999873e-05, 1.4083000000001539e-05, 1.4388000000000595e-05, 1.4415999999999735e-05, 1.3944000000001844e-05, 1.408299999999807e-05, 1.4472000000001484e-05, 1.3931000000001748e-05, 1.431899999999875e-05, 1.3694000000001594e-05, 1.405499999999893e-05, 1.380499999999868e-05, 1.4361000000000929e-05, 1.3915999999999235e-05, 1.4471999999998014e-05, 1.3778000000002483e-05, 1.4430000000002774e-05, 1.4361000000000929e-05, 1.3666000000002454e-05, 1.3874999999999998e-05, 1.3847000000000859e-05, 1.3638999999999318e-05, 1.4361000000000929e-05, 1.3903000000002608e-05, 1.4472000000001484e-05, 1.3611000000000179e-05, 1.4389000000000068e-05, 1.3541999999998333e-05, 1.3681000000001498e-05, 1.3597000000000609e-05, 1.4181000000001998e-05, 1.4027999999999263e-05, 1.3888999999999568e-05, 1.4000000000000123e-05, 1.4181000000001998e-05, 1.4195000000001567e-05, 1.4416999999999208e-05, 1.4084000000001012e-05, 1.4222000000001234e-05, 1.3792000000002053e-05, 1.4430999999998778e-05, 1.4041999999998833e-05, 1.4319999999998223e-05, 1.4083999999997543e-05]</msg>
<status status="PASS" starttime="20201117 14:46:53.823" endtime="20201117 14:46:53.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.818" endtime="20201117 14:46:53.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.827" endtime="20201117 14:46:53.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:53.830" endtime="20201117 14:46:53.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.829" endtime="20201117 14:46:53.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.826" endtime="20201117 14:46:53.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.459" endtime="20201117 14:46:53.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.457" endtime="20201117 14:46:53.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.457" endtime="20201117 14:46:53.851"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.854" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.862" endtime="20201117 14:46:53.880"></status>
</kw>
<msg timestamp="20201117 14:46:53.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.860" endtime="20201117 14:46:53.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:53.882" endtime="20201117 14:46:53.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.884" endtime="20201117 14:46:53.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.858" endtime="20201117 14:46:53.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.856" endtime="20201117 14:46:53.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:53.894" endtime="20201117 14:46:54.180"></status>
</kw>
<msg timestamp="20201117 14:46:54.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:53.892" endtime="20201117 14:46:54.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022365208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.184" endtime="20201117 14:46:54.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.193" endtime="20201117 14:46:54.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.890" endtime="20201117 14:46:54.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.887" endtime="20201117 14:46:54.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:54.199" level="INFO">${RESULT} = [{'time': 0.022365208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3791000000002579e-05, 'source_diff': 1.3791000000002579e-05}, {'time': 0.022394222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:54.196" endtime="20201117 14:46:54.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:54.214" level="INFO">${ACCURACY} = {'diff': [1.3791000000002579e-05, 1.3749999999999873e-05, 1.4028000000002733e-05, 1.3847000000000859e-05, 1.4429999999999304e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3778000000002483e-05...</msg>
<status status="PASS" starttime="20201117 14:46:54.200" endtime="20201117 14:46:54.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.218" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:46:54.217" endtime="20201117 14:46:54.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.220" level="INFO">VALUE: [1.3791000000002579e-05, 1.3749999999999873e-05, 1.4028000000002733e-05, 1.3847000000000859e-05, 1.4429999999999304e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3778000000002483e-05, 1.3778000000002483e-05, 1.3861000000000429e-05, 1.3986000000000554e-05, 1.4097000000001109e-05, 1.4278000000002983e-05, 1.3944000000001844e-05, 1.3929999999998804e-05, 1.3624999999999748e-05, 1.4000000000000123e-05, 1.4111000000000679e-05, 1.4277999999999513e-05, 1.4055999999998403e-05, 1.3930999999998278e-05, 1.4194999999998098e-05, 1.3791999999998583e-05, 1.3902999999999138e-05, 1.4389000000000068e-05, 1.3972000000000984e-05, 1.3624999999999748e-05, 1.4084000000001012e-05, 1.4375000000000498e-05, 1.4458000000001914e-05, 1.4429999999999304e-05, 1.4222000000001234e-05, 1.4486000000001054e-05, 1.3611000000000179e-05, 1.3666999999998458e-05, 1.3681000000001498e-05, 1.4471999999998014e-05, 1.3930999999998278e-05, 1.3695000000001067e-05, 1.3986000000000554e-05, 1.4487000000000527e-05, 1.4360999999997459e-05, 1.3986000000000554e-05, 1.4291999999999083e-05, 1.3931000000001748e-05, 1.4000000000000123e-05, 1.3679999999998554e-05, 1.4486999999997058e-05, 1.3987000000000027e-05, 1.4070000000001442e-05]</msg>
<status status="PASS" starttime="20201117 14:46:54.219" endtime="20201117 14:46:54.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.215" endtime="20201117 14:46:54.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.224" endtime="20201117 14:46:54.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:54.227" endtime="20201117 14:46:54.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.225" endtime="20201117 14:46:54.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.222" endtime="20201117 14:46:54.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.854" endtime="20201117 14:46:54.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.853" endtime="20201117 14:46:54.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.852" endtime="20201117 14:46:54.248"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.250" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.258" endtime="20201117 14:46:54.275"></status>
</kw>
<msg timestamp="20201117 14:46:54.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.257" endtime="20201117 14:46:54.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.277" endtime="20201117 14:46:54.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.280" endtime="20201117 14:46:54.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.254" endtime="20201117 14:46:54.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.252" endtime="20201117 14:46:54.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.289" endtime="20201117 14:46:54.574"></status>
</kw>
<msg timestamp="20201117 14:46:54.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021550792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021564403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.287" endtime="20201117 14:46:54.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021550792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021564403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.579" endtime="20201117 14:46:54.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.587" endtime="20201117 14:46:54.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.285" endtime="20201117 14:46:54.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.283" endtime="20201117 14:46:54.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:54.595" level="INFO">${RESULT} = [{'time': 0.021564403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3611000000000179e-05, 'source_diff': 1.3611000000000179e-05}, {'time': 0.021593389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:54.591" endtime="20201117 14:46:54.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:54.608" level="INFO">${ACCURACY} = {'diff': [1.3611000000000179e-05, 1.4431000000002248e-05, 1.3847000000000859e-05, 1.3889000000003038e-05, 1.3624999999999748e-05, 1.3541999999998333e-05, 1.409699999999764e-05, 1.384699999999739e-05, ...</msg>
<status status="PASS" starttime="20201117 14:46:54.596" endtime="20201117 14:46:54.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.613" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:46:54.612" endtime="20201117 14:46:54.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.615" level="INFO">VALUE: [1.3611000000000179e-05, 1.4431000000002248e-05, 1.3847000000000859e-05, 1.3889000000003038e-05, 1.3624999999999748e-05, 1.3541999999998333e-05, 1.409699999999764e-05, 1.384699999999739e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3666999999998458e-05, 1.4361000000000929e-05, 1.3930000000002274e-05, 1.4416999999999208e-05, 1.4208999999997668e-05, 1.4041999999998833e-05, 1.4194000000002094e-05, 1.3805000000002149e-05, 1.3916999999998708e-05, 1.4195000000001567e-05, 1.4013999999999693e-05, 1.4084000000001012e-05, 1.4222000000001234e-05, 1.4236000000000804e-05, 1.3695000000001067e-05, 1.3916999999998708e-05, 1.4374999999997029e-05, 1.3708000000001164e-05, 1.4165999999999485e-05, 1.4429999999999304e-05, 1.3652999999998888e-05, 1.3986000000000554e-05, 1.4222000000001234e-05, 1.3637999999999845e-05, 1.4125000000000248e-05, 1.3999999999996654e-05, 1.4472000000001484e-05, 1.4249999999996904e-05, 1.3791000000002579e-05, 1.4263999999999943e-05, 1.4000000000000123e-05, 1.4472000000001484e-05, 1.3596999999997139e-05, 1.4097000000001109e-05, 1.405499999999893e-05, 1.3542000000001803e-05, 1.4166999999998958e-05, 1.3681000000001498e-05, 1.3556000000001373e-05, 1.3611000000000179e-05]</msg>
<status status="PASS" starttime="20201117 14:46:54.614" endtime="20201117 14:46:54.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.609" endtime="20201117 14:46:54.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.618" endtime="20201117 14:46:54.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:54.622" endtime="20201117 14:46:54.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.620" endtime="20201117 14:46:54.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.617" endtime="20201117 14:46:54.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.251" endtime="20201117 14:46:54.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.249" endtime="20201117 14:46:54.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.248" endtime="20201117 14:46:54.643"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.646" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.655" endtime="20201117 14:46:54.672"></status>
</kw>
<msg timestamp="20201117 14:46:54.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.653" endtime="20201117 14:46:54.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.674" endtime="20201117 14:46:54.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.676" endtime="20201117 14:46:54.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.650" endtime="20201117 14:46:54.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.648" endtime="20201117 14:46:54.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.686" endtime="20201117 14:46:54.987"></status>
</kw>
<msg timestamp="20201117 14:46:54.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023301319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023315597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.685" endtime="20201117 14:46:54.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023301319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023315597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:54.991" endtime="20201117 14:46:54.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.999" endtime="20201117 14:46:55.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.682" endtime="20201117 14:46:55.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.680" endtime="20201117 14:46:55.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:55.006" level="INFO">${RESULT} = [{'time': 0.023315597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4277999999999513e-05, 'source_diff': 1.4277999999999513e-05}, {'time': 0.023343583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:55.002" endtime="20201117 14:46:55.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:55.019" level="INFO">${ACCURACY} = {'diff': [1.4277999999999513e-05, 1.4389000000000068e-05, 1.4069000000001969e-05, 1.409699999999764e-05, 1.4055000000002399e-05, 1.4179999999999054e-05, 1.429099999999961e-05, 1.4110999999997209e-05, ...</msg>
<status status="PASS" starttime="20201117 14:46:55.007" endtime="20201117 14:46:55.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.023" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:46:55.022" endtime="20201117 14:46:55.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.026" level="INFO">VALUE: [1.4277999999999513e-05, 1.4389000000000068e-05, 1.4069000000001969e-05, 1.409699999999764e-05, 1.4055000000002399e-05, 1.4179999999999054e-05, 1.429099999999961e-05, 1.4110999999997209e-05, 1.3611000000000179e-05, 1.3694000000001594e-05, 1.4415999999999735e-05, 1.3624999999999748e-05, 1.4097000000001109e-05, 1.3777999999999013e-05, 1.429099999999961e-05, 1.4361000000000929e-05, 1.3541999999998333e-05, 1.4361000000000929e-05, 1.3624999999999748e-05, 1.4402999999999638e-05, 1.4055999999998403e-05, 1.3986000000000554e-05, 1.3874999999999998e-05, 1.4361000000000929e-05, 1.3749999999999873e-05, 1.4473000000000957e-05, 1.3597000000000609e-05, 1.3777999999999013e-05, 1.4000000000000123e-05, 1.3638999999999318e-05, 1.3972000000000984e-05, 1.4361000000000929e-05, 1.3736000000000304e-05, 1.3721999999997264e-05, 1.4347000000001359e-05, 1.4486000000001054e-05, 1.3833999999997293e-05, 1.3528000000002233e-05, 1.4277999999999513e-05, 1.4500000000000624e-05, 1.4166999999998958e-05, 1.4056000000001873e-05, 1.4111000000000679e-05, 1.4430999999998778e-05, 1.4416999999999208e-05, 1.4375000000000498e-05, 1.4250000000000373e-05, 1.4402999999999638e-05, 1.3652999999998888e-05, 1.4500000000000624e-05]</msg>
<status status="PASS" starttime="20201117 14:46:55.024" endtime="20201117 14:46:55.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.020" endtime="20201117 14:46:55.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.029" endtime="20201117 14:46:55.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:55.032" endtime="20201117 14:46:55.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.031" endtime="20201117 14:46:55.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.027" endtime="20201117 14:46:55.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.646" endtime="20201117 14:46:55.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.644" endtime="20201117 14:46:55.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.643" endtime="20201117 14:46:55.054"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.056" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.064" endtime="20201117 14:46:55.081"></status>
</kw>
<msg timestamp="20201117 14:46:55.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.062" endtime="20201117 14:46:55.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.083" endtime="20201117 14:46:55.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.085" endtime="20201117 14:46:55.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.060" endtime="20201117 14:46:55.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.058" endtime="20201117 14:46:55.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.104" endtime="20201117 14:46:55.391"></status>
</kw>
<msg timestamp="20201117 14:46:55.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021540639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021554708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.093" endtime="20201117 14:46:55.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021540639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021554708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.396" endtime="20201117 14:46:55.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.404" endtime="20201117 14:46:55.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.090" endtime="20201117 14:46:55.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.088" endtime="20201117 14:46:55.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:55.411" level="INFO">${RESULT} = [{'time': 0.021554708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.40689999999985e-05, 'source_diff': 1.40689999999985e-05}, {'time': 0.021581722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:46:55.407" endtime="20201117 14:46:55.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:55.425" level="INFO">${ACCURACY} = {'diff': [1.40689999999985e-05, 1.3916000000002704e-05, 1.3597000000000609e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.4361000000000929e-05, 1.4125000000000248e-05, 1.3624999999999748e-05, ...</msg>
<status status="PASS" starttime="20201117 14:46:55.412" endtime="20201117 14:46:55.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.429" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:46:55.428" endtime="20201117 14:46:55.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.432" level="INFO">VALUE: [1.40689999999985e-05, 1.3916000000002704e-05, 1.3597000000000609e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.4361000000000929e-05, 1.4125000000000248e-05, 1.3624999999999748e-05, 1.4180000000002524e-05, 1.384699999999739e-05, 1.4165999999999485e-05, 1.3568999999998e-05, 1.3986000000000554e-05, 1.4013999999999693e-05, 1.3986000000000554e-05, 1.4486000000001054e-05, 1.4167000000002428e-05, 1.381899999999825e-05, 1.4207999999998194e-05, 1.3598000000000082e-05, 1.3597000000000609e-05, 1.4416999999999208e-05, 1.4125000000000248e-05, 1.4195000000001567e-05, 1.3931000000001748e-05, 1.4000000000000123e-05, 1.4221999999997764e-05, 1.383299999999782e-05, 1.3722000000000734e-05, 1.3597000000000609e-05, 1.3791999999998583e-05, 1.4070000000001442e-05, 1.3834000000000762e-05, 1.3986000000000554e-05, 1.3778000000002483e-05, 1.3930999999998278e-05, 1.4166999999998958e-05, 1.4194000000002094e-05, 1.3598000000000082e-05, 1.3584000000000512e-05, 1.4277999999999513e-05, 1.3693999999998124e-05, 1.3542000000001803e-05, 1.3805000000002149e-05, 1.3624999999999748e-05, 1.4360999999997459e-05, 1.3665999999998985e-05, 1.4415999999999735e-05, 1.4347000000001359e-05, 1.3777000000003009e-05]</msg>
<status status="PASS" starttime="20201117 14:46:55.430" endtime="20201117 14:46:55.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.426" endtime="20201117 14:46:55.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.436" endtime="20201117 14:46:55.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:55.439" endtime="20201117 14:46:55.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.437" endtime="20201117 14:46:55.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.434" endtime="20201117 14:46:55.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.056" endtime="20201117 14:46:55.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.055" endtime="20201117 14:46:55.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.054" endtime="20201117 14:46:55.460"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.463" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.471" endtime="20201117 14:46:55.490"></status>
</kw>
<msg timestamp="20201117 14:46:55.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.470" endtime="20201117 14:46:55.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.492" endtime="20201117 14:46:55.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.495" endtime="20201117 14:46:55.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.467" endtime="20201117 14:46:55.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.465" endtime="20201117 14:46:55.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.504" endtime="20201117 14:46:55.815"></status>
</kw>
<msg timestamp="20201117 14:46:55.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023194347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023208542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.502" endtime="20201117 14:46:55.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023194347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023208542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:55.819" endtime="20201117 14:46:55.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.828" endtime="20201117 14:46:55.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.500" endtime="20201117 14:46:55.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.498" endtime="20201117 14:46:55.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:55.835" level="INFO">${RESULT} = [{'time': 0.023208542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4194999999998098e-05, 'source_diff': 1.4194999999998098e-05}, {'time': 0.023239542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:55.831" endtime="20201117 14:46:55.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:55.850" level="INFO">${ACCURACY} = {'diff': [1.4194999999998098e-05, 1.4513999999996724e-05, 1.4028000000002733e-05, 1.3528000000002233e-05, 1.3889000000003038e-05, 1.3624999999999748e-05, 1.3848000000000332e-05, 1.3527999999998763e-05...</msg>
<status status="PASS" starttime="20201117 14:46:55.836" endtime="20201117 14:46:55.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.854" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:46:55.853" endtime="20201117 14:46:55.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.857" level="INFO">VALUE: [1.4194999999998098e-05, 1.4513999999996724e-05, 1.4028000000002733e-05, 1.3528000000002233e-05, 1.3889000000003038e-05, 1.3624999999999748e-05, 1.3848000000000332e-05, 1.3527999999998763e-05, 1.4027999999999263e-05, 1.3527999999998763e-05, 1.3542000000001803e-05, 1.3555999999997903e-05, 1.3930000000002274e-05, 1.430499999999918e-05, 1.3848000000000332e-05, 1.4527999999999763e-05, 1.4429999999999304e-05, 1.380499999999868e-05, 1.3791000000002579e-05, 1.3874999999999998e-05, 1.3915999999999235e-05, 1.4193999999998624e-05, 1.4415999999999735e-05, 1.4389000000000068e-05, 1.4486000000001054e-05, 1.4277999999999513e-05, 1.408299999999807e-05, 1.3930000000002274e-05, 1.3556000000001373e-05, 1.4237000000000277e-05, 1.3929999999998804e-05, 1.3679999999998554e-05, 1.380499999999868e-05, 1.3694000000001594e-05, 1.3806000000001623e-05, 1.3597000000000609e-05, 1.4278000000002983e-05, 1.4138999999999818e-05, 1.4166999999998958e-05, 1.4000000000000123e-05, 1.3874999999999998e-05, 1.3971999999997514e-05, 1.3820000000001192e-05, 1.3736000000000304e-05, 1.3556000000001373e-05, 1.3611000000000179e-05, 1.3722000000000734e-05, 1.3958000000001414e-05, 1.3722000000000734e-05, 1.3749999999999873e-05]</msg>
<status status="PASS" starttime="20201117 14:46:55.855" endtime="20201117 14:46:55.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.851" endtime="20201117 14:46:55.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.861" endtime="20201117 14:46:55.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:55.864" endtime="20201117 14:46:55.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.863" endtime="20201117 14:46:55.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.859" endtime="20201117 14:46:55.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.463" endtime="20201117 14:46:55.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.461" endtime="20201117 14:46:55.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.461" endtime="20201117 14:46:55.885"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.888" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.896" endtime="20201117 14:46:55.914"></status>
</kw>
<msg timestamp="20201117 14:46:55.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.895" endtime="20201117 14:46:55.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:55.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:55.916" endtime="20201117 14:46:55.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.918" endtime="20201117 14:46:55.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.892" endtime="20201117 14:46:55.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.890" endtime="20201117 14:46:55.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:55.928" endtime="20201117 14:46:56.213"></status>
</kw>
<msg timestamp="20201117 14:46:56.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02307375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:46:55.926" endtime="20201117 14:46:56.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02307375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:46:56.218" endtime="20201117 14:46:56.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.226" endtime="20201117 14:46:56.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.923" endtime="20201117 14:46:56.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.922" endtime="20201117 14:46:56.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:56.233" level="INFO">${RESULT} = [{'time': 0.023087486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3736000000000304e-05, 'source_diff': 1.3736000000000304e-05}, {'time': 0.023115472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:56.230" endtime="20201117 14:46:56.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:56.247" level="INFO">${ACCURACY} = {'diff': [1.3736000000000304e-05, 1.3847000000000859e-05, 1.3888999999999568e-05, 1.3777999999999013e-05, 1.430499999999918e-05, 1.4319000000002219e-05, 1.3611000000000179e-05, 1.4305999999998653e-05,...</msg>
<status status="PASS" starttime="20201117 14:46:56.235" endtime="20201117 14:46:56.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.252" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:46:56.251" endtime="20201117 14:46:56.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.255" level="INFO">VALUE: [1.3736000000000304e-05, 1.3847000000000859e-05, 1.3888999999999568e-05, 1.3777999999999013e-05, 1.430499999999918e-05, 1.4319000000002219e-05, 1.3611000000000179e-05, 1.4305999999998653e-05, 1.3985999999997084e-05, 1.4055999999998403e-05, 1.3902999999999138e-05, 1.383299999999782e-05, 1.455499999999943e-05, 1.3945000000001317e-05, 1.3986000000000554e-05, 1.4431000000002248e-05, 1.4236000000000804e-05, 1.4056000000001873e-05, 1.3806000000001623e-05, 1.3597000000000609e-05, 1.4027999999999263e-05, 1.4097000000001109e-05, 1.3611000000000179e-05, 1.4056000000001873e-05, 1.4277999999999513e-05, 1.4041999999998833e-05, 1.3806000000001623e-05, 1.3541999999998333e-05, 1.3528000000002233e-05, 1.3930999999998278e-05, 1.4207999999998194e-05, 1.4459000000001387e-05, 1.376299999999997e-05, 1.4097999999997113e-05, 1.4237000000000277e-05, 1.4334000000001262e-05, 1.4223000000000707e-05, 1.4223000000000707e-05, 1.3708000000001164e-05, 1.4181000000001998e-05, 1.3472000000000484e-05, 1.4527999999999763e-05, 1.4000000000000123e-05, 1.3930000000002274e-05, 1.3722000000000734e-05, 1.3986000000000554e-05, 1.4235999999997334e-05, 1.4165999999999485e-05, 1.354099999999886e-05, 1.405499999999893e-05]</msg>
<status status="PASS" starttime="20201117 14:46:56.253" endtime="20201117 14:46:56.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.248" endtime="20201117 14:46:56.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.258" endtime="20201117 14:46:56.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.261" endtime="20201117 14:46:56.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.260" endtime="20201117 14:46:56.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.256" endtime="20201117 14:46:56.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.888" endtime="20201117 14:46:56.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.887" endtime="20201117 14:46:56.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:55.886" endtime="20201117 14:46:56.283"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.285" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.294" endtime="20201117 14:46:56.311"></status>
</kw>
<msg timestamp="20201117 14:46:56.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.292" endtime="20201117 14:46:56.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.312" endtime="20201117 14:46:56.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.315" endtime="20201117 14:46:56.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.289" endtime="20201117 14:46:56.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.287" endtime="20201117 14:46:56.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.325" endtime="20201117 14:46:56.617"></status>
</kw>
<msg timestamp="20201117 14:46:56.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.323" endtime="20201117 14:46:56.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.621" endtime="20201117 14:46:56.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.630" endtime="20201117 14:46:56.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.320" endtime="20201117 14:46:56.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.318" endtime="20201117 14:46:56.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:56.637" level="INFO">${RESULT} = [{'time': 0.022362153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3791999999998583e-05, 'source_diff': 1.3791999999998583e-05}, {'time': 0.022389153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:56.633" endtime="20201117 14:46:56.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:56.651" level="INFO">${ACCURACY} = {'diff': [1.3791999999998583e-05, 1.4389000000000068e-05, 1.3763999999999443e-05, 1.3819999999997723e-05, 1.3944999999997848e-05, 1.3555999999997903e-05, 1.4041999999998833e-05, 1.4361000000000929e-05...</msg>
<status status="PASS" starttime="20201117 14:46:56.638" endtime="20201117 14:46:56.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.656" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:46:56.654" endtime="20201117 14:46:56.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.659" level="INFO">VALUE: [1.3791999999998583e-05, 1.4389000000000068e-05, 1.3763999999999443e-05, 1.3819999999997723e-05, 1.3944999999997848e-05, 1.3555999999997903e-05, 1.4041999999998833e-05, 1.4361000000000929e-05, 1.4138999999999818e-05, 1.4444999999998348e-05, 1.4223000000000707e-05, 1.3959000000000887e-05, 1.3792000000002053e-05, 1.4166999999998958e-05, 1.3848000000000332e-05, 1.3541999999998333e-05, 1.383299999999782e-05, 1.380499999999868e-05, 1.3736000000000304e-05, 1.4179999999999054e-05, 1.4027999999999263e-05, 1.4166000000002954e-05, 1.4250000000000373e-05, 1.4249999999996904e-05, 1.4291000000003079e-05, 1.4263999999999943e-05, 1.3722000000000734e-05, 1.3722000000000734e-05, 1.3541000000002329e-05, 1.4375000000000498e-05, 1.4179999999999054e-05, 1.3597000000000609e-05, 1.3805000000002149e-05, 1.4457999999998444e-05, 1.404099999999936e-05, 1.429099999999961e-05, 1.4472000000001484e-05, 1.4416999999999208e-05, 1.4444000000002344e-05, 1.4402999999999638e-05, 1.3971999999997514e-05, 1.3861000000000429e-05, 1.4361000000000929e-05, 1.4305999999998653e-05, 1.4250000000000373e-05, 1.3889000000003038e-05, 1.3541999999998333e-05, 1.4166999999998958e-05, 1.3708000000001164e-05, 1.3555999999997903e-05]</msg>
<status status="PASS" starttime="20201117 14:46:56.657" endtime="20201117 14:46:56.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.652" endtime="20201117 14:46:56.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.662" endtime="20201117 14:46:56.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.666" endtime="20201117 14:46:56.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.664" endtime="20201117 14:46:56.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.660" endtime="20201117 14:46:56.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.286" endtime="20201117 14:46:56.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.284" endtime="20201117 14:46:56.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.283" endtime="20201117 14:46:56.687"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.689" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.698" endtime="20201117 14:46:56.716"></status>
</kw>
<msg timestamp="20201117 14:46:56.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.696" endtime="20201117 14:46:56.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:56.718" endtime="20201117 14:46:56.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.720" endtime="20201117 14:46:56.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.693" endtime="20201117 14:46:56.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.691" endtime="20201117 14:46:56.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.730" endtime="20201117 14:46:57.017"></status>
</kw>
<msg timestamp="20201117 14:46:57.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022451278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:56.728" endtime="20201117 14:46:57.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022451278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.022" endtime="20201117 14:46:57.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.031" endtime="20201117 14:46:57.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.725" endtime="20201117 14:46:57.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.724" endtime="20201117 14:46:57.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:57.039" level="INFO">${RESULT} = [{'time': 0.022451278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3945000000001317e-05, 'source_diff': 1.3945000000001317e-05}, {'time': 0.022478278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:57.035" endtime="20201117 14:46:57.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:57.052" level="INFO">${ACCURACY} = {'diff': [1.3945000000001317e-05, 1.3763999999999443e-05, 1.4111000000000679e-05, 1.4444999999998348e-05, 1.3959000000000887e-05, 1.4333999999997793e-05, 1.4041999999998833e-05, 1.3624999999999748e-05...</msg>
<status status="PASS" starttime="20201117 14:46:57.040" endtime="20201117 14:46:57.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.057" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:46:57.056" endtime="20201117 14:46:57.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.059" level="INFO">VALUE: [1.3945000000001317e-05, 1.3763999999999443e-05, 1.4111000000000679e-05, 1.4444999999998348e-05, 1.3959000000000887e-05, 1.4333999999997793e-05, 1.4041999999998833e-05, 1.3624999999999748e-05, 1.3638999999999318e-05, 1.354099999999886e-05, 1.3833999999997293e-05, 1.4362000000000402e-05, 1.3597000000000609e-05, 1.4374999999997029e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.352699999999929e-05, 1.3861000000000429e-05, 1.4165999999999485e-05, 1.3874999999999998e-05, 1.3847000000000859e-05, 1.4249999999996904e-05, 1.4472000000001484e-05, 1.3583000000001039e-05, 1.4361000000000929e-05, 1.3638999999999318e-05, 1.4263999999999943e-05, 1.380499999999868e-05, 1.4056000000001873e-05, 1.354099999999886e-05, 1.4083000000001539e-05, 1.4111000000000679e-05, 1.3597000000000609e-05, 1.3985999999997084e-05, 1.4041999999998833e-05, 1.3708000000001164e-05, 1.3679999999998554e-05, 1.433299999999832e-05, 1.3499999999999623e-05, 1.3916999999998708e-05, 1.4472000000001484e-05, 1.4237000000000277e-05, 1.3805999999998153e-05, 1.3805999999998153e-05, 1.4097000000001109e-05, 1.4263999999999943e-05, 1.4514000000000193e-05, 1.4306000000002123e-05, 1.4000000000000123e-05, 1.3611000000000179e-05]</msg>
<status status="PASS" starttime="20201117 14:46:57.058" endtime="20201117 14:46:57.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.053" endtime="20201117 14:46:57.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.063" endtime="20201117 14:46:57.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.066" endtime="20201117 14:46:57.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.065" endtime="20201117 14:46:57.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.061" endtime="20201117 14:46:57.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.690" endtime="20201117 14:46:57.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.688" endtime="20201117 14:46:57.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.687" endtime="20201117 14:46:57.088"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.090" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.098" endtime="20201117 14:46:57.117"></status>
</kw>
<msg timestamp="20201117 14:46:57.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.097" endtime="20201117 14:46:57.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.119" endtime="20201117 14:46:57.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.122" endtime="20201117 14:46:57.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.094" endtime="20201117 14:46:57.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.092" endtime="20201117 14:46:57.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.133" endtime="20201117 14:46:57.420"></status>
</kw>
<msg timestamp="20201117 14:46:57.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023084806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023099486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.131" endtime="20201117 14:46:57.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023084806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023099486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.424" endtime="20201117 14:46:57.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.432" endtime="20201117 14:46:57.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.128" endtime="20201117 14:46:57.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.126" endtime="20201117 14:46:57.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:57.441" level="INFO">${RESULT} = [{'time': 0.023099486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4679999999999555e-05, 'source_diff': 1.4679999999999555e-05}, {'time': 0.023130514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:57.437" endtime="20201117 14:46:57.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:57.456" level="INFO">${ACCURACY} = {'diff': [1.4679999999999555e-05, 1.5083000000002539e-05, 1.5305999999999653e-05, 1.5028000000000263e-05, 1.5124999999997779e-05, 1.5264000000000943e-05, 1.5528000000000763e-05, 1.536099999999846e-05,...</msg>
<status status="PASS" starttime="20201117 14:46:57.442" endtime="20201117 14:46:57.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.461" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:46:57.460" endtime="20201117 14:46:57.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.463" level="INFO">VALUE: [1.4679999999999555e-05, 1.5083000000002539e-05, 1.5305999999999653e-05, 1.5028000000000263e-05, 1.5124999999997779e-05, 1.5264000000000943e-05, 1.5528000000000763e-05, 1.536099999999846e-05, 1.5235999999998334e-05, 1.5235999999998334e-05, 1.5485999999998584e-05, 1.4708000000002164e-05, 1.4972000000001984e-05, 1.4569999999998473e-05, 1.4541999999999333e-05, 1.5236000000001804e-05, 1.4528000000003233e-05, 1.4764000000000443e-05, 1.4598000000001082e-05, 1.4527999999999763e-05, 1.4971999999998514e-05, 1.4583999999998043e-05, 1.505499999999993e-05, 1.5472999999998488e-05, 1.53750000000015e-05, 1.5305999999999653e-05, 1.5334000000002262e-05, 1.536099999999846e-05, 1.479100000000011e-05, 1.536099999999846e-05, 1.527699999999757e-05, 1.5221999999998764e-05, 1.4583999999998043e-05, 1.4819999999998723e-05, 1.5486000000002054e-05, 1.531899999999975e-05, 1.476300000000097e-05, 1.4679999999999555e-05, 1.5000000000001124e-05, 1.5250000000001374e-05, 1.4736000000001304e-05, 1.5457999999999444e-05, 1.533299999999932e-05, 1.452700000000029e-05, 1.5249999999997904e-05, 1.5083000000002539e-05, 1.504100000000036e-05, 1.4986000000001554e-05, 1.533299999999932e-05, 1.4958000000002414e-05]</msg>
<status status="PASS" starttime="20201117 14:46:57.462" endtime="20201117 14:46:57.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.457" endtime="20201117 14:46:57.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.467" endtime="20201117 14:46:57.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.470" endtime="20201117 14:46:57.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.468" endtime="20201117 14:46:57.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.465" endtime="20201117 14:46:57.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.091" endtime="20201117 14:46:57.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.089" endtime="20201117 14:46:57.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.088" endtime="20201117 14:46:57.491"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.494" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.503" endtime="20201117 14:46:57.521"></status>
</kw>
<msg timestamp="20201117 14:46:57.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.501" endtime="20201117 14:46:57.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.523" endtime="20201117 14:46:57.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.526" endtime="20201117 14:46:57.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.498" endtime="20201117 14:46:57.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.496" endtime="20201117 14:46:57.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.535" endtime="20201117 14:46:57.820"></status>
</kw>
<msg timestamp="20201117 14:46:57.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023797681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023813931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.533" endtime="20201117 14:46:57.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023797681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023813931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.825" endtime="20201117 14:46:57.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.833" endtime="20201117 14:46:57.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.531" endtime="20201117 14:46:57.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.529" endtime="20201117 14:46:57.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:57.840" level="INFO">${RESULT} = [{'time': 0.023813931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999998904e-05, 'source_diff': 1.6249999999998904e-05}, {'time': 0.023844931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:57.837" endtime="20201117 14:46:57.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:57.854" level="INFO">${ACCURACY} = {'diff': [1.6249999999998904e-05, 1.5819999999999723e-05, 1.604099999999789e-05, 1.580500000000068e-05, 1.6000000000002124e-05, 1.561100000000218e-05, 1.577699999999807e-05, 1.5916000000001235e-05, 1....</msg>
<status status="PASS" starttime="20201117 14:46:57.841" endtime="20201117 14:46:57.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.858" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:46:57.857" endtime="20201117 14:46:57.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.861" level="INFO">VALUE: [1.6249999999998904e-05, 1.5819999999999723e-05, 1.604099999999789e-05, 1.580500000000068e-05, 1.6000000000002124e-05, 1.561100000000218e-05, 1.577699999999807e-05, 1.5916000000001235e-05, 1.561100000000218e-05, 1.5721999999999264e-05, 1.579100000000111e-05, 1.563899999999785e-05, 1.5666000000000985e-05, 1.5944000000000375e-05, 1.611100000000268e-05, 1.6485999999999584e-05, 1.555500000000043e-05, 1.5971999999999514e-05, 1.6416000000001735e-05, 1.629100000000161e-05, 1.6249999999998904e-05, 1.6027999999997794e-05, 1.611099999999921e-05, 1.6249999999998904e-05, 1.5555999999999903e-05, 1.5681000000000028e-05, 1.6458000000000444e-05, 1.6263999999998474e-05, 1.584699999999939e-05, 1.5944999999999848e-05, 1.586099999999896e-05, 1.6250000000002374e-05, 1.565299999999742e-05, 1.6291999999997614e-05, 1.5694999999999598e-05, 1.6069999999999973e-05, 1.6028000000001263e-05, 1.562499999999828e-05, 1.6320000000000223e-05, 1.616700000000096e-05, 1.591700000000071e-05, 1.6221999999999764e-05, 1.5806000000000153e-05, 1.5721999999999264e-05, 1.586099999999896e-05, 1.5931000000000278e-05, 1.641699999999774e-05, 1.6028000000001263e-05, 1.566700000000046e-05, 1.6237000000002277e-05]</msg>
<status status="PASS" starttime="20201117 14:46:57.860" endtime="20201117 14:46:57.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.855" endtime="20201117 14:46:57.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.864" endtime="20201117 14:46:57.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.868" endtime="20201117 14:46:57.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.866" endtime="20201117 14:46:57.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.863" endtime="20201117 14:46:57.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.494" endtime="20201117 14:46:57.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.492" endtime="20201117 14:46:57.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.492" endtime="20201117 14:46:57.890"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.892" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.900" endtime="20201117 14:46:57.918"></status>
</kw>
<msg timestamp="20201117 14:46:57.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.899" endtime="20201117 14:46:57.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.920" endtime="20201117 14:46:57.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.922" endtime="20201117 14:46:57.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.896" endtime="20201117 14:46:57.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.894" endtime="20201117 14:46:57.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.931" endtime="20201117 14:46:58.219"></status>
</kw>
<msg timestamp="20201117 14:46:58.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02230775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:46:57.930" endtime="20201117 14:46:58.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02230775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:46:58.223" endtime="20201117 14:46:58.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.232" endtime="20201117 14:46:58.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.927" endtime="20201117 14:46:58.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.925" endtime="20201117 14:46:58.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.239" level="INFO">${RESULT} = [{'time': 0.022324972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7221999999997295e-05, 'source_diff': 1.7221999999997295e-05}, {'time': 0.022355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:46:58.235" endtime="20201117 14:46:58.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:58.252" level="INFO">${ACCURACY} = {'diff': [1.7221999999997295e-05, 1.7013999999999224e-05, 1.6763999999998974e-05, 1.7166000000002485e-05, 1.6749999999999404e-05, 1.7041999999998364e-05, 1.736100000000046e-05, 1.734700000000089e-05, ...</msg>
<status status="PASS" starttime="20201117 14:46:58.239" endtime="20201117 14:46:58.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.257" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:46:58.256" endtime="20201117 14:46:58.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.259" level="INFO">VALUE: [1.7221999999997295e-05, 1.7013999999999224e-05, 1.6763999999998974e-05, 1.7166000000002485e-05, 1.6749999999999404e-05, 1.7041999999998364e-05, 1.736100000000046e-05, 1.734700000000089e-05, 1.7180000000002055e-05, 1.7236000000000334e-05, 1.7472000000001014e-05, 1.6944000000001375e-05, 1.658300000000057e-05, 1.743099999999831e-05, 1.711100000000021e-05, 1.6722000000000264e-05, 1.686099999999996e-05, 1.713899999999935e-05, 1.7055999999997934e-05, 1.7305999999998184e-05, 1.668100000000103e-05, 1.683300000000082e-05, 1.7500000000000154e-05, 1.6555999999997434e-05, 1.6945000000000848e-05, 1.6570000000000473e-05, 1.6556000000000903e-05, 1.713899999999935e-05, 1.7028000000002264e-05, 1.6972000000000514e-05, 1.711100000000021e-05, 1.7223000000000238e-05, 1.691700000000171e-05, 1.684699999999692e-05, 1.712499999999978e-05, 1.661099999999971e-05, 1.6999999999999654e-05, 1.7236999999999808e-05, 1.654100000000186e-05, 1.6792000000001583e-05, 1.7193999999998155e-05, 1.731900000000175e-05, 1.7207999999997725e-05, 1.7249999999999904e-05, 1.6972000000000514e-05, 1.6735999999999834e-05, 1.7236000000000334e-05, 1.6887999999999626e-05, 1.7263999999999474e-05, 1.7334000000000793e-05]</msg>
<status status="PASS" starttime="20201117 14:46:58.258" endtime="20201117 14:46:58.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.253" endtime="20201117 14:46:58.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.268" endtime="20201117 14:46:58.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:58.271" endtime="20201117 14:46:58.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.269" endtime="20201117 14:46:58.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.266" endtime="20201117 14:46:58.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.893" endtime="20201117 14:46:58.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.891" endtime="20201117 14:46:58.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.890" endtime="20201117 14:46:58.292"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.295" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.303" endtime="20201117 14:46:58.321"></status>
</kw>
<msg timestamp="20201117 14:46:58.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.302" endtime="20201117 14:46:58.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.322" endtime="20201117 14:46:58.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.325" endtime="20201117 14:46:58.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.299" endtime="20201117 14:46:58.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.297" endtime="20201117 14:46:58.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.334" endtime="20201117 14:46:58.621"></status>
</kw>
<msg timestamp="20201117 14:46:58.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.333" endtime="20201117 14:46:58.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.625" endtime="20201117 14:46:58.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.634" endtime="20201117 14:46:58.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.330" endtime="20201117 14:46:58.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.328" endtime="20201117 14:46:58.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.641" level="INFO">${RESULT} = [{'time': 0.022507861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.791699999999924e-05, 'source_diff': 1.791699999999924e-05}, {'time': 0.022541847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:58.637" endtime="20201117 14:46:58.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:58.655" level="INFO">${ACCURACY} = {'diff': [1.791699999999924e-05, 1.834700000000189e-05, 1.8222000000001765e-05, 1.8457999999998975e-05, 1.7708000000001695e-05, 1.790299999999967e-05, 1.811100000000121e-05, 1.791699999999924e-05, 1.8...</msg>
<status status="PASS" starttime="20201117 14:46:58.642" endtime="20201117 14:46:58.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.659" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:46:58.658" endtime="20201117 14:46:58.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.662" level="INFO">VALUE: [1.791699999999924e-05, 1.834700000000189e-05, 1.8222000000001765e-05, 1.8457999999998975e-05, 1.7708000000001695e-05, 1.790299999999967e-05, 1.811100000000121e-05, 1.791699999999924e-05, 1.812500000000078e-05, 1.7722000000001265e-05, 1.765300000000289e-05, 1.7736000000000834e-05, 1.762500000000028e-05, 1.809699999999817e-05, 1.783300000000182e-05, 1.7777999999999544e-05, 1.786100000000096e-05, 1.8070000000001973e-05, 1.8014000000000224e-05, 1.791700000000271e-05, 1.8291999999999614e-05, 1.8278000000000044e-05, 1.819499999999863e-05, 1.7750000000000404e-05, 1.7736000000000834e-05, 1.8236000000001334e-05, 1.7750000000000404e-05, 1.8278000000000044e-05, 1.854100000000039e-05, 1.816700000000296e-05, 1.8250000000000904e-05, 1.7737000000000308e-05, 1.7527999999999294e-05, 1.8362000000000933e-05, 1.8278000000000044e-05, 1.8429999999999835e-05, 1.784700000000139e-05, 1.834699999999842e-05, 1.7651999999999946e-05, 1.8193999999999155e-05, 1.830500000000318e-05, 1.762500000000028e-05, 1.784700000000139e-05, 1.8166000000000015e-05, 1.829100000000014e-05, 1.7929999999999335e-05, 1.755500000000243e-05, 1.7722000000001265e-05, 1.7902000000000196e-05, 1.8278000000000044e-05]</msg>
<status status="PASS" starttime="20201117 14:46:58.660" endtime="20201117 14:46:58.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.656" endtime="20201117 14:46:58.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.666" endtime="20201117 14:46:58.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:58.669" endtime="20201117 14:46:58.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.667" endtime="20201117 14:46:58.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.664" endtime="20201117 14:46:58.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.296" endtime="20201117 14:46:58.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.294" endtime="20201117 14:46:58.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.293" endtime="20201117 14:46:58.690"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.693" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.701" endtime="20201117 14:46:58.720"></status>
</kw>
<msg timestamp="20201117 14:46:58.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.700" endtime="20201117 14:46:58.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.721" endtime="20201117 14:46:58.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.724" endtime="20201117 14:46:58.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.697" endtime="20201117 14:46:58.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.695" endtime="20201117 14:46:58.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.733" endtime="20201117 14:46:59.020"></status>
</kw>
<msg timestamp="20201117 14:46:59.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023225625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023244139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.732" endtime="20201117 14:46:59.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023225625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023244139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.024" endtime="20201117 14:46:59.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.033" endtime="20201117 14:46:59.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.729" endtime="20201117 14:46:59.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.727" endtime="20201117 14:46:59.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:59.040" level="INFO">${RESULT} = [{'time': 0.023244139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8514000000000724e-05, 'source_diff': 1.8514000000000724e-05}, {'time': 0.023277167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:59.036" endtime="20201117 14:46:59.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.055" level="INFO">${ACCURACY} = {'diff': [1.8514000000000724e-05, 1.9250000000001904e-05, 1.9264000000001474e-05, 1.9264000000001474e-05, 1.9264000000001474e-05, 1.915299999999745e-05, 1.941700000000074e-05, 1.865300000000042e-05, 1...</msg>
<status status="PASS" starttime="20201117 14:46:59.041" endtime="20201117 14:46:59.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.060" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.059" endtime="20201117 14:46:59.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.063" level="INFO">VALUE: [1.8514000000000724e-05, 1.9250000000001904e-05, 1.9264000000001474e-05, 1.9264000000001474e-05, 1.9264000000001474e-05, 1.915299999999745e-05, 1.941700000000074e-05, 1.865300000000042e-05, 1.8862000000001433e-05, 1.8973000000001988e-05, 1.8973000000001988e-05, 1.941700000000074e-05, 1.9430000000000835e-05, 1.8597999999998144e-05, 1.941700000000074e-05, 1.906900000000003e-05, 1.8666000000000516e-05, 1.936099999999899e-05, 1.8958000000002945e-05, 1.933299999999985e-05, 1.912499999999831e-05, 1.90829999999996e-05, 1.9430000000000835e-05, 1.879099999999717e-05, 1.9429999999997366e-05, 1.930500000000071e-05, 1.880500000000021e-05, 1.9415999999997796e-05, 1.9278000000001044e-05, 1.855499999999996e-05, 1.936099999999899e-05, 1.9042000000000364e-05, 1.9222000000002765e-05, 1.8986000000002085e-05, 1.9306000000000184e-05, 1.8735999999998365e-05, 1.941700000000074e-05, 1.9235999999998865e-05, 1.937500000000203e-05, 1.8555999999999434e-05, 1.8541999999999864e-05, 1.916700000000049e-05, 1.9042000000000364e-05, 1.8833999999998824e-05, 1.8915999999997296e-05, 1.934699999999942e-05, 1.9250000000001904e-05, 1.859700000000214e-05, 1.8820000000002723e-05, 1.8736000000001835e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.061" endtime="20201117 14:46:59.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.056" endtime="20201117 14:46:59.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.066" endtime="20201117 14:46:59.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.069" endtime="20201117 14:46:59.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.068" endtime="20201117 14:46:59.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.064" endtime="20201117 14:46:59.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.693" endtime="20201117 14:46:59.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.691" endtime="20201117 14:46:59.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.691" endtime="20201117 14:46:59.091"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.093" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.102" endtime="20201117 14:46:59.119"></status>
</kw>
<msg timestamp="20201117 14:46:59.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.100" endtime="20201117 14:46:59.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.120" endtime="20201117 14:46:59.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.123" endtime="20201117 14:46:59.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.097" endtime="20201117 14:46:59.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.095" endtime="20201117 14:46:59.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.132" endtime="20201117 14:46:59.419"></status>
</kw>
<msg timestamp="20201117 14:46:59.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022451361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.131" endtime="20201117 14:46:59.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022451361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.423" endtime="20201117 14:46:59.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.432" endtime="20201117 14:46:59.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.128" endtime="20201117 14:46:59.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.126" endtime="20201117 14:46:59.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:59.439" level="INFO">${RESULT} = [{'time': 0.022470944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.95830000000001e-05, 'source_diff': 1.95830000000001e-05}, {'time': 0.022503931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:46:59.435" endtime="20201117 14:46:59.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.452" level="INFO">${ACCURACY} = {'diff': [1.95830000000001e-05, 2.019500000000063e-05, 1.9735999999999365e-05, 2.047300000000002e-05, 1.9735999999999365e-05, 2.0027999999998325e-05, 2.0111999999999214e-05, 1.9750000000002405e-05, 2....</msg>
<status status="PASS" starttime="20201117 14:46:59.440" endtime="20201117 14:46:59.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.457" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.456" endtime="20201117 14:46:59.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.460" level="INFO">VALUE: [1.95830000000001e-05, 2.019500000000063e-05, 1.9735999999999365e-05, 2.047300000000002e-05, 1.9735999999999365e-05, 2.0027999999998325e-05, 2.0111999999999214e-05, 1.9750000000002405e-05, 2.0208000000000725e-05, 1.9972000000000045e-05, 1.979099999999817e-05, 1.9680000000001086e-05, 2.030499999999824e-05, 1.981900000000078e-05, 1.9915999999998296e-05, 2.0166000000002016e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 2.0472000000000545e-05, 2.0429999999998366e-05, 2.0222000000000295e-05, 2.0013999999998755e-05, 1.9736000000002835e-05, 1.983300000000035e-05, 1.9735999999999365e-05, 1.9514000000001724e-05, 2.013900000000235e-05, 2.0306000000001184e-05, 1.9749999999998935e-05, 2.0042000000001364e-05, 1.9528000000001294e-05, 2.037499999999956e-05, 2.019499999999716e-05, 1.968100000000056e-05, 2.0292000000001614e-05, 1.962499999999881e-05, 1.9792000000001114e-05, 2.016699999999802e-05, 1.9985999999999615e-05, 2.009700000000017e-05, 2.037499999999956e-05, 2.043099999999784e-05, 2.0027999999998325e-05, 1.997299999999952e-05, 2.012499999999931e-05, 2.012499999999931e-05, 2.036099999999999e-05, 2.016699999999802e-05, 2.0486000000000115e-05, 2.006900000000103e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.458" endtime="20201117 14:46:59.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.453" endtime="20201117 14:46:59.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.463" endtime="20201117 14:46:59.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.466" endtime="20201117 14:46:59.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.465" endtime="20201117 14:46:59.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.461" endtime="20201117 14:46:59.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.094" endtime="20201117 14:46:59.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.092" endtime="20201117 14:46:59.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.091" endtime="20201117 14:46:59.488"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.490" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.499" endtime="20201117 14:46:59.517"></status>
</kw>
<msg timestamp="20201117 14:46:59.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.497" endtime="20201117 14:46:59.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.518" endtime="20201117 14:46:59.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.521" endtime="20201117 14:46:59.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.494" endtime="20201117 14:46:59.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.492" endtime="20201117 14:46:59.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.531" endtime="20201117 14:46:59.816"></status>
</kw>
<msg timestamp="20201117 14:46:59.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.528" endtime="20201117 14:46:59.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.820" endtime="20201117 14:46:59.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.828" endtime="20201117 14:46:59.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.526" endtime="20201117 14:46:59.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.524" endtime="20201117 14:46:59.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:59.835" level="INFO">${RESULT} = [{'time': 0.022466306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.09029999999992e-05, 'source_diff': 2.09029999999992e-05}, {'time': 0.022501361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:46:59.832" endtime="20201117 14:46:59.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.849" level="INFO">${ACCURACY} = {'diff': [2.09029999999992e-05, 2.0749999999999935e-05, 2.1000000000000185e-05, 2.0861999999999964e-05, 2.0986000000000615e-05, 2.080500000000221e-05, 2.104099999999942e-05, 2.104099999999942e-05, 2.1...</msg>
<status status="PASS" starttime="20201117 14:46:59.836" endtime="20201117 14:46:59.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.854" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.853" endtime="20201117 14:46:59.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.856" level="INFO">VALUE: [2.09029999999992e-05, 2.0749999999999935e-05, 2.1000000000000185e-05, 2.0861999999999964e-05, 2.0986000000000615e-05, 2.080500000000221e-05, 2.104099999999942e-05, 2.104099999999942e-05, 2.136100000000099e-05, 2.137499999999709e-05, 2.112499999999684e-05, 2.1472000000001545e-05, 2.1236000000000865e-05, 2.109700000000117e-05, 2.136099999999752e-05, 2.1179999999999116e-05, 2.108299999999813e-05, 2.104100000000289e-05, 2.0929999999998866e-05, 2.0527999999998825e-05, 2.112500000000031e-05, 2.1277999999999575e-05, 2.1236000000000865e-05, 2.143099999999884e-05, 2.112500000000031e-05, 2.0736000000000365e-05, 2.061100000000024e-05, 2.1236000000000865e-05, 2.118099999999859e-05, 2.084700000000092e-05, 2.143099999999884e-05, 2.1486000000001115e-05, 2.09029999999992e-05, 2.0513999999999255e-05, 2.0570000000001004e-05, 2.111100000000074e-05, 2.086100000000049e-05, 2.10969999999977e-05, 2.1485999999997646e-05, 2.1250000000000435e-05, 2.10830000000016e-05, 2.0513999999999255e-05, 2.066699999999852e-05, 2.1500000000000685e-05, 2.0777999999999075e-05, 2.0542000000001864e-05, 2.116699999999902e-05, 2.1042000000002364e-05, 2.0929999999998866e-05, 2.109700000000117e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.855" endtime="20201117 14:46:59.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.850" endtime="20201117 14:46:59.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.860" endtime="20201117 14:46:59.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.863" endtime="20201117 14:46:59.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.862" endtime="20201117 14:46:59.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.858" endtime="20201117 14:46:59.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.491" endtime="20201117 14:46:59.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.489" endtime="20201117 14:46:59.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.488" endtime="20201117 14:46:59.885"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.887" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.895" endtime="20201117 14:46:59.913"></status>
</kw>
<msg timestamp="20201117 14:46:59.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.894" endtime="20201117 14:46:59.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.915" endtime="20201117 14:46:59.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.918" endtime="20201117 14:46:59.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.891" endtime="20201117 14:46:59.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.889" endtime="20201117 14:46:59.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.927" endtime="20201117 14:47:00.214"></status>
</kw>
<msg timestamp="20201117 14:47:00.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.925" endtime="20201117 14:47:00.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.219" endtime="20201117 14:47:00.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.229" endtime="20201117 14:47:00.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.923" endtime="20201117 14:47:00.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.921" endtime="20201117 14:47:00.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:00.237" level="INFO">${RESULT} = [{'time': 0.022289139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.208299999999913e-05, 'source_diff': 2.208299999999913e-05}, {'time': 0.022325153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:00.233" endtime="20201117 14:47:00.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:00.251" level="INFO">${ACCURACY} = {'diff': [2.208299999999913e-05, 2.194499999999891e-05, 2.159700000000167e-05, 2.24030000000007e-05, 2.2041999999999895e-05, 2.218099999999959e-05, 2.184700000000192e-05, 2.1735999999997896e-05, 2.204...</msg>
<status status="PASS" starttime="20201117 14:47:00.238" endtime="20201117 14:47:00.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.255" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:47:00.254" endtime="20201117 14:47:00.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.258" level="INFO">VALUE: [2.208299999999913e-05, 2.194499999999891e-05, 2.159700000000167e-05, 2.24030000000007e-05, 2.2041999999999895e-05, 2.218099999999959e-05, 2.184700000000192e-05, 2.1735999999997896e-05, 2.2041999999999895e-05, 2.1999999999997716e-05, 2.2264000000001005e-05, 2.194499999999891e-05, 2.1805999999999215e-05, 2.17229999999978e-05, 2.183299999999888e-05, 2.241700000000027e-05, 2.2485999999998646e-05, 2.1929999999999866e-05, 2.2443999999999936e-05, 2.1764000000000505e-05, 2.1985999999998146e-05, 2.184700000000192e-05, 2.236099999999852e-05, 2.1929999999999866e-05, 2.1735999999997896e-05, 2.236099999999852e-05, 2.188900000000063e-05, 2.1901999999997257e-05, 2.2249999999997966e-05, 2.205499999999999e-05, 2.162500000000081e-05, 2.1916000000000296e-05, 2.1764000000000505e-05, 2.2457999999999506e-05, 2.1943999999999436e-05, 2.1791999999999645e-05, 2.1555999999998965e-05, 2.208299999999913e-05, 2.184699999999845e-05, 2.1736000000001365e-05, 2.1542000000002864e-05, 2.1736000000001365e-05, 2.212500000000131e-05, 2.1985999999998146e-05, 2.163900000000038e-05, 2.1722000000001795e-05, 2.159700000000167e-05, 2.2471999999999076e-05, 2.2263999999997536e-05, 2.166700000000299e-05]</msg>
<status status="PASS" starttime="20201117 14:47:00.257" endtime="20201117 14:47:00.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.252" endtime="20201117 14:47:00.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.262" endtime="20201117 14:47:00.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:00.266" endtime="20201117 14:47:00.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.264" endtime="20201117 14:47:00.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.260" endtime="20201117 14:47:00.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.888" endtime="20201117 14:47:00.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.886" endtime="20201117 14:47:00.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.885" endtime="20201117 14:47:00.288"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.290" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.299" endtime="20201117 14:47:00.318"></status>
</kw>
<msg timestamp="20201117 14:47:00.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.298" endtime="20201117 14:47:00.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.320" endtime="20201117 14:47:00.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.322" endtime="20201117 14:47:00.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.295" endtime="20201117 14:47:00.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.292" endtime="20201117 14:47:00.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.332" endtime="20201117 14:47:00.618"></status>
</kw>
<msg timestamp="20201117 14:47:00.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023771069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:00.330" endtime="20201117 14:47:00.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023771069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:00.622" endtime="20201117 14:47:00.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.631" endtime="20201117 14:47:00.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.328" endtime="20201117 14:47:00.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.326" endtime="20201117 14:47:00.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:00.638" level="INFO">${RESULT} = [{'time': 0.0237945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.343100000000084e-05, 'source_diff': 2.343100000000084e-05}, {'time': 0.0238335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2...</msg>
<status status="PASS" starttime="20201117 14:47:00.634" endtime="20201117 14:47:00.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:00.653" level="INFO">${ACCURACY} = {'diff': [2.343100000000084e-05, 2.2555999999999965e-05, 2.2971999999999576e-05, 2.287499999999859e-05, 2.268100000000009e-05, 2.295899999999948e-05, 2.284699999999945e-05, 2.2555999999999965e-05, 2.2...</msg>
<status status="PASS" starttime="20201117 14:47:00.639" endtime="20201117 14:47:00.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.658" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:47:00.657" endtime="20201117 14:47:00.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.660" level="INFO">VALUE: [2.343100000000084e-05, 2.2555999999999965e-05, 2.2971999999999576e-05, 2.287499999999859e-05, 2.268100000000009e-05, 2.295899999999948e-05, 2.284699999999945e-05, 2.2555999999999965e-05, 2.2777999999997606e-05, 2.268100000000009e-05, 2.294499999999991e-05, 2.269499999999966e-05, 2.3041999999997426e-05, 2.316699999999755e-05, 2.251300000000178e-05, 2.337499999999909e-05, 2.322300000000277e-05, 2.315299999999798e-05, 2.3263999999998536e-05, 2.2916000000001296e-05, 2.2792000000000645e-05, 2.2930000000000866e-05, 2.347299999999955e-05, 2.3041999999997426e-05, 2.3014000000001755e-05, 2.3416000000001796e-05, 2.2652000000001477e-05, 2.3042000000000895e-05, 2.334699999999995e-05, 2.2665999999997577e-05, 2.3415999999998327e-05, 2.258299999999963e-05, 2.312500000000231e-05, 2.280500000000074e-05, 2.2763999999998036e-05, 2.2735999999998896e-05, 2.25969999999992e-05, 2.2499999999998216e-05, 2.30969999999997e-05, 2.313899999999841e-05, 2.334699999999995e-05, 2.268100000000009e-05, 2.343100000000084e-05, 2.3444000000000936e-05, 2.2763999999998036e-05, 2.2749999999998466e-05, 2.315299999999798e-05, 2.3472000000000076e-05, 2.286100000000249e-05, 2.3306000000000715e-05]</msg>
<status status="PASS" starttime="20201117 14:47:00.659" endtime="20201117 14:47:00.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.654" endtime="20201117 14:47:00.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.663" endtime="20201117 14:47:00.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:00.667" endtime="20201117 14:47:00.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.665" endtime="20201117 14:47:00.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.662" endtime="20201117 14:47:00.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.291" endtime="20201117 14:47:00.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.289" endtime="20201117 14:47:00.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.288" endtime="20201117 14:47:00.688"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.691" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.699" endtime="20201117 14:47:00.717"></status>
</kw>
<msg timestamp="20201117 14:47:00.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.698" endtime="20201117 14:47:00.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.719" endtime="20201117 14:47:00.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.721" endtime="20201117 14:47:00.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.695" endtime="20201117 14:47:00.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.693" endtime="20201117 14:47:00.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.731" endtime="20201117 14:47:01.017"></status>
</kw>
<msg timestamp="20201117 14:47:01.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.729" endtime="20201117 14:47:01.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.021" endtime="20201117 14:47:01.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.030" endtime="20201117 14:47:01.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.726" endtime="20201117 14:47:01.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.725" endtime="20201117 14:47:01.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.037" level="INFO">${RESULT} = [{'time': 0.022268069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.429100000000267e-05, 'source_diff': 2.429100000000267e-05}, {'time': 0.022307083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:01.033" endtime="20201117 14:47:01.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.050" level="INFO">${ACCURACY} = {'diff': [2.429100000000267e-05, 2.388899999999916e-05, 2.4236000000000396e-05, 2.3999999999999716e-05, 2.384700000000045e-05, 2.3735999999999896e-05, 2.411100000000027e-05, 2.3986000000000146e-05, 2....</msg>
<status status="PASS" starttime="20201117 14:47:01.038" endtime="20201117 14:47:01.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.055" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.054" endtime="20201117 14:47:01.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.058" level="INFO">VALUE: [2.429100000000267e-05, 2.388899999999916e-05, 2.4236000000000396e-05, 2.3999999999999716e-05, 2.384700000000045e-05, 2.3735999999999896e-05, 2.411100000000027e-05, 2.3986000000000146e-05, 2.3986000000000146e-05, 2.3763999999999036e-05, 2.411100000000027e-05, 2.4179999999998647e-05, 2.366699999999805e-05, 2.362499999999934e-05, 2.4041999999998426e-05, 2.3806000000001215e-05, 2.411100000000027e-05, 2.3735999999999896e-05, 2.415299999999898e-05, 2.39169999999983e-05, 2.4472000000001076e-05, 2.39169999999983e-05, 2.3764000000002505e-05, 2.4236000000000396e-05, 2.368100000000109e-05, 2.4249999999999966e-05, 2.4500000000000216e-05, 2.393100000000134e-05, 2.3833999999996885e-05, 2.3555999999997496e-05, 2.418100000000159e-05, 2.4471999999997607e-05, 2.393100000000134e-05, 2.418100000000159e-05, 2.447300000000055e-05, 2.4500000000000216e-05, 2.355500000000149e-05, 2.3541999999997926e-05, 2.436100000000052e-05, 2.420900000000073e-05, 2.3665999999998577e-05, 2.3694000000001186e-05, 2.3986000000000146e-05, 2.4443999999998467e-05, 2.4415999999999327e-05, 2.3916000000002297e-05, 2.4222000000000826e-05, 2.365300000000195e-05, 2.4290999999999202e-05, 2.3735999999999896e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.056" endtime="20201117 14:47:01.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.051" endtime="20201117 14:47:01.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.061" endtime="20201117 14:47:01.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.065" endtime="20201117 14:47:01.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.063" endtime="20201117 14:47:01.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.059" endtime="20201117 14:47:01.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.691" endtime="20201117 14:47:01.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.690" endtime="20201117 14:47:01.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.689" endtime="20201117 14:47:01.086"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.088" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.097" endtime="20201117 14:47:01.115"></status>
</kw>
<msg timestamp="20201117 14:47:01.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.095" endtime="20201117 14:47:01.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.117" endtime="20201117 14:47:01.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.119" endtime="20201117 14:47:01.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.093" endtime="20201117 14:47:01.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.090" endtime="20201117 14:47:01.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.129" endtime="20201117 14:47:01.415"></status>
</kw>
<msg timestamp="20201117 14:47:01.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022295847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.127" endtime="20201117 14:47:01.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022295847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.419" endtime="20201117 14:47:01.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.428" endtime="20201117 14:47:01.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.124" endtime="20201117 14:47:01.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.123" endtime="20201117 14:47:01.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.435" level="INFO">${RESULT} = [{'time': 0.022320625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4777999999999606e-05, 'source_diff': 2.4777999999999606e-05}, {'time': 0.022358625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:01.431" endtime="20201117 14:47:01.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.449" level="INFO">${ACCURACY} = {'diff': [2.4777999999999606e-05, 2.512500000000084e-05, 2.5249999999997497e-05, 2.518099999999912e-05, 2.5305999999999246e-05, 2.468099999999862e-05, 2.4555999999998496e-05, 2.518099999999912e-05, 2....</msg>
<status status="PASS" starttime="20201117 14:47:01.436" endtime="20201117 14:47:01.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.453" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.452" endtime="20201117 14:47:01.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.456" level="INFO">VALUE: [2.4777999999999606e-05, 2.512500000000084e-05, 2.5249999999997497e-05, 2.518099999999912e-05, 2.5305999999999246e-05, 2.468099999999862e-05, 2.4555999999998496e-05, 2.518099999999912e-05, 2.5014000000000286e-05, 2.494499999999844e-05, 2.5362000000000995e-05, 2.5291999999999676e-05, 2.4556000000001965e-05, 2.4584000000001105e-05, 2.468099999999862e-05, 2.4750000000000466e-05, 2.5429999999999897e-05, 2.4541999999998926e-05, 2.49169999999993e-05, 2.4862000000000495e-05, 2.488900000000016e-05, 2.466699999999905e-05, 2.487500000000059e-05, 2.4750000000000466e-05, 2.4666000000003047e-05, 2.466700000000252e-05, 2.5110999999997802e-05, 2.4860999999997552e-05, 2.4750000000000466e-05, 2.5054999999999522e-05, 2.5027999999999856e-05, 2.540300000000023e-05, 2.5278000000000106e-05, 2.5541999999999926e-05, 2.4750000000000466e-05, 2.4736000000000896e-05, 2.4846999999997982e-05, 2.516699999999955e-05, 2.5193999999999217e-05, 2.4555999999998496e-05, 2.5041999999999426e-05, 2.4792000000002645e-05, 2.462500000000034e-05, 2.484700000000145e-05, 2.465300000000295e-05, 2.511100000000127e-05, 2.515299999999998e-05, 2.493100000000234e-05, 2.5514000000000786e-05, 2.5264000000000536e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.455" endtime="20201117 14:47:01.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.449" endtime="20201117 14:47:01.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.460" endtime="20201117 14:47:01.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.463" endtime="20201117 14:47:01.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.462" endtime="20201117 14:47:01.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.458" endtime="20201117 14:47:01.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.089" endtime="20201117 14:47:01.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.087" endtime="20201117 14:47:01.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.086" endtime="20201117 14:47:01.484"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.487" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.497" endtime="20201117 14:47:01.516"></status>
</kw>
<msg timestamp="20201117 14:47:01.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.495" endtime="20201117 14:47:01.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.517" endtime="20201117 14:47:01.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.520" endtime="20201117 14:47:01.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.491" endtime="20201117 14:47:01.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.489" endtime="20201117 14:47:01.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.532" endtime="20201117 14:47:01.819"></status>
</kw>
<msg timestamp="20201117 14:47:01.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024885097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024910764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.529" endtime="20201117 14:47:01.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024885097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024910764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.824" endtime="20201117 14:47:01.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.832" endtime="20201117 14:47:01.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.525" endtime="20201117 14:47:01.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.523" endtime="20201117 14:47:01.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.839" level="INFO">${RESULT} = [{'time': 0.024910764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.566700000000005e-05, 'source_diff': 2.566700000000005e-05}, {'time': 0.024952778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:01.835" endtime="20201117 14:47:01.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.853" level="INFO">${ACCURACY} = {'diff': [2.566700000000005e-05, 2.645899999999951e-05, 2.6346999999999482e-05, 2.5721999999998857e-05, 2.5778000000000606e-05, 2.6069999999999566e-05, 2.5805999999999746e-05, 2.59170000000003e-05, 2....</msg>
<status status="PASS" starttime="20201117 14:47:01.840" endtime="20201117 14:47:01.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.858" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.857" endtime="20201117 14:47:01.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.860" level="INFO">VALUE: [2.566700000000005e-05, 2.645899999999951e-05, 2.6346999999999482e-05, 2.5721999999998857e-05, 2.5778000000000606e-05, 2.6069999999999566e-05, 2.5805999999999746e-05, 2.59170000000003e-05, 2.5651999999997538e-05, 2.5680000000000147e-05, 2.59170000000003e-05, 2.6042000000000426e-05, 2.6319000000000342e-05, 2.6374999999998622e-05, 2.6443999999996998e-05, 2.5957999999999537e-05, 2.6361999999998526e-05, 2.6444000000000467e-05, 2.5764000000001036e-05, 2.5805000000000272e-05, 2.5708000000002756e-05, 2.6165999999997608e-05, 2.6290999999997733e-05, 2.6096999999999232e-05, 2.6221999999999357e-05, 2.584700000000245e-05, 2.588899999999769e-05, 2.6221999999999357e-05, 2.5721999999998857e-05, 2.6222000000002826e-05, 2.5985999999998677e-05, 2.5596999999998732e-05, 2.6319000000000342e-05, 2.6291999999997206e-05, 2.5848000000001925e-05, 2.591699999999683e-05, 2.6306000000000246e-05, 2.636100000000252e-05, 2.6306000000000246e-05, 2.6070000000003035e-05, 2.6485999999999177e-05, 2.6124999999998372e-05, 2.590300000000073e-05, 2.562500000000134e-05, 2.595899999999901e-05, 2.5735999999998427e-05, 2.565300000000048e-05, 2.618100000000012e-05, 2.6485999999999177e-05, 2.563900000000091e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.859" endtime="20201117 14:47:01.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.854" endtime="20201117 14:47:01.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.864" endtime="20201117 14:47:01.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.867" endtime="20201117 14:47:01.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.866" endtime="20201117 14:47:01.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.862" endtime="20201117 14:47:01.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.487" endtime="20201117 14:47:01.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.486" endtime="20201117 14:47:01.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.485" endtime="20201117 14:47:01.888"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.891" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.899" endtime="20201117 14:47:01.918"></status>
</kw>
<msg timestamp="20201117 14:47:01.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.898" endtime="20201117 14:47:01.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.919" endtime="20201117 14:47:01.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.922" endtime="20201117 14:47:01.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.895" endtime="20201117 14:47:01.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.893" endtime="20201117 14:47:01.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.931" endtime="20201117 14:47:02.218"></status>
</kw>
<msg timestamp="20201117 14:47:02.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023145472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023172069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.930" endtime="20201117 14:47:02.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023145472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023172069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.222" endtime="20201117 14:47:02.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.231" endtime="20201117 14:47:02.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.927" endtime="20201117 14:47:02.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.925" endtime="20201117 14:47:02.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.238" level="INFO">${RESULT} = [{'time': 0.023172069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6596999999999732e-05, 'source_diff': 2.6596999999999732e-05}, {'time': 0.023215083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:02.235" endtime="20201117 14:47:02.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.253" level="INFO">${ACCURACY} = {'diff': [2.6596999999999732e-05, 2.663900000000191e-05, 2.6985999999999677e-05, 2.718099999999765e-05, 2.740300000000223e-05, 2.7083000000000662e-05, 2.6943999999997498e-05, 2.7277999999998637e-05, 2...</msg>
<status status="PASS" starttime="20201117 14:47:02.239" endtime="20201117 14:47:02.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.258" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.257" endtime="20201117 14:47:02.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.260" level="INFO">VALUE: [2.6596999999999732e-05, 2.663900000000191e-05, 2.6985999999999677e-05, 2.718099999999765e-05, 2.740300000000223e-05, 2.7083000000000662e-05, 2.6943999999997498e-05, 2.7277999999998637e-05, 2.6929999999997928e-05, 2.6584000000003105e-05, 2.668100000000062e-05, 2.7124999999999372e-05, 2.7347000000000482e-05, 2.715299999999851e-05, 2.693100000000087e-05, 2.716700000000155e-05, 2.663900000000191e-05, 2.6527999999997887e-05, 2.688900000000216e-05, 2.7028000000001856e-05, 2.6749999999998997e-05, 2.7179999999998178e-05, 2.7097000000000232e-05, 2.6597999999999206e-05, 2.690300000000173e-05, 2.7097000000000232e-05, 2.6541999999997457e-05, 2.647299999999908e-05, 2.7499999999999747e-05, 2.744500000000094e-05, 2.6778000000001606e-05, 2.7347000000000482e-05, 2.6527999999997887e-05, 2.7000000000002716e-05, 2.6860999999999552e-05, 2.7235999999999927e-05, 2.7486000000000177e-05, 2.6735999999999427e-05, 2.7083000000000662e-05, 2.7097000000000232e-05, 2.6583000000000162e-05, 2.7374999999999622e-05, 2.7000000000002716e-05, 2.6874999999999122e-05, 2.6694000000000717e-05, 2.7000000000002716e-05, 2.668100000000062e-05, 2.6749999999998997e-05, 2.716700000000155e-05, 2.6972000000000107e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.259" endtime="20201117 14:47:02.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.254" endtime="20201117 14:47:02.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.264" endtime="20201117 14:47:02.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.267" endtime="20201117 14:47:02.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.266" endtime="20201117 14:47:02.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.262" endtime="20201117 14:47:02.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.891" endtime="20201117 14:47:02.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.890" endtime="20201117 14:47:02.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.889" endtime="20201117 14:47:02.288"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.291" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.299" endtime="20201117 14:47:02.317"></status>
</kw>
<msg timestamp="20201117 14:47:02.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.298" endtime="20201117 14:47:02.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.319" endtime="20201117 14:47:02.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.321" endtime="20201117 14:47:02.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.295" endtime="20201117 14:47:02.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.293" endtime="20201117 14:47:02.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.331" endtime="20201117 14:47:02.617"></status>
</kw>
<msg timestamp="20201117 14:47:02.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022386931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.329" endtime="20201117 14:47:02.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022386931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.621" endtime="20201117 14:47:02.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.630" endtime="20201117 14:47:02.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.326" endtime="20201117 14:47:02.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.325" endtime="20201117 14:47:02.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.637" level="INFO">${RESULT} = [{'time': 0.022386931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8499999999997278e-05, 'source_diff': 2.8499999999997278e-05}, {'time': 0.022427944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:02.633" endtime="20201117 14:47:02.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.651" level="INFO">${ACCURACY} = {'diff': [2.8499999999997278e-05, 2.8290999999999733e-05, 2.7749999999999997e-05, 2.8250000000000497e-05, 2.8026999999999913e-05, 2.8111000000000802e-05, 2.8304999999999303e-05, 2.8555999999999027e-05...</msg>
<status status="PASS" starttime="20201117 14:47:02.638" endtime="20201117 14:47:02.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.656" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.655" endtime="20201117 14:47:02.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.658" level="INFO">VALUE: [2.8499999999997278e-05, 2.8290999999999733e-05, 2.7749999999999997e-05, 2.8250000000000497e-05, 2.8026999999999913e-05, 2.8111000000000802e-05, 2.8304999999999303e-05, 2.8555999999999027e-05, 2.7916000000002827e-05, 2.8471999999998138e-05, 2.7804999999998803e-05, 2.7861000000000552e-05, 2.8389000000000192e-05, 2.84309999999989e-05, 2.8000000000000247e-05, 2.793100000000187e-05, 2.8111000000000802e-05, 2.818099999999865e-05, 2.7806000000001746e-05, 2.7846999999997513e-05, 2.768100000000162e-05, 2.8056000000001996e-05, 2.8096999999997763e-05, 2.8111000000000802e-05, 2.766699999999858e-05, 2.8347000000001482e-05, 2.818099999999865e-05, 2.8276999999996694e-05, 2.8305999999998777e-05, 2.819499999999822e-05, 2.79170000000023e-05, 2.7556000000001496e-05, 2.772300000000033e-05, 2.798700000000015e-05, 2.822300000000083e-05, 2.7861000000000552e-05, 2.7875000000000122e-05, 2.8111000000000802e-05, 2.7736000000000427e-05, 2.8360999999997583e-05, 2.8429999999999428e-05, 2.7958000000001537e-05, 2.7569000000001592e-05, 2.8290999999999733e-05, 2.8000000000000247e-05, 2.7736000000000427e-05, 2.8069000000002092e-05, 2.7875000000000122e-05, 2.7624999999999872e-05, 2.8291999999999207e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.657" endtime="20201117 14:47:02.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.652" endtime="20201117 14:47:02.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.661" endtime="20201117 14:47:02.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.665" endtime="20201117 14:47:02.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.663" endtime="20201117 14:47:02.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.660" endtime="20201117 14:47:02.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.291" endtime="20201117 14:47:02.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.290" endtime="20201117 14:47:02.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.289" endtime="20201117 14:47:02.686"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.688" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.697" endtime="20201117 14:47:02.715"></status>
</kw>
<msg timestamp="20201117 14:47:02.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.695" endtime="20201117 14:47:02.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.716" endtime="20201117 14:47:02.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.719" endtime="20201117 14:47:02.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.693" endtime="20201117 14:47:02.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.690" endtime="20201117 14:47:02.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.729" endtime="20201117 14:47:03.014"></status>
</kw>
<msg timestamp="20201117 14:47:03.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.727" endtime="20201117 14:47:03.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.019" endtime="20201117 14:47:03.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.027" endtime="20201117 14:47:03.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.724" endtime="20201117 14:47:03.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.723" endtime="20201117 14:47:03.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.034" level="INFO">${RESULT} = [{'time': 0.022236944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8583000000002162e-05, 'source_diff': 2.8583000000002162e-05}, {'time': 0.022279972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:03.031" endtime="20201117 14:47:03.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.048" level="INFO">${ACCURACY} = {'diff': [2.8583000000002162e-05, 2.9082999999999193e-05, 2.9055000000000053e-05, 2.8736000000001427e-05, 2.8818999999999373e-05, 2.9027999999996917e-05, 2.94309999999999e-05, 2.870899999999829e-05, 2...</msg>
<status status="PASS" starttime="20201117 14:47:03.035" endtime="20201117 14:47:03.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.053" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.052" endtime="20201117 14:47:03.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.055" level="INFO">VALUE: [2.8583000000002162e-05, 2.9082999999999193e-05, 2.9055000000000053e-05, 2.8736000000001427e-05, 2.8818999999999373e-05, 2.9027999999996917e-05, 2.94309999999999e-05, 2.870899999999829e-05, 2.9486000000002177e-05, 2.9499999999998278e-05, 2.918100000000312e-05, 2.8861000000001552e-05, 2.918099999999965e-05, 2.8971999999998638e-05, 2.8985999999998208e-05, 2.868099999999915e-05, 2.8597000000001732e-05, 2.8861000000001552e-05, 2.89309999999994e-05, 2.868099999999915e-05, 2.9110999999998333e-05, 2.9291999999996737e-05, 2.869499999999872e-05, 2.9084000000002136e-05, 2.9110999999998333e-05, 2.9028000000000387e-05, 2.9041000000000483e-05, 2.8569999999998597e-05, 2.8556000000002496e-05, 2.920899999999879e-05, 2.8929999999999928e-05, 2.94309999999999e-05, 2.8611000000001302e-05, 2.8943999999999498e-05, 2.9221999999998888e-05, 2.8846999999998513e-05, 2.9430000000000428e-05, 2.9208000000002787e-05, 2.9082999999999193e-05, 2.9111000000001802e-05, 2.944499999999947e-05, 2.9000000000001247e-05, 2.868099999999915e-05, 2.9485999999998708e-05, 2.9264000000001067e-05, 2.8541999999999457e-05, 2.9221999999998888e-05, 2.9264000000001067e-05, 2.8555999999999027e-05, 2.9388999999997723e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.054" endtime="20201117 14:47:03.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.049" endtime="20201117 14:47:03.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.059" endtime="20201117 14:47:03.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.062" endtime="20201117 14:47:03.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.061" endtime="20201117 14:47:03.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.057" endtime="20201117 14:47:03.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.689" endtime="20201117 14:47:03.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.687" endtime="20201117 14:47:03.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.686" endtime="20201117 14:47:03.083"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.086" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.095" endtime="20201117 14:47:03.113"></status>
</kw>
<msg timestamp="20201117 14:47:03.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.093" endtime="20201117 14:47:03.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.114" endtime="20201117 14:47:03.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.117" endtime="20201117 14:47:03.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.091" endtime="20201117 14:47:03.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.088" endtime="20201117 14:47:03.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.126" endtime="20201117 14:47:03.411"></status>
</kw>
<msg timestamp="20201117 14:47:03.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022868611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022898194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.124" endtime="20201117 14:47:03.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022868611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022898194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.416" endtime="20201117 14:47:03.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.424" endtime="20201117 14:47:03.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.122" endtime="20201117 14:47:03.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.120" endtime="20201117 14:47:03.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.431" level="INFO">${RESULT} = [{'time': 0.022898194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9582999999999693e-05, 'source_diff': 2.9582999999999693e-05}, {'time': 0.022944194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:03.428" endtime="20201117 14:47:03.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.445" level="INFO">${ACCURACY} = {'diff': [2.9582999999999693e-05, 3.0194000000000748e-05, 3.0402999999998293e-05, 2.9735999999998958e-05, 2.9916000000001358e-05, 2.9707999999999818e-05, 3.0041000000001483e-05, 2.9889000000001692e-05...</msg>
<status status="PASS" starttime="20201117 14:47:03.432" endtime="20201117 14:47:03.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.450" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.448" endtime="20201117 14:47:03.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.452" level="INFO">VALUE: [2.9582999999999693e-05, 3.0194000000000748e-05, 3.0402999999998293e-05, 2.9735999999998958e-05, 2.9916000000001358e-05, 2.9707999999999818e-05, 3.0041000000001483e-05, 2.9889000000001692e-05, 2.9638999999997973e-05, 2.9638999999997973e-05, 3.0472000000000138e-05, 3.0055000000001053e-05, 3.0416999999997862e-05, 3.0152000000002038e-05, 2.9749999999998528e-05, 3.0208000000000318e-05, 3.0056000000000527e-05, 3.0250000000002497e-05, 2.9610999999998833e-05, 2.9776999999998194e-05, 3.0513999999998848e-05, 2.9778000000001137e-05, 3.0388999999998723e-05, 2.9542000000000457e-05, 3.0181000000000652e-05, 3.0388999999998723e-05, 2.9778000000001137e-05, 2.9791999999997237e-05, 2.9707999999999818e-05, 3.0056000000000527e-05, 3.0430000000001428e-05, 3.0402999999998293e-05, 3.0374999999999153e-05, 2.9680000000000678e-05, 3.0000000000002247e-05, 3.0208000000000318e-05, 2.9707999999999818e-05, 2.965199999999807e-05, 2.9889000000001692e-05, 3.0485999999999708e-05, 2.9694000000000248e-05, 2.9860999999999083e-05, 2.9944000000000498e-05, 3.0180000000001178e-05, 3.0041000000001483e-05, 2.9778000000001137e-05, 3.0485999999999708e-05, 2.9762999999998624e-05, 2.9778000000001137e-05, 2.9917000000000832e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.451" endtime="20201117 14:47:03.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.446" endtime="20201117 14:47:03.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.456" endtime="20201117 14:47:03.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.466" endtime="20201117 14:47:03.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.457" endtime="20201117 14:47:03.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.454" endtime="20201117 14:47:03.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.086" endtime="20201117 14:47:03.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.085" endtime="20201117 14:47:03.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.084" endtime="20201117 14:47:03.487"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.490" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.498" endtime="20201117 14:47:03.517"></status>
</kw>
<msg timestamp="20201117 14:47:03.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.497" endtime="20201117 14:47:03.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.518" endtime="20201117 14:47:03.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.521" endtime="20201117 14:47:03.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.494" endtime="20201117 14:47:03.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.492" endtime="20201117 14:47:03.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.530" endtime="20201117 14:47:03.817"></status>
</kw>
<msg timestamp="20201117 14:47:03.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023341667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023372222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.529" endtime="20201117 14:47:03.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023341667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023372222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.821" endtime="20201117 14:47:03.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.830" endtime="20201117 14:47:03.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.526" endtime="20201117 14:47:03.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.524" endtime="20201117 14:47:03.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.837" level="INFO">${RESULT} = [{'time': 0.023372222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.055500000000155e-05, 'source_diff': 3.055500000000155e-05}, {'time': 0.023416264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:03.833" endtime="20201117 14:47:03.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.852" level="INFO">${ACCURACY} = {'diff': [3.055500000000155e-05, 3.129199999999874e-05, 3.091700000000183e-05, 3.12639999999996e-05, 3.142999999999896e-05, 3.143099999999843e-05, 3.134700000000101e-05, 3.090299999999879e-05, 3.12639...</msg>
<status status="PASS" starttime="20201117 14:47:03.838" endtime="20201117 14:47:03.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.856" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.855" endtime="20201117 14:47:03.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.859" level="INFO">VALUE: [3.055500000000155e-05, 3.129199999999874e-05, 3.091700000000183e-05, 3.12639999999996e-05, 3.142999999999896e-05, 3.143099999999843e-05, 3.134700000000101e-05, 3.090299999999879e-05, 3.12639999999996e-05, 3.118100000000165e-05, 3.095800000000107e-05, 3.054199999999799e-05, 3.150000000000028e-05, 3.0485999999999708e-05, 3.069500000000072e-05, 3.07639999999991e-05, 3.065299999999854e-05, 3.093099999999793e-05, 3.147300000000061e-05, 3.138800000000025e-05, 3.141699999999886e-05, 3.095899999999707e-05, 3.150000000000028e-05, 3.086100000000008e-05, 3.1040999999999014e-05, 3.097200000000064e-05, 3.134700000000101e-05, 3.143000000000243e-05, 3.059700000000026e-05, 3.081900000000137e-05, 3.073699999999943e-05, 3.073599999999996e-05, 3.102800000000239e-05, 3.074999999999953e-05, 3.054200000000146e-05, 3.148600000000071e-05, 3.129199999999874e-05, 3.143099999999843e-05, 3.120799999999785e-05, 3.108300000000119e-05, 3.07639999999991e-05, 3.0513999999998848e-05, 3.059700000000026e-05, 3.066700000000158e-05, 3.123600000000046e-05, 3.14310000000019e-05, 3.137500000000015e-05, 3.055600000000103e-05, 3.115299999999904e-05, 3.11249999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.858" endtime="20201117 14:47:03.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.853" endtime="20201117 14:47:03.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.863" endtime="20201117 14:47:03.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.866" endtime="20201117 14:47:03.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.865" endtime="20201117 14:47:03.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.861" endtime="20201117 14:47:03.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.490" endtime="20201117 14:47:03.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.488" endtime="20201117 14:47:03.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.488" endtime="20201117 14:47:03.887"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.890" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.898" endtime="20201117 14:47:03.916"></status>
</kw>
<msg timestamp="20201117 14:47:03.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.897" endtime="20201117 14:47:03.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.917" endtime="20201117 14:47:03.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.920" endtime="20201117 14:47:03.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.894" endtime="20201117 14:47:03.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.892" endtime="20201117 14:47:03.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.929" endtime="20201117 14:47:04.216"></status>
</kw>
<msg timestamp="20201117 14:47:04.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022282833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.927" endtime="20201117 14:47:04.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022282833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.220" endtime="20201117 14:47:04.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.228" endtime="20201117 14:47:04.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.925" endtime="20201117 14:47:04.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.923" endtime="20201117 14:47:04.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:04.236" level="INFO">${RESULT} = [{'time': 0.022314569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.173600000000096e-05, 'source_diff': 3.173600000000096e-05}, {'time': 0.022359556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:04.232" endtime="20201117 14:47:04.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:04.250" level="INFO">${ACCURACY} = {'diff': [3.173600000000096e-05, 3.209799999999777e-05, 3.166599999999964e-05, 3.191599999999989e-05, 3.1832999999998474e-05, 3.244399999999953e-05, 3.159700000000126e-05, 3.200000000000078e-05, 3.191...</msg>
<status status="PASS" starttime="20201117 14:47:04.237" endtime="20201117 14:47:04.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.255" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:47:04.254" endtime="20201117 14:47:04.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.258" level="INFO">VALUE: [3.173600000000096e-05, 3.209799999999777e-05, 3.166599999999964e-05, 3.191599999999989e-05, 3.1832999999998474e-05, 3.244399999999953e-05, 3.159700000000126e-05, 3.200000000000078e-05, 3.191599999999989e-05, 3.19579999999986e-05, 3.175000000000053e-05, 3.163899999999997e-05, 3.219400000000275e-05, 3.1554999999999084e-05, 3.156999999999813e-05, 3.2110999999997863e-05, 3.190299999999979e-05, 3.177799999999967e-05, 3.152799999999942e-05, 3.222199999999842e-05, 3.227800000000017e-05, 3.230599999999931e-05, 3.193099999999893e-05, 3.187499999999718e-05, 3.179199999999924e-05, 3.223600000000146e-05, 3.204199999999949e-05, 3.236100000000158e-05, 3.16250000000004e-05, 3.2374999999997683e-05, 3.236100000000158e-05, 3.198700000000068e-05, 3.166599999999964e-05, 3.167999999999921e-05, 3.22640000000006e-05, 3.223599999999799e-05, 3.224999999999756e-05, 3.158300000000169e-05, 3.1860999999997613e-05, 3.173600000000096e-05, 3.241600000000039e-05, 3.183300000000194e-05, 3.173600000000096e-05, 3.2291000000000264e-05, 3.187500000000065e-05, 3.218099999999918e-05, 3.240300000000029e-05, 3.231999999999888e-05, 3.19440000000025e-05, 3.21250000000009e-05]</msg>
<status status="PASS" starttime="20201117 14:47:04.256" endtime="20201117 14:47:04.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.251" endtime="20201117 14:47:04.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.261" endtime="20201117 14:47:04.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:04.265" endtime="20201117 14:47:04.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.263" endtime="20201117 14:47:04.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.260" endtime="20201117 14:47:04.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.890" endtime="20201117 14:47:04.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.889" endtime="20201117 14:47:04.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.888" endtime="20201117 14:47:04.286"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.288" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.297" endtime="20201117 14:47:04.315"></status>
</kw>
<msg timestamp="20201117 14:47:04.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.295" endtime="20201117 14:47:04.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.316" endtime="20201117 14:47:04.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.319" endtime="20201117 14:47:04.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.293" endtime="20201117 14:47:04.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.290" endtime="20201117 14:47:04.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.328" endtime="20201117 14:47:04.615"></status>
</kw>
<msg timestamp="20201117 14:47:04.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.327" endtime="20201117 14:47:04.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.619" endtime="20201117 14:47:04.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.628" endtime="20201117 14:47:04.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.324" endtime="20201117 14:47:04.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.322" endtime="20201117 14:47:04.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:04.635" level="INFO">${RESULT} = [{'time': 0.022429083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.299999999999831e-05, 'source_diff': 3.299999999999831e-05}, {'time': 0.022476097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:04.631" endtime="20201117 14:47:04.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:04.649" level="INFO">${ACCURACY} = {'diff': [3.299999999999831e-05, 3.3319000000000404e-05, 3.322199999999942e-05, 3.323599999999899e-05, 3.3346999999999544e-05, 3.31519999999981e-05, 3.272199999999892e-05, 3.272199999999892e-05, 3.269...</msg>
<status status="PASS" starttime="20201117 14:47:04.636" endtime="20201117 14:47:04.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.654" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:47:04.653" endtime="20201117 14:47:04.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.656" level="INFO">VALUE: [3.299999999999831e-05, 3.3319000000000404e-05, 3.322199999999942e-05, 3.323599999999899e-05, 3.3346999999999544e-05, 3.31519999999981e-05, 3.272199999999892e-05, 3.272199999999892e-05, 3.269399999999978e-05, 3.299999999999831e-05, 3.337500000000215e-05, 3.324999999999856e-05, 3.263900000000097e-05, 3.318100000000018e-05, 3.259799999999827e-05, 3.302799999999745e-05, 3.272200000000239e-05, 3.290300000000079e-05, 3.268100000000315e-05, 3.3124999999998433e-05, 3.304200000000049e-05, 3.295899999999907e-05, 3.297200000000264e-05, 3.293099999999993e-05, 3.297299999999864e-05, 3.334799999999902e-05, 3.341700000000086e-05, 3.293000000000046e-05, 3.341600000000139e-05, 3.32640000000016e-05, 3.275000000000153e-05, 3.3055000000000584e-05, 3.3110999999998864e-05, 3.316600000000114e-05, 3.3374999999998683e-05, 3.3305000000000834e-05, 3.2568999999999654e-05, 3.2860999999998614e-05, 3.300000000000178e-05, 3.256900000000312e-05, 3.323599999999899e-05, 3.273599999999849e-05, 3.3374999999998683e-05, 3.252800000000042e-05, 3.324999999999856e-05, 3.297199999999917e-05, 3.280599999999981e-05, 3.340299999999782e-05, 3.265300000000054e-05, 3.293099999999993e-05]</msg>
<status status="PASS" starttime="20201117 14:47:04.655" endtime="20201117 14:47:04.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.650" endtime="20201117 14:47:04.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.660" endtime="20201117 14:47:04.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:04.663" endtime="20201117 14:47:04.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.662" endtime="20201117 14:47:04.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.658" endtime="20201117 14:47:04.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.289" endtime="20201117 14:47:04.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.287" endtime="20201117 14:47:04.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.286" endtime="20201117 14:47:04.684"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.687" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.695" endtime="20201117 14:47:04.713"></status>
</kw>
<msg timestamp="20201117 14:47:04.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.694" endtime="20201117 14:47:04.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.714" endtime="20201117 14:47:04.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.717" endtime="20201117 14:47:04.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.691" endtime="20201117 14:47:04.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.689" endtime="20201117 14:47:04.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.726" endtime="20201117 14:47:05.013"></status>
</kw>
<msg timestamp="20201117 14:47:05.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022234569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.724" endtime="20201117 14:47:05.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022234569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.017" endtime="20201117 14:47:05.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.026" endtime="20201117 14:47:05.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.722" endtime="20201117 14:47:05.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.720" endtime="20201117 14:47:05.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.032" level="INFO">${RESULT} = [{'time': 0.022268111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.354200000000099e-05, 'source_diff': 3.354200000000099e-05}, {'time': 0.022315125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:05.029" endtime="20201117 14:47:05.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.046" level="INFO">${ACCURACY} = {'diff': [3.354200000000099e-05, 3.387500000000265e-05, 3.4361000000000114e-05, 3.390300000000179e-05, 3.4110999999999864e-05, 3.441699999999839e-05, 3.370800000000035e-05, 3.391700000000136e-05, 3.43...</msg>
<status status="PASS" starttime="20201117 14:47:05.033" endtime="20201117 14:47:05.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.051" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.050" endtime="20201117 14:47:05.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.054" level="INFO">VALUE: [3.354200000000099e-05, 3.387500000000265e-05, 3.4361000000000114e-05, 3.390300000000179e-05, 3.4110999999999864e-05, 3.441699999999839e-05, 3.370800000000035e-05, 3.391700000000136e-05, 3.4347000000000544e-05, 3.4347000000000544e-05, 3.427800000000217e-05, 3.429200000000174e-05, 3.393000000000146e-05, 3.391700000000136e-05, 3.443100000000143e-05, 3.440300000000229e-05, 3.408399999999673e-05, 3.3874999999999184e-05, 3.418000000000171e-05, 3.398599999999974e-05, 3.39580000000006e-05, 3.426399999999913e-05, 3.4361000000000114e-05, 3.3805000000001334e-05, 3.399999999999931e-05, 3.441599999999892e-05, 3.4097000000000294e-05, 3.373599999999949e-05, 3.422200000000042e-05, 3.4055000000001584e-05, 3.3833000000000474e-05, 3.4124999999999434e-05, 3.3610999999999364e-05, 3.354199999999752e-05, 3.419500000000075e-05, 3.416699999999814e-05, 3.380599999999734e-05, 3.372199999999992e-05, 3.3638999999998503e-05, 3.354200000000099e-05, 3.393099999999746e-05, 3.430600000000131e-05, 3.39450000000005e-05, 3.380600000000081e-05, 3.4374999999999684e-05, 3.391699999999789e-05, 3.3819000000000904e-05, 3.351399999999838e-05, 3.366699999999764e-05, 3.423599999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.052" endtime="20201117 14:47:05.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.047" endtime="20201117 14:47:05.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.057" endtime="20201117 14:47:05.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.060" endtime="20201117 14:47:05.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.059" endtime="20201117 14:47:05.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.055" endtime="20201117 14:47:05.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.687" endtime="20201117 14:47:05.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.686" endtime="20201117 14:47:05.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.685" endtime="20201117 14:47:05.082"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.084" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.093" endtime="20201117 14:47:05.109"></status>
</kw>
<msg timestamp="20201117 14:47:05.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.091" endtime="20201117 14:47:05.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.111" endtime="20201117 14:47:05.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.114" endtime="20201117 14:47:05.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.088" endtime="20201117 14:47:05.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.086" endtime="20201117 14:47:05.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.123" endtime="20201117 14:47:05.410"></status>
</kw>
<msg timestamp="20201117 14:47:05.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023234458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023269306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.121" endtime="20201117 14:47:05.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023234458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023269306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.415" endtime="20201117 14:47:05.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.423" endtime="20201117 14:47:05.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.119" endtime="20201117 14:47:05.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.117" endtime="20201117 14:47:05.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.430" level="INFO">${RESULT} = [{'time': 0.023269306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.484800000000052e-05, 'source_diff': 3.484800000000052e-05}, {'time': 0.023318319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:05.427" endtime="20201117 14:47:05.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.445" level="INFO">${ACCURACY} = {'diff': [3.484800000000052e-05, 3.5013000000000405e-05, 3.525000000000056e-05, 3.5375000000000684e-05, 3.466599999999917e-05, 3.473600000000049e-05, 3.500000000000031e-05, 3.517999999999924e-05, 3.50...</msg>
<status status="PASS" starttime="20201117 14:47:05.431" endtime="20201117 14:47:05.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.450" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.449" endtime="20201117 14:47:05.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.452" level="INFO">VALUE: [3.484800000000052e-05, 3.5013000000000405e-05, 3.525000000000056e-05, 3.5375000000000684e-05, 3.466599999999917e-05, 3.473600000000049e-05, 3.500000000000031e-05, 3.517999999999924e-05, 3.5068999999998685e-05, 3.4611000000000364e-05, 3.5318999999998935e-05, 3.479199999999877e-05, 3.491599999999942e-05, 3.492999999999899e-05, 3.4861000000000614e-05, 3.5125000000000434e-05, 3.544399999999906e-05, 3.473599999999702e-05, 3.4597000000000794e-05, 3.47779999999992e-05, 3.5346999999998074e-05, 3.495900000000107e-05, 3.545799999999863e-05, 3.5416999999999393e-05, 3.49450000000015e-05, 3.5166999999999143e-05, 3.493099999999846e-05, 3.479199999999877e-05, 3.504199999999902e-05, 3.5347000000001544e-05, 3.500000000000031e-05, 3.5125000000000434e-05, 3.4902999999999323e-05, 3.461199999999984e-05, 3.5304999999999365e-05, 3.520799999999838e-05, 3.5124999999996964e-05, 3.520800000000185e-05, 3.517999999999924e-05, 3.4875000000000184e-05, 3.47779999999992e-05, 3.5346999999998074e-05, 3.548600000000124e-05, 3.5097000000001294e-05, 3.545799999999863e-05, 3.545799999999863e-05, 3.533400000000145e-05, 3.47779999999992e-05, 3.5124999999996964e-05, 3.473600000000049e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.451" endtime="20201117 14:47:05.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.446" endtime="20201117 14:47:05.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.456" endtime="20201117 14:47:05.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.459" endtime="20201117 14:47:05.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.458" endtime="20201117 14:47:05.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.454" endtime="20201117 14:47:05.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.085" endtime="20201117 14:47:05.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.083" endtime="20201117 14:47:05.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.082" endtime="20201117 14:47:05.480"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.483" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.491" endtime="20201117 14:47:05.511"></status>
</kw>
<msg timestamp="20201117 14:47:05.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.490" endtime="20201117 14:47:05.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.513" endtime="20201117 14:47:05.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.516" endtime="20201117 14:47:05.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.487" endtime="20201117 14:47:05.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.485" endtime="20201117 14:47:05.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.525" endtime="20201117 14:47:05.812"></status>
</kw>
<msg timestamp="20201117 14:47:05.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022246792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.523" endtime="20201117 14:47:05.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022246792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.816" endtime="20201117 14:47:05.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.825" endtime="20201117 14:47:05.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.521" endtime="20201117 14:47:05.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.519" endtime="20201117 14:47:05.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.832" level="INFO">${RESULT} = [{'time': 0.022282556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.576399999999716e-05, 'source_diff': 3.576399999999716e-05}, {'time': 0.022333556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:05.828" endtime="20201117 14:47:05.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.845" level="INFO">${ACCURACY} = {'diff': [3.576399999999716e-05, 3.55840000000017e-05, 3.618000000000024e-05, 3.6096999999998824e-05, 3.5666999999999643e-05, 3.624999999999809e-05, 3.6291000000000795e-05, 3.6026999999997505e-05, 3.5...</msg>
<status status="PASS" starttime="20201117 14:47:05.833" endtime="20201117 14:47:05.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.850" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.849" endtime="20201117 14:47:05.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.853" level="INFO">VALUE: [3.576399999999716e-05, 3.55840000000017e-05, 3.618000000000024e-05, 3.6096999999998824e-05, 3.5666999999999643e-05, 3.624999999999809e-05, 3.6291000000000795e-05, 3.6026999999997505e-05, 3.57780000000002e-05, 3.591600000000042e-05, 3.6277000000001225e-05, 3.6082999999999255e-05, 3.570800000000235e-05, 3.6346999999999074e-05, 3.6305000000000365e-05, 3.5791000000000295e-05, 3.569400000000278e-05, 3.581999999999891e-05, 3.604200000000002e-05, 3.631999999999941e-05, 3.5903000000000324e-05, 3.604200000000002e-05, 3.579199999999977e-05, 3.573600000000149e-05, 3.6055000000000115e-05, 3.5804999999999865e-05, 3.629200000000027e-05, 3.6110999999998394e-05, 3.579199999999977e-05, 3.5625000000000934e-05, 3.602800000000045e-05, 3.572300000000139e-05, 3.629200000000027e-05, 3.647300000000214e-05, 3.5568999999999185e-05, 3.602800000000045e-05, 3.590200000000085e-05, 3.566600000000017e-05, 3.6375000000001684e-05, 3.616600000000067e-05, 3.6305000000000365e-05, 3.6318999999999935e-05, 3.5568999999999185e-05, 3.5861000000001614e-05, 3.622200000000242e-05, 3.62780000000007e-05, 3.6068999999999685e-05, 3.630599999999984e-05, 3.579200000000324e-05, 3.5611000000001364e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.851" endtime="20201117 14:47:05.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.846" endtime="20201117 14:47:05.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.856" endtime="20201117 14:47:05.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.859" endtime="20201117 14:47:05.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.858" endtime="20201117 14:47:05.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.854" endtime="20201117 14:47:05.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.483" endtime="20201117 14:47:05.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.482" endtime="20201117 14:47:05.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.481" endtime="20201117 14:47:05.881"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.883" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.892" endtime="20201117 14:47:05.910"></status>
</kw>
<msg timestamp="20201117 14:47:05.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.890" endtime="20201117 14:47:05.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.912" endtime="20201117 14:47:05.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.914" endtime="20201117 14:47:05.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.887" endtime="20201117 14:47:05.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.885" endtime="20201117 14:47:05.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.923" endtime="20201117 14:47:06.210"></status>
</kw>
<msg timestamp="20201117 14:47:06.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022913, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022950181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:05.922" endtime="20201117 14:47:06.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022913, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022950181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:06.215" endtime="20201117 14:47:06.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.223" endtime="20201117 14:47:06.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.919" endtime="20201117 14:47:06.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.917" endtime="20201117 14:47:06.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:06.230" level="INFO">${RESULT} = [{'time': 0.022950181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7181000000000713e-05, 'source_diff': 3.7181000000000713e-05}, {'time': 0.023000181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:06.226" endtime="20201117 14:47:06.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.244" level="INFO">${ACCURACY} = {'diff': [3.7181000000000713e-05, 3.681999999999991e-05, 3.708399999999973e-05, 3.676400000000163e-05, 3.734799999999955e-05, 3.6624999999998464e-05, 3.74720000000002e-05, 3.6638999999998034e-05, 3.70...</msg>
<status status="PASS" starttime="20201117 14:47:06.231" endtime="20201117 14:47:06.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.248" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.247" endtime="20201117 14:47:06.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.251" level="INFO">VALUE: [3.7181000000000713e-05, 3.681999999999991e-05, 3.708399999999973e-05, 3.676400000000163e-05, 3.734799999999955e-05, 3.6624999999998464e-05, 3.74720000000002e-05, 3.6638999999998034e-05, 3.7096999999999825e-05, 3.7319000000000935e-05, 3.7277000000002225e-05, 3.7305000000001365e-05, 3.729200000000127e-05, 3.693000000000099e-05, 3.672199999999945e-05, 3.654200000000052e-05, 3.7431000000000964e-05, 3.7347000000000075e-05, 3.7360999999999644e-05, 3.6681000000000213e-05, 3.705600000000059e-05, 3.6596999999999325e-05, 3.7181000000000713e-05, 3.6582999999999755e-05, 3.730600000000084e-05, 3.708399999999973e-05, 3.707000000000016e-05, 3.66520000000016e-05, 3.6917000000000894e-05, 3.700000000000231e-05, 3.748699999999924e-05, 3.694400000000056e-05, 3.691599999999795e-05, 3.7153000000001574e-05, 3.71659999999982e-05, 3.724999999999909e-05, 3.7347000000000075e-05, 3.7110999999999394e-05, 3.6582999999999755e-05, 3.7040999999998075e-05, 3.751400000000238e-05, 3.6875000000002184e-05, 3.7333000000000505e-05, 3.722199999999995e-05, 3.6667000000000644e-05, 3.74720000000002e-05, 3.702800000000145e-05, 3.6597000000002794e-05, 3.679200000000077e-05, 3.7110999999999394e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.249" endtime="20201117 14:47:06.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.245" endtime="20201117 14:47:06.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.254" endtime="20201117 14:47:06.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.258" endtime="20201117 14:47:06.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.256" endtime="20201117 14:47:06.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.252" endtime="20201117 14:47:06.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.884" endtime="20201117 14:47:06.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.882" endtime="20201117 14:47:06.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.881" endtime="20201117 14:47:06.280"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.282" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.291" endtime="20201117 14:47:06.309"></status>
</kw>
<msg timestamp="20201117 14:47:06.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.289" endtime="20201117 14:47:06.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.311" endtime="20201117 14:47:06.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.313" endtime="20201117 14:47:06.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.287" endtime="20201117 14:47:06.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.284" endtime="20201117 14:47:06.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.323" endtime="20201117 14:47:06.610"></status>
</kw>
<msg timestamp="20201117 14:47:06.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.321" endtime="20201117 14:47:06.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.615" endtime="20201117 14:47:06.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.623" endtime="20201117 14:47:06.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.318" endtime="20201117 14:47:06.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.317" endtime="20201117 14:47:06.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:06.630" level="INFO">${RESULT} = [{'time': 0.023072528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7610999999999895e-05, 'source_diff': 3.7610999999999895e-05}, {'time': 0.023123514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:06.627" endtime="20201117 14:47:06.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.644" level="INFO">${ACCURACY} = {'diff': [3.7610999999999895e-05, 3.8375000000000214e-05, 3.782000000000091e-05, 3.8361000000000645e-05, 3.820799999999791e-05, 3.7861000000000145e-05, 3.7916999999998424e-05, 3.752799999999848e-05, 3...</msg>
<status status="PASS" starttime="20201117 14:47:06.631" endtime="20201117 14:47:06.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.648" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.647" endtime="20201117 14:47:06.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.651" level="INFO">VALUE: [3.7610999999999895e-05, 3.8375000000000214e-05, 3.782000000000091e-05, 3.8361000000000645e-05, 3.820799999999791e-05, 3.7861000000000145e-05, 3.7916999999998424e-05, 3.752799999999848e-05, 3.817999999999877e-05, 3.805599999999812e-05, 3.8181000000001714e-05, 3.8111000000000395e-05, 3.7639000000002504e-05, 3.7597000000000325e-05, 3.7610999999999895e-05, 3.823600000000052e-05, 3.7819000000001435e-05, 3.766600000000217e-05, 3.8375000000000214e-05, 3.7833000000001005e-05, 3.773600000000002e-05, 3.791599999999895e-05, 3.793000000000199e-05, 3.7861000000000145e-05, 3.8111000000000395e-05, 3.7916999999998424e-05, 3.8082999999997785e-05, 3.8416999999998924e-05, 3.826400000000313e-05, 3.798600000000027e-05, 3.8111000000000395e-05, 3.7889000000002754e-05, 3.8445000000001534e-05, 3.774999999999959e-05, 3.754199999999805e-05, 3.8361000000000645e-05, 3.8416999999998924e-05, 3.826399999999966e-05, 3.8180999999998244e-05, 3.773600000000002e-05, 3.783399999999701e-05, 3.822200000000095e-05, 3.7902999999998854e-05, 3.7624999999999464e-05, 3.848600000000077e-05, 3.823600000000052e-05, 3.7540999999998576e-05, 3.7847000000000575e-05, 3.844400000000206e-05, 3.7555000000001615e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.649" endtime="20201117 14:47:06.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.645" endtime="20201117 14:47:06.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.655" endtime="20201117 14:47:06.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.659" endtime="20201117 14:47:06.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.657" endtime="20201117 14:47:06.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.653" endtime="20201117 14:47:06.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.283" endtime="20201117 14:47:06.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.281" endtime="20201117 14:47:06.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.280" endtime="20201117 14:47:06.680"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.683" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.691" endtime="20201117 14:47:06.710"></status>
</kw>
<msg timestamp="20201117 14:47:06.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.690" endtime="20201117 14:47:06.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.712" endtime="20201117 14:47:06.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.715" endtime="20201117 14:47:06.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.687" endtime="20201117 14:47:06.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.685" endtime="20201117 14:47:06.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.724" endtime="20201117 14:47:07.010"></status>
</kw>
<msg timestamp="20201117 14:47:07.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023225958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023265083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.722" endtime="20201117 14:47:07.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023225958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023265083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.015" endtime="20201117 14:47:07.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.023" endtime="20201117 14:47:07.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.720" endtime="20201117 14:47:07.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.718" endtime="20201117 14:47:07.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.030" level="INFO">${RESULT} = [{'time': 0.023265083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9124999999997495e-05, 'source_diff': 3.9124999999997495e-05}, {'time': 0.023320111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:07.027" endtime="20201117 14:47:07.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.045" level="INFO">${ACCURACY} = {'diff': [3.9124999999997495e-05, 3.943000000000002e-05, 3.8790999999999826e-05, 3.873600000000102e-05, 3.9360999999998175e-05, 3.8610999999997425e-05, 3.892999999999952e-05, 3.904199999999955e-05, 3....</msg>
<status status="PASS" starttime="20201117 14:47:07.031" endtime="20201117 14:47:07.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.050" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.049" endtime="20201117 14:47:07.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.053" level="INFO">VALUE: [3.9124999999997495e-05, 3.943000000000002e-05, 3.8790999999999826e-05, 3.873600000000102e-05, 3.9360999999998175e-05, 3.8610999999997425e-05, 3.892999999999952e-05, 3.904199999999955e-05, 3.8916999999999424e-05, 3.949999999999787e-05, 3.8916999999999424e-05, 3.877799999999973e-05, 3.875000000000059e-05, 3.8639000000000034e-05, 3.8694999999998314e-05, 3.94859999999983e-05, 3.9360999999998175e-05, 3.900000000000084e-05, 3.86659999999997e-05, 3.897199999999823e-05, 3.8639000000000034e-05, 3.8902999999999854e-05, 3.85980000000008e-05, 3.919399999999934e-05, 3.923599999999805e-05, 3.902799999999998e-05, 3.870800000000188e-05, 3.9291000000000326e-05, 3.9068999999999215e-05, 3.851399999999991e-05, 3.8541000000003045e-05, 3.927800000000023e-05, 3.8818999999998965e-05, 3.9375000000001215e-05, 3.875000000000059e-05, 3.925000000000109e-05, 3.870800000000188e-05, 3.9416999999999924e-05, 3.872200000000145e-05, 3.925000000000109e-05, 3.8639000000000034e-05, 3.876400000000016e-05, 3.857000000000166e-05, 3.9444999999999064e-05, 3.9361000000001645e-05, 3.9374999999997745e-05, 3.9431000000002964e-05, 3.904199999999955e-05, 3.9458999999998634e-05, 3.869399999999884e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.051" endtime="20201117 14:47:07.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.046" endtime="20201117 14:47:07.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.056" endtime="20201117 14:47:07.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.060" endtime="20201117 14:47:07.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.058" endtime="20201117 14:47:07.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.054" endtime="20201117 14:47:07.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.683" endtime="20201117 14:47:07.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.681" endtime="20201117 14:47:07.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.681" endtime="20201117 14:47:07.081"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.083" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.092" endtime="20201117 14:47:07.110"></status>
</kw>
<msg timestamp="20201117 14:47:07.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.090" endtime="20201117 14:47:07.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.111" endtime="20201117 14:47:07.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.114" endtime="20201117 14:47:07.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.088" endtime="20201117 14:47:07.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.085" endtime="20201117 14:47:07.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.123" endtime="20201117 14:47:07.409"></status>
</kw>
<msg timestamp="20201117 14:47:07.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02245775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:07.121" endtime="20201117 14:47:07.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02245775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:07.414" endtime="20201117 14:47:07.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.422" endtime="20201117 14:47:07.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.119" endtime="20201117 14:47:07.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.117" endtime="20201117 14:47:07.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.429" level="INFO">${RESULT} = [{'time': 0.02245775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.980599999999987e-05, 'source_diff': 3.980599999999987e-05}, {'time': 0.022511736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:07.426" endtime="20201117 14:47:07.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.443" level="INFO">${ACCURACY} = {'diff': [3.980599999999987e-05, 3.97920000000003e-05, 4.02920000000008e-05, 4.0445000000000064e-05, 3.963800000000156e-05, 3.999999999999837e-05, 4.022199999999948e-05, 4.0374999999998745e-05, 3.9680...</msg>
<status status="PASS" starttime="20201117 14:47:07.430" endtime="20201117 14:47:07.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.448" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.447" endtime="20201117 14:47:07.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.451" level="INFO">VALUE: [3.980599999999987e-05, 3.97920000000003e-05, 4.02920000000008e-05, 4.0445000000000064e-05, 3.963800000000156e-05, 3.999999999999837e-05, 4.022199999999948e-05, 4.0374999999998745e-05, 3.9680999999999744e-05, 3.9694999999999314e-05, 3.9875000000001715e-05, 3.9889000000001285e-05, 3.9818999999999966e-05, 3.9917000000000424e-05, 4.036200000000212e-05, 4.042999999999755e-05, 3.981999999999944e-05, 3.999999999999837e-05, 3.9568999999999716e-05, 3.9611000000001895e-05, 3.9527000000001006e-05, 4.048600000000277e-05, 3.9860999999998675e-05, 3.977800000000073e-05, 3.950000000000134e-05, 3.991599999999748e-05, 4.025000000000209e-05, 4.0153000000001104e-05, 3.980599999999987e-05, 4.0181000000000244e-05, 4.0375000000002215e-05, 3.9653000000000604e-05, 4.004200000000055e-05, 3.957000000000266e-05, 4.001400000000141e-05, 4.02920000000008e-05, 4.051400000000191e-05, 3.9875000000001715e-05, 3.9917000000000424e-05, 4.004200000000055e-05, 4.0486999999998774e-05, 4.025000000000209e-05, 4.0417000000000924e-05, 3.997199999999923e-05, 4.000000000000184e-05, 4.016599999999773e-05, 4.0290999999997856e-05, 4.0096999999999355e-05, 3.993000000000052e-05, 4.043000000000102e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.449" endtime="20201117 14:47:07.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.444" endtime="20201117 14:47:07.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.454" endtime="20201117 14:47:07.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.457" endtime="20201117 14:47:07.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.456" endtime="20201117 14:47:07.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.452" endtime="20201117 14:47:07.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.084" endtime="20201117 14:47:07.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.082" endtime="20201117 14:47:07.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.081" endtime="20201117 14:47:07.479"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.481" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.489" endtime="20201117 14:47:07.507"></status>
</kw>
<msg timestamp="20201117 14:47:07.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.488" endtime="20201117 14:47:07.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.509" endtime="20201117 14:47:07.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.511" endtime="20201117 14:47:07.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.485" endtime="20201117 14:47:07.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.483" endtime="20201117 14:47:07.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.521" endtime="20201117 14:47:07.807"></status>
</kw>
<msg timestamp="20201117 14:47:07.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.519" endtime="20201117 14:47:07.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.811" endtime="20201117 14:47:07.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.820" endtime="20201117 14:47:07.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.516" endtime="20201117 14:47:07.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.515" endtime="20201117 14:47:07.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.827" level="INFO">${RESULT} = [{'time': 0.022298736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1416999999998455e-05, 'source_diff': 4.1416999999998455e-05}, {'time': 0.022352736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:07.823" endtime="20201117 14:47:07.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.841" level="INFO">${ACCURACY} = {'diff': [4.1416999999998455e-05, 4.073600000000302e-05, 4.097200000000023e-05, 4.1431000000001494e-05, 4.069400000000084e-05, 4.0596999999999855e-05, 4.132000000000094e-05, 4.052799999999801e-05, 4.1...</msg>
<status status="PASS" starttime="20201117 14:47:07.828" endtime="20201117 14:47:07.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.845" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.844" endtime="20201117 14:47:07.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.848" level="INFO">VALUE: [4.1416999999998455e-05, 4.073600000000302e-05, 4.097200000000023e-05, 4.1431000000001494e-05, 4.069400000000084e-05, 4.0596999999999855e-05, 4.132000000000094e-05, 4.052799999999801e-05, 4.104200000000155e-05, 4.105599999999765e-05, 4.0680999999997275e-05, 4.072199999999998e-05, 4.127800000000223e-05, 4.105600000000112e-05, 4.0819000000000966e-05, 4.05980000000028e-05, 4.1222999999999954e-05, 4.077800000000173e-05, 4.086199999999915e-05, 4.1430999999998025e-05, 4.141599999999898e-05, 4.065199999999866e-05, 4.1124999999999495e-05, 4.141600000000245e-05, 4.126399999999919e-05, 4.06799999999978e-05, 4.09859999999998e-05, 4.079199999999783e-05, 4.09859999999998e-05, 4.054200000000105e-05, 4.1319000000001466e-05, 4.054199999999758e-05, 4.0889000000002285e-05, 4.1430999999998025e-05, 4.123600000000005e-05, 4.147200000000073e-05, 4.1124999999999495e-05, 4.0708999999999884e-05, 4.1097000000000355e-05, 4.105599999999765e-05, 4.0931000000000994e-05, 4.0888999999998815e-05, 4.0973000000003174e-05, 4.1304999999998426e-05, 4.09859999999998e-05, 4.143000000000202e-05, 4.097200000000023e-05, 4.0777000000002256e-05, 4.123600000000005e-05, 4.0860999999999675e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.847" endtime="20201117 14:47:07.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.842" endtime="20201117 14:47:07.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.851" endtime="20201117 14:47:07.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.855" endtime="20201117 14:47:07.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.853" endtime="20201117 14:47:07.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.850" endtime="20201117 14:47:07.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.482" endtime="20201117 14:47:07.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.480" endtime="20201117 14:47:07.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.479" endtime="20201117 14:47:07.876"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.879" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.887" endtime="20201117 14:47:07.905"></status>
</kw>
<msg timestamp="20201117 14:47:07.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.886" endtime="20201117 14:47:07.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.907" endtime="20201117 14:47:07.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.909" endtime="20201117 14:47:07.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.883" endtime="20201117 14:47:07.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.881" endtime="20201117 14:47:07.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.919" endtime="20201117 14:47:08.204"></status>
</kw>
<msg timestamp="20201117 14:47:08.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:07.917" endtime="20201117 14:47:08.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:08.209" endtime="20201117 14:47:08.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.217" endtime="20201117 14:47:08.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.914" endtime="20201117 14:47:08.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.913" endtime="20201117 14:47:08.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.224" level="INFO">${RESULT} = [{'time': 0.022466778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.177799999999926e-05, 'source_diff': 4.177799999999926e-05}, {'time': 0.022522778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:08.221" endtime="20201117 14:47:08.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.238" level="INFO">${ACCURACY} = {'diff': [4.177799999999926e-05, 4.1875000000000245e-05, 4.2375000000000745e-05, 4.2402999999999885e-05, 4.154200000000205e-05, 4.205599999999865e-05, 4.223600000000105e-05, 4.2473000000001204e-05, 4....</msg>
<status status="PASS" starttime="20201117 14:47:08.225" endtime="20201117 14:47:08.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.243" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.242" endtime="20201117 14:47:08.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.245" level="INFO">VALUE: [4.177799999999926e-05, 4.1875000000000245e-05, 4.2375000000000745e-05, 4.2402999999999885e-05, 4.154200000000205e-05, 4.205599999999865e-05, 4.223600000000105e-05, 4.2473000000001204e-05, 4.224999999999715e-05, 4.179199999999883e-05, 4.226400000000019e-05, 4.175000000000012e-05, 4.2277000000000287e-05, 4.2110999999997456e-05, 4.2375000000000745e-05, 4.175000000000012e-05, 4.1804999999998926e-05, 4.2111000000000925e-05, 4.223599999999758e-05, 4.1611000000000425e-05, 4.247200000000173e-05, 4.1611000000000425e-05, 4.2389000000000315e-05, 4.1681000000001744e-05, 4.2194999999998345e-05, 4.197199999999776e-05, 4.19860000000008e-05, 4.1638999999999565e-05, 4.181999999999797e-05, 4.1681000000001744e-05, 4.2194999999998345e-05, 4.23059999999989e-05, 4.2110999999997456e-05, 4.175000000000012e-05, 4.173600000000055e-05, 4.2487000000000774e-05, 4.180600000000187e-05, 4.16119999999999e-05, 4.195799999999819e-05, 4.2027000000000037e-05, 4.16799999999988e-05, 4.250000000000087e-05, 4.170799999999794e-05, 4.218000000000277e-05, 4.1667000000002175e-05, 4.1568999999998246e-05, 4.1638999999999565e-05, 4.1805000000002396e-05, 4.173600000000055e-05, 4.17920000000023e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.244" endtime="20201117 14:47:08.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.239" endtime="20201117 14:47:08.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.248" endtime="20201117 14:47:08.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:08.252" endtime="20201117 14:47:08.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.250" endtime="20201117 14:47:08.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.247" endtime="20201117 14:47:08.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.879" endtime="20201117 14:47:08.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.877" endtime="20201117 14:47:08.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.876" endtime="20201117 14:47:08.273"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.276" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.284" endtime="20201117 14:47:08.304"></status>
</kw>
<msg timestamp="20201117 14:47:08.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.282" endtime="20201117 14:47:08.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.306" endtime="20201117 14:47:08.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.309" endtime="20201117 14:47:08.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.280" endtime="20201117 14:47:08.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.278" endtime="20201117 14:47:08.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.318" endtime="20201117 14:47:08.604"></status>
</kw>
<msg timestamp="20201117 14:47:08.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023470889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023513694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.317" endtime="20201117 14:47:08.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023470889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023513694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.608" endtime="20201117 14:47:08.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.617" endtime="20201117 14:47:08.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.314" endtime="20201117 14:47:08.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.312" endtime="20201117 14:47:08.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.624" level="INFO">${RESULT} = [{'time': 0.023513694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2804999999999926e-05, 'source_diff': 4.2804999999999926e-05}, {'time': 0.023570694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:08.621" endtime="20201117 14:47:08.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.639" level="INFO">${ACCURACY} = {'diff': [4.2804999999999926e-05, 4.263800000000109e-05, 4.3110999999998456e-05, 4.294399999999962e-05, 4.327800000000076e-05, 4.322199999999901e-05, 4.2819000000002966e-05, 4.3153000000000635e-05, 4....</msg>
<status status="PASS" starttime="20201117 14:47:08.625" endtime="20201117 14:47:08.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.644" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.643" endtime="20201117 14:47:08.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.646" level="INFO">VALUE: [4.2804999999999926e-05, 4.263800000000109e-05, 4.3110999999998456e-05, 4.294399999999962e-05, 4.327800000000076e-05, 4.322199999999901e-05, 4.2819000000002966e-05, 4.3153000000000635e-05, 4.34999999999984e-05, 4.347199999999926e-05, 4.284799999999811e-05, 4.304200000000008e-05, 4.2889000000000815e-05, 4.3125000000001495e-05, 4.2903000000000385e-05, 4.2625000000000995e-05, 4.2624999999997526e-05, 4.34860000000023e-05, 4.2860999999998206e-05, 4.34860000000023e-05, 4.3124999999998026e-05, 4.3237000000001524e-05, 4.3068999999999746e-05, 4.322199999999901e-05, 4.290200000000091e-05, 4.259800000000133e-05, 4.3055000000000176e-05, 4.2889000000000815e-05, 4.2582999999998816e-05, 4.343000000000055e-05, 4.3110999999998456e-05, 4.341600000000098e-05, 4.2610999999997956e-05, 4.2638999999997096e-05, 4.252800000000001e-05, 4.255599999999915e-05, 4.2695000000002314e-05, 4.3167000000000205e-05, 4.281999999999897e-05, 4.3082999999999316e-05, 4.3361000000002176e-05, 4.256999999999872e-05, 4.305600000000312e-05, 4.3361000000002176e-05, 4.2958999999998665e-05, 4.3417000000000455e-05, 4.2737000000001024e-05, 4.2625000000000995e-05, 4.26120000000009e-05, 4.2722999999997985e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.645" endtime="20201117 14:47:08.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.640" endtime="20201117 14:47:08.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.650" endtime="20201117 14:47:08.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:08.654" endtime="20201117 14:47:08.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.652" endtime="20201117 14:47:08.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.648" endtime="20201117 14:47:08.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.276" endtime="20201117 14:47:08.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.274" endtime="20201117 14:47:08.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.274" endtime="20201117 14:47:08.675"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.677" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.690" endtime="20201117 14:47:08.708"></status>
</kw>
<msg timestamp="20201117 14:47:08.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.688" endtime="20201117 14:47:08.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.710" endtime="20201117 14:47:08.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.712" endtime="20201117 14:47:08.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.681" endtime="20201117 14:47:08.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.679" endtime="20201117 14:47:08.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.722" endtime="20201117 14:47:09.008"></status>
</kw>
<msg timestamp="20201117 14:47:09.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026482736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026527167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.720" endtime="20201117 14:47:09.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026482736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026527167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.012" endtime="20201117 14:47:09.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.021" endtime="20201117 14:47:09.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.717" endtime="20201117 14:47:09.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.716" endtime="20201117 14:47:09.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.028" level="INFO">${RESULT} = [{'time': 0.026527167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4431000000001025e-05, 'source_diff': 4.4431000000001025e-05}, {'time': 0.026586167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:09.024" endtime="20201117 14:47:09.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.041" level="INFO">${ACCURACY} = {'diff': [4.4431000000001025e-05, 4.402800000000151e-05, 4.375000000000212e-05, 4.38060000000004e-05, 4.3708999999999415e-05, 4.3819000000000496e-05, 4.4222999999999485e-05, 4.408399999999979e-05, 4.4...</msg>
<status status="PASS" starttime="20201117 14:47:09.029" endtime="20201117 14:47:09.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.046" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.045" endtime="20201117 14:47:09.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.049" level="INFO">VALUE: [4.4431000000001025e-05, 4.402800000000151e-05, 4.375000000000212e-05, 4.38060000000004e-05, 4.3708999999999415e-05, 4.3819000000000496e-05, 4.4222999999999485e-05, 4.408399999999979e-05, 4.416599999999826e-05, 4.444400000000112e-05, 4.366599999999776e-05, 4.4360999999999706e-05, 4.393000000000105e-05, 4.427799999999829e-05, 4.3916999999997486e-05, 4.4347000000000136e-05, 4.374999999999865e-05, 4.4110999999999456e-05, 4.384800000000258e-05, 4.4096999999999886e-05, 4.3902999999997916e-05, 4.379200000000083e-05, 4.4347000000000136e-05, 4.407000000000022e-05, 4.373600000000255e-05, 4.404200000000108e-05, 4.402700000000204e-05, 4.427800000000176e-05, 4.426400000000219e-05, 4.3667000000000705e-05, 4.4374999999999276e-05, 4.3569000000000246e-05, 4.402799999999804e-05, 4.3819000000000496e-05, 4.4069000000000746e-05, 4.400000000000237e-05, 4.401399999999847e-05, 4.44999999999994e-05, 4.427799999999829e-05, 4.372199999999951e-05, 4.4347000000000136e-05, 4.3917000000000955e-05, 4.401400000000194e-05, 4.383399999999954e-05, 4.377800000000126e-05, 4.427800000000176e-05, 4.4416999999997986e-05, 4.352799999999754e-05, 4.3681000000000275e-05, 4.3681000000000275e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.047" endtime="20201117 14:47:09.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.042" endtime="20201117 14:47:09.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.052" endtime="20201117 14:47:09.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.055" endtime="20201117 14:47:09.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.054" endtime="20201117 14:47:09.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.050" endtime="20201117 14:47:09.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.678" endtime="20201117 14:47:09.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.676" endtime="20201117 14:47:09.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.675" endtime="20201117 14:47:09.077"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.080" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.088" endtime="20201117 14:47:09.106"></status>
</kw>
<msg timestamp="20201117 14:47:09.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.086" endtime="20201117 14:47:09.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.107" endtime="20201117 14:47:09.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.110" endtime="20201117 14:47:09.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.084" endtime="20201117 14:47:09.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.082" endtime="20201117 14:47:09.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.119" endtime="20201117 14:47:09.406"></status>
</kw>
<msg timestamp="20201117 14:47:09.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.118" endtime="20201117 14:47:09.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.410" endtime="20201117 14:47:09.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.419" endtime="20201117 14:47:09.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.115" endtime="20201117 14:47:09.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.113" endtime="20201117 14:47:09.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.425" level="INFO">${RESULT} = [{'time': 0.022873917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5388999999999846e-05, 'source_diff': 4.5388999999999846e-05}, {'time': 0.022934917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:09.422" endtime="20201117 14:47:09.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.439" level="INFO">${ACCURACY} = {'diff': [4.5388999999999846e-05, 4.49999999999999e-05, 4.4917000000001955e-05, 4.547199999999779e-05, 4.479200000000183e-05, 4.522200000000101e-05, 4.4667000000001705e-05, 4.534699999999767e-05, 4.50...</msg>
<status status="PASS" starttime="20201117 14:47:09.426" endtime="20201117 14:47:09.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.444" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.443" endtime="20201117 14:47:09.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.447" level="INFO">VALUE: [4.5388999999999846e-05, 4.49999999999999e-05, 4.4917000000001955e-05, 4.547199999999779e-05, 4.479200000000183e-05, 4.522200000000101e-05, 4.4667000000001705e-05, 4.534699999999767e-05, 4.508299999999785e-05, 4.4861000000000206e-05, 4.46939999999979e-05, 4.5125000000000026e-05, 4.470799999999747e-05, 4.49999999999999e-05, 4.530500000000243e-05, 4.5417000000002455e-05, 4.505599999999818e-05, 4.5097000000000886e-05, 4.4945000000001095e-05, 4.4667000000001705e-05, 4.455599999999768e-05, 4.5152999999999166e-05, 4.482000000000097e-05, 4.4874999999999776e-05, 4.558299999999835e-05, 4.4931000000001525e-05, 4.533399999999757e-05, 4.529200000000233e-05, 4.4973000000000235e-05, 4.55000000000004e-05, 4.477799999999879e-05, 4.4610999999999956e-05, 4.527699999999982e-05, 4.55000000000004e-05, 4.5125000000000026e-05, 4.474999999999965e-05, 4.530499999999896e-05, 4.5138999999999596e-05, 4.505499999999871e-05, 4.4625000000002996e-05, 4.504199999999861e-05, 4.498600000000033e-05, 4.4597000000000386e-05, 4.455600000000115e-05, 4.549999999999693e-05, 4.5445000000001595e-05, 4.5402999999999416e-05, 4.5361000000000706e-05, 4.4917000000001955e-05, 4.5416999999998986e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.445" endtime="20201117 14:47:09.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.440" endtime="20201117 14:47:09.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.450" endtime="20201117 14:47:09.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.454" endtime="20201117 14:47:09.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.452" endtime="20201117 14:47:09.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.448" endtime="20201117 14:47:09.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.080" endtime="20201117 14:47:09.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.078" endtime="20201117 14:47:09.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.077" endtime="20201117 14:47:09.475"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.477" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.486" endtime="20201117 14:47:09.505"></status>
</kw>
<msg timestamp="20201117 14:47:09.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.484" endtime="20201117 14:47:09.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.506" endtime="20201117 14:47:09.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.509" endtime="20201117 14:47:09.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.482" endtime="20201117 14:47:09.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.479" endtime="20201117 14:47:09.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.518" endtime="20201117 14:47:09.804"></status>
</kw>
<msg timestamp="20201117 14:47:09.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022274958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.517" endtime="20201117 14:47:09.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022274958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.809" endtime="20201117 14:47:09.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.817" endtime="20201117 14:47:09.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.514" endtime="20201117 14:47:09.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.512" endtime="20201117 14:47:09.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.824" level="INFO">${RESULT} = [{'time': 0.022320986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.602800000000004e-05, 'source_diff': 4.602800000000004e-05}, {'time': 0.022383014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:09.820" endtime="20201117 14:47:09.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.838" level="INFO">${ACCURACY} = {'diff': [4.602800000000004e-05, 4.606999999999875e-05, 4.5666999999999236e-05, 4.5695000000001845e-05, 4.572200000000151e-05, 4.645799999999922e-05, 4.626400000000072e-05, 4.5625000000000526e-05, 4.5...</msg>
<status status="PASS" starttime="20201117 14:47:09.825" endtime="20201117 14:47:09.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.843" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.841" endtime="20201117 14:47:09.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.846" level="INFO">VALUE: [4.602800000000004e-05, 4.606999999999875e-05, 4.5666999999999236e-05, 4.5695000000001845e-05, 4.572200000000151e-05, 4.645799999999922e-05, 4.626400000000072e-05, 4.5625000000000526e-05, 4.583400000000154e-05, 4.579199999999936e-05, 4.623599999999811e-05, 4.6166999999999736e-05, 4.627800000000029e-05, 4.5861000000001206e-05, 4.648600000000183e-05, 4.608299999999885e-05, 4.623600000000158e-05, 4.634699999999867e-05, 4.569400000000237e-05, 4.5847000000001636e-05, 4.5652999999999666e-05, 4.561099999999749e-05, 4.58329999999986e-05, 4.551399999999997e-05, 4.554200000000258e-05, 4.573600000000108e-05, 4.6403000000000416e-05, 4.597199999999829e-05, 4.6403000000000416e-05, 4.584800000000111e-05, 4.630599999999943e-05, 4.608399999999832e-05, 4.602700000000057e-05, 4.609699999999842e-05, 4.626400000000072e-05, 4.6472999999998266e-05, 4.575000000000065e-05, 4.623600000000158e-05, 4.60000000000009e-05, 4.572199999999804e-05, 4.622199999999854e-05, 4.622199999999854e-05, 4.640200000000094e-05, 4.591600000000001e-05, 4.580499999999946e-05, 4.647200000000226e-05, 4.573600000000108e-05, 4.58329999999986e-05, 4.609699999999842e-05, 4.5681000000002275e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.844" endtime="20201117 14:47:09.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.839" endtime="20201117 14:47:09.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.849" endtime="20201117 14:47:09.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.853" endtime="20201117 14:47:09.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.851" endtime="20201117 14:47:09.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.847" endtime="20201117 14:47:09.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.478" endtime="20201117 14:47:09.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.476" endtime="20201117 14:47:09.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.475" endtime="20201117 14:47:09.874"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.876" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.885" endtime="20201117 14:47:09.904"></status>
</kw>
<msg timestamp="20201117 14:47:09.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.883" endtime="20201117 14:47:09.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.905" endtime="20201117 14:47:09.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.908" endtime="20201117 14:47:09.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.880" endtime="20201117 14:47:09.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.878" endtime="20201117 14:47:09.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.917" endtime="20201117 14:47:10.205"></status>
</kw>
<msg timestamp="20201117 14:47:10.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023253, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:09.916" endtime="20201117 14:47:10.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023253, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:10.209" endtime="20201117 14:47:10.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.218" endtime="20201117 14:47:10.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.913" endtime="20201117 14:47:10.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.911" endtime="20201117 14:47:10.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.225" level="INFO">${RESULT} = [{'time': 0.023299958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.695799999999972e-05, 'source_diff': 4.695799999999972e-05}, {'time': 0.023359944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:10.221" endtime="20201117 14:47:10.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.240" level="INFO">${ACCURACY} = {'diff': [4.695799999999972e-05, 4.705500000000071e-05, 4.675000000000165e-05, 4.6875000000001776e-05, 4.749999999999893e-05, 4.7125000000002026e-05, 4.7431000000000556e-05, 4.6917000000000486e-05, 4....</msg>
<status status="PASS" starttime="20201117 14:47:10.226" endtime="20201117 14:47:10.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.245" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.244" endtime="20201117 14:47:10.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.247" level="INFO">VALUE: [4.695799999999972e-05, 4.705500000000071e-05, 4.675000000000165e-05, 4.6875000000001776e-05, 4.749999999999893e-05, 4.7125000000002026e-05, 4.7431000000000556e-05, 4.6917000000000486e-05, 4.73330000000001e-05, 4.7417000000000986e-05, 4.68329999999996e-05, 4.7430999999997087e-05, 4.655599999999968e-05, 4.712499999999856e-05, 4.751400000000197e-05, 4.7403000000001416e-05, 4.673600000000208e-05, 4.697199999999929e-05, 4.725000000000215e-05, 4.740299999999795e-05, 4.7167000000000736e-05, 4.741600000000151e-05, 4.6708999999998946e-05, 4.711099999999899e-05, 4.695799999999972e-05, 4.742999999999761e-05, 4.722199999999954e-05, 4.690199999999797e-05, 4.729099999999792e-05, 4.6903000000000916e-05, 4.705600000000018e-05, 4.6889000000001346e-05, 4.749999999999893e-05, 4.698599999999886e-05, 4.730600000000043e-05, 4.736099999999924e-05, 4.654200000000011e-05, 4.713899999999813e-05, 4.745800000000022e-05, 4.679200000000036e-05, 4.687499999999831e-05, 4.654200000000011e-05, 4.712499999999856e-05, 4.736099999999924e-05, 4.680599999999993e-05, 4.681900000000003e-05, 4.654100000000064e-05, 4.680599999999993e-05, 4.654099999999717e-05, 4.694400000000015e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.246" endtime="20201117 14:47:10.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.241" endtime="20201117 14:47:10.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.251" endtime="20201117 14:47:10.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.254" endtime="20201117 14:47:10.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.253" endtime="20201117 14:47:10.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.249" endtime="20201117 14:47:10.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.877" endtime="20201117 14:47:10.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.875" endtime="20201117 14:47:10.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.874" endtime="20201117 14:47:10.275"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.278" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.286" endtime="20201117 14:47:10.305"></status>
</kw>
<msg timestamp="20201117 14:47:10.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.285" endtime="20201117 14:47:10.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.307" endtime="20201117 14:47:10.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.309" endtime="20201117 14:47:10.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.282" endtime="20201117 14:47:10.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.280" endtime="20201117 14:47:10.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.320" endtime="20201117 14:47:10.606"></status>
</kw>
<msg timestamp="20201117 14:47:10.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.318" endtime="20201117 14:47:10.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.611" endtime="20201117 14:47:10.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.620" endtime="20201117 14:47:10.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.315" endtime="20201117 14:47:10.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.313" endtime="20201117 14:47:10.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.626" level="INFO">${RESULT} = [{'time': 0.022411625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7889000000002346e-05, 'source_diff': 4.7889000000002346e-05}, {'time': 0.022473625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:10.623" endtime="20201117 14:47:10.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.640" level="INFO">${ACCURACY} = {'diff': [4.7889000000002346e-05, 4.844400000000165e-05, 4.78330000000006e-05, 4.823600000000011e-05, 4.8431000000001556e-05, 4.793099999999759e-05, 4.76529999999982e-05, 4.7708999999999946e-05, 4.822...</msg>
<status status="PASS" starttime="20201117 14:47:10.627" endtime="20201117 14:47:10.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.645" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.644" endtime="20201117 14:47:10.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.648" level="INFO">VALUE: [4.7889000000002346e-05, 4.844400000000165e-05, 4.78330000000006e-05, 4.823600000000011e-05, 4.8431000000001556e-05, 4.793099999999759e-05, 4.76529999999982e-05, 4.7708999999999946e-05, 4.822200000000054e-05, 4.8181000000001306e-05, 4.779099999999842e-05, 4.811199999999946e-05, 4.7722999999999516e-05, 4.816600000000226e-05, 4.8013999999999e-05, 4.773599999999961e-05, 4.811099999999999e-05, 4.827800000000229e-05, 4.773599999999961e-05, 4.813899999999913e-05, 4.804100000000214e-05, 4.822200000000054e-05, 4.809700000000042e-05, 4.7889000000002346e-05, 4.818099999999784e-05, 4.8209000000000446e-05, 4.847200000000079e-05, 4.798599999999986e-05, 4.807000000000075e-05, 4.805600000000118e-05, 4.777800000000179e-05, 4.801299999999953e-05, 4.8181000000001306e-05, 4.777799999999832e-05, 4.748599999999936e-05, 4.8181000000001306e-05, 4.817999999999836e-05, 4.793000000000158e-05, 4.779100000000189e-05, 4.768000000000133e-05, 4.806899999999781e-05, 4.786099999999974e-05, 4.752800000000154e-05, 4.759699999999992e-05, 4.812499999999956e-05, 4.806900000000128e-05, 4.7917000000001486e-05, 4.757000000000025e-05, 4.824999999999968e-05, 4.826399999999925e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.646" endtime="20201117 14:47:10.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.641" endtime="20201117 14:47:10.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.651" endtime="20201117 14:47:10.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.655" endtime="20201117 14:47:10.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.653" endtime="20201117 14:47:10.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.649" endtime="20201117 14:47:10.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.278" endtime="20201117 14:47:10.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.277" endtime="20201117 14:47:10.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.276" endtime="20201117 14:47:10.676"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.678" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.687" endtime="20201117 14:47:10.705"></status>
</kw>
<msg timestamp="20201117 14:47:10.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.685" endtime="20201117 14:47:10.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.707" endtime="20201117 14:47:10.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.710" endtime="20201117 14:47:10.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.682" endtime="20201117 14:47:10.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.680" endtime="20201117 14:47:10.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.719" endtime="20201117 14:47:11.005"></status>
</kw>
<msg timestamp="20201117 14:47:11.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.717" endtime="20201117 14:47:11.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.009" endtime="20201117 14:47:11.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.018" endtime="20201117 14:47:11.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.715" endtime="20201117 14:47:11.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.713" endtime="20201117 14:47:11.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.025" level="INFO">${RESULT} = [{'time': 0.022305875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9014e-05, 'source_diff': 4.9014e-05}, {'time': 0.022367889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.874999999999671e-...</msg>
<status status="PASS" starttime="20201117 14:47:11.021" endtime="20201117 14:47:11.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.039" level="INFO">${ACCURACY} = {'diff': [4.9014e-05, 4.874999999999671e-05, 4.894399999999868e-05, 4.93469999999982e-05, 4.9151999999996754e-05, 4.854199999999864e-05, 4.897199999999782e-05, 4.940200000000047e-05, 4.931899999999906...</msg>
<status status="PASS" starttime="20201117 14:47:11.026" endtime="20201117 14:47:11.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.044" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.042" endtime="20201117 14:47:11.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.046" level="INFO">VALUE: [4.9014e-05, 4.874999999999671e-05, 4.894399999999868e-05, 4.93469999999982e-05, 4.9151999999996754e-05, 4.854199999999864e-05, 4.897199999999782e-05, 4.940200000000047e-05, 4.931899999999906e-05, 4.8917000000002486e-05, 4.909800000000089e-05, 4.884800000000064e-05, 4.900000000000043e-05, 4.879099999999942e-05, 4.884700000000117e-05, 4.925000000000068e-05, 4.942999999999961e-05, 4.886100000000074e-05, 4.945799999999875e-05, 4.913800000000065e-05, 4.879199999999889e-05, 4.854199999999864e-05, 4.9195000000001876e-05, 4.893099999999859e-05, 4.918099999999884e-05, 4.879199999999889e-05, 4.897200000000129e-05, 4.913900000000013e-05, 4.923599999999764e-05, 4.8709000000000946e-05, 4.868099999999834e-05, 4.857000000000125e-05, 4.942999999999961e-05, 4.931899999999906e-05, 4.8973000000000766e-05, 4.923600000000111e-05, 4.866599999999929e-05, 4.951399999999703e-05, 4.888899999999988e-05, 4.912499999999709e-05, 4.861100000000049e-05, 4.923599999999764e-05, 4.861100000000049e-05, 4.937500000000081e-05, 4.877799999999932e-05, 4.861100000000049e-05, 4.881999999999803e-05, 4.904200000000261e-05, 4.898600000000086e-05, 4.897199999999782e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.045" endtime="20201117 14:47:11.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.040" endtime="20201117 14:47:11.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.049" endtime="20201117 14:47:11.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.053" endtime="20201117 14:47:11.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.051" endtime="20201117 14:47:11.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.048" endtime="20201117 14:47:11.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.679" endtime="20201117 14:47:11.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.677" endtime="20201117 14:47:11.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.676" endtime="20201117 14:47:11.074"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.077" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.085" endtime="20201117 14:47:11.103"></status>
</kw>
<msg timestamp="20201117 14:47:11.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.084" endtime="20201117 14:47:11.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.105" endtime="20201117 14:47:11.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.108" endtime="20201117 14:47:11.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.081" endtime="20201117 14:47:11.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.079" endtime="20201117 14:47:11.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.117" endtime="20201117 14:47:11.404"></status>
</kw>
<msg timestamp="20201117 14:47:11.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.116" endtime="20201117 14:47:11.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.408" endtime="20201117 14:47:11.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.417" endtime="20201117 14:47:11.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.113" endtime="20201117 14:47:11.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.111" endtime="20201117 14:47:11.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.423" level="INFO">${RESULT} = [{'time': 0.022378486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.995799999999925e-05, 'source_diff': 4.995799999999925e-05}, {'time': 0.022442486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:11.420" endtime="20201117 14:47:11.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.437" level="INFO">${ACCURACY} = {'diff': [4.995799999999925e-05, 5.018000000000036e-05, 4.988900000000088e-05, 5.005599999999971e-05, 4.990300000000045e-05, 5.022199999999907e-05, 5.041700000000052e-05, 5.012499999999809e-05, 4.9944...</msg>
<status status="PASS" starttime="20201117 14:47:11.424" endtime="20201117 14:47:11.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.442" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.441" endtime="20201117 14:47:11.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.445" level="INFO">VALUE: [4.995799999999925e-05, 5.018000000000036e-05, 4.988900000000088e-05, 5.005599999999971e-05, 4.990300000000045e-05, 5.022199999999907e-05, 5.041700000000052e-05, 5.012499999999809e-05, 4.994499999999916e-05, 5.016700000000027e-05, 4.973599999999814e-05, 4.987499999999784e-05, 5.044499999999966e-05, 5.038900000000138e-05, 5.009699999999895e-05, 4.9707999999999e-05, 5.029099999999745e-05, 4.958299999999888e-05, 5.027700000000135e-05, 4.956899999999931e-05, 5.031900000000006e-05, 4.993000000000011e-05, 5.037499999999834e-05, 5.002800000000057e-05, 5.036099999999877e-05, 5.018099999999984e-05, 4.991700000000002e-05, 5.000000000000143e-05, 4.973600000000161e-05, 4.961099999999802e-05, 4.986099999999827e-05, 5.009799999999842e-05, 5.041699999999705e-05, 5.0181000000003306e-05, 5.027800000000082e-05, 5.029200000000039e-05, 5.049999999999846e-05, 5.018000000000036e-05, 5.019399999999993e-05, 4.954100000000017e-05, 5.011100000000199e-05, 5.024999999999821e-05, 5.033299999999963e-05, 4.958299999999888e-05, 5.048599999999889e-05, 4.991700000000002e-05, 4.973599999999814e-05, 4.991700000000002e-05, 4.961099999999802e-05, 5.027800000000082e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.443" endtime="20201117 14:47:11.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.438" endtime="20201117 14:47:11.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.448" endtime="20201117 14:47:11.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.451" endtime="20201117 14:47:11.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.450" endtime="20201117 14:47:11.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.446" endtime="20201117 14:47:11.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.077" endtime="20201117 14:47:11.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.075" endtime="20201117 14:47:11.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.074" endtime="20201117 14:47:11.473"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.475" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.484" endtime="20201117 14:47:11.503"></status>
</kw>
<msg timestamp="20201117 14:47:11.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.482" endtime="20201117 14:47:11.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.505" endtime="20201117 14:47:11.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.507" endtime="20201117 14:47:11.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.479" endtime="20201117 14:47:11.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.477" endtime="20201117 14:47:11.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.517" endtime="20201117 14:47:11.803"></status>
</kw>
<msg timestamp="20201117 14:47:11.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023813111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023864389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.515" endtime="20201117 14:47:11.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023813111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023864389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.807" endtime="20201117 14:47:11.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.815" endtime="20201117 14:47:11.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.513" endtime="20201117 14:47:11.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.511" endtime="20201117 14:47:11.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.822" level="INFO">${RESULT} = [{'time': 0.023864389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.127799999999835e-05, 'source_diff': 5.127799999999835e-05}, {'time': 0.023930389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:11.819" endtime="20201117 14:47:11.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.837" level="INFO">${ACCURACY} = {'diff': [5.127799999999835e-05, 5.145800000000075e-05, 5.069499999999991e-05, 5.068100000000034e-05, 5.086099999999927e-05, 5.063899999999816e-05, 5.143099999999762e-05, 5.090299999999798e-05, 5.1181...</msg>
<status status="PASS" starttime="20201117 14:47:11.823" endtime="20201117 14:47:11.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.842" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.841" endtime="20201117 14:47:11.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.845" level="INFO">VALUE: [5.127799999999835e-05, 5.145800000000075e-05, 5.069499999999991e-05, 5.068100000000034e-05, 5.086099999999927e-05, 5.063899999999816e-05, 5.143099999999762e-05, 5.090299999999798e-05, 5.118100000000084e-05, 5.130599999999749e-05, 5.149999999999946e-05, 5.106900000000081e-05, 5.150000000000293e-05, 5.083300000000013e-05, 5.059699999999945e-05, 5.068000000000086e-05, 5.1402000000002473e-05, 5.055499999999727e-05, 5.056900000000031e-05, 5.136099999999977e-05, 5.072199999999957e-05, 5.104200000000114e-05, 5.068100000000034e-05, 5.075000000000218e-05, 5.068100000000034e-05, 5.059699999999945e-05, 5.073599999999914e-05, 5.093100000000059e-05, 5.141700000000152e-05, 5.058400000000282e-05, 5.055600000000021e-05, 5.09729999999993e-05, 5.101299999999906e-05, 5.137499999999934e-05, 5.122200000000007e-05, 5.0708e-05, 5.098599999999939e-05, 5.144400000000118e-05, 5.076399999999828e-05, 5.097199999999982e-05, 5.122200000000007e-05, 5.086099999999927e-05, 5.074999999999871e-05, 5.127800000000182e-05, 5.106900000000081e-05, 5.069400000000043e-05, 5.086099999999927e-05, 5.054200000000064e-05, 5.091700000000102e-05, 5.079200000000089e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.843" endtime="20201117 14:47:11.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.838" endtime="20201117 14:47:11.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.848" endtime="20201117 14:47:11.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.851" endtime="20201117 14:47:11.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.850" endtime="20201117 14:47:11.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.846" endtime="20201117 14:47:11.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.476" endtime="20201117 14:47:11.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.474" endtime="20201117 14:47:11.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.473" endtime="20201117 14:47:11.873"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.876" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.884" endtime="20201117 14:47:11.902"></status>
</kw>
<msg timestamp="20201117 14:47:11.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.882" endtime="20201117 14:47:11.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.904" endtime="20201117 14:47:11.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.907" endtime="20201117 14:47:11.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.880" endtime="20201117 14:47:11.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.878" endtime="20201117 14:47:11.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.916" endtime="20201117 14:47:12.201"></status>
</kw>
<msg timestamp="20201117 14:47:12.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02285675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:11.914" endtime="20201117 14:47:12.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02285675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:12.206" endtime="20201117 14:47:12.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.214" endtime="20201117 14:47:12.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.912" endtime="20201117 14:47:12.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.910" endtime="20201117 14:47:12.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.221" level="INFO">${RESULT} = [{'time': 0.022908819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.206900000000181e-05, 'source_diff': 5.206900000000181e-05}, {'time': 0.022976819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:12.218" endtime="20201117 14:47:12.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.235" level="INFO">${ACCURACY} = {'diff': [5.206900000000181e-05, 5.225000000000021e-05, 5.154199999999817e-05, 5.163899999999916e-05, 5.169400000000143e-05, 5.161100000000002e-05, 5.184699999999723e-05, 5.2193999999998464e-05, 5.205...</msg>
<status status="PASS" starttime="20201117 14:47:12.222" endtime="20201117 14:47:12.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.239" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.238" endtime="20201117 14:47:12.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.242" level="INFO">VALUE: [5.206900000000181e-05, 5.225000000000021e-05, 5.154199999999817e-05, 5.163899999999916e-05, 5.169400000000143e-05, 5.161100000000002e-05, 5.184699999999723e-05, 5.2193999999998464e-05, 5.205499999999877e-05, 5.172200000000057e-05, 5.186100000000027e-05, 5.244499999999819e-05, 5.158300000000088e-05, 5.23470000000012e-05, 5.152800000000207e-05, 5.186100000000027e-05, 5.18470000000007e-05, 5.202699999999963e-05, 5.202800000000257e-05, 5.236200000000024e-05, 5.181899999999809e-05, 5.209800000000042e-05, 5.2415999999999574e-05, 5.245900000000123e-05, 5.250000000000046e-05, 5.230500000000249e-05, 5.218000000000236e-05, 5.231900000000206e-05, 5.209700000000095e-05, 5.248600000000089e-05, 5.190299999999898e-05, 5.186100000000027e-05, 5.250000000000046e-05, 5.187499999999984e-05, 5.1721999999997104e-05, 5.173600000000014e-05, 5.180600000000146e-05, 5.154200000000164e-05, 5.161100000000002e-05, 5.149999999999946e-05, 5.227799999999935e-05, 5.230599999999849e-05, 5.179199999999842e-05, 5.229199999999892e-05, 5.236200000000024e-05, 5.2193999999998464e-05, 5.172300000000005e-05, 5.218000000000236e-05, 5.184699999999723e-05, 5.156900000000131e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.241" endtime="20201117 14:47:12.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.236" endtime="20201117 14:47:12.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.246" endtime="20201117 14:47:12.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.249" endtime="20201117 14:47:12.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.248" endtime="20201117 14:47:12.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.244" endtime="20201117 14:47:12.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.876" endtime="20201117 14:47:12.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.874" endtime="20201117 14:47:12.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.874" endtime="20201117 14:47:12.270"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.273" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.281" endtime="20201117 14:47:12.300"></status>
</kw>
<msg timestamp="20201117 14:47:12.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.280" endtime="20201117 14:47:12.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.302" endtime="20201117 14:47:12.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.304" endtime="20201117 14:47:12.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.277" endtime="20201117 14:47:12.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.275" endtime="20201117 14:47:12.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.314" endtime="20201117 14:47:12.600"></status>
</kw>
<msg timestamp="20201117 14:47:12.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.312" endtime="20201117 14:47:12.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.604" endtime="20201117 14:47:12.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.613" endtime="20201117 14:47:12.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.309" endtime="20201117 14:47:12.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.308" endtime="20201117 14:47:12.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.620" level="INFO">${RESULT} = [{'time': 0.022482653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.331999999999906e-05, 'source_diff': 5.331999999999906e-05}, {'time': 0.022550681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:12.616" endtime="20201117 14:47:12.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.634" level="INFO">${ACCURACY} = {'diff': [5.331999999999906e-05, 5.290299999999998e-05, 5.261099999999755e-05, 5.2957999999998784e-05, 5.308400000000185e-05, 5.288899999999694e-05, 5.3416000000000574e-05, 5.284699999999823e-05, 5.29...</msg>
<status status="PASS" starttime="20201117 14:47:12.621" endtime="20201117 14:47:12.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.638" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.637" endtime="20201117 14:47:12.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.641" level="INFO">VALUE: [5.331999999999906e-05, 5.290299999999998e-05, 5.261099999999755e-05, 5.2957999999998784e-05, 5.308400000000185e-05, 5.288899999999694e-05, 5.3416000000000574e-05, 5.284699999999823e-05, 5.2901999999997035e-05, 5.3471999999998854e-05, 5.3485999999998424e-05, 5.291699999999955e-05, 5.297200000000182e-05, 5.286100000000127e-05, 5.343099999999962e-05, 5.286100000000127e-05, 5.33470000000022e-05, 5.30280000000001e-05, 5.269499999999844e-05, 5.350000000000146e-05, 5.286100000000127e-05, 5.293100000000259e-05, 5.322300000000155e-05, 5.322300000000155e-05, 5.308399999999838e-05, 5.29869999999974e-05, 5.315300000000023e-05, 5.351400000000103e-05, 5.261100000000102e-05, 5.3402000000001004e-05, 5.305499999999977e-05, 5.2749999999997244e-05, 5.281900000000256e-05, 5.259699999999798e-05, 5.336100000000177e-05, 5.2721999999998104e-05, 5.277800000000332e-05, 5.3235999999998174e-05, 5.2735999999997674e-05, 5.313899999999719e-05, 5.2999999999997494e-05, 5.28340000000016e-05, 5.25279999999996e-05, 5.311099999999805e-05, 5.35280000000006e-05, 5.319500000000241e-05, 5.330599999999949e-05, 5.334800000000167e-05, 5.30410000000002e-05, 5.3179999999999894e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.639" endtime="20201117 14:47:12.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.635" endtime="20201117 14:47:12.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.645" endtime="20201117 14:47:12.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.648" endtime="20201117 14:47:12.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.647" endtime="20201117 14:47:12.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.643" endtime="20201117 14:47:12.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.273" endtime="20201117 14:47:12.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.272" endtime="20201117 14:47:12.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.271" endtime="20201117 14:47:12.669"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.672" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.680" endtime="20201117 14:47:12.699"></status>
</kw>
<msg timestamp="20201117 14:47:12.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.679" endtime="20201117 14:47:12.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.701" endtime="20201117 14:47:12.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.703" endtime="20201117 14:47:12.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.676" endtime="20201117 14:47:12.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.674" endtime="20201117 14:47:12.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.713" endtime="20201117 14:47:13.000"></status>
</kw>
<msg timestamp="20201117 14:47:13.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022439153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.711" endtime="20201117 14:47:13.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022439153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.005" endtime="20201117 14:47:13.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.013" endtime="20201117 14:47:13.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.708" endtime="20201117 14:47:13.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.707" endtime="20201117 14:47:13.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.020" level="INFO">${RESULT} = [{'time': 0.022439153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.384699999999923e-05, 'source_diff': 5.384699999999923e-05}, {'time': 0.022509111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:13.016" endtime="20201117 14:47:13.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.034" level="INFO">${ACCURACY} = {'diff': [5.384699999999923e-05, 5.38609999999988e-05, 5.361099999999855e-05, 5.4221999999999604e-05, 5.388900000000141e-05, 5.404200000000067e-05, 5.43609999999993e-05, 5.4235999999999174e-05, 5.3722...</msg>
<status status="PASS" starttime="20201117 14:47:13.021" endtime="20201117 14:47:13.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.039" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.038" endtime="20201117 14:47:13.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.041" level="INFO">VALUE: [5.384699999999923e-05, 5.38609999999988e-05, 5.361099999999855e-05, 5.4221999999999604e-05, 5.388900000000141e-05, 5.404200000000067e-05, 5.43609999999993e-05, 5.4235999999999174e-05, 5.372299999999858e-05, 5.437499999999887e-05, 5.395899999999926e-05, 5.406999999999981e-05, 5.41670000000008e-05, 5.4444000000000714e-05, 5.3638000000001684e-05, 5.381900000000009e-05, 5.423600000000264e-05, 5.4444000000000714e-05, 5.4541999999997703e-05, 5.359699999999898e-05, 5.35410000000007e-05, 5.368099999999987e-05, 5.434699999999973e-05, 5.388900000000141e-05, 5.3985999999998924e-05, 5.384699999999923e-05, 5.380599999999999e-05, 5.408399999999938e-05, 5.4485999999999424e-05, 5.443100000000062e-05, 5.359799999999845e-05, 5.404200000000067e-05, 5.391700000000055e-05, 5.429200000000092e-05, 5.35410000000007e-05, 5.3680000000000394e-05, 5.351400000000103e-05, 5.3916000000001074e-05, 5.430500000000102e-05, 5.3680000000000394e-05, 5.380499999999705e-05, 5.35410000000007e-05, 5.4444000000000714e-05, 5.368099999999987e-05, 5.375000000000171e-05, 5.408299999999991e-05, 5.413900000000166e-05, 5.400000000000196e-05, 5.433399999999963e-05, 5.354200000000017e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.040" endtime="20201117 14:47:13.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.035" endtime="20201117 14:47:13.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.045" endtime="20201117 14:47:13.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.048" endtime="20201117 14:47:13.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.047" endtime="20201117 14:47:13.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.043" endtime="20201117 14:47:13.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.672" endtime="20201117 14:47:13.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.670" endtime="20201117 14:47:13.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.670" endtime="20201117 14:47:13.069"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.072" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.080" endtime="20201117 14:47:13.101"></status>
</kw>
<msg timestamp="20201117 14:47:13.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.079" endtime="20201117 14:47:13.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.102" endtime="20201117 14:47:13.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.105" endtime="20201117 14:47:13.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.076" endtime="20201117 14:47:13.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.074" endtime="20201117 14:47:13.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.114" endtime="20201117 14:47:13.401"></status>
</kw>
<msg timestamp="20201117 14:47:13.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023320194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023375722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.113" endtime="20201117 14:47:13.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023320194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023375722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.405" endtime="20201117 14:47:13.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.414" endtime="20201117 14:47:13.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.110" endtime="20201117 14:47:13.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.108" endtime="20201117 14:47:13.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.421" level="INFO">${RESULT} = [{'time': 0.023375722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.55280000000026e-05, 'source_diff': 5.55280000000026e-05}, {'time': 0.023446736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:13.417" endtime="20201117 14:47:13.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.436" level="INFO">${ACCURACY} = {'diff': [5.55280000000026e-05, 5.466699999999783e-05, 5.5472000000000854e-05, 5.5305999999998023e-05, 5.543100000000162e-05, 5.537499999999987e-05, 5.509700000000048e-05, 5.4513999999998564e-05, 5.45...</msg>
<status status="PASS" starttime="20201117 14:47:13.422" endtime="20201117 14:47:13.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.441" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.440" endtime="20201117 14:47:13.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.444" level="INFO">VALUE: [5.55280000000026e-05, 5.466699999999783e-05, 5.5472000000000854e-05, 5.5305999999998023e-05, 5.543100000000162e-05, 5.537499999999987e-05, 5.509700000000048e-05, 5.4513999999998564e-05, 5.455600000000074e-05, 5.454200000000117e-05, 5.468100000000087e-05, 5.532000000000106e-05, 5.5291999999998453e-05, 5.5236000000000174e-05, 5.4957999999997315e-05, 5.456899999999737e-05, 5.486199999999927e-05, 5.4999999999999494e-05, 5.505500000000177e-05, 5.461099999999955e-05, 5.5513999999999564e-05, 5.4749999999999244e-05, 5.5305999999998023e-05, 5.511100000000005e-05, 5.475000000000271e-05, 5.480600000000099e-05, 5.509799999999995e-05, 5.511100000000005e-05, 5.513900000000266e-05, 5.5277999999998884e-05, 5.463899999999869e-05, 5.4929999999998175e-05, 5.501299999999959e-05, 5.487499999999937e-05, 5.48609999999998e-05, 5.463899999999869e-05, 5.48609999999998e-05, 5.4985999999999924e-05, 5.5013999999999064e-05, 5.4972000000000354e-05, 5.4693999999997495e-05, 5.462499999999912e-05, 5.511199999999952e-05, 5.4499999999998994e-05, 5.490300000000198e-05, 5.4722000000000104e-05, 5.483400000000013e-05, 5.482000000000056e-05, 5.459699999999998e-05, 5.501400000000253e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.442" endtime="20201117 14:47:13.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.437" endtime="20201117 14:47:13.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.447" endtime="20201117 14:47:13.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.450" endtime="20201117 14:47:13.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.449" endtime="20201117 14:47:13.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.445" endtime="20201117 14:47:13.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.073" endtime="20201117 14:47:13.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.071" endtime="20201117 14:47:13.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.070" endtime="20201117 14:47:13.472"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.474" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.482" endtime="20201117 14:47:13.501"></status>
</kw>
<msg timestamp="20201117 14:47:13.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.481" endtime="20201117 14:47:13.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.503" endtime="20201117 14:47:13.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.505" endtime="20201117 14:47:13.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.478" endtime="20201117 14:47:13.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.476" endtime="20201117 14:47:13.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.515" endtime="20201117 14:47:13.800"></status>
</kw>
<msg timestamp="20201117 14:47:13.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022624569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.513" endtime="20201117 14:47:13.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022624569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.805" endtime="20201117 14:47:13.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.813" endtime="20201117 14:47:13.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.510" endtime="20201117 14:47:13.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.509" endtime="20201117 14:47:13.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.820" level="INFO">${RESULT} = [{'time': 0.022624569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6416000000000105e-05, 'source_diff': 5.6416000000000105e-05}, {'time': 0.022696556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:13.816" endtime="20201117 14:47:13.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.834" level="INFO">${ACCURACY} = {'diff': [5.6416000000000105e-05, 5.5513999999999564e-05, 5.587500000000037e-05, 5.6180000000002894e-05, 5.63610000000013e-05, 5.588900000000341e-05, 5.606900000000234e-05, 5.562500000000012e-05, 5.62...</msg>
<status status="PASS" starttime="20201117 14:47:13.821" endtime="20201117 14:47:13.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.838" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.837" endtime="20201117 14:47:13.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.841" level="INFO">VALUE: [5.6416000000000105e-05, 5.5513999999999564e-05, 5.587500000000037e-05, 5.6180000000002894e-05, 5.63610000000013e-05, 5.588900000000341e-05, 5.606900000000234e-05, 5.562500000000012e-05, 5.6277999999999884e-05, 5.58610000000008e-05, 5.5750000000000244e-05, 5.611100000000105e-05, 5.594500000000169e-05, 5.5805999999998523e-05, 5.651300000000109e-05, 5.555600000000174e-05, 5.562500000000012e-05, 5.5957999999998315e-05, 5.634700000000173e-05, 5.6014000000000064e-05, 5.590300000000298e-05, 5.581899999999862e-05, 5.561100000000055e-05, 5.6250000000000744e-05, 5.580499999999905e-05, 5.58610000000008e-05, 5.6193999999998995e-05, 5.6277999999999884e-05, 5.5736000000000674e-05, 5.554200000000217e-05, 5.5708000000001534e-05, 5.611100000000105e-05, 5.562500000000012e-05, 5.5721999999997635e-05, 5.6305999999999023e-05, 5.569500000000144e-05, 5.5944000000002214e-05, 5.6027999999999634e-05, 5.563899999999969e-05, 5.563899999999969e-05, 5.6305999999999023e-05, 5.562500000000012e-05, 5.636099999999783e-05, 5.5736000000000674e-05, 5.6000000000000494e-05, 5.5915999999999605e-05, 5.561100000000055e-05, 5.58610000000008e-05, 5.561100000000055e-05, 5.6221999999998135e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.839" endtime="20201117 14:47:13.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.835" endtime="20201117 14:47:13.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.844" endtime="20201117 14:47:13.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.848" endtime="20201117 14:47:13.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.846" endtime="20201117 14:47:13.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.842" endtime="20201117 14:47:13.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.475" endtime="20201117 14:47:13.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.473" endtime="20201117 14:47:13.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.472" endtime="20201117 14:47:13.869"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.871" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.880" endtime="20201117 14:47:13.899"></status>
</kw>
<msg timestamp="20201117 14:47:13.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.878" endtime="20201117 14:47:13.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.900" endtime="20201117 14:47:13.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.907" endtime="20201117 14:47:13.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.876" endtime="20201117 14:47:13.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.873" endtime="20201117 14:47:13.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.917" endtime="20201117 14:47:14.203"></status>
</kw>
<msg timestamp="20201117 14:47:14.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022230417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.915" endtime="20201117 14:47:14.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022230417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.208" endtime="20201117 14:47:14.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.216" endtime="20201117 14:47:14.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.912" endtime="20201117 14:47:14.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.911" endtime="20201117 14:47:14.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.223" level="INFO">${RESULT} = [{'time': 0.022287681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7264000000001314e-05, 'source_diff': 5.7264000000001314e-05}, {'time': 0.022357736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:14.220" endtime="20201117 14:47:14.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.237" level="INFO">${ACCURACY} = {'diff': [5.7264000000001314e-05, 5.6985999999998455e-05, 5.7028000000000634e-05, 5.7236000000002174e-05, 5.7402000000001535e-05, 5.688900000000094e-05, 5.65549999999998e-05, 5.7193999999999995e-05, 5...</msg>
<status status="PASS" starttime="20201117 14:47:14.224" endtime="20201117 14:47:14.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.242" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.241" endtime="20201117 14:47:14.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.244" level="INFO">VALUE: [5.7264000000001314e-05, 5.6985999999998455e-05, 5.7028000000000634e-05, 5.7236000000002174e-05, 5.7402000000001535e-05, 5.688900000000094e-05, 5.65549999999998e-05, 5.7193999999999995e-05, 5.679100000000048e-05, 5.656899999999937e-05, 5.7263999999997844e-05, 5.681899999999962e-05, 5.7235999999998705e-05, 5.734699999999926e-05, 5.7221999999999135e-05, 5.6721999999998635e-05, 5.736099999999883e-05, 5.7042000000000204e-05, 5.6541999999999704e-05, 5.740300000000101e-05, 5.6971999999998885e-05, 5.6750000000001244e-05, 5.6693999999999495e-05, 5.6791999999999954e-05, 5.7207999999999565e-05, 5.6749999999997774e-05, 5.734699999999926e-05, 5.730500000000055e-05, 5.734699999999926e-05, 5.7263999999997844e-05, 5.6679999999999925e-05, 5.656899999999937e-05, 5.709699999999901e-05, 5.734699999999926e-05, 5.6764000000000814e-05, 5.73610000000023e-05, 5.6943999999999745e-05, 5.7069999999999343e-05, 5.7069999999999343e-05, 5.693099999999965e-05, 5.7250000000001744e-05, 5.7264000000001314e-05, 5.713900000000119e-05, 5.6569999999998843e-05, 5.7542000000000704e-05, 5.659800000000145e-05, 5.7485999999998955e-05, 5.73610000000023e-05, 5.7514000000001564e-05, 5.70550000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.243" endtime="20201117 14:47:14.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.238" endtime="20201117 14:47:14.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.248" endtime="20201117 14:47:14.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.251" endtime="20201117 14:47:14.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.249" endtime="20201117 14:47:14.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.246" endtime="20201117 14:47:14.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.872" endtime="20201117 14:47:14.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.870" endtime="20201117 14:47:14.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.869" endtime="20201117 14:47:14.272"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.275" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.284" endtime="20201117 14:47:14.303"></status>
</kw>
<msg timestamp="20201117 14:47:14.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.282" endtime="20201117 14:47:14.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.304" endtime="20201117 14:47:14.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.307" endtime="20201117 14:47:14.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.279" endtime="20201117 14:47:14.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.277" endtime="20201117 14:47:14.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.316" endtime="20201117 14:47:14.604"></status>
</kw>
<msg timestamp="20201117 14:47:14.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022901292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022958875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.315" endtime="20201117 14:47:14.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022901292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022958875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.608" endtime="20201117 14:47:14.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.616" endtime="20201117 14:47:14.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.312" endtime="20201117 14:47:14.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.310" endtime="20201117 14:47:14.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.623" level="INFO">${RESULT} = [{'time': 0.022958875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.758299999999994e-05, 'source_diff': 5.758299999999994e-05}, {'time': 0.023031875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:14.620" endtime="20201117 14:47:14.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.637" level="INFO">${ACCURACY} = {'diff': [5.758299999999994e-05, 5.793100000000065e-05, 5.786099999999933e-05, 5.819500000000047e-05, 5.763900000000169e-05, 5.766700000000083e-05, 5.811099999999958e-05, 5.811099999999958e-05, 5.8181...</msg>
<status status="PASS" starttime="20201117 14:47:14.624" endtime="20201117 14:47:14.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.642" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.641" endtime="20201117 14:47:14.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.645" level="INFO">VALUE: [5.758299999999994e-05, 5.793100000000065e-05, 5.786099999999933e-05, 5.819500000000047e-05, 5.763900000000169e-05, 5.766700000000083e-05, 5.811099999999958e-05, 5.811099999999958e-05, 5.81810000000009e-05, 5.829100000000198e-05, 5.83619999999993e-05, 5.838899999999897e-05, 5.8097999999999483e-05, 5.7694000000000495e-05, 5.8222000000000135e-05, 5.761100000000255e-05, 5.809700000000001e-05, 5.7708000000000065e-05, 5.8472000000000385e-05, 5.780500000000105e-05, 5.8485999999999955e-05, 5.758299999999994e-05, 5.781899999999715e-05, 5.8291999999997984e-05, 5.7999999999999025e-05, 5.761099999999908e-05, 5.8500000000002994e-05, 5.793099999999718e-05, 5.7985999999999455e-05, 5.816700000000133e-05, 5.83749999999994e-05, 5.766700000000083e-05, 5.793100000000065e-05, 5.8165999999998386e-05, 5.761099999999908e-05, 5.786099999999933e-05, 5.805499999999783e-05, 5.812499999999915e-05, 5.813899999999872e-05, 5.7929999999997706e-05, 5.8235999999999705e-05, 5.834699999999679e-05, 5.8056000000000774e-05, 5.8263999999998844e-05, 5.8513999999999095e-05, 5.81810000000009e-05, 5.8485999999999955e-05, 5.844500000000072e-05, 5.8347999999999733e-05, 5.7805999999997054e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.643" endtime="20201117 14:47:14.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.638" endtime="20201117 14:47:14.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.648" endtime="20201117 14:47:14.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.652" endtime="20201117 14:47:14.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.650" endtime="20201117 14:47:14.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.646" endtime="20201117 14:47:14.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.276" endtime="20201117 14:47:14.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.274" endtime="20201117 14:47:14.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.273" endtime="20201117 14:47:14.673"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.676" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.690" endtime="20201117 14:47:14.709"></status>
</kw>
<msg timestamp="20201117 14:47:14.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.688" endtime="20201117 14:47:14.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.711" endtime="20201117 14:47:14.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.713" endtime="20201117 14:47:14.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.680" endtime="20201117 14:47:14.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.678" endtime="20201117 14:47:14.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.723" endtime="20201117 14:47:15.011"></status>
</kw>
<msg timestamp="20201117 14:47:15.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029357097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029416333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.721" endtime="20201117 14:47:15.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029357097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029416333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.015" endtime="20201117 14:47:15.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.024" endtime="20201117 14:47:15.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.719" endtime="20201117 14:47:15.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.717" endtime="20201117 14:47:15.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.030" level="INFO">${RESULT} = [{'time': 0.029416333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9236000000000705e-05, 'source_diff': 5.9236000000000705e-05}, {'time': 0.029490333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:15.027" endtime="20201117 14:47:15.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.046" level="INFO">${ACCURACY} = {'diff': [5.9236000000000705e-05, 5.862499999999965e-05, 5.9250000000000275e-05, 5.8792000000001954e-05, 5.9250000000000275e-05, 5.8986000000000455e-05, 5.936100000000083e-05, 5.8542000000001704e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:15.031" endtime="20201117 14:47:15.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.050" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.049" endtime="20201117 14:47:15.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.055" level="INFO">VALUE: [5.9236000000000705e-05, 5.862499999999965e-05, 5.9250000000000275e-05, 5.8792000000001954e-05, 5.9250000000000275e-05, 5.8986000000000455e-05, 5.936100000000083e-05, 5.8542000000001704e-05, 5.8556000000001274e-05, 5.8749999999999775e-05, 5.8792000000001954e-05, 5.9305999999998554e-05, 5.9000000000000025e-05, 5.876299999999987e-05, 5.916700000000233e-05, 5.861199999999955e-05, 5.9194000000001995e-05, 5.9250000000000275e-05, 5.927699999999994e-05, 5.936100000000083e-05, 5.905499999999883e-05, 5.859700000000051e-05, 5.881899999999815e-05, 5.859700000000051e-05, 5.931899999999865e-05, 5.888899999999947e-05, 5.9291999999998984e-05, 5.8541999999998234e-05, 5.915299999999929e-05, 5.88749999999999e-05, 5.911100000000058e-05, 5.9041999999995265e-05, 5.891699999999861e-05, 5.8764000000002814e-05, 5.911100000000058e-05, 5.934700000000126e-05, 5.9236000000004174e-05, 5.9165999999999386e-05, 5.934700000000126e-05, 5.905499999999536e-05, 5.9235999999997235e-05, 5.8999999999996555e-05, 5.861100000000008e-05, 5.930500000000255e-05, 5.909699999999407e-05, 5.861099999999314e-05, 5.9263999999996375e-05, 5.941699999999911e-05, 5.86949999999975e-05, 5.8735999999996735e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.053" endtime="20201117 14:47:15.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.047" endtime="20201117 14:47:15.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.060" endtime="20201117 14:47:15.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.065" endtime="20201117 14:47:15.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.063" endtime="20201117 14:47:15.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.058" endtime="20201117 14:47:15.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.676" endtime="20201117 14:47:15.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.675" endtime="20201117 14:47:15.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.674" endtime="20201117 14:47:15.086"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.089" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.097" endtime="20201117 14:47:15.117"></status>
</kw>
<msg timestamp="20201117 14:47:15.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.096" endtime="20201117 14:47:15.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.119" endtime="20201117 14:47:15.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.121" endtime="20201117 14:47:15.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.093" endtime="20201117 14:47:15.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.091" endtime="20201117 14:47:15.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.131" endtime="20201117 14:47:15.417"></status>
</kw>
<msg timestamp="20201117 14:47:15.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.129" endtime="20201117 14:47:15.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.421" endtime="20201117 14:47:15.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.430" endtime="20201117 14:47:15.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.126" endtime="20201117 14:47:15.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.125" endtime="20201117 14:47:15.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.437" level="INFO">${RESULT} = [{'time': 0.022548472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9665999999999886e-05, 'source_diff': 5.9665999999999886e-05}, {'time': 0.022623514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:15.434" endtime="20201117 14:47:15.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.451" level="INFO">${ACCURACY} = {'diff': [5.9665999999999886e-05, 6.0250000000001275e-05, 6.012500000000115e-05, 5.9916000000000136e-05, 6.0486000000001955e-05, 6.030500000000008e-05, 5.9735999999997735e-05, 5.986100000000133e-05, 5...</msg>
<status status="PASS" starttime="20201117 14:47:15.438" endtime="20201117 14:47:15.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.456" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.455" endtime="20201117 14:47:15.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.459" level="INFO">VALUE: [5.9665999999999886e-05, 6.0250000000001275e-05, 6.012500000000115e-05, 5.9916000000000136e-05, 6.0486000000001955e-05, 6.030500000000008e-05, 5.9735999999997735e-05, 5.986100000000133e-05, 5.9735999999997735e-05, 5.966699999999936e-05, 6.0306000000003024e-05, 6.0000000000001025e-05, 5.970900000000154e-05, 6.03750000000014e-05, 5.972300000000111e-05, 5.983299999999872e-05, 5.9986000000001455e-05, 6.027700000000094e-05, 6.0014000000000595e-05, 5.955499999999933e-05, 6.0528000000000665e-05, 6.0499999999998055e-05, 5.9986000000001455e-05, 6.0250000000001275e-05, 6.012499999999768e-05, 5.95689999999989e-05, 5.9721999999998165e-05, 6.0236000000001705e-05, 5.965299999999979e-05, 6.012500000000115e-05, 5.997300000000136e-05, 5.966699999999936e-05, 5.9943999999999276e-05, 6.044500000000272e-05, 5.976300000000087e-05, 5.990300000000004e-05, 5.986100000000133e-05, 5.95689999999989e-05, 6.0457999999999346e-05, 5.9679999999999456e-05, 5.9902000000000566e-05, 6.0471999999998916e-05, 5.980499999999958e-05, 5.963900000000022e-05, 5.96949999999985e-05, 5.963900000000022e-05, 5.966699999999936e-05, 6.0000000000001025e-05, 6.0069999999998874e-05, 6.0221999999998665e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.457" endtime="20201117 14:47:15.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.452" endtime="20201117 14:47:15.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.462" endtime="20201117 14:47:15.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.466" endtime="20201117 14:47:15.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.464" endtime="20201117 14:47:15.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.460" endtime="20201117 14:47:15.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.089" endtime="20201117 14:47:15.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.088" endtime="20201117 14:47:15.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.087" endtime="20201117 14:47:15.487"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.489" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.498" endtime="20201117 14:47:15.516"></status>
</kw>
<msg timestamp="20201117 14:47:15.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.496" endtime="20201117 14:47:15.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.518" endtime="20201117 14:47:15.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.520" endtime="20201117 14:47:15.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.493" endtime="20201117 14:47:15.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.491" endtime="20201117 14:47:15.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.530" endtime="20201117 14:47:15.816"></status>
</kw>
<msg timestamp="20201117 14:47:15.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.528" endtime="20201117 14:47:15.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.820" endtime="20201117 14:47:15.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.829" endtime="20201117 14:47:15.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.526" endtime="20201117 14:47:15.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.524" endtime="20201117 14:47:15.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.836" level="INFO">${RESULT} = [{'time': 0.022416931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.116700000000086e-05, 'source_diff': 6.116700000000086e-05}, {'time': 0.022493944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:15.832" endtime="20201117 14:47:15.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.850" level="INFO">${ACCURACY} = {'diff': [6.116700000000086e-05, 6.055499999999686e-05, 6.061099999999861e-05, 6.079099999999754e-05, 6.0694000000000026e-05, 6.0986000000002455e-05, 6.0944000000000276e-05, 6.080500000000058e-05, 6.0...</msg>
<status status="PASS" starttime="20201117 14:47:15.837" endtime="20201117 14:47:15.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.855" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.854" endtime="20201117 14:47:15.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.858" level="INFO">VALUE: [6.116700000000086e-05, 6.055499999999686e-05, 6.061099999999861e-05, 6.079099999999754e-05, 6.0694000000000026e-05, 6.0986000000002455e-05, 6.0944000000000276e-05, 6.080500000000058e-05, 6.0930000000000706e-05, 6.140300000000154e-05, 6.086099999999886e-05, 6.116699999999739e-05, 6.1013999999998125e-05, 6.0735999999998735e-05, 6.140299999999807e-05, 6.109699999999954e-05, 6.15279999999982e-05, 6.13339999999997e-05, 6.068099999999993e-05, 6.148700000000243e-05, 6.0957999999999846e-05, 6.116700000000086e-05, 6.129100000000151e-05, 6.129100000000151e-05, 6.0707999999999596e-05, 6.105500000000083e-05, 6.12080000000001e-05, 6.058299999999947e-05, 6.0763999999997875e-05, 6.070899999999907e-05, 6.091700000000061e-05, 6.134699999999979e-05, 6.0957999999999846e-05, 6.1000000000002025e-05, 6.143100000000068e-05, 6.0778000000000915e-05, 6.12499999999988e-05, 6.0778000000000915e-05, 6.07629999999984e-05, 6.119400000000053e-05, 6.112500000000215e-05, 6.136099999999936e-05, 6.0764000000001345e-05, 6.0694000000000026e-05, 6.065299999999732e-05, 6.127800000000141e-05, 6.0555999999999804e-05, 6.055500000000033e-05, 6.0971999999999416e-05, 6.118100000000043e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.856" endtime="20201117 14:47:15.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.851" endtime="20201117 14:47:15.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.861" endtime="20201117 14:47:15.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.864" endtime="20201117 14:47:15.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.863" endtime="20201117 14:47:15.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.859" endtime="20201117 14:47:15.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.490" endtime="20201117 14:47:15.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.488" endtime="20201117 14:47:15.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.487" endtime="20201117 14:47:15.886"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.888" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.896" endtime="20201117 14:47:15.915"></status>
</kw>
<msg timestamp="20201117 14:47:15.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.895" endtime="20201117 14:47:15.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.917" endtime="20201117 14:47:15.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.919" endtime="20201117 14:47:15.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.892" endtime="20201117 14:47:15.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.890" endtime="20201117 14:47:15.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.929" endtime="20201117 14:47:16.215"></status>
</kw>
<msg timestamp="20201117 14:47:16.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.927" endtime="20201117 14:47:16.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.219" endtime="20201117 14:47:16.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.228" endtime="20201117 14:47:16.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.925" endtime="20201117 14:47:16.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.923" endtime="20201117 14:47:16.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.235" level="INFO">${RESULT} = [{'time': 0.022289167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.176399999999888e-05, 'source_diff': 6.176399999999888e-05}, {'time': 0.022367194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:16.232" endtime="20201117 14:47:16.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.249" level="INFO">${ACCURACY} = {'diff': [6.176399999999888e-05, 6.245800000000135e-05, 6.241700000000211e-05, 6.247200000000092e-05, 6.198599999999999e-05, 6.242999999999874e-05, 6.201399999999913e-05, 6.168000000000146e-05, 6.2458...</msg>
<status status="PASS" starttime="20201117 14:47:16.236" endtime="20201117 14:47:16.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.254" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.253" endtime="20201117 14:47:16.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.257" level="INFO">VALUE: [6.176399999999888e-05, 6.245800000000135e-05, 6.241700000000211e-05, 6.247200000000092e-05, 6.198599999999999e-05, 6.242999999999874e-05, 6.201399999999913e-05, 6.168000000000146e-05, 6.245800000000135e-05, 6.215299999999882e-05, 6.22499999999998e-05, 6.209700000000054e-05, 6.182000000000062e-05, 6.184700000000029e-05, 6.173599999999974e-05, 6.173599999999974e-05, 6.168100000000093e-05, 6.162499999999918e-05, 6.173699999999921e-05, 6.236100000000036e-05, 6.204199999999827e-05, 6.166700000000136e-05, 6.223600000000024e-05, 6.211100000000011e-05, 6.15690000000009e-05, 6.180500000000158e-05, 6.230500000000208e-05, 6.162499999999918e-05, 6.154200000000123e-05, 6.191700000000161e-05, 6.240300000000254e-05, 6.202800000000216e-05, 6.187499999999943e-05, 6.162499999999918e-05, 6.180600000000105e-05, 6.234700000000079e-05, 6.162499999999918e-05, 6.154200000000123e-05, 6.187499999999943e-05, 6.237499999999993e-05, 6.198599999999999e-05, 6.180500000000158e-05, 6.213899999999925e-05, 6.24439999999983e-05, 6.172200000000017e-05, 6.191700000000161e-05, 6.22080000000011e-05, 6.165299999999832e-05, 6.192999999999824e-05, 6.166699999999789e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.255" endtime="20201117 14:47:16.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.250" endtime="20201117 14:47:16.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.260" endtime="20201117 14:47:16.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.263" endtime="20201117 14:47:16.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.262" endtime="20201117 14:47:16.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.258" endtime="20201117 14:47:16.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.889" endtime="20201117 14:47:16.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.887" endtime="20201117 14:47:16.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.886" endtime="20201117 14:47:16.285"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.287" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.296" endtime="20201117 14:47:16.315"></status>
</kw>
<msg timestamp="20201117 14:47:16.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.294" endtime="20201117 14:47:16.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.317" endtime="20201117 14:47:16.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.320" endtime="20201117 14:47:16.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.291" endtime="20201117 14:47:16.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.289" endtime="20201117 14:47:16.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.329" endtime="20201117 14:47:16.616"></status>
</kw>
<msg timestamp="20201117 14:47:16.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023286625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023349486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.327" endtime="20201117 14:47:16.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023286625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023349486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.620" endtime="20201117 14:47:16.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.629" endtime="20201117 14:47:16.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.325" endtime="20201117 14:47:16.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.323" endtime="20201117 14:47:16.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.636" level="INFO">${RESULT} = [{'time': 0.023349486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.286100000000086e-05, 'source_diff': 6.286100000000086e-05}, {'time': 0.023426472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:16.633" endtime="20201117 14:47:16.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.651" level="INFO">${ACCURACY} = {'diff': [6.286100000000086e-05, 6.316599999999992e-05, 6.258300000000147e-05, 6.329199999999952e-05, 6.341600000000017e-05, 6.268099999999846e-05, 6.28340000000012e-05, 6.255599999999834e-05, 6.27779...</msg>
<status status="PASS" starttime="20201117 14:47:16.637" endtime="20201117 14:47:16.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.656" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.655" endtime="20201117 14:47:16.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.659" level="INFO">VALUE: [6.286100000000086e-05, 6.316599999999992e-05, 6.258300000000147e-05, 6.329199999999952e-05, 6.341600000000017e-05, 6.268099999999846e-05, 6.28340000000012e-05, 6.255599999999834e-05, 6.277799999999945e-05, 6.337499999999746e-05, 6.320900000000157e-05, 6.272200000000117e-05, 6.311199999999711e-05, 6.28340000000012e-05, 6.281900000000215e-05, 6.334800000000126e-05, 6.267999999999899e-05, 6.262500000000018e-05, 6.261099999999714e-05, 6.266599999999942e-05, 6.279199999999902e-05, 6.273599999999727e-05, 6.338899999999703e-05, 6.337500000000093e-05, 6.32500000000008e-05, 6.345800000000235e-05, 6.315299999999982e-05, 6.26950000000015e-05, 6.257000000000137e-05, 6.324999999999734e-05, 6.259800000000051e-05, 6.266699999999889e-05, 6.312500000000068e-05, 6.354199999999977e-05, 6.286200000000033e-05, 6.267999999999899e-05, 6.337500000000093e-05, 6.279099999999954e-05, 6.351400000000063e-05, 6.259699999999757e-05, 6.266599999999942e-05, 6.263899999999975e-05, 6.27080000000016e-05, 6.30560000000023e-05, 6.27500000000003e-05, 6.309700000000154e-05, 6.279200000000248e-05, 6.251399999999963e-05, 6.320900000000157e-05, 6.254099999999929e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.657" endtime="20201117 14:47:16.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.652" endtime="20201117 14:47:16.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.663" endtime="20201117 14:47:16.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.666" endtime="20201117 14:47:16.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.664" endtime="20201117 14:47:16.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.661" endtime="20201117 14:47:16.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.288" endtime="20201117 14:47:16.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.286" endtime="20201117 14:47:16.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.285" endtime="20201117 14:47:16.687"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.690" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.698" endtime="20201117 14:47:16.717"></status>
</kw>
<msg timestamp="20201117 14:47:16.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.697" endtime="20201117 14:47:16.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.719" endtime="20201117 14:47:16.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.722" endtime="20201117 14:47:16.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.694" endtime="20201117 14:47:16.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.692" endtime="20201117 14:47:16.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.731" endtime="20201117 14:47:17.018"></status>
</kw>
<msg timestamp="20201117 14:47:17.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.729" endtime="20201117 14:47:17.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.022" endtime="20201117 14:47:17.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.030" endtime="20201117 14:47:17.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.727" endtime="20201117 14:47:17.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.725" endtime="20201117 14:47:17.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.037" level="INFO">${RESULT} = [{'time': 0.022342347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.451399999999816e-05, 'source_diff': 6.451399999999816e-05}, {'time': 0.022419347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:17.034" endtime="20201117 14:47:17.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.051" level="INFO">${ACCURACY} = {'diff': [6.451399999999816e-05, 6.363900000000075e-05, 6.399999999999809e-05, 6.380600000000305e-05, 6.448599999999902e-05, 6.413900000000125e-05, 6.430600000000009e-05, 6.366699999999989e-05, 6.3792...</msg>
<status status="PASS" starttime="20201117 14:47:17.038" endtime="20201117 14:47:17.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.056" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.055" endtime="20201117 14:47:17.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.059" level="INFO">VALUE: [6.451399999999816e-05, 6.363900000000075e-05, 6.399999999999809e-05, 6.380600000000305e-05, 6.448599999999902e-05, 6.413900000000125e-05, 6.430600000000009e-05, 6.366699999999989e-05, 6.379200000000002e-05, 6.436100000000236e-05, 6.372200000000217e-05, 6.380500000000011e-05, 6.390300000000057e-05, 6.416600000000092e-05, 6.361200000000108e-05, 6.3889000000001e-05, 6.362500000000118e-05, 6.44020000000016e-05, 6.399999999999809e-05, 6.412499999999821e-05, 6.430500000000061e-05, 6.418000000000049e-05, 6.436099999999889e-05, 6.429200000000052e-05, 6.368099999999946e-05, 6.430600000000009e-05, 6.40699999999994e-05, 6.441699999999717e-05, 6.359700000000204e-05, 6.363900000000075e-05, 6.402700000000122e-05, 6.448599999999902e-05, 6.415300000000082e-05, 6.399999999999809e-05, 6.372300000000164e-05, 6.42639999999979e-05, 6.44159999999977e-05, 6.366600000000042e-05, 6.393000000000024e-05, 6.417999999999702e-05, 6.393000000000024e-05, 6.387500000000143e-05, 6.404200000000027e-05, 6.399999999999809e-05, 6.37089999999986e-05, 6.423600000000224e-05, 6.418099999999996e-05, 6.411099999999864e-05, 6.437500000000193e-05, 6.444499999999978e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.057" endtime="20201117 14:47:17.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.052" endtime="20201117 14:47:17.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.062" endtime="20201117 14:47:17.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.065" endtime="20201117 14:47:17.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.064" endtime="20201117 14:47:17.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.060" endtime="20201117 14:47:17.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.690" endtime="20201117 14:47:17.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.688" endtime="20201117 14:47:17.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.688" endtime="20201117 14:47:17.086"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.089" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.098" endtime="20201117 14:47:17.117"></status>
</kw>
<msg timestamp="20201117 14:47:17.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.096" endtime="20201117 14:47:17.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.119" endtime="20201117 14:47:17.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.121" endtime="20201117 14:47:17.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.093" endtime="20201117 14:47:17.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.091" endtime="20201117 14:47:17.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.131" endtime="20201117 14:47:17.417"></status>
</kw>
<msg timestamp="20201117 14:47:17.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.129" endtime="20201117 14:47:17.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.422" endtime="20201117 14:47:17.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.431" endtime="20201117 14:47:17.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.127" endtime="20201117 14:47:17.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.125" endtime="20201117 14:47:17.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.438" level="INFO">${RESULT} = [{'time': 0.022832417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.468100000000046e-05, 'source_diff': 6.468100000000046e-05}, {'time': 0.022910431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:17.434" endtime="20201117 14:47:17.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.452" level="INFO">${ACCURACY} = {'diff': [6.468100000000046e-05, 6.494499999999681e-05, 6.511099999999964e-05, 6.47089999999996e-05, 6.511099999999964e-05, 6.541600000000217e-05, 6.504099999999832e-05, 6.516600000000192e-05, 6.48750...</msg>
<status status="PASS" starttime="20201117 14:47:17.439" endtime="20201117 14:47:17.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.456" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.455" endtime="20201117 14:47:17.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.459" level="INFO">VALUE: [6.468100000000046e-05, 6.494499999999681e-05, 6.511099999999964e-05, 6.47089999999996e-05, 6.511099999999964e-05, 6.541600000000217e-05, 6.504099999999832e-05, 6.516600000000192e-05, 6.487500000000243e-05, 6.493000000000124e-05, 6.461099999999914e-05, 6.549999999999959e-05, 6.505600000000084e-05, 6.530600000000109e-05, 6.4889000000002e-05, 6.498599999999952e-05, 6.523599999999977e-05, 6.486100000000286e-05, 6.506999999999694e-05, 6.544500000000078e-05, 6.530500000000161e-05, 6.50830000000005e-05, 6.487499999999896e-05, 6.547200000000045e-05, 6.491600000000167e-05, 6.487500000000243e-05, 6.498599999999952e-05, 6.531900000000118e-05, 6.537499999999946e-05, 6.479100000000154e-05, 6.487499999999896e-05, 6.54029999999986e-05, 6.505600000000084e-05, 6.536099999999989e-05, 6.463900000000175e-05, 6.465299999999785e-05, 6.548600000000002e-05, 6.524999999999934e-05, 6.529200000000152e-05, 6.462499999999871e-05, 6.486099999999939e-05, 6.517999999999802e-05, 6.455500000000086e-05, 6.468100000000046e-05, 6.520799999999716e-05, 6.49020000000021e-05, 6.468000000000099e-05, 6.466599999999795e-05, 6.474999999999884e-05, 6.498599999999952e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.457" endtime="20201117 14:47:17.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.453" endtime="20201117 14:47:17.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.462" endtime="20201117 14:47:17.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.466" endtime="20201117 14:47:17.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.464" endtime="20201117 14:47:17.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.460" endtime="20201117 14:47:17.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.090" endtime="20201117 14:47:17.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.088" endtime="20201117 14:47:17.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.087" endtime="20201117 14:47:17.487"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.490" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.498" endtime="20201117 14:47:17.518"></status>
</kw>
<msg timestamp="20201117 14:47:17.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.497" endtime="20201117 14:47:17.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.519" endtime="20201117 14:47:17.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.522" endtime="20201117 14:47:17.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.494" endtime="20201117 14:47:17.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.492" endtime="20201117 14:47:17.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.531" endtime="20201117 14:47:17.817"></status>
</kw>
<msg timestamp="20201117 14:47:17.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022784222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.529" endtime="20201117 14:47:17.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022784222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.822" endtime="20201117 14:47:17.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.830" endtime="20201117 14:47:17.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.527" endtime="20201117 14:47:17.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.525" endtime="20201117 14:47:17.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.837" level="INFO">${RESULT} = [{'time': 0.022850319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.609700000000107e-05, 'source_diff': 6.609700000000107e-05}, {'time': 0.022929333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:17.834" endtime="20201117 14:47:17.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.851" level="INFO">${ACCURACY} = {'diff': [6.609700000000107e-05, 6.588899999999953e-05, 6.59159999999992e-05, 6.641700000000264e-05, 6.60969999999976e-05, 6.594399999999834e-05, 6.597200000000095e-05, 6.623600000000077e-05, 6.584700...</msg>
<status status="PASS" starttime="20201117 14:47:17.838" endtime="20201117 14:47:17.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.856" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.854" endtime="20201117 14:47:17.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.858" level="INFO">VALUE: [6.609700000000107e-05, 6.588899999999953e-05, 6.59159999999992e-05, 6.641700000000264e-05, 6.60969999999976e-05, 6.594399999999834e-05, 6.597200000000095e-05, 6.623600000000077e-05, 6.584700000000082e-05, 6.594499999999781e-05, 6.554200000000177e-05, 6.57359999999968e-05, 6.636100000000089e-05, 6.618100000000196e-05, 6.636200000000037e-05, 6.617999999999902e-05, 6.617999999999902e-05, 6.627799999999948e-05, 6.590199999999963e-05, 6.554099999999882e-05, 6.636100000000089e-05, 6.555499999999839e-05, 6.611100000000064e-05, 6.588899999999953e-05, 6.586100000000039e-05, 6.600000000000009e-05, 6.637500000000046e-05, 6.59029999999991e-05, 6.645800000000188e-05, 6.629199999999905e-05, 6.643100000000221e-05, 6.62090000000011e-05, 6.618099999999849e-05, 6.60700000000014e-05, 6.572300000000017e-05, 6.573600000000027e-05, 6.574999999999984e-05, 6.648600000000102e-05, 6.62639999999999e-05, 6.587499999999996e-05, 6.586100000000039e-05, 6.584699999999735e-05, 6.580599999999812e-05, 6.600000000000009e-05, 6.59029999999991e-05, 6.641699999999917e-05, 6.568099999999799e-05, 6.573600000000027e-05, 6.563899999999928e-05, 6.642999999999927e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.857" endtime="20201117 14:47:17.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.852" endtime="20201117 14:47:17.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.862" endtime="20201117 14:47:17.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.865" endtime="20201117 14:47:17.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.864" endtime="20201117 14:47:17.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.860" endtime="20201117 14:47:17.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.490" endtime="20201117 14:47:17.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.489" endtime="20201117 14:47:17.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.488" endtime="20201117 14:47:17.886"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.889" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.897" endtime="20201117 14:47:17.918"></status>
</kw>
<msg timestamp="20201117 14:47:17.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.896" endtime="20201117 14:47:17.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.919" endtime="20201117 14:47:17.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.922" endtime="20201117 14:47:17.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.893" endtime="20201117 14:47:17.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.891" endtime="20201117 14:47:17.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.931" endtime="20201117 14:47:18.218"></status>
</kw>
<msg timestamp="20201117 14:47:18.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023310972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023378278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.930" endtime="20201117 14:47:18.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023310972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023378278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.222" endtime="20201117 14:47:18.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.231" endtime="20201117 14:47:18.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.927" endtime="20201117 14:47:18.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.925" endtime="20201117 14:47:18.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.238" level="INFO">${RESULT} = [{'time': 0.023378278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.730599999999962e-05, 'source_diff': 6.730599999999962e-05}, {'time': 0.023458306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:18.234" endtime="20201117 14:47:18.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.253" level="INFO">${ACCURACY} = {'diff': [6.730599999999962e-05, 6.712500000000121e-05, 6.68480000000013e-05, 6.687500000000096e-05, 6.747199999999898e-05, 6.687500000000096e-05, 6.72359999999983e-05, 6.679100000000007e-05, 6.738900...</msg>
<status status="PASS" starttime="20201117 14:47:18.239" endtime="20201117 14:47:18.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.258" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.256" endtime="20201117 14:47:18.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.261" level="INFO">VALUE: [6.730599999999962e-05, 6.712500000000121e-05, 6.68480000000013e-05, 6.687500000000096e-05, 6.747199999999898e-05, 6.687500000000096e-05, 6.72359999999983e-05, 6.679100000000007e-05, 6.738900000000103e-05, 6.694399999999934e-05, 6.698599999999805e-05, 6.70419999999998e-05, 6.687499999999749e-05, 6.662500000000071e-05, 6.666699999999942e-05, 6.697199999999848e-05, 6.743099999999974e-05, 6.730599999999962e-05, 6.750000000000159e-05, 6.655599999999887e-05, 6.731899999999971e-05, 6.73480000000018e-05, 6.661099999999767e-05, 6.723600000000177e-05, 6.656899999999896e-05, 6.698600000000152e-05, 6.698600000000152e-05, 6.749999999999812e-05, 6.712500000000121e-05, 6.72220000000022e-05, 6.679199999999955e-05, 6.659799999999758e-05, 6.699999999999762e-05, 6.744499999999931e-05, 6.677799999999998e-05, 6.662500000000071e-05, 6.724999999999787e-05, 6.659800000000105e-05, 6.654200000000277e-05, 6.750000000000159e-05, 6.712500000000121e-05, 6.7277000000001e-05, 6.701399999999719e-05, 6.743000000000027e-05, 6.652799999999973e-05, 6.730500000000014e-05, 6.751399999999769e-05, 6.67640000000004e-05, 6.659700000000157e-05, 6.684700000000182e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.259" endtime="20201117 14:47:18.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.254" endtime="20201117 14:47:18.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.264" endtime="20201117 14:47:18.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.267" endtime="20201117 14:47:18.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.266" endtime="20201117 14:47:18.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.262" endtime="20201117 14:47:18.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.890" endtime="20201117 14:47:18.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.888" endtime="20201117 14:47:18.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.887" endtime="20201117 14:47:18.289"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.291" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.299" endtime="20201117 14:47:18.319"></status>
</kw>
<msg timestamp="20201117 14:47:18.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.298" endtime="20201117 14:47:18.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.321" endtime="20201117 14:47:18.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.324" endtime="20201117 14:47:18.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.295" endtime="20201117 14:47:18.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.293" endtime="20201117 14:47:18.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.333" endtime="20201117 14:47:18.620"></status>
</kw>
<msg timestamp="20201117 14:47:18.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022230167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.331" endtime="20201117 14:47:18.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022230167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.624" endtime="20201117 14:47:18.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.633" endtime="20201117 14:47:18.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.329" endtime="20201117 14:47:18.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.327" endtime="20201117 14:47:18.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.640" level="INFO">${RESULT} = [{'time': 0.022298556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.838900000000203e-05, 'source_diff': 6.838900000000203e-05}, {'time': 0.022379597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:18.636" endtime="20201117 14:47:18.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.654" level="INFO">${ACCURACY} = {'diff': [6.838900000000203e-05, 6.770799999999966e-05, 6.80969999999996e-05, 6.851399999999869e-05, 6.808299999999656e-05, 6.791599999999773e-05, 6.755499999999692e-05, 6.787499999999849e-05, 6.82360...</msg>
<status status="PASS" starttime="20201117 14:47:18.641" endtime="20201117 14:47:18.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.659" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.658" endtime="20201117 14:47:18.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.661" level="INFO">VALUE: [6.838900000000203e-05, 6.770799999999966e-05, 6.80969999999996e-05, 6.851399999999869e-05, 6.808299999999656e-05, 6.791599999999773e-05, 6.755499999999692e-05, 6.787499999999849e-05, 6.823600000000277e-05, 6.772199999999923e-05, 6.798599999999905e-05, 6.79030000000011e-05, 6.837499999999899e-05, 6.851400000000216e-05, 6.849999999999912e-05, 6.77229999999987e-05, 6.80420000000008e-05, 6.82229999999992e-05, 6.769400000000009e-05, 6.836099999999942e-05, 6.848599999999955e-05, 6.84030000000016e-05, 6.77359999999988e-05, 6.770800000000313e-05, 6.766700000000042e-05, 6.805600000000037e-05, 6.805600000000037e-05, 6.791700000000067e-05, 6.795900000000285e-05, 6.791700000000067e-05, 6.786099999999892e-05, 6.768099999999999e-05, 6.829200000000105e-05, 6.774999999999837e-05, 6.78480000000023e-05, 6.845800000000041e-05, 6.788900000000153e-05, 6.804100000000132e-05, 6.826399999999844e-05, 6.795799999999991e-05, 6.829200000000105e-05, 6.766700000000042e-05, 6.850000000000259e-05, 6.799999999999862e-05, 6.763900000000128e-05, 6.818100000000049e-05, 6.798600000000252e-05, 6.82359999999993e-05, 6.829200000000105e-05, 6.773700000000174e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.660" endtime="20201117 14:47:18.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.655" endtime="20201117 14:47:18.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.665" endtime="20201117 14:47:18.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.668" endtime="20201117 14:47:18.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.667" endtime="20201117 14:47:18.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.663" endtime="20201117 14:47:18.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.292" endtime="20201117 14:47:18.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.290" endtime="20201117 14:47:18.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.289" endtime="20201117 14:47:18.689"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.692" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.700" endtime="20201117 14:47:18.720"></status>
</kw>
<msg timestamp="20201117 14:47:18.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.699" endtime="20201117 14:47:18.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.721" endtime="20201117 14:47:18.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.724" endtime="20201117 14:47:18.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.696" endtime="20201117 14:47:18.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.694" endtime="20201117 14:47:18.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.733" endtime="20201117 14:47:19.020"></status>
</kw>
<msg timestamp="20201117 14:47:19.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.731" endtime="20201117 14:47:19.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.024" endtime="20201117 14:47:19.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.039" endtime="20201117 14:47:19.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.729" endtime="20201117 14:47:19.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.727" endtime="20201117 14:47:19.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.046" level="INFO">${RESULT} = [{'time': 0.022437708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888899999999906e-05, 'source_diff': 6.888899999999906e-05}, {'time': 0.022521708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.043" endtime="20201117 14:47:19.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.060" level="INFO">${ACCURACY} = {'diff': [6.888899999999906e-05, 6.931900000000171e-05, 6.937499999999999e-05, 6.919400000000159e-05, 6.89030000000021e-05, 6.945800000000141e-05, 6.951399999999969e-05, 6.915299999999888e-05, 6.86249...</msg>
<status status="PASS" starttime="20201117 14:47:19.047" endtime="20201117 14:47:19.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.065" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.064" endtime="20201117 14:47:19.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.067" level="INFO">VALUE: [6.888899999999906e-05, 6.931900000000171e-05, 6.937499999999999e-05, 6.919400000000159e-05, 6.89030000000021e-05, 6.945800000000141e-05, 6.951399999999969e-05, 6.915299999999888e-05, 6.862499999999924e-05, 6.92640000000029e-05, 6.886099999999992e-05, 6.918100000000149e-05, 6.855600000000087e-05, 6.923699999999977e-05, 6.87909999999986e-05, 6.912499999999974e-05, 6.926299999999996e-05, 6.899999999999962e-05, 6.855500000000139e-05, 6.948600000000055e-05, 6.855499999999792e-05, 6.912499999999974e-05, 6.920800000000116e-05, 6.858299999999706e-05, 6.862499999999924e-05, 6.922299999999673e-05, 6.877800000000198e-05, 6.855600000000087e-05, 6.927799999999901e-05, 6.898699999999952e-05, 6.877799999999851e-05, 6.901399999999919e-05, 6.937499999999999e-05, 6.899999999999962e-05, 6.911100000000017e-05, 6.945799999999794e-05, 6.886099999999992e-05, 6.865300000000185e-05, 6.866700000000142e-05, 6.880599999999765e-05, 6.873699999999927e-05, 6.893099999999777e-05, 6.865200000000238e-05, 6.950000000000012e-05, 6.915300000000235e-05, 6.888899999999906e-05, 6.951399999999969e-05, 6.869400000000109e-05, 6.890200000000263e-05, 6.936100000000042e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.066" endtime="20201117 14:47:19.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.061" endtime="20201117 14:47:19.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.070" endtime="20201117 14:47:19.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.074" endtime="20201117 14:47:19.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.072" endtime="20201117 14:47:19.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.069" endtime="20201117 14:47:19.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.693" endtime="20201117 14:47:19.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.691" endtime="20201117 14:47:19.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.690" endtime="20201117 14:47:19.095"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.098" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.106" endtime="20201117 14:47:19.126"></status>
</kw>
<msg timestamp="20201117 14:47:19.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.105" endtime="20201117 14:47:19.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.128" endtime="20201117 14:47:19.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.130" endtime="20201117 14:47:19.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.102" endtime="20201117 14:47:19.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.100" endtime="20201117 14:47:19.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.140" endtime="20201117 14:47:19.426"></status>
</kw>
<msg timestamp="20201117 14:47:19.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.138" endtime="20201117 14:47:19.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.431" endtime="20201117 14:47:19.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.439" endtime="20201117 14:47:19.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.135" endtime="20201117 14:47:19.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.134" endtime="20201117 14:47:19.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.447" level="INFO">${RESULT} = [{'time': 0.022492875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.994399999999887e-05, 'source_diff': 6.994399999999887e-05}, {'time': 0.022575889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.443" endtime="20201117 14:47:19.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.461" level="INFO">${ACCURACY} = {'diff': [6.994399999999887e-05, 6.962499999999677e-05, 6.998600000000105e-05, 7.031999999999872e-05, 6.998600000000105e-05, 7.012500000000074e-05, 6.984799999999736e-05, 7.043099999999927e-05, 7.0097...</msg>
<status status="PASS" starttime="20201117 14:47:19.448" endtime="20201117 14:47:19.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.466" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.465" endtime="20201117 14:47:19.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.469" level="INFO">VALUE: [6.994399999999887e-05, 6.962499999999677e-05, 6.998600000000105e-05, 7.031999999999872e-05, 6.998600000000105e-05, 7.012500000000074e-05, 6.984799999999736e-05, 7.043099999999927e-05, 7.00979999999976e-05, 7.023700000000077e-05, 6.980499999999917e-05, 6.991599999999973e-05, 7.030499999999967e-05, 6.975000000000037e-05, 7.031899999999924e-05, 7.044399999999937e-05, 7.049999999999765e-05, 7.018099999999902e-05, 7.023599999999783e-05, 7.004199999999933e-05, 7.019500000000206e-05, 6.980599999999865e-05, 7.043099999999927e-05, 6.97360000000008e-05, 6.956899999999849e-05, 7.037500000000099e-05, 6.983299999999831e-05, 6.966699999999895e-05, 7.031900000000271e-05, 7.01109999999977e-05, 7.02910000000001e-05, 7.02499999999974e-05, 6.962500000000024e-05, 7.04169999999997e-05, 6.987500000000049e-05, 6.949999999999665e-05, 7.00559999999989e-05, 6.962500000000024e-05, 7.00420000000028e-05, 7.048599999999808e-05, 6.96109999999972e-05, 6.970899999999766e-05, 7.016699999999945e-05, 7.034799999999786e-05, 7.04299999999998e-05, 6.995799999999844e-05, 6.958300000000153e-05, 7.017999999999955e-05, 7.004099999999985e-05, 6.984699999999788e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.467" endtime="20201117 14:47:19.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.462" endtime="20201117 14:47:19.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.472" endtime="20201117 14:47:19.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.476" endtime="20201117 14:47:19.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.474" endtime="20201117 14:47:19.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.470" endtime="20201117 14:47:19.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.098" endtime="20201117 14:47:19.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.097" endtime="20201117 14:47:19.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.096" endtime="20201117 14:47:19.497"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.499" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.508" endtime="20201117 14:47:19.529"></status>
</kw>
<msg timestamp="20201117 14:47:19.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.506" endtime="20201117 14:47:19.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.530" endtime="20201117 14:47:19.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.534" endtime="20201117 14:47:19.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.503" endtime="20201117 14:47:19.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.501" endtime="20201117 14:47:19.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.543" endtime="20201117 14:47:19.828"></status>
</kw>
<msg timestamp="20201117 14:47:19.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023284236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023355208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.541" endtime="20201117 14:47:19.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023284236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023355208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.832" endtime="20201117 14:47:19.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.841" endtime="20201117 14:47:19.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.539" endtime="20201117 14:47:19.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.537" endtime="20201117 14:47:19.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.848" level="INFO">${RESULT} = [{'time': 0.023355208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.097199999999901e-05, 'source_diff': 7.097199999999901e-05}, {'time': 0.023442236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.844" endtime="20201117 14:47:19.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.863" level="INFO">${ACCURACY} = {'diff': [7.097199999999901e-05, 7.076400000000094e-05, 7.094399999999987e-05, 7.120799999999969e-05, 7.086099999999845e-05, 7.134699999999938e-05, 7.065300000000038e-05, 7.101400000000119e-05, 7.1291...</msg>
<status status="PASS" starttime="20201117 14:47:19.849" endtime="20201117 14:47:19.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.868" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.867" endtime="20201117 14:47:19.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.870" level="INFO">VALUE: [7.097199999999901e-05, 7.076400000000094e-05, 7.094399999999987e-05, 7.120799999999969e-05, 7.086099999999845e-05, 7.134699999999938e-05, 7.065300000000038e-05, 7.101400000000119e-05, 7.129199999999711e-05, 7.081999999999922e-05, 7.066699999999995e-05, 7.079200000000008e-05, 7.077800000000051e-05, 7.152800000000126e-05, 7.150000000000212e-05, 7.111100000000217e-05, 7.07360000000018e-05, 7.06109999999982e-05, 7.104100000000085e-05, 7.062500000000124e-05, 7.104200000000033e-05, 7.109699999999913e-05, 7.082000000000269e-05, 7.097199999999901e-05, 7.144500000000331e-05, 7.129200000000058e-05, 7.130600000000015e-05, 7.054199999999983e-05, 7.073700000000127e-05, 7.072299999999823e-05, 7.09300000000003e-05, 7.122200000000273e-05, 7.145799999999994e-05, 7.118000000000055e-05, 7.119400000000012e-05, 7.134799999999886e-05, 7.104200000000033e-05, 7.138900000000156e-05, 7.147199999999951e-05, 7.06109999999982e-05, 7.10559999999999e-05, 7.077800000000051e-05, 7.068099999999952e-05, 7.144400000000037e-05, 7.097299999999848e-05, 7.109699999999913e-05, 7.140199999999819e-05, 7.080500000000017e-05, 7.09300000000003e-05, 7.07910000000006e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.869" endtime="20201117 14:47:19.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.864" endtime="20201117 14:47:19.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.873" endtime="20201117 14:47:19.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.877" endtime="20201117 14:47:19.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.875" endtime="20201117 14:47:19.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.872" endtime="20201117 14:47:19.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.500" endtime="20201117 14:47:19.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.498" endtime="20201117 14:47:19.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.497" endtime="20201117 14:47:19.898"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.900" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.909" endtime="20201117 14:47:19.929"></status>
</kw>
<msg timestamp="20201117 14:47:19.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.908" endtime="20201117 14:47:19.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.931" endtime="20201117 14:47:19.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.933" endtime="20201117 14:47:19.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.905" endtime="20201117 14:47:19.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.903" endtime="20201117 14:47:19.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.943" endtime="20201117 14:47:20.228"></status>
</kw>
<msg timestamp="20201117 14:47:20.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022768639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.941" endtime="20201117 14:47:20.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022768639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.233" endtime="20201117 14:47:20.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.241" endtime="20201117 14:47:20.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.938" endtime="20201117 14:47:20.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.937" endtime="20201117 14:47:20.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:20.248" level="INFO">${RESULT} = [{'time': 0.022840542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.190299999999816e-05, 'source_diff': 7.190299999999816e-05}, {'time': 0.022928556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:20.245" endtime="20201117 14:47:20.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.262" level="INFO">${ACCURACY} = {'diff': [7.190299999999816e-05, 7.199999999999915e-05, 7.155500000000092e-05, 7.19170000000012e-05, 7.21109999999997e-05, 7.159699999999963e-05, 7.202800000000176e-05, 7.163900000000181e-05, 7.176399...</msg>
<status status="PASS" starttime="20201117 14:47:20.249" endtime="20201117 14:47:20.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.266" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.265" endtime="20201117 14:47:20.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.269" level="INFO">VALUE: [7.190299999999816e-05, 7.199999999999915e-05, 7.155500000000092e-05, 7.19170000000012e-05, 7.21109999999997e-05, 7.159699999999963e-05, 7.202800000000176e-05, 7.163900000000181e-05, 7.176399999999847e-05, 7.21109999999997e-05, 7.236099999999995e-05, 7.216700000000145e-05, 7.219499999999712e-05, 7.176400000000194e-05, 7.248600000000008e-05, 7.233400000000029e-05, 7.22499999999994e-05, 7.248600000000008e-05, 7.229199999999811e-05, 7.211200000000265e-05, 7.19439999999974e-05, 7.19439999999974e-05, 7.173599999999933e-05, 7.16109999999992e-05, 7.172199999999976e-05, 7.215300000000188e-05, 7.188900000000206e-05, 7.244500000000084e-05, 7.237499999999952e-05, 7.233300000000081e-05, 7.191699999999773e-05, 7.218099999999755e-05, 7.204200000000133e-05, 7.162499999999877e-05, 7.177799999999804e-05, 7.24300000000018e-05, 7.195899999999991e-05, 7.219400000000112e-05, 7.231900000000124e-05, 7.19439999999974e-05, 7.202699999999881e-05, 7.166599999999801e-05, 7.176399999999847e-05, 7.202799999999829e-05, 7.218100000000102e-05, 7.21109999999997e-05, 7.201399999999872e-05, 7.1584000000003e-05, 7.201400000000219e-05, 7.229199999999811e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.268" endtime="20201117 14:47:20.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.263" endtime="20201117 14:47:20.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.272" endtime="20201117 14:47:20.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.276" endtime="20201117 14:47:20.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.274" endtime="20201117 14:47:20.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.270" endtime="20201117 14:47:20.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.901" endtime="20201117 14:47:20.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.899" endtime="20201117 14:47:20.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.898" endtime="20201117 14:47:20.298"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.300" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.309" endtime="20201117 14:47:20.328"></status>
</kw>
<msg timestamp="20201117 14:47:20.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.307" endtime="20201117 14:47:20.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.330" endtime="20201117 14:47:20.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.332" endtime="20201117 14:47:20.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.304" endtime="20201117 14:47:20.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.302" endtime="20201117 14:47:20.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.342" endtime="20201117 14:47:20.628"></status>
</kw>
<msg timestamp="20201117 14:47:20.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022864097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022936736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.340" endtime="20201117 14:47:20.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022864097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022936736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.632" endtime="20201117 14:47:20.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.641" endtime="20201117 14:47:20.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.337" endtime="20201117 14:47:20.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.336" endtime="20201117 14:47:20.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:20.648" level="INFO">${RESULT} = [{'time': 0.022936736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263899999999934e-05, 'source_diff': 7.263899999999934e-05}, {'time': 0.02302475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:20.644" endtime="20201117 14:47:20.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.662" level="INFO">${ACCURACY} = {'diff': [7.263899999999934e-05, 7.266699999999848e-05, 7.287500000000002e-05, 7.262499999999977e-05, 7.34309999999988e-05, 7.305599999999843e-05, 7.331899999999877e-05, 7.336200000000043e-05, 7.29580...</msg>
<status status="PASS" starttime="20201117 14:47:20.649" endtime="20201117 14:47:20.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.666" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.665" endtime="20201117 14:47:20.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.669" level="INFO">VALUE: [7.263899999999934e-05, 7.266699999999848e-05, 7.287500000000002e-05, 7.262499999999977e-05, 7.34309999999988e-05, 7.305599999999843e-05, 7.331899999999877e-05, 7.336200000000043e-05, 7.295800000000144e-05, 7.269499999999762e-05, 7.277700000000303e-05, 7.319399999999865e-05, 7.334700000000138e-05, 7.295800000000144e-05, 7.340299999999966e-05, 7.302799999999929e-05, 7.268099999999805e-05, 7.266699999999848e-05, 7.307000000000147e-05, 7.288899999999959e-05, 7.330600000000215e-05, 7.255599999999793e-05, 7.272300000000023e-05, 7.266700000000195e-05, 7.297300000000048e-05, 7.312500000000027e-05, 7.316599999999951e-05, 7.32500000000004e-05, 7.336100000000095e-05, 7.26110000000002e-05, 7.344400000000237e-05, 7.31110000000007e-05, 7.316699999999898e-05, 7.290300000000263e-05, 7.256899999999802e-05, 7.287500000000002e-05, 7.348600000000108e-05, 7.336100000000095e-05, 7.251400000000269e-05, 7.337500000000052e-05, 7.269400000000162e-05, 7.290199999999969e-05, 7.317999999999908e-05, 7.348600000000108e-05, 7.273600000000033e-05, 7.309700000000113e-05, 7.331900000000224e-05, 7.305499999999895e-05, 7.312500000000027e-05, 7.327799999999954e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.667" endtime="20201117 14:47:20.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.663" endtime="20201117 14:47:20.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.672" endtime="20201117 14:47:20.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.676" endtime="20201117 14:47:20.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.674" endtime="20201117 14:47:20.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.671" endtime="20201117 14:47:20.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.301" endtime="20201117 14:47:20.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.299" endtime="20201117 14:47:20.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.298" endtime="20201117 14:47:20.697"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.700" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.708" endtime="20201117 14:47:20.727"></status>
</kw>
<msg timestamp="20201117 14:47:20.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.706" endtime="20201117 14:47:20.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.729" endtime="20201117 14:47:20.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.731" endtime="20201117 14:47:20.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.704" endtime="20201117 14:47:20.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.702" endtime="20201117 14:47:20.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.741" endtime="20201117 14:47:21.028"></status>
</kw>
<msg timestamp="20201117 14:47:21.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022330222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.739" endtime="20201117 14:47:21.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022330222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.032" endtime="20201117 14:47:21.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.041" endtime="20201117 14:47:21.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.736" endtime="20201117 14:47:21.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.735" endtime="20201117 14:47:21.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.048" level="INFO">${RESULT} = [{'time': 0.022330222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.441600000000076e-05, 'source_diff': 7.441600000000076e-05}, {'time': 0.022419236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:21.044" endtime="20201117 14:47:21.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.061" level="INFO">${ACCURACY} = {'diff': [7.441600000000076e-05, 7.443000000000033e-05, 7.404099999999691e-05, 7.391699999999973e-05, 7.366699999999948e-05, 7.369499999999862e-05, 7.373599999999786e-05, 7.379199999999961e-05, 7.4000...</msg>
<status status="PASS" starttime="20201117 14:47:21.049" endtime="20201117 14:47:21.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.066" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.065" endtime="20201117 14:47:21.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.069" level="INFO">VALUE: [7.441600000000076e-05, 7.443000000000033e-05, 7.404099999999691e-05, 7.391699999999973e-05, 7.366699999999948e-05, 7.369499999999862e-05, 7.373599999999786e-05, 7.379199999999961e-05, 7.400000000000115e-05, 7.401299999999778e-05, 7.44309999999998e-05, 7.402800000000029e-05, 7.422299999999826e-05, 7.388900000000059e-05, 7.35690000000025e-05, 7.437500000000152e-05, 7.436099999999848e-05, 7.355500000000292e-05, 7.380599999999918e-05, 7.379199999999961e-05, 7.395900000000191e-05, 7.416699999999998e-05, 7.441700000000023e-05, 7.359700000000163e-05, 7.412500000000127e-05, 7.373600000000133e-05, 7.416700000000345e-05, 7.362500000000077e-05, 7.355499999999945e-05, 7.449999999999818e-05, 7.366600000000001e-05, 7.398599999999811e-05, 7.370799999999872e-05, 7.412500000000127e-05, 7.402800000000029e-05, 7.35699999999985e-05, 7.41249999999978e-05, 7.369500000000209e-05, 7.398600000000158e-05, 7.436099999999848e-05, 7.424999999999793e-05, 7.365299999999991e-05, 7.4069999999999e-05, 7.448599999999861e-05, 7.448599999999861e-05, 7.449999999999818e-05, 7.391600000000026e-05, 7.447199999999904e-05, 7.384700000000188e-05, 7.404199999999986e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.067" endtime="20201117 14:47:21.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.062" endtime="20201117 14:47:21.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.072" endtime="20201117 14:47:21.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.076" endtime="20201117 14:47:21.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.074" endtime="20201117 14:47:21.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.071" endtime="20201117 14:47:21.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.700" endtime="20201117 14:47:21.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.698" endtime="20201117 14:47:21.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.698" endtime="20201117 14:47:21.097"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.099" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.108" endtime="20201117 14:47:21.129"></status>
</kw>
<msg timestamp="20201117 14:47:21.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.106" endtime="20201117 14:47:21.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.130" endtime="20201117 14:47:21.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.133" endtime="20201117 14:47:21.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.104" endtime="20201117 14:47:21.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.101" endtime="20201117 14:47:21.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.142" endtime="20201117 14:47:21.429"></status>
</kw>
<msg timestamp="20201117 14:47:21.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023156069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023230667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.141" endtime="20201117 14:47:21.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023156069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023230667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.433" endtime="20201117 14:47:21.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.441" endtime="20201117 14:47:21.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.138" endtime="20201117 14:47:21.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.136" endtime="20201117 14:47:21.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.448" level="INFO">${RESULT} = [{'time': 0.023230667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.459799999999864e-05, 'source_diff': 7.459799999999864e-05}, {'time': 0.023319625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:21.445" endtime="20201117 14:47:21.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.464" level="INFO">${ACCURACY} = {'diff': [7.459799999999864e-05, 7.50830000000001e-05, 7.541700000000123e-05, 7.472300000000223e-05, 7.537499999999905e-05, 7.454200000000036e-05, 7.532000000000025e-05, 7.459799999999864e-05, 7.50129...</msg>
<status status="PASS" starttime="20201117 14:47:21.450" endtime="20201117 14:47:21.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.469" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.467" endtime="20201117 14:47:21.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.471" level="INFO">VALUE: [7.459799999999864e-05, 7.50830000000001e-05, 7.541700000000123e-05, 7.472300000000223e-05, 7.537499999999905e-05, 7.454200000000036e-05, 7.532000000000025e-05, 7.459799999999864e-05, 7.501299999999878e-05, 7.474999999999843e-05, 7.534699999999991e-05, 7.49440000000004e-05, 7.491600000000126e-05, 7.549999999999918e-05, 7.49310000000003e-05, 7.484799999999889e-05, 7.45699999999995e-05, 7.497200000000301e-05, 7.544500000000037e-05, 7.461099999999873e-05, 7.487500000000202e-05, 7.455599999999993e-05, 7.516699999999751e-05, 7.549999999999918e-05, 7.455599999999993e-05, 7.493000000000083e-05, 7.524999999999893e-05, 7.490199999999822e-05, 7.487499999999855e-05, 7.474999999999843e-05, 7.462500000000177e-05, 7.51249999999988e-05, 7.466700000000048e-05, 7.509700000000313e-05, 7.491700000000073e-05, 7.487500000000202e-05, 7.504200000000086e-05, 7.468100000000005e-05, 7.518100000000055e-05, 7.550000000000265e-05, 7.548699999999908e-05, 7.497300000000248e-05, 7.455500000000045e-05, 7.462500000000177e-05, 7.527700000000206e-05, 7.480499999999723e-05, 7.527799999999807e-05, 7.520800000000022e-05, 7.518100000000055e-05, 7.465300000000091e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.470" endtime="20201117 14:47:21.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.465" endtime="20201117 14:47:21.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.475" endtime="20201117 14:47:21.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.479" endtime="20201117 14:47:21.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.477" endtime="20201117 14:47:21.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.473" endtime="20201117 14:47:21.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.100" endtime="20201117 14:47:21.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.098" endtime="20201117 14:47:21.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.097" endtime="20201117 14:47:21.500"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.503" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.511" endtime="20201117 14:47:21.532"></status>
</kw>
<msg timestamp="20201117 14:47:21.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.510" endtime="20201117 14:47:21.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.533" endtime="20201117 14:47:21.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.536" endtime="20201117 14:47:21.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.507" endtime="20201117 14:47:21.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.505" endtime="20201117 14:47:21.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.545" endtime="20201117 14:47:21.831"></status>
</kw>
<msg timestamp="20201117 14:47:21.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.544" endtime="20201117 14:47:21.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.835" endtime="20201117 14:47:21.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.844" endtime="20201117 14:47:21.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.541" endtime="20201117 14:47:21.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.539" endtime="20201117 14:47:21.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.851" level="INFO">${RESULT} = [{'time': 0.022697319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.602699999999935e-05, 'source_diff': 7.602699999999935e-05}, {'time': 0.022789347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:21.847" endtime="20201117 14:47:21.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.865" level="INFO">${ACCURACY} = {'diff': [7.602699999999935e-05, 7.618000000000208e-05, 7.550000000000265e-05, 7.573599999999986e-05, 7.554200000000136e-05, 7.637500000000005e-05, 7.643099999999833e-05, 7.584700000000041e-05, 7.5666...</msg>
<status status="PASS" starttime="20201117 14:47:21.852" endtime="20201117 14:47:21.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.869" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.868" endtime="20201117 14:47:21.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.872" level="INFO">VALUE: [7.602699999999935e-05, 7.618000000000208e-05, 7.550000000000265e-05, 7.573599999999986e-05, 7.554200000000136e-05, 7.637500000000005e-05, 7.643099999999833e-05, 7.584700000000041e-05, 7.566699999999801e-05, 7.624999999999993e-05, 7.555600000000093e-05, 7.598600000000011e-05, 7.554199999999789e-05, 7.600000000000315e-05, 7.586199999999946e-05, 7.568100000000105e-05, 7.637500000000005e-05, 7.602700000000281e-05, 7.619400000000165e-05, 7.566599999999854e-05, 7.629099999999917e-05, 7.597199999999707e-05, 7.615299999999894e-05, 7.623600000000036e-05, 7.584700000000041e-05, 7.645900000000094e-05, 7.583300000000084e-05, 7.558400000000007e-05, 7.650000000000018e-05, 7.624999999999993e-05, 7.641699999999876e-05, 7.641699999999876e-05, 7.566599999999854e-05, 7.616599999999904e-05, 7.619400000000165e-05, 7.591599999999879e-05, 7.599999999999968e-05, 7.591699999999826e-05, 7.645800000000147e-05, 7.613900000000284e-05, 7.620900000000069e-05, 7.641699999999876e-05, 7.630600000000168e-05, 7.598600000000011e-05, 7.55700000000005e-05, 7.58189999999978e-05, 7.586199999999946e-05, 7.573599999999986e-05, 7.618000000000208e-05, 7.591599999999879e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.870" endtime="20201117 14:47:21.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.866" endtime="20201117 14:47:21.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.875" endtime="20201117 14:47:21.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.879" endtime="20201117 14:47:21.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.877" endtime="20201117 14:47:21.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.873" endtime="20201117 14:47:21.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.504" endtime="20201117 14:47:21.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.502" endtime="20201117 14:47:21.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.501" endtime="20201117 14:47:21.900"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.902" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.911" endtime="20201117 14:47:21.931"></status>
</kw>
<msg timestamp="20201117 14:47:21.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.909" endtime="20201117 14:47:21.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.932" endtime="20201117 14:47:21.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.935" endtime="20201117 14:47:21.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.906" endtime="20201117 14:47:21.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.904" endtime="20201117 14:47:21.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.945" endtime="20201117 14:47:22.231"></status>
</kw>
<msg timestamp="20201117 14:47:22.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022209417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.943" endtime="20201117 14:47:22.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022209417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.236" endtime="20201117 14:47:22.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.244" endtime="20201117 14:47:22.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.940" endtime="20201117 14:47:22.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.938" endtime="20201117 14:47:22.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:22.251" level="INFO">${RESULT} = [{'time': 0.022286792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.737500000000105e-05, 'source_diff': 7.737500000000105e-05}, {'time': 0.022377792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:22.248" endtime="20201117 14:47:22.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.265" level="INFO">${ACCURACY} = {'diff': [7.737500000000105e-05, 7.719500000000212e-05, 7.66380000000004e-05, 7.708299999999862e-05, 7.725000000000093e-05, 7.708299999999862e-05, 7.708299999999862e-05, 7.679200000000261e-05, 7.72780...</msg>
<status status="PASS" starttime="20201117 14:47:22.252" endtime="20201117 14:47:22.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.270" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.269" endtime="20201117 14:47:22.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.272" level="INFO">VALUE: [7.737500000000105e-05, 7.719500000000212e-05, 7.66380000000004e-05, 7.708299999999862e-05, 7.725000000000093e-05, 7.708299999999862e-05, 7.708299999999862e-05, 7.679200000000261e-05, 7.727800000000007e-05, 7.691599999999979e-05, 7.698600000000111e-05, 7.705600000000243e-05, 7.748599999999814e-05, 7.691699999999926e-05, 7.69029999999997e-05, 7.669500000000162e-05, 7.737500000000105e-05, 7.720799999999875e-05, 7.656999999999803e-05, 7.66380000000004e-05, 7.672300000000076e-05, 7.65129999999968e-05, 7.697199999999807e-05, 7.672199999999782e-05, 7.72640000000005e-05, 7.691599999999979e-05, 7.69579999999985e-05, 7.705599999999896e-05, 7.716699999999951e-05, 7.687499999999708e-05, 7.669500000000162e-05, 7.672199999999782e-05, 7.730599999999921e-05, 7.711100000000123e-05, 7.654099999999942e-05, 7.749999999999771e-05, 7.677799999999957e-05, 7.720800000000222e-05, 7.7151999999997e-05, 7.723599999999789e-05, 7.679099999999967e-05, 7.694399999999893e-05, 7.750000000000118e-05, 7.684699999999794e-05, 7.661100000000073e-05, 7.736100000000148e-05, 7.741699999999976e-05, 7.722199999999832e-05, 7.659700000000116e-05, 7.66250000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:47:22.271" endtime="20201117 14:47:22.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.266" endtime="20201117 14:47:22.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.276" endtime="20201117 14:47:22.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.279" endtime="20201117 14:47:22.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.278" endtime="20201117 14:47:22.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.274" endtime="20201117 14:47:22.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.903" endtime="20201117 14:47:22.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.901" endtime="20201117 14:47:22.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.900" endtime="20201117 14:47:22.300"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.303" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.311" endtime="20201117 14:47:22.331"></status>
</kw>
<msg timestamp="20201117 14:47:22.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.310" endtime="20201117 14:47:22.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.333" endtime="20201117 14:47:22.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.336" endtime="20201117 14:47:22.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.307" endtime="20201117 14:47:22.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.305" endtime="20201117 14:47:22.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.345" endtime="20201117 14:47:22.631"></status>
</kw>
<msg timestamp="20201117 14:47:22.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022415417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:22.343" endtime="20201117 14:47:22.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022415417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:22.635" endtime="20201117 14:47:22.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.644" endtime="20201117 14:47:22.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.341" endtime="20201117 14:47:22.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.339" endtime="20201117 14:47:22.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:22.651" level="INFO">${RESULT} = [{'time': 0.022493, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.758299999999912e-05, 'source_diff': 7.758299999999912e-05}, {'time': 0.022586986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:22.647" endtime="20201117 14:47:22.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.665" level="INFO">${ACCURACY} = {'diff': [7.758299999999912e-05, 7.752800000000032e-05, 7.818100000000008e-05, 7.788899999999765e-05, 7.786099999999851e-05, 7.763900000000087e-05, 7.79030000000007e-05, 7.837499999999858e-05, 7.82779...</msg>
<status status="PASS" starttime="20201117 14:47:22.652" endtime="20201117 14:47:22.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.669" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.668" endtime="20201117 14:47:22.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.672" level="INFO">VALUE: [7.758299999999912e-05, 7.752800000000032e-05, 7.818100000000008e-05, 7.788899999999765e-05, 7.786099999999851e-05, 7.763900000000087e-05, 7.79030000000007e-05, 7.837499999999858e-05, 7.82779999999976e-05, 7.779200000000014e-05, 7.837500000000205e-05, 7.830500000000074e-05, 7.815300000000094e-05, 7.830500000000074e-05, 7.848599999999914e-05, 7.755499999999999e-05, 7.76250000000013e-05, 7.761099999999826e-05, 7.841700000000076e-05, 7.804200000000039e-05, 7.818100000000008e-05, 7.761099999999826e-05, 7.801400000000125e-05, 7.777800000000057e-05, 7.801300000000178e-05, 7.762499999999783e-05, 7.824999999999846e-05, 7.837499999999858e-05, 7.844400000000043e-05, 7.806900000000006e-05, 7.843000000000086e-05, 7.830499999999727e-05, 7.811099999999876e-05, 7.848599999999914e-05, 7.838899999999815e-05, 7.773600000000186e-05, 7.772199999999882e-05, 7.754199999999989e-05, 7.800000000000168e-05, 7.815200000000147e-05, 7.797299999999854e-05, 7.812499999999833e-05, 7.818000000000061e-05, 7.838900000000162e-05, 7.784699999999894e-05, 7.763900000000087e-05, 7.836100000000248e-05, 7.772199999999882e-05, 7.786099999999851e-05, 7.808299999999962e-05]</msg>
<status status="PASS" starttime="20201117 14:47:22.670" endtime="20201117 14:47:22.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.666" endtime="20201117 14:47:22.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.675" endtime="20201117 14:47:22.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.679" endtime="20201117 14:47:22.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.677" endtime="20201117 14:47:22.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.673" endtime="20201117 14:47:22.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.303" endtime="20201117 14:47:22.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.301" endtime="20201117 14:47:22.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.301" endtime="20201117 14:47:22.700"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.702" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.711" endtime="20201117 14:47:22.732"></status>
</kw>
<msg timestamp="20201117 14:47:22.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.710" endtime="20201117 14:47:22.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.734" endtime="20201117 14:47:22.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.737" endtime="20201117 14:47:22.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.706" endtime="20201117 14:47:22.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.704" endtime="20201117 14:47:22.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.746" endtime="20201117 14:47:23.032"></status>
</kw>
<msg timestamp="20201117 14:47:23.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023789222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02386825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:22.744" endtime="20201117 14:47:23.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023789222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02386825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:23.037" endtime="20201117 14:47:23.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.045" endtime="20201117 14:47:23.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.742" endtime="20201117 14:47:23.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.740" endtime="20201117 14:47:23.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.052" level="INFO">${RESULT} = [{'time': 0.02386825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.902800000000182e-05, 'source_diff': 7.902800000000182e-05}, {'time': 0.023961194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:23.049" endtime="20201117 14:47:23.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.067" level="INFO">${ACCURACY} = {'diff': [7.902800000000182e-05, 7.930500000000174e-05, 7.87770000000021e-05, 7.879100000000167e-05, 7.90970000000002e-05, 7.949999999999971e-05, 7.937500000000305e-05, 7.855500000000099e-05, 7.859699...</msg>
<status status="PASS" starttime="20201117 14:47:23.053" endtime="20201117 14:47:23.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.072" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.071" endtime="20201117 14:47:23.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.075" level="INFO">VALUE: [7.902800000000182e-05, 7.930500000000174e-05, 7.87770000000021e-05, 7.879100000000167e-05, 7.90970000000002e-05, 7.949999999999971e-05, 7.937500000000305e-05, 7.855500000000099e-05, 7.85969999999997e-05, 7.951399999999928e-05, 7.89580000000005e-05, 7.930599999999774e-05, 7.911099999999976e-05, 7.951399999999928e-05, 7.916699999999804e-05, 7.938899999999915e-05, 7.887499999999908e-05, 7.934799999999992e-05, 7.855500000000099e-05, 7.89580000000005e-05, 7.890200000000222e-05, 7.919400000000118e-05, 7.868000000000111e-05, 7.91389999999989e-05, 7.852800000000132e-05, 7.898600000000311e-05, 7.874999999999896e-05, 7.897200000000007e-05, 7.938900000000262e-05, 7.861100000000273e-05, 7.924999999999946e-05, 7.909699999999673e-05, 7.865300000000144e-05, 7.923600000000336e-05, 7.876399999999853e-05, 7.877699999999863e-05, 7.944400000000143e-05, 7.869400000000068e-05, 7.870800000000025e-05, 7.923599999999989e-05, 7.915300000000194e-05, 7.936100000000001e-05, 7.86250000000023e-05, 7.908300000000063e-05, 7.937499999999958e-05, 7.882000000000028e-05, 7.898600000000311e-05, 7.897299999999954e-05, 7.938900000000262e-05, 7.87770000000021e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.073" endtime="20201117 14:47:23.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.068" endtime="20201117 14:47:23.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.078" endtime="20201117 14:47:23.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.081" endtime="20201117 14:47:23.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.080" endtime="20201117 14:47:23.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.076" endtime="20201117 14:47:23.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.703" endtime="20201117 14:47:23.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.701" endtime="20201117 14:47:23.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.700" endtime="20201117 14:47:23.103"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.105" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.114" endtime="20201117 14:47:23.134"></status>
</kw>
<msg timestamp="20201117 14:47:23.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.112" endtime="20201117 14:47:23.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.136" endtime="20201117 14:47:23.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.138" endtime="20201117 14:47:23.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.109" endtime="20201117 14:47:23.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.107" endtime="20201117 14:47:23.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.148" endtime="20201117 14:47:23.434"></status>
</kw>
<msg timestamp="20201117 14:47:23.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.146" endtime="20201117 14:47:23.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.438" endtime="20201117 14:47:23.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.447" endtime="20201117 14:47:23.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.143" endtime="20201117 14:47:23.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.142" endtime="20201117 14:47:23.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.454" level="INFO">${RESULT} = [{'time': 0.022847222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.004099999999945e-05, 'source_diff': 8.004099999999945e-05}, {'time': 0.022941236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:23.450" endtime="20201117 14:47:23.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.468" level="INFO">${ACCURACY} = {'diff': [8.004099999999945e-05, 8.044399999999896e-05, 8.048600000000114e-05, 8.036100000000101e-05, 8.04169999999993e-05, 8.018099999999861e-05, 8.00840000000011e-05, 8.03190000000023e-05, 8.0348000...</msg>
<status status="PASS" starttime="20201117 14:47:23.455" endtime="20201117 14:47:23.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.472" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.471" endtime="20201117 14:47:23.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.475" level="INFO">VALUE: [8.004099999999945e-05, 8.044399999999896e-05, 8.048600000000114e-05, 8.036100000000101e-05, 8.04169999999993e-05, 8.018099999999861e-05, 8.00840000000011e-05, 8.03190000000023e-05, 8.034800000000092e-05, 8.011100000000076e-05, 7.980599999999824e-05, 7.99719999999976e-05, 7.954100000000242e-05, 8.023600000000089e-05, 7.986099999999705e-05, 8.015300000000294e-05, 8.02909999999997e-05, 7.979200000000214e-05, 8.008300000000163e-05, 8.011100000000076e-05, 7.955599999999799e-05, 7.987500000000008e-05, 7.969500000000115e-05, 7.998700000000011e-05, 8.020900000000122e-05, 8.043100000000233e-05, 8.005499999999902e-05, 8.019399999999871e-05, 7.954100000000242e-05, 8.012500000000033e-05, 7.994400000000193e-05, 8.047200000000157e-05, 8.01389999999999e-05, 8.033400000000135e-05, 7.982000000000128e-05, 8.050000000000071e-05, 8.031999999999831e-05, 7.95840000000006e-05, 8.00840000000011e-05, 8.04450000000019e-05, 7.997300000000054e-05, 7.998700000000011e-05, 7.970799999999778e-05, 8.018000000000261e-05, 7.991600000000279e-05, 8.042999999999939e-05, 8.004100000000292e-05, 8.031899999999884e-05, 8.016699999999904e-05, 8.038900000000015e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.474" endtime="20201117 14:47:23.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.469" endtime="20201117 14:47:23.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.479" endtime="20201117 14:47:23.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.482" endtime="20201117 14:47:23.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.481" endtime="20201117 14:47:23.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.477" endtime="20201117 14:47:23.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.106" endtime="20201117 14:47:23.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.104" endtime="20201117 14:47:23.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.103" endtime="20201117 14:47:23.504"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.506" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.516" endtime="20201117 14:47:23.536"></status>
</kw>
<msg timestamp="20201117 14:47:23.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.514" endtime="20201117 14:47:23.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.537" endtime="20201117 14:47:23.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.540" endtime="20201117 14:47:23.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.511" endtime="20201117 14:47:23.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.509" endtime="20201117 14:47:23.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.549" endtime="20201117 14:47:23.836"></status>
</kw>
<msg timestamp="20201117 14:47:23.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023612986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023694389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.548" endtime="20201117 14:47:23.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023612986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023694389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.840" endtime="20201117 14:47:23.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.849" endtime="20201117 14:47:23.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.545" endtime="20201117 14:47:23.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.543" endtime="20201117 14:47:23.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.856" level="INFO">${RESULT} = [{'time': 0.023694389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.140300000000072e-05, 'source_diff': 8.140300000000072e-05}, {'time': 0.023789389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:23.852" endtime="20201117 14:47:23.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.870" level="INFO">${ACCURACY} = {'diff': [8.140300000000072e-05, 8.057000000000203e-05, 8.08329999999989e-05, 8.073700000000086e-05, 8.124999999999799e-05, 8.098600000000164e-05, 8.069399999999921e-05, 8.14170000000003e-05, 8.111100...</msg>
<status status="PASS" starttime="20201117 14:47:23.857" endtime="20201117 14:47:23.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.874" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.873" endtime="20201117 14:47:23.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.877" level="INFO">VALUE: [8.140300000000072e-05, 8.057000000000203e-05, 8.08329999999989e-05, 8.073700000000086e-05, 8.124999999999799e-05, 8.098600000000164e-05, 8.069399999999921e-05, 8.14170000000003e-05, 8.111100000000177e-05, 8.112499999999787e-05, 8.055499999999952e-05, 8.136099999999855e-05, 8.075000000000096e-05, 8.131999999999931e-05, 8.098600000000164e-05, 8.100000000000121e-05, 8.120799999999928e-05, 8.14170000000003e-05, 8.148600000000214e-05, 8.106999999999906e-05, 8.094399999999946e-05, 8.052700000000038e-05, 8.140200000000125e-05, 8.059699999999823e-05, 8.104100000000045e-05, 8.069399999999921e-05, 8.055499999999952e-05, 8.06390000000004e-05, 8.057000000000203e-05, 8.062500000000083e-05, 8.131999999999931e-05, 8.148599999999867e-05, 8.079199999999967e-05, 8.152799999999738e-05, 8.087500000000108e-05, 8.143099999999986e-05, 8.116600000000057e-05, 8.100000000000121e-05, 8.10970000000022e-05, 8.065299999999997e-05, 8.149999999999824e-05, 8.084699999999848e-05, 8.069399999999921e-05, 8.054200000000289e-05, 8.090300000000022e-05, 8.115199999999753e-05, 8.140299999999726e-05, 8.076400000000053e-05, 8.086199999999752e-05, 8.134799999999845e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.875" endtime="20201117 14:47:23.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.871" endtime="20201117 14:47:23.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.881" endtime="20201117 14:47:23.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.884" endtime="20201117 14:47:23.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.883" endtime="20201117 14:47:23.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.879" endtime="20201117 14:47:23.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.507" endtime="20201117 14:47:23.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.505" endtime="20201117 14:47:23.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.504" endtime="20201117 14:47:23.905"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.908" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.916" endtime="20201117 14:47:23.936"></status>
</kw>
<msg timestamp="20201117 14:47:23.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.915" endtime="20201117 14:47:23.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.937" endtime="20201117 14:47:23.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.940" endtime="20201117 14:47:23.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.912" endtime="20201117 14:47:23.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.910" endtime="20201117 14:47:23.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.949" endtime="20201117 14:47:24.236"></status>
</kw>
<msg timestamp="20201117 14:47:24.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022381875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022463708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.948" endtime="20201117 14:47:24.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022381875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022463708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.240" endtime="20201117 14:47:24.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.249" endtime="20201117 14:47:24.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.945" endtime="20201117 14:47:24.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.943" endtime="20201117 14:47:24.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.256" level="INFO">${RESULT} = [{'time': 0.022463708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.18329999999999e-05, 'source_diff': 8.18329999999999e-05}, {'time': 0.022560694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:24.252" endtime="20201117 14:47:24.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.274" level="INFO">${ACCURACY} = {'diff': [8.18329999999999e-05, 8.181900000000034e-05, 8.199999999999874e-05, 8.216699999999758e-05, 8.169400000000021e-05, 8.244400000000096e-05, 8.173599999999892e-05, 8.180600000000024e-05, 8.21109...</msg>
<status status="PASS" starttime="20201117 14:47:24.261" endtime="20201117 14:47:24.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.278" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.277" endtime="20201117 14:47:24.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.281" level="INFO">VALUE: [8.18329999999999e-05, 8.181900000000034e-05, 8.199999999999874e-05, 8.216699999999758e-05, 8.169400000000021e-05, 8.244400000000096e-05, 8.173599999999892e-05, 8.180600000000024e-05, 8.21109999999993e-05, 8.175000000000196e-05, 8.24720000000001e-05, 8.234699999999998e-05, 8.162499999999837e-05, 8.161100000000227e-05, 8.177799999999763e-05, 8.180600000000024e-05, 8.187499999999862e-05, 8.168000000000064e-05, 8.201400000000178e-05, 8.212500000000234e-05, 8.220800000000028e-05, 8.190300000000122e-05, 8.229200000000117e-05, 8.156999999999956e-05, 8.161100000000227e-05, 8.19719999999996e-05, 8.212499999999887e-05, 8.188900000000165e-05, 8.198700000000211e-05, 8.173700000000186e-05, 8.181900000000034e-05, 8.244400000000096e-05, 8.177700000000163e-05, 8.193000000000089e-05, 8.16390000000014e-05, 8.237499999999912e-05, 8.218100000000061e-05, 8.155599999999999e-05, 8.18329999999999e-05, 8.180600000000024e-05, 8.173600000000239e-05, 8.218100000000061e-05, 8.205600000000049e-05, 8.158299999999966e-05, 8.198600000000264e-05, 8.242999999999792e-05, 8.158300000000313e-05, 8.173599999999892e-05, 8.181900000000034e-05, 8.154200000000042e-05]</msg>
<status status="PASS" starttime="20201117 14:47:24.279" endtime="20201117 14:47:24.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.275" endtime="20201117 14:47:24.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.284" endtime="20201117 14:47:24.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.288" endtime="20201117 14:47:24.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.286" endtime="20201117 14:47:24.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.282" endtime="20201117 14:47:24.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.908" endtime="20201117 14:47:24.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.907" endtime="20201117 14:47:24.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.906" endtime="20201117 14:47:24.309"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.311" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.320" endtime="20201117 14:47:24.341"></status>
</kw>
<msg timestamp="20201117 14:47:24.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.318" endtime="20201117 14:47:24.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.343" endtime="20201117 14:47:24.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.345" endtime="20201117 14:47:24.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.316" endtime="20201117 14:47:24.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.313" endtime="20201117 14:47:24.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.355" endtime="20201117 14:47:24.641"></status>
</kw>
<msg timestamp="20201117 14:47:24.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02325875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:24.353" endtime="20201117 14:47:24.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02325875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:24.645" endtime="20201117 14:47:24.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.654" endtime="20201117 14:47:24.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.350" endtime="20201117 14:47:24.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.349" endtime="20201117 14:47:24.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.661" level="INFO">${RESULT} = [{'time': 0.023341444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.269399999999774e-05, 'source_diff': 8.269399999999774e-05}, {'time': 0.023438417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:24.658" endtime="20201117 14:47:24.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.676" level="INFO">${ACCURACY} = {'diff': [8.269399999999774e-05, 8.332000000000131e-05, 8.341699999999883e-05, 8.347300000000057e-05, 8.318100000000161e-05, 8.336200000000002e-05, 8.319399999999824e-05, 8.309699999999726e-05, 8.3179...</msg>
<status status="PASS" starttime="20201117 14:47:24.662" endtime="20201117 14:47:24.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.681" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.680" endtime="20201117 14:47:24.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.684" level="INFO">VALUE: [8.269399999999774e-05, 8.332000000000131e-05, 8.341699999999883e-05, 8.347300000000057e-05, 8.318100000000161e-05, 8.336200000000002e-05, 8.319399999999824e-05, 8.309699999999726e-05, 8.317999999999867e-05, 8.305500000000202e-05, 8.277799999999863e-05, 8.287499999999962e-05, 8.268100000000111e-05, 8.294500000000093e-05, 8.345800000000153e-05, 8.294500000000093e-05, 8.309700000000073e-05, 8.324999999999999e-05, 8.334800000000045e-05, 8.276299999999959e-05, 8.342999999999892e-05, 8.323600000000042e-05, 8.341599999999935e-05, 8.304100000000245e-05, 8.29720000000006e-05, 8.323600000000042e-05, 8.26529999999985e-05, 8.288899999999919e-05, 8.268100000000111e-05, 8.276399999999906e-05, 8.299999999999974e-05, 8.282000000000081e-05, 8.309799999999673e-05, 8.337500000000012e-05, 8.342999999999892e-05, 8.295799999999756e-05, 8.255499999999805e-05, 8.31110000000003e-05, 8.298600000000017e-05, 8.291699999999833e-05, 8.350000000000024e-05, 8.337499999999665e-05, 8.287500000000309e-05, 8.315300000000247e-05, 8.308299999999769e-05, 8.294500000000093e-05, 8.257000000000056e-05, 8.26390000000024e-05, 8.290299999999876e-05, 8.323700000000336e-05]</msg>
<status status="PASS" starttime="20201117 14:47:24.682" endtime="20201117 14:47:24.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.677" endtime="20201117 14:47:24.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.687" endtime="20201117 14:47:24.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.691" endtime="20201117 14:47:24.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.689" endtime="20201117 14:47:24.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.685" endtime="20201117 14:47:24.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.312" endtime="20201117 14:47:24.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.310" endtime="20201117 14:47:24.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.309" endtime="20201117 14:47:24.712"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.714" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.723" endtime="20201117 14:47:24.743"></status>
</kw>
<msg timestamp="20201117 14:47:24.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.721" endtime="20201117 14:47:24.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.744" endtime="20201117 14:47:24.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.747" endtime="20201117 14:47:24.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.718" endtime="20201117 14:47:24.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.716" endtime="20201117 14:47:24.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.757" endtime="20201117 14:47:25.043"></status>
</kw>
<msg timestamp="20201117 14:47:25.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022246722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022330264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.755" endtime="20201117 14:47:25.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022246722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022330264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.047" endtime="20201117 14:47:25.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.056" endtime="20201117 14:47:25.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.752" endtime="20201117 14:47:25.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.750" endtime="20201117 14:47:25.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.063" level="INFO">${RESULT} = [{'time': 0.022330264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.354199999999895e-05, 'source_diff': 8.354199999999895e-05}, {'time': 0.022429278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:25.059" endtime="20201117 14:47:25.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.076" level="INFO">${ACCURACY} = {'diff': [8.354199999999895e-05, 8.36110000000008e-05, 8.401400000000031e-05, 8.390299999999976e-05, 8.43049999999998e-05, 8.447300000000157e-05, 8.381899999999887e-05, 8.447199999999863e-05, 8.362500...</msg>
<status status="PASS" starttime="20201117 14:47:25.064" endtime="20201117 14:47:25.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.081" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.080" endtime="20201117 14:47:25.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.084" level="INFO">VALUE: [8.354199999999895e-05, 8.36110000000008e-05, 8.401400000000031e-05, 8.390299999999976e-05, 8.43049999999998e-05, 8.447300000000157e-05, 8.381899999999887e-05, 8.447199999999863e-05, 8.362500000000037e-05, 8.386100000000105e-05, 8.388900000000019e-05, 8.400000000000074e-05, 8.408400000000163e-05, 8.395799999999856e-05, 8.404199999999945e-05, 8.447199999999863e-05, 8.412500000000087e-05, 8.423600000000142e-05, 8.388900000000019e-05, 8.394400000000246e-05, 8.400000000000074e-05, 8.445799999999906e-05, 8.359699999999776e-05, 8.373600000000092e-05, 8.391599999999985e-05, 8.41110000000013e-05, 8.437500000000112e-05, 8.436099999999808e-05, 8.44859999999982e-05, 8.400000000000074e-05, 8.39590000000015e-05, 8.350000000000024e-05, 8.444499999999897e-05, 8.365200000000003e-05, 8.433399999999841e-05, 8.373600000000092e-05, 8.404099999999998e-05, 8.437499999999765e-05, 8.400000000000074e-05, 8.449999999999777e-05, 8.381899999999887e-05, 8.391699999999933e-05, 8.404199999999945e-05, 8.409699999999826e-05, 8.430599999999927e-05, 8.44309999999994e-05, 8.426400000000056e-05, 8.430599999999927e-05, 8.357000000000156e-05, 8.448600000000167e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.082" endtime="20201117 14:47:25.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.077" endtime="20201117 14:47:25.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.087" endtime="20201117 14:47:25.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.090" endtime="20201117 14:47:25.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.089" endtime="20201117 14:47:25.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.085" endtime="20201117 14:47:25.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.715" endtime="20201117 14:47:25.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.713" endtime="20201117 14:47:25.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.712" endtime="20201117 14:47:25.112"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.114" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.122" endtime="20201117 14:47:25.143"></status>
</kw>
<msg timestamp="20201117 14:47:25.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.121" endtime="20201117 14:47:25.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.144" endtime="20201117 14:47:25.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.147" endtime="20201117 14:47:25.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.118" endtime="20201117 14:47:25.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.116" endtime="20201117 14:47:25.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.157" endtime="20201117 14:47:25.443"></status>
</kw>
<msg timestamp="20201117 14:47:25.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.155" endtime="20201117 14:47:25.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.447" endtime="20201117 14:47:25.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.456" endtime="20201117 14:47:25.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.153" endtime="20201117 14:47:25.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.151" endtime="20201117 14:47:25.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.464" level="INFO">${RESULT} = [{'time': 0.022418194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.531900000000037e-05, 'source_diff': 8.531900000000037e-05}, {'time': 0.022517181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:25.460" endtime="20201117 14:47:25.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.478" level="INFO">${ACCURACY} = {'diff': [8.531900000000037e-05, 8.45980000000017e-05, 8.51249999999984e-05, 8.491700000000033e-05, 8.469499999999922e-05, 8.505600000000002e-05, 8.456899999999962e-05, 8.466700000000008e-05, 8.525000...</msg>
<status status="PASS" starttime="20201117 14:47:25.465" endtime="20201117 14:47:25.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.482" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.481" endtime="20201117 14:47:25.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.485" level="INFO">VALUE: [8.531900000000037e-05, 8.45980000000017e-05, 8.51249999999984e-05, 8.491700000000033e-05, 8.469499999999922e-05, 8.505600000000002e-05, 8.456899999999962e-05, 8.466700000000008e-05, 8.525000000000199e-05, 8.525000000000199e-05, 8.526399999999809e-05, 8.523600000000242e-05, 8.48050000000003e-05, 8.494399999999999e-05, 8.462500000000137e-05, 8.469500000000268e-05, 8.520899999999929e-05, 8.495799999999956e-05, 8.534799999999898e-05, 8.476400000000106e-05, 8.531900000000037e-05, 8.537500000000212e-05, 8.487499999999815e-05, 8.486100000000205e-05, 8.459699999999876e-05, 8.462500000000137e-05, 8.469399999999974e-05, 8.501400000000131e-05, 8.549999999999877e-05, 8.475000000000149e-05, 8.491700000000033e-05, 8.454199999999995e-05, 8.483399999999891e-05, 8.541600000000135e-05, 8.486200000000152e-05, 8.493000000000042e-05, 8.547199999999963e-05, 8.472200000000235e-05, 8.529100000000123e-05, 8.536100000000255e-05, 8.525000000000199e-05, 8.459699999999876e-05, 8.522199999999938e-05, 8.51249999999984e-05, 8.515299999999754e-05, 8.54859999999992e-05, 8.54310000000004e-05, 8.470899999999879e-05, 8.468099999999965e-05, 8.530499999999733e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.483" endtime="20201117 14:47:25.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.479" endtime="20201117 14:47:25.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.488" endtime="20201117 14:47:25.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.492" endtime="20201117 14:47:25.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.490" endtime="20201117 14:47:25.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.486" endtime="20201117 14:47:25.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.115" endtime="20201117 14:47:25.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.113" endtime="20201117 14:47:25.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.112" endtime="20201117 14:47:25.513"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.515" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.524" endtime="20201117 14:47:25.545"></status>
</kw>
<msg timestamp="20201117 14:47:25.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.523" endtime="20201117 14:47:25.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.546" endtime="20201117 14:47:25.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.549" endtime="20201117 14:47:25.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.519" endtime="20201117 14:47:25.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.517" endtime="20201117 14:47:25.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.558" endtime="20201117 14:47:25.844"></status>
</kw>
<msg timestamp="20201117 14:47:25.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023050125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023136194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.557" endtime="20201117 14:47:25.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023050125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023136194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.849" endtime="20201117 14:47:25.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.857" endtime="20201117 14:47:25.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.554" endtime="20201117 14:47:25.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.552" endtime="20201117 14:47:25.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.864" level="INFO">${RESULT} = [{'time': 0.023136194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.606899999999765e-05, 'source_diff': 8.606899999999765e-05}, {'time': 0.023238181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:25.861" endtime="20201117 14:47:25.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.878" level="INFO">${ACCURACY} = {'diff': [8.606899999999765e-05, 8.637499999999965e-05, 8.602799999999841e-05, 8.56249999999989e-05, 8.620900000000029e-05, 8.623599999999995e-05, 8.586099999999958e-05, 8.591599999999838e-05, 8.62499...</msg>
<status status="PASS" starttime="20201117 14:47:25.865" endtime="20201117 14:47:25.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.883" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.882" endtime="20201117 14:47:25.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.885" level="INFO">VALUE: [8.606899999999765e-05, 8.637499999999965e-05, 8.602799999999841e-05, 8.56249999999989e-05, 8.620900000000029e-05, 8.623599999999995e-05, 8.586099999999958e-05, 8.591599999999838e-05, 8.624999999999952e-05, 8.56110000000028e-05, 8.561099999999933e-05, 8.593099999999743e-05, 8.618100000000115e-05, 8.594500000000047e-05, 8.641699999999836e-05, 8.647199999999716e-05, 8.623599999999995e-05, 8.577799999999816e-05, 8.554200000000095e-05, 8.604100000000198e-05, 8.629100000000223e-05, 8.561099999999933e-05, 8.59859999999997e-05, 8.587500000000262e-05, 8.605600000000102e-05, 8.619500000000072e-05, 8.572299999999936e-05, 8.626400000000256e-05, 8.5944999999997e-05, 8.637499999999965e-05, 8.623599999999995e-05, 8.572299999999936e-05, 8.604200000000145e-05, 8.586099999999958e-05, 8.61660000000021e-05, 8.563899999999847e-05, 8.593000000000142e-05, 8.581900000000087e-05, 8.594500000000047e-05, 8.593099999999743e-05, 8.64449999999975e-05, 8.632000000000084e-05, 8.569500000000022e-05, 8.64860000000002e-05, 8.609799999999973e-05, 8.624999999999952e-05, 8.56249999999989e-05, 8.61799999999982e-05, 8.630499999999833e-05, 8.556900000000062e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.884" endtime="20201117 14:47:25.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.879" endtime="20201117 14:47:25.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.888" endtime="20201117 14:47:25.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.892" endtime="20201117 14:47:25.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.890" endtime="20201117 14:47:25.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.887" endtime="20201117 14:47:25.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.516" endtime="20201117 14:47:25.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.514" endtime="20201117 14:47:25.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.513" endtime="20201117 14:47:25.914"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.916" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.924" endtime="20201117 14:47:25.946"></status>
</kw>
<msg timestamp="20201117 14:47:25.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.923" endtime="20201117 14:47:25.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.947" endtime="20201117 14:47:25.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.950" endtime="20201117 14:47:25.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.920" endtime="20201117 14:47:25.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.918" endtime="20201117 14:47:25.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.959" endtime="20201117 14:47:26.245"></status>
</kw>
<msg timestamp="20201117 14:47:26.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023612681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023699694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.958" endtime="20201117 14:47:26.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023612681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023699694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.249" endtime="20201117 14:47:26.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.258" endtime="20201117 14:47:26.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.955" endtime="20201117 14:47:26.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.953" endtime="20201117 14:47:26.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:26.265" level="INFO">${RESULT} = [{'time': 0.023699694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.701300000000037e-05, 'source_diff': 8.701300000000037e-05}, {'time': 0.023801764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:26.261" endtime="20201117 14:47:26.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:26.280" level="INFO">${ACCURACY} = {'diff': [8.701300000000037e-05, 8.737500000000065e-05, 8.722200000000138e-05, 8.652699999999944e-05, 8.712499999999693e-05, 8.683300000000144e-05, 8.713899999999997e-05, 8.652800000000238e-05, 8.6695...</msg>
<status status="PASS" starttime="20201117 14:47:26.266" endtime="20201117 14:47:26.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.284" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:47:26.283" endtime="20201117 14:47:26.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.287" level="INFO">VALUE: [8.701300000000037e-05, 8.737500000000065e-05, 8.722200000000138e-05, 8.652699999999944e-05, 8.712499999999693e-05, 8.683300000000144e-05, 8.713899999999997e-05, 8.652800000000238e-05, 8.669500000000122e-05, 8.71250000000004e-05, 8.743099999999893e-05, 8.725000000000052e-05, 8.705599999999855e-05, 8.66669999999986e-05, 8.716700000000258e-05, 8.726400000000009e-05, 8.655499999999858e-05, 8.726400000000009e-05, 8.723699999999696e-05, 8.722199999999791e-05, 8.690300000000276e-05, 8.675000000000002e-05, 8.686100000000058e-05, 8.694399999999852e-05, 8.723600000000095e-05, 8.750000000000077e-05, 8.71250000000004e-05, 8.66799999999987e-05, 8.712499999999693e-05, 8.672200000000088e-05, 8.655499999999858e-05, 8.661100000000033e-05, 8.655500000000205e-05, 8.695799999999809e-05, 8.742999999999945e-05, 8.738900000000022e-05, 8.655599999999805e-05, 8.688899999999972e-05, 8.661099999999686e-05, 8.68059999999983e-05, 8.666599999999913e-05, 8.734799999999751e-05, 8.687500000000015e-05, 8.744400000000249e-05, 8.69860000000007e-05, 8.675000000000002e-05, 8.673599999999698e-05, 8.711100000000083e-05, 8.686100000000058e-05, 8.688899999999972e-05]</msg>
<status status="PASS" starttime="20201117 14:47:26.285" endtime="20201117 14:47:26.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.281" endtime="20201117 14:47:26.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.291" endtime="20201117 14:47:26.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:26.294" endtime="20201117 14:47:26.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.293" endtime="20201117 14:47:26.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.289" endtime="20201117 14:47:26.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.917" endtime="20201117 14:47:26.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.915" endtime="20201117 14:47:26.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.914" endtime="20201117 14:47:26.315"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.318" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.326" endtime="20201117 14:47:26.346"></status>
</kw>
<msg timestamp="20201117 14:47:26.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.325" endtime="20201117 14:47:26.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.348" endtime="20201117 14:47:26.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.350" endtime="20201117 14:47:26.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.322" endtime="20201117 14:47:26.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.320" endtime="20201117 14:47:26.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.360" endtime="20201117 14:47:26.646"></status>
</kw>
<msg timestamp="20201117 14:47:26.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022339361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.358" endtime="20201117 14:47:26.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022339361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.650" endtime="20201117 14:47:26.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.659" endtime="20201117 14:47:26.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.355" endtime="20201117 14:47:26.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.354" endtime="20201117 14:47:26.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:26.666" level="INFO">${RESULT} = [{'time': 0.022339361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.784699999999854e-05, 'source_diff': 8.784699999999854e-05}, {'time': 0.022443361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:26.662" endtime="20201117 14:47:26.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:26.680" level="INFO">${ACCURACY} = {'diff': [8.784699999999854e-05, 8.780499999999983e-05, 8.801400000000084e-05, 8.787500000000115e-05, 8.756999999999862e-05, 8.754199999999948e-05, 8.797199999999866e-05, 8.802800000000041e-05, 8.8012...</msg>
<status status="PASS" starttime="20201117 14:47:26.667" endtime="20201117 14:47:26.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.684" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:47:26.683" endtime="20201117 14:47:26.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.687" level="INFO">VALUE: [8.784699999999854e-05, 8.780499999999983e-05, 8.801400000000084e-05, 8.787500000000115e-05, 8.756999999999862e-05, 8.754199999999948e-05, 8.797199999999866e-05, 8.802800000000041e-05, 8.80129999999979e-05, 8.779199999999973e-05, 8.833400000000241e-05, 8.766600000000013e-05, 8.81800000000002e-05, 8.76250000000009e-05, 8.829199999999676e-05, 8.812499999999793e-05, 8.829200000000023e-05, 8.811100000000183e-05, 8.761099999999786e-05, 8.795800000000256e-05, 8.787500000000115e-05, 8.843099999999993e-05, 8.841600000000088e-05, 8.848599999999873e-05, 8.783300000000244e-05, 8.836099999999861e-05, 8.815300000000054e-05, 8.848599999999873e-05, 8.774999999999755e-05, 8.78189999999994e-05, 8.844400000000002e-05, 8.779199999999973e-05, 8.781999999999887e-05, 8.818099999999968e-05, 8.837500000000165e-05, 8.76669999999996e-05, 8.83059999999998e-05, 8.770799999999884e-05, 8.761099999999786e-05, 8.816600000000063e-05, 8.847199999999916e-05, 8.772199999999841e-05, 8.780499999999983e-05, 8.842999999999698e-05, 8.761100000000133e-05, 8.791699999999986e-05, 8.795799999999909e-05, 8.837500000000165e-05, 8.76250000000009e-05, 8.83059999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:47:26.685" endtime="20201117 14:47:26.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.681" endtime="20201117 14:47:26.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.691" endtime="20201117 14:47:26.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:26.694" endtime="20201117 14:47:26.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.693" endtime="20201117 14:47:26.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.689" endtime="20201117 14:47:26.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.318" endtime="20201117 14:47:26.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.317" endtime="20201117 14:47:26.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.316" endtime="20201117 14:47:26.715"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.718" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.726" endtime="20201117 14:47:26.746"></status>
</kw>
<msg timestamp="20201117 14:47:26.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.725" endtime="20201117 14:47:26.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.748" endtime="20201117 14:47:26.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.750" endtime="20201117 14:47:26.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.722" endtime="20201117 14:47:26.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.720" endtime="20201117 14:47:26.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.760" endtime="20201117 14:47:27.046"></status>
</kw>
<msg timestamp="20201117 14:47:27.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022354889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.758" endtime="20201117 14:47:27.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022354889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.050" endtime="20201117 14:47:27.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.059" endtime="20201117 14:47:27.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.756" endtime="20201117 14:47:27.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.754" endtime="20201117 14:47:27.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.066" level="INFO">${RESULT} = [{'time': 0.022443639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.875000000000202e-05, 'source_diff': 8.875000000000202e-05}, {'time': 0.022548611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:27.062" endtime="20201117 14:47:27.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.080" level="INFO">${ACCURACY} = {'diff': [8.875000000000202e-05, 8.895800000000009e-05, 8.919500000000025e-05, 8.893100000000043e-05, 8.920899999999982e-05, 8.862499999999843e-05, 8.859799999999876e-05, 8.902799999999794e-05, 8.9110...</msg>
<status status="PASS" starttime="20201117 14:47:27.067" endtime="20201117 14:47:27.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.085" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.084" endtime="20201117 14:47:27.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.087" level="INFO">VALUE: [8.875000000000202e-05, 8.895800000000009e-05, 8.919500000000025e-05, 8.893100000000043e-05, 8.920899999999982e-05, 8.862499999999843e-05, 8.859799999999876e-05, 8.902799999999794e-05, 8.911099999999936e-05, 8.86939999999968e-05, 8.859699999999929e-05, 8.94999999999993e-05, 8.91939999999973e-05, 8.923599999999948e-05, 8.891699999999739e-05, 8.920799999999687e-05, 8.948599999999973e-05, 8.915300000000154e-05, 8.916699999999764e-05, 8.923599999999948e-05, 8.904200000000098e-05, 8.870899999999932e-05, 8.948599999999973e-05, 8.887499999999868e-05, 8.855500000000058e-05, 8.936099999999961e-05, 8.924999999999905e-05, 8.89999999999988e-05, 8.874999999999855e-05, 8.887499999999868e-05, 8.93060000000008e-05, 8.888899999999825e-05, 8.93060000000008e-05, 8.858399999999919e-05, 8.952699999999897e-05, 8.936199999999908e-05, 8.900000000000227e-05, 8.929100000000176e-05, 8.938899999999875e-05, 8.936099999999961e-05, 8.931899999999743e-05, 8.854200000000048e-05, 8.915299999999807e-05, 8.929200000000123e-05, 8.868100000000018e-05, 8.934700000000004e-05, 8.855600000000005e-05, 8.912499999999893e-05, 8.852800000000091e-05, 8.856900000000015e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.086" endtime="20201117 14:47:27.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.081" endtime="20201117 14:47:27.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.090" endtime="20201117 14:47:27.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.094" endtime="20201117 14:47:27.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.093" endtime="20201117 14:47:27.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.089" endtime="20201117 14:47:27.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.718" endtime="20201117 14:47:27.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.717" endtime="20201117 14:47:27.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.716" endtime="20201117 14:47:27.115"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.118" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.126" endtime="20201117 14:47:27.147"></status>
</kw>
<msg timestamp="20201117 14:47:27.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.125" endtime="20201117 14:47:27.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.148" endtime="20201117 14:47:27.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.151" endtime="20201117 14:47:27.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.122" endtime="20201117 14:47:27.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.120" endtime="20201117 14:47:27.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.160" endtime="20201117 14:47:27.446"></status>
</kw>
<msg timestamp="20201117 14:47:27.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:27.158" endtime="20201117 14:47:27.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:27.450" endtime="20201117 14:47:27.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.459" endtime="20201117 14:47:27.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.156" endtime="20201117 14:47:27.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.154" endtime="20201117 14:47:27.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.466" level="INFO">${RESULT} = [{'time': 0.022294222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.972200000000041e-05, 'source_diff': 8.972200000000041e-05}, {'time': 0.022399222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:27.462" endtime="20201117 14:47:27.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.479" level="INFO">${ACCURACY} = {'diff': [8.972200000000041e-05, 8.994400000000152e-05, 9.052799999999944e-05, 9.012499999999993e-05, 9.023600000000048e-05, 9.029200000000223e-05, 9.019500000000125e-05, 8.972200000000041e-05, 8.9652...</msg>
<status status="PASS" starttime="20201117 14:47:27.467" endtime="20201117 14:47:27.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.484" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.483" endtime="20201117 14:47:27.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.487" level="INFO">VALUE: [8.972200000000041e-05, 8.994400000000152e-05, 9.052799999999944e-05, 9.012499999999993e-05, 9.023600000000048e-05, 9.029200000000223e-05, 9.019500000000125e-05, 8.972200000000041e-05, 8.965299999999857e-05, 9.022300000000039e-05, 9.023600000000048e-05, 8.952699999999897e-05, 9.029099999999929e-05, 8.973599999999998e-05, 9.01800000000022e-05, 9.041700000000236e-05, 8.962499999999943e-05, 9.016699999999864e-05, 9.011099999999689e-05, 8.965300000000204e-05, 9.008300000000122e-05, 9.047199999999769e-05, 8.957000000000062e-05, 9.04870000000002e-05, 8.950000000000277e-05, 8.987499999999968e-05, 9.027699999999972e-05, 8.991600000000238e-05, 9.030500000000233e-05, 9.034700000000104e-05, 8.979199999999826e-05, 9.004200000000198e-05, 8.980599999999783e-05, 9.005600000000155e-05, 9.025000000000005e-05, 9.011199999999983e-05, 9.036100000000061e-05, 9.01519999999996e-05, 8.998600000000023e-05, 8.990199999999934e-05, 9.023599999999701e-05, 8.987499999999968e-05, 9.047199999999769e-05, 9.038899999999975e-05, 9.05000000000003e-05, 8.970900000000032e-05, 9.054099999999954e-05, 9.016699999999864e-05, 9.007000000000112e-05, 8.98060000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.485" endtime="20201117 14:47:27.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.480" endtime="20201117 14:47:27.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.490" endtime="20201117 14:47:27.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.493" endtime="20201117 14:47:27.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.492" endtime="20201117 14:47:27.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.488" endtime="20201117 14:47:27.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.118" endtime="20201117 14:47:27.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.116" endtime="20201117 14:47:27.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.116" endtime="20201117 14:47:27.515"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.517" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.526" endtime="20201117 14:47:27.547"></status>
</kw>
<msg timestamp="20201117 14:47:27.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.524" endtime="20201117 14:47:27.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.548" endtime="20201117 14:47:27.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.551" endtime="20201117 14:47:27.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.521" endtime="20201117 14:47:27.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.519" endtime="20201117 14:47:27.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.561" endtime="20201117 14:47:27.848"></status>
</kw>
<msg timestamp="20201117 14:47:27.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0232425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023333417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:27.559" endtime="20201117 14:47:27.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0232425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023333417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:27.852" endtime="20201117 14:47:27.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.861" endtime="20201117 14:47:27.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.556" endtime="20201117 14:47:27.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.554" endtime="20201117 14:47:27.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.868" level="INFO">${RESULT} = [{'time': 0.023333417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.091699999999939e-05, 'source_diff': 9.091699999999939e-05}, {'time': 0.023437417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:27.865" endtime="20201117 14:47:27.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.883" level="INFO">${ACCURACY} = {'diff': [9.091699999999939e-05, 9.055599999999858e-05, 9.149999999999783e-05, 9.087499999999721e-05, 9.111099999999789e-05, 9.117999999999973e-05, 9.104100000000004e-05, 9.112500000000093e-05, 9.0541...</msg>
<status status="PASS" starttime="20201117 14:47:27.869" endtime="20201117 14:47:27.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.888" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.887" endtime="20201117 14:47:27.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.890" level="INFO">VALUE: [9.091699999999939e-05, 9.055599999999858e-05, 9.149999999999783e-05, 9.087499999999721e-05, 9.111099999999789e-05, 9.117999999999973e-05, 9.104100000000004e-05, 9.112500000000093e-05, 9.054100000000301e-05, 9.088900000000025e-05, 9.14450000000025e-05, 9.116600000000016e-05, 9.075000000000055e-05, 9.141699999999989e-05, 9.104200000000298e-05, 9.151400000000087e-05, 9.075000000000055e-05, 9.081899999999893e-05, 9.079199999999926e-05, 9.095800000000209e-05, 9.134699999999857e-05, 9.062500000000043e-05, 9.14719999999987e-05, 9.095799999999862e-05, 9.109699999999832e-05, 9.058399999999772e-05, 9.106999999999865e-05, 9.104199999999951e-05, 9.152800000000044e-05, 9.125000000000105e-05, 9.08060000000023e-05, 9.145799999999912e-05, 9.086099999999764e-05, 9.130499999999986e-05, 9.098599999999776e-05, 9.130499999999986e-05, 9.06670000000026e-05, 9.143099999999946e-05, 9.061100000000086e-05, 9.129199999999976e-05, 9.054199999999901e-05, 9.061100000000086e-05, 9.102799999999994e-05, 9.06520000000001e-05, 9.086200000000058e-05, 9.15000000000013e-05, 9.142999999999998e-05, 9.105499999999961e-05, 9.056899999999868e-05, 9.076400000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.889" endtime="20201117 14:47:27.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.884" endtime="20201117 14:47:27.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.894" endtime="20201117 14:47:27.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.897" endtime="20201117 14:47:27.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.895" endtime="20201117 14:47:27.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.892" endtime="20201117 14:47:27.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.518" endtime="20201117 14:47:27.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.516" endtime="20201117 14:47:27.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.515" endtime="20201117 14:47:27.918"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.921" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.929" endtime="20201117 14:47:27.950"></status>
</kw>
<msg timestamp="20201117 14:47:27.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.927" endtime="20201117 14:47:27.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.951" endtime="20201117 14:47:27.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.954" endtime="20201117 14:47:27.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.925" endtime="20201117 14:47:27.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.923" endtime="20201117 14:47:27.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.964" endtime="20201117 14:47:28.250"></status>
</kw>
<msg timestamp="20201117 14:47:28.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022283722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.962" endtime="20201117 14:47:28.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022283722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.254" endtime="20201117 14:47:28.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.263" endtime="20201117 14:47:28.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.959" endtime="20201117 14:47:28.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.958" endtime="20201117 14:47:28.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.270" level="INFO">${RESULT} = [{'time': 0.022375444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.172200000000241e-05, 'source_diff': 9.172200000000241e-05}, {'time': 0.022480514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:28.266" endtime="20201117 14:47:28.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.284" level="INFO">${ACCURACY} = {'diff': [9.172200000000241e-05, 9.209699999999932e-05, 9.156899999999968e-05, 9.173599999999851e-05, 9.191599999999744e-05, 9.155500000000011e-05, 9.169500000000275e-05, 9.248599999999926e-05, 9.2555...</msg>
<status status="PASS" starttime="20201117 14:47:28.271" endtime="20201117 14:47:28.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.288" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.287" endtime="20201117 14:47:28.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.291" level="INFO">VALUE: [9.172200000000241e-05, 9.209699999999932e-05, 9.156899999999968e-05, 9.173599999999851e-05, 9.191599999999744e-05, 9.155500000000011e-05, 9.169500000000275e-05, 9.248599999999926e-05, 9.255500000000111e-05, 9.25000000000023e-05, 9.229199999999729e-05, 9.227700000000172e-05, 9.247300000000264e-05, 9.156999999999915e-05, 9.161099999999839e-05, 9.209699999999932e-05, 9.15000000000013e-05, 9.205500000000061e-05, 9.204100000000104e-05, 9.168000000000023e-05, 9.222299999999892e-05, 9.2333e-05, 9.158399999999872e-05, 9.216700000000064e-05, 9.204200000000051e-05, 9.236099999999914e-05, 9.159799999999829e-05, 9.24589999999996e-05, 9.223700000000196e-05, 9.155500000000011e-05, 9.248599999999926e-05, 9.176400000000112e-05, 9.16939999999998e-05, 9.230499999999739e-05, 9.226299999999868e-05, 9.201400000000137e-05, 9.241700000000089e-05, 9.188899999999778e-05, 9.173600000000198e-05, 9.165300000000057e-05, 9.198599999999876e-05, 9.188900000000125e-05, 9.152700000000097e-05, 9.180500000000036e-05, 9.181899999999993e-05, 9.212499999999846e-05, 9.249999999999883e-05, 9.152800000000044e-05, 9.173600000000198e-05, 9.161099999999839e-05]</msg>
<status status="PASS" starttime="20201117 14:47:28.289" endtime="20201117 14:47:28.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.285" endtime="20201117 14:47:28.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.294" endtime="20201117 14:47:28.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.298" endtime="20201117 14:47:28.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.296" endtime="20201117 14:47:28.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.292" endtime="20201117 14:47:28.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.921" endtime="20201117 14:47:28.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.919" endtime="20201117 14:47:28.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.919" endtime="20201117 14:47:28.319"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.321" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.330" endtime="20201117 14:47:28.351"></status>
</kw>
<msg timestamp="20201117 14:47:28.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.329" endtime="20201117 14:47:28.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.353" endtime="20201117 14:47:28.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.355" endtime="20201117 14:47:28.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.325" endtime="20201117 14:47:28.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.323" endtime="20201117 14:47:28.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.365" endtime="20201117 14:47:28.651"></status>
</kw>
<msg timestamp="20201117 14:47:28.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.363" endtime="20201117 14:47:28.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.655" endtime="20201117 14:47:28.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.664" endtime="20201117 14:47:28.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.360" endtime="20201117 14:47:28.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.359" endtime="20201117 14:47:28.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.670" level="INFO">${RESULT} = [{'time': 0.022857694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.3333000000001e-05, 'source_diff': 9.3333000000001e-05}, {'time': 0.022964708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201117 14:47:28.667" endtime="20201117 14:47:28.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.684" level="INFO">${ACCURACY} = {'diff': [9.3333000000001e-05, 9.294400000000105e-05, 9.290200000000234e-05, 9.262499999999896e-05, 9.309700000000032e-05, 9.352800000000244e-05, 9.307000000000065e-05, 9.349999999999983e-05, 9.257000...</msg>
<status status="PASS" starttime="20201117 14:47:28.671" endtime="20201117 14:47:28.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.689" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.688" endtime="20201117 14:47:28.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.692" level="INFO">VALUE: [9.3333000000001e-05, 9.294400000000105e-05, 9.290200000000234e-05, 9.262499999999896e-05, 9.309700000000032e-05, 9.352800000000244e-05, 9.307000000000065e-05, 9.349999999999983e-05, 9.257000000000015e-05, 9.275000000000255e-05, 9.291700000000139e-05, 9.262499999999896e-05, 9.347300000000017e-05, 9.279199999999779e-05, 9.324999999999958e-05, 9.26659999999982e-05, 9.35139999999994e-05, 9.274999999999908e-05, 9.30139999999989e-05, 9.280499999999789e-05, 9.337499999999971e-05, 9.274999999999908e-05, 9.259699999999982e-05, 9.257000000000015e-05, 9.352800000000244e-05, 9.348699999999974e-05, 9.316699999999817e-05, 9.322299999999992e-05, 9.272199999999994e-05, 9.259699999999982e-05, 9.322200000000044e-05, 9.267999999999776e-05, 9.330599999999786e-05, 9.298599999999976e-05, 9.33200000000009e-05, 9.299999999999933e-05, 9.299999999999933e-05, 9.266700000000114e-05, 9.281999999999693e-05, 9.268100000000071e-05, 9.35269999999995e-05, 9.35139999999994e-05, 9.255500000000111e-05, 9.336100000000014e-05, 9.281900000000093e-05, 9.258300000000025e-05, 9.312499999999946e-05, 9.348600000000026e-05, 9.343100000000146e-05, 9.268100000000071e-05]</msg>
<status status="PASS" starttime="20201117 14:47:28.690" endtime="20201117 14:47:28.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.685" endtime="20201117 14:47:28.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.695" endtime="20201117 14:47:28.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.698" endtime="20201117 14:47:28.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.697" endtime="20201117 14:47:28.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.693" endtime="20201117 14:47:28.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.322" endtime="20201117 14:47:28.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.320" endtime="20201117 14:47:28.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.319" endtime="20201117 14:47:28.720"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.722" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.731" endtime="20201117 14:47:28.751"></status>
</kw>
<msg timestamp="20201117 14:47:28.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.729" endtime="20201117 14:47:28.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.753" endtime="20201117 14:47:28.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.756" endtime="20201117 14:47:28.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.727" endtime="20201117 14:47:28.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.725" endtime="20201117 14:47:28.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.765" endtime="20201117 14:47:29.051"></status>
</kw>
<msg timestamp="20201117 14:47:29.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:28.763" endtime="20201117 14:47:29.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:29.055" endtime="20201117 14:47:29.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.064" endtime="20201117 14:47:29.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.761" endtime="20201117 14:47:29.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.759" endtime="20201117 14:47:29.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.071" level="INFO">${RESULT} = [{'time': 0.022965667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.416699999999917e-05, 'source_diff': 9.416699999999917e-05}, {'time': 0.023073625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:29.067" endtime="20201117 14:47:29.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.085" level="INFO">${ACCURACY} = {'diff': [9.416699999999917e-05, 9.356900000000168e-05, 9.429199999999929e-05, 9.361100000000039e-05, 9.400000000000033e-05, 9.441700000000289e-05, 9.430600000000233e-05, 9.426300000000068e-05, 9.4527...</msg>
<status status="PASS" starttime="20201117 14:47:29.072" endtime="20201117 14:47:29.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.089" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.088" endtime="20201117 14:47:29.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.092" level="INFO">VALUE: [9.416699999999917e-05, 9.356900000000168e-05, 9.429199999999929e-05, 9.361100000000039e-05, 9.400000000000033e-05, 9.441700000000289e-05, 9.430600000000233e-05, 9.426300000000068e-05, 9.452799999999997e-05, 9.406899999999871e-05, 9.386100000000064e-05, 9.425000000000058e-05, 9.429099999999982e-05, 9.387500000000021e-05, 9.437500000000071e-05, 9.437500000000071e-05, 9.437499999999724e-05, 9.427799999999972e-05, 9.437500000000071e-05, 9.348699999999974e-05, 9.384700000000107e-05, 9.355499999999864e-05, 9.358300000000125e-05, 9.45140000000004e-05, 9.426400000000015e-05, 9.404099999999957e-05, 9.44859999999978e-05, 9.408299999999828e-05, 9.429199999999929e-05, 9.387500000000021e-05, 9.35139999999994e-05, 9.409700000000132e-05, 9.356999999999768e-05, 9.405500000000261e-05, 9.437500000000071e-05, 9.447199999999822e-05, 9.376399999999965e-05, 9.386100000000064e-05, 9.444399999999908e-05, 9.44720000000017e-05, 9.434700000000157e-05, 9.419500000000178e-05, 9.359800000000029e-05, 9.411099999999742e-05, 9.394500000000153e-05, 9.398700000000024e-05, 9.437500000000071e-05, 9.370900000000085e-05, 9.370800000000137e-05, 9.44859999999978e-05]</msg>
<status status="PASS" starttime="20201117 14:47:29.090" endtime="20201117 14:47:29.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.086" endtime="20201117 14:47:29.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.096" endtime="20201117 14:47:29.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.099" endtime="20201117 14:47:29.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.098" endtime="20201117 14:47:29.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.094" endtime="20201117 14:47:29.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.723" endtime="20201117 14:47:29.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.721" endtime="20201117 14:47:29.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.720" endtime="20201117 14:47:29.120"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.123" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.131" endtime="20201117 14:47:29.153"></status>
</kw>
<msg timestamp="20201117 14:47:29.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.130" endtime="20201117 14:47:29.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.154" endtime="20201117 14:47:29.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.157" endtime="20201117 14:47:29.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.127" endtime="20201117 14:47:29.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.125" endtime="20201117 14:47:29.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.166" endtime="20201117 14:47:29.451"></status>
</kw>
<msg timestamp="20201117 14:47:29.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023225542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023320208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.165" endtime="20201117 14:47:29.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023225542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023320208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.455" endtime="20201117 14:47:29.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.464" endtime="20201117 14:47:29.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.162" endtime="20201117 14:47:29.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.160" endtime="20201117 14:47:29.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.471" level="INFO">${RESULT} = [{'time': 0.023320208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.46660000000002e-05, 'source_diff': 9.46660000000002e-05}, {'time': 0.023429236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:29.467" endtime="20201117 14:47:29.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.486" level="INFO">${ACCURACY} = {'diff': [9.46660000000002e-05, 9.483299999999903e-05, 9.458299999999878e-05, 9.486099999999817e-05, 9.472299999999795e-05, 9.476400000000065e-05, 9.49859999999983e-05, 9.530599999999986e-05, 9.536099...</msg>
<status status="PASS" starttime="20201117 14:47:29.472" endtime="20201117 14:47:29.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.491" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.490" endtime="20201117 14:47:29.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.499" level="INFO">VALUE: [9.46660000000002e-05, 9.483299999999903e-05, 9.458299999999878e-05, 9.486099999999817e-05, 9.472299999999795e-05, 9.476400000000065e-05, 9.49859999999983e-05, 9.530599999999986e-05, 9.536099999999867e-05, 9.544499999999956e-05, 9.491600000000044e-05, 9.452799999999997e-05, 9.463900000000053e-05, 9.502699999999753e-05, 9.479100000000032e-05, 9.51530000000006e-05, 9.544400000000008e-05, 9.524999999999811e-05, 9.45140000000004e-05, 9.543099999999999e-05, 9.476400000000065e-05, 9.536100000000214e-05, 9.533299999999953e-05, 9.523699999999802e-05, 9.479100000000032e-05, 9.51660000000007e-05, 9.541600000000094e-05, 9.536099999999867e-05, 9.494399999999958e-05, 9.536099999999867e-05, 9.486099999999817e-05, 9.54720000000027e-05, 9.468099999999924e-05, 9.537500000000171e-05, 9.49859999999983e-05, 9.486099999999817e-05, 9.469500000000228e-05, 9.506999999999918e-05, 9.515200000000112e-05, 9.494399999999958e-05, 9.511100000000189e-05, 9.541700000000042e-05, 9.500000000000133e-05, 9.480599999999936e-05, 9.505599999999961e-05, 9.502800000000047e-05, 9.473599999999804e-05, 9.505599999999961e-05, 9.466699999999967e-05, 9.51530000000006e-05]</msg>
<status status="PASS" starttime="20201117 14:47:29.492" endtime="20201117 14:47:29.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.487" endtime="20201117 14:47:29.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.503" endtime="20201117 14:47:29.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.506" endtime="20201117 14:47:29.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.505" endtime="20201117 14:47:29.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.501" endtime="20201117 14:47:29.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.123" endtime="20201117 14:47:29.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.121" endtime="20201117 14:47:29.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.121" endtime="20201117 14:47:29.528"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.530" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.538" endtime="20201117 14:47:29.559"></status>
</kw>
<msg timestamp="20201117 14:47:29.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.537" endtime="20201117 14:47:29.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.561" endtime="20201117 14:47:29.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.564" endtime="20201117 14:47:29.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.534" endtime="20201117 14:47:29.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.532" endtime="20201117 14:47:29.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.573" endtime="20201117 14:47:29.859"></status>
</kw>
<msg timestamp="20201117 14:47:29.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022351181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.571" endtime="20201117 14:47:29.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022351181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.863" endtime="20201117 14:47:29.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.872" endtime="20201117 14:47:29.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.569" endtime="20201117 14:47:29.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.567" endtime="20201117 14:47:29.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.879" level="INFO">${RESULT} = [{'time': 0.022351181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.625000000000258e-05, 'source_diff': 9.625000000000258e-05}, {'time': 0.022462181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:29.875" endtime="20201117 14:47:29.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.893" level="INFO">${ACCURACY} = {'diff': [9.625000000000258e-05, 9.611200000000236e-05, 9.580500000000089e-05, 9.576400000000165e-05, 9.636099999999967e-05, 9.600000000000233e-05, 9.581900000000046e-05, 9.579200000000079e-05, 9.6124...</msg>
<status status="PASS" starttime="20201117 14:47:29.880" endtime="20201117 14:47:29.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.898" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.896" endtime="20201117 14:47:29.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.900" level="INFO">VALUE: [9.625000000000258e-05, 9.611200000000236e-05, 9.580500000000089e-05, 9.576400000000165e-05, 9.636099999999967e-05, 9.600000000000233e-05, 9.581900000000046e-05, 9.579200000000079e-05, 9.612499999999899e-05, 9.562499999999849e-05, 9.580600000000036e-05, 9.632000000000043e-05, 9.63880000000028e-05, 9.568100000000024e-05, 9.588899999999831e-05, 9.554100000000107e-05, 9.581900000000046e-05, 9.554100000000107e-05, 9.562500000000196e-05, 9.627800000000172e-05, 9.573599999999904e-05, 9.641699999999795e-05, 9.580600000000036e-05, 9.622199999999997e-05, 9.619500000000031e-05, 9.58339999999995e-05, 9.630600000000086e-05, 9.556900000000021e-05, 9.611099999999942e-05, 9.644400000000108e-05, 9.63470000000001e-05, 9.647200000000022e-05, 9.599999999999886e-05, 9.568100000000024e-05, 9.58469999999996e-05, 9.620899999999988e-05, 9.594500000000006e-05, 9.569500000000328e-05, 9.591699999999745e-05, 9.56669999999972e-05, 9.606899999999724e-05, 9.611100000000289e-05, 9.627800000000172e-05, 9.587499999999874e-05, 9.609699999999985e-05, 9.591700000000092e-05, 9.593100000000049e-05, 9.643099999999752e-05, 9.623599999999954e-05, 9.575000000000208e-05]</msg>
<status status="PASS" starttime="20201117 14:47:29.899" endtime="20201117 14:47:29.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.894" endtime="20201117 14:47:29.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.903" endtime="20201117 14:47:29.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.907" endtime="20201117 14:47:29.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.905" endtime="20201117 14:47:29.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.902" endtime="20201117 14:47:29.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.531" endtime="20201117 14:47:29.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.529" endtime="20201117 14:47:29.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.528" endtime="20201117 14:47:29.928"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.931" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.939" endtime="20201117 14:47:29.960"></status>
</kw>
<msg timestamp="20201117 14:47:29.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.938" endtime="20201117 14:47:29.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.961" endtime="20201117 14:47:29.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.964" endtime="20201117 14:47:29.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.935" endtime="20201117 14:47:29.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.933" endtime="20201117 14:47:29.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.973" endtime="20201117 14:47:30.259"></status>
</kw>
<msg timestamp="20201117 14:47:30.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.971" endtime="20201117 14:47:30.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.264" endtime="20201117 14:47:30.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.272" endtime="20201117 14:47:30.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.969" endtime="20201117 14:47:30.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.967" endtime="20201117 14:47:30.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.279" level="INFO">${RESULT} = [{'time': 0.022523028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.719500000000131e-05, 'source_diff': 9.719500000000131e-05}, {'time': 0.022636042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:30.276" endtime="20201117 14:47:30.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.293" level="INFO">${ACCURACY} = {'diff': [9.719500000000131e-05, 9.709799999999685e-05, 9.698599999999682e-05, 9.743100000000199e-05, 9.71669999999987e-05, 9.736200000000014e-05, 9.675000000000308e-05, 9.730499999999892e-05, 9.74299...</msg>
<status status="PASS" starttime="20201117 14:47:30.280" endtime="20201117 14:47:30.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.298" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:47:30.297" endtime="20201117 14:47:30.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.300" level="INFO">VALUE: [9.719500000000131e-05, 9.709799999999685e-05, 9.698599999999682e-05, 9.743100000000199e-05, 9.71669999999987e-05, 9.736200000000014e-05, 9.675000000000308e-05, 9.730499999999892e-05, 9.742999999999905e-05, 9.741599999999948e-05, 9.727799999999925e-05, 9.747199999999775e-05, 9.737500000000024e-05, 9.737500000000024e-05, 9.719500000000131e-05, 9.693100000000149e-05, 9.673600000000004e-05, 9.736100000000067e-05, 9.743099999999852e-05, 9.706899999999824e-05, 9.715199999999966e-05, 9.699999999999986e-05, 9.718000000000226e-05, 9.66799999999983e-05, 9.66799999999983e-05, 9.705600000000161e-05, 9.737500000000024e-05, 9.725000000000011e-05, 9.723600000000054e-05, 9.705600000000161e-05, 9.673599999999657e-05, 9.737500000000024e-05, 9.723600000000054e-05, 9.708300000000128e-05, 9.715199999999966e-05, 9.712499999999999e-05, 9.708300000000128e-05, 9.712499999999999e-05, 9.708300000000128e-05, 9.744499999999809e-05, 9.693100000000149e-05, 9.662499999999949e-05, 9.683299999999756e-05, 9.745800000000165e-05, 9.736200000000014e-05, 9.663900000000253e-05, 9.723600000000054e-05, 9.673600000000004e-05, 9.74860000000008e-05, 9.669400000000133e-05]</msg>
<status status="PASS" starttime="20201117 14:47:30.299" endtime="20201117 14:47:30.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.294" endtime="20201117 14:47:30.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.304" endtime="20201117 14:47:30.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:30.307" endtime="20201117 14:47:30.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.306" endtime="20201117 14:47:30.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.302" endtime="20201117 14:47:30.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.931" endtime="20201117 14:47:30.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.929" endtime="20201117 14:47:30.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.928" endtime="20201117 14:47:30.328"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.331" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.339" endtime="20201117 14:47:30.360"></status>
</kw>
<msg timestamp="20201117 14:47:30.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.338" endtime="20201117 14:47:30.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.361" endtime="20201117 14:47:30.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.364" endtime="20201117 14:47:30.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.335" endtime="20201117 14:47:30.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.333" endtime="20201117 14:47:30.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.374" endtime="20201117 14:47:30.660"></status>
</kw>
<msg timestamp="20201117 14:47:30.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.372" endtime="20201117 14:47:30.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.665" endtime="20201117 14:47:30.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.673" endtime="20201117 14:47:30.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.369" endtime="20201117 14:47:30.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.367" endtime="20201117 14:47:30.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.680" level="INFO">${RESULT} = [{'time': 0.022557569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.852700000000103e-05, 'source_diff': 9.852700000000103e-05}, {'time': 0.022669639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:30.677" endtime="20201117 14:47:30.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.698" level="INFO">${ACCURACY} = {'diff': [9.852700000000103e-05, 9.78609999999977e-05, 9.794399999999912e-05, 9.791599999999998e-05, 9.82219999999985e-05, 9.8028e-05, 9.768099999999877e-05, 9.845899999999866e-05, 9.84860000000018e-0...</msg>
<status status="PASS" starttime="20201117 14:47:30.681" endtime="20201117 14:47:30.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.703" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:47:30.702" endtime="20201117 14:47:30.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.706" level="INFO">VALUE: [9.852700000000103e-05, 9.78609999999977e-05, 9.794399999999912e-05, 9.791599999999998e-05, 9.82219999999985e-05, 9.8028e-05, 9.768099999999877e-05, 9.845899999999866e-05, 9.84860000000018e-05, 9.76669999999992e-05, 9.761099999999745e-05, 9.837500000000124e-05, 9.819400000000283e-05, 9.838900000000081e-05, 9.805499999999967e-05, 9.773599999999757e-05, 9.81669999999997e-05, 9.76669999999992e-05, 9.805599999999914e-05, 9.825000000000111e-05, 9.78059999999989e-05, 9.811100000000142e-05, 9.840300000000038e-05, 9.797200000000172e-05, 9.809699999999838e-05, 9.78609999999977e-05, 9.769399999999887e-05, 9.752700000000003e-05, 9.836100000000167e-05, 9.773600000000104e-05, 9.841699999999995e-05, 9.825000000000111e-05, 9.755599999999864e-05, 9.784699999999813e-05, 9.787500000000074e-05, 9.818099999999927e-05, 9.850000000000136e-05, 9.812500000000099e-05, 9.768000000000276e-05, 9.76799999999993e-05, 9.75409999999996e-05, 9.773600000000104e-05, 9.844399999999962e-05, 9.759800000000082e-05, 9.84860000000018e-05, 9.787500000000074e-05, 9.820799999999894e-05, 9.784800000000107e-05, 9.757000000000168e-05, 9.841699999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:47:30.704" endtime="20201117 14:47:30.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.699" endtime="20201117 14:47:30.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.709" endtime="20201117 14:47:30.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:30.713" endtime="20201117 14:47:30.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.711" endtime="20201117 14:47:30.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.707" endtime="20201117 14:47:30.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.331" endtime="20201117 14:47:30.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.330" endtime="20201117 14:47:30.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.329" endtime="20201117 14:47:30.734"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.736" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.745" endtime="20201117 14:47:30.766"></status>
</kw>
<msg timestamp="20201117 14:47:30.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.743" endtime="20201117 14:47:30.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.768" endtime="20201117 14:47:30.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.771" endtime="20201117 14:47:30.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.740" endtime="20201117 14:47:30.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.738" endtime="20201117 14:47:30.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.780" endtime="20201117 14:47:31.068"></status>
</kw>
<msg timestamp="20201117 14:47:31.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023199986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023298611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.779" endtime="20201117 14:47:31.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023199986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023298611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.072" endtime="20201117 14:47:31.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.081" endtime="20201117 14:47:31.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.776" endtime="20201117 14:47:31.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.774" endtime="20201117 14:47:31.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.088" level="INFO">${RESULT} = [{'time': 0.023298611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.862500000000149e-05, 'source_diff': 9.862500000000149e-05}, {'time': 0.023412625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:31.084" endtime="20201117 14:47:31.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.103" level="INFO">${ACCURACY} = {'diff': [9.862500000000149e-05, 9.855599999999964e-05, 9.918100000000027e-05, 9.88059999999999e-05, 9.893100000000002e-05, 9.915300000000113e-05, 9.911100000000242e-05, 9.92219999999995e-05, 9.888799...</msg>
<status status="PASS" starttime="20201117 14:47:31.089" endtime="20201117 14:47:31.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.107" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.106" endtime="20201117 14:47:31.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.110" level="INFO">VALUE: [9.862500000000149e-05, 9.855599999999964e-05, 9.918100000000027e-05, 9.88059999999999e-05, 9.893100000000002e-05, 9.915300000000113e-05, 9.911100000000242e-05, 9.92219999999995e-05, 9.888799999999837e-05, 9.930500000000092e-05, 9.865300000000063e-05, 9.86800000000003e-05, 9.950000000000236e-05, 9.931999999999996e-05, 9.931999999999996e-05, 9.862500000000149e-05, 9.902799999999753e-05, 9.912499999999852e-05, 9.85280000000005e-05, 9.879200000000032e-05, 9.890300000000088e-05, 9.938900000000181e-05, 9.897199999999926e-05, 9.923600000000254e-05, 9.91800000000008e-05, 9.863899999999759e-05, 9.851400000000093e-05, 9.875000000000161e-05, 9.923700000000202e-05, 9.908399999999928e-05, 9.904200000000057e-05, 9.952699999999856e-05, 9.893000000000055e-05, 9.916600000000123e-05, 9.924999999999864e-05, 9.854200000000007e-05, 9.900000000000186e-05, 9.925000000000211e-05, 9.948599999999932e-05, 9.869499999999934e-05, 9.890300000000088e-05, 9.909799999999885e-05, 9.905600000000014e-05, 9.868099999999977e-05, 9.915199999999819e-05, 9.855500000000017e-05, 9.87080000000029e-05, 9.873599999999857e-05, 9.861099999999845e-05, 9.88609999999987e-05]</msg>
<status status="PASS" starttime="20201117 14:47:31.109" endtime="20201117 14:47:31.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.104" endtime="20201117 14:47:31.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.113" endtime="20201117 14:47:31.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.117" endtime="20201117 14:47:31.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.115" endtime="20201117 14:47:31.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.111" endtime="20201117 14:47:31.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.737" endtime="20201117 14:47:31.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.735" endtime="20201117 14:47:31.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.734" endtime="20201117 14:47:31.138"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.140" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.149" endtime="20201117 14:47:31.170"></status>
</kw>
<msg timestamp="20201117 14:47:31.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.148" endtime="20201117 14:47:31.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.172" endtime="20201117 14:47:31.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.175" endtime="20201117 14:47:31.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.145" endtime="20201117 14:47:31.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.142" endtime="20201117 14:47:31.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.184" endtime="20201117 14:47:31.470"></status>
</kw>
<msg timestamp="20201117 14:47:31.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022878944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022978889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.182" endtime="20201117 14:47:31.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022878944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022978889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.474" endtime="20201117 14:47:31.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.482" endtime="20201117 14:47:31.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.180" endtime="20201117 14:47:31.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.178" endtime="20201117 14:47:31.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.489" level="INFO">${RESULT} = [{'time': 0.022978889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.994500000000059e-05, 'source_diff': 9.994500000000059e-05}, {'time': 0.023091847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:31.486" endtime="20201117 14:47:31.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.503" level="INFO">${ACCURACY} = {'diff': [9.994500000000059e-05, 0.00010042999999999858, 9.981900000000099e-05, 0.0001002220000000005, 0.00010023600000000008, 9.987499999999927e-05, 9.994499999999712e-05, 9.965299999999816e-05, 0.00...</msg>
<status status="PASS" starttime="20201117 14:47:31.490" endtime="20201117 14:47:31.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.508" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.507" endtime="20201117 14:47:31.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.510" level="INFO">VALUE: [9.994500000000059e-05, 0.00010042999999999858, 9.981900000000099e-05, 0.0001002220000000005, 0.00010023600000000008, 9.987499999999927e-05, 9.994499999999712e-05, 9.965299999999816e-05, 0.00010008300000000081, 9.969400000000087e-05, 0.00010023600000000008, 0.00010041600000000248, 9.998599999999983e-05, 9.988799999999937e-05, 0.0001001800000000018, 9.997200000000026e-05, 0.00010011099999999995, 0.00010048600000000033, 9.998599999999983e-05, 0.00010048600000000033, 9.969400000000087e-05, 0.00010011200000000289, 0.00010023600000000008, 9.981900000000099e-05, 9.975000000000261e-05, 0.0001000549999999982, 9.965300000000163e-05, 0.00010020799999999747, 9.968100000000077e-05, 9.961099999999945e-05, 0.0001000419999999981, 9.987499999999927e-05, 9.990199999999894e-05, 0.0001000419999999981, 9.992999999999808e-05, 9.987499999999927e-05, 0.00010024999999999964, 0.00010038899999999934, 0.00010023600000000008, 0.00010005500000000167, 0.00010030599999999792, 0.00010038899999999934, 0.00010040300000000238, 9.99020000000024e-05, 9.983400000000003e-05, 9.987499999999927e-05, 9.962499999999902e-05, 0.00010011099999999995, 9.983300000000056e-05, 9.96939999999974e-05]</msg>
<status status="PASS" starttime="20201117 14:47:31.509" endtime="20201117 14:47:31.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.504" endtime="20201117 14:47:31.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.513" endtime="20201117 14:47:31.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.517" endtime="20201117 14:47:31.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.515" endtime="20201117 14:47:31.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.512" endtime="20201117 14:47:31.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.141" endtime="20201117 14:47:31.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.139" endtime="20201117 14:47:31.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.138" endtime="20201117 14:47:31.539"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.541" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.550" endtime="20201117 14:47:31.571"></status>
</kw>
<msg timestamp="20201117 14:47:31.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.548" endtime="20201117 14:47:31.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.572" endtime="20201117 14:47:31.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.575" endtime="20201117 14:47:31.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.545" endtime="20201117 14:47:31.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.543" endtime="20201117 14:47:31.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.584" endtime="20201117 14:47:31.871"></status>
</kw>
<msg timestamp="20201117 14:47:31.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023022806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.583" endtime="20201117 14:47:31.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023022806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.875" endtime="20201117 14:47:31.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.883" endtime="20201117 14:47:31.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.580" endtime="20201117 14:47:31.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.578" endtime="20201117 14:47:31.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.890" level="INFO">${RESULT} = [{'time': 0.023022806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010072300000000048, 'source_diff': 0.00010072300000000048}, {'time': 0.023139806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:31.887" endtime="20201117 14:47:31.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.903" level="INFO">${ACCURACY} = {'diff': [0.00010072300000000048, 0.00010134799999999763, 0.00010106899999999877, 0.000101513999999997, 0.0001008060000000019, 0.00010058299999999784, 0.0001005549999999987, 0.00010125000000000065, 0....</msg>
<status status="PASS" starttime="20201117 14:47:31.891" endtime="20201117 14:47:31.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.908" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.907" endtime="20201117 14:47:31.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.910" level="INFO">VALUE: [0.00010072300000000048, 0.00010134799999999763, 0.00010106899999999877, 0.000101513999999997, 0.0001008060000000019, 0.00010058299999999784, 0.0001005549999999987, 0.00010125000000000065, 0.00010147200000000176, 0.00010145899999999819, 0.00010143099999999905, 0.00010122199999999804, 0.00010094499999999812, 0.00010127799999999978, 0.00010112499999999705, 0.00010063899999999959, 0.00010080499999999895, 0.00010138900000000034, 0.00010075000000000014, 0.00010091699999999898, 0.0001010000000000004, 0.00010126400000000021, 0.00010119500000000184, 0.00010057000000000121, 0.0001013749999999973, 0.00010079200000000232, 0.00010123699999999708, 0.00010144400000000262, 0.00010079100000000285, 0.00010067999999999883, 0.00010075000000000014, 0.00010136099999999773, 0.00010058400000000078, 0.00010059699999999741, 0.0001006809999999983, 0.00010076399999999971, 0.00010084799999999713, 0.00010093100000000202, 0.00010109699999999791, 0.00010094399999999865, 0.00010079099999999938, 0.00010111100000000095, 0.0001006939999999984, 0.0001008610000000007, 0.00010112500000000052, 0.00010058300000000131, 0.00010068100000000177, 0.00010143099999999905, 0.00010076399999999971, 0.0001010549999999992]</msg>
<status status="PASS" starttime="20201117 14:47:31.909" endtime="20201117 14:47:31.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.904" endtime="20201117 14:47:31.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.914" endtime="20201117 14:47:31.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.918" endtime="20201117 14:47:31.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.916" endtime="20201117 14:47:31.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.913" endtime="20201117 14:47:31.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.542" endtime="20201117 14:47:31.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.540" endtime="20201117 14:47:31.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.539" endtime="20201117 14:47:31.939"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.941" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.950" endtime="20201117 14:47:31.971"></status>
</kw>
<msg timestamp="20201117 14:47:31.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.948" endtime="20201117 14:47:31.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.973" endtime="20201117 14:47:31.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.975" endtime="20201117 14:47:31.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.945" endtime="20201117 14:47:31.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.943" endtime="20201117 14:47:31.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.985" endtime="20201117 14:47:32.271"></status>
</kw>
<msg timestamp="20201117 14:47:32.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022384347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.983" endtime="20201117 14:47:32.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022384347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.275" endtime="20201117 14:47:32.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.284" endtime="20201117 14:47:32.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.980" endtime="20201117 14:47:32.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.978" endtime="20201117 14:47:32.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.290" level="INFO">${RESULT} = [{'time': 0.022384347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010247199999999929, 'source_diff': 0.00010247199999999929}, {'time': 0.022502347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:32.287" endtime="20201117 14:47:32.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.304" level="INFO">${ACCURACY} = {'diff': [0.00010247199999999929, 0.00010199999999999793, 0.00010216700000000023, 0.00010215299999999719, 0.00010155599999999917, 0.0001020000000000014, 0.00010180599999999942, 0.00010179199999999985,...</msg>
<status status="PASS" starttime="20201117 14:47:32.291" endtime="20201117 14:47:32.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.309" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.308" endtime="20201117 14:47:32.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.312" level="INFO">VALUE: [0.00010247199999999929, 0.00010199999999999793, 0.00010216700000000023, 0.00010215299999999719, 0.00010155599999999917, 0.0001020000000000014, 0.00010180599999999942, 0.00010179199999999985, 0.00010209800000000185, 0.00010216700000000023, 0.00010161100000000145, 0.00010186099999999823, 0.00010243000000000058, 0.00010220799999999947, 0.00010184699999999866, 0.0001021809999999998, 0.00010222299999999851, 0.00010236099999999873, 0.00010211099999999848, 0.00010183299999999909, 0.00010222299999999851, 0.00010179100000000038, 0.00010244400000000015, 0.00010234700000000263, 0.00010184699999999866, 0.00010170800000000244, 0.00010188900000000084, 0.00010170900000000191, 0.00010215300000000066, 0.00010165200000000069, 0.00010191699999999998, 0.00010172299999999801, 0.0001020420000000001, 0.00010159699999999841, 0.00010163800000000112, 0.00010244400000000015, 0.00010197199999999879, 0.00010181899999999952, 0.00010230500000000045, 0.00010229200000000035, 0.00010254199999999714, 0.00010211099999999848, 0.00010211099999999848, 0.00010243000000000058, 0.00010219499999999937, 0.00010156899999999927, 0.00010216600000000076, 0.00010238900000000134, 0.00010172199999999854, 0.00010183399999999856]</msg>
<status status="PASS" starttime="20201117 14:47:32.310" endtime="20201117 14:47:32.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.305" endtime="20201117 14:47:32.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.315" endtime="20201117 14:47:32.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.318" endtime="20201117 14:47:32.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.317" endtime="20201117 14:47:32.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.313" endtime="20201117 14:47:32.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.942" endtime="20201117 14:47:32.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.940" endtime="20201117 14:47:32.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.939" endtime="20201117 14:47:32.340"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.342" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.351" endtime="20201117 14:47:32.373"></status>
</kw>
<msg timestamp="20201117 14:47:32.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.349" endtime="20201117 14:47:32.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.374" endtime="20201117 14:47:32.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.377" endtime="20201117 14:47:32.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.346" endtime="20201117 14:47:32.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.344" endtime="20201117 14:47:32.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.386" endtime="20201117 14:47:32.673"></status>
</kw>
<msg timestamp="20201117 14:47:32.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023276639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023379681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.384" endtime="20201117 14:47:32.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023276639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023379681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.678" endtime="20201117 14:47:32.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.686" endtime="20201117 14:47:32.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.382" endtime="20201117 14:47:32.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.380" endtime="20201117 14:47:32.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.693" level="INFO">${RESULT} = [{'time': 0.023379681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001030420000000011, 'source_diff': 0.0001030420000000011}, {'time': 0.023498694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:32.689" endtime="20201117 14:47:32.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.708" level="INFO">${ACCURACY} = {'diff': [0.0001030420000000011, 0.00010331900000000102, 0.00010266599999999779, 0.00010326399999999875, 0.00010341599999999854, 0.00010313900000000209, 0.00010281900000000052, 0.00010274999999999868,...</msg>
<status status="PASS" starttime="20201117 14:47:32.694" endtime="20201117 14:47:32.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.713" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.712" endtime="20201117 14:47:32.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.715" level="INFO">VALUE: [0.0001030420000000011, 0.00010331900000000102, 0.00010266599999999779, 0.00010326399999999875, 0.00010341599999999854, 0.00010313900000000209, 0.00010281900000000052, 0.00010274999999999868, 0.00010305600000000067, 0.00010294500000000012, 0.0001028749999999988, 0.00010274999999999868, 0.0001034870000000028, 0.0001035420000000016, 0.0001025550000000007, 0.00010262499999999855, 0.00010323600000000308, 0.00010268000000000083, 0.0001026810000000003, 0.00010274999999999868, 0.00010277799999999782, 0.0001033200000000005, 0.00010340199999999897, 0.00010349999999999943, 0.00010290199999999847, 0.00010327800000000179, 0.00010305600000000067, 0.00010312500000000252, 0.00010311099999999948, 0.00010347200000000029, 0.00010274999999999868, 0.00010291700000000098, 0.00010334699999999669, 0.00010324999999999918, 0.00010343099999999758, 0.0001028749999999988, 0.00010279200000000085, 0.00010276299999999877, 0.00010324999999999918, 0.00010274999999999868, 0.00010279200000000085, 0.00010281900000000052, 0.00010252800000000103, 0.00010255600000000017, 0.0001025420000000006, 0.00010344500000000062, 0.00010297300000000273, 0.00010338900000000234, 0.0001030420000000011, 0.00010327699999999884]</msg>
<status status="PASS" starttime="20201117 14:47:32.714" endtime="20201117 14:47:32.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.709" endtime="20201117 14:47:32.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.719" endtime="20201117 14:47:32.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.722" endtime="20201117 14:47:32.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.721" endtime="20201117 14:47:32.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.717" endtime="20201117 14:47:32.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.343" endtime="20201117 14:47:32.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.341" endtime="20201117 14:47:32.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.340" endtime="20201117 14:47:32.743"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.746" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.754" endtime="20201117 14:47:32.774"></status>
</kw>
<msg timestamp="20201117 14:47:32.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.753" endtime="20201117 14:47:32.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.776" endtime="20201117 14:47:32.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.778" endtime="20201117 14:47:32.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.750" endtime="20201117 14:47:32.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.748" endtime="20201117 14:47:32.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.788" endtime="20201117 14:47:33.073"></status>
</kw>
<msg timestamp="20201117 14:47:33.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.786" endtime="20201117 14:47:33.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.077" endtime="20201117 14:47:33.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.086" endtime="20201117 14:47:33.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.783" endtime="20201117 14:47:33.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.782" endtime="20201117 14:47:33.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.093" level="INFO">${RESULT} = [{'time': 0.022652611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010354199999999814, 'source_diff': 0.00010354199999999814}, {'time': 0.022773653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:33.090" endtime="20201117 14:47:33.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.106" level="INFO">${ACCURACY} = {'diff': [0.00010354199999999814, 0.000104514, 0.00010374999999999968, 0.00010380599999999796, 0.00010408400000000081, 0.00010441699999999901, 0.00010401300000000002, 0.0001042360000000006, 0.00010398...</msg>
<status status="PASS" starttime="20201117 14:47:33.094" endtime="20201117 14:47:33.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.111" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.110" endtime="20201117 14:47:33.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.114" level="INFO">VALUE: [0.00010354199999999814, 0.000104514, 0.00010374999999999968, 0.00010380599999999796, 0.00010408400000000081, 0.00010441699999999901, 0.00010401300000000002, 0.0001042360000000006, 0.00010398600000000036, 0.00010438899999999987, 0.00010384700000000066, 0.00010383299999999762, 0.0001037360000000001, 0.00010402799999999907, 0.00010366699999999826, 0.00010386100000000023, 0.00010374999999999968, 0.00010362499999999955, 0.00010430499999999898, 0.00010399999999999993, 0.00010420800000000147, 0.000104514, 0.0001035550000000017, 0.00010394400000000165, 0.00010422199999999757, 0.00010443099999999858, 0.00010448600000000086, 0.00010362499999999955, 0.00010368099999999783, 0.00010411100000000048, 0.00010437499999999683, 0.00010361099999999998, 0.00010376399999999925, 0.00010370800000000097, 0.0001043750000000003, 0.00010397199999999732, 0.00010356999999999728, 0.0001043750000000003, 0.00010388899999999937, 0.00010376399999999925, 0.0001043750000000003, 0.00010380599999999796, 0.00010441699999999901, 0.0001037079999999975, 0.00010408300000000134, 0.00010381899999999805, 0.0001037360000000001, 0.00010386099999999676, 0.00010374999999999968, 0.00010441699999999901]</msg>
<status status="PASS" starttime="20201117 14:47:33.112" endtime="20201117 14:47:33.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.107" endtime="20201117 14:47:33.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.117" endtime="20201117 14:47:33.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.120" endtime="20201117 14:47:33.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.119" endtime="20201117 14:47:33.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.115" endtime="20201117 14:47:33.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.747" endtime="20201117 14:47:33.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.745" endtime="20201117 14:47:33.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.744" endtime="20201117 14:47:33.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.055" endtime="20201117 14:47:33.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.151" endtime="20201117 14:47:33.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.149" endtime="20201117 14:47:33.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.147" endtime="20201117 14:47:33.171"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:46:52.981" endtime="20201117 14:47:33.172" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.182" endtime="20201117 14:47:33.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.181" endtime="20201117 14:47:33.203"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.217" endtime="20201117 14:47:33.233"></status>
</kw>
<msg timestamp="20201117 14:47:33.234" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.215" endtime="20201117 14:47:33.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.237" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.235" endtime="20201117 14:47:33.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.240" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:47:33.238" endtime="20201117 14:47:33.240"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:33.213" endtime="20201117 14:47:33.241"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:33.210" endtime="20201117 14:47:33.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.208" endtime="20201117 14:47:33.242"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:47:33.245" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:47:33.245" endtime="20201117 14:47:33.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.243" endtime="20201117 14:47:33.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.207" endtime="20201117 14:47:33.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.206" endtime="20201117 14:47:33.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.247" endtime="20201117 14:47:33.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.205" endtime="20201117 14:47:33.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.203" endtime="20201117 14:47:33.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.179" endtime="20201117 14:47:33.250"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.254" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.263" endtime="20201117 14:47:33.281"></status>
</kw>
<msg timestamp="20201117 14:47:33.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.261" endtime="20201117 14:47:33.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.283" endtime="20201117 14:47:33.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.285" endtime="20201117 14:47:33.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.259" endtime="20201117 14:47:33.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.257" endtime="20201117 14:47:33.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.296" endtime="20201117 14:47:33.582"></status>
</kw>
<msg timestamp="20201117 14:47:33.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070778833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070812194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.294" endtime="20201117 14:47:33.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070778833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070812194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.586" endtime="20201117 14:47:33.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.595" endtime="20201117 14:47:33.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.290" endtime="20201117 14:47:33.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.288" endtime="20201117 14:47:33.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.602" level="INFO">${RESULT} = [{'time': 0.070812194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3360999999995644e-05, 'source_diff': 3.3360999999995644e-05}, {'time': 0.070847167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:33.598" endtime="20201117 14:47:33.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.616" level="INFO">${ACCURACY} = {'diff': [3.3360999999995644e-05, 3.0514000000009256e-05, 3.0500000000002747e-05, 3.052800000000189e-05, 3.0500000000002747e-05, 3.052800000000189e-05, 3.052799999998801e-05, 3.0540999999995044e-05, 3...</msg>
<status status="PASS" starttime="20201117 14:47:33.603" endtime="20201117 14:47:33.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.620" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.619" endtime="20201117 14:47:33.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.623" level="INFO">VALUE: [3.3360999999995644e-05, 3.0514000000009256e-05, 3.0500000000002747e-05, 3.052800000000189e-05, 3.0500000000002747e-05, 3.052800000000189e-05, 3.052799999998801e-05, 3.0540999999995044e-05, 3.058300000000069e-05, 3.0513999999995378e-05, 3.052800000000189e-05, 3.0486000000010116e-05, 3.052800000000189e-05, 3.0540999999995044e-05, 3.052800000000189e-05, 3.0584000000000167e-05, 3.0540999999995044e-05, 3.0584000000000167e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052799999998801e-05, 3.052800000000189e-05, 3.055600000000103e-05, 3.052800000000189e-05, 3.0512999999995905e-05, 3.0500000000002747e-05, 3.052800000000189e-05, 3.0514000000009256e-05, 3.0513999999995378e-05, 3.054199999999452e-05, 3.054199999999452e-05, 3.058300000000069e-05, 3.0513999999995378e-05, 3.0542000000008396e-05, 3.0542000000008396e-05, 3.054199999999452e-05, 3.0540999999995044e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.052799999998801e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0472000000003607e-05, 3.0500000000002747e-05, 3.054100000000892e-05, 3.052800000000189e-05, 3.0542000000008396e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201117 14:47:33.622" endtime="20201117 14:47:33.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.617" endtime="20201117 14:47:33.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.626" endtime="20201117 14:47:33.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.630" endtime="20201117 14:47:33.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.628" endtime="20201117 14:47:33.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.625" endtime="20201117 14:47:33.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.255" endtime="20201117 14:47:33.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.253" endtime="20201117 14:47:33.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.252" endtime="20201117 14:47:33.652"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.654" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.663" endtime="20201117 14:47:33.681"></status>
</kw>
<msg timestamp="20201117 14:47:33.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.661" endtime="20201117 14:47:33.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.683" endtime="20201117 14:47:33.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.687" endtime="20201117 14:47:33.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.659" endtime="20201117 14:47:33.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.656" endtime="20201117 14:47:33.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.699" endtime="20201117 14:47:33.985"></status>
</kw>
<msg timestamp="20201117 14:47:33.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023336264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023366833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.696" endtime="20201117 14:47:33.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023336264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023366833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.990" endtime="20201117 14:47:33.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.998" endtime="20201117 14:47:34.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.693" endtime="20201117 14:47:34.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.692" endtime="20201117 14:47:34.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.006" level="INFO">${RESULT} = [{'time': 0.023366833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.056900000000112e-05, 'source_diff': 3.056900000000112e-05}, {'time': 0.0234015, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:34.002" endtime="20201117 14:47:34.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.019" level="INFO">${ACCURACY} = {'diff': [3.056900000000112e-05, 3.054199999999799e-05, 3.0499999999999278e-05, 3.0499999999999278e-05, 3.052700000000241e-05, 3.052799999999842e-05, 3.056900000000112e-05, 3.054199999999799e-05, 3.05...</msg>
<status status="PASS" starttime="20201117 14:47:34.007" endtime="20201117 14:47:34.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.024" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.023" endtime="20201117 14:47:34.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.026" level="INFO">VALUE: [3.056900000000112e-05, 3.054199999999799e-05, 3.0499999999999278e-05, 3.0499999999999278e-05, 3.052700000000241e-05, 3.052799999999842e-05, 3.056900000000112e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.0582999999997224e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.052700000000241e-05, 3.054199999999799e-05, 3.0526999999998944e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.058300000000069e-05, 3.052799999999842e-05, 3.0472000000000138e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.047299999999961e-05, 3.0512999999999374e-05, 3.0514000000002317e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.0584000000000167e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.052700000000241e-05, 3.052799999999842e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0513999999998848e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.025" endtime="20201117 14:47:34.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.020" endtime="20201117 14:47:34.027"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.030" endtime="20201117 14:47:34.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.033" endtime="20201117 14:47:34.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.032" endtime="20201117 14:47:34.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.028" endtime="20201117 14:47:34.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.655" endtime="20201117 14:47:34.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.653" endtime="20201117 14:47:34.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.652" endtime="20201117 14:47:34.055"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.057" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.065" endtime="20201117 14:47:34.083"></status>
</kw>
<msg timestamp="20201117 14:47:34.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.064" endtime="20201117 14:47:34.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.084" endtime="20201117 14:47:34.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.087" endtime="20201117 14:47:34.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.061" endtime="20201117 14:47:34.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.059" endtime="20201117 14:47:34.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.099" endtime="20201117 14:47:34.385"></status>
</kw>
<msg timestamp="20201117 14:47:34.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.096" endtime="20201117 14:47:34.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.390" endtime="20201117 14:47:34.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.399" endtime="20201117 14:47:34.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.092" endtime="20201117 14:47:34.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.090" endtime="20201117 14:47:34.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.406" level="INFO">${RESULT} = [{'time': 0.022556875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.022590833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:34.403" endtime="20201117 14:47:34.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.422" level="INFO">${ACCURACY} = {'diff': [3.061099999999983e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0472000000000138e-05, 3.055600000000103e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0...</msg>
<status status="PASS" starttime="20201117 14:47:34.407" endtime="20201117 14:47:34.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.427" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.425" endtime="20201117 14:47:34.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.429" level="INFO">VALUE: [3.061099999999983e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0472000000000138e-05, 3.055600000000103e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0584000000000167e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.052700000000241e-05, 3.054200000000146e-05, 3.0458000000000568e-05, 3.0472000000000138e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.052700000000241e-05, 3.055599999999756e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.0499999999999278e-05, 3.054199999999799e-05, 3.052700000000241e-05, 3.0568999999997654e-05, 3.052799999999842e-05, 3.0458000000000568e-05, 3.054199999999799e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.0554999999998084e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.0526999999998944e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.052799999999842e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.428" endtime="20201117 14:47:34.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.423" endtime="20201117 14:47:34.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.432" endtime="20201117 14:47:34.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.436" endtime="20201117 14:47:34.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.434" endtime="20201117 14:47:34.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.431" endtime="20201117 14:47:34.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.058" endtime="20201117 14:47:34.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.056" endtime="20201117 14:47:34.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.055" endtime="20201117 14:47:34.457"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.459" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.469" endtime="20201117 14:47:34.487"></status>
</kw>
<msg timestamp="20201117 14:47:34.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.468" endtime="20201117 14:47:34.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.489" endtime="20201117 14:47:34.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.491" endtime="20201117 14:47:34.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.465" endtime="20201117 14:47:34.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.463" endtime="20201117 14:47:34.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.501" endtime="20201117 14:47:34.790"></status>
</kw>
<msg timestamp="20201117 14:47:34.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023937764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023968403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.499" endtime="20201117 14:47:34.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023937764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023968403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.795" endtime="20201117 14:47:34.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.803" endtime="20201117 14:47:34.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.496" endtime="20201117 14:47:34.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.495" endtime="20201117 14:47:34.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.810" level="INFO">${RESULT} = [{'time': 0.023968403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.02400175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:34.807" endtime="20201117 14:47:34.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.824" level="INFO">${ACCURACY} = {'diff': [3.063899999999897e-05, 3.055599999999756e-05, 3.0499999999999278e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.0554999999998084e-05, 3.052799999999842e-05, 3.058300000000069e-05, 3.0...</msg>
<status status="PASS" starttime="20201117 14:47:34.811" endtime="20201117 14:47:34.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.829" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.828" endtime="20201117 14:47:34.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.832" level="INFO">VALUE: [3.063899999999897e-05, 3.055599999999756e-05, 3.0499999999999278e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.0554999999998084e-05, 3.052799999999842e-05, 3.058300000000069e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.054100000000198e-05, 3.052700000000241e-05, 3.0514000000002317e-05, 3.052700000000241e-05, 3.054199999999799e-05, 3.0540999999998514e-05, 3.054199999999799e-05, 3.047199999999667e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.055599999999756e-05, 3.052799999999842e-05, 3.055600000000103e-05, 3.0513999999998848e-05, 3.054100000000198e-05, 3.0513999999998848e-05, 3.0485999999999708e-05, 3.0499999999999278e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.0540999999998514e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.056900000000112e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.052799999999842e-05, 3.0499999999999278e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.0499999999999278e-05, 3.059700000000026e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.831" endtime="20201117 14:47:34.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.825" endtime="20201117 14:47:34.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.836" endtime="20201117 14:47:34.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.839" endtime="20201117 14:47:34.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.838" endtime="20201117 14:47:34.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.834" endtime="20201117 14:47:34.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.460" endtime="20201117 14:47:34.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.458" endtime="20201117 14:47:34.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.457" endtime="20201117 14:47:34.860"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.864" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.872" endtime="20201117 14:47:34.889"></status>
</kw>
<msg timestamp="20201117 14:47:34.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.871" endtime="20201117 14:47:34.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.891" endtime="20201117 14:47:34.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.894" endtime="20201117 14:47:34.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.868" endtime="20201117 14:47:34.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.866" endtime="20201117 14:47:34.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.903" endtime="20201117 14:47:35.191"></status>
</kw>
<msg timestamp="20201117 14:47:35.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023147569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.901" endtime="20201117 14:47:35.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023147569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.196" endtime="20201117 14:47:35.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.204" endtime="20201117 14:47:35.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.899" endtime="20201117 14:47:35.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.897" endtime="20201117 14:47:35.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.211" level="INFO">${RESULT} = [{'time': 0.023178167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0597999999999737e-05, 'source_diff': 3.0597999999999737e-05}, {'time': 0.023211569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:35.207" endtime="20201117 14:47:35.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.225" level="INFO">${ACCURACY} = {'diff': [3.0597999999999737e-05, 3.0513000000002843e-05, 3.054200000000146e-05, 3.0512999999999374e-05, 3.0485999999999708e-05, 3.0584000000000167e-05, 3.052800000000189e-05, 3.0540999999998514e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:35.212" endtime="20201117 14:47:35.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.229" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.228" endtime="20201117 14:47:35.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.232" level="INFO">VALUE: [3.0597999999999737e-05, 3.0513000000002843e-05, 3.054200000000146e-05, 3.0512999999999374e-05, 3.0485999999999708e-05, 3.0584000000000167e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.055500000000155e-05, 3.052800000000189e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.056900000000112e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.0499999999999278e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.061099999999983e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.0554999999998084e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.0499999999999278e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.0582999999997224e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.058300000000069e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.054200000000146e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.230" endtime="20201117 14:47:35.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.226" endtime="20201117 14:47:35.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.235" endtime="20201117 14:47:35.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.239" endtime="20201117 14:47:35.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.237" endtime="20201117 14:47:35.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.233" endtime="20201117 14:47:35.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.864" endtime="20201117 14:47:35.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.862" endtime="20201117 14:47:35.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.861" endtime="20201117 14:47:35.260"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.263" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.271" endtime="20201117 14:47:35.288"></status>
</kw>
<msg timestamp="20201117 14:47:35.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.269" endtime="20201117 14:47:35.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.290" endtime="20201117 14:47:35.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.293" endtime="20201117 14:47:35.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.267" endtime="20201117 14:47:35.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.265" endtime="20201117 14:47:35.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.302" endtime="20201117 14:47:35.589"></status>
</kw>
<msg timestamp="20201117 14:47:35.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.300" endtime="20201117 14:47:35.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.593" endtime="20201117 14:47:35.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.602" endtime="20201117 14:47:35.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.298" endtime="20201117 14:47:35.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.296" endtime="20201117 14:47:35.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.609" level="INFO">${RESULT} = [{'time': 0.022381042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.06249999999994e-05, 'source_diff': 3.06249999999994e-05}, {'time': 0.022414819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:35.605" endtime="20201117 14:47:35.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.622" level="INFO">${ACCURACY} = {'diff': [3.06249999999994e-05, 3.0540999999998514e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.054200000000146e-05, 3.054100000000198e-05, 3.0513999999998848e-05, 3.0...</msg>
<status status="PASS" starttime="20201117 14:47:35.610" endtime="20201117 14:47:35.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.627" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.626" endtime="20201117 14:47:35.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.630" level="INFO">VALUE: [3.06249999999994e-05, 3.0540999999998514e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.054200000000146e-05, 3.054100000000198e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.055500000000155e-05, 3.0485999999999708e-05, 3.0526999999998944e-05, 3.056900000000112e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0512999999999374e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.0540999999998514e-05, 3.0485999999999708e-05, 3.0485999999999708e-05, 3.0540999999998514e-05, 3.054199999999799e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.055600000000103e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.055600000000103e-05, 3.0540999999998514e-05, 3.054199999999799e-05, 3.052799999999842e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.628" endtime="20201117 14:47:35.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.623" endtime="20201117 14:47:35.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.633" endtime="20201117 14:47:35.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.637" endtime="20201117 14:47:35.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.635" endtime="20201117 14:47:35.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.632" endtime="20201117 14:47:35.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.263" endtime="20201117 14:47:35.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.261" endtime="20201117 14:47:35.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.261" endtime="20201117 14:47:35.658"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.660" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.669" endtime="20201117 14:47:35.686"></status>
</kw>
<msg timestamp="20201117 14:47:35.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.667" endtime="20201117 14:47:35.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.687" endtime="20201117 14:47:35.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.690" endtime="20201117 14:47:35.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.665" endtime="20201117 14:47:35.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.663" endtime="20201117 14:47:35.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.699" endtime="20201117 14:47:35.986"></status>
</kw>
<msg timestamp="20201117 14:47:35.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022928736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.697" endtime="20201117 14:47:35.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022928736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.991" endtime="20201117 14:47:35.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.999" endtime="20201117 14:47:36.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.695" endtime="20201117 14:47:36.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.693" endtime="20201117 14:47:36.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.006" level="INFO">${RESULT} = [{'time': 0.022959347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.022994444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:36.003" endtime="20201117 14:47:36.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.021" level="INFO">${ACCURACY} = {'diff': [3.061099999999983e-05, 3.0526999999998944e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0499999999999278e-05, 3.05700000000006e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.05...</msg>
<status status="PASS" starttime="20201117 14:47:36.007" endtime="20201117 14:47:36.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.026" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.025" endtime="20201117 14:47:36.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.029" level="INFO">VALUE: [3.061099999999983e-05, 3.0526999999998944e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0499999999999278e-05, 3.05700000000006e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.058300000000069e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.054100000000198e-05, 3.0513999999998848e-05, 3.055600000000103e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.044500000000047e-05, 3.048700000000265e-05, 3.0513999999998848e-05, 3.055500000000155e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.0512999999999374e-05, 3.054200000000146e-05, 3.0554999999998084e-05, 3.0513999999998848e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.0582999999997224e-05, 3.0554999999998084e-05, 3.056900000000112e-05, 3.0472000000000138e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.052799999999842e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.027" endtime="20201117 14:47:36.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.022" endtime="20201117 14:47:36.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.032" endtime="20201117 14:47:36.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.036" endtime="20201117 14:47:36.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.034" endtime="20201117 14:47:36.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.031" endtime="20201117 14:47:36.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.661" endtime="20201117 14:47:36.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.659" endtime="20201117 14:47:36.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.658" endtime="20201117 14:47:36.057"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.060" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.068" endtime="20201117 14:47:36.085"></status>
</kw>
<msg timestamp="20201117 14:47:36.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.066" endtime="20201117 14:47:36.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.087" endtime="20201117 14:47:36.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.089" endtime="20201117 14:47:36.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.064" endtime="20201117 14:47:36.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.062" endtime="20201117 14:47:36.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.099" endtime="20201117 14:47:36.385"></status>
</kw>
<msg timestamp="20201117 14:47:36.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022338708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022369333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.097" endtime="20201117 14:47:36.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022338708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022369333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.389" endtime="20201117 14:47:36.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.398" endtime="20201117 14:47:36.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.094" endtime="20201117 14:47:36.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.093" endtime="20201117 14:47:36.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.405" level="INFO">${RESULT} = [{'time': 0.022369333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.062500000000287e-05, 'source_diff': 3.062500000000287e-05}, {'time': 0.022404792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:36.401" endtime="20201117 14:47:36.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.419" level="INFO">${ACCURACY} = {'diff': [3.062500000000287e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.0540999999998514e-05, 3.0540999999998514e-05, 3.0...</msg>
<status status="PASS" starttime="20201117 14:47:36.406" endtime="20201117 14:47:36.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.423" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.422" endtime="20201117 14:47:36.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.426" level="INFO">VALUE: [3.062500000000287e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.0540999999998514e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.0584000000000167e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.0513999999998848e-05, 3.058300000000069e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.0499999999999278e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.056999999999713e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.0540999999998514e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.052799999999842e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.425" endtime="20201117 14:47:36.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.420" endtime="20201117 14:47:36.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.429" endtime="20201117 14:47:36.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.433" endtime="20201117 14:47:36.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.431" endtime="20201117 14:47:36.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.427" endtime="20201117 14:47:36.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.060" endtime="20201117 14:47:36.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.058" endtime="20201117 14:47:36.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.057" endtime="20201117 14:47:36.455"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.457" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.466" endtime="20201117 14:47:36.483"></status>
</kw>
<msg timestamp="20201117 14:47:36.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.464" endtime="20201117 14:47:36.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.485" endtime="20201117 14:47:36.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.487" endtime="20201117 14:47:36.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.461" endtime="20201117 14:47:36.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.459" endtime="20201117 14:47:36.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.496" endtime="20201117 14:47:36.784"></status>
</kw>
<msg timestamp="20201117 14:47:36.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023171597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023202194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.495" endtime="20201117 14:47:36.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023171597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023202194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.788" endtime="20201117 14:47:36.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.797" endtime="20201117 14:47:36.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.492" endtime="20201117 14:47:36.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.490" endtime="20201117 14:47:36.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.804" level="INFO">${RESULT} = [{'time': 0.023202194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.023235167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:36.800" endtime="20201117 14:47:36.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.818" level="INFO">${ACCURACY} = {'diff': [3.059700000000026e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.056900000000112e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.052...</msg>
<status status="PASS" starttime="20201117 14:47:36.805" endtime="20201117 14:47:36.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.822" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.821" endtime="20201117 14:47:36.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.825" level="INFO">VALUE: [3.059700000000026e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.056900000000112e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.055600000000103e-05, 3.0526999999998944e-05, 3.0500000000002747e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.04579999999971e-05, 3.054200000000146e-05, 3.052700000000241e-05, 3.052800000000189e-05, 3.0526999999998944e-05, 3.0499999999999278e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.056900000000112e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.054200000000146e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.0458000000000568e-05, 3.054100000000198e-05, 3.0526999999998944e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.0513999999998848e-05, 3.0513999999998848e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.823" endtime="20201117 14:47:36.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.819" endtime="20201117 14:47:36.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.828" endtime="20201117 14:47:36.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.832" endtime="20201117 14:47:36.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.830" endtime="20201117 14:47:36.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.826" endtime="20201117 14:47:36.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.458" endtime="20201117 14:47:36.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.456" endtime="20201117 14:47:36.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.455" endtime="20201117 14:47:36.853"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.855" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.864" endtime="20201117 14:47:36.882"></status>
</kw>
<msg timestamp="20201117 14:47:36.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.863" endtime="20201117 14:47:36.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.884" endtime="20201117 14:47:36.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.886" endtime="20201117 14:47:36.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.860" endtime="20201117 14:47:36.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.858" endtime="20201117 14:47:36.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.896" endtime="20201117 14:47:37.183"></status>
</kw>
<msg timestamp="20201117 14:47:37.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023199153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02322975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:36.894" endtime="20201117 14:47:37.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023199153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02322975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:37.187" endtime="20201117 14:47:37.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.195" endtime="20201117 14:47:37.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.891" endtime="20201117 14:47:37.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.889" endtime="20201117 14:47:37.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.202" level="INFO">${RESULT} = [{'time': 0.02322975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.023264528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:37.199" endtime="20201117 14:47:37.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.216" level="INFO">${ACCURACY} = {'diff': [3.059700000000026e-05, 3.0513999999998848e-05, 3.048699999999918e-05, 3.0526999999998944e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.055600000000103e-05, 3.0514000000002317e-05, 3....</msg>
<status status="PASS" starttime="20201117 14:47:37.203" endtime="20201117 14:47:37.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.220" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.219" endtime="20201117 14:47:37.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.223" level="INFO">VALUE: [3.059700000000026e-05, 3.0513999999998848e-05, 3.048699999999918e-05, 3.0526999999998944e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.055600000000103e-05, 3.0514000000002317e-05, 3.054200000000146e-05, 3.044399999999753e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.059700000000026e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.0526999999998944e-05, 3.0499999999999278e-05, 3.058300000000069e-05, 3.052799999999842e-05, 3.0540999999998514e-05, 3.054200000000146e-05, 3.058300000000069e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.048700000000265e-05, 3.0513999999998848e-05, 3.0582999999997224e-05, 3.0514000000002317e-05, 3.054199999999799e-05, 3.0458000000000568e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.052700000000241e-05, 3.054199999999799e-05, 3.047299999999961e-05, 3.052799999999842e-05, 3.047199999999667e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.052700000000241e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.221" endtime="20201117 14:47:37.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.217" endtime="20201117 14:47:37.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.226" endtime="20201117 14:47:37.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.230" endtime="20201117 14:47:37.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.228" endtime="20201117 14:47:37.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.224" endtime="20201117 14:47:37.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.856" endtime="20201117 14:47:37.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.854" endtime="20201117 14:47:37.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.853" endtime="20201117 14:47:37.251"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.253" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.262" endtime="20201117 14:47:37.280"></status>
</kw>
<msg timestamp="20201117 14:47:37.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.260" endtime="20201117 14:47:37.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.281" endtime="20201117 14:47:37.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.285" endtime="20201117 14:47:37.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.257" endtime="20201117 14:47:37.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.255" endtime="20201117 14:47:37.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.294" endtime="20201117 14:47:37.580"></status>
</kw>
<msg timestamp="20201117 14:47:37.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022532917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.292" endtime="20201117 14:47:37.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022532917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.585" endtime="20201117 14:47:37.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.593" endtime="20201117 14:47:37.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.290" endtime="20201117 14:47:37.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.288" endtime="20201117 14:47:37.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.600" level="INFO">${RESULT} = [{'time': 0.022563514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.022596611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:37.597" endtime="20201117 14:47:37.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.615" level="INFO">${ACCURACY} = {'diff': [3.059700000000026e-05, 3.0513999999998848e-05, 3.0568999999997654e-05, 3.054199999999799e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3....</msg>
<status status="PASS" starttime="20201117 14:47:37.601" endtime="20201117 14:47:37.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.620" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.619" endtime="20201117 14:47:37.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.622" level="INFO">VALUE: [3.059700000000026e-05, 3.0513999999998848e-05, 3.0568999999997654e-05, 3.054199999999799e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0512999999999374e-05, 3.0513999999998848e-05, 3.055600000000103e-05, 3.0485999999999708e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.059700000000026e-05, 3.054199999999799e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0485999999999708e-05, 3.0513999999998848e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 3.0554999999998084e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.0512999999999374e-05, 3.052800000000189e-05, 3.0514000000002317e-05, 3.052800000000189e-05, 3.0540999999998514e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.621" endtime="20201117 14:47:37.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.616" endtime="20201117 14:47:37.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.626" endtime="20201117 14:47:37.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.629" endtime="20201117 14:47:37.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.628" endtime="20201117 14:47:37.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.624" endtime="20201117 14:47:37.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.254" endtime="20201117 14:47:37.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.252" endtime="20201117 14:47:37.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.251" endtime="20201117 14:47:37.650"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.653" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.662" endtime="20201117 14:47:37.680"></status>
</kw>
<msg timestamp="20201117 14:47:37.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.660" endtime="20201117 14:47:37.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.682" endtime="20201117 14:47:37.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.684" endtime="20201117 14:47:37.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.658" endtime="20201117 14:47:37.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.655" endtime="20201117 14:47:37.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.694" endtime="20201117 14:47:37.980"></status>
</kw>
<msg timestamp="20201117 14:47:37.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023218833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023249444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.692" endtime="20201117 14:47:37.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023218833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023249444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.984" endtime="20201117 14:47:37.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.993" endtime="20201117 14:47:37.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.689" endtime="20201117 14:47:37.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.687" endtime="20201117 14:47:37.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.999" level="INFO">${RESULT} = [{'time': 0.023249444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.023284292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:37.996" endtime="20201117 14:47:38.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.013" level="INFO">${ACCURACY} = {'diff': [3.061099999999983e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.0500000000002747e-05, 3...</msg>
<status status="PASS" starttime="20201117 14:47:38.001" endtime="20201117 14:47:38.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.018" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.017" endtime="20201117 14:47:38.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.020" level="INFO">VALUE: [3.061099999999983e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.0514000000002317e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.0500000000002747e-05, 3.0499999999999278e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.052800000000189e-05, 3.054100000000198e-05, 3.047299999999961e-05, 3.0513999999998848e-05, 3.0472000000000138e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.0513999999998848e-05, 3.054100000000198e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.052800000000189e-05, 3.0472000000000138e-05, 3.0513999999998848e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.052800000000189e-05, 3.0444000000000998e-05, 3.0513999999998848e-05, 3.0526999999998944e-05, 3.052799999999842e-05, 3.0526999999998944e-05, 3.056900000000112e-05, 3.052800000000189e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.055600000000103e-05, 3.055500000000155e-05, 3.054200000000146e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.019" endtime="20201117 14:47:38.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.014" endtime="20201117 14:47:38.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.024" endtime="20201117 14:47:38.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.028" endtime="20201117 14:47:38.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.026" endtime="20201117 14:47:38.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.022" endtime="20201117 14:47:38.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.654" endtime="20201117 14:47:38.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.652" endtime="20201117 14:47:38.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.651" endtime="20201117 14:47:38.049"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.051" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.060" endtime="20201117 14:47:38.078"></status>
</kw>
<msg timestamp="20201117 14:47:38.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.058" endtime="20201117 14:47:38.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.079" endtime="20201117 14:47:38.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.082" endtime="20201117 14:47:38.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.055" endtime="20201117 14:47:38.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.053" endtime="20201117 14:47:38.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.091" endtime="20201117 14:47:38.378"></status>
</kw>
<msg timestamp="20201117 14:47:38.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02261425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:38.090" endtime="20201117 14:47:38.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02261425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:38.383" endtime="20201117 14:47:38.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.391" endtime="20201117 14:47:38.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.087" endtime="20201117 14:47:38.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.085" endtime="20201117 14:47:38.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.401" level="INFO">${RESULT} = [{'time': 0.02261425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.022651264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:38.397" endtime="20201117 14:47:38.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.415" level="INFO">${ACCURACY} = {'diff': [3.063899999999897e-05, 3.101399999999935e-05, 3.155600000000203e-05, 3.055599999999756e-05, 3.052799999999842e-05, 3.056999999999713e-05, 3.054199999999799e-05, 3.055600000000103e-05, 3.0570...</msg>
<status status="PASS" starttime="20201117 14:47:38.402" endtime="20201117 14:47:38.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.419" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.418" endtime="20201117 14:47:38.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.422" level="INFO">VALUE: [3.063899999999897e-05, 3.101399999999935e-05, 3.155600000000203e-05, 3.055599999999756e-05, 3.052799999999842e-05, 3.056999999999713e-05, 3.054199999999799e-05, 3.055600000000103e-05, 3.05700000000006e-05, 3.055500000000155e-05, 3.058300000000069e-05, 3.0512999999999374e-05, 3.054199999999799e-05, 3.055600000000103e-05, 3.056900000000112e-05, 3.091699999999836e-05, 3.055500000000155e-05, 3.055600000000103e-05, 3.052799999999842e-05, 3.054200000000146e-05, 3.0526999999998944e-05, 3.0499999999999278e-05, 3.0513999999998848e-05, 3.0540999999998514e-05, 3.156900000000212e-05, 3.055500000000155e-05, 3.056900000000112e-05, 3.0513999999998848e-05, 3.09449999999975e-05, 3.054200000000146e-05, 3.095900000000054e-05, 3.052800000000189e-05, 3.09449999999975e-05, 3.0554999999998084e-05, 3.090199999999932e-05, 3.0513999999998848e-05, 3.056900000000112e-05, 3.054199999999799e-05, 3.055500000000155e-05, 3.054199999999799e-05, 3.154199999999899e-05, 3.0582999999997224e-05, 3.054199999999799e-05, 3.090300000000226e-05, 3.055600000000103e-05, 3.055500000000155e-05, 3.095900000000054e-05, 3.0554999999998084e-05, 3.054200000000146e-05, 3.155599999999856e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.420" endtime="20201117 14:47:38.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.416" endtime="20201117 14:47:38.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.426" endtime="20201117 14:47:38.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.429" endtime="20201117 14:47:38.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.427" endtime="20201117 14:47:38.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.424" endtime="20201117 14:47:38.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.052" endtime="20201117 14:47:38.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.050" endtime="20201117 14:47:38.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.049" endtime="20201117 14:47:38.450"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.453" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.461" endtime="20201117 14:47:38.479"></status>
</kw>
<msg timestamp="20201117 14:47:38.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.460" endtime="20201117 14:47:38.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.481" endtime="20201117 14:47:38.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.483" endtime="20201117 14:47:38.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.457" endtime="20201117 14:47:38.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.455" endtime="20201117 14:47:38.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.493" endtime="20201117 14:47:38.781"></status>
</kw>
<msg timestamp="20201117 14:47:38.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022634417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.491" endtime="20201117 14:47:38.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022634417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.785" endtime="20201117 14:47:38.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.794" endtime="20201117 14:47:38.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.488" endtime="20201117 14:47:38.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.487" endtime="20201117 14:47:38.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.801" level="INFO">${RESULT} = [{'time': 0.022668167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-05, 'source_diff': 3.374999999999906e-05}, {'time': 0.022705986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:38.797" endtime="20201117 14:47:38.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.814" level="INFO">${ACCURACY} = {'diff': [3.374999999999906e-05, 3.363900000000197e-05, 3.0582999999997224e-05, 3.0582999999997224e-05, 3.365299999999807e-05, 3.365300000000154e-05, 3.36250000000024e-05, 3.359700000000326e-05, 3.362...</msg>
<status status="PASS" starttime="20201117 14:47:38.802" endtime="20201117 14:47:38.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.819" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.818" endtime="20201117 14:47:38.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.822" level="INFO">VALUE: [3.374999999999906e-05, 3.363900000000197e-05, 3.0582999999997224e-05, 3.0582999999997224e-05, 3.365299999999807e-05, 3.365300000000154e-05, 3.36250000000024e-05, 3.359700000000326e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.36250000000024e-05, 3.05700000000006e-05, 3.054100000000198e-05, 3.055600000000103e-05, 3.055600000000103e-05, 3.36519999999986e-05, 3.35839999999997e-05, 3.05839999999967e-05, 3.05700000000006e-05, 3.05700000000006e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.052700000000241e-05, 3.055600000000103e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.36380000000025e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.3596999999999794e-05, 3.369500000000025e-05, 3.3624999999998934e-05, 3.055500000000155e-05, 3.3638999999998503e-05, 3.366599999999817e-05, 3.363900000000197e-05, 3.363799999999903e-05, 3.363900000000197e-05, 3.357000000000013e-05, 3.365299999999807e-05, 3.366699999999764e-05, 3.363900000000197e-05, 3.0485999999999708e-05, 3.0513999999998848e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.820" endtime="20201117 14:47:38.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.815" endtime="20201117 14:47:38.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.825" endtime="20201117 14:47:38.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.829" endtime="20201117 14:47:38.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.827" endtime="20201117 14:47:38.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.823" endtime="20201117 14:47:38.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.453" endtime="20201117 14:47:38.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.451" endtime="20201117 14:47:38.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.451" endtime="20201117 14:47:38.850"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.852" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.861" endtime="20201117 14:47:38.878"></status>
</kw>
<msg timestamp="20201117 14:47:38.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.859" endtime="20201117 14:47:38.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.880" endtime="20201117 14:47:38.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.882" endtime="20201117 14:47:38.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.857" endtime="20201117 14:47:38.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.854" endtime="20201117 14:47:38.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.892" endtime="20201117 14:47:39.178"></status>
</kw>
<msg timestamp="20201117 14:47:39.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.890" endtime="20201117 14:47:39.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.182" endtime="20201117 14:47:39.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.191" endtime="20201117 14:47:39.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.887" endtime="20201117 14:47:39.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.886" endtime="20201117 14:47:39.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.198" level="INFO">${RESULT} = [{'time': 0.022668972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3790999999998295e-05, 'source_diff': 3.3790999999998295e-05}, {'time': 0.022705042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:39.194" endtime="20201117 14:47:39.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.213" level="INFO">${ACCURACY} = {'diff': [3.3790999999998295e-05, 3.36250000000024e-05, 3.368100000000068e-05, 3.368100000000068e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.366...</msg>
<status status="PASS" starttime="20201117 14:47:39.199" endtime="20201117 14:47:39.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.218" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.217" endtime="20201117 14:47:39.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.220" level="INFO">VALUE: [3.3790999999998295e-05, 3.36250000000024e-05, 3.368100000000068e-05, 3.368100000000068e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.366699999999764e-05, 3.366699999999764e-05, 3.36519999999986e-05, 3.363900000000197e-05, 3.3610999999999364e-05, 3.36250000000024e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.359799999999927e-05, 3.366700000000111e-05, 3.365300000000154e-05, 3.3610999999999364e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.365300000000154e-05, 3.3610999999999364e-05, 3.365299999999807e-05, 3.3624999999998934e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.3624999999998934e-05, 3.359799999999927e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.369400000000078e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.366700000000111e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.370800000000035e-05]</msg>
<status status="PASS" starttime="20201117 14:47:39.219" endtime="20201117 14:47:39.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.214" endtime="20201117 14:47:39.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.224" endtime="20201117 14:47:39.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.227" endtime="20201117 14:47:39.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.226" endtime="20201117 14:47:39.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.222" endtime="20201117 14:47:39.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.853" endtime="20201117 14:47:39.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.851" endtime="20201117 14:47:39.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.850" endtime="20201117 14:47:39.248"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.251" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.259" endtime="20201117 14:47:39.277"></status>
</kw>
<msg timestamp="20201117 14:47:39.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.258" endtime="20201117 14:47:39.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.279" endtime="20201117 14:47:39.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.281" endtime="20201117 14:47:39.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.255" endtime="20201117 14:47:39.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.253" endtime="20201117 14:47:39.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.291" endtime="20201117 14:47:39.577"></status>
</kw>
<msg timestamp="20201117 14:47:39.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.289" endtime="20201117 14:47:39.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022523361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.581" endtime="20201117 14:47:39.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.590" endtime="20201117 14:47:39.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.287" endtime="20201117 14:47:39.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.285" endtime="20201117 14:47:39.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.597" level="INFO">${RESULT} = [{'time': 0.022557167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.380600000000081e-05, 'source_diff': 3.380600000000081e-05}, {'time': 0.022596042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:39.594" endtime="20201117 14:47:39.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.611" level="INFO">${ACCURACY} = {'diff': [3.380600000000081e-05, 3.3638999999998503e-05, 3.355600000000056e-05, 3.366699999999764e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.365299999999807e-05, 3.3624999999998934e-05, 3.36...</msg>
<status status="PASS" starttime="20201117 14:47:39.598" endtime="20201117 14:47:39.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.616" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.614" endtime="20201117 14:47:39.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.618" level="INFO">VALUE: [3.380600000000081e-05, 3.3638999999998503e-05, 3.355600000000056e-05, 3.366699999999764e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.365299999999807e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3610999999999364e-05, 3.365299999999807e-05, 3.36250000000024e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.363799999999903e-05, 3.3624999999998934e-05, 3.366700000000111e-05, 3.363900000000197e-05, 3.365200000000207e-05, 3.3596999999999794e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.3596999999999794e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.363799999999903e-05, 3.3596999999999794e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.36519999999986e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.3610999999999364e-05, 3.366699999999764e-05, 3.3638999999998503e-05, 3.3569000000000654e-05, 3.369500000000025e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.3610999999999364e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.3638999999998503e-05]</msg>
<status status="PASS" starttime="20201117 14:47:39.617" endtime="20201117 14:47:39.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.612" endtime="20201117 14:47:39.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.621" endtime="20201117 14:47:39.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.625" endtime="20201117 14:47:39.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.623" endtime="20201117 14:47:39.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.620" endtime="20201117 14:47:39.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.251" endtime="20201117 14:47:39.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.250" endtime="20201117 14:47:39.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.249" endtime="20201117 14:47:39.646"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.648" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.657" endtime="20201117 14:47:39.675"></status>
</kw>
<msg timestamp="20201117 14:47:39.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.656" endtime="20201117 14:47:39.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.677" endtime="20201117 14:47:39.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.679" endtime="20201117 14:47:39.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.653" endtime="20201117 14:47:39.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.651" endtime="20201117 14:47:39.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.689" endtime="20201117 14:47:39.976"></status>
</kw>
<msg timestamp="20201117 14:47:39.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022682153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022715958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.687" endtime="20201117 14:47:39.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022682153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022715958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.980" endtime="20201117 14:47:39.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.989" endtime="20201117 14:47:39.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.684" endtime="20201117 14:47:39.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.682" endtime="20201117 14:47:39.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.996" level="INFO">${RESULT} = [{'time': 0.022715958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3805000000001334e-05, 'source_diff': 3.3805000000001334e-05}, {'time': 0.022753528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:39.992" endtime="20201117 14:47:39.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.009" level="INFO">${ACCURACY} = {'diff': [3.3805000000001334e-05, 3.369500000000025e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.365300000000154e-05, 3.36250000000024e-05, 3.36250000000024e-05, 3.3624999999998934e-05, 3.36...</msg>
<status status="PASS" starttime="20201117 14:47:39.997" endtime="20201117 14:47:40.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.014" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.013" endtime="20201117 14:47:40.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.017" level="INFO">VALUE: [3.3805000000001334e-05, 3.369500000000025e-05, 3.3624999999998934e-05, 3.3624999999998934e-05, 3.365300000000154e-05, 3.36250000000024e-05, 3.36250000000024e-05, 3.3624999999998934e-05, 3.365299999999807e-05, 3.365300000000154e-05, 3.3624999999998934e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.36250000000024e-05, 3.365300000000154e-05, 3.368099999999721e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.355600000000056e-05, 3.366700000000111e-05, 3.363900000000197e-05, 3.368100000000068e-05, 3.363900000000197e-05, 3.369399999999731e-05, 3.363900000000197e-05, 3.3610999999999364e-05, 3.363900000000197e-05, 3.366700000000111e-05, 3.365299999999807e-05, 3.3638999999998503e-05, 3.36519999999986e-05, 3.363900000000197e-05, 3.3610999999999364e-05, 3.365300000000154e-05, 3.370800000000035e-05, 3.368100000000068e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.363799999999903e-05, 3.3624999999998934e-05, 3.365299999999807e-05, 3.357000000000013e-05, 3.3624999999998934e-05, 3.365300000000154e-05, 3.365299999999807e-05, 3.3638999999998503e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.015" endtime="20201117 14:47:40.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.010" endtime="20201117 14:47:40.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.020" endtime="20201117 14:47:40.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.023" endtime="20201117 14:47:40.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.022" endtime="20201117 14:47:40.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.018" endtime="20201117 14:47:40.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.649" endtime="20201117 14:47:40.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.647" endtime="20201117 14:47:40.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.646" endtime="20201117 14:47:40.045"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.047" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.055" endtime="20201117 14:47:40.073"></status>
</kw>
<msg timestamp="20201117 14:47:40.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.054" endtime="20201117 14:47:40.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.074" endtime="20201117 14:47:40.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.083" endtime="20201117 14:47:40.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.051" endtime="20201117 14:47:40.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.049" endtime="20201117 14:47:40.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.093" endtime="20201117 14:47:40.380"></status>
</kw>
<msg timestamp="20201117 14:47:40.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.091" endtime="20201117 14:47:40.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.384" endtime="20201117 14:47:40.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.393" endtime="20201117 14:47:40.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.089" endtime="20201117 14:47:40.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.087" endtime="20201117 14:47:40.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.400" level="INFO">${RESULT} = [{'time': 0.022452014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.475000000000006e-05, 'source_diff': 3.475000000000006e-05}, {'time': 0.022489458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:40.396" endtime="20201117 14:47:40.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.413" level="INFO">${ACCURACY} = {'diff': [3.475000000000006e-05, 3.363900000000197e-05, 3.4054999999998115e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.4347000000000544e-05, 3.363900000000197e-05, 3.4776999999999725e-05, 3....</msg>
<status status="PASS" starttime="20201117 14:47:40.401" endtime="20201117 14:47:40.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.418" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.417" endtime="20201117 14:47:40.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.420" level="INFO">VALUE: [3.475000000000006e-05, 3.363900000000197e-05, 3.4054999999998115e-05, 3.3638999999998503e-05, 3.365300000000154e-05, 3.4347000000000544e-05, 3.363900000000197e-05, 3.4776999999999725e-05, 3.5139000000000004e-05, 3.4597000000000794e-05, 3.426399999999913e-05, 3.420900000000032e-05, 3.365300000000154e-05, 3.4902999999999323e-05, 3.426399999999913e-05, 3.41519999999991e-05, 3.368100000000068e-05, 3.454200000000199e-05, 3.470799999999788e-05, 3.4583000000001224e-05, 3.4304999999998365e-05, 3.454199999999852e-05, 3.4276999999999225e-05, 3.4583000000001224e-05, 3.361100000000283e-05, 3.519399999999881e-05, 3.3624999999998934e-05, 3.4361000000000114e-05, 3.411199999999934e-05, 3.4624999999999934e-05, 3.441600000000239e-05, 3.4555000000002084e-05, 3.424999999999956e-05, 3.518100000000218e-05, 3.365300000000154e-05, 3.41519999999991e-05, 3.3582999999996754e-05, 3.4624999999999934e-05, 3.368000000000121e-05, 3.4597000000000794e-05, 3.42779999999987e-05, 3.4290999999998795e-05, 3.399999999999931e-05, 3.457000000000113e-05, 3.3790999999998295e-05, 3.469399999999831e-05, 3.4110999999999864e-05, 3.3860999999999614e-05, 3.401400000000235e-05, 3.369500000000025e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.419" endtime="20201117 14:47:40.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.414" endtime="20201117 14:47:40.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.424" endtime="20201117 14:47:40.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.427" endtime="20201117 14:47:40.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.426" endtime="20201117 14:47:40.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.422" endtime="20201117 14:47:40.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.048" endtime="20201117 14:47:40.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.046" endtime="20201117 14:47:40.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.045" endtime="20201117 14:47:40.448"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.451" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.460" endtime="20201117 14:47:40.478"></status>
</kw>
<msg timestamp="20201117 14:47:40.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.458" endtime="20201117 14:47:40.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.480" endtime="20201117 14:47:40.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.482" endtime="20201117 14:47:40.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.456" endtime="20201117 14:47:40.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.453" endtime="20201117 14:47:40.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.492" endtime="20201117 14:47:40.779"></status>
</kw>
<msg timestamp="20201117 14:47:40.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023159292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023194208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.490" endtime="20201117 14:47:40.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023159292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023194208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.783" endtime="20201117 14:47:40.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.792" endtime="20201117 14:47:40.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.487" endtime="20201117 14:47:40.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.486" endtime="20201117 14:47:40.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.799" level="INFO">${RESULT} = [{'time': 0.023194208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.491599999999942e-05, 'source_diff': 3.491599999999942e-05}, {'time': 0.023235583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:40.795" endtime="20201117 14:47:40.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.814" level="INFO">${ACCURACY} = {'diff': [3.491599999999942e-05, 3.567999999999974e-05, 3.5332999999998504e-05, 3.501399999999988e-05, 3.5639000000000504e-05, 3.6110999999998394e-05, 3.5374999999997214e-05, 3.520799999999838e-05, 3....</msg>
<status status="PASS" starttime="20201117 14:47:40.800" endtime="20201117 14:47:40.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.818" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.817" endtime="20201117 14:47:40.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.821" level="INFO">VALUE: [3.491599999999942e-05, 3.567999999999974e-05, 3.5332999999998504e-05, 3.501399999999988e-05, 3.5639000000000504e-05, 3.6110999999998394e-05, 3.5374999999997214e-05, 3.520799999999838e-05, 3.604200000000002e-05, 3.6110999999998394e-05, 3.576400000000063e-05, 3.519400000000228e-05, 3.604200000000002e-05, 3.6125000000001434e-05, 3.556999999999866e-05, 3.507000000000163e-05, 3.5889000000000754e-05, 3.6110999999998394e-05, 3.530600000000231e-05, 3.49589999999976e-05, 3.572199999999845e-05, 3.544499999999853e-05, 3.522200000000142e-05, 3.519500000000175e-05, 3.6041000000000545e-05, 3.547300000000114e-05, 3.576400000000063e-05, 3.613800000000153e-05, 3.5375000000000684e-05, 3.522199999999795e-05, 3.606999999999916e-05, 3.498600000000074e-05, 3.569499999999878e-05, 3.6110999999998394e-05, 3.572200000000192e-05, 3.502799999999945e-05, 3.5597000000001794e-05, 3.49450000000015e-05, 3.572200000000192e-05, 3.542999999999949e-05, 3.5639000000000504e-05, 3.6138999999997534e-05, 3.567999999999974e-05, 3.4818999999998435e-05, 3.548600000000124e-05, 3.545799999999863e-05, 3.5847000000002044e-05, 3.572200000000192e-05, 3.5819000000002904e-05, 3.547200000000167e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.820" endtime="20201117 14:47:40.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.815" endtime="20201117 14:47:40.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.824" endtime="20201117 14:47:40.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.828" endtime="20201117 14:47:40.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.826" endtime="20201117 14:47:40.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.823" endtime="20201117 14:47:40.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.451" endtime="20201117 14:47:40.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.450" endtime="20201117 14:47:40.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.449" endtime="20201117 14:47:40.849"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.852" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.860" endtime="20201117 14:47:40.878"></status>
</kw>
<msg timestamp="20201117 14:47:40.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.859" endtime="20201117 14:47:40.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.880" endtime="20201117 14:47:40.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.882" endtime="20201117 14:47:40.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.856" endtime="20201117 14:47:40.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.854" endtime="20201117 14:47:40.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.892" endtime="20201117 14:47:41.179"></status>
</kw>
<msg timestamp="20201117 14:47:41.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02253825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022575389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:40.890" endtime="20201117 14:47:41.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02253825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022575389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:41.183" endtime="20201117 14:47:41.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.191" endtime="20201117 14:47:41.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.887" endtime="20201117 14:47:41.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.886" endtime="20201117 14:47:41.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.198" level="INFO">${RESULT} = [{'time': 0.022575389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7139000000002004e-05, 'source_diff': 3.7139000000002004e-05}, {'time': 0.022614694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:41.195" endtime="20201117 14:47:41.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.212" level="INFO">${ACCURACY} = {'diff': [3.7139000000002004e-05, 3.7055000000001115e-05, 3.697299999999917e-05, 3.705600000000059e-05, 3.5861000000001614e-05, 3.5832999999999005e-05, 3.7027000000001975e-05, 3.6916999999997424e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:41.199" endtime="20201117 14:47:41.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.217" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.216" endtime="20201117 14:47:41.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.219" level="INFO">VALUE: [3.7139000000002004e-05, 3.7055000000001115e-05, 3.697299999999917e-05, 3.705600000000059e-05, 3.5861000000001614e-05, 3.5832999999999005e-05, 3.7027000000001975e-05, 3.6916999999997424e-05, 3.69719999999997e-05, 3.61520000000011e-05, 3.5846999999998574e-05, 3.701400000000188e-05, 3.598599999999827e-05, 3.620899999999885e-05, 3.69719999999997e-05, 3.6403000000000824e-05, 3.5889000000000754e-05, 3.7069000000000685e-05, 3.69719999999997e-05, 3.6124999999997964e-05, 3.595900000000207e-05, 3.698599999999927e-05, 3.698600000000274e-05, 3.699999999999884e-05, 3.699999999999884e-05, 3.698599999999927e-05, 3.595799999999913e-05, 3.5818999999999435e-05, 3.700000000000231e-05, 3.593099999999946e-05, 3.6027000000000975e-05, 3.697200000000317e-05, 3.702800000000145e-05, 3.698599999999927e-05, 3.590199999999738e-05, 3.6403000000000824e-05, 3.701400000000188e-05, 3.698599999999927e-05, 3.698600000000274e-05, 3.698599999999927e-05, 3.597200000000217e-05, 3.5916999999999893e-05, 3.7054999999997645e-05, 3.6124999999997964e-05, 3.6403000000000824e-05, 3.701400000000188e-05, 3.595799999999913e-05, 3.5916999999999893e-05, 3.6388999999997784e-05, 3.623599999999852e-05]</msg>
<status status="PASS" starttime="20201117 14:47:41.218" endtime="20201117 14:47:41.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.213" endtime="20201117 14:47:41.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.223" endtime="20201117 14:47:41.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.226" endtime="20201117 14:47:41.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.225" endtime="20201117 14:47:41.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.221" endtime="20201117 14:47:41.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.852" endtime="20201117 14:47:41.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.850" endtime="20201117 14:47:41.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.850" endtime="20201117 14:47:41.248"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.250" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.259" endtime="20201117 14:47:41.276"></status>
</kw>
<msg timestamp="20201117 14:47:41.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.257" endtime="20201117 14:47:41.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.278" endtime="20201117 14:47:41.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.280" endtime="20201117 14:47:41.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.254" endtime="20201117 14:47:41.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.252" endtime="20201117 14:47:41.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.289" endtime="20201117 14:47:41.577"></status>
</kw>
<msg timestamp="20201117 14:47:41.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.288" endtime="20201117 14:47:41.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.581" endtime="20201117 14:47:41.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.590" endtime="20201117 14:47:41.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.285" endtime="20201117 14:47:41.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.283" endtime="20201117 14:47:41.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.597" level="INFO">${RESULT} = [{'time': 0.022529764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7389000000002254e-05, 'source_diff': 3.7389000000002254e-05}, {'time': 0.022572778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:41.593" endtime="20201117 14:47:41.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.610" level="INFO">${ACCURACY} = {'diff': [3.7389000000002254e-05, 3.807000000000116e-05, 3.730600000000084e-05, 3.751399999999891e-05, 3.807000000000116e-05, 3.776399999999916e-05, 3.750000000000281e-05, 3.720899999999985e-05, 3.743...</msg>
<status status="PASS" starttime="20201117 14:47:41.598" endtime="20201117 14:47:41.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.615" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.614" endtime="20201117 14:47:41.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.618" level="INFO">VALUE: [3.7389000000002254e-05, 3.807000000000116e-05, 3.730600000000084e-05, 3.751399999999891e-05, 3.807000000000116e-05, 3.776399999999916e-05, 3.750000000000281e-05, 3.720899999999985e-05, 3.7430999999997494e-05, 3.782000000000091e-05, 3.7695000000000783e-05, 3.780600000000134e-05, 3.7597000000000325e-05, 3.790199999999938e-05, 3.776399999999916e-05, 3.751399999999891e-05, 3.7540999999998576e-05, 3.7389000000002254e-05, 3.772199999999698e-05, 3.720800000000038e-05, 3.799999999999984e-05, 3.74720000000002e-05, 3.801399999999941e-05, 3.7861000000000145e-05, 3.7389000000002254e-05, 3.743000000000149e-05, 3.7639000000002504e-05, 3.723599999999952e-05, 3.749999999999934e-05, 3.8054999999998645e-05, 3.8054999999998645e-05, 3.7569000000001185e-05, 3.758400000000023e-05, 3.7680999999997744e-05, 3.8153000000002574e-05, 3.75979999999998e-05, 3.801399999999941e-05, 3.7431000000000964e-05, 3.7111000000002864e-05, 3.748599999999977e-05, 3.7902999999998854e-05, 3.7374999999999214e-05, 3.7195000000000283e-05, 3.7944999999997564e-05, 3.7582999999997285e-05, 3.8152999999999104e-05, 3.763799999999956e-05, 3.79720000000007e-05, 3.7431000000000964e-05, 3.7181000000000713e-05]</msg>
<status status="PASS" starttime="20201117 14:47:41.616" endtime="20201117 14:47:41.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.611" endtime="20201117 14:47:41.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.621" endtime="20201117 14:47:41.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.625" endtime="20201117 14:47:41.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.623" endtime="20201117 14:47:41.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.620" endtime="20201117 14:47:41.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.251" endtime="20201117 14:47:41.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.249" endtime="20201117 14:47:41.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.248" endtime="20201117 14:47:41.646"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.648" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.657" endtime="20201117 14:47:41.675"></status>
</kw>
<msg timestamp="20201117 14:47:41.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.656" endtime="20201117 14:47:41.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.677" endtime="20201117 14:47:41.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.679" endtime="20201117 14:47:41.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.653" endtime="20201117 14:47:41.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.651" endtime="20201117 14:47:41.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.688" endtime="20201117 14:47:41.974"></status>
</kw>
<msg timestamp="20201117 14:47:41.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022774972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.687" endtime="20201117 14:47:41.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022774972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.978" endtime="20201117 14:47:41.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.987" endtime="20201117 14:47:41.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.684" endtime="20201117 14:47:41.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.682" endtime="20201117 14:47:41.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.994" level="INFO">${RESULT} = [{'time': 0.022813347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8375000000000214e-05, 'source_diff': 3.8375000000000214e-05}, {'time': 0.022855347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:41.990" endtime="20201117 14:47:41.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.008" level="INFO">${ACCURACY} = {'diff': [3.8375000000000214e-05, 3.876400000000016e-05, 3.8124999999999964e-05, 3.826399999999966e-05, 3.845799999999816e-05, 3.825000000000009e-05, 3.8360999999997175e-05, 3.855600000000209e-05, 3.8...</msg>
<status status="PASS" starttime="20201117 14:47:41.995" endtime="20201117 14:47:42.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.012" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.011" endtime="20201117 14:47:42.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.015" level="INFO">VALUE: [3.8375000000000214e-05, 3.876400000000016e-05, 3.8124999999999964e-05, 3.826399999999966e-05, 3.845799999999816e-05, 3.825000000000009e-05, 3.8360999999997175e-05, 3.855600000000209e-05, 3.8333000000001505e-05, 3.826399999999966e-05, 3.8889000000000284e-05, 3.875000000000059e-05, 3.8597000000001325e-05, 3.8888999999996815e-05, 3.825000000000009e-05, 3.8417000000002394e-05, 3.832000000000141e-05, 3.8360999999997175e-05, 3.901400000000041e-05, 3.834800000000055e-05, 3.905599999999912e-05, 3.901400000000041e-05, 3.908399999999826e-05, 3.8875000000000715e-05, 3.867999999999927e-05, 3.8513000000000436e-05, 3.850000000000034e-05, 3.8166999999998674e-05, 3.8930999999998994e-05, 3.8916999999999424e-05, 3.8861000000001145e-05, 3.8402999999999354e-05, 3.8554999999999146e-05, 3.901400000000041e-05, 3.8582999999998285e-05, 3.8318999999998465e-05, 3.867999999999927e-05, 3.899999999999737e-05, 3.8554999999999146e-05, 3.820800000000138e-05, 3.8361000000000645e-05, 3.8180999999998244e-05, 3.8167000000002144e-05, 3.8875000000000715e-05, 3.8180999999998244e-05, 3.8875000000000715e-05, 3.87919999999993e-05, 3.901400000000041e-05, 3.830600000000184e-05, 3.875000000000059e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.014" endtime="20201117 14:47:42.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.009" endtime="20201117 14:47:42.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.018" endtime="20201117 14:47:42.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.022" endtime="20201117 14:47:42.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.020" endtime="20201117 14:47:42.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.017" endtime="20201117 14:47:42.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.649" endtime="20201117 14:47:42.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.647" endtime="20201117 14:47:42.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.646" endtime="20201117 14:47:42.043"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.045" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.054" endtime="20201117 14:47:42.072"></status>
</kw>
<msg timestamp="20201117 14:47:42.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.052" endtime="20201117 14:47:42.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.073" endtime="20201117 14:47:42.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.076" endtime="20201117 14:47:42.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.050" endtime="20201117 14:47:42.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.047" endtime="20201117 14:47:42.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.085" endtime="20201117 14:47:42.372"></status>
</kw>
<msg timestamp="20201117 14:47:42.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022541292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.083" endtime="20201117 14:47:42.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022541292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.377" endtime="20201117 14:47:42.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.385" endtime="20201117 14:47:42.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.081" endtime="20201117 14:47:42.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.079" endtime="20201117 14:47:42.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.392" level="INFO">${RESULT} = [{'time': 0.022541292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9639000000001035e-05, 'source_diff': 3.9639000000001035e-05}, {'time': 0.022583278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:42.389" endtime="20201117 14:47:42.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.408" level="INFO">${ACCURACY} = {'diff': [3.9639000000001035e-05, 3.9430999999999494e-05, 3.926400000000066e-05, 3.9195000000002284e-05, 3.9416999999999924e-05, 3.982000000000291e-05, 3.9805000000000396e-05, 3.938799999999784e-05, 3...</msg>
<status status="PASS" starttime="20201117 14:47:42.393" endtime="20201117 14:47:42.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.412" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.411" endtime="20201117 14:47:42.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.415" level="INFO">VALUE: [3.9639000000001035e-05, 3.9430999999999494e-05, 3.926400000000066e-05, 3.9195000000002284e-05, 3.9416999999999924e-05, 3.982000000000291e-05, 3.9805000000000396e-05, 3.938799999999784e-05, 3.9625000000001465e-05, 3.948700000000124e-05, 3.917999999999977e-05, 4.001400000000141e-05, 3.9318999999999465e-05, 4.0139000000001535e-05, 3.919400000000281e-05, 3.969399999999984e-05, 3.973599999999855e-05, 3.99859999999988e-05, 3.9930999999999994e-05, 3.993000000000052e-05, 4.0082999999999785e-05, 3.9319000000002935e-05, 3.934800000000155e-05, 3.9625000000001465e-05, 4.005600000000012e-05, 3.926400000000066e-05, 3.968000000000027e-05, 3.981999999999944e-05, 3.980599999999987e-05, 4.005600000000012e-05, 4.006999999999969e-05, 3.9541000000000576e-05, 3.9694999999999314e-05, 3.9444999999999064e-05, 3.949999999999787e-05, 3.9166999999999674e-05, 3.980599999999987e-05, 3.915200000000063e-05, 3.970799999999941e-05, 3.926400000000066e-05, 3.9818999999999966e-05, 3.977800000000073e-05, 3.9318999999999465e-05, 3.9290999999996856e-05, 3.974999999999812e-05, 3.970799999999941e-05, 3.9832999999999535e-05, 3.949999999999787e-05, 3.925000000000109e-05, 3.9625000000001465e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.413" endtime="20201117 14:47:42.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.409" endtime="20201117 14:47:42.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.418" endtime="20201117 14:47:42.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.422" endtime="20201117 14:47:42.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.420" endtime="20201117 14:47:42.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.416" endtime="20201117 14:47:42.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.046" endtime="20201117 14:47:42.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.044" endtime="20201117 14:47:42.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.043" endtime="20201117 14:47:42.443"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.445" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.454" endtime="20201117 14:47:42.472"></status>
</kw>
<msg timestamp="20201117 14:47:42.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.452" endtime="20201117 14:47:42.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.473" endtime="20201117 14:47:42.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.476" endtime="20201117 14:47:42.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.449" endtime="20201117 14:47:42.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.447" endtime="20201117 14:47:42.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.486" endtime="20201117 14:47:42.772"></status>
</kw>
<msg timestamp="20201117 14:47:42.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.484" endtime="20201117 14:47:42.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.777" endtime="20201117 14:47:42.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.786" endtime="20201117 14:47:42.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.481" endtime="20201117 14:47:42.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.479" endtime="20201117 14:47:42.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.793" level="INFO">${RESULT} = [{'time': 0.022528958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0819000000000966e-05, 'source_diff': 4.0819000000000966e-05}, {'time': 0.022571958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:42.789" endtime="20201117 14:47:42.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.806" level="INFO">${ACCURACY} = {'diff': [4.0819000000000966e-05, 4.044400000000059e-05, 4.1069000000001216e-05, 4.068000000000127e-05, 4.023599999999905e-05, 4.045800000000016e-05, 4.0874999999999245e-05, 4.0874999999999245e-05, 4....</msg>
<status status="PASS" starttime="20201117 14:47:42.794" endtime="20201117 14:47:42.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.811" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.810" endtime="20201117 14:47:42.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.813" level="INFO">VALUE: [4.0819000000000966e-05, 4.044400000000059e-05, 4.1069000000001216e-05, 4.068000000000127e-05, 4.023599999999905e-05, 4.045800000000016e-05, 4.0874999999999245e-05, 4.0874999999999245e-05, 4.020799999999991e-05, 4.0389000000001785e-05, 4.020799999999991e-05, 4.072199999999998e-05, 4.0610999999999425e-05, 4.074999999999912e-05, 4.022199999999948e-05, 4.0681000000000744e-05, 4.0624999999998995e-05, 4.0152999999997635e-05, 4.101399999999894e-05, 4.109799999999983e-05, 4.057000000000019e-05, 4.076399999999869e-05, 4.0222999999998954e-05, 4.0167000000000674e-05, 4.0931000000000994e-05, 4.073599999999955e-05, 4.0333000000000035e-05, 4.1013000000002936e-05, 4.036199999999865e-05, 4.077799999999826e-05, 4.090200000000238e-05, 4.045800000000016e-05, 4.1110999999999925e-05, 4.019400000000034e-05, 4.0305000000000896e-05, 4.070800000000041e-05, 4.022199999999948e-05, 4.097200000000023e-05, 4.099999999999937e-05, 4.1124999999999495e-05, 4.07920000000013e-05, 4.0305000000000896e-05, 4.051399999999844e-05, 4.019400000000034e-05, 4.0638999999998565e-05, 4.073600000000302e-05, 4.0223000000002423e-05, 4.0653000000001605e-05, 4.0153000000001104e-05, 4.0360999999999175e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.812" endtime="20201117 14:47:42.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.807" endtime="20201117 14:47:42.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.817" endtime="20201117 14:47:42.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.820" endtime="20201117 14:47:42.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.819" endtime="20201117 14:47:42.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.815" endtime="20201117 14:47:42.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.446" endtime="20201117 14:47:42.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.444" endtime="20201117 14:47:42.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.443" endtime="20201117 14:47:42.841"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.844" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.852" endtime="20201117 14:47:42.870"></status>
</kw>
<msg timestamp="20201117 14:47:42.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.851" endtime="20201117 14:47:42.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.871" endtime="20201117 14:47:42.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.874" endtime="20201117 14:47:42.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.848" endtime="20201117 14:47:42.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.846" endtime="20201117 14:47:42.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.884" endtime="20201117 14:47:43.169"></status>
</kw>
<msg timestamp="20201117 14:47:43.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.882" endtime="20201117 14:47:43.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.174" endtime="20201117 14:47:43.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.182" endtime="20201117 14:47:43.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.879" endtime="20201117 14:47:43.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.878" endtime="20201117 14:47:43.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.189" level="INFO">${RESULT} = [{'time': 0.022599069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.197199999999776e-05, 'source_diff': 4.197199999999776e-05}, {'time': 0.022647097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:43.186" endtime="20201117 14:47:43.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.203" level="INFO">${ACCURACY} = {'diff': [4.197199999999776e-05, 4.202800000000298e-05, 4.1611000000000425e-05, 4.1152999999998635e-05, 4.201399999999994e-05, 4.1916999999998955e-05, 4.127800000000223e-05, 4.195799999999819e-05, 4.1...</msg>
<status status="PASS" starttime="20201117 14:47:43.190" endtime="20201117 14:47:43.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.207" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.206" endtime="20201117 14:47:43.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.210" level="INFO">VALUE: [4.197199999999776e-05, 4.202800000000298e-05, 4.1611000000000425e-05, 4.1152999999998635e-05, 4.201399999999994e-05, 4.1916999999998955e-05, 4.127800000000223e-05, 4.195799999999819e-05, 4.123600000000005e-05, 4.179199999999883e-05, 4.194400000000209e-05, 4.2096999999997886e-05, 4.204199999999908e-05, 4.1944999999998095e-05, 4.2125000000000495e-05, 4.1695000000001314e-05, 4.177800000000273e-05, 4.1959000000001134e-05, 4.1847000000001106e-05, 4.200000000000037e-05, 4.1388999999999315e-05, 4.1611000000000425e-05, 4.158400000000076e-05, 4.207000000000169e-05, 4.130600000000137e-05, 4.1695000000001314e-05, 4.175000000000012e-05, 4.122200000000048e-05, 4.19860000000008e-05, 4.1554999999998676e-05, 4.194399999999862e-05, 4.1554999999998676e-05, 4.1624999999999995e-05, 4.151399999999944e-05, 4.200000000000037e-05, 4.1319000000001466e-05, 4.1611000000000425e-05, 4.149999999999987e-05, 4.2068999999998746e-05, 4.193000000000252e-05, 4.156999999999772e-05, 4.1875000000000245e-05, 4.1916999999998955e-05, 4.157000000000119e-05, 4.1694999999997845e-05, 4.201400000000341e-05, 4.1902999999999385e-05, 4.1459000000000634e-05, 4.155600000000162e-05, 4.179199999999883e-05]</msg>
<status status="PASS" starttime="20201117 14:47:43.208" endtime="20201117 14:47:43.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.204" endtime="20201117 14:47:43.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.213" endtime="20201117 14:47:43.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.217" endtime="20201117 14:47:43.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.215" endtime="20201117 14:47:43.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.211" endtime="20201117 14:47:43.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.845" endtime="20201117 14:47:43.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.843" endtime="20201117 14:47:43.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.842" endtime="20201117 14:47:43.238"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.240" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.249" endtime="20201117 14:47:43.267"></status>
</kw>
<msg timestamp="20201117 14:47:43.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.248" endtime="20201117 14:47:43.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.269" endtime="20201117 14:47:43.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.271" endtime="20201117 14:47:43.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.245" endtime="20201117 14:47:43.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.242" endtime="20201117 14:47:43.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.281" endtime="20201117 14:47:43.566"></status>
</kw>
<msg timestamp="20201117 14:47:43.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022963222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023005889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.279" endtime="20201117 14:47:43.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022963222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023005889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.571" endtime="20201117 14:47:43.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.579" endtime="20201117 14:47:43.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.277" endtime="20201117 14:47:43.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.275" endtime="20201117 14:47:43.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.586" level="INFO">${RESULT} = [{'time': 0.023005889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2667000000003175e-05, 'source_diff': 4.2667000000003175e-05}, {'time': 0.023053903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:43.583" endtime="20201117 14:47:43.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.600" level="INFO">${ACCURACY} = {'diff': [4.2667000000003175e-05, 4.225000000000062e-05, 4.2208999999997915e-05, 4.233399999999804e-05, 4.2430999999999025e-05, 4.283399999999854e-05, 4.272199999999851e-05, 4.273599999999808e-05, 4.2...</msg>
<status status="PASS" starttime="20201117 14:47:43.587" endtime="20201117 14:47:43.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.605" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.603" endtime="20201117 14:47:43.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.607" level="INFO">VALUE: [4.2667000000003175e-05, 4.225000000000062e-05, 4.2208999999997915e-05, 4.233399999999804e-05, 4.2430999999999025e-05, 4.283399999999854e-05, 4.272199999999851e-05, 4.273599999999808e-05, 4.2722999999997985e-05, 4.295799999999919e-05, 4.269399999999937e-05, 4.2818999999999496e-05, 4.2554999999999676e-05, 4.29999999999979e-05, 4.2889000000000815e-05, 4.2332999999998566e-05, 4.294400000000309e-05, 4.2554999999999676e-05, 4.2638999999997096e-05, 4.2903000000000385e-05, 4.273599999999808e-05, 4.2889000000000815e-05, 4.2375000000000745e-05, 4.276400000000069e-05, 4.2125000000000495e-05, 4.2375000000000745e-05, 4.255599999999915e-05, 4.2459000000001634e-05, 4.2152999999999635e-05, 4.297200000000223e-05, 4.2916999999999955e-05, 4.251400000000044e-05, 4.2167000000002675e-05, 4.304200000000008e-05, 4.281999999999897e-05, 4.225000000000062e-05, 4.301400000000094e-05, 4.3012999999998e-05, 4.234800000000108e-05, 4.28059999999994e-05, 4.220799999999844e-05, 4.2304999999999426e-05, 4.2360999999997706e-05, 4.2152999999999635e-05, 4.26799999999998e-05, 4.244399999999912e-05, 4.241599999999998e-05, 4.225000000000062e-05, 4.29999999999979e-05, 4.245799999999869e-05]</msg>
<status status="PASS" starttime="20201117 14:47:43.606" endtime="20201117 14:47:43.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.601" endtime="20201117 14:47:43.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.610" endtime="20201117 14:47:43.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.614" endtime="20201117 14:47:43.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.612" endtime="20201117 14:47:43.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.609" endtime="20201117 14:47:43.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.241" endtime="20201117 14:47:43.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.239" endtime="20201117 14:47:43.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.238" endtime="20201117 14:47:43.635"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.638" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.646" endtime="20201117 14:47:43.667"></status>
</kw>
<msg timestamp="20201117 14:47:43.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.645" endtime="20201117 14:47:43.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.668" endtime="20201117 14:47:43.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.671" endtime="20201117 14:47:43.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.642" endtime="20201117 14:47:43.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.640" endtime="20201117 14:47:43.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.680" endtime="20201117 14:47:43.967"></status>
</kw>
<msg timestamp="20201117 14:47:43.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02236725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:43.678" endtime="20201117 14:47:43.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02236725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:43.971" endtime="20201117 14:47:43.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.979" endtime="20201117 14:47:43.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.676" endtime="20201117 14:47:43.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.674" endtime="20201117 14:47:43.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.986" level="INFO">${RESULT} = [{'time': 0.022411181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3930999999997056e-05, 'source_diff': 4.3930999999997056e-05}, {'time': 0.022459181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:43.983" endtime="20201117 14:47:43.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.002" level="INFO">${ACCURACY} = {'diff': [4.3930999999997056e-05, 4.3237000000001524e-05, 4.338800000000184e-05, 4.3236999999998055e-05, 4.3332999999999566e-05, 4.377800000000126e-05, 4.34999999999984e-05, 4.406899999999728e-05, 4.3...</msg>
<status status="PASS" starttime="20201117 14:47:43.987" endtime="20201117 14:47:44.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.006" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.005" endtime="20201117 14:47:44.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.009" level="INFO">VALUE: [4.3930999999997056e-05, 4.3237000000001524e-05, 4.338800000000184e-05, 4.3236999999998055e-05, 4.3332999999999566e-05, 4.377800000000126e-05, 4.34999999999984e-05, 4.406899999999728e-05, 4.341600000000098e-05, 4.3124999999998026e-05, 4.354199999999711e-05, 4.408299999999685e-05, 4.3374999999998276e-05, 4.323599999999858e-05, 4.4124999999999026e-05, 4.4138999999998596e-05, 4.404199999999761e-05, 4.3596999999999386e-05, 4.4069000000000746e-05, 4.3375000000001745e-05, 4.351400000000144e-05, 4.326399999999772e-05, 4.3389000000001315e-05, 4.3374999999998276e-05, 4.4139000000002065e-05, 4.3596999999999386e-05, 4.3194999999999345e-05, 4.401400000000194e-05, 4.33059999999999e-05, 4.3624999999998526e-05, 4.394400000000062e-05, 4.3403000000000885e-05, 4.381899999999703e-05, 4.33059999999999e-05, 4.3569000000000246e-05, 4.4083000000000316e-05, 4.397200000000323e-05, 4.3291000000000857e-05, 4.395800000000019e-05, 4.380499999999746e-05, 4.3833000000000066e-05, 4.343000000000055e-05, 4.3389000000001315e-05, 4.3582999999999816e-05, 4.376400000000169e-05, 4.41800000000013e-05, 4.331999999999947e-05, 4.4124999999999026e-05, 4.33059999999999e-05, 4.3389000000001315e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.008" endtime="20201117 14:47:44.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.003" endtime="20201117 14:47:44.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.013" endtime="20201117 14:47:44.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.016" endtime="20201117 14:47:44.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.015" endtime="20201117 14:47:44.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.011" endtime="20201117 14:47:44.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.638" endtime="20201117 14:47:44.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.637" endtime="20201117 14:47:44.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.636" endtime="20201117 14:47:44.037"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.040" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.048" endtime="20201117 14:47:44.067"></status>
</kw>
<msg timestamp="20201117 14:47:44.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.047" endtime="20201117 14:47:44.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.068" endtime="20201117 14:47:44.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.071" endtime="20201117 14:47:44.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.044" endtime="20201117 14:47:44.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.042" endtime="20201117 14:47:44.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.080" endtime="20201117 14:47:44.366"></status>
</kw>
<msg timestamp="20201117 14:47:44.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.079" endtime="20201117 14:47:44.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.370" endtime="20201117 14:47:44.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.379" endtime="20201117 14:47:44.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.076" endtime="20201117 14:47:44.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.074" endtime="20201117 14:47:44.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.386" level="INFO">${RESULT} = [{'time': 0.022496847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4333000000000566e-05, 'source_diff': 4.4333000000000566e-05}, {'time': 0.022545875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:44.382" endtime="20201117 14:47:44.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.399" level="INFO">${ACCURACY} = {'diff': [4.4333000000000566e-05, 4.469400000000137e-05, 4.4638999999999096e-05, 4.4653000000002135e-05, 4.424999999999915e-05, 4.444400000000112e-05, 4.457000000000072e-05, 4.476399999999922e-05, 4.4...</msg>
<status status="PASS" starttime="20201117 14:47:44.387" endtime="20201117 14:47:44.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.404" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.403" endtime="20201117 14:47:44.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.407" level="INFO">VALUE: [4.4333000000000566e-05, 4.469400000000137e-05, 4.4638999999999096e-05, 4.4653000000002135e-05, 4.424999999999915e-05, 4.444400000000112e-05, 4.457000000000072e-05, 4.476399999999922e-05, 4.4097000000003356e-05, 4.4888999999999346e-05, 4.491599999999901e-05, 4.44999999999994e-05, 4.4139000000002065e-05, 4.4888999999999346e-05, 4.4874999999999776e-05, 4.4360999999999706e-05, 4.4124999999999026e-05, 4.445800000000069e-05, 4.481899999999803e-05, 4.447200000000026e-05, 4.501399999999947e-05, 4.424999999999915e-05, 4.444399999999765e-05, 4.4874999999999776e-05, 4.4319000000000996e-05, 4.442999999999808e-05, 4.505499999999871e-05, 4.4305000000001427e-05, 4.4874999999999776e-05, 4.46939999999979e-05, 4.5111000000000456e-05, 4.4625000000002996e-05, 4.4445000000000595e-05, 4.4638999999999096e-05, 4.4195000000000345e-05, 4.4874999999999776e-05, 4.4222999999999485e-05, 4.427800000000176e-05, 4.476399999999922e-05, 4.482000000000097e-05, 4.4945000000001095e-05, 4.4208999999999915e-05, 4.4430999999997556e-05, 4.4888999999999346e-05, 4.4388999999998846e-05, 4.451399999999897e-05, 4.505600000000165e-05, 4.466600000000223e-05, 4.4903000000002385e-05, 4.4569000000001247e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.405" endtime="20201117 14:47:44.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.400" endtime="20201117 14:47:44.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.410" endtime="20201117 14:47:44.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.414" endtime="20201117 14:47:44.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.412" endtime="20201117 14:47:44.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.409" endtime="20201117 14:47:44.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.040" endtime="20201117 14:47:44.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.038" endtime="20201117 14:47:44.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.038" endtime="20201117 14:47:44.435"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.437" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.446" endtime="20201117 14:47:44.463"></status>
</kw>
<msg timestamp="20201117 14:47:44.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.444" endtime="20201117 14:47:44.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.465" endtime="20201117 14:47:44.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.467" endtime="20201117 14:47:44.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.442" endtime="20201117 14:47:44.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.439" endtime="20201117 14:47:44.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.477" endtime="20201117 14:47:44.764"></status>
</kw>
<msg timestamp="20201117 14:47:44.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.475" endtime="20201117 14:47:44.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.768" endtime="20201117 14:47:44.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.777" endtime="20201117 14:47:44.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.472" endtime="20201117 14:47:44.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.471" endtime="20201117 14:47:44.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.784" level="INFO">${RESULT} = [{'time': 0.022459375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5402999999999416e-05, 'source_diff': 4.5402999999999416e-05}, {'time': 0.022507417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:44.780" endtime="20201117 14:47:44.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.798" level="INFO">${ACCURACY} = {'diff': [4.5402999999999416e-05, 4.5222999999997016e-05, 4.612499999999756e-05, 4.558299999999835e-05, 4.5473000000000735e-05, 4.6111000000001456e-05, 4.5430999999998556e-05, 4.554099999999964e-05, 4...</msg>
<status status="PASS" starttime="20201117 14:47:44.785" endtime="20201117 14:47:44.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.803" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.802" endtime="20201117 14:47:44.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.806" level="INFO">VALUE: [4.5402999999999416e-05, 4.5222999999997016e-05, 4.612499999999756e-05, 4.558299999999835e-05, 4.5473000000000735e-05, 4.6111000000001456e-05, 4.5430999999998556e-05, 4.554099999999964e-05, 4.601400000000047e-05, 4.537499999999681e-05, 4.56939999999989e-05, 4.51939999999984e-05, 4.575000000000065e-05, 4.5611000000000956e-05, 4.555499999999921e-05, 4.547200000000126e-05, 4.527799999999929e-05, 4.55000000000004e-05, 4.569400000000237e-05, 4.570800000000194e-05, 4.594400000000262e-05, 4.517999999999883e-05, 4.562499999999706e-05, 4.548599999999736e-05, 4.5181000000001775e-05, 4.547200000000126e-05, 4.559699999999792e-05, 4.5347000000001136e-05, 4.612499999999756e-05, 4.548600000000083e-05, 4.5208999999997446e-05, 4.576400000000022e-05, 4.5945000000002095e-05, 4.5652999999999666e-05, 4.544399999999865e-05, 4.5680999999998806e-05, 4.549999999999693e-05, 4.565200000000019e-05, 4.522199999999754e-05, 4.576400000000022e-05, 4.594400000000262e-05, 4.6139000000000596e-05, 4.5333000000001566e-05, 4.523600000000058e-05, 4.552799999999954e-05, 4.611099999999799e-05, 4.604199999999961e-05, 4.5639000000000096e-05, 4.5569000000002247e-05, 4.5666999999999236e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.805" endtime="20201117 14:47:44.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.799" endtime="20201117 14:47:44.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.810" endtime="20201117 14:47:44.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.813" endtime="20201117 14:47:44.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.812" endtime="20201117 14:47:44.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.808" endtime="20201117 14:47:44.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.438" endtime="20201117 14:47:44.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.436" endtime="20201117 14:47:44.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.435" endtime="20201117 14:47:44.835"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.837" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.846" endtime="20201117 14:47:44.864"></status>
</kw>
<msg timestamp="20201117 14:47:44.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.844" endtime="20201117 14:47:44.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.865" endtime="20201117 14:47:44.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.868" endtime="20201117 14:47:44.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.841" endtime="20201117 14:47:44.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.839" endtime="20201117 14:47:44.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.877" endtime="20201117 14:47:45.164"></status>
</kw>
<msg timestamp="20201117 14:47:45.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022683306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.875" endtime="20201117 14:47:45.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022683306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.168" endtime="20201117 14:47:45.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.181" endtime="20201117 14:47:45.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.873" endtime="20201117 14:47:45.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.871" endtime="20201117 14:47:45.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.188" level="INFO">${RESULT} = [{'time': 0.022683306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.701400000000147e-05, 'source_diff': 4.701400000000147e-05}, {'time': 0.022734333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:45.185" endtime="20201117 14:47:45.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:45.202" level="INFO">${ACCURACY} = {'diff': [4.701400000000147e-05, 4.615199999999722e-05, 4.625000000000115e-05, 4.706900000000028e-05, 4.644399999999965e-05, 4.6347000000002136e-05, 4.7167000000000736e-05, 4.690299999999745e-05, 4.62...</msg>
<status status="PASS" starttime="20201117 14:47:45.189" endtime="20201117 14:47:45.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.206" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:47:45.205" endtime="20201117 14:47:45.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.209" level="INFO">VALUE: [4.701400000000147e-05, 4.615199999999722e-05, 4.625000000000115e-05, 4.706900000000028e-05, 4.644399999999965e-05, 4.6347000000002136e-05, 4.7167000000000736e-05, 4.690299999999745e-05, 4.629100000000039e-05, 4.63060000000029e-05, 4.681900000000003e-05, 4.612499999999756e-05, 4.674999999999818e-05, 4.626400000000072e-05, 4.713800000000212e-05, 4.6861000000002206e-05, 4.68199999999995e-05, 4.6903000000000916e-05, 4.6708999999998946e-05, 4.613899999999713e-05, 4.609699999999842e-05, 4.613899999999713e-05, 4.691600000000101e-05, 4.6708999999998946e-05, 4.673600000000208e-05, 4.620800000000244e-05, 4.6486999999997836e-05, 4.620799999999897e-05, 4.6639000000001096e-05, 4.691599999999754e-05, 4.6389000000000846e-05, 4.622199999999854e-05, 4.626400000000072e-05, 4.617999999999983e-05, 4.63329999999991e-05, 4.648599999999836e-05, 4.673599999999861e-05, 4.672199999999904e-05, 4.630499999999996e-05, 4.652800000000054e-05, 4.626400000000072e-05, 4.6180999999999306e-05, 4.6695000000002845e-05, 4.6180999999999306e-05, 4.6444999999999126e-05, 4.624999999999768e-05, 4.658400000000229e-05, 4.6375000000001276e-05, 4.6194999999998876e-05, 4.657000000000272e-05]</msg>
<status status="PASS" starttime="20201117 14:47:45.207" endtime="20201117 14:47:45.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.203" endtime="20201117 14:47:45.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.212" endtime="20201117 14:47:45.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:45.216" endtime="20201117 14:47:45.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.214" endtime="20201117 14:47:45.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.210" endtime="20201117 14:47:45.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.838" endtime="20201117 14:47:45.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.836" endtime="20201117 14:47:45.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.835" endtime="20201117 14:47:45.237"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.239" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.248" endtime="20201117 14:47:45.268"></status>
</kw>
<msg timestamp="20201117 14:47:45.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.246" endtime="20201117 14:47:45.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.269" endtime="20201117 14:47:45.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.272" endtime="20201117 14:47:45.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.243" endtime="20201117 14:47:45.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.241" endtime="20201117 14:47:45.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.281" endtime="20201117 14:47:45.569"></status>
</kw>
<msg timestamp="20201117 14:47:45.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.279" endtime="20201117 14:47:45.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.573" endtime="20201117 14:47:45.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.582" endtime="20201117 14:47:45.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.277" endtime="20201117 14:47:45.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.275" endtime="20201117 14:47:45.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.589" level="INFO">${RESULT} = [{'time': 0.022475097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.804099999999867e-05, 'source_diff': 4.804099999999867e-05}, {'time': 0.022527111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:45.585" endtime="20201117 14:47:45.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:45.604" level="INFO">${ACCURACY} = {'diff': [4.804099999999867e-05, 4.730499999999749e-05, 4.742999999999761e-05, 4.751400000000197e-05, 4.745800000000022e-05, 4.737499999999881e-05, 4.7917000000001486e-05, 4.780600000000093e-05, 4.731...</msg>
<status status="PASS" starttime="20201117 14:47:45.590" endtime="20201117 14:47:45.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.609" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:47:45.607" endtime="20201117 14:47:45.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.611" level="INFO">VALUE: [4.804099999999867e-05, 4.730499999999749e-05, 4.742999999999761e-05, 4.751400000000197e-05, 4.745800000000022e-05, 4.737499999999881e-05, 4.7917000000001486e-05, 4.780600000000093e-05, 4.731900000000053e-05, 4.763899999999863e-05, 4.7194999999999876e-05, 4.786099999999974e-05, 4.7681000000000806e-05, 4.7625000000002526e-05, 4.805600000000118e-05, 4.7458999999999696e-05, 4.743000000000108e-05, 4.720799999999997e-05, 4.798599999999986e-05, 4.720799999999997e-05, 4.756900000000078e-05, 4.759799999999939e-05, 4.758299999999688e-05, 4.798599999999986e-05, 4.756899999999731e-05, 4.81529999999987e-05, 4.811099999999999e-05, 4.7708999999999946e-05, 4.758300000000035e-05, 4.812499999999956e-05, 4.754200000000111e-05, 4.736099999999924e-05, 4.71940000000004e-05, 4.738899999999838e-05, 4.7194999999999876e-05, 4.773599999999961e-05, 4.7431000000000556e-05, 4.726400000000172e-05, 4.737499999999881e-05, 4.726400000000172e-05, 4.786099999999974e-05, 4.7875000000002776e-05, 4.732e-05, 4.747199999999979e-05, 4.736199999999871e-05, 4.769399999999743e-05, 4.779200000000136e-05, 4.792999999999811e-05, 4.717999999999736e-05, 4.780499999999799e-05]</msg>
<status status="PASS" starttime="20201117 14:47:45.610" endtime="20201117 14:47:45.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.605" endtime="20201117 14:47:45.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.614" endtime="20201117 14:47:45.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:45.618" endtime="20201117 14:47:45.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.616" endtime="20201117 14:47:45.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.613" endtime="20201117 14:47:45.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.240" endtime="20201117 14:47:45.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.238" endtime="20201117 14:47:45.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.237" endtime="20201117 14:47:45.639"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.641" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.650" endtime="20201117 14:47:45.668"></status>
</kw>
<msg timestamp="20201117 14:47:45.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.648" endtime="20201117 14:47:45.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.669" endtime="20201117 14:47:45.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.672" endtime="20201117 14:47:45.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.646" endtime="20201117 14:47:45.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.643" endtime="20201117 14:47:45.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.682" endtime="20201117 14:47:45.968"></status>
</kw>
<msg timestamp="20201117 14:47:45.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.680" endtime="20201117 14:47:45.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022613319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.973" endtime="20201117 14:47:45.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.981" endtime="20201117 14:47:45.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.678" endtime="20201117 14:47:45.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.676" endtime="20201117 14:47:45.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.988" level="INFO">${RESULT} = [{'time': 0.022613319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.830499999999849e-05, 'source_diff': 4.830499999999849e-05}, {'time': 0.022665319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:45.985" endtime="20201117 14:47:45.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.002" level="INFO">${ACCURACY} = {'diff': [4.830499999999849e-05, 4.863800000000015e-05, 4.85000000000034e-05, 4.870800000000147e-05, 4.875000000000018e-05, 4.911100000000099e-05, 4.848600000000036e-05, 4.869399999999843e-05, 4.81799...</msg>
<status status="PASS" starttime="20201117 14:47:45.989" endtime="20201117 14:47:46.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.006" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.005" endtime="20201117 14:47:46.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.009" level="INFO">VALUE: [4.830499999999849e-05, 4.863800000000015e-05, 4.85000000000034e-05, 4.870800000000147e-05, 4.875000000000018e-05, 4.911100000000099e-05, 4.848600000000036e-05, 4.869399999999843e-05, 4.817999999999836e-05, 4.9014e-05, 4.819399999999793e-05, 4.8707999999998e-05, 4.838899999999938e-05, 4.829200000000186e-05, 4.888899999999988e-05, 4.830500000000196e-05, 4.869399999999843e-05, 4.873599999999714e-05, 4.834700000000067e-05, 4.8195000000000876e-05, 4.863899999999963e-05, 4.875000000000018e-05, 4.877800000000279e-05, 4.834800000000014e-05, 4.855599999999821e-05, 4.908400000000132e-05, 4.830600000000143e-05, 4.8681000000001806e-05, 4.879199999999889e-05, 4.872200000000104e-05, 4.8667000000002236e-05, 4.894399999999868e-05, 4.813899999999913e-05, 4.894399999999868e-05, 4.867999999999886e-05, 4.908299999999838e-05, 4.879100000000289e-05, 4.877799999999932e-05, 4.894399999999868e-05, 4.844399999999818e-05, 4.909699999999795e-05, 4.845800000000122e-05, 4.88200000000015e-05, 4.9014e-05, 4.887500000000031e-05, 4.838899999999938e-05, 4.8459000000000696e-05, 4.824999999999968e-05, 4.826399999999925e-05, 4.812499999999956e-05]</msg>
<status status="PASS" starttime="20201117 14:47:46.007" endtime="20201117 14:47:46.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.003" endtime="20201117 14:47:46.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.012" endtime="20201117 14:47:46.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.016" endtime="20201117 14:47:46.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.014" endtime="20201117 14:47:46.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.010" endtime="20201117 14:47:46.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.642" endtime="20201117 14:47:46.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.640" endtime="20201117 14:47:46.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.639" endtime="20201117 14:47:46.037"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.039" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.048" endtime="20201117 14:47:46.067"></status>
</kw>
<msg timestamp="20201117 14:47:46.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.047" endtime="20201117 14:47:46.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.068" endtime="20201117 14:47:46.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.071" endtime="20201117 14:47:46.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.044" endtime="20201117 14:47:46.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.041" endtime="20201117 14:47:46.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.080" endtime="20201117 14:47:46.368"></status>
</kw>
<msg timestamp="20201117 14:47:46.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.079" endtime="20201117 14:47:46.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.373" endtime="20201117 14:47:46.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.381" endtime="20201117 14:47:46.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.076" endtime="20201117 14:47:46.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.074" endtime="20201117 14:47:46.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.388" level="INFO">${RESULT} = [{'time': 0.022953792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9723000000001516e-05, 'source_diff': 4.9723000000001516e-05}, {'time': 0.023005736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:46.385" endtime="20201117 14:47:46.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.402" level="INFO">${ACCURACY} = {'diff': [4.9723000000001516e-05, 4.988899999999741e-05, 4.922200000000154e-05, 5.001300000000153e-05, 4.940299999999995e-05, 4.959700000000192e-05, 4.931899999999906e-05, 4.991700000000002e-05, 4.974...</msg>
<status status="PASS" starttime="20201117 14:47:46.389" endtime="20201117 14:47:46.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.407" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.406" endtime="20201117 14:47:46.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.409" level="INFO">VALUE: [4.9723000000001516e-05, 4.988899999999741e-05, 4.922200000000154e-05, 5.001300000000153e-05, 4.940299999999995e-05, 4.959700000000192e-05, 4.931899999999906e-05, 4.991700000000002e-05, 4.974999999999771e-05, 5.002800000000057e-05, 4.96530000000002e-05, 4.92079999999985e-05, 4.98200000000025e-05, 5.012499999999809e-05, 4.9181000000002306e-05, 4.943099999999909e-05, 4.987500000000131e-05, 4.987500000000131e-05, 4.986099999999827e-05, 4.929099999999992e-05, 5.006899999999981e-05, 4.998600000000186e-05, 4.994399999999968e-05, 4.974999999999771e-05, 4.967999999999986e-05, 4.930499999999949e-05, 4.95140000000005e-05, 4.922199999999807e-05, 4.993099999999959e-05, 4.924999999999721e-05, 4.976400000000075e-05, 5.013899999999766e-05, 4.988900000000088e-05, 4.975000000000118e-05, 4.968099999999934e-05, 4.984800000000164e-05, 4.943099999999909e-05, 4.997200000000229e-05, 4.975000000000118e-05, 4.973599999999814e-05, 4.949999999999746e-05, 4.998599999999839e-05, 4.977699999999738e-05, 4.997200000000229e-05, 4.969399999999943e-05, 4.917999999999936e-05, 5.013900000000113e-05, 4.948599999999789e-05, 5.005500000000024e-05, 4.988899999999741e-05]</msg>
<status status="PASS" starttime="20201117 14:47:46.408" endtime="20201117 14:47:46.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.403" endtime="20201117 14:47:46.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.412" endtime="20201117 14:47:46.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.416" endtime="20201117 14:47:46.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.414" endtime="20201117 14:47:46.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.411" endtime="20201117 14:47:46.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.040" endtime="20201117 14:47:46.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.038" endtime="20201117 14:47:46.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.037" endtime="20201117 14:47:46.438"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.440" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.448" endtime="20201117 14:47:46.467"></status>
</kw>
<msg timestamp="20201117 14:47:46.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.447" endtime="20201117 14:47:46.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.469" endtime="20201117 14:47:46.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.471" endtime="20201117 14:47:46.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.444" endtime="20201117 14:47:46.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.442" endtime="20201117 14:47:46.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.480" endtime="20201117 14:47:46.767"></status>
</kw>
<msg timestamp="20201117 14:47:46.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022890431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022940722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.479" endtime="20201117 14:47:46.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022890431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022940722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.772" endtime="20201117 14:47:46.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.780" endtime="20201117 14:47:46.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.476" endtime="20201117 14:47:46.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.474" endtime="20201117 14:47:46.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.787" level="INFO">${RESULT} = [{'time': 0.022940722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.029100000000092e-05, 'source_diff': 5.029100000000092e-05}, {'time': 0.022994722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:46.783" endtime="20201117 14:47:46.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.800" level="INFO">${ACCURACY} = {'diff': [5.029100000000092e-05, 5.099999999999896e-05, 5.094400000000068e-05, 5.02079999999995e-05, 5.019399999999993e-05, 5.040300000000095e-05, 5.076400000000175e-05, 5.081900000000056e-05, 5.05690...</msg>
<status status="PASS" starttime="20201117 14:47:46.788" endtime="20201117 14:47:46.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.805" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.804" endtime="20201117 14:47:46.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.808" level="INFO">VALUE: [5.029100000000092e-05, 5.099999999999896e-05, 5.094400000000068e-05, 5.02079999999995e-05, 5.019399999999993e-05, 5.040300000000095e-05, 5.076400000000175e-05, 5.081900000000056e-05, 5.056900000000031e-05, 5.081900000000056e-05, 5.013900000000113e-05, 5.08339999999996e-05, 5.105600000000071e-05, 5.094500000000016e-05, 5.108399999999985e-05, 5.105600000000071e-05, 5.094500000000016e-05, 5.033299999999963e-05, 5.018099999999984e-05, 5.080600000000046e-05, 5.082000000000003e-05, 5.030500000000049e-05, 5.031900000000006e-05, 5.095800000000025e-05, 5.066700000000077e-05, 5.05140000000015e-05, 5.105500000000124e-05, 5.038900000000138e-05, 5.108300000000038e-05, 5.100000000000243e-05, 5.055500000000074e-05, 5.05140000000015e-05, 5.075000000000218e-05, 5.095800000000025e-05, 5.0708e-05, 5.079199999999742e-05, 5.062499999999859e-05, 5.105600000000071e-05, 5.05140000000015e-05, 5.080600000000046e-05, 5.030599999999996e-05, 5.101399999999853e-05, 5.075000000000218e-05, 5.088900000000188e-05, 5.081900000000056e-05, 5.030599999999996e-05, 5.019399999999993e-05, 5.068000000000086e-05, 5.073599999999914e-05, 5.055500000000074e-05]</msg>
<status status="PASS" starttime="20201117 14:47:46.806" endtime="20201117 14:47:46.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.801" endtime="20201117 14:47:46.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.811" endtime="20201117 14:47:46.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.815" endtime="20201117 14:47:46.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.813" endtime="20201117 14:47:46.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.810" endtime="20201117 14:47:46.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.441" endtime="20201117 14:47:46.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.439" endtime="20201117 14:47:46.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.438" endtime="20201117 14:47:46.836"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.839" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.847" endtime="20201117 14:47:46.866"></status>
</kw>
<msg timestamp="20201117 14:47:46.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.846" endtime="20201117 14:47:46.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.868" endtime="20201117 14:47:46.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.870" endtime="20201117 14:47:46.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.843" endtime="20201117 14:47:46.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.841" endtime="20201117 14:47:46.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.879" endtime="20201117 14:47:47.167"></status>
</kw>
<msg timestamp="20201117 14:47:47.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.878" endtime="20201117 14:47:47.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.171" endtime="20201117 14:47:47.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.180" endtime="20201117 14:47:47.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.875" endtime="20201117 14:47:47.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.873" endtime="20201117 14:47:47.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.187" level="INFO">${RESULT} = [{'time': 0.022810458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.122200000000007e-05, 'source_diff': 5.122200000000007e-05}, {'time': 0.022864472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:47.183" endtime="20201117 14:47:47.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.202" level="INFO">${ACCURACY} = {'diff': [5.122200000000007e-05, 5.133300000000063e-05, 5.180499999999852e-05, 5.144500000000066e-05, 5.1957999999997784e-05, 5.13470000000002e-05, 5.1971999999997354e-05, 5.205500000000224e-05, 5.137...</msg>
<status status="PASS" starttime="20201117 14:47:47.188" endtime="20201117 14:47:47.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.207" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.206" endtime="20201117 14:47:47.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.210" level="INFO">VALUE: [5.122200000000007e-05, 5.133300000000063e-05, 5.180499999999852e-05, 5.144500000000066e-05, 5.1957999999997784e-05, 5.13470000000002e-05, 5.1971999999997354e-05, 5.205500000000224e-05, 5.137500000000281e-05, 5.201399999999953e-05, 5.165299999999873e-05, 5.186100000000027e-05, 5.173600000000014e-05, 5.170900000000048e-05, 5.11669999999978e-05, 5.158400000000035e-05, 5.1429999999998144e-05, 5.199999999999996e-05, 5.195800000000125e-05, 5.123600000000311e-05, 5.118100000000084e-05, 5.184699999999723e-05, 5.13470000000002e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.12080000000005e-05, 5.140299999999848e-05, 5.161100000000002e-05, 5.212500000000009e-05, 5.168099999999787e-05, 5.174999999999971e-05, 5.1429999999998144e-05, 5.177799999999885e-05, 5.201300000000006e-05, 5.1721999999997104e-05, 5.1429999999998144e-05, 5.194500000000116e-05, 5.124999999999921e-05, 5.149999999999946e-05, 5.168100000000134e-05, 5.157000000000078e-05, 5.198600000000039e-05, 5.179099999999895e-05, 5.157000000000078e-05, 5.161100000000002e-05, 5.129100000000192e-05, 5.148599999999989e-05, 5.194400000000168e-05, 5.152699999999913e-05, 5.123599999999964e-05]</msg>
<status status="PASS" starttime="20201117 14:47:47.208" endtime="20201117 14:47:47.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.203" endtime="20201117 14:47:47.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.213" endtime="20201117 14:47:47.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.216" endtime="20201117 14:47:47.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.215" endtime="20201117 14:47:47.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.211" endtime="20201117 14:47:47.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.839" endtime="20201117 14:47:47.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.838" endtime="20201117 14:47:47.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.837" endtime="20201117 14:47:47.238"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.240" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.249" endtime="20201117 14:47:47.266"></status>
</kw>
<msg timestamp="20201117 14:47:47.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.247" endtime="20201117 14:47:47.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.268" endtime="20201117 14:47:47.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.270" endtime="20201117 14:47:47.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.244" endtime="20201117 14:47:47.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.242" endtime="20201117 14:47:47.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.280" endtime="20201117 14:47:47.565"></status>
</kw>
<msg timestamp="20201117 14:47:47.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.278" endtime="20201117 14:47:47.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.569" endtime="20201117 14:47:47.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.578" endtime="20201117 14:47:47.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.275" endtime="20201117 14:47:47.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.274" endtime="20201117 14:47:47.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.585" level="INFO">${RESULT} = [{'time': 0.022504972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.252800000000307e-05, 'source_diff': 5.252800000000307e-05}, {'time': 0.022562958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:47.581" endtime="20201117 14:47:47.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.599" level="INFO">${ACCURACY} = {'diff': [5.252800000000307e-05, 5.236100000000077e-05, 5.261100000000102e-05, 5.286100000000127e-05, 5.312500000000109e-05, 5.263900000000016e-05, 5.313900000000066e-05, 5.244500000000166e-05, 5.3125...</msg>
<status status="PASS" starttime="20201117 14:47:47.586" endtime="20201117 14:47:47.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.604" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.603" endtime="20201117 14:47:47.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.606" level="INFO">VALUE: [5.252800000000307e-05, 5.236100000000077e-05, 5.261100000000102e-05, 5.286100000000127e-05, 5.312500000000109e-05, 5.263900000000016e-05, 5.313900000000066e-05, 5.244500000000166e-05, 5.312500000000109e-05, 5.233299999999816e-05, 5.308299999999891e-05, 5.255599999999874e-05, 5.258300000000188e-05, 5.2749999999997244e-05, 5.301400000000053e-05, 5.230599999999849e-05, 5.304199999999967e-05, 5.270900000000148e-05, 5.3138000000001184e-05, 5.222200000000107e-05, 5.261100000000102e-05, 5.308399999999838e-05, 5.2179999999998894e-05, 5.252700000000013e-05, 5.23470000000012e-05, 5.272200000000157e-05, 5.306899999999934e-05, 5.2735999999997674e-05, 5.237500000000034e-05, 5.218100000000184e-05, 5.226399999999978e-05, 5.280599999999899e-05, 5.247200000000132e-05, 5.25279999999996e-05, 5.268100000000234e-05, 5.269500000000191e-05, 5.240299999999948e-05, 5.219500000000141e-05, 5.2749999999997244e-05, 5.251400000000003e-05, 5.273600000000114e-05, 5.212500000000009e-05, 5.226300000000031e-05, 5.286200000000074e-05, 5.225000000000021e-05, 5.313900000000066e-05, 5.222200000000107e-05, 5.2943999999999214e-05, 5.275000000000071e-05, 5.288900000000041e-05]</msg>
<status status="PASS" starttime="20201117 14:47:47.605" endtime="20201117 14:47:47.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.600" endtime="20201117 14:47:47.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.609" endtime="20201117 14:47:47.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.613" endtime="20201117 14:47:47.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.611" endtime="20201117 14:47:47.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.608" endtime="20201117 14:47:47.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.241" endtime="20201117 14:47:47.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.239" endtime="20201117 14:47:47.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.238" endtime="20201117 14:47:47.634"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.637" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.645" endtime="20201117 14:47:47.663"></status>
</kw>
<msg timestamp="20201117 14:47:47.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.643" endtime="20201117 14:47:47.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.664" endtime="20201117 14:47:47.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.667" endtime="20201117 14:47:47.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.641" endtime="20201117 14:47:47.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.639" endtime="20201117 14:47:47.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.676" endtime="20201117 14:47:47.964"></status>
</kw>
<msg timestamp="20201117 14:47:47.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.675" endtime="20201117 14:47:47.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.969" endtime="20201117 14:47:47.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.978" endtime="20201117 14:47:47.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.672" endtime="20201117 14:47:47.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.670" endtime="20201117 14:47:47.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.985" level="INFO">${RESULT} = [{'time': 0.022466639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.336100000000177e-05, 'source_diff': 5.336100000000177e-05}, {'time': 0.022523639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:47.981" endtime="20201117 14:47:47.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.998" level="INFO">${ACCURACY} = {'diff': [5.336100000000177e-05, 5.386100000000227e-05, 5.393100000000012e-05, 5.406999999999981e-05, 5.3957999999999784e-05, 5.320899999999851e-05, 5.312500000000109e-05, 5.326400000000078e-05, 5.356...</msg>
<status status="PASS" starttime="20201117 14:47:47.986" endtime="20201117 14:47:47.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.003" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.002" endtime="20201117 14:47:48.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.006" level="INFO">VALUE: [5.336100000000177e-05, 5.386100000000227e-05, 5.393100000000012e-05, 5.406999999999981e-05, 5.3957999999999784e-05, 5.320899999999851e-05, 5.312500000000109e-05, 5.326400000000078e-05, 5.356999999999931e-05, 5.350000000000146e-05, 5.3999999999998494e-05, 5.3707999999999534e-05, 5.3471999999998854e-05, 5.372200000000257e-05, 5.3193999999999464e-05, 5.35280000000006e-05, 5.3416000000000574e-05, 5.383299999999966e-05, 5.3693999999999964e-05, 5.355500000000027e-05, 5.350000000000146e-05, 5.356899999999984e-05, 5.3957999999999784e-05, 5.3763999999997814e-05, 5.330599999999949e-05, 5.369499999999944e-05, 5.3999999999998494e-05, 5.33340000000021e-05, 5.393100000000012e-05, 5.370899999999901e-05, 5.3999999999998494e-05, 5.4013999999998064e-05, 5.406999999999981e-05, 5.343099999999962e-05, 5.377700000000138e-05, 5.3693999999999964e-05, 5.330500000000002e-05, 5.413900000000166e-05, 5.380500000000052e-05, 5.40280000000011e-05, 5.3193999999999464e-05, 5.405500000000077e-05, 5.405500000000077e-05, 5.333299999999916e-05, 5.3929999999997175e-05, 5.358299999999941e-05, 5.387499999999837e-05, 5.380599999999999e-05, 5.350000000000146e-05, 5.368099999999987e-05]</msg>
<status status="PASS" starttime="20201117 14:47:48.004" endtime="20201117 14:47:48.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.999" endtime="20201117 14:47:48.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.009" endtime="20201117 14:47:48.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.013" endtime="20201117 14:47:48.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.011" endtime="20201117 14:47:48.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.007" endtime="20201117 14:47:48.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.637" endtime="20201117 14:47:48.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.635" endtime="20201117 14:47:48.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.635" endtime="20201117 14:47:48.034"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.036" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.045" endtime="20201117 14:47:48.063"></status>
</kw>
<msg timestamp="20201117 14:47:48.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.043" endtime="20201117 14:47:48.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.065" endtime="20201117 14:47:48.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.067" endtime="20201117 14:47:48.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.040" endtime="20201117 14:47:48.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.038" endtime="20201117 14:47:48.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.077" endtime="20201117 14:47:48.364"></status>
</kw>
<msg timestamp="20201117 14:47:48.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.075" endtime="20201117 14:47:48.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.368" endtime="20201117 14:47:48.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.377" endtime="20201117 14:47:48.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.072" endtime="20201117 14:47:48.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.070" endtime="20201117 14:47:48.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.384" level="INFO">${RESULT} = [{'time': 0.022473028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444500000000019e-05, 'source_diff': 5.444500000000019e-05}, {'time': 0.022530028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:48.380" endtime="20201117 14:47:48.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.398" level="INFO">${ACCURACY} = {'diff': [5.444500000000019e-05, 5.48609999999998e-05, 5.482000000000056e-05, 5.469500000000044e-05, 5.4749999999999244e-05, 5.4263999999998314e-05, 5.4749999999999244e-05, 5.508400000000038e-05, 5.49...</msg>
<status status="PASS" starttime="20201117 14:47:48.385" endtime="20201117 14:47:48.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.402" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.401" endtime="20201117 14:47:48.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.405" level="INFO">VALUE: [5.444500000000019e-05, 5.48609999999998e-05, 5.482000000000056e-05, 5.469500000000044e-05, 5.4749999999999244e-05, 5.4263999999998314e-05, 5.4749999999999244e-05, 5.508400000000038e-05, 5.491700000000155e-05, 5.4929999999998175e-05, 5.425000000000221e-05, 5.4444000000000714e-05, 5.462500000000259e-05, 5.455500000000127e-05, 5.508300000000091e-05, 5.4180000000000894e-05, 5.4263999999998314e-05, 5.506899999999787e-05, 5.4999999999999494e-05, 5.4235999999999174e-05, 5.4208000000000034e-05, 5.4541999999997703e-05, 5.461199999999902e-05, 5.4249999999998744e-05, 5.4527999999998134e-05, 5.4499999999998994e-05, 5.430600000000049e-05, 5.437499999999887e-05, 5.452700000000213e-05, 5.4887999999999465e-05, 5.476299999999934e-05, 5.491700000000155e-05, 5.4152000000001754e-05, 5.488899999999894e-05, 5.4722000000000104e-05, 5.4277999999997883e-05, 5.4722000000000104e-05, 5.45280000000016e-05, 5.4693999999997495e-05, 5.4735999999999674e-05, 5.461099999999955e-05, 5.413899999999819e-05, 5.505600000000124e-05, 5.4915999999998605e-05, 5.4527999999998134e-05, 5.480499999999805e-05, 5.4263999999998314e-05, 5.488899999999894e-05, 5.418100000000037e-05, 5.441699999999758e-05]</msg>
<status status="PASS" starttime="20201117 14:47:48.403" endtime="20201117 14:47:48.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.399" endtime="20201117 14:47:48.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.408" endtime="20201117 14:47:48.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.412" endtime="20201117 14:47:48.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.410" endtime="20201117 14:47:48.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.406" endtime="20201117 14:47:48.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.037" endtime="20201117 14:47:48.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.035" endtime="20201117 14:47:48.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.034" endtime="20201117 14:47:48.433"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.435" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.444" endtime="20201117 14:47:48.462"></status>
</kw>
<msg timestamp="20201117 14:47:48.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.442" endtime="20201117 14:47:48.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.464" endtime="20201117 14:47:48.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.467" endtime="20201117 14:47:48.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.439" endtime="20201117 14:47:48.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.437" endtime="20201117 14:47:48.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.476" endtime="20201117 14:47:48.763"></status>
</kw>
<msg timestamp="20201117 14:47:48.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.474" endtime="20201117 14:47:48.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.768" endtime="20201117 14:47:48.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.776" endtime="20201117 14:47:48.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.472" endtime="20201117 14:47:48.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.470" endtime="20201117 14:47:48.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.783" level="INFO">${RESULT} = [{'time': 0.022548222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.581899999999862e-05, 'source_diff': 5.581899999999862e-05}, {'time': 0.022609222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:48.780" endtime="20201117 14:47:48.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.798" level="INFO">${ACCURACY} = {'diff': [5.581899999999862e-05, 5.550000000000346e-05, 5.5777999999999384e-05, 5.5693999999998495e-05, 5.5416000000002574e-05, 5.583299999999819e-05, 5.531899999999812e-05, 5.587500000000037e-05, 5.5...</msg>
<status status="PASS" starttime="20201117 14:47:48.784" endtime="20201117 14:47:48.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.803" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.802" endtime="20201117 14:47:48.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.806" level="INFO">VALUE: [5.581899999999862e-05, 5.550000000000346e-05, 5.5777999999999384e-05, 5.5693999999998495e-05, 5.5416000000002574e-05, 5.583299999999819e-05, 5.531899999999812e-05, 5.587500000000037e-05, 5.562500000000012e-05, 5.5499999999999994e-05, 5.569500000000144e-05, 5.5499999999999994e-05, 5.532000000000106e-05, 5.563899999999969e-05, 5.591699999999908e-05, 5.5805999999998523e-05, 5.583400000000113e-05, 5.5944000000002214e-05, 5.61670000000028e-05, 5.5429999999998675e-05, 5.533300000000116e-05, 5.533299999999769e-05, 5.587500000000037e-05, 5.558399999999741e-05, 5.537499999999987e-05, 5.5429999999998675e-05, 5.613900000000019e-05, 5.5943999999998745e-05, 5.587500000000037e-05, 5.531900000000159e-05, 5.593099999999865e-05, 5.513900000000266e-05, 5.518100000000137e-05, 5.5193999999997995e-05, 5.537499999999987e-05, 5.5527999999999134e-05, 5.543100000000162e-05, 5.520900000000051e-05, 5.569500000000144e-05, 5.609699999999801e-05, 5.576300000000034e-05, 5.527699999999941e-05, 5.537499999999987e-05, 5.556899999999837e-05, 5.587500000000037e-05, 5.5513999999999564e-05, 5.5971999999997885e-05, 5.581899999999862e-05, 5.533300000000116e-05, 5.5929999999999175e-05]</msg>
<status status="PASS" starttime="20201117 14:47:48.804" endtime="20201117 14:47:48.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.799" endtime="20201117 14:47:48.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.809" endtime="20201117 14:47:48.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.812" endtime="20201117 14:47:48.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.811" endtime="20201117 14:47:48.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.807" endtime="20201117 14:47:48.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.436" endtime="20201117 14:47:48.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.434" endtime="20201117 14:47:48.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.433" endtime="20201117 14:47:48.834"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.836" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.845" endtime="20201117 14:47:48.864"></status>
</kw>
<msg timestamp="20201117 14:47:48.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.843" endtime="20201117 14:47:48.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.865" endtime="20201117 14:47:48.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.868" endtime="20201117 14:47:48.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.841" endtime="20201117 14:47:48.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.838" endtime="20201117 14:47:48.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.877" endtime="20201117 14:47:49.164"></status>
</kw>
<msg timestamp="20201117 14:47:49.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022991556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.876" endtime="20201117 14:47:49.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022991556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.168" endtime="20201117 14:47:49.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.176" endtime="20201117 14:47:49.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.873" endtime="20201117 14:47:49.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.871" endtime="20201117 14:47:49.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.183" level="INFO">${RESULT} = [{'time': 0.022991556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.644499999999872e-05, 'source_diff': 5.644499999999872e-05}, {'time': 0.023053542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:49.180" endtime="20201117 14:47:49.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.197" level="INFO">${ACCURACY} = {'diff': [5.644499999999872e-05, 5.633399999999816e-05, 5.637500000000087e-05, 5.7069999999999343e-05, 5.7055999999999774e-05, 5.6972000000002354e-05, 5.66809999999994e-05, 5.6165999999999855e-05, 5.6...</msg>
<status status="PASS" starttime="20201117 14:47:49.184" endtime="20201117 14:47:49.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.202" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:47:49.201" endtime="20201117 14:47:49.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.204" level="INFO">VALUE: [5.644499999999872e-05, 5.633399999999816e-05, 5.637500000000087e-05, 5.7069999999999343e-05, 5.7055999999999774e-05, 5.6972000000002354e-05, 5.66809999999994e-05, 5.6165999999999855e-05, 5.665300000000026e-05, 5.681899999999962e-05, 5.65549999999998e-05, 5.6943999999999745e-05, 5.6250000000000744e-05, 5.6528000000000134e-05, 5.613900000000019e-05, 5.712499999999815e-05, 5.666699999999983e-05, 5.691700000000008e-05, 5.6791999999999954e-05, 5.637500000000087e-05, 5.6569999999998843e-05, 5.638899999999697e-05, 5.63610000000013e-05, 5.6915999999997136e-05, 5.6721999999998635e-05, 5.6527999999996664e-05, 5.6221999999998135e-05, 5.643099999999915e-05, 5.6750000000001244e-05, 5.6708000000002534e-05, 5.6749999999997774e-05, 5.6999999999998024e-05, 5.638900000000044e-05, 5.6193999999998995e-05, 5.6665999999996886e-05, 5.613900000000019e-05, 5.6666000000000355e-05, 5.658399999999841e-05, 5.633300000000216e-05, 5.6735999999998205e-05, 5.6722000000002104e-05, 5.615299999999976e-05, 5.7042000000000204e-05, 5.672299999999811e-05, 5.7014000000001064e-05, 5.6319999999998593e-05, 5.6750000000001244e-05, 5.619499999999847e-05, 5.687500000000137e-05, 5.662499999999765e-05]</msg>
<status status="PASS" starttime="20201117 14:47:49.203" endtime="20201117 14:47:49.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.198" endtime="20201117 14:47:49.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.207" endtime="20201117 14:47:49.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:49.211" endtime="20201117 14:47:49.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.209" endtime="20201117 14:47:49.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.206" endtime="20201117 14:47:49.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.837" endtime="20201117 14:47:49.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.835" endtime="20201117 14:47:49.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.834" endtime="20201117 14:47:49.233"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.235" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.244" endtime="20201117 14:47:49.263"></status>
</kw>
<msg timestamp="20201117 14:47:49.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.242" endtime="20201117 14:47:49.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.264" endtime="20201117 14:47:49.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.267" endtime="20201117 14:47:49.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.239" endtime="20201117 14:47:49.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.237" endtime="20201117 14:47:49.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.276" endtime="20201117 14:47:49.564"></status>
</kw>
<msg timestamp="20201117 14:47:49.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022462653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022520236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.274" endtime="20201117 14:47:49.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022462653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022520236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.568" endtime="20201117 14:47:49.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.577" endtime="20201117 14:47:49.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.272" endtime="20201117 14:47:49.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.270" endtime="20201117 14:47:49.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.584" level="INFO">${RESULT} = [{'time': 0.022520236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.758299999999994e-05, 'source_diff': 5.758299999999994e-05}, {'time': 0.022583181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:49.580" endtime="20201117 14:47:49.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.597" level="INFO">${ACCURACY} = {'diff': [5.758299999999994e-05, 5.737500000000187e-05, 5.738900000000144e-05, 5.8070000000000344e-05, 5.7749999999998775e-05, 5.7930000000001175e-05, 5.805499999999783e-05, 5.75550000000008e-05, 5.79...</msg>
<status status="PASS" starttime="20201117 14:47:49.585" endtime="20201117 14:47:49.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.602" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:47:49.601" endtime="20201117 14:47:49.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.605" level="INFO">VALUE: [5.758299999999994e-05, 5.737500000000187e-05, 5.738900000000144e-05, 5.8070000000000344e-05, 5.7749999999998775e-05, 5.7930000000001175e-05, 5.805499999999783e-05, 5.75550000000008e-05, 5.7944000000000745e-05, 5.7457999999999815e-05, 5.741699999999711e-05, 5.78749999999989e-05, 5.7430000000000675e-05, 5.7556000000000274e-05, 5.763900000000169e-05, 5.794499999999675e-05, 5.759799999999898e-05, 5.791700000000108e-05, 5.740300000000101e-05, 5.7735999999999205e-05, 5.788900000000194e-05, 5.7986000000002924e-05, 5.709699999999901e-05, 5.8069999999996874e-05, 5.7806000000000524e-05, 5.813899999999872e-05, 5.7763999999998344e-05, 5.7180000000000425e-05, 5.730499999999708e-05, 5.7249999999998274e-05, 5.766700000000083e-05, 5.737500000000187e-05, 5.7500000000001994e-05, 5.7207999999999565e-05, 5.78749999999989e-05, 5.815299999999829e-05, 5.811100000000305e-05, 5.790299999999804e-05, 5.79870000000024e-05, 5.713899999999772e-05, 5.786099999999933e-05, 5.804099999999826e-05, 5.7750000000002244e-05, 5.7806000000000524e-05, 5.7735999999999205e-05, 5.763899999999822e-05, 5.794500000000022e-05, 5.738900000000144e-05, 5.812499999999915e-05, 5.731900000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:47:49.603" endtime="20201117 14:47:49.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.598" endtime="20201117 14:47:49.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.608" endtime="20201117 14:47:49.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:49.612" endtime="20201117 14:47:49.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.610" endtime="20201117 14:47:49.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.607" endtime="20201117 14:47:49.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.236" endtime="20201117 14:47:49.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.234" endtime="20201117 14:47:49.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.233" endtime="20201117 14:47:49.633"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.635" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.644" endtime="20201117 14:47:49.663"></status>
</kw>
<msg timestamp="20201117 14:47:49.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.642" endtime="20201117 14:47:49.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.664" endtime="20201117 14:47:49.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.667" endtime="20201117 14:47:49.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.640" endtime="20201117 14:47:49.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.637" endtime="20201117 14:47:49.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.676" endtime="20201117 14:47:49.964"></status>
</kw>
<msg timestamp="20201117 14:47:49.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.675" endtime="20201117 14:47:49.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.968" endtime="20201117 14:47:49.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.977" endtime="20201117 14:47:49.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.672" endtime="20201117 14:47:49.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.670" endtime="20201117 14:47:49.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.984" level="INFO">${RESULT} = [{'time': 0.022500625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.893099999999818e-05, 'source_diff': 5.893099999999818e-05}, {'time': 0.022562653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:49.980" endtime="20201117 14:47:49.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.997" level="INFO">${ACCURACY} = {'diff': [5.893099999999818e-05, 5.890299999999904e-05, 5.9014000000003064e-05, 5.841699999999811e-05, 5.8333999999996694e-05, 5.86810000000014e-05, 5.831900000000112e-05, 5.855499999999833e-05, 5.856...</msg>
<status status="PASS" starttime="20201117 14:47:49.985" endtime="20201117 14:47:49.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.002" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.001" endtime="20201117 14:47:50.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.005" level="INFO">VALUE: [5.893099999999818e-05, 5.890299999999904e-05, 5.9014000000003064e-05, 5.841699999999811e-05, 5.8333999999996694e-05, 5.86810000000014e-05, 5.831900000000112e-05, 5.855499999999833e-05, 5.85689999999979e-05, 5.9013999999999595e-05, 5.843099999999768e-05, 5.8263999999998844e-05, 5.886100000000033e-05, 5.8263999999998844e-05, 5.8708000000001065e-05, 5.8208000000000565e-05, 5.8444000000001245e-05, 5.8929999999998706e-05, 5.8222000000000135e-05, 5.855499999999833e-05, 5.831900000000112e-05, 5.881899999999815e-05, 5.836099999999983e-05, 5.8777999999998914e-05, 5.8264000000002314e-05, 5.820900000000004e-05, 5.834700000000026e-05, 5.893099999999818e-05, 5.890299999999904e-05, 5.8277999999998414e-05, 5.897300000000036e-05, 5.869500000000097e-05, 5.911100000000058e-05, 5.8763999999999345e-05, 5.815299999999829e-05, 5.862499999999965e-05, 5.8235999999999705e-05, 5.8444000000001245e-05, 5.888900000000294e-05, 5.85689999999979e-05, 5.908300000000144e-05, 5.886100000000033e-05, 5.83749999999994e-05, 5.8749999999999775e-05, 5.861100000000008e-05, 5.8292000000001454e-05, 5.894499999999775e-05, 5.8736000000000205e-05, 5.8249999999999275e-05, 5.86810000000014e-05]</msg>
<status status="PASS" starttime="20201117 14:47:50.003" endtime="20201117 14:47:50.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.998" endtime="20201117 14:47:50.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.008" endtime="20201117 14:47:50.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.012" endtime="20201117 14:47:50.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.010" endtime="20201117 14:47:50.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.007" endtime="20201117 14:47:50.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.636" endtime="20201117 14:47:50.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.634" endtime="20201117 14:47:50.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.633" endtime="20201117 14:47:50.033"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.036" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.044" endtime="20201117 14:47:50.063"></status>
</kw>
<msg timestamp="20201117 14:47:50.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.043" endtime="20201117 14:47:50.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.065" endtime="20201117 14:47:50.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.067" endtime="20201117 14:47:50.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.040" endtime="20201117 14:47:50.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.038" endtime="20201117 14:47:50.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.076" endtime="20201117 14:47:50.364"></status>
</kw>
<msg timestamp="20201117 14:47:50.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02248525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022544569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:50.075" endtime="20201117 14:47:50.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02248525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022544569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:50.369" endtime="20201117 14:47:50.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.377" endtime="20201117 14:47:50.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.072" endtime="20201117 14:47:50.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.070" endtime="20201117 14:47:50.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:50.384" level="INFO">${RESULT} = [{'time': 0.022544569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931900000000212e-05, 'source_diff': 5.931900000000212e-05}, {'time': 0.022606569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:50.381" endtime="20201117 14:47:50.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.404" level="INFO">${ACCURACY} = {'diff': [5.931900000000212e-05, 5.98750000000009e-05, 5.9500000000000525e-05, 5.9777999999999915e-05, 6.005499999999983e-05, 5.961100000000108e-05, 5.980500000000305e-05, 6.0042000000003204e-05, 5.91...</msg>
<status status="PASS" starttime="20201117 14:47:50.389" endtime="20201117 14:47:50.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.408" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.407" endtime="20201117 14:47:50.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.411" level="INFO">VALUE: [5.931900000000212e-05, 5.98750000000009e-05, 5.9500000000000525e-05, 5.9777999999999915e-05, 6.005499999999983e-05, 5.961100000000108e-05, 5.980500000000305e-05, 6.0042000000003204e-05, 5.913899999999972e-05, 5.9277999999999414e-05, 5.983300000000219e-05, 5.965299999999979e-05, 5.9819999999998624e-05, 5.944500000000172e-05, 6.012500000000115e-05, 5.962500000000065e-05, 5.9598000000000984e-05, 5.951299999999715e-05, 5.9750000000000775e-05, 5.915299999999929e-05, 5.938899999999997e-05, 5.9194000000001995e-05, 5.922300000000061e-05, 6.00689999999994e-05, 5.9250000000000275e-05, 5.9415999999999636e-05, 5.9485999999997485e-05, 5.9763999999996875e-05, 5.962500000000065e-05, 5.9764000000000345e-05, 5.916699999999886e-05, 5.93750000000004e-05, 5.943099999999868e-05, 6.00689999999994e-05, 5.911099999999711e-05, 5.9862000000000803e-05, 5.965299999999979e-05, 6.0014000000000595e-05, 5.9584000000001414e-05, 5.9500000000000525e-05, 5.9415999999999636e-05, 5.941699999999911e-05, 5.9916000000000136e-05, 5.969500000000197e-05, 5.9457999999998346e-05, 5.9500000000000525e-05, 5.9985999999997985e-05, 5.984700000000176e-05, 5.931899999999865e-05, 5.9500000000000525e-05]</msg>
<status status="PASS" starttime="20201117 14:47:50.409" endtime="20201117 14:47:50.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.405" endtime="20201117 14:47:50.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.414" endtime="20201117 14:47:50.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.418" endtime="20201117 14:47:50.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.416" endtime="20201117 14:47:50.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.412" endtime="20201117 14:47:50.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.036" endtime="20201117 14:47:50.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.034" endtime="20201117 14:47:50.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.034" endtime="20201117 14:47:50.439"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.441" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.450" endtime="20201117 14:47:50.468"></status>
</kw>
<msg timestamp="20201117 14:47:50.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.448" endtime="20201117 14:47:50.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.470" endtime="20201117 14:47:50.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.472" endtime="20201117 14:47:50.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.445" endtime="20201117 14:47:50.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.443" endtime="20201117 14:47:50.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.482" endtime="20201117 14:47:50.767"></status>
</kw>
<msg timestamp="20201117 14:47:50.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.480" endtime="20201117 14:47:50.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.772" endtime="20201117 14:47:50.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.780" endtime="20201117 14:47:50.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.477" endtime="20201117 14:47:50.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.476" endtime="20201117 14:47:50.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:50.788" level="INFO">${RESULT} = [{'time': 0.022436444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.112499999999868e-05, 'source_diff': 6.112499999999868e-05}, {'time': 0.022500444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:50.784" endtime="20201117 14:47:50.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.801" level="INFO">${ACCURACY} = {'diff': [6.112499999999868e-05, 6.0680000000000456e-05, 6.1014000000001595e-05, 6.040299999999707e-05, 6.0415999999997166e-05, 6.015300000000029e-05, 6.0694000000000026e-05, 6.0806000000000054e-05, 6...</msg>
<status status="PASS" starttime="20201117 14:47:50.789" endtime="20201117 14:47:50.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.806" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.805" endtime="20201117 14:47:50.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.808" level="INFO">VALUE: [6.112499999999868e-05, 6.0680000000000456e-05, 6.1014000000001595e-05, 6.040299999999707e-05, 6.0415999999997166e-05, 6.015300000000029e-05, 6.0694000000000026e-05, 6.0806000000000054e-05, 6.081900000000015e-05, 6.0749999999998305e-05, 6.069500000000297e-05, 6.091699999999714e-05, 6.0750000000001775e-05, 6.094499999999975e-05, 6.069500000000297e-05, 6.10560000000003e-05, 6.0249999999997805e-05, 6.0528000000000665e-05, 6.065299999999732e-05, 6.093100000000018e-05, 6.051299999999815e-05, 6.054100000000076e-05, 6.0944000000000276e-05, 6.0513999999997625e-05, 6.0499999999998055e-05, 6.013900000000072e-05, 6.0749999999998305e-05, 6.0999999999998555e-05, 6.0278000000000415e-05, 6.0443999999999776e-05, 6.0319999999999124e-05, 6.083299999999972e-05, 6.108299999999997e-05, 6.018099999999943e-05, 6.0249999999997805e-05, 6.020899999999857e-05, 6.0764000000001345e-05, 6.093100000000018e-05, 6.094499999999975e-05, 6.070899999999907e-05, 6.102699999999822e-05, 6.0416000000000636e-05, 6.0166000000000386e-05, 6.054099999999729e-05, 6.0749999999998305e-05, 6.0457999999999346e-05, 6.083299999999972e-05, 6.1028000000001165e-05, 6.0430000000000206e-05, 6.0264000000000845e-05]</msg>
<status status="PASS" starttime="20201117 14:47:50.807" endtime="20201117 14:47:50.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.802" endtime="20201117 14:47:50.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.812" endtime="20201117 14:47:50.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.815" endtime="20201117 14:47:50.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.814" endtime="20201117 14:47:50.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.810" endtime="20201117 14:47:50.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.442" endtime="20201117 14:47:50.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.440" endtime="20201117 14:47:50.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.439" endtime="20201117 14:47:50.836"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.839" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.847" endtime="20201117 14:47:50.866"></status>
</kw>
<msg timestamp="20201117 14:47:50.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.846" endtime="20201117 14:47:50.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.868" endtime="20201117 14:47:50.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.870" endtime="20201117 14:47:50.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.843" endtime="20201117 14:47:50.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.841" endtime="20201117 14:47:50.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.880" endtime="20201117 14:47:51.167"></status>
</kw>
<msg timestamp="20201117 14:47:51.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022430569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.878" endtime="20201117 14:47:51.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022430569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.171" endtime="20201117 14:47:51.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.180" endtime="20201117 14:47:51.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.875" endtime="20201117 14:47:51.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.873" endtime="20201117 14:47:51.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.187" level="INFO">${RESULT} = [{'time': 0.022430569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.147199999999992e-05, 'source_diff': 6.147199999999992e-05}, {'time': 0.022497569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:51.183" endtime="20201117 14:47:51.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:51.200" level="INFO">${ACCURACY} = {'diff': [6.147199999999992e-05, 6.17629999999994e-05, 6.161200000000255e-05, 6.188799999999953e-05, 6.186099999999986e-05, 6.131899999999718e-05, 6.208300000000097e-05, 6.194400000000128e-05, 6.13190...</msg>
<status status="PASS" starttime="20201117 14:47:51.188" endtime="20201117 14:47:51.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.205" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:47:51.204" endtime="20201117 14:47:51.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.208" level="INFO">VALUE: [6.147199999999992e-05, 6.17629999999994e-05, 6.161200000000255e-05, 6.188799999999953e-05, 6.186099999999986e-05, 6.131899999999718e-05, 6.208300000000097e-05, 6.194400000000128e-05, 6.131900000000065e-05, 6.14300000000012e-05, 6.141700000000111e-05, 6.188900000000247e-05, 6.182000000000062e-05, 6.193100000000118e-05, 6.132000000000012e-05, 6.157000000000037e-05, 6.143099999999721e-05, 6.18340000000002e-05, 6.168099999999746e-05, 6.207000000000087e-05, 6.17629999999994e-05, 6.194400000000128e-05, 6.201299999999965e-05, 6.205599999999784e-05, 6.202699999999922e-05, 6.14300000000012e-05, 6.127800000000141e-05, 6.180499999999811e-05, 6.131999999999665e-05, 6.131899999999718e-05, 6.15279999999982e-05, 6.12499999999988e-05, 6.206899999999793e-05, 6.179200000000148e-05, 6.212499999999968e-05, 6.166600000000189e-05, 6.1195e-05, 6.172200000000017e-05, 6.213899999999925e-05, 6.1582999999997e-05, 6.13889999999985e-05, 6.1195e-05, 6.151300000000262e-05, 6.168000000000146e-05, 6.188900000000247e-05, 6.1888999999999e-05, 6.119400000000053e-05, 6.177799999999845e-05, 6.212499999999968e-05, 6.194400000000128e-05]</msg>
<status status="PASS" starttime="20201117 14:47:51.206" endtime="20201117 14:47:51.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.201" endtime="20201117 14:47:51.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.211" endtime="20201117 14:47:51.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:51.214" endtime="20201117 14:47:51.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.213" endtime="20201117 14:47:51.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.209" endtime="20201117 14:47:51.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.839" endtime="20201117 14:47:51.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.837" endtime="20201117 14:47:51.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.837" endtime="20201117 14:47:51.236"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.238" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.246" endtime="20201117 14:47:51.265"></status>
</kw>
<msg timestamp="20201117 14:47:51.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.245" endtime="20201117 14:47:51.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.267" endtime="20201117 14:47:51.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.270" endtime="20201117 14:47:51.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.242" endtime="20201117 14:47:51.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.240" endtime="20201117 14:47:51.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.279" endtime="20201117 14:47:51.566"></status>
</kw>
<msg timestamp="20201117 14:47:51.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.277" endtime="20201117 14:47:51.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.570" endtime="20201117 14:47:51.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.579" endtime="20201117 14:47:51.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.275" endtime="20201117 14:47:51.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.273" endtime="20201117 14:47:51.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.585" level="INFO">${RESULT} = [{'time': 0.022393111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.300000000000056e-05, 'source_diff': 6.300000000000056e-05}, {'time': 0.022460139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:51.582" endtime="20201117 14:47:51.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:51.599" level="INFO">${ACCURACY} = {'diff': [6.300000000000056e-05, 6.234700000000079e-05, 6.262500000000018e-05, 6.276399999999988e-05, 6.2889e-05, 6.237499999999993e-05, 6.23889999999995e-05, 6.29439999999988e-05, 6.243100000000168e-...</msg>
<status status="PASS" starttime="20201117 14:47:51.586" endtime="20201117 14:47:51.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.604" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:47:51.603" endtime="20201117 14:47:51.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.606" level="INFO">VALUE: [6.300000000000056e-05, 6.234700000000079e-05, 6.262500000000018e-05, 6.276399999999988e-05, 6.2889e-05, 6.237499999999993e-05, 6.23889999999995e-05, 6.29439999999988e-05, 6.243100000000168e-05, 6.232000000000112e-05, 6.27500000000003e-05, 6.280599999999859e-05, 6.262500000000018e-05, 6.233300000000122e-05, 6.2889e-05, 6.222200000000067e-05, 6.262500000000018e-05, 6.298600000000099e-05, 6.265299999999932e-05, 6.27080000000016e-05, 6.284700000000129e-05, 6.295799999999838e-05, 6.254199999999877e-05, 6.293099999999871e-05, 6.298600000000099e-05, 6.245900000000082e-05, 6.23889999999995e-05, 6.213900000000272e-05, 6.245899999999735e-05, 6.237499999999993e-05, 6.294500000000175e-05, 6.236100000000036e-05, 6.248599999999702e-05, 6.290299999999957e-05, 6.280499999999911e-05, 6.308399999999798e-05, 6.272200000000117e-05, 6.237499999999993e-05, 6.263899999999975e-05, 6.2889e-05, 6.22080000000011e-05, 6.217999999999849e-05, 6.242999999999874e-05, 6.29439999999988e-05, 6.265300000000279e-05, 6.2889e-05, 6.213899999999925e-05, 6.252800000000266e-05, 6.290299999999957e-05, 6.27219999999977e-05]</msg>
<status status="PASS" starttime="20201117 14:47:51.605" endtime="20201117 14:47:51.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.600" endtime="20201117 14:47:51.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.609" endtime="20201117 14:47:51.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:51.613" endtime="20201117 14:47:51.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.611" endtime="20201117 14:47:51.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.608" endtime="20201117 14:47:51.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.239" endtime="20201117 14:47:51.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.237" endtime="20201117 14:47:51.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.236" endtime="20201117 14:47:51.634"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.637" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.646" endtime="20201117 14:47:51.664"></status>
</kw>
<msg timestamp="20201117 14:47:51.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.644" endtime="20201117 14:47:51.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.666" endtime="20201117 14:47:51.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.668" endtime="20201117 14:47:51.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.641" endtime="20201117 14:47:51.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.639" endtime="20201117 14:47:51.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.678" endtime="20201117 14:47:51.965"></status>
</kw>
<msg timestamp="20201117 14:47:51.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022967931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023031583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.676" endtime="20201117 14:47:51.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022967931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023031583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.969" endtime="20201117 14:47:51.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.978" endtime="20201117 14:47:51.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.673" endtime="20201117 14:47:51.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.672" endtime="20201117 14:47:51.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.985" level="INFO">${RESULT} = [{'time': 0.023031583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.365200000000085e-05, 'source_diff': 6.365200000000085e-05}, {'time': 0.023101528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:51.981" endtime="20201117 14:47:51.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.000" level="INFO">${ACCURACY} = {'diff': [6.365200000000085e-05, 6.40699999999994e-05, 6.36950000000025e-05, 6.323599999999777e-05, 6.40699999999994e-05, 6.318100000000243e-05, 6.402700000000122e-05, 6.395799999999938e-05, 6.3264000...</msg>
<status status="PASS" starttime="20201117 14:47:51.986" endtime="20201117 14:47:52.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.005" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.004" endtime="20201117 14:47:52.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.007" level="INFO">VALUE: [6.365200000000085e-05, 6.40699999999994e-05, 6.36950000000025e-05, 6.323599999999777e-05, 6.40699999999994e-05, 6.318100000000243e-05, 6.402700000000122e-05, 6.395799999999938e-05, 6.326400000000038e-05, 6.384699999999882e-05, 6.315200000000035e-05, 6.334699999999832e-05, 6.329100000000004e-05, 6.358300000000247e-05, 6.406899999999993e-05, 6.413900000000125e-05, 6.336100000000136e-05, 6.387499999999796e-05, 6.380599999999959e-05, 6.337500000000093e-05, 6.326400000000038e-05, 6.405599999999984e-05, 6.331999999999866e-05, 6.387500000000143e-05, 6.315299999999982e-05, 6.319400000000253e-05, 6.365200000000085e-05, 6.370799999999913e-05, 6.367999999999999e-05, 6.32219999999982e-05, 6.33890000000005e-05, 6.336100000000136e-05, 6.367999999999999e-05, 6.377800000000045e-05, 6.337499999999746e-05, 6.358300000000247e-05, 6.323599999999777e-05, 6.401400000000113e-05, 6.323600000000124e-05, 6.35280000000002e-05, 6.394499999999928e-05, 6.35699999999989e-05, 6.408399999999898e-05, 6.33340000000017e-05, 6.348600000000149e-05, 6.382000000000262e-05, 6.370799999999913e-05, 6.395800000000285e-05, 6.367999999999999e-05, 6.380500000000011e-05]</msg>
<status status="PASS" starttime="20201117 14:47:52.006" endtime="20201117 14:47:52.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.001" endtime="20201117 14:47:52.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.010" endtime="20201117 14:47:52.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.014" endtime="20201117 14:47:52.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.012" endtime="20201117 14:47:52.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.009" endtime="20201117 14:47:52.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.637" endtime="20201117 14:47:52.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.635" endtime="20201117 14:47:52.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.635" endtime="20201117 14:47:52.035"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.038" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.046" endtime="20201117 14:47:52.066"></status>
</kw>
<msg timestamp="20201117 14:47:52.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.045" endtime="20201117 14:47:52.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.067" endtime="20201117 14:47:52.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.070" endtime="20201117 14:47:52.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.042" endtime="20201117 14:47:52.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.040" endtime="20201117 14:47:52.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.079" endtime="20201117 14:47:52.365"></status>
</kw>
<msg timestamp="20201117 14:47:52.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022886889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.077" endtime="20201117 14:47:52.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022886889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.369" endtime="20201117 14:47:52.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.378" endtime="20201117 14:47:52.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.075" endtime="20201117 14:47:52.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.073" endtime="20201117 14:47:52.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.385" level="INFO">${RESULT} = [{'time': 0.022951736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.484699999999982e-05, 'source_diff': 6.484699999999982e-05}, {'time': 0.023022736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:52.381" endtime="20201117 14:47:52.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.398" level="INFO">${ACCURACY} = {'diff': [6.484699999999982e-05, 6.512499999999921e-05, 6.42500000000018e-05, 6.431999999999966e-05, 6.479200000000102e-05, 6.462500000000218e-05, 6.509700000000007e-05, 6.420799999999963e-05, 6.42500...</msg>
<status status="PASS" starttime="20201117 14:47:52.386" endtime="20201117 14:47:52.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.403" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.402" endtime="20201117 14:47:52.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.406" level="INFO">VALUE: [6.484699999999982e-05, 6.512499999999921e-05, 6.42500000000018e-05, 6.431999999999966e-05, 6.479200000000102e-05, 6.462500000000218e-05, 6.509700000000007e-05, 6.420799999999963e-05, 6.42500000000018e-05, 6.486100000000286e-05, 6.423600000000224e-05, 6.419400000000006e-05, 6.512499999999921e-05, 6.472300000000264e-05, 6.47500000000023e-05, 6.437500000000193e-05, 6.445799999999988e-05, 6.437500000000193e-05, 6.451399999999816e-05, 6.487499999999896e-05, 6.419400000000006e-05, 6.481900000000068e-05, 6.493000000000124e-05, 6.511099999999964e-05, 6.494500000000028e-05, 6.449999999999859e-05, 6.424999999999834e-05, 6.423599999999877e-05, 6.501299999999918e-05, 6.418099999999996e-05, 6.444499999999978e-05, 6.415300000000082e-05, 6.498599999999952e-05, 6.45419999999973e-05, 6.474999999999884e-05, 6.493000000000124e-05, 6.462500000000218e-05, 6.451399999999816e-05, 6.455600000000034e-05, 6.45280000000012e-05, 6.424999999999834e-05, 6.495800000000038e-05, 6.481900000000068e-05, 6.462500000000218e-05, 6.45699999999999e-05, 6.43890000000015e-05, 6.431999999999966e-05, 6.479200000000102e-05, 6.469500000000003e-05, 6.416599999999745e-05]</msg>
<status status="PASS" starttime="20201117 14:47:52.404" endtime="20201117 14:47:52.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.399" endtime="20201117 14:47:52.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.409" endtime="20201117 14:47:52.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.413" endtime="20201117 14:47:52.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.411" endtime="20201117 14:47:52.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.408" endtime="20201117 14:47:52.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.038" endtime="20201117 14:47:52.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.037" endtime="20201117 14:47:52.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.036" endtime="20201117 14:47:52.434"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.436" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.445" endtime="20201117 14:47:52.464"></status>
</kw>
<msg timestamp="20201117 14:47:52.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.443" endtime="20201117 14:47:52.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.465" endtime="20201117 14:47:52.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.468" endtime="20201117 14:47:52.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.441" endtime="20201117 14:47:52.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.439" endtime="20201117 14:47:52.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.477" endtime="20201117 14:47:52.764"></status>
</kw>
<msg timestamp="20201117 14:47:52.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.475" endtime="20201117 14:47:52.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.769" endtime="20201117 14:47:52.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.777" endtime="20201117 14:47:52.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.473" endtime="20201117 14:47:52.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.471" endtime="20201117 14:47:52.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.784" level="INFO">${RESULT} = [{'time': 0.022539389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.615299999999935e-05, 'source_diff': 6.615299999999935e-05}, {'time': 0.022609375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:52.780" endtime="20201117 14:47:52.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.798" level="INFO">${ACCURACY} = {'diff': [6.615299999999935e-05, 6.52220000000002e-05, 6.570800000000113e-05, 6.551399999999916e-05, 6.536099999999989e-05, 6.594399999999834e-05, 6.55700000000009e-05, 6.594499999999781e-05, 6.574999...</msg>
<status status="PASS" starttime="20201117 14:47:52.785" endtime="20201117 14:47:52.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.802" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.801" endtime="20201117 14:47:52.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.805" level="INFO">VALUE: [6.615299999999935e-05, 6.52220000000002e-05, 6.570800000000113e-05, 6.551399999999916e-05, 6.536099999999989e-05, 6.594399999999834e-05, 6.55700000000009e-05, 6.594499999999781e-05, 6.574999999999984e-05, 6.574999999999984e-05, 6.537499999999946e-05, 6.579199999999855e-05, 6.576299999999993e-05, 6.54029999999986e-05, 6.542999999999827e-05, 6.595800000000138e-05, 6.606900000000193e-05, 6.549999999999959e-05, 6.530600000000109e-05, 6.533300000000075e-05, 6.600000000000009e-05, 6.519400000000106e-05, 6.549999999999959e-05, 6.538899999999903e-05, 6.613899999999978e-05, 6.551399999999916e-05, 6.548600000000002e-05, 6.519500000000053e-05, 6.574999999999984e-05, 6.566600000000242e-05, 6.556900000000143e-05, 6.54159999999987e-05, 6.547200000000045e-05, 6.593099999999824e-05, 6.581900000000168e-05, 6.551399999999916e-05, 6.526400000000238e-05, 6.593000000000224e-05, 6.54029999999986e-05, 6.54029999999986e-05, 6.530600000000109e-05, 6.561100000000014e-05, 6.532000000000066e-05, 6.524999999999934e-05, 6.565299999999885e-05, 6.580600000000159e-05, 6.586100000000039e-05, 6.600000000000009e-05, 6.583300000000125e-05, 6.612500000000021e-05]</msg>
<status status="PASS" starttime="20201117 14:47:52.803" endtime="20201117 14:47:52.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.799" endtime="20201117 14:47:52.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.809" endtime="20201117 14:47:52.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.812" endtime="20201117 14:47:52.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.811" endtime="20201117 14:47:52.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.807" endtime="20201117 14:47:52.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.437" endtime="20201117 14:47:52.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.435" endtime="20201117 14:47:52.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.434" endtime="20201117 14:47:52.833"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.836" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.844" endtime="20201117 14:47:52.864"></status>
</kw>
<msg timestamp="20201117 14:47:52.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.843" endtime="20201117 14:47:52.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.865" endtime="20201117 14:47:52.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.868" endtime="20201117 14:47:52.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.840" endtime="20201117 14:47:52.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.838" endtime="20201117 14:47:52.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.877" endtime="20201117 14:47:53.164"></status>
</kw>
<msg timestamp="20201117 14:47:53.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.876" endtime="20201117 14:47:53.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.168" endtime="20201117 14:47:53.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.177" endtime="20201117 14:47:53.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.873" endtime="20201117 14:47:53.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.871" endtime="20201117 14:47:53.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.184" level="INFO">${RESULT} = [{'time': 0.022618444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.683300000000225e-05, 'source_diff': 6.683300000000225e-05}, {'time': 0.022690444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:53.180" endtime="20201117 14:47:53.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.198" level="INFO">${ACCURACY} = {'diff': [6.683300000000225e-05, 6.687500000000096e-05, 6.638800000000056e-05, 6.663900000000028e-05, 6.651400000000016e-05, 6.701400000000066e-05, 6.692999999999977e-05, 6.656899999999896e-05, 6.6930...</msg>
<status status="PASS" starttime="20201117 14:47:53.185" endtime="20201117 14:47:53.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.202" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.201" endtime="20201117 14:47:53.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.205" level="INFO">VALUE: [6.683300000000225e-05, 6.687500000000096e-05, 6.638800000000056e-05, 6.663900000000028e-05, 6.651400000000016e-05, 6.701400000000066e-05, 6.692999999999977e-05, 6.656899999999896e-05, 6.693000000000324e-05, 6.701400000000066e-05, 6.679199999999955e-05, 6.644500000000178e-05, 6.618100000000196e-05, 6.662500000000071e-05, 6.636100000000089e-05, 6.698600000000152e-05, 6.613899999999978e-05, 6.687499999999749e-05, 6.679199999999955e-05, 6.700000000000109e-05, 6.651300000000068e-05, 6.636100000000089e-05, 6.644399999999884e-05, 6.638900000000003e-05, 6.620799999999816e-05, 6.652700000000025e-05, 6.700000000000109e-05, 6.681899999999921e-05, 6.694500000000228e-05, 6.695800000000238e-05, 6.668099999999899e-05, 6.669499999999856e-05, 6.62639999999999e-05, 6.644500000000178e-05, 6.679199999999955e-05, 6.673600000000127e-05, 6.694499999999881e-05, 6.662500000000071e-05, 6.67359999999978e-05, 6.634700000000132e-05, 6.659700000000157e-05, 6.691699999999967e-05, 6.619400000000206e-05, 6.69030000000001e-05, 6.667999999999952e-05, 6.652799999999973e-05, 6.627799999999948e-05, 6.69030000000001e-05, 6.69030000000001e-05, 6.715299999999688e-05]</msg>
<status status="PASS" starttime="20201117 14:47:53.204" endtime="20201117 14:47:53.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.199" endtime="20201117 14:47:53.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.208" endtime="20201117 14:47:53.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.212" endtime="20201117 14:47:53.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.210" endtime="20201117 14:47:53.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.206" endtime="20201117 14:47:53.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.836" endtime="20201117 14:47:53.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.835" endtime="20201117 14:47:53.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.834" endtime="20201117 14:47:53.233"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.235" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.244" endtime="20201117 14:47:53.263"></status>
</kw>
<msg timestamp="20201117 14:47:53.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.242" endtime="20201117 14:47:53.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.264" endtime="20201117 14:47:53.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.267" endtime="20201117 14:47:53.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.240" endtime="20201117 14:47:53.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.237" endtime="20201117 14:47:53.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.276" endtime="20201117 14:47:53.564"></status>
</kw>
<msg timestamp="20201117 14:47:53.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.275" endtime="20201117 14:47:53.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.568" endtime="20201117 14:47:53.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.577" endtime="20201117 14:47:53.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.272" endtime="20201117 14:47:53.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.270" endtime="20201117 14:47:53.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.584" level="INFO">${RESULT} = [{'time': 0.022707375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.74169999999967e-05, 'source_diff': 6.74169999999967e-05}, {'time': 0.022778361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:53.580" endtime="20201117 14:47:53.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.599" level="INFO">${ACCURACY} = {'diff': [6.74169999999967e-05, 6.719399999999959e-05, 6.798599999999905e-05, 6.712500000000121e-05, 6.784699999999935e-05, 6.795899999999938e-05, 6.738900000000103e-05, 6.787500000000196e-05, 6.75140...</msg>
<status status="PASS" starttime="20201117 14:47:53.585" endtime="20201117 14:47:53.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.604" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.603" endtime="20201117 14:47:53.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.606" level="INFO">VALUE: [6.74169999999967e-05, 6.719399999999959e-05, 6.798599999999905e-05, 6.712500000000121e-05, 6.784699999999935e-05, 6.795899999999938e-05, 6.738900000000103e-05, 6.787500000000196e-05, 6.751400000000116e-05, 6.731999999999919e-05, 6.769500000000303e-05, 6.808300000000003e-05, 6.738800000000156e-05, 6.815199999999841e-05, 6.780600000000012e-05, 6.713800000000131e-05, 6.787500000000196e-05, 6.729200000000005e-05, 6.780500000000064e-05, 6.72640000000009e-05, 6.787499999999849e-05, 6.790299999999763e-05, 6.720799999999916e-05, 6.723600000000177e-05, 6.777800000000098e-05, 6.737499999999799e-05, 6.780600000000012e-05, 6.748599999999855e-05, 6.769499999999956e-05, 6.797299999999895e-05, 6.713900000000078e-05, 6.801399999999819e-05, 6.738799999999809e-05, 6.72359999999983e-05, 6.801399999999819e-05, 6.775000000000184e-05, 6.738900000000103e-05, 6.747200000000245e-05, 6.802799999999776e-05, 6.731899999999971e-05, 6.813900000000178e-05, 6.736099999999842e-05, 6.732000000000266e-05, 6.72359999999983e-05, 6.770899999999913e-05, 6.755599999999987e-05, 6.744499999999931e-05, 6.794499999999981e-05, 6.80420000000008e-05, 6.723600000000177e-05]</msg>
<status status="PASS" starttime="20201117 14:47:53.605" endtime="20201117 14:47:53.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.600" endtime="20201117 14:47:53.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.610" endtime="20201117 14:47:53.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.613" endtime="20201117 14:47:53.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.611" endtime="20201117 14:47:53.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.608" endtime="20201117 14:47:53.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.236" endtime="20201117 14:47:53.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.234" endtime="20201117 14:47:53.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.233" endtime="20201117 14:47:53.634"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.637" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.645" endtime="20201117 14:47:53.664"></status>
</kw>
<msg timestamp="20201117 14:47:53.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.644" endtime="20201117 14:47:53.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.666" endtime="20201117 14:47:53.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.668" endtime="20201117 14:47:53.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.641" endtime="20201117 14:47:53.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.639" endtime="20201117 14:47:53.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.678" endtime="20201117 14:47:53.965"></status>
</kw>
<msg timestamp="20201117 14:47:53.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.676" endtime="20201117 14:47:53.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.969" endtime="20201117 14:47:53.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.977" endtime="20201117 14:47:53.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.673" endtime="20201117 14:47:53.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.672" endtime="20201117 14:47:53.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.984" level="INFO">${RESULT} = [{'time': 0.022610125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.861099999999967e-05, 'source_diff': 6.861099999999967e-05}, {'time': 0.022683069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:53.981" endtime="20201117 14:47:53.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.998" level="INFO">${ACCURACY} = {'diff': [6.861099999999967e-05, 6.847199999999998e-05, 6.819399999999712e-05, 6.905499999999842e-05, 6.908299999999756e-05, 6.825000000000234e-05, 6.82640000000019e-05, 6.851399999999869e-05, 6.86529...</msg>
<status status="PASS" starttime="20201117 14:47:53.985" endtime="20201117 14:47:53.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.003" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.002" endtime="20201117 14:47:54.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.005" level="INFO">VALUE: [6.861099999999967e-05, 6.847199999999998e-05, 6.819399999999712e-05, 6.905499999999842e-05, 6.908299999999756e-05, 6.825000000000234e-05, 6.82640000000019e-05, 6.851399999999869e-05, 6.865299999999838e-05, 6.832000000000019e-05, 6.838899999999856e-05, 6.895899999999691e-05, 6.824999999999887e-05, 6.882000000000069e-05, 6.855600000000087e-05, 6.899999999999962e-05, 6.837500000000246e-05, 6.908300000000103e-05, 6.887500000000296e-05, 6.863799999999934e-05, 6.820800000000016e-05, 6.844400000000084e-05, 6.85970000000001e-05, 6.815300000000135e-05, 6.886099999999992e-05, 6.826399999999844e-05, 6.818000000000102e-05, 6.844400000000084e-05, 6.900000000000309e-05, 6.884700000000035e-05, 6.876399999999894e-05, 6.869500000000056e-05, 6.905600000000137e-05, 6.883299999999731e-05, 6.876399999999894e-05, 6.881900000000121e-05, 6.893100000000124e-05, 6.881900000000121e-05, 6.893000000000177e-05, 6.886099999999992e-05, 6.87909999999986e-05, 6.818000000000102e-05, 6.870800000000066e-05, 6.836099999999942e-05, 6.84299999999978e-05, 6.834699999999985e-05, 6.818099999999702e-05, 6.88619999999994e-05, 6.8584e-05, 6.844500000000031e-05]</msg>
<status status="PASS" starttime="20201117 14:47:54.004" endtime="20201117 14:47:54.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.999" endtime="20201117 14:47:54.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.009" endtime="20201117 14:47:54.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.012" endtime="20201117 14:47:54.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.010" endtime="20201117 14:47:54.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.007" endtime="20201117 14:47:54.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.637" endtime="20201117 14:47:54.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.635" endtime="20201117 14:47:54.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.635" endtime="20201117 14:47:54.033"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.036" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.044" endtime="20201117 14:47:54.063"></status>
</kw>
<msg timestamp="20201117 14:47:54.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.043" endtime="20201117 14:47:54.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.065" endtime="20201117 14:47:54.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.068" endtime="20201117 14:47:54.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.040" endtime="20201117 14:47:54.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.038" endtime="20201117 14:47:54.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.077" endtime="20201117 14:47:54.364"></status>
</kw>
<msg timestamp="20201117 14:47:54.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.076" endtime="20201117 14:47:54.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.368" endtime="20201117 14:47:54.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.378" endtime="20201117 14:47:54.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.073" endtime="20201117 14:47:54.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.071" endtime="20201117 14:47:54.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.385" level="INFO">${RESULT} = [{'time': 0.022568833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.984700000000135e-05, 'source_diff': 6.984700000000135e-05}, {'time': 0.022641778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:54.381" endtime="20201117 14:47:54.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.398" level="INFO">${ACCURACY} = {'diff': [6.984700000000135e-05, 6.968100000000199e-05, 6.941599999999923e-05, 6.962500000000024e-05, 6.913899999999931e-05, 6.950000000000012e-05, 6.924999999999987e-05, 6.933300000000128e-05, 7.0139...</msg>
<status status="PASS" starttime="20201117 14:47:54.386" endtime="20201117 14:47:54.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.403" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.402" endtime="20201117 14:47:54.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.406" level="INFO">VALUE: [6.984700000000135e-05, 6.968100000000199e-05, 6.941599999999923e-05, 6.962500000000024e-05, 6.913899999999931e-05, 6.950000000000012e-05, 6.924999999999987e-05, 6.933300000000128e-05, 7.013900000000031e-05, 6.961100000000067e-05, 7.005500000000289e-05, 6.976399999999994e-05, 6.931899999999824e-05, 7.01109999999977e-05, 6.987500000000049e-05, 6.956999999999797e-05, 6.976399999999994e-05, 6.980600000000212e-05, 6.933400000000076e-05, 6.961100000000067e-05, 6.945900000000088e-05, 6.977799999999951e-05, 6.997300000000095e-05, 6.913899999999931e-05, 6.912499999999974e-05, 6.990299999999963e-05, 6.916599999999898e-05, 6.943000000000227e-05, 7.001400000000019e-05, 6.938899999999956e-05, 6.912499999999974e-05, 6.969399999999862e-05, 6.988900000000006e-05, 6.968100000000199e-05, 6.963899999999981e-05, 6.988900000000006e-05, 6.961100000000067e-05, 6.977799999999951e-05, 6.936100000000042e-05, 6.958299999999806e-05, 6.933299999999781e-05, 6.987500000000049e-05, 7.008299999999856e-05, 6.937499999999999e-05, 6.962500000000024e-05, 7.002799999999976e-05, 7.005499999999942e-05, 6.955500000000239e-05, 6.95970000000011e-05, 6.938899999999956e-05]</msg>
<status status="PASS" starttime="20201117 14:47:54.404" endtime="20201117 14:47:54.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.399" endtime="20201117 14:47:54.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.409" endtime="20201117 14:47:54.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.413" endtime="20201117 14:47:54.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.411" endtime="20201117 14:47:54.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.408" endtime="20201117 14:47:54.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.036" endtime="20201117 14:47:54.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.034" endtime="20201117 14:47:54.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.034" endtime="20201117 14:47:54.434"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.437" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.446" endtime="20201117 14:47:54.466"></status>
</kw>
<msg timestamp="20201117 14:47:54.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.444" endtime="20201117 14:47:54.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.468" endtime="20201117 14:47:54.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.470" endtime="20201117 14:47:54.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.441" endtime="20201117 14:47:54.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.439" endtime="20201117 14:47:54.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.481" endtime="20201117 14:47:54.768"></status>
</kw>
<msg timestamp="20201117 14:47:54.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023030083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023100972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.479" endtime="20201117 14:47:54.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023030083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023100972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.772" endtime="20201117 14:47:54.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.781" endtime="20201117 14:47:54.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.476" endtime="20201117 14:47:54.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.474" endtime="20201117 14:47:54.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.788" level="INFO">${RESULT} = [{'time': 0.023100972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.088900000000106e-05, 'source_diff': 7.088900000000106e-05}, {'time': 0.023176958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:54.784" endtime="20201117 14:47:54.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.802" level="INFO">${ACCURACY} = {'diff': [7.088900000000106e-05, 7.112500000000174e-05, 7.083299999999931e-05, 7.033299999999881e-05, 7.081900000000321e-05, 7.045799999999894e-05, 7.062500000000124e-05, 7.013900000000031e-05, 7.0445...</msg>
<status status="PASS" starttime="20201117 14:47:54.789" endtime="20201117 14:47:54.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.807" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.805" endtime="20201117 14:47:54.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.809" level="INFO">VALUE: [7.088900000000106e-05, 7.112500000000174e-05, 7.083299999999931e-05, 7.033299999999881e-05, 7.081900000000321e-05, 7.045799999999894e-05, 7.062500000000124e-05, 7.013900000000031e-05, 7.044500000000231e-05, 7.030599999999915e-05, 7.033399999999829e-05, 7.05689999999995e-05, 7.038900000000056e-05, 7.093099999999977e-05, 7.062499999999777e-05, 7.05559999999994e-05, 7.031899999999924e-05, 7.08620000000014e-05, 7.013900000000031e-05, 7.023599999999783e-05, 7.036099999999795e-05, 7.098599999999858e-05, 7.105500000000042e-05, 7.025000000000087e-05, 7.063900000000081e-05, 7.084700000000235e-05, 7.050000000000112e-05, 7.068100000000299e-05, 7.081999999999922e-05, 7.070899999999866e-05, 7.09170000000002e-05, 7.02230000000012e-05, 7.050000000000112e-05, 7.093099999999977e-05, 7.075000000000137e-05, 7.090200000000116e-05, 7.054100000000035e-05, 7.094399999999987e-05, 7.083299999999931e-05, 7.05689999999995e-05, 7.031899999999924e-05, 7.1069e-05, 7.052800000000026e-05, 7.06109999999982e-05, 7.109699999999913e-05, 7.05559999999994e-05, 7.083399999999879e-05, 7.095900000000238e-05, 7.016699999999945e-05, 7.038899999999709e-05]</msg>
<status status="PASS" starttime="20201117 14:47:54.808" endtime="20201117 14:47:54.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.803" endtime="20201117 14:47:54.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.812" endtime="20201117 14:47:54.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.815" endtime="20201117 14:47:54.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.814" endtime="20201117 14:47:54.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.810" endtime="20201117 14:47:54.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.437" endtime="20201117 14:47:54.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.435" endtime="20201117 14:47:54.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.435" endtime="20201117 14:47:54.837"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.839" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.848" endtime="20201117 14:47:54.866"></status>
</kw>
<msg timestamp="20201117 14:47:54.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.846" endtime="20201117 14:47:54.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.868" endtime="20201117 14:47:54.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.870" endtime="20201117 14:47:54.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.844" endtime="20201117 14:47:54.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.841" endtime="20201117 14:47:54.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.879" endtime="20201117 14:47:55.179"></status>
</kw>
<msg timestamp="20201117 14:47:55.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022524639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.878" endtime="20201117 14:47:55.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022524639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.183" endtime="20201117 14:47:55.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.191" endtime="20201117 14:47:55.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.875" endtime="20201117 14:47:55.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.873" endtime="20201117 14:47:55.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.199" level="INFO">${RESULT} = [{'time': 0.022524639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.180600000000065e-05, 'source_diff': 7.180600000000065e-05}, {'time': 0.022601653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:55.195" endtime="20201117 14:47:55.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.256" level="INFO">${ACCURACY} = {'diff': [7.180600000000065e-05, 7.12499999999984e-05, 7.17499999999989e-05, 7.141699999999723e-05, 7.119499999999959e-05, 7.195899999999991e-05, 7.198599999999958e-05, 7.19439999999974e-05, 7.1583000...</msg>
<status status="PASS" starttime="20201117 14:47:55.200" endtime="20201117 14:47:55.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.261" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.260" endtime="20201117 14:47:55.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.263" level="INFO">VALUE: [7.180600000000065e-05, 7.12499999999984e-05, 7.17499999999989e-05, 7.141699999999723e-05, 7.119499999999959e-05, 7.195899999999991e-05, 7.198599999999958e-05, 7.19439999999974e-05, 7.158300000000006e-05, 7.162500000000224e-05, 7.150000000000212e-05, 7.140299999999766e-05, 7.149999999999865e-05, 7.14300000000008e-05, 7.148599999999908e-05, 7.188799999999912e-05, 7.143100000000027e-05, 7.188900000000206e-05, 7.133299999999981e-05, 7.119499999999959e-05, 7.119499999999959e-05, 7.138900000000156e-05, 7.194500000000034e-05, 7.131999999999972e-05, 7.120800000000316e-05, 7.201299999999924e-05, 7.116599999999751e-05, 7.122200000000273e-05, 7.113899999999784e-05, 7.119400000000012e-05, 7.187499999999902e-05, 7.163899999999834e-05, 7.126399999999797e-05, 7.145799999999994e-05, 7.140300000000113e-05, 7.12499999999984e-05, 7.194500000000034e-05, 7.116700000000045e-05, 7.140199999999819e-05, 7.137500000000199e-05, 7.198599999999958e-05, 7.159699999999963e-05, 7.16109999999992e-05, 7.147199999999951e-05, 7.143100000000027e-05, 7.186099999999945e-05, 7.15690000000005e-05, 7.151400000000169e-05, 7.213900000000231e-05, 7.170800000000019e-05]</msg>
<status status="PASS" starttime="20201117 14:47:55.262" endtime="20201117 14:47:55.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.257" endtime="20201117 14:47:55.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.266" endtime="20201117 14:47:55.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.270" endtime="20201117 14:47:55.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.268" endtime="20201117 14:47:55.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.265" endtime="20201117 14:47:55.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.840" endtime="20201117 14:47:55.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.838" endtime="20201117 14:47:55.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.837" endtime="20201117 14:47:55.291"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.293" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.301" endtime="20201117 14:47:55.322"></status>
</kw>
<msg timestamp="20201117 14:47:55.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.300" endtime="20201117 14:47:55.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.323" endtime="20201117 14:47:55.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.326" endtime="20201117 14:47:55.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.297" endtime="20201117 14:47:55.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.295" endtime="20201117 14:47:55.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.335" endtime="20201117 14:47:55.620"></status>
</kw>
<msg timestamp="20201117 14:47:55.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022846181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.333" endtime="20201117 14:47:55.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022846181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.625" endtime="20201117 14:47:55.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.633" endtime="20201117 14:47:55.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.330" endtime="20201117 14:47:55.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.329" endtime="20201117 14:47:55.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.639" level="INFO">${RESULT} = [{'time': 0.022846181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.32370000000003e-05, 'source_diff': 7.32370000000003e-05}, {'time': 0.022925167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:55.636" endtime="20201117 14:47:55.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.653" level="INFO">${ACCURACY} = {'diff': [7.32370000000003e-05, 7.301399999999972e-05, 7.29309999999983e-05, 7.304099999999938e-05, 7.251399999999922e-05, 7.266700000000195e-05, 7.220800000000069e-05, 7.287500000000002e-05, 7.254100...</msg>
<status status="PASS" starttime="20201117 14:47:55.640" endtime="20201117 14:47:55.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.658" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.656" endtime="20201117 14:47:55.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.661" level="INFO">VALUE: [7.32370000000003e-05, 7.301399999999972e-05, 7.29309999999983e-05, 7.304099999999938e-05, 7.251399999999922e-05, 7.266700000000195e-05, 7.220800000000069e-05, 7.287500000000002e-05, 7.254100000000235e-05, 7.245800000000094e-05, 7.288899999999959e-05, 7.286100000000045e-05, 7.305499999999895e-05, 7.277799999999904e-05, 7.304199999999886e-05, 7.238899999999909e-05, 7.307000000000147e-05, 7.262499999999977e-05, 7.225000000000287e-05, 7.249999999999965e-05, 7.254200000000183e-05, 7.263899999999934e-05, 7.212500000000274e-05, 7.287500000000002e-05, 7.247200000000051e-05, 7.315299999999941e-05, 7.212499999999927e-05, 7.31110000000007e-05, 7.241599999999876e-05, 7.308300000000156e-05, 7.297199999999754e-05, 7.251399999999922e-05, 7.22499999999994e-05, 7.249999999999965e-05, 7.245900000000041e-05, 7.270799999999772e-05, 7.273600000000033e-05, 7.244500000000084e-05, 7.297300000000048e-05, 7.276399999999947e-05, 7.219500000000059e-05, 7.301299999999677e-05, 7.27369999999998e-05, 7.222200000000026e-05, 7.215299999999841e-05, 7.312500000000027e-05, 7.217999999999808e-05, 7.308300000000156e-05, 7.249999999999965e-05, 7.231899999999777e-05]</msg>
<status status="PASS" starttime="20201117 14:47:55.659" endtime="20201117 14:47:55.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.654" endtime="20201117 14:47:55.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.664" endtime="20201117 14:47:55.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.667" endtime="20201117 14:47:55.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.666" endtime="20201117 14:47:55.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.662" endtime="20201117 14:47:55.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.294" endtime="20201117 14:47:55.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.292" endtime="20201117 14:47:55.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.291" endtime="20201117 14:47:55.688"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.691" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.700" endtime="20201117 14:47:55.720"></status>
</kw>
<msg timestamp="20201117 14:47:55.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.698" endtime="20201117 14:47:55.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.721" endtime="20201117 14:47:55.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.724" endtime="20201117 14:47:55.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.696" endtime="20201117 14:47:55.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.693" endtime="20201117 14:47:55.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.733" endtime="20201117 14:47:56.018"></status>
</kw>
<msg timestamp="20201117 14:47:56.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.731" endtime="20201117 14:47:56.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.023" endtime="20201117 14:47:56.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.031" endtime="20201117 14:47:56.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.729" endtime="20201117 14:47:56.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.727" endtime="20201117 14:47:56.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.037" level="INFO">${RESULT} = [{'time': 0.023082167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.313899999999984e-05, 'source_diff': 7.313899999999984e-05}, {'time': 0.023160167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:56.034" endtime="20201117 14:47:56.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.051" level="INFO">${ACCURACY} = {'diff': [7.313899999999984e-05, 7.3069999999998e-05, 7.345800000000194e-05, 7.344400000000237e-05, 7.383299999999884e-05, 7.330600000000215e-05, 7.377800000000004e-05, 7.368100000000252e-05, 7.341599...</msg>
<status status="PASS" starttime="20201117 14:47:56.039" endtime="20201117 14:47:56.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.056" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.055" endtime="20201117 14:47:56.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.058" level="INFO">VALUE: [7.313899999999984e-05, 7.3069999999998e-05, 7.345800000000194e-05, 7.344400000000237e-05, 7.383299999999884e-05, 7.330600000000215e-05, 7.377800000000004e-05, 7.368100000000252e-05, 7.341599999999976e-05, 7.39439999999994e-05, 7.409700000000213e-05, 7.402800000000029e-05, 7.362500000000077e-05, 7.408399999999857e-05, 7.326399999999997e-05, 7.411099999999823e-05, 7.394400000000287e-05, 7.405599999999943e-05, 7.381999999999875e-05, 7.402700000000081e-05, 7.39029999999967e-05, 7.362500000000077e-05, 7.347200000000151e-05, 7.406899999999952e-05, 7.381899999999927e-05, 7.358300000000206e-05, 7.4069000000003e-05, 7.323600000000083e-05, 7.359699999999816e-05, 7.372199999999829e-05, 7.398600000000158e-05, 7.382000000000222e-05, 7.347200000000151e-05, 7.368099999999905e-05, 7.349999999999718e-05, 7.340299999999966e-05, 7.355499999999945e-05, 7.401400000000072e-05, 7.383300000000231e-05, 7.340200000000019e-05, 7.406899999999952e-05, 7.402800000000029e-05, 7.362500000000077e-05, 7.334700000000138e-05, 7.399999999999768e-05, 7.338900000000009e-05, 7.39309999999993e-05, 7.355500000000292e-05, 7.408400000000204e-05, 7.368099999999905e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.057" endtime="20201117 14:47:56.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.052" endtime="20201117 14:47:56.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.061" endtime="20201117 14:47:56.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.065" endtime="20201117 14:47:56.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.063" endtime="20201117 14:47:56.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.060" endtime="20201117 14:47:56.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.692" endtime="20201117 14:47:56.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.689" endtime="20201117 14:47:56.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.689" endtime="20201117 14:47:56.086"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.088" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.097" endtime="20201117 14:47:56.117"></status>
</kw>
<msg timestamp="20201117 14:47:56.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.096" endtime="20201117 14:47:56.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.119" endtime="20201117 14:47:56.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.122" endtime="20201117 14:47:56.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.092" endtime="20201117 14:47:56.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.090" endtime="20201117 14:47:56.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.130" endtime="20201117 14:47:56.416"></status>
</kw>
<msg timestamp="20201117 14:47:56.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022824903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022899389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.129" endtime="20201117 14:47:56.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022824903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022899389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.421" endtime="20201117 14:47:56.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.429" endtime="20201117 14:47:56.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.126" endtime="20201117 14:47:56.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.125" endtime="20201117 14:47:56.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.436" level="INFO">${RESULT} = [{'time': 0.022899389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.448599999999861e-05, 'source_diff': 7.448599999999861e-05}, {'time': 0.022976375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:56.433" endtime="20201117 14:47:56.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.449" level="INFO">${ACCURACY} = {'diff': [7.448599999999861e-05, 7.469400000000015e-05, 7.474999999999843e-05, 7.432000000000272e-05, 7.497199999999954e-05, 7.434699999999891e-05, 7.444499999999937e-05, 7.462500000000177e-05, 7.4583...</msg>
<status status="PASS" starttime="20201117 14:47:56.437" endtime="20201117 14:47:56.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.454" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.453" endtime="20201117 14:47:56.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.456" level="INFO">VALUE: [7.448599999999861e-05, 7.469400000000015e-05, 7.474999999999843e-05, 7.432000000000272e-05, 7.497199999999954e-05, 7.434699999999891e-05, 7.444499999999937e-05, 7.462500000000177e-05, 7.458399999999907e-05, 7.413899999999737e-05, 7.42630000000015e-05, 7.505500000000095e-05, 7.50830000000001e-05, 7.461099999999873e-05, 7.501400000000172e-05, 7.44439999999999e-05, 7.470799999999972e-05, 7.423599999999836e-05, 7.495899999999944e-05, 7.481900000000027e-05, 7.438900000000109e-05, 7.491700000000073e-05, 7.443100000000327e-05, 7.508399999999957e-05, 7.505600000000043e-05, 7.488899999999812e-05, 7.444499999999937e-05, 7.438799999999815e-05, 7.48050000000007e-05, 7.481900000000027e-05, 7.499999999999868e-05, 7.463900000000134e-05, 7.495799999999997e-05, 7.495799999999997e-05, 7.413900000000084e-05, 7.474999999999843e-05, 7.436099999999848e-05, 7.507e-05, 7.44309999999998e-05, 7.427800000000054e-05, 7.498599999999911e-05, 7.445799999999947e-05, 7.44309999999998e-05, 7.481999999999975e-05, 7.479200000000061e-05, 7.473599999999886e-05, 7.504100000000138e-05, 7.486099999999898e-05, 7.469400000000015e-05, 7.448600000000208e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.455" endtime="20201117 14:47:56.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.450" endtime="20201117 14:47:56.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.459" endtime="20201117 14:47:56.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.463" endtime="20201117 14:47:56.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.461" endtime="20201117 14:47:56.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.458" endtime="20201117 14:47:56.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.089" endtime="20201117 14:47:56.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.087" endtime="20201117 14:47:56.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.086" endtime="20201117 14:47:56.484"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.486" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.495" endtime="20201117 14:47:56.515"></status>
</kw>
<msg timestamp="20201117 14:47:56.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.493" endtime="20201117 14:47:56.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.517" endtime="20201117 14:47:56.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.519" endtime="20201117 14:47:56.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.490" endtime="20201117 14:47:56.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.488" endtime="20201117 14:47:56.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.529" endtime="20201117 14:47:56.813"></status>
</kw>
<msg timestamp="20201117 14:47:56.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022833014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022909028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.527" endtime="20201117 14:47:56.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022833014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022909028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.817" endtime="20201117 14:47:56.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.825" endtime="20201117 14:47:56.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.524" endtime="20201117 14:47:56.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.522" endtime="20201117 14:47:56.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.831" level="INFO">${RESULT} = [{'time': 0.022909028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.601400000000272e-05, 'source_diff': 7.601400000000272e-05}, {'time': 0.022988069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:56.828" endtime="20201117 14:47:56.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.846" level="INFO">${ACCURACY} = {'diff': [7.601400000000272e-05, 7.586099999999998e-05, 7.576400000000247e-05, 7.523599999999936e-05, 7.559700000000016e-05, 7.561199999999921e-05, 7.569399999999768e-05, 7.52500000000024e-05, 7.58609...</msg>
<status status="PASS" starttime="20201117 14:47:56.833" endtime="20201117 14:47:56.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.850" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.849" endtime="20201117 14:47:56.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.853" level="INFO">VALUE: [7.601400000000272e-05, 7.586099999999998e-05, 7.576400000000247e-05, 7.523599999999936e-05, 7.559700000000016e-05, 7.561199999999921e-05, 7.569399999999768e-05, 7.52500000000024e-05, 7.586099999999998e-05, 7.608299999999762e-05, 7.605499999999848e-05, 7.595800000000097e-05, 7.531900000000077e-05, 7.606999999999753e-05, 7.552800000000179e-05, 7.577800000000204e-05, 7.597200000000054e-05, 7.6070000000001e-05, 7.520899999999969e-05, 7.549999999999918e-05, 7.540199999999872e-05, 7.569400000000115e-05, 7.587499999999955e-05, 7.588899999999912e-05, 7.5763999999999e-05, 7.615299999999894e-05, 7.563899999999887e-05, 7.606899999999805e-05, 7.561099999999973e-05, 7.565299999999844e-05, 7.595900000000044e-05, 7.532000000000025e-05, 7.577800000000204e-05, 7.519500000000012e-05, 7.55700000000005e-05, 7.555599999999746e-05, 7.540200000000219e-05, 7.615199999999947e-05, 7.606899999999805e-05, 7.588899999999912e-05, 7.569400000000115e-05, 7.554099999999841e-05, 7.60830000000011e-05, 7.56249999999993e-05, 7.606899999999805e-05, 7.594399999999793e-05, 7.541699999999776e-05, 7.613899999999937e-05, 7.580600000000118e-05, 7.606900000000152e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.851" endtime="20201117 14:47:56.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.847" endtime="20201117 14:47:56.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.856" endtime="20201117 14:47:56.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.859" endtime="20201117 14:47:56.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.858" endtime="20201117 14:47:56.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.854" endtime="20201117 14:47:56.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.487" endtime="20201117 14:47:56.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.485" endtime="20201117 14:47:56.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.484" endtime="20201117 14:47:56.880"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.883" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.891" endtime="20201117 14:47:56.910"></status>
</kw>
<msg timestamp="20201117 14:47:56.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.889" endtime="20201117 14:47:56.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.912" endtime="20201117 14:47:56.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.915" endtime="20201117 14:47:56.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.887" endtime="20201117 14:47:56.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.885" endtime="20201117 14:47:56.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.924" endtime="20201117 14:47:57.208"></status>
</kw>
<msg timestamp="20201117 14:47:57.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022624097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.922" endtime="20201117 14:47:57.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022624097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.213" endtime="20201117 14:47:57.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.221" endtime="20201117 14:47:57.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.920" endtime="20201117 14:47:57.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.918" endtime="20201117 14:47:57.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.227" level="INFO">${RESULT} = [{'time': 0.022624097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.713900000000037e-05, 'source_diff': 7.713900000000037e-05}, {'time': 0.022705125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:57.224" endtime="20201117 14:47:57.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.241" level="INFO">${ACCURACY} = {'diff': [7.713900000000037e-05, 7.613899999999937e-05, 7.644399999999843e-05, 7.711099999999776e-05, 7.70969999999982e-05, 7.704199999999939e-05, 7.680600000000218e-05, 7.713900000000037e-05, 7.61950...</msg>
<status status="PASS" starttime="20201117 14:47:57.228" endtime="20201117 14:47:57.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.246" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.244" endtime="20201117 14:47:57.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.248" level="INFO">VALUE: [7.713900000000037e-05, 7.613899999999937e-05, 7.644399999999843e-05, 7.711099999999776e-05, 7.70969999999982e-05, 7.704199999999939e-05, 7.680600000000218e-05, 7.713900000000037e-05, 7.619500000000112e-05, 7.630599999999821e-05, 7.624999999999993e-05, 7.705499999999949e-05, 7.654099999999942e-05, 7.637500000000005e-05, 7.701400000000025e-05, 7.633299999999787e-05, 7.627799999999907e-05, 7.687500000000055e-05, 7.682000000000175e-05, 7.620800000000122e-05, 7.69029999999997e-05, 7.688900000000012e-05, 7.643099999999833e-05, 7.71250000000008e-05, 7.697300000000101e-05, 7.64029999999992e-05, 7.655499999999898e-05, 7.624999999999993e-05, 7.637500000000005e-05, 7.676300000000053e-05, 7.61249999999998e-05, 7.673600000000086e-05, 7.638899999999962e-05, 7.670800000000172e-05, 7.634700000000091e-05, 7.644399999999843e-05, 7.637500000000005e-05, 7.613899999999937e-05, 7.624999999999993e-05, 7.682000000000175e-05, 7.687500000000055e-05, 7.623600000000036e-05, 7.622200000000079e-05, 7.683400000000132e-05, 7.633299999999787e-05, 7.624999999999993e-05, 7.655499999999898e-05, 7.640300000000266e-05, 7.6764e-05, 7.649999999999671e-05]</msg>
<status status="PASS" starttime="20201117 14:47:57.247" endtime="20201117 14:47:57.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.242" endtime="20201117 14:47:57.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.251" endtime="20201117 14:47:57.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.254" endtime="20201117 14:47:57.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.253" endtime="20201117 14:47:57.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.249" endtime="20201117 14:47:57.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.883" endtime="20201117 14:47:57.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.882" endtime="20201117 14:47:57.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.881" endtime="20201117 14:47:57.275"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.278" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.286" endtime="20201117 14:47:57.306"></status>
</kw>
<msg timestamp="20201117 14:47:57.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.285" endtime="20201117 14:47:57.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.307" endtime="20201117 14:47:57.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.310" endtime="20201117 14:47:57.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.282" endtime="20201117 14:47:57.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.280" endtime="20201117 14:47:57.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.319" endtime="20201117 14:47:57.604"></status>
</kw>
<msg timestamp="20201117 14:47:57.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022174097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.317" endtime="20201117 14:47:57.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022174097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.608" endtime="20201117 14:47:57.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.616" endtime="20201117 14:47:57.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.315" endtime="20201117 14:47:57.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.313" endtime="20201117 14:47:57.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.623" level="INFO">${RESULT} = [{'time': 0.022251667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.756999999999903e-05, 'source_diff': 7.756999999999903e-05}, {'time': 0.022332736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:57.620" endtime="20201117 14:47:57.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.636" level="INFO">${ACCURACY} = {'diff': [7.756999999999903e-05, 7.811099999999876e-05, 7.779200000000014e-05, 7.77770000000011e-05, 7.751400000000075e-05, 7.800000000000168e-05, 7.744500000000237e-05, 7.755499999999999e-05, 7.74999...</msg>
<status status="PASS" starttime="20201117 14:47:57.624" endtime="20201117 14:47:57.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.641" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.640" endtime="20201117 14:47:57.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.643" level="INFO">VALUE: [7.756999999999903e-05, 7.811099999999876e-05, 7.779200000000014e-05, 7.77770000000011e-05, 7.751400000000075e-05, 7.800000000000168e-05, 7.744500000000237e-05, 7.755499999999999e-05, 7.749999999999771e-05, 7.7764000000001e-05, 7.800000000000168e-05, 7.719399999999918e-05, 7.777800000000057e-05, 7.770899999999872e-05, 7.81389999999979e-05, 7.779200000000014e-05, 7.733400000000182e-05, 7.75839999999986e-05, 7.782000000000275e-05, 7.737500000000105e-05, 7.811099999999876e-05, 7.770799999999925e-05, 7.812499999999833e-05, 7.81389999999979e-05, 7.787500000000155e-05, 7.815299999999747e-05, 7.752800000000032e-05, 7.762499999999783e-05, 7.774999999999796e-05, 7.743099999999933e-05, 7.736099999999801e-05, 7.75839999999986e-05, 7.811100000000223e-05, 7.750000000000118e-05, 7.775000000000143e-05, 7.805599999999996e-05, 7.743099999999933e-05, 7.71250000000008e-05, 7.766600000000054e-05, 7.775000000000143e-05, 7.748600000000161e-05, 7.745900000000194e-05, 7.793000000000036e-05, 7.794399999999993e-05, 7.724999999999746e-05, 7.779200000000014e-05, 7.720900000000169e-05, 7.738900000000062e-05, 7.732000000000225e-05, 7.815299999999747e-05]</msg>
<status status="PASS" starttime="20201117 14:47:57.642" endtime="20201117 14:47:57.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.637" endtime="20201117 14:47:57.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.646" endtime="20201117 14:47:57.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.650" endtime="20201117 14:47:57.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.648" endtime="20201117 14:47:57.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.645" endtime="20201117 14:47:57.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.278" endtime="20201117 14:47:57.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.277" endtime="20201117 14:47:57.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.276" endtime="20201117 14:47:57.671"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.674" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.682" endtime="20201117 14:47:57.702"></status>
</kw>
<msg timestamp="20201117 14:47:57.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.680" endtime="20201117 14:47:57.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.704" endtime="20201117 14:47:57.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.706" endtime="20201117 14:47:57.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.678" endtime="20201117 14:47:57.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.676" endtime="20201117 14:47:57.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.715" endtime="20201117 14:47:58.002"></status>
</kw>
<msg timestamp="20201117 14:47:58.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023201458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023280375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.714" endtime="20201117 14:47:58.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023201458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023280375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.006" endtime="20201117 14:47:58.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.014" endtime="20201117 14:47:58.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.711" endtime="20201117 14:47:58.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.709" endtime="20201117 14:47:58.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.021" level="INFO">${RESULT} = [{'time': 0.023280375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.89169999999978e-05, 'source_diff': 7.89169999999978e-05}, {'time': 0.023361403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:58.017" endtime="20201117 14:47:58.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.034" level="INFO">${ACCURACY} = {'diff': [7.89169999999978e-05, 7.872199999999982e-05, 7.89450000000004e-05, 7.857000000000003e-05, 7.84030000000012e-05, 7.848699999999861e-05, 7.907000000000053e-05, 7.912499999999933e-05, 7.8708000...</msg>
<status status="PASS" starttime="20201117 14:47:58.022" endtime="20201117 14:47:58.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.038" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.037" endtime="20201117 14:47:58.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.041" level="INFO">VALUE: [7.89169999999978e-05, 7.872199999999982e-05, 7.89450000000004e-05, 7.857000000000003e-05, 7.84030000000012e-05, 7.848699999999861e-05, 7.907000000000053e-05, 7.912499999999933e-05, 7.870800000000025e-05, 7.818000000000061e-05, 7.894400000000093e-05, 7.856899999999709e-05, 7.899999999999921e-05, 7.888900000000212e-05, 7.900000000000268e-05, 7.834700000000291e-05, 7.833299999999987e-05, 7.847199999999957e-05, 7.852799999999785e-05, 7.824999999999846e-05, 7.886099999999951e-05, 7.90970000000002e-05, 7.837500000000205e-05, 7.831899999999684e-05, 7.852800000000132e-05, 7.816599999999757e-05, 7.897200000000007e-05, 7.833299999999987e-05, 7.830500000000074e-05, 7.8458e-05, 7.86250000000023e-05, 7.870800000000025e-05, 7.862499999999883e-05, 7.886099999999951e-05, 7.826399999999803e-05, 7.84449999999999e-05, 7.838900000000162e-05, 7.837499999999858e-05, 7.838899999999815e-05, 7.825000000000193e-05, 7.890199999999875e-05, 7.831999999999978e-05, 7.863799999999893e-05, 7.899999999999921e-05, 7.856900000000056e-05, 7.884699999999994e-05, 7.823600000000236e-05, 7.844400000000043e-05, 7.862499999999883e-05, 7.826399999999803e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.039" endtime="20201117 14:47:58.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.035" endtime="20201117 14:47:58.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.044" endtime="20201117 14:47:58.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.048" endtime="20201117 14:47:58.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.046" endtime="20201117 14:47:58.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.043" endtime="20201117 14:47:58.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.675" endtime="20201117 14:47:58.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.673" endtime="20201117 14:47:58.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.672" endtime="20201117 14:47:58.069"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.071" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.079" endtime="20201117 14:47:58.100"></status>
</kw>
<msg timestamp="20201117 14:47:58.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.078" endtime="20201117 14:47:58.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.102" endtime="20201117 14:47:58.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.104" endtime="20201117 14:47:58.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.075" endtime="20201117 14:47:58.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.073" endtime="20201117 14:47:58.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.113" endtime="20201117 14:47:58.397"></status>
</kw>
<msg timestamp="20201117 14:47:58.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.111" endtime="20201117 14:47:58.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.402" endtime="20201117 14:47:58.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.410" endtime="20201117 14:47:58.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.109" endtime="20201117 14:47:58.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.107" endtime="20201117 14:47:58.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.416" level="INFO">${RESULT} = [{'time': 0.022813153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.938899999999915e-05, 'source_diff': 7.938899999999915e-05}, {'time': 0.022895208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:58.413" endtime="20201117 14:47:58.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.431" level="INFO">${ACCURACY} = {'diff': [7.938899999999915e-05, 7.933300000000088e-05, 7.929199999999817e-05, 7.995799999999803e-05, 7.979199999999867e-05, 7.958300000000113e-05, 7.988899999999965e-05, 7.994399999999846e-05, 7.9249...</msg>
<status status="PASS" starttime="20201117 14:47:58.417" endtime="20201117 14:47:58.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.435" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.434" endtime="20201117 14:47:58.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.438" level="INFO">VALUE: [7.938899999999915e-05, 7.933300000000088e-05, 7.929199999999817e-05, 7.995799999999803e-05, 7.979199999999867e-05, 7.958300000000113e-05, 7.988899999999965e-05, 7.994399999999846e-05, 7.924999999999946e-05, 7.930499999999827e-05, 7.99580000000015e-05, 7.979199999999867e-05, 8.015299999999947e-05, 7.968100000000158e-05, 7.973600000000039e-05, 7.920900000000022e-05, 7.918100000000108e-05, 7.99589999999975e-05, 8.019399999999871e-05, 8.000000000000021e-05, 7.99589999999975e-05, 7.919400000000118e-05, 7.937499999999958e-05, 7.924999999999946e-05, 8.006900000000206e-05, 7.938899999999915e-05, 7.937499999999958e-05, 7.933300000000088e-05, 7.94169999999983e-05, 7.949999999999971e-05, 7.962499999999983e-05, 7.965299999999897e-05, 7.957000000000103e-05, 7.941700000000176e-05, 7.926399999999903e-05, 7.938899999999915e-05, 8.013800000000043e-05, 7.970800000000125e-05, 7.998600000000064e-05, 8.006899999999859e-05, 8.006899999999859e-05, 7.94030000000022e-05, 7.956899999999809e-05, 7.97909999999992e-05, 8.005500000000249e-05, 7.955600000000146e-05, 8.001399999999978e-05, 7.987500000000008e-05, 7.986100000000051e-05, 8.000000000000021e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.436" endtime="20201117 14:47:58.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.432" endtime="20201117 14:47:58.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.441" endtime="20201117 14:47:58.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.445" endtime="20201117 14:47:58.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.443" endtime="20201117 14:47:58.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.440" endtime="20201117 14:47:58.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.072" endtime="20201117 14:47:58.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.070" endtime="20201117 14:47:58.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.069" endtime="20201117 14:47:58.466"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.468" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.476" endtime="20201117 14:47:58.497"></status>
</kw>
<msg timestamp="20201117 14:47:58.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.475" endtime="20201117 14:47:58.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.498" endtime="20201117 14:47:58.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.501" endtime="20201117 14:47:58.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.472" endtime="20201117 14:47:58.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.470" endtime="20201117 14:47:58.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.509" endtime="20201117 14:47:58.795"></status>
</kw>
<msg timestamp="20201117 14:47:58.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022907917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022988625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.508" endtime="20201117 14:47:58.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022907917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022988625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.799" endtime="20201117 14:47:58.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.808" endtime="20201117 14:47:58.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.506" endtime="20201117 14:47:58.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.504" endtime="20201117 14:47:58.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.814" level="INFO">${RESULT} = [{'time': 0.022988625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.070799999999878e-05, 'source_diff': 8.070799999999878e-05}, {'time': 0.023072639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:58.811" endtime="20201117 14:47:58.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.828" level="INFO">${ACCURACY} = {'diff': [8.070799999999878e-05, 8.043099999999886e-05, 8.065299999999997e-05, 8.0458999999998e-05, 8.065299999999997e-05, 8.062499999999737e-05, 8.101400000000078e-05, 8.0458999999998e-05, 8.08199999...</msg>
<status status="PASS" starttime="20201117 14:47:58.815" endtime="20201117 14:47:58.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.832" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.831" endtime="20201117 14:47:58.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.835" level="INFO">VALUE: [8.070799999999878e-05, 8.043099999999886e-05, 8.065299999999997e-05, 8.0458999999998e-05, 8.065299999999997e-05, 8.062499999999737e-05, 8.101400000000078e-05, 8.0458999999998e-05, 8.081999999999881e-05, 8.019399999999871e-05, 8.081899999999934e-05, 8.026400000000003e-05, 8.073600000000139e-05, 8.044400000000243e-05, 8.037500000000058e-05, 8.052799999999985e-05, 8.020799999999828e-05, 8.050000000000071e-05, 8.084799999999795e-05, 8.066699999999954e-05, 8.03190000000023e-05, 8.105599999999949e-05, 8.068100000000258e-05, 8.030599999999874e-05, 8.033300000000188e-05, 8.095799999999903e-05, 8.051400000000028e-05, 8.10970000000022e-05, 8.105500000000002e-05, 8.073600000000139e-05, 8.066699999999954e-05, 8.045799999999853e-05, 8.033300000000188e-05, 8.062500000000083e-05, 8.094499999999893e-05, 8.10979999999982e-05, 8.016700000000251e-05, 8.033399999999788e-05, 8.027700000000013e-05, 8.018100000000208e-05, 8.076400000000053e-05, 8.098599999999817e-05, 8.058299999999866e-05, 8.008300000000163e-05, 8.048600000000114e-05, 8.029199999999917e-05, 8.037500000000058e-05, 8.073600000000139e-05, 8.073599999999792e-05, 8.061100000000126e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.833" endtime="20201117 14:47:58.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.829" endtime="20201117 14:47:58.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.838" endtime="20201117 14:47:58.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.841" endtime="20201117 14:47:58.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.840" endtime="20201117 14:47:58.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.836" endtime="20201117 14:47:58.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.469" endtime="20201117 14:47:58.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.467" endtime="20201117 14:47:58.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.466" endtime="20201117 14:47:58.862"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.864" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.873" endtime="20201117 14:47:58.892"></status>
</kw>
<msg timestamp="20201117 14:47:58.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.871" endtime="20201117 14:47:58.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.894" endtime="20201117 14:47:58.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.896" endtime="20201117 14:47:58.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.868" endtime="20201117 14:47:58.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.866" endtime="20201117 14:47:58.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.905" endtime="20201117 14:47:59.190"></status>
</kw>
<msg timestamp="20201117 14:47:59.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.904" endtime="20201117 14:47:59.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.195" endtime="20201117 14:47:59.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.203" endtime="20201117 14:47:59.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.901" endtime="20201117 14:47:59.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.899" endtime="20201117 14:47:59.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.210" level="INFO">${RESULT} = [{'time': 0.021971319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.191599999999785e-05, 'source_diff': 8.191599999999785e-05}, {'time': 0.022056278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:59.207" endtime="20201117 14:47:59.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.223" level="INFO">${ACCURACY} = {'diff': [8.191599999999785e-05, 8.122199999999885e-05, 8.190299999999776e-05, 8.120799999999928e-05, 8.133400000000235e-05, 8.21390000000019e-05, 8.170899999999925e-05, 8.212499999999887e-05, 8.14309...</msg>
<status status="PASS" starttime="20201117 14:47:59.211" endtime="20201117 14:47:59.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.228" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.227" endtime="20201117 14:47:59.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.230" level="INFO">VALUE: [8.191599999999785e-05, 8.122199999999885e-05, 8.190299999999776e-05, 8.120799999999928e-05, 8.133400000000235e-05, 8.21390000000019e-05, 8.170899999999925e-05, 8.212499999999887e-05, 8.143099999999986e-05, 8.188899999999819e-05, 8.144399999999996e-05, 8.13329999999994e-05, 8.19719999999996e-05, 8.205500000000102e-05, 8.18329999999999e-05, 8.138899999999769e-05, 8.138900000000115e-05, 8.174999999999849e-05, 8.200000000000221e-05, 8.183399999999938e-05, 8.21109999999993e-05, 8.162500000000183e-05, 8.201400000000178e-05, 8.123600000000189e-05, 8.19589999999995e-05, 8.115199999999753e-05, 8.174999999999849e-05, 8.130500000000027e-05, 8.162500000000183e-05, 8.174999999999849e-05, 8.122199999999885e-05, 8.163899999999794e-05, 8.191699999999733e-05, 8.13329999999994e-05, 8.143099999999986e-05, 8.168100000000011e-05, 8.140300000000072e-05, 8.124999999999799e-05, 8.140300000000072e-05, 8.205499999999755e-05, 8.130599999999974e-05, 8.137500000000158e-05, 8.169400000000021e-05, 8.131899999999984e-05, 8.124999999999799e-05, 8.145799999999953e-05, 8.138900000000115e-05, 8.12780000000006e-05, 8.144499999999943e-05, 8.147299999999857e-05]</msg>
<status status="PASS" starttime="20201117 14:47:59.229" endtime="20201117 14:47:59.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.224" endtime="20201117 14:47:59.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.233" endtime="20201117 14:47:59.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.236" endtime="20201117 14:47:59.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.235" endtime="20201117 14:47:59.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.232" endtime="20201117 14:47:59.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.865" endtime="20201117 14:47:59.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.863" endtime="20201117 14:47:59.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.863" endtime="20201117 14:47:59.258"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.260" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.268" endtime="20201117 14:47:59.287"></status>
</kw>
<msg timestamp="20201117 14:47:59.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.266" endtime="20201117 14:47:59.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.289" endtime="20201117 14:47:59.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.291" endtime="20201117 14:47:59.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.264" endtime="20201117 14:47:59.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.262" endtime="20201117 14:47:59.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.301" endtime="20201117 14:47:59.586"></status>
</kw>
<msg timestamp="20201117 14:47:59.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021838403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.299" endtime="20201117 14:47:59.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021838403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.590" endtime="20201117 14:47:59.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.598" endtime="20201117 14:47:59.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.296" endtime="20201117 14:47:59.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.294" endtime="20201117 14:47:59.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.605" level="INFO">${RESULT} = [{'time': 0.021838403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.24720000000001e-05, 'source_diff': 8.24720000000001e-05}, {'time': 0.021926444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:59.602" endtime="20201117 14:47:59.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.619" level="INFO">${ACCURACY} = {'diff': [8.24720000000001e-05, 8.222199999999985e-05, 8.232000000000031e-05, 8.262499999999937e-05, 8.252699999999891e-05, 8.309700000000073e-05, 8.302799999999888e-05, 8.23330000000004e-05, 8.292999...</msg>
<status status="PASS" starttime="20201117 14:47:59.606" endtime="20201117 14:47:59.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.623" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.622" endtime="20201117 14:47:59.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.625" level="INFO">VALUE: [8.24720000000001e-05, 8.222199999999985e-05, 8.232000000000031e-05, 8.262499999999937e-05, 8.252699999999891e-05, 8.309700000000073e-05, 8.302799999999888e-05, 8.23330000000004e-05, 8.292999999999842e-05, 8.269399999999774e-05, 8.31110000000003e-05, 8.277799999999863e-05, 8.220800000000028e-05, 8.241599999999835e-05, 8.263899999999894e-05, 8.220899999999975e-05, 8.220899999999975e-05, 8.20979999999992e-05, 8.262499999999937e-05, 8.280500000000177e-05, 8.216600000000157e-05, 8.212499999999887e-05, 8.295800000000103e-05, 8.226399999999856e-05, 8.213899999999844e-05, 8.22780000000016e-05, 8.287499999999962e-05, 8.226399999999856e-05, 8.249999999999924e-05, 8.272299999999982e-05, 8.283400000000038e-05, 8.272199999999688e-05, 8.254099999999848e-05, 8.268100000000111e-05, 8.223599999999942e-05, 8.29309999999979e-05, 8.294400000000146e-05, 8.211100000000277e-05, 8.274999999999949e-05, 8.294400000000146e-05, 8.299999999999974e-05, 8.308299999999769e-05, 8.218000000000114e-05, 8.238900000000215e-05, 8.257000000000056e-05, 8.308400000000063e-05, 8.313899999999944e-05, 8.293100000000136e-05, 8.209699999999973e-05, 8.287499999999962e-05]</msg>
<status status="PASS" starttime="20201117 14:47:59.624" endtime="20201117 14:47:59.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.619" endtime="20201117 14:47:59.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.628" endtime="20201117 14:47:59.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.632" endtime="20201117 14:47:59.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.630" endtime="20201117 14:47:59.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.627" endtime="20201117 14:47:59.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.260" endtime="20201117 14:47:59.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.259" endtime="20201117 14:47:59.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.258" endtime="20201117 14:47:59.653"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.655" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.663" endtime="20201117 14:47:59.684"></status>
</kw>
<msg timestamp="20201117 14:47:59.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.662" endtime="20201117 14:47:59.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.685" endtime="20201117 14:47:59.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.688" endtime="20201117 14:47:59.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.659" endtime="20201117 14:47:59.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.657" endtime="20201117 14:47:59.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.697" endtime="20201117 14:47:59.982"></status>
</kw>
<msg timestamp="20201117 14:47:59.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022884417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.696" endtime="20201117 14:47:59.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022884417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.986" endtime="20201117 14:47:59.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.995" endtime="20201117 14:47:59.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.693" endtime="20201117 14:47:59.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.691" endtime="20201117 14:47:59.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.001" level="INFO">${RESULT} = [{'time': 0.022884417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.323600000000042e-05, 'source_diff': 8.323600000000042e-05}, {'time': 0.022972431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:59.998" endtime="20201117 14:48:00.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.016" level="INFO">${ACCURACY} = {'diff': [8.323600000000042e-05, 8.332000000000131e-05, 8.406900000000259e-05, 8.394399999999899e-05, 8.351399999999981e-05, 8.376400000000006e-05, 8.352799999999938e-05, 8.381899999999887e-05, 8.3097...</msg>
<status status="PASS" starttime="20201117 14:48:00.002" endtime="20201117 14:48:00.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.021" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.020" endtime="20201117 14:48:00.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.024" level="INFO">VALUE: [8.323600000000042e-05, 8.332000000000131e-05, 8.406900000000259e-05, 8.394399999999899e-05, 8.351399999999981e-05, 8.376400000000006e-05, 8.352799999999938e-05, 8.381899999999887e-05, 8.309700000000073e-05, 8.368099999999865e-05, 8.373600000000092e-05, 8.372199999999788e-05, 8.318100000000161e-05, 8.407000000000206e-05, 8.41249999999974e-05, 8.324999999999999e-05, 8.361099999999733e-05, 8.419499999999872e-05, 8.326399999999956e-05, 8.363899999999994e-05, 8.401400000000031e-05, 8.344400000000196e-05, 8.39720000000016e-05, 8.324999999999999e-05, 8.376400000000006e-05, 8.338899999999969e-05, 8.319500000000118e-05, 8.326399999999956e-05, 8.319500000000118e-05, 8.362500000000037e-05, 8.39309999999989e-05, 8.34170000000023e-05, 8.402700000000041e-05, 8.381900000000234e-05, 8.408300000000216e-05, 8.408300000000216e-05, 8.34720000000011e-05, 8.388900000000019e-05, 8.401399999999684e-05, 8.399999999999727e-05, 8.394499999999847e-05, 8.405600000000249e-05, 8.332000000000131e-05, 8.362500000000037e-05, 8.376400000000006e-05, 8.312499999999987e-05, 8.41249999999974e-05, 8.376400000000006e-05, 8.33049999999988e-05, 8.362500000000037e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.022" endtime="20201117 14:48:00.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.017" endtime="20201117 14:48:00.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.027" endtime="20201117 14:48:00.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.030" endtime="20201117 14:48:00.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.028" endtime="20201117 14:48:00.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.025" endtime="20201117 14:48:00.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.656" endtime="20201117 14:48:00.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.654" endtime="20201117 14:48:00.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.653" endtime="20201117 14:48:00.051"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.054" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.062" endtime="20201117 14:48:00.082"></status>
</kw>
<msg timestamp="20201117 14:48:00.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.060" endtime="20201117 14:48:00.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.083" endtime="20201117 14:48:00.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.086" endtime="20201117 14:48:00.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.057" endtime="20201117 14:48:00.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.055" endtime="20201117 14:48:00.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.094" endtime="20201117 14:48:00.380"></status>
</kw>
<msg timestamp="20201117 14:48:00.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.093" endtime="20201117 14:48:00.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.384" endtime="20201117 14:48:00.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.393" endtime="20201117 14:48:00.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.090" endtime="20201117 14:48:00.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.089" endtime="20201117 14:48:00.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.399" level="INFO">${RESULT} = [{'time': 0.022528639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.487499999999815e-05, 'source_diff': 8.487499999999815e-05}, {'time': 0.022618625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:00.396" endtime="20201117 14:48:00.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.413" level="INFO">${ACCURACY} = {'diff': [8.487499999999815e-05, 8.494399999999999e-05, 8.469499999999922e-05, 8.42919999999997e-05, 8.483399999999891e-05, 8.504100000000098e-05, 8.461099999999833e-05, 8.457000000000256e-05, 8.49309...</msg>
<status status="PASS" starttime="20201117 14:48:00.400" endtime="20201117 14:48:00.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.417" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.416" endtime="20201117 14:48:00.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.420" level="INFO">VALUE: [8.487499999999815e-05, 8.494399999999999e-05, 8.469499999999922e-05, 8.42919999999997e-05, 8.483399999999891e-05, 8.504100000000098e-05, 8.461099999999833e-05, 8.457000000000256e-05, 8.49309999999999e-05, 8.502699999999794e-05, 8.437500000000112e-05, 8.481900000000334e-05, 8.504099999999751e-05, 8.437500000000112e-05, 8.420800000000228e-05, 8.481899999999987e-05, 8.504199999999698e-05, 8.457000000000256e-05, 8.508399999999916e-05, 8.430599999999927e-05, 8.458399999999866e-05, 8.437500000000112e-05, 8.473599999999845e-05, 8.472200000000235e-05, 8.506900000000012e-05, 8.437500000000112e-05, 8.491700000000033e-05, 8.498600000000217e-05, 8.458299999999919e-05, 8.463900000000094e-05, 8.426400000000056e-05, 8.505600000000002e-05, 8.473599999999845e-05, 8.476400000000106e-05, 8.47920000000002e-05, 8.413900000000044e-05, 8.456999999999909e-05, 8.426400000000056e-05, 8.426400000000056e-05, 8.438899999999722e-05, 8.434700000000198e-05, 8.468000000000017e-05, 8.481899999999987e-05, 8.455500000000005e-05, 8.427800000000013e-05, 8.450000000000124e-05, 8.426400000000056e-05, 8.49309999999999e-05, 8.422199999999838e-05, 8.430600000000274e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.418" endtime="20201117 14:48:00.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.414" endtime="20201117 14:48:00.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.423" endtime="20201117 14:48:00.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.426" endtime="20201117 14:48:00.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.424" endtime="20201117 14:48:00.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.421" endtime="20201117 14:48:00.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.054" endtime="20201117 14:48:00.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.052" endtime="20201117 14:48:00.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.051" endtime="20201117 14:48:00.447"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.450" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.458" endtime="20201117 14:48:00.478"></status>
</kw>
<msg timestamp="20201117 14:48:00.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.457" endtime="20201117 14:48:00.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.479" endtime="20201117 14:48:00.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.482" endtime="20201117 14:48:00.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.454" endtime="20201117 14:48:00.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.452" endtime="20201117 14:48:00.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.491" endtime="20201117 14:48:00.776"></status>
</kw>
<msg timestamp="20201117 14:48:00.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.489" endtime="20201117 14:48:00.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.780" endtime="20201117 14:48:00.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.788" endtime="20201117 14:48:00.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.487" endtime="20201117 14:48:00.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.485" endtime="20201117 14:48:00.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.795" level="INFO">${RESULT} = [{'time': 0.022599986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.61799999999982e-05, 'source_diff': 8.61799999999982e-05}, {'time': 0.022690972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:00.791" endtime="20201117 14:48:00.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.808" level="INFO">${ACCURACY} = {'diff': [8.61799999999982e-05, 8.536099999999908e-05, 8.533299999999994e-05, 8.576399999999859e-05, 8.594400000000099e-05, 8.57920000000012e-05, 8.595799999999709e-05, 8.540300000000126e-05, 8.537499...</msg>
<status status="PASS" starttime="20201117 14:48:00.796" endtime="20201117 14:48:00.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.812" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.811" endtime="20201117 14:48:00.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.815" level="INFO">VALUE: [8.61799999999982e-05, 8.536099999999908e-05, 8.533299999999994e-05, 8.576399999999859e-05, 8.594400000000099e-05, 8.57920000000012e-05, 8.595799999999709e-05, 8.540300000000126e-05, 8.537499999999865e-05, 8.557000000000009e-05, 8.591700000000133e-05, 8.54310000000004e-05, 8.569500000000022e-05, 8.583300000000044e-05, 8.551399999999834e-05, 8.551399999999834e-05, 8.569399999999727e-05, 8.519400000000024e-05, 8.522199999999938e-05, 8.609700000000026e-05, 8.544400000000049e-05, 8.549999999999877e-05, 8.531999999999984e-05, 8.604199999999798e-05, 8.556900000000062e-05, 8.524999999999852e-05, 8.556900000000062e-05, 8.597200000000013e-05, 8.613900000000244e-05, 8.56530000000015e-05, 8.586099999999958e-05, 8.556900000000062e-05, 8.558300000000019e-05, 8.540299999999779e-05, 8.587499999999915e-05, 8.51249999999984e-05, 8.602799999999841e-05, 8.520899999999929e-05, 8.538899999999822e-05, 8.551400000000181e-05, 8.531999999999984e-05, 8.588899999999872e-05, 8.606900000000112e-05, 8.590300000000176e-05, 8.587499999999915e-05, 8.537499999999865e-05, 8.522200000000285e-05, 8.551399999999834e-05, 8.595799999999709e-05, 8.608300000000069e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.814" endtime="20201117 14:48:00.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.809" endtime="20201117 14:48:00.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.823" endtime="20201117 14:48:00.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.827" endtime="20201117 14:48:00.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.825" endtime="20201117 14:48:00.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.822" endtime="20201117 14:48:00.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.450" endtime="20201117 14:48:00.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.449" endtime="20201117 14:48:00.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.448" endtime="20201117 14:48:00.848"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.850" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.858" endtime="20201117 14:48:00.878"></status>
</kw>
<msg timestamp="20201117 14:48:00.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.857" endtime="20201117 14:48:00.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.880" endtime="20201117 14:48:00.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.882" endtime="20201117 14:48:00.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.854" endtime="20201117 14:48:00.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.852" endtime="20201117 14:48:00.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.891" endtime="20201117 14:48:01.177"></status>
</kw>
<msg timestamp="20201117 14:48:01.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.890" endtime="20201117 14:48:01.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.181" endtime="20201117 14:48:01.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.189" endtime="20201117 14:48:01.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.887" endtime="20201117 14:48:01.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.885" endtime="20201117 14:48:01.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.196" level="INFO">${RESULT} = [{'time': 0.021979028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.672200000000088e-05, 'source_diff': 8.672200000000088e-05}, {'time': 0.022072042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:01.192" endtime="20201117 14:48:01.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.209" level="INFO">${ACCURACY} = {'diff': [8.672200000000088e-05, 8.701399999999984e-05, 8.661100000000033e-05, 8.644500000000097e-05, 8.676300000000012e-05, 8.700000000000027e-05, 8.695799999999809e-05, 8.647200000000063e-05, 8.7138...</msg>
<status status="PASS" starttime="20201117 14:48:01.197" endtime="20201117 14:48:01.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.214" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.213" endtime="20201117 14:48:01.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.216" level="INFO">VALUE: [8.672200000000088e-05, 8.701399999999984e-05, 8.661100000000033e-05, 8.644500000000097e-05, 8.676300000000012e-05, 8.700000000000027e-05, 8.695799999999809e-05, 8.647200000000063e-05, 8.713899999999997e-05, 8.663900000000294e-05, 8.638899999999922e-05, 8.686100000000058e-05, 8.708400000000116e-05, 8.652799999999891e-05, 8.629199999999823e-05, 8.682000000000134e-05, 8.644500000000097e-05, 8.666700000000208e-05, 8.708299999999822e-05, 8.713899999999997e-05, 8.68189999999984e-05, 8.640299999999879e-05, 8.6847000000001e-05, 8.71250000000004e-05, 8.620800000000081e-05, 8.681900000000187e-05, 8.676399999999959e-05, 8.632000000000084e-05, 8.651399999999934e-05, 8.702799999999941e-05, 8.69730000000006e-05, 8.708400000000116e-05, 8.619500000000072e-05, 8.620800000000081e-05, 8.687500000000015e-05, 8.670800000000131e-05, 8.626399999999909e-05, 8.687500000000015e-05, 8.651399999999934e-05, 8.702799999999941e-05, 8.636100000000008e-05, 8.663899999999947e-05, 8.643099999999793e-05, 8.633399999999694e-05, 8.637499999999965e-05, 8.64310000000014e-05, 8.690299999999929e-05, 8.654199999999848e-05, 8.657000000000109e-05, 8.616599999999863e-05]</msg>
<status status="PASS" starttime="20201117 14:48:01.215" endtime="20201117 14:48:01.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.210" endtime="20201117 14:48:01.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.219" endtime="20201117 14:48:01.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.223" endtime="20201117 14:48:01.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.221" endtime="20201117 14:48:01.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.218" endtime="20201117 14:48:01.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.851" endtime="20201117 14:48:01.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.849" endtime="20201117 14:48:01.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.848" endtime="20201117 14:48:01.244"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.246" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.255" endtime="20201117 14:48:01.276"></status>
</kw>
<msg timestamp="20201117 14:48:01.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.253" endtime="20201117 14:48:01.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.277" endtime="20201117 14:48:01.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.280" endtime="20201117 14:48:01.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.250" endtime="20201117 14:48:01.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.248" endtime="20201117 14:48:01.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.289" endtime="20201117 14:48:01.574"></status>
</kw>
<msg timestamp="20201117 14:48:01.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022840875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:01.287" endtime="20201117 14:48:01.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022840875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229285, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:01.579" endtime="20201117 14:48:01.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.589" endtime="20201117 14:48:01.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.285" endtime="20201117 14:48:01.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.283" endtime="20201117 14:48:01.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.597" level="INFO">${RESULT} = [{'time': 0.0229285, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.76250000000009e-05, 'source_diff': 8.76250000000009e-05}, {'time': 0.023019556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201117 14:48:01.593" endtime="20201117 14:48:01.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.617" level="INFO">${ACCURACY} = {'diff': [8.76250000000009e-05, 8.743099999999893e-05, 8.737500000000065e-05, 8.800000000000127e-05, 8.781999999999887e-05, 8.800000000000127e-05, 8.740200000000031e-05, 8.800000000000127e-05, 8.73049...</msg>
<status status="PASS" starttime="20201117 14:48:01.599" endtime="20201117 14:48:01.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.622" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.621" endtime="20201117 14:48:01.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.625" level="INFO">VALUE: [8.76250000000009e-05, 8.743099999999893e-05, 8.737500000000065e-05, 8.800000000000127e-05, 8.781999999999887e-05, 8.800000000000127e-05, 8.740200000000031e-05, 8.800000000000127e-05, 8.730499999999933e-05, 8.776400000000059e-05, 8.769399999999927e-05, 8.79999999999978e-05, 8.745799999999859e-05, 8.805599999999955e-05, 8.780600000000277e-05, 8.751400000000034e-05, 8.759700000000176e-05, 8.719500000000172e-05, 8.806999999999912e-05, 8.804199999999998e-05, 8.775000000000102e-05, 8.76250000000009e-05, 8.769399999999927e-05, 8.730499999999933e-05, 8.725000000000052e-05, 8.783300000000244e-05, 8.769399999999927e-05, 8.78050000000033e-05, 8.758300000000219e-05, 8.793099999999943e-05, 8.73189999999989e-05, 8.745900000000154e-05, 8.731999999999837e-05, 8.74860000000012e-05, 8.81250000000014e-05, 8.76799999999997e-05, 8.776300000000112e-05, 8.779100000000026e-05, 8.805500000000008e-05, 8.802800000000041e-05, 8.754100000000001e-05, 8.763900000000047e-05, 8.765300000000004e-05, 8.719499999999825e-05, 8.780600000000277e-05, 8.776400000000059e-05, 8.725000000000052e-05, 8.745900000000154e-05, 8.736100000000108e-05, 8.811099999999836e-05]</msg>
<status status="PASS" starttime="20201117 14:48:01.624" endtime="20201117 14:48:01.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.618" endtime="20201117 14:48:01.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.630" endtime="20201117 14:48:01.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.634" endtime="20201117 14:48:01.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.632" endtime="20201117 14:48:01.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.627" endtime="20201117 14:48:01.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.247" endtime="20201117 14:48:01.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.245" endtime="20201117 14:48:01.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.244" endtime="20201117 14:48:01.656"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.658" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.666" endtime="20201117 14:48:01.686"></status>
</kw>
<msg timestamp="20201117 14:48:01.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.664" endtime="20201117 14:48:01.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.688" endtime="20201117 14:48:01.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.690" endtime="20201117 14:48:01.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.662" endtime="20201117 14:48:01.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.660" endtime="20201117 14:48:01.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.699" endtime="20201117 14:48:01.985"></status>
</kw>
<msg timestamp="20201117 14:48:01.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022012806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.698" endtime="20201117 14:48:01.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022012806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.989" endtime="20201117 14:48:01.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.997" endtime="20201117 14:48:01.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.695" endtime="20201117 14:48:02.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.693" endtime="20201117 14:48:02.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.004" level="INFO">${RESULT} = [{'time': 0.022101347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.854100000000101e-05, 'source_diff': 8.854100000000101e-05}, {'time': 0.022196375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:02.001" endtime="20201117 14:48:02.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.018" level="INFO">${ACCURACY} = {'diff': [8.854100000000101e-05, 8.902800000000141e-05, 8.855600000000005e-05, 8.829200000000023e-05, 8.855600000000005e-05, 8.901400000000184e-05, 8.838900000000122e-05, 8.838900000000122e-05, 8.8209...</msg>
<status status="PASS" starttime="20201117 14:48:02.005" endtime="20201117 14:48:02.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.022" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.021" endtime="20201117 14:48:02.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.024" level="INFO">VALUE: [8.854100000000101e-05, 8.902800000000141e-05, 8.855600000000005e-05, 8.829200000000023e-05, 8.855600000000005e-05, 8.901400000000184e-05, 8.838900000000122e-05, 8.838900000000122e-05, 8.820900000000229e-05, 8.865299999999757e-05, 8.83059999999998e-05, 8.88190000000004e-05, 8.880499999999736e-05, 8.854200000000048e-05, 8.870899999999932e-05, 8.838900000000122e-05, 8.869499999999975e-05, 8.891699999999739e-05, 8.872199999999941e-05, 8.84449999999995e-05, 8.808400000000216e-05, 8.875000000000202e-05, 8.872199999999941e-05, 8.868100000000018e-05, 8.877700000000169e-05, 8.852699999999797e-05, 8.84999999999983e-05, 8.81800000000002e-05, 8.865300000000104e-05, 8.837499999999818e-05, 8.844400000000002e-05, 8.855600000000005e-05, 8.89860000000027e-05, 8.861099999999886e-05, 8.89999999999988e-05, 8.887499999999868e-05, 8.833399999999894e-05, 8.825000000000152e-05, 8.865200000000156e-05, 8.919500000000025e-05, 8.845799999999959e-05, 8.81250000000014e-05, 8.843000000000045e-05, 8.827799999999719e-05, 8.89999999999988e-05, 8.906900000000065e-05, 8.824999999999805e-05, 8.856900000000015e-05, 8.833399999999894e-05, 8.862499999999843e-05]</msg>
<status status="PASS" starttime="20201117 14:48:02.023" endtime="20201117 14:48:02.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.018" endtime="20201117 14:48:02.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.028" endtime="20201117 14:48:02.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.031" endtime="20201117 14:48:02.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.029" endtime="20201117 14:48:02.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.026" endtime="20201117 14:48:02.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.658" endtime="20201117 14:48:02.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.657" endtime="20201117 14:48:02.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.656" endtime="20201117 14:48:02.052"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.054" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.062" endtime="20201117 14:48:02.083"></status>
</kw>
<msg timestamp="20201117 14:48:02.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.061" endtime="20201117 14:48:02.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.084" endtime="20201117 14:48:02.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.087" endtime="20201117 14:48:02.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.058" endtime="20201117 14:48:02.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.056" endtime="20201117 14:48:02.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.096" endtime="20201117 14:48:02.382"></status>
</kw>
<msg timestamp="20201117 14:48:02.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022167931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.094" endtime="20201117 14:48:02.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022167931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.387" endtime="20201117 14:48:02.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.395" endtime="20201117 14:48:02.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.092" endtime="20201117 14:48:02.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.090" endtime="20201117 14:48:02.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.401" level="INFO">${RESULT} = [{'time': 0.022257986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.005500000000208e-05, 'source_diff': 9.005500000000208e-05}, {'time': 0.022352014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:02.398" endtime="20201117 14:48:02.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.415" level="INFO">${ACCURACY} = {'diff': [9.005500000000208e-05, 8.988899999999925e-05, 8.96670000000016e-05, 8.979199999999826e-05, 8.988899999999925e-05, 8.962499999999943e-05, 8.927699999999872e-05, 8.9945000000001e-05, 9.0069999...</msg>
<status status="PASS" starttime="20201117 14:48:02.402" endtime="20201117 14:48:02.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.419" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.418" endtime="20201117 14:48:02.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.422" level="INFO">VALUE: [9.005500000000208e-05, 8.988899999999925e-05, 8.96670000000016e-05, 8.979199999999826e-05, 8.988899999999925e-05, 8.962499999999943e-05, 8.927699999999872e-05, 8.9945000000001e-05, 9.006999999999765e-05, 8.951399999999887e-05, 9.002799999999894e-05, 8.922199999999991e-05, 8.988899999999925e-05, 8.924999999999905e-05, 8.986100000000011e-05, 8.968100000000118e-05, 8.932000000000037e-05, 8.993099999999796e-05, 8.99999999999998e-05, 8.919500000000025e-05, 8.967999999999823e-05, 8.961199999999933e-05, 8.947200000000016e-05, 9.011100000000036e-05, 8.961099999999986e-05, 8.990299999999882e-05, 8.969400000000127e-05, 8.959799999999976e-05, 8.96250000000029e-05, 8.924999999999905e-05, 8.94999999999993e-05, 8.969500000000075e-05, 8.957000000000062e-05, 8.997200000000066e-05, 8.918099999999721e-05, 8.919400000000077e-05, 8.98190000000014e-05, 8.991599999999891e-05, 8.94999999999993e-05, 8.952800000000191e-05, 8.970800000000084e-05, 8.983300000000097e-05, 8.91800000000012e-05, 8.994400000000152e-05, 8.976400000000259e-05, 8.986100000000011e-05, 8.919500000000025e-05, 8.940299999999832e-05, 9.016599999999916e-05, 8.932000000000037e-05]</msg>
<status status="PASS" starttime="20201117 14:48:02.420" endtime="20201117 14:48:02.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.416" endtime="20201117 14:48:02.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.425" endtime="20201117 14:48:02.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.428" endtime="20201117 14:48:02.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.427" endtime="20201117 14:48:02.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.423" endtime="20201117 14:48:02.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.055" endtime="20201117 14:48:02.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.053" endtime="20201117 14:48:02.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.052" endtime="20201117 14:48:02.449"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.452" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.460" endtime="20201117 14:48:02.481"></status>
</kw>
<msg timestamp="20201117 14:48:02.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.458" endtime="20201117 14:48:02.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.482" endtime="20201117 14:48:02.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.485" endtime="20201117 14:48:02.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.456" endtime="20201117 14:48:02.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.454" endtime="20201117 14:48:02.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.494" endtime="20201117 14:48:02.779"></status>
</kw>
<msg timestamp="20201117 14:48:02.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.492" endtime="20201117 14:48:02.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.783" endtime="20201117 14:48:02.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.791" endtime="20201117 14:48:02.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.490" endtime="20201117 14:48:02.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.488" endtime="20201117 14:48:02.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.798" level="INFO">${RESULT} = [{'time': 0.022101569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.048600000000073e-05, 'source_diff': 9.048600000000073e-05}, {'time': 0.022196569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:02.795" endtime="20201117 14:48:02.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.811" level="INFO">${ACCURACY} = {'diff': [9.048600000000073e-05, 9.086099999999764e-05, 9.091699999999939e-05, 9.105500000000308e-05, 9.092999999999948e-05, 9.009700000000079e-05, 9.08329999999985e-05, 9.105599999999908e-05, 9.10979...</msg>
<status status="PASS" starttime="20201117 14:48:02.799" endtime="20201117 14:48:02.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.816" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.815" endtime="20201117 14:48:02.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.818" level="INFO">VALUE: [9.048600000000073e-05, 9.086099999999764e-05, 9.091699999999939e-05, 9.105500000000308e-05, 9.092999999999948e-05, 9.009700000000079e-05, 9.08329999999985e-05, 9.105599999999908e-05, 9.109799999999779e-05, 9.101400000000037e-05, 9.095900000000157e-05, 9.057000000000162e-05, 9.108400000000169e-05, 9.075000000000055e-05, 9.108300000000222e-05, 9.086100000000111e-05, 9.076400000000012e-05, 9.025000000000005e-05, 9.06939999999988e-05, 9.056899999999868e-05, 9.10000000000008e-05, 9.052799999999944e-05, 9.111200000000083e-05, 9.026399999999962e-05, 9.027799999999919e-05, 9.019500000000125e-05, 9.037500000000018e-05, 9.019500000000125e-05, 9.098600000000123e-05, 9.076400000000012e-05, 9.075000000000055e-05, 9.026399999999962e-05, 9.036100000000061e-05, 9.062500000000043e-05, 9.044399999999855e-05, 9.045799999999812e-05, 9.099999999999733e-05, 9.062500000000043e-05, 9.058400000000119e-05, 9.094499999999853e-05, 9.102799999999994e-05, 9.093099999999896e-05, 9.070800000000184e-05, 9.08329999999985e-05, 9.067999999999923e-05, 9.030500000000233e-05, 9.062499999999696e-05, 9.037500000000018e-05, 9.022200000000091e-05, 9.044399999999855e-05]</msg>
<status status="PASS" starttime="20201117 14:48:02.817" endtime="20201117 14:48:02.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.812" endtime="20201117 14:48:02.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.821" endtime="20201117 14:48:02.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.825" endtime="20201117 14:48:02.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.823" endtime="20201117 14:48:02.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.820" endtime="20201117 14:48:02.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.452" endtime="20201117 14:48:02.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.450" endtime="20201117 14:48:02.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.450" endtime="20201117 14:48:02.846"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.848" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.857" endtime="20201117 14:48:02.878"></status>
</kw>
<msg timestamp="20201117 14:48:02.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.855" endtime="20201117 14:48:02.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.880" endtime="20201117 14:48:02.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.882" endtime="20201117 14:48:02.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.852" endtime="20201117 14:48:02.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.850" endtime="20201117 14:48:02.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.891" endtime="20201117 14:48:03.178"></status>
</kw>
<msg timestamp="20201117 14:48:03.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023315583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.890" endtime="20201117 14:48:03.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023315583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.182" endtime="20201117 14:48:03.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.190" endtime="20201117 14:48:03.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.887" endtime="20201117 14:48:03.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.886" endtime="20201117 14:48:03.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.197" level="INFO">${RESULT} = [{'time': 0.023406889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.130599999999933e-05, 'source_diff': 9.130599999999933e-05}, {'time': 0.023500889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:03.193" endtime="20201117 14:48:03.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.211" level="INFO">${ACCURACY} = {'diff': [9.130599999999933e-05, 9.137500000000118e-05, 9.175000000000155e-05, 9.159699999999882e-05, 9.111099999999789e-05, 9.180500000000036e-05, 9.211200000000183e-05, 9.215300000000107e-05, 9.2082...</msg>
<status status="PASS" starttime="20201117 14:48:03.198" endtime="20201117 14:48:03.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.216" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.215" endtime="20201117 14:48:03.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.218" level="INFO">VALUE: [9.130599999999933e-05, 9.137500000000118e-05, 9.175000000000155e-05, 9.159699999999882e-05, 9.111099999999789e-05, 9.180500000000036e-05, 9.211200000000183e-05, 9.215300000000107e-05, 9.208299999999975e-05, 9.180500000000036e-05, 9.206900000000018e-05, 9.19719999999992e-05, 9.141600000000041e-05, 9.106899999999918e-05, 9.117999999999973e-05, 9.136199999999761e-05, 9.156999999999915e-05, 9.173599999999851e-05, 9.19589999999991e-05, 9.197299999999867e-05, 9.123599999999801e-05, 9.127699999999725e-05, 9.126400000000062e-05, 9.18329999999995e-05, 9.1639000000001e-05, 9.112499999999746e-05, 9.1639000000001e-05, 9.18329999999995e-05, 9.195799999999962e-05, 9.143099999999946e-05, 9.201400000000137e-05, 9.169499999999928e-05, 9.133400000000194e-05, 9.187500000000168e-05, 9.184799999999854e-05, 9.194400000000005e-05, 9.205500000000061e-05, 9.127800000000019e-05, 9.138900000000075e-05, 9.187499999999821e-05, 9.16939999999998e-05, 9.176399999999765e-05, 9.21390000000015e-05, 9.194499999999953e-05, 9.177800000000069e-05, 9.195799999999962e-05, 9.125000000000105e-05, 9.145900000000207e-05, 9.187499999999821e-05, 9.175000000000155e-05]</msg>
<status status="PASS" starttime="20201117 14:48:03.217" endtime="20201117 14:48:03.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.212" endtime="20201117 14:48:03.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.221" endtime="20201117 14:48:03.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.225" endtime="20201117 14:48:03.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.223" endtime="20201117 14:48:03.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.220" endtime="20201117 14:48:03.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.849" endtime="20201117 14:48:03.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.847" endtime="20201117 14:48:03.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.846" endtime="20201117 14:48:03.246"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.248" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.257" endtime="20201117 14:48:03.277"></status>
</kw>
<msg timestamp="20201117 14:48:03.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.255" endtime="20201117 14:48:03.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.279" endtime="20201117 14:48:03.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.281" endtime="20201117 14:48:03.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.252" endtime="20201117 14:48:03.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.250" endtime="20201117 14:48:03.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.290" endtime="20201117 14:48:03.576"></status>
</kw>
<msg timestamp="20201117 14:48:03.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.289" endtime="20201117 14:48:03.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.580" endtime="20201117 14:48:03.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.588" endtime="20201117 14:48:03.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.286" endtime="20201117 14:48:03.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.285" endtime="20201117 14:48:03.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.595" level="INFO">${RESULT} = [{'time': 0.022491361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.287500000000268e-05, 'source_diff': 9.287500000000268e-05}, {'time': 0.022587389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:03.591" endtime="20201117 14:48:03.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.608" level="INFO">${ACCURACY} = {'diff': [9.287500000000268e-05, 9.295800000000062e-05, 9.256900000000068e-05, 9.218100000000021e-05, 9.280499999999789e-05, 9.279200000000126e-05, 9.274999999999908e-05, 9.233399999999947e-05, 9.2443...</msg>
<status status="PASS" starttime="20201117 14:48:03.596" endtime="20201117 14:48:03.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.613" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.611" endtime="20201117 14:48:03.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.615" level="INFO">VALUE: [9.287500000000268e-05, 9.295800000000062e-05, 9.256900000000068e-05, 9.218100000000021e-05, 9.280499999999789e-05, 9.279200000000126e-05, 9.274999999999908e-05, 9.233399999999947e-05, 9.244399999999708e-05, 9.245800000000012e-05, 9.230500000000086e-05, 9.276400000000212e-05, 9.216700000000064e-05, 9.220799999999987e-05, 9.220799999999987e-05, 9.309799999999979e-05, 9.29720000000002e-05, 9.301400000000237e-05, 9.28200000000004e-05, 9.262500000000243e-05, 9.305600000000108e-05, 9.212499999999846e-05, 9.212500000000193e-05, 9.304100000000204e-05, 9.237500000000218e-05, 9.2333e-05, 9.274999999999908e-05, 9.249999999999883e-05, 9.2639000000002e-05, 9.25000000000023e-05, 9.237499999999871e-05, 9.258300000000025e-05, 9.288900000000225e-05, 9.257000000000015e-05, 9.220899999999935e-05, 9.247299999999917e-05, 9.223700000000196e-05, 9.308300000000075e-05, 9.262499999999896e-05, 9.237500000000218e-05, 9.308299999999728e-05, 9.298599999999976e-05, 9.248599999999926e-05, 9.268100000000071e-05, 9.30139999999989e-05, 9.24589999999996e-05, 9.28200000000004e-05, 9.290199999999887e-05, 9.272299999999942e-05, 9.231900000000043e-05]</msg>
<status status="PASS" starttime="20201117 14:48:03.614" endtime="20201117 14:48:03.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.609" endtime="20201117 14:48:03.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.618" endtime="20201117 14:48:03.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.622" endtime="20201117 14:48:03.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.620" endtime="20201117 14:48:03.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.617" endtime="20201117 14:48:03.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.249" endtime="20201117 14:48:03.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.247" endtime="20201117 14:48:03.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.246" endtime="20201117 14:48:03.643"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.645" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.653" endtime="20201117 14:48:03.674"></status>
</kw>
<msg timestamp="20201117 14:48:03.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.652" endtime="20201117 14:48:03.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.676" endtime="20201117 14:48:03.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.678" endtime="20201117 14:48:03.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.649" endtime="20201117 14:48:03.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.647" endtime="20201117 14:48:03.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.687" endtime="20201117 14:48:03.972"></status>
</kw>
<msg timestamp="20201117 14:48:03.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.685" endtime="20201117 14:48:03.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.976" endtime="20201117 14:48:03.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.984" endtime="20201117 14:48:03.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.683" endtime="20201117 14:48:03.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.681" endtime="20201117 14:48:03.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.991" level="INFO">${RESULT} = [{'time': 0.022127681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.419499999999831e-05, 'source_diff': 9.419499999999831e-05}, {'time': 0.022225708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:03.988" endtime="20201117 14:48:03.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.004" level="INFO">${ACCURACY} = {'diff': [9.419499999999831e-05, 9.38330000000015e-05, 9.395799999999815e-05, 9.369399999999833e-05, 9.400000000000033e-05, 9.327799999999872e-05, 9.405600000000208e-05, 9.351400000000287e-05, 9.36940...</msg>
<status status="PASS" starttime="20201117 14:48:03.992" endtime="20201117 14:48:04.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.009" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.008" endtime="20201117 14:48:04.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.012" level="INFO">VALUE: [9.419499999999831e-05, 9.38330000000015e-05, 9.395799999999815e-05, 9.369399999999833e-05, 9.400000000000033e-05, 9.327799999999872e-05, 9.405600000000208e-05, 9.351400000000287e-05, 9.36940000000018e-05, 9.36529999999991e-05, 9.394499999999806e-05, 9.379200000000226e-05, 9.357000000000115e-05, 9.359800000000029e-05, 9.358300000000125e-05, 9.380500000000236e-05, 9.319399999999783e-05, 9.387499999999674e-05, 9.406900000000218e-05, 9.40139999999999e-05, 9.358300000000125e-05, 9.343100000000146e-05, 9.343100000000146e-05, 9.391699999999892e-05, 9.394500000000153e-05, 9.319499999999731e-05, 9.394399999999858e-05, 9.401300000000043e-05, 9.394400000000205e-05, 9.394399999999858e-05, 9.338899999999928e-05, 9.318000000000173e-05, 9.379099999999932e-05, 9.376399999999965e-05, 9.319399999999783e-05, 9.397199999999772e-05, 9.361100000000039e-05, 9.319500000000078e-05, 9.39729999999972e-05, 9.354100000000254e-05, 9.343100000000146e-05, 9.35269999999995e-05, 9.400000000000033e-05, 9.36940000000018e-05, 9.338899999999928e-05, 9.322199999999697e-05, 9.313899999999903e-05, 9.319399999999783e-05, 9.388899999999978e-05, 9.337499999999971e-05]</msg>
<status status="PASS" starttime="20201117 14:48:04.010" endtime="20201117 14:48:04.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.005" endtime="20201117 14:48:04.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.015" endtime="20201117 14:48:04.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.018" endtime="20201117 14:48:04.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.017" endtime="20201117 14:48:04.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.014" endtime="20201117 14:48:04.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.646" endtime="20201117 14:48:04.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.644" endtime="20201117 14:48:04.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.643" endtime="20201117 14:48:04.039"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.042" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.050" endtime="20201117 14:48:04.071"></status>
</kw>
<msg timestamp="20201117 14:48:04.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.048" endtime="20201117 14:48:04.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.072" endtime="20201117 14:48:04.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.075" endtime="20201117 14:48:04.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.046" endtime="20201117 14:48:04.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.044" endtime="20201117 14:48:04.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.084" endtime="20201117 14:48:04.370"></status>
</kw>
<msg timestamp="20201117 14:48:04.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02166125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:04.083" endtime="20201117 14:48:04.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02166125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:04.374" endtime="20201117 14:48:04.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.382" endtime="20201117 14:48:04.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.080" endtime="20201117 14:48:04.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.078" endtime="20201117 14:48:04.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.389" level="INFO">${RESULT} = [{'time': 0.021756069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.481899999999946e-05, 'source_diff': 9.481899999999946e-05}, {'time': 0.021853097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:04.386" endtime="20201117 14:48:04.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.403" level="INFO">${ACCURACY} = {'diff': [9.481899999999946e-05, 9.41529999999996e-05, 9.511100000000189e-05, 9.41529999999996e-05, 9.430499999999939e-05, 9.438900000000028e-05, 9.498600000000176e-05, 9.436099999999767e-05, 9.504200...</msg>
<status status="PASS" starttime="20201117 14:48:04.390" endtime="20201117 14:48:04.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.407" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.406" endtime="20201117 14:48:04.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.410" level="INFO">VALUE: [9.481899999999946e-05, 9.41529999999996e-05, 9.511100000000189e-05, 9.41529999999996e-05, 9.430499999999939e-05, 9.438900000000028e-05, 9.498600000000176e-05, 9.436099999999767e-05, 9.504200000000004e-05, 9.450000000000083e-05, 9.418100000000221e-05, 9.470900000000185e-05, 9.481900000000293e-05, 9.475000000000108e-05, 9.456899999999921e-05, 9.476400000000065e-05, 9.438900000000028e-05, 9.477800000000022e-05, 9.488900000000078e-05, 9.477800000000022e-05, 9.468099999999924e-05, 9.474999999999761e-05, 9.456999999999868e-05, 9.459800000000129e-05, 9.457000000000215e-05, 9.49729999999982e-05, 9.425000000000058e-05, 9.433299999999853e-05, 9.481899999999946e-05, 9.429099999999982e-05, 9.481899999999946e-05, 9.494399999999958e-05, 9.488900000000078e-05, 9.437499999999724e-05, 9.452799999999997e-05, 9.431999999999843e-05, 9.470900000000185e-05, 9.430600000000233e-05, 9.476400000000065e-05, 9.481999999999893e-05, 9.494499999999906e-05, 9.444399999999908e-05, 9.472200000000194e-05, 9.493000000000001e-05, 9.508299999999928e-05, 9.491699999999992e-05, 9.469399999999933e-05, 9.491699999999992e-05, 9.423600000000101e-05, 9.472300000000142e-05]</msg>
<status status="PASS" starttime="20201117 14:48:04.408" endtime="20201117 14:48:04.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.404" endtime="20201117 14:48:04.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.413" endtime="20201117 14:48:04.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.416" endtime="20201117 14:48:04.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.415" endtime="20201117 14:48:04.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.411" endtime="20201117 14:48:04.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.042" endtime="20201117 14:48:04.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.041" endtime="20201117 14:48:04.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.040" endtime="20201117 14:48:04.437"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.439" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.448" endtime="20201117 14:48:04.469"></status>
</kw>
<msg timestamp="20201117 14:48:04.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.446" endtime="20201117 14:48:04.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.471" endtime="20201117 14:48:04.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.474" endtime="20201117 14:48:04.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.444" endtime="20201117 14:48:04.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.441" endtime="20201117 14:48:04.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.482" endtime="20201117 14:48:04.768"></status>
</kw>
<msg timestamp="20201117 14:48:04.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.481" endtime="20201117 14:48:04.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.772" endtime="20201117 14:48:04.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.781" endtime="20201117 14:48:04.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.478" endtime="20201117 14:48:04.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.477" endtime="20201117 14:48:04.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.788" level="INFO">${RESULT} = [{'time': 0.022774125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.626399999999868e-05, 'source_diff': 9.626399999999868e-05}, {'time': 0.022876056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:04.784" endtime="20201117 14:48:04.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.802" level="INFO">${ACCURACY} = {'diff': [9.626399999999868e-05, 9.612499999999899e-05, 9.558299999999978e-05, 9.558299999999978e-05, 9.609699999999985e-05, 9.531899999999996e-05, 9.541600000000094e-05, 9.523599999999854e-05, 9.5264...</msg>
<status status="PASS" starttime="20201117 14:48:04.789" endtime="20201117 14:48:04.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.806" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.805" endtime="20201117 14:48:04.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.809" level="INFO">VALUE: [9.626399999999868e-05, 9.612499999999899e-05, 9.558299999999978e-05, 9.558299999999978e-05, 9.609699999999985e-05, 9.531899999999996e-05, 9.541600000000094e-05, 9.523599999999854e-05, 9.526400000000115e-05, 9.53200000000029e-05, 9.608399999999975e-05, 9.561100000000239e-05, 9.609799999999932e-05, 9.605600000000061e-05, 9.51660000000007e-05, 9.61530000000016e-05, 9.561200000000186e-05, 9.579099999999785e-05, 9.576400000000165e-05, 9.556900000000021e-05, 9.588900000000178e-05, 9.576399999999818e-05, 9.538900000000128e-05, 9.613899999999856e-05, 9.573599999999904e-05, 9.556999999999968e-05, 9.538900000000128e-05, 9.607000000000018e-05, 9.59859999999993e-05, 9.559699999999935e-05, 9.556900000000021e-05, 9.595800000000015e-05, 9.55140000000014e-05, 9.55140000000014e-05, 9.513900000000103e-05, 9.605499999999767e-05, 9.586099999999917e-05, 9.583300000000003e-05, 9.523599999999854e-05, 9.594400000000058e-05, 9.56530000000011e-05, 9.565299999999763e-05, 9.541700000000042e-05, 9.601299999999896e-05, 9.547300000000217e-05, 9.595800000000015e-05, 9.537500000000171e-05, 9.574999999999861e-05, 9.541600000000094e-05, 9.605500000000114e-05]</msg>
<status status="PASS" starttime="20201117 14:48:04.808" endtime="20201117 14:48:04.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.803" endtime="20201117 14:48:04.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.812" endtime="20201117 14:48:04.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.816" endtime="20201117 14:48:04.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.814" endtime="20201117 14:48:04.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.811" endtime="20201117 14:48:04.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.440" endtime="20201117 14:48:04.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.438" endtime="20201117 14:48:04.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.438" endtime="20201117 14:48:04.837"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.839" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.847" endtime="20201117 14:48:04.867"></status>
</kw>
<msg timestamp="20201117 14:48:04.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.845" endtime="20201117 14:48:04.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.869" endtime="20201117 14:48:04.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.871" endtime="20201117 14:48:04.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.843" endtime="20201117 14:48:04.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.841" endtime="20201117 14:48:04.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.880" endtime="20201117 14:48:05.167"></status>
</kw>
<msg timestamp="20201117 14:48:05.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:04.879" endtime="20201117 14:48:05.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:05.171" endtime="20201117 14:48:05.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.179" endtime="20201117 14:48:05.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.876" endtime="20201117 14:48:05.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.874" endtime="20201117 14:48:05.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.186" level="INFO">${RESULT} = [{'time': 0.021746556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.705600000000161e-05, 'source_diff': 9.705600000000161e-05}, {'time': 0.021849556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:05.183" endtime="20201117 14:48:05.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.199" level="INFO">${ACCURACY} = {'diff': [9.705600000000161e-05, 9.706999999999771e-05, 9.691600000000244e-05, 9.711199999999989e-05, 9.618000000000126e-05, 9.655499999999817e-05, 9.633300000000053e-05, 9.613899999999856e-05, 9.7054...</msg>
<status status="PASS" starttime="20201117 14:48:05.187" endtime="20201117 14:48:05.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.204" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.203" endtime="20201117 14:48:05.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.206" level="INFO">VALUE: [9.705600000000161e-05, 9.706999999999771e-05, 9.691600000000244e-05, 9.711199999999989e-05, 9.618000000000126e-05, 9.655499999999817e-05, 9.633300000000053e-05, 9.613899999999856e-05, 9.705499999999867e-05, 9.709700000000085e-05, 9.651399999999893e-05, 9.708399999999728e-05, 9.645900000000013e-05, 9.647200000000022e-05, 9.636099999999967e-05, 9.644500000000056e-05, 9.615200000000212e-05, 9.631900000000096e-05, 9.688899999999931e-05, 9.642999999999805e-05, 9.701399999999943e-05, 9.694400000000158e-05, 9.663900000000253e-05, 9.626399999999868e-05, 9.690299999999888e-05, 9.68340000000005e-05, 9.683399999999703e-05, 9.68470000000006e-05, 9.699999999999986e-05, 9.633300000000053e-05, 9.648699999999927e-05, 9.620799999999693e-05, 9.701399999999943e-05, 9.645800000000065e-05, 9.61660000000017e-05, 9.681899999999799e-05, 9.692999999999855e-05, 9.669500000000081e-05, 9.688900000000278e-05, 9.709699999999738e-05, 9.624999999999911e-05, 9.651399999999893e-05, 9.669500000000081e-05, 9.658300000000078e-05, 9.622199999999997e-05, 9.679099999999885e-05, 9.612499999999899e-05, 9.677800000000222e-05, 9.624999999999911e-05, 9.613899999999856e-05]</msg>
<status status="PASS" starttime="20201117 14:48:05.205" endtime="20201117 14:48:05.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.200" endtime="20201117 14:48:05.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.209" endtime="20201117 14:48:05.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.213" endtime="20201117 14:48:05.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.211" endtime="20201117 14:48:05.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.208" endtime="20201117 14:48:05.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.839" endtime="20201117 14:48:05.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.838" endtime="20201117 14:48:05.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.837" endtime="20201117 14:48:05.234"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.236" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.244" endtime="20201117 14:48:05.265"></status>
</kw>
<msg timestamp="20201117 14:48:05.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.243" endtime="20201117 14:48:05.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.267" endtime="20201117 14:48:05.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.269" endtime="20201117 14:48:05.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.240" endtime="20201117 14:48:05.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.238" endtime="20201117 14:48:05.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.278" endtime="20201117 14:48:05.563"></status>
</kw>
<msg timestamp="20201117 14:48:05.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.277" endtime="20201117 14:48:05.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.567" endtime="20201117 14:48:05.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.575" endtime="20201117 14:48:05.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.274" endtime="20201117 14:48:05.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.273" endtime="20201117 14:48:05.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.581" level="INFO">${RESULT} = [{'time': 0.021953181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.737500000000024e-05, 'source_diff': 9.737500000000024e-05}, {'time': 0.022054208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:05.578" endtime="20201117 14:48:05.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.595" level="INFO">${ACCURACY} = {'diff': [9.737500000000024e-05, 9.733299999999806e-05, 9.745800000000165e-05, 9.719399999999837e-05, 9.740300000000285e-05, 9.745800000000165e-05, 9.782000000000193e-05, 9.737500000000024e-05, 9.7193...</msg>
<status status="PASS" starttime="20201117 14:48:05.582" endtime="20201117 14:48:05.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.599" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.598" endtime="20201117 14:48:05.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.602" level="INFO">VALUE: [9.737500000000024e-05, 9.733299999999806e-05, 9.745800000000165e-05, 9.719399999999837e-05, 9.740300000000285e-05, 9.745800000000165e-05, 9.782000000000193e-05, 9.737500000000024e-05, 9.719399999999837e-05, 9.733399999999753e-05, 9.794500000000206e-05, 9.758400000000125e-05, 9.79860000000013e-05, 9.770899999999791e-05, 9.713900000000303e-05, 9.727699999999978e-05, 9.780499999999942e-05, 9.740299999999938e-05, 9.733300000000153e-05, 9.815300000000013e-05, 9.762499999999702e-05, 9.801399999999696e-05, 9.758399999999778e-05, 9.770900000000138e-05, 9.769500000000181e-05, 9.731999999999796e-05, 9.744499999999809e-05, 9.795899999999816e-05, 9.737500000000024e-05, 9.775000000000061e-05, 9.798599999999782e-05, 9.777799999999975e-05, 9.763900000000006e-05, 9.761100000000092e-05, 9.729199999999882e-05, 9.769500000000181e-05, 9.808399999999828e-05, 9.723600000000054e-05, 9.713900000000303e-05, 9.75279999999995e-05, 9.719499999999784e-05, 9.750000000000036e-05, 9.737500000000024e-05, 9.801400000000043e-05, 9.783300000000203e-05, 9.786100000000117e-05, 9.806899999999924e-05, 9.761100000000092e-05, 9.712499999999999e-05, 9.765299999999963e-05]</msg>
<status status="PASS" starttime="20201117 14:48:05.600" endtime="20201117 14:48:05.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.596" endtime="20201117 14:48:05.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.605" endtime="20201117 14:48:05.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.608" endtime="20201117 14:48:05.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.607" endtime="20201117 14:48:05.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.603" endtime="20201117 14:48:05.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.237" endtime="20201117 14:48:05.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.235" endtime="20201117 14:48:05.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.234" endtime="20201117 14:48:05.629"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.631" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.640" endtime="20201117 14:48:05.660"></status>
</kw>
<msg timestamp="20201117 14:48:05.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.638" endtime="20201117 14:48:05.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.662" endtime="20201117 14:48:05.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.664" endtime="20201117 14:48:05.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.636" endtime="20201117 14:48:05.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.633" endtime="20201117 14:48:05.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.673" endtime="20201117 14:48:05.958"></status>
</kw>
<msg timestamp="20201117 14:48:05.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.672" endtime="20201117 14:48:05.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.963" endtime="20201117 14:48:05.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.971" endtime="20201117 14:48:05.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.669" endtime="20201117 14:48:05.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.668" endtime="20201117 14:48:05.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.977" level="INFO">${RESULT} = [{'time': 0.022397583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.830499999999992e-05, 'source_diff': 9.830499999999992e-05}, {'time': 0.022500597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:05.974" endtime="20201117 14:48:05.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.991" level="INFO">${ACCURACY} = {'diff': [9.830499999999992e-05, 9.851400000000093e-05, 9.81799999999998e-05, 9.844399999999962e-05, 9.845799999999919e-05, 9.901399999999796e-05, 9.913900000000156e-05, 9.837500000000124e-05, 9.88340...</msg>
<status status="PASS" starttime="20201117 14:48:05.978" endtime="20201117 14:48:05.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.995" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.994" endtime="20201117 14:48:05.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.997" level="INFO">VALUE: [9.830499999999992e-05, 9.851400000000093e-05, 9.81799999999998e-05, 9.844399999999962e-05, 9.845799999999919e-05, 9.901399999999796e-05, 9.913900000000156e-05, 9.837500000000124e-05, 9.88340000000025e-05, 9.856899999999974e-05, 9.84860000000018e-05, 9.863900000000106e-05, 9.908299999999981e-05, 9.845799999999919e-05, 9.855500000000017e-05, 9.884699999999913e-05, 9.908299999999981e-05, 9.826400000000068e-05, 9.873599999999857e-05, 9.908299999999981e-05, 9.906999999999971e-05, 9.820899999999841e-05, 9.836100000000167e-05, 9.869499999999934e-05, 9.898599999999882e-05, 9.826399999999721e-05, 9.87080000000029e-05, 9.881899999999999e-05, 9.85410000000006e-05, 9.837500000000124e-05, 9.827800000000025e-05, 9.911100000000242e-05, 9.85280000000005e-05, 9.894499999999959e-05, 9.833399999999853e-05, 9.869399999999987e-05, 9.862499999999802e-05, 9.829199999999982e-05, 9.89999999999984e-05, 9.869399999999987e-05, 9.850000000000136e-05, 9.861099999999845e-05, 9.845799999999919e-05, 9.820899999999841e-05, 9.831899999999949e-05, 9.818099999999927e-05, 9.89999999999984e-05, 9.8334000000002e-05, 9.829199999999982e-05, 9.872299999999848e-05]</msg>
<status status="PASS" starttime="20201117 14:48:05.996" endtime="20201117 14:48:05.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.991" endtime="20201117 14:48:05.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.001" endtime="20201117 14:48:06.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.004" endtime="20201117 14:48:06.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.003" endtime="20201117 14:48:06.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.999" endtime="20201117 14:48:06.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.632" endtime="20201117 14:48:06.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.630" endtime="20201117 14:48:06.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.629" endtime="20201117 14:48:06.031"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.034" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.042" endtime="20201117 14:48:06.063"></status>
</kw>
<msg timestamp="20201117 14:48:06.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.040" endtime="20201117 14:48:06.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.065" endtime="20201117 14:48:06.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.067" endtime="20201117 14:48:06.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.038" endtime="20201117 14:48:06.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.036" endtime="20201117 14:48:06.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.076" endtime="20201117 14:48:06.361"></status>
</kw>
<msg timestamp="20201117 14:48:06.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029142611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029242139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.074" endtime="20201117 14:48:06.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029142611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029242139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.366" endtime="20201117 14:48:06.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.374" endtime="20201117 14:48:06.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.072" endtime="20201117 14:48:06.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.070" endtime="20201117 14:48:06.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.380" level="INFO">${RESULT} = [{'time': 0.029242139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.95280000000015e-05, 'source_diff': 9.95280000000015e-05}, {'time': 0.029345153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:06.377" endtime="20201117 14:48:06.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.395" level="INFO">${ACCURACY} = {'diff': [9.95280000000015e-05, 0.00010001399999999896, 9.911100000000242e-05, 9.947299999999923e-05, 9.951399999999846e-05, 0.00010012500000000299, 9.955500000000117e-05, 9.926400000000168e-05, 9.917...</msg>
<status status="PASS" starttime="20201117 14:48:06.381" endtime="20201117 14:48:06.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.399" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.398" endtime="20201117 14:48:06.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.402" level="INFO">VALUE: [9.95280000000015e-05, 0.00010001399999999896, 9.911100000000242e-05, 9.947299999999923e-05, 9.951399999999846e-05, 0.00010012500000000299, 9.955500000000117e-05, 9.926400000000168e-05, 9.917999999999733e-05, 9.919400000000037e-05, 0.0001000419999999981, 9.919400000000037e-05, 9.990300000000188e-05, 9.931999999999996e-05, 9.993099999999755e-05, 9.943100000000052e-05, 9.931999999999996e-05, 0.0001000410000000021, 9.941700000000095e-05, 0.00010002699999999906, 9.945800000000019e-05, 9.984700000000013e-05, 9.956900000000074e-05, 9.92359999999956e-05, 9.926399999999475e-05, 9.937499999999877e-05, 9.979200000000132e-05, 9.997200000000372e-05, 9.918100000000374e-05, 9.950000000000236e-05, 9.98609999999997e-05, 9.961099999999945e-05, 9.976299999999577e-05, 9.976399999999525e-05, 9.962500000000596e-05, 9.947200000000322e-05, 9.962500000000596e-05, 9.958300000000031e-05, 9.92080000000034e-05, 0.00010005600000000114, 9.99860000000033e-05, 0.00010007000000000071, 9.934699999999963e-05, 9.998700000000277e-05, 0.00010012499999999952, 9.962499999999902e-05, 9.92080000000034e-05, 9.995799999999722e-05, 9.955500000000117e-05, 9.975000000000261e-05]</msg>
<status status="PASS" starttime="20201117 14:48:06.401" endtime="20201117 14:48:06.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.396" endtime="20201117 14:48:06.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.406" endtime="20201117 14:48:06.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.409" endtime="20201117 14:48:06.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.407" endtime="20201117 14:48:06.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.404" endtime="20201117 14:48:06.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.035" endtime="20201117 14:48:06.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.033" endtime="20201117 14:48:06.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.032" endtime="20201117 14:48:06.430"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.432" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.440" endtime="20201117 14:48:06.461"></status>
</kw>
<msg timestamp="20201117 14:48:06.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.439" endtime="20201117 14:48:06.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.463" endtime="20201117 14:48:06.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.465" endtime="20201117 14:48:06.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.436" endtime="20201117 14:48:06.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.434" endtime="20201117 14:48:06.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.474" endtime="20201117 14:48:06.759"></status>
</kw>
<msg timestamp="20201117 14:48:06.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021715708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021816819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.473" endtime="20201117 14:48:06.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021715708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021816819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.763" endtime="20201117 14:48:06.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.771" endtime="20201117 14:48:06.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.470" endtime="20201117 14:48:06.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.468" endtime="20201117 14:48:06.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.777" level="INFO">${RESULT} = [{'time': 0.021816819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010111100000000095, 'source_diff': 0.00010111100000000095}, {'time': 0.021921819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:06.774" endtime="20201117 14:48:06.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.791" level="INFO">${ACCURACY} = {'diff': [0.00010111100000000095, 0.00010108299999999834, 0.00010076399999999971, 0.00010109699999999791, 0.0001008610000000007, 0.00010026399999999921, 0.0001008610000000007, 0.00010020800000000094, ...</msg>
<status status="PASS" starttime="20201117 14:48:06.779" endtime="20201117 14:48:06.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.795" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.794" endtime="20201117 14:48:06.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.798" level="INFO">VALUE: [0.00010111100000000095, 0.00010108299999999834, 0.00010076399999999971, 0.00010109699999999791, 0.0001008610000000007, 0.00010026399999999921, 0.0001008610000000007, 0.00010020800000000094, 0.00010038899999999934, 0.00010070900000000091, 0.00010057000000000121, 0.000100819999999998, 0.00010069499999999787, 0.00010040199999999944, 0.00010082000000000146, 0.00010051399999999946, 0.00010020800000000094, 0.00010048600000000033, 0.00010098599999999736, 0.00010012499999999952, 0.00010093099999999855, 0.00010069499999999787, 0.0001008480000000006, 0.00010048600000000033, 0.00010062500000000002, 0.00010076399999999971, 0.00010094500000000159, 0.00010058300000000131, 0.00010058300000000131, 0.00010059699999999741, 0.00010067999999999883, 0.00010081900000000199, 0.00010102799999999953, 0.00010075000000000014, 0.00010109699999999791, 0.0001010000000000004, 0.00010075000000000014, 0.00010090300000000288, 0.00010088899999999984, 0.00010091699999999898, 0.00010026399999999921, 0.00010090299999999941, 0.0001008610000000007, 0.00010080499999999895, 0.00010056900000000174, 0.00010012499999999952, 0.00010045800000000119, 0.00010030599999999792, 0.00010108299999999834, 0.00010106999999999824]</msg>
<status status="PASS" starttime="20201117 14:48:06.796" endtime="20201117 14:48:06.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.791" endtime="20201117 14:48:06.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.801" endtime="20201117 14:48:06.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.804" endtime="20201117 14:48:06.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.803" endtime="20201117 14:48:06.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.799" endtime="20201117 14:48:06.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.433" endtime="20201117 14:48:06.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.431" endtime="20201117 14:48:06.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.430" endtime="20201117 14:48:06.825"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.828" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.836" endtime="20201117 14:48:06.856"></status>
</kw>
<msg timestamp="20201117 14:48:06.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.834" endtime="20201117 14:48:06.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.858" endtime="20201117 14:48:06.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.860" endtime="20201117 14:48:06.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.832" endtime="20201117 14:48:06.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.830" endtime="20201117 14:48:06.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.869" endtime="20201117 14:48:07.155"></status>
</kw>
<msg timestamp="20201117 14:48:07.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.868" endtime="20201117 14:48:07.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.159" endtime="20201117 14:48:07.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.167" endtime="20201117 14:48:07.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.865" endtime="20201117 14:48:07.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.864" endtime="20201117 14:48:07.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.174" level="INFO">${RESULT} = [{'time': 0.021980375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010190300000000041, 'source_diff': 0.00010190300000000041}, {'time': 0.022085389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:07.171" endtime="20201117 14:48:07.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.187" level="INFO">${ACCURACY} = {'diff': [0.00010190300000000041, 0.00010138900000000034, 0.00010206999999999924, 0.00010197300000000173, 0.00010152800000000003, 0.00010205599999999967, 0.00010158299999999884, 0.00010197299999999826...</msg>
<status status="PASS" starttime="20201117 14:48:07.175" endtime="20201117 14:48:07.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.192" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.191" endtime="20201117 14:48:07.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.194" level="INFO">VALUE: [0.00010190300000000041, 0.00010138900000000034, 0.00010206999999999924, 0.00010197300000000173, 0.00010152800000000003, 0.00010205599999999967, 0.00010158299999999884, 0.00010197299999999826, 0.0001016939999999994, 0.00010131899999999902, 0.00010184699999999866, 0.00010191699999999998, 0.0001020000000000014, 0.00010161099999999798, 0.00010133300000000206, 0.00010156900000000274, 0.00010206999999999924, 0.00010113900000000009, 0.00010206999999999924, 0.00010202700000000106, 0.00010175000000000115, 0.00010198600000000183, 0.00010133400000000153, 0.00010176400000000071, 0.00010193000000000008, 0.00010140299999999991, 0.00010123700000000055, 0.00010133399999999806, 0.00010119500000000184, 0.00010194499999999912, 0.00010213900000000109, 0.0001018060000000029, 0.00010152800000000003, 0.00010213900000000109, 0.00010169400000000287, 0.00010179100000000038, 0.0001020420000000001, 0.00010180499999999995, 0.00010131899999999902, 0.00010127799999999978, 0.00010130599999999892, 0.00010175000000000115, 0.0001020000000000014, 0.00010169500000000234, 0.00010169500000000234, 0.00010193000000000008, 0.00010195799999999922, 0.00010187500000000127, 0.00010188900000000084, 0.0001020000000000014]</msg>
<status status="PASS" starttime="20201117 14:48:07.193" endtime="20201117 14:48:07.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.188" endtime="20201117 14:48:07.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.197" endtime="20201117 14:48:07.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.201" endtime="20201117 14:48:07.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.199" endtime="20201117 14:48:07.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.196" endtime="20201117 14:48:07.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.828" endtime="20201117 14:48:07.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.826" endtime="20201117 14:48:07.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.826" endtime="20201117 14:48:07.222"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.224" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.232" endtime="20201117 14:48:07.253"></status>
</kw>
<msg timestamp="20201117 14:48:07.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.230" endtime="20201117 14:48:07.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.254" endtime="20201117 14:48:07.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.257" endtime="20201117 14:48:07.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.228" endtime="20201117 14:48:07.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.226" endtime="20201117 14:48:07.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.266" endtime="20201117 14:48:07.551"></status>
</kw>
<msg timestamp="20201117 14:48:07.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.264" endtime="20201117 14:48:07.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.555" endtime="20201117 14:48:07.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.564" endtime="20201117 14:48:07.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.261" endtime="20201117 14:48:07.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.260" endtime="20201117 14:48:07.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.570" level="INFO">${RESULT} = [{'time': 0.021865625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010276399999999825, 'source_diff': 0.00010276399999999825}, {'time': 0.021973639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:07.567" endtime="20201117 14:48:07.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.583" level="INFO">${ACCURACY} = {'diff': [0.00010276399999999825, 0.00010276399999999825, 0.0001021809999999998, 0.00010295799999999675, 0.00010288899999999837, 0.0001026810000000003, 0.00010308300000000034, 0.00010245799999999972, ...</msg>
<status status="PASS" starttime="20201117 14:48:07.571" endtime="20201117 14:48:07.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.588" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.587" endtime="20201117 14:48:07.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.590" level="INFO">VALUE: [0.00010276399999999825, 0.00010276399999999825, 0.0001021809999999998, 0.00010295799999999675, 0.00010288899999999837, 0.0001026810000000003, 0.00010308300000000034, 0.00010245799999999972, 0.00010262499999999855, 0.00010249999999999843, 0.00010263899999999812, 0.00010238900000000134, 0.00010294399999999718, 0.00010237500000000177, 0.0001027359999999991, 0.00010234699999999916, 0.00010308399999999981, 0.00010263900000000159, 0.00010223700000000155, 0.00010244400000000015, 0.00010240299999999744, 0.00010225000000000165, 0.00010294400000000065, 0.00010220799999999947, 0.00010236099999999873, 0.0001028749999999988, 0.00010229200000000035, 0.00010294500000000012, 0.00010291700000000098, 0.0001023749999999983, 0.00010212500000000152, 0.00010307000000000024, 0.00010308300000000034, 0.00010298599999999936, 0.00010265299999999769, 0.00010293000000000108, 0.00010238899999999787, 0.00010283300000000009, 0.0001028749999999988, 0.00010283399999999956, 0.00010265300000000116, 0.00010277800000000128, 0.00010247299999999876, 0.00010295899999999969, 0.00010226400000000122, 0.00010251299999999852, 0.00010279099999999791, 0.00010280500000000095, 0.00010281900000000052, 0.00010261099999999898]</msg>
<status status="PASS" starttime="20201117 14:48:07.589" endtime="20201117 14:48:07.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.584" endtime="20201117 14:48:07.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.593" endtime="20201117 14:48:07.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.597" endtime="20201117 14:48:07.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.595" endtime="20201117 14:48:07.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.592" endtime="20201117 14:48:07.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.225" endtime="20201117 14:48:07.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.223" endtime="20201117 14:48:07.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.222" endtime="20201117 14:48:07.618"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.620" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.628" endtime="20201117 14:48:07.649"></status>
</kw>
<msg timestamp="20201117 14:48:07.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.627" endtime="20201117 14:48:07.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.651" endtime="20201117 14:48:07.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.653" endtime="20201117 14:48:07.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.624" endtime="20201117 14:48:07.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.622" endtime="20201117 14:48:07.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.663" endtime="20201117 14:48:07.949"></status>
</kw>
<msg timestamp="20201117 14:48:07.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.661" endtime="20201117 14:48:07.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.953" endtime="20201117 14:48:07.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.961" endtime="20201117 14:48:07.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.658" endtime="20201117 14:48:07.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.656" endtime="20201117 14:48:07.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.968" level="INFO">${RESULT} = [{'time': 0.022760736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010370800000000097, 'source_diff': 0.00010370800000000097}, {'time': 0.02286775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:48:07.964" endtime="20201117 14:48:07.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.982" level="INFO">${ACCURACY} = {'diff': [0.00010370800000000097, 0.0001031940000000009, 0.0001038749999999998, 0.00010338899999999887, 0.00010391699999999851, 0.00010413899999999962, 0.00010408400000000081, 0.00010366599999999879, ...</msg>
<status status="PASS" starttime="20201117 14:48:07.969" endtime="20201117 14:48:07.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.986" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.986" endtime="20201117 14:48:07.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.989" level="INFO">VALUE: [0.00010370800000000097, 0.0001031940000000009, 0.0001038749999999998, 0.00010338899999999887, 0.00010391699999999851, 0.00010413899999999962, 0.00010408400000000081, 0.00010366599999999879, 0.00010374999999999968, 0.00010380499999999848, 0.00010327799999999832, 0.0001033749999999993, 0.0001038749999999998, 0.00010340299999999844, 0.0001031810000000008, 0.00010408400000000081, 0.000103820000000001, 0.00010386100000000023, 0.0001036949999999974, 0.00010412500000000005, 0.00010374999999999968, 0.00010338900000000234, 0.00010358299999999737, 0.00010374999999999968, 0.00010413899999999962, 0.00010352799999999857, 0.00010377800000000229, 0.00010324999999999918, 0.00010402800000000254, 0.00010324999999999918, 0.00010338899999999887, 0.00010404099999999916, 0.00010384700000000066, 0.0001040139999999995, 0.00010362499999999955, 0.00010418099999999833, 0.00010377799999999882, 0.00010358300000000084, 0.0001031940000000009, 0.00010386100000000023, 0.00010344500000000062, 0.0001035559999999977, 0.0001033619999999992, 0.00010394500000000112, 0.0001033200000000005, 0.00010338800000000287, 0.00010352699999999909, 0.00010329200000000135, 0.00010313899999999862, 0.00010392999999999861]</msg>
<status status="PASS" starttime="20201117 14:48:07.988" endtime="20201117 14:48:07.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.983" endtime="20201117 14:48:07.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.992" endtime="20201117 14:48:07.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.995" endtime="20201117 14:48:08.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.994" endtime="20201117 14:48:08.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.990" endtime="20201117 14:48:08.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.621" endtime="20201117 14:48:08.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.619" endtime="20201117 14:48:08.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.618" endtime="20201117 14:48:08.016"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.019" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.027" endtime="20201117 14:48:08.047"></status>
</kw>
<msg timestamp="20201117 14:48:08.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.025" endtime="20201117 14:48:08.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.048" endtime="20201117 14:48:08.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.051" endtime="20201117 14:48:08.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.023" endtime="20201117 14:48:08.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.021" endtime="20201117 14:48:08.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.060" endtime="20201117 14:48:08.346"></status>
</kw>
<msg timestamp="20201117 14:48:08.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.059" endtime="20201117 14:48:08.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.350" endtime="20201117 14:48:08.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.358" endtime="20201117 14:48:08.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.056" endtime="20201117 14:48:08.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.055" endtime="20201117 14:48:08.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.364" level="INFO">${RESULT} = [{'time': 0.021996944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010477700000000034, 'source_diff': 0.00010477700000000034}, {'time': 0.022104, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:48:08.361" endtime="20201117 14:48:08.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.378" level="INFO">${ACCURACY} = {'diff': [0.00010477700000000034, 0.000104514, 0.000104820000000002, 0.00010472200000000154, 0.00010511100000000148, 0.00010413899999999962, 0.00010492999999999961, 0.00010481899999999905, 0.000104416...</msg>
<status status="PASS" starttime="20201117 14:48:08.365" endtime="20201117 14:48:08.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.382" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.381" endtime="20201117 14:48:08.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.384" level="INFO">VALUE: [0.00010477700000000034, 0.000104514, 0.000104820000000002, 0.00010472200000000154, 0.00010511100000000148, 0.00010413899999999962, 0.00010492999999999961, 0.00010481899999999905, 0.00010441699999999901, 0.00010412500000000005, 0.00010493099999999908, 0.00010500000000000093, 0.00010438899999999987, 0.00010425000000000018, 0.00010456999999999828, 0.00010444399999999868, 0.00010480499999999948, 0.00010475000000000068, 0.00010483300000000209, 0.0001043750000000003, 0.0001045689999999988, 0.000104514, 0.00010461100000000098, 0.0001050140000000005, 0.00010444500000000162, 0.00010440300000000291, 0.00010416599999999929, 0.000104820000000002, 0.00010472200000000154, 0.00010417999999999886, 0.0001043750000000003, 0.0001047079999999985, 0.00010477799999999982, 0.00010484700000000166, 0.0001050140000000005, 0.00010450000000000043, 0.00010415299999999919, 0.000104514, 0.00010422300000000051, 0.00010457000000000174, 0.00010455499999999923, 0.00010433299999999812, 0.00010431900000000202, 0.00010497300000000126, 0.00010472199999999807, 0.0001046940000000024, 0.00010487499999999733, 0.00010465299999999969, 0.0001043200000000015, 0.00010425000000000018]</msg>
<status status="PASS" starttime="20201117 14:48:08.383" endtime="20201117 14:48:08.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.379" endtime="20201117 14:48:08.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.388" endtime="20201117 14:48:08.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.391" endtime="20201117 14:48:08.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.389" endtime="20201117 14:48:08.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.386" endtime="20201117 14:48:08.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.019" endtime="20201117 14:48:08.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.018" endtime="20201117 14:48:08.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.017" endtime="20201117 14:48:08.412"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.414" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.423" endtime="20201117 14:48:08.444"></status>
</kw>
<msg timestamp="20201117 14:48:08.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.421" endtime="20201117 14:48:08.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.445" endtime="20201117 14:48:08.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.447" endtime="20201117 14:48:08.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.419" endtime="20201117 14:48:08.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.416" endtime="20201117 14:48:08.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.456" endtime="20201117 14:48:08.741"></status>
</kw>
<msg timestamp="20201117 14:48:08.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02256225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022667556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:08.455" endtime="20201117 14:48:08.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02256225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022667556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:08.746" endtime="20201117 14:48:08.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.754" endtime="20201117 14:48:08.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.452" endtime="20201117 14:48:08.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.451" endtime="20201117 14:48:08.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.760" level="INFO">${RESULT} = [{'time': 0.022667556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010530599999999946, 'source_diff': 0.00010530599999999946}, {'time': 0.022777569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:08.757" endtime="20201117 14:48:08.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.773" level="INFO">${ACCURACY} = {'diff': [0.00010530599999999946, 0.00010576300000000177, 0.0001052360000000016, 0.00010533299999999912, 0.00010513899999999715, 0.00010527800000000032, 0.00010604199999999717, 0.00010558399999999885,...</msg>
<status status="PASS" starttime="20201117 14:48:08.761" endtime="20201117 14:48:08.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.778" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.777" endtime="20201117 14:48:08.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.780" level="INFO">VALUE: [0.00010530599999999946, 0.00010576300000000177, 0.0001052360000000016, 0.00010533299999999912, 0.00010513899999999715, 0.00010527800000000032, 0.00010604199999999717, 0.00010558399999999885, 0.00010593100000000008, 0.00010530600000000293, 0.00010547299999999829, 0.00010580599999999996, 0.00010558299999999937, 0.0001055689999999998, 0.00010544399999999968, 0.00010568099999999983, 0.00010586099999999876, 0.00010525000000000118, 0.00010613900000000162, 0.00010577700000000134, 0.00010561100000000198, 0.00010588900000000137, 0.00010558399999999885, 0.00010545799999999925, 0.00010512500000000105, 0.00010518099999999933, 0.00010602700000000159, 0.00010523599999999814, 0.0001055689999999998, 0.00010529199999999989, 0.0001058750000000018, 0.00010538900000000087, 0.00010552800000000057, 0.00010612499999999858, 0.00010580500000000048, 0.0001060279999999976, 0.00010572200000000254, 0.00010544499999999915, 0.00010581900000000005, 0.0001055689999999998, 0.00010554100000000066, 0.0001060140000000015, 0.00010597199999999932, 0.00010594400000000018, 0.00010537499999999783, 0.00010606999999999978, 0.00010531999999999903, 0.00010544499999999915, 0.0001051949999999989, 0.00010572299999999854]</msg>
<status status="PASS" starttime="20201117 14:48:08.779" endtime="20201117 14:48:08.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.774" endtime="20201117 14:48:08.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.783" endtime="20201117 14:48:08.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.787" endtime="20201117 14:48:08.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.785" endtime="20201117 14:48:08.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.781" endtime="20201117 14:48:08.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.415" endtime="20201117 14:48:08.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.413" endtime="20201117 14:48:08.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.412" endtime="20201117 14:48:08.808"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.810" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.819" endtime="20201117 14:48:08.840"></status>
</kw>
<msg timestamp="20201117 14:48:08.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.817" endtime="20201117 14:48:08.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.841" endtime="20201117 14:48:08.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.844" endtime="20201117 14:48:08.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.814" endtime="20201117 14:48:08.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.812" endtime="20201117 14:48:08.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.853" endtime="20201117 14:48:09.138"></status>
</kw>
<msg timestamp="20201117 14:48:09.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.851" endtime="20201117 14:48:09.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.142" endtime="20201117 14:48:09.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.151" endtime="20201117 14:48:09.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.849" endtime="20201117 14:48:09.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.847" endtime="20201117 14:48:09.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.157" level="INFO">${RESULT} = [{'time': 0.021992847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010687499999999933, 'source_diff': 0.00010687499999999933}, {'time': 0.022102847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:09.154" endtime="20201117 14:48:09.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.170" level="INFO">${ACCURACY} = {'diff': [0.00010687499999999933, 0.00010656899999999733, 0.00010707000000000078, 0.00010626399999999828, 0.0001068889999999989, 0.00010680600000000096, 0.00010622300000000251, 0.00010666700000000126,...</msg>
<status status="PASS" starttime="20201117 14:48:09.158" endtime="20201117 14:48:09.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.175" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.174" endtime="20201117 14:48:09.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.177" level="INFO">VALUE: [0.00010687499999999933, 0.00010656899999999733, 0.00010707000000000078, 0.00010626399999999828, 0.0001068889999999989, 0.00010680600000000096, 0.00010622300000000251, 0.00010666700000000126, 0.00010626400000000175, 0.00010658399999999985, 0.0001070140000000025, 0.0001065690000000008, 0.00010661099999999951, 0.00010688900000000237, 0.0001067499999999992, 0.00010647199999999982, 0.00010676399999999878, 0.0001061949999999999, 0.00010632000000000003, 0.00010626399999999828, 0.00010709799999999992, 0.00010645800000000025, 0.00010698599999999989, 0.0001067080000000005, 0.00010698599999999989, 0.00010654100000000166, 0.000106208, 0.00010676399999999878, 0.0001067080000000005, 0.00010672200000000007, 0.00010708400000000035, 0.00010698599999999989, 0.0001068889999999989, 0.00010709799999999992, 0.0001070829999999974, 0.00010713899999999915, 0.00010643000000000111, 0.00010666699999999779, 0.00010680500000000148, 0.0001065690000000008, 0.00010681900000000105, 0.00010687499999999933, 0.00010711100000000001, 0.00010700000000000293, 0.00010652800000000157, 0.00010630600000000046, 0.00010698599999999989, 0.00010680600000000096, 0.00010642999999999764, 0.00010708300000000087]</msg>
<status status="PASS" starttime="20201117 14:48:09.176" endtime="20201117 14:48:09.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.171" endtime="20201117 14:48:09.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.181" endtime="20201117 14:48:09.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.184" endtime="20201117 14:48:09.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.182" endtime="20201117 14:48:09.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.179" endtime="20201117 14:48:09.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.811" endtime="20201117 14:48:09.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.809" endtime="20201117 14:48:09.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.808" endtime="20201117 14:48:09.205"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.207" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.215" endtime="20201117 14:48:09.238"></status>
</kw>
<msg timestamp="20201117 14:48:09.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.214" endtime="20201117 14:48:09.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.239" endtime="20201117 14:48:09.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.242" endtime="20201117 14:48:09.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.211" endtime="20201117 14:48:09.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.209" endtime="20201117 14:48:09.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.250" endtime="20201117 14:48:09.536"></status>
</kw>
<msg timestamp="20201117 14:48:09.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022707792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.249" endtime="20201117 14:48:09.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022707792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.540" endtime="20201117 14:48:09.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.548" endtime="20201117 14:48:09.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.246" endtime="20201117 14:48:09.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.245" endtime="20201117 14:48:09.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.554" level="INFO">${RESULT} = [{'time': 0.022815181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001073889999999994, 'source_diff': 0.0001073889999999994}, {'time': 0.022925194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:09.551" endtime="20201117 14:48:09.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.569" level="INFO">${ACCURACY} = {'diff': [0.0001073889999999994, 0.00010749999999999996, 0.00010731900000000155, 0.00010809699999999797, 0.00010711100000000001, 0.00010776399999999978, 0.00010762500000000008, 0.00010776399999999978,...</msg>
<status status="PASS" starttime="20201117 14:48:09.555" endtime="20201117 14:48:09.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.573" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.572" endtime="20201117 14:48:09.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.576" level="INFO">VALUE: [0.0001073889999999994, 0.00010749999999999996, 0.00010731900000000155, 0.00010809699999999797, 0.00010711100000000001, 0.00010776399999999978, 0.00010762500000000008, 0.00010776399999999978, 0.00010736100000000026, 0.000107208999999997, 0.00010758400000000085, 0.0001073340000000006, 0.0001072499999999997, 0.00010751399999999953, 0.00010725000000000318, 0.00010769400000000193, 0.00010762500000000008, 0.00010801400000000003, 0.00010729200000000189, 0.0001077500000000002, 0.00010749999999999996, 0.00010723600000000014, 0.00010765199999999975, 0.00010738799999999993, 0.00010723699999999961, 0.00010770799999999803, 0.00010726399999999928, 0.00010729100000000241, 0.00010738900000000287, 0.00010765299999999922, 0.00010718099999999786, 0.00010762500000000008, 0.00010744500000000115, 0.0001075699999999978, 0.0001077500000000002, 0.00010798599999999742, 0.00010733299999999765, 0.0001075279999999991, 0.0001078889999999999, 0.00010713899999999915, 0.00010783299999999815, 0.00010741699999999854, 0.00010726399999999928, 0.00010776399999999978, 0.00010755599999999824, 0.00010805599999999874, 0.00010781999999999806, 0.00010740299999999897, 0.00010758300000000137, 0.00010777799999999935]</msg>
<status status="PASS" starttime="20201117 14:48:09.574" endtime="20201117 14:48:09.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.570" endtime="20201117 14:48:09.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.579" endtime="20201117 14:48:09.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.583" endtime="20201117 14:48:09.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.581" endtime="20201117 14:48:09.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.578" endtime="20201117 14:48:09.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.208" endtime="20201117 14:48:09.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.206" endtime="20201117 14:48:09.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.205" endtime="20201117 14:48:09.604"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.606" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.614" endtime="20201117 14:48:09.635"></status>
</kw>
<msg timestamp="20201117 14:48:09.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.612" endtime="20201117 14:48:09.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.637" endtime="20201117 14:48:09.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.639" endtime="20201117 14:48:09.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.610" endtime="20201117 14:48:09.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.608" endtime="20201117 14:48:09.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.648" endtime="20201117 14:48:09.934"></status>
</kw>
<msg timestamp="20201117 14:48:09.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.647" endtime="20201117 14:48:09.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.938" endtime="20201117 14:48:09.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.946" endtime="20201117 14:48:09.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.644" endtime="20201117 14:48:09.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.643" endtime="20201117 14:48:09.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.952" level="INFO">${RESULT} = [{'time': 0.021789597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010912500000000158, 'source_diff': 0.00010912500000000158}, {'time': 0.021901556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:09.949" endtime="20201117 14:48:09.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.965" level="INFO">${ACCURACY} = {'diff': [0.00010912500000000158, 0.00010876400000000078, 0.00010851300000000105, 0.00010862500000000108, 0.00010906899999999983, 0.0001083890000000004, 0.00010865300000000022, 0.00010854199999999967,...</msg>
<status status="PASS" starttime="20201117 14:48:09.953" endtime="20201117 14:48:09.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.970" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.969" endtime="20201117 14:48:09.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.972" level="INFO">VALUE: [0.00010912500000000158, 0.00010876400000000078, 0.00010851300000000105, 0.00010862500000000108, 0.00010906899999999983, 0.0001083890000000004, 0.00010865300000000022, 0.00010854199999999967, 0.00010837500000000083, 0.00010861100000000151, 0.00010840299999999997, 0.00010837500000000083, 0.0001090699999999993, 0.0001082500000000007, 0.00010836100000000126, 0.00010854100000000019, 0.00010893000000000014, 0.00010813900000000015, 0.00010915300000000072, 0.0001085280000000001, 0.00010834699999999822, 0.00010836100000000126, 0.00010837500000000083, 0.00010827799999999985, 0.00010905500000000026, 0.00010905500000000026, 0.0001082219999999981, 0.00010911100000000201, 0.00010826399999999681, 0.00010893000000000014, 0.00010844499999999868, 0.00010876400000000078, 0.00010862500000000108, 0.00010881899999999958, 0.00010832000000000203, 0.0001090280000000006, 0.00010881999999999906, 0.00010815299999999972, 0.00010824999999999724, 0.00010905500000000026, 0.00010842999999999964, 0.00010833299999999865, 0.00010906899999999983, 0.0001083890000000004, 0.0001085690000000028, 0.0001083890000000004, 0.0001088890000000009, 0.00010913900000000115, 0.00010890300000000047, 0.00010816700000000276]</msg>
<status status="PASS" starttime="20201117 14:48:09.971" endtime="20201117 14:48:09.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.966" endtime="20201117 14:48:09.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.976" endtime="20201117 14:48:09.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.979" endtime="20201117 14:48:09.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.977" endtime="20201117 14:48:09.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.974" endtime="20201117 14:48:09.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.607" endtime="20201117 14:48:09.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.605" endtime="20201117 14:48:10.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.604" endtime="20201117 14:48:10.000"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.002" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.010" endtime="20201117 14:48:10.032"></status>
</kw>
<msg timestamp="20201117 14:48:10.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.009" endtime="20201117 14:48:10.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.034" endtime="20201117 14:48:10.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.036" endtime="20201117 14:48:10.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.006" endtime="20201117 14:48:10.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.004" endtime="20201117 14:48:10.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.045" endtime="20201117 14:48:10.332"></status>
</kw>
<msg timestamp="20201117 14:48:10.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.043" endtime="20201117 14:48:10.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.336" endtime="20201117 14:48:10.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.345" endtime="20201117 14:48:10.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.041" endtime="20201117 14:48:10.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.039" endtime="20201117 14:48:10.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.351" level="INFO">${RESULT} = [{'time': 0.021947861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010954200000000067, 'source_diff': 0.00010954200000000067}, {'time': 0.022061889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.348" endtime="20201117 14:48:10.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.364" level="INFO">${ACCURACY} = {'diff': [0.00010954200000000067, 0.0001100830000000004, 0.00010984699999999972, 0.00010918100000000333, 0.00010965299999999775, 0.00010962499999999861, 0.0001095829999999999, 0.0001097630000000023, 0...</msg>
<status status="PASS" starttime="20201117 14:48:10.352" endtime="20201117 14:48:10.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.369" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.368" endtime="20201117 14:48:10.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.371" level="INFO">VALUE: [0.00010954200000000067, 0.0001100830000000004, 0.00010984699999999972, 0.00010918100000000333, 0.00010965299999999775, 0.00010962499999999861, 0.0001095829999999999, 0.0001097630000000023, 0.00010962500000000208, 0.00010933299999999965, 0.00011012499999999911, 0.00010987499999999886, 0.00010919399999999996, 0.00010931999999999956, 0.00010958399999999938, 0.00010980600000000049, 0.00010916599999999735, 0.00010994399999999724, 0.0001100700000000003, 0.00010952699999999815, 0.00010981900000000058, 0.00010951399999999806, 0.00010988899999999843, 0.0001095280000000011, 0.00010945799999999978, 0.00011006900000000083, 0.00010959800000000242, 0.00010941700000000054, 0.00010980600000000049, 0.0001098890000000019, 0.00010969399999999699, 0.00010919399999999996, 0.00010934699999999922, 0.00011013899999999868, 0.00010944400000000021, 0.00010937499999999836, 0.00010926399999999781, 0.00011005599999999727, 0.00011013899999999868, 0.0001091950000000029, 0.00010959699999999947, 0.00011008299999999693, 0.00010944499999999968, 0.00010920799999999953, 0.00010994400000000071, 0.00010931900000000008, 0.00010943000000000064, 0.00010950000000000196, 0.00010912499999999811, 0.0001095699999999998]</msg>
<status status="PASS" starttime="20201117 14:48:10.370" endtime="20201117 14:48:10.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.365" endtime="20201117 14:48:10.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.375" endtime="20201117 14:48:10.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.378" endtime="20201117 14:48:10.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.376" endtime="20201117 14:48:10.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.373" endtime="20201117 14:48:10.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.003" endtime="20201117 14:48:10.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.001" endtime="20201117 14:48:10.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.000" endtime="20201117 14:48:10.399"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.401" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.409" endtime="20201117 14:48:10.431"></status>
</kw>
<msg timestamp="20201117 14:48:10.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.408" endtime="20201117 14:48:10.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.433" endtime="20201117 14:48:10.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.435" endtime="20201117 14:48:10.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.405" endtime="20201117 14:48:10.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.403" endtime="20201117 14:48:10.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.444" endtime="20201117 14:48:10.730"></status>
</kw>
<msg timestamp="20201117 14:48:10.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.443" endtime="20201117 14:48:10.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021940014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.734" endtime="20201117 14:48:10.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.742" endtime="20201117 14:48:10.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.440" endtime="20201117 14:48:10.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.438" endtime="20201117 14:48:10.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.749" level="INFO">${RESULT} = [{'time': 0.021940014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011116700000000229, 'source_diff': 0.00011116700000000229}, {'time': 0.022055083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.746" endtime="20201117 14:48:10.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.762" level="INFO">${ACCURACY} = {'diff': [0.00011116700000000229, 0.00011088899999999943, 0.00011113899999999968, 0.00011040300000000197, 0.000110209, 0.00011044500000000068, 0.000110902999999999, 0.00011036099999999979, 0.000110180...</msg>
<status status="PASS" starttime="20201117 14:48:10.750" endtime="20201117 14:48:10.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.766" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.765" endtime="20201117 14:48:10.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.768" level="INFO">VALUE: [0.00011116700000000229, 0.00011088899999999943, 0.00011113899999999968, 0.00011040300000000197, 0.000110209, 0.00011044500000000068, 0.000110902999999999, 0.00011036099999999979, 0.00011018000000000139, 0.00011026400000000228, 0.00011106900000000183, 0.00011065299999999875, 0.00011074999999999974, 0.00011013899999999868, 0.00011099999999999999, 0.00011015299999999825, 0.00011061100000000004, 0.00011051299999999958, 0.00011102699999999965, 0.00011113900000000315, 0.00011083300000000115, 0.00011108299999999793, 0.00011073600000000017, 0.00011076399999999931, 0.00011074999999999974, 0.00011069500000000093, 0.00011073600000000017, 0.0001105700000000008, 0.00011061100000000004, 0.00011066700000000179, 0.00011109800000000045, 0.00011081899999999811, 0.00011111100000000054, 0.00011045799999999731, 0.0001105830000000009, 0.00011076399999999931, 0.00011065299999999875, 0.00011062500000000308, 0.00011049999999999949, 0.00011033400000000013, 0.0001102220000000001, 0.00011018000000000139, 0.00011083299999999768, 0.0001102630000000028, 0.00011034700000000022, 0.00011062499999999961, 0.00011037499999999936, 0.00011024999999999924, 0.00011101399999999956, 0.00011095800000000128]</msg>
<status status="PASS" starttime="20201117 14:48:10.767" endtime="20201117 14:48:10.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.763" endtime="20201117 14:48:10.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.772" endtime="20201117 14:48:10.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.775" endtime="20201117 14:48:10.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.774" endtime="20201117 14:48:10.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.770" endtime="20201117 14:48:10.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.402" endtime="20201117 14:48:10.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.400" endtime="20201117 14:48:10.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.399" endtime="20201117 14:48:10.797"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.799" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.807" endtime="20201117 14:48:10.829"></status>
</kw>
<msg timestamp="20201117 14:48:10.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.805" endtime="20201117 14:48:10.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.830" endtime="20201117 14:48:10.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.833" endtime="20201117 14:48:10.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.803" endtime="20201117 14:48:10.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.801" endtime="20201117 14:48:10.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.842" endtime="20201117 14:48:11.128"></status>
</kw>
<msg timestamp="20201117 14:48:11.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.841" endtime="20201117 14:48:11.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.132" endtime="20201117 14:48:11.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.140" endtime="20201117 14:48:11.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.838" endtime="20201117 14:48:11.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.836" endtime="20201117 14:48:11.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.146" level="INFO">${RESULT} = [{'time': 0.022686931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011161200000000052, 'source_diff': 0.00011161200000000052}, {'time': 0.022801944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:11.143" endtime="20201117 14:48:11.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.161" level="INFO">${ACCURACY} = {'diff': [0.00011161200000000052, 0.00011206899999999936, 0.00011144399999999874, 0.00011151400000000006, 0.0001115549999999993, 0.00011195800000000228, 0.00011188900000000043, 0.0001112220000000011, ...</msg>
<status status="PASS" starttime="20201117 14:48:11.147" endtime="20201117 14:48:11.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.166" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.164" endtime="20201117 14:48:11.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.168" level="INFO">VALUE: [0.00011161200000000052, 0.00011206899999999936, 0.00011144399999999874, 0.00011151400000000006, 0.0001115549999999993, 0.00011195800000000228, 0.00011188900000000043, 0.0001112220000000011, 0.00011141699999999907, 0.00011125000000000024, 0.00011177799999999988, 0.00011127800000000285, 0.00011202700000000065, 0.00011134699999999775, 0.00011145800000000178, 0.00011169399999999899, 0.00011197199999999838, 0.00011118100000000186, 0.00011127799999999938, 0.00011119500000000143, 0.00011147299999999735, 0.00011115299999999925, 0.00011212500000000111, 0.00011175000000000074, 0.00011113899999999968, 0.0001117770000000004, 0.00011165299999999975, 0.00011200000000000099, 0.0001114159999999996, 0.00011120800000000153, 0.00011113899999999968, 0.00011129200000000242, 0.00011188900000000043, 0.00011141699999999907, 0.00011123700000000014, 0.00011202800000000013, 0.00011158299999999843, 0.00011194399999999924, 0.00011150000000000049, 0.00011120800000000153, 0.00011200000000000099, 0.00011195799999999881, 0.00011188900000000043, 0.00011143100000000211, 0.00011186100000000129, 0.00011195899999999828, 0.00011176400000000031, 0.0001120549999999998, 0.00011138899999999993, 0.00011197200000000185]</msg>
<status status="PASS" starttime="20201117 14:48:11.167" endtime="20201117 14:48:11.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.162" endtime="20201117 14:48:11.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.172" endtime="20201117 14:48:11.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.176" endtime="20201117 14:48:11.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.174" endtime="20201117 14:48:11.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.170" endtime="20201117 14:48:11.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.799" endtime="20201117 14:48:11.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.798" endtime="20201117 14:48:11.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.797" endtime="20201117 14:48:11.197"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.199" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.212" endtime="20201117 14:48:11.233"></status>
</kw>
<msg timestamp="20201117 14:48:11.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.210" endtime="20201117 14:48:11.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.234" endtime="20201117 14:48:11.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.237" endtime="20201117 14:48:11.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.208" endtime="20201117 14:48:11.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.201" endtime="20201117 14:48:11.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.246" endtime="20201117 14:48:11.531"></status>
</kw>
<msg timestamp="20201117 14:48:11.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02673175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026844222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:11.244" endtime="20201117 14:48:11.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02673175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026844222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:11.535" endtime="20201117 14:48:11.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.543" endtime="20201117 14:48:11.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.242" endtime="20201117 14:48:11.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.240" endtime="20201117 14:48:11.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.550" level="INFO">${RESULT} = [{'time': 0.026844222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011247200000000235, 'source_diff': 0.00011247200000000235}, {'time': 0.026959236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:11.546" endtime="20201117 14:48:11.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.563" level="INFO">${ACCURACY} = {'diff': [0.00011247200000000235, 0.00011270799999999956, 0.00011252800000000063, 0.00011304199999999723, 0.00011224999999999777, 0.00011233399999999866, 0.00011287500000000186, 0.0001127359999999987,...</msg>
<status status="PASS" starttime="20201117 14:48:11.551" endtime="20201117 14:48:11.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.567" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.566" endtime="20201117 14:48:11.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.570" level="INFO">VALUE: [0.00011247200000000235, 0.00011270799999999956, 0.00011252800000000063, 0.00011304199999999723, 0.00011224999999999777, 0.00011233399999999866, 0.00011287500000000186, 0.0001127359999999987, 0.00011272199999999913, 0.00011311199999999855, 0.00011275000000000174, 0.00011294400000000024, 0.00011238900000000093, 0.00011208299999999893, 0.00011217999999999992, 0.00011229199999999995, 0.00011297199999999938, 0.00011227800000000038, 0.00011227800000000038, 0.00011299999999999852, 0.00011275000000000174, 0.00011281900000000011, 0.00011283299999999968, 0.00011237500000000136, 0.00011222199999999863, 0.00011226399999999734, 0.00011301399999999809, 0.00011311099999999907, 0.00011233399999999866, 0.00011248600000000192, 0.00011241700000000007, 0.00011283399999999916, 0.00011233299999999918, 0.00011250000000000149, 0.00011294400000000024, 0.00011295800000000328, 0.00011252800000000063, 0.00011252799999999716, 0.00011277800000000088, 0.00011236099999999832, 0.00011300000000000199, 0.00011263899999999771, 0.00011312500000000558, 0.00011252700000000115, 0.00011312499999999864, 0.00011252800000000063, 0.00011313899999999821, 0.00011230500000000004, 0.00011256899999999986, 0.00011234699999999875]</msg>
<status status="PASS" starttime="20201117 14:48:11.568" endtime="20201117 14:48:11.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.564" endtime="20201117 14:48:11.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.573" endtime="20201117 14:48:11.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.577" endtime="20201117 14:48:11.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.575" endtime="20201117 14:48:11.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.571" endtime="20201117 14:48:11.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.200" endtime="20201117 14:48:11.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.198" endtime="20201117 14:48:11.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.197" endtime="20201117 14:48:11.598"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.600" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.608" endtime="20201117 14:48:11.629"></status>
</kw>
<msg timestamp="20201117 14:48:11.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.607" endtime="20201117 14:48:11.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.631" endtime="20201117 14:48:11.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.633" endtime="20201117 14:48:11.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.604" endtime="20201117 14:48:11.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.602" endtime="20201117 14:48:11.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.642" endtime="20201117 14:48:11.928"></status>
</kw>
<msg timestamp="20201117 14:48:11.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.641" endtime="20201117 14:48:11.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.932" endtime="20201117 14:48:11.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.941" endtime="20201117 14:48:11.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.638" endtime="20201117 14:48:11.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.637" endtime="20201117 14:48:11.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.947" level="INFO">${RESULT} = [{'time': 0.021877319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011372200000000013, 'source_diff': 0.00011372200000000013}, {'time': 0.021994333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:11.944" endtime="20201117 14:48:11.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.960" level="INFO">${ACCURACY} = {'diff': [0.00011372200000000013, 0.0001140970000000005, 0.00011331899999999714, 0.00011338899999999846, 0.00011381899999999764, 0.00011376400000000231, 0.00011388899999999896, 0.0001138749999999994, ...</msg>
<status status="PASS" starttime="20201117 14:48:11.948" endtime="20201117 14:48:11.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.965" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.964" endtime="20201117 14:48:11.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.967" level="INFO">VALUE: [0.00011372200000000013, 0.0001140970000000005, 0.00011331899999999714, 0.00011338899999999846, 0.00011381899999999764, 0.00011376400000000231, 0.00011388899999999896, 0.0001138749999999994, 0.00011399999999999952, 0.00011363899999999871, 0.00011395800000000081, 0.00011319400000000049, 0.00011333300000000018, 0.00011372200000000013, 0.00011348599999999945, 0.00011388899999999896, 0.0001134299999999977, 0.00011395799999999734, 0.00011376400000000231, 0.00011325000000000224, 0.00011345899999999978, 0.00011330600000000052, 0.00011390199999999906, 0.00011370799999999709, 0.00011408299999999746, 0.00011401399999999909, 0.0001133749999999989, 0.00011381900000000111, 0.00011406999999999737, 0.00011318100000000039, 0.00011412500000000311, 0.00011404199999999823, 0.0001133749999999989, 0.0001134169999999976, 0.00011334699999999975, 0.00011418100000000139, 0.00011333300000000018, 0.0001139299999999982, 0.00011402799999999866, 0.00011376399999999884, 0.00011338900000000193, 0.00011357000000000034, 0.00011343100000000064, 0.00011369500000000046, 0.00011336099999999932, 0.00011313899999999821, 0.00011369500000000046, 0.00011395800000000081, 0.00011408300000000093, 0.00011357000000000034]</msg>
<status status="PASS" starttime="20201117 14:48:11.966" endtime="20201117 14:48:11.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.961" endtime="20201117 14:48:11.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.970" endtime="20201117 14:48:11.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.974" endtime="20201117 14:48:11.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.972" endtime="20201117 14:48:11.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.969" endtime="20201117 14:48:11.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.601" endtime="20201117 14:48:11.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.599" endtime="20201117 14:48:11.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.598" endtime="20201117 14:48:11.995"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.997" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.005" endtime="20201117 14:48:12.027"></status>
</kw>
<msg timestamp="20201117 14:48:12.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.004" endtime="20201117 14:48:12.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.029" endtime="20201117 14:48:12.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.031" endtime="20201117 14:48:12.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.001" endtime="20201117 14:48:12.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.999" endtime="20201117 14:48:12.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.040" endtime="20201117 14:48:12.325"></status>
</kw>
<msg timestamp="20201117 14:48:12.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.038" endtime="20201117 14:48:12.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.329" endtime="20201117 14:48:12.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.337" endtime="20201117 14:48:12.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.036" endtime="20201117 14:48:12.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.034" endtime="20201117 14:48:12.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.343" level="INFO">${RESULT} = [{'time': 0.021859361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011458300000000143, 'source_diff': 0.00011458300000000143}, {'time': 0.021977431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:12.340" endtime="20201117 14:48:12.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.356" level="INFO">${ACCURACY} = {'diff': [0.00011458300000000143, 0.00011488899999999996, 0.00011448599999999698, 0.00011508300000000193, 0.00011437500000000336, 0.00011445900000000078, 0.00011483399999999769, 0.00011463899999999971...</msg>
<status status="PASS" starttime="20201117 14:48:12.344" endtime="20201117 14:48:12.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.361" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.360" endtime="20201117 14:48:12.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.364" level="INFO">VALUE: [0.00011458300000000143, 0.00011488899999999996, 0.00011448599999999698, 0.00011508300000000193, 0.00011437500000000336, 0.00011445900000000078, 0.00011483399999999769, 0.00011463899999999971, 0.00011494499999999824, 0.0001145689999999984, 0.00011420800000000106, 0.00011461100000000057, 0.00011466599999999938, 0.00011415299999999878, 0.00011512500000000064, 0.00011481899999999864, 0.00011483400000000116, 0.00011501400000000009, 0.00011415199999999931, 0.00011463800000000024, 0.00011481900000000211, 0.00011461100000000057, 0.00011506900000000236, 0.00011467999999999895, 0.00011424999999999977, 0.00011433300000000118, 0.0001144169999999986, 0.00011452800000000263, 0.0001148750000000004, 0.00011462500000000014, 0.00011451399999999959, 0.00011454199999999873, 0.00011494399999999877, 0.00011472200000000113, 0.00011481900000000211, 0.0001150559999999988, 0.00011431899999999814, 0.00011469500000000146, 0.00011484800000000073, 0.00011448600000000045, 0.00011463899999999971, 0.0001144030000000025, 0.00011433300000000118, 0.00011420799999999759, 0.00011488899999999996, 0.00011480499999999907, 0.00011497199999999791, 0.00011476399999999984, 0.00011462500000000014, 0.00011502799999999966]</msg>
<status status="PASS" starttime="20201117 14:48:12.362" endtime="20201117 14:48:12.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.357" endtime="20201117 14:48:12.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.367" endtime="20201117 14:48:12.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.370" endtime="20201117 14:48:12.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.369" endtime="20201117 14:48:12.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.365" endtime="20201117 14:48:12.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.998" endtime="20201117 14:48:12.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.996" endtime="20201117 14:48:12.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.995" endtime="20201117 14:48:12.391"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.394" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.402" endtime="20201117 14:48:12.424"></status>
</kw>
<msg timestamp="20201117 14:48:12.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.400" endtime="20201117 14:48:12.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.425" endtime="20201117 14:48:12.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.428" endtime="20201117 14:48:12.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.398" endtime="20201117 14:48:12.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.396" endtime="20201117 14:48:12.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.437" endtime="20201117 14:48:12.722"></status>
</kw>
<msg timestamp="20201117 14:48:12.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022971958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.435" endtime="20201117 14:48:12.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022971958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.726" endtime="20201117 14:48:12.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.734" endtime="20201117 14:48:12.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.433" endtime="20201117 14:48:12.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.431" endtime="20201117 14:48:12.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.741" level="INFO">${RESULT} = [{'time': 0.023087833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011587499999999792, 'source_diff': 0.00011587499999999792}, {'time': 0.023209819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:12.738" endtime="20201117 14:48:12.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.756" level="INFO">${ACCURACY} = {'diff': [0.00011587499999999792, 0.00011598599999999848, 0.00011576399999999737, 0.0001158889999999975, 0.00011556900000000286, 0.00011595799999999934, 0.00011599999999999805, 0.00011583400000000216,...</msg>
<status status="PASS" starttime="20201117 14:48:12.742" endtime="20201117 14:48:12.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.760" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.759" endtime="20201117 14:48:12.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.763" level="INFO">VALUE: [0.00011587499999999792, 0.00011598599999999848, 0.00011576399999999737, 0.0001158889999999975, 0.00011556900000000286, 0.00011595799999999934, 0.00011599999999999805, 0.00011583400000000216, 0.00011561100000000157, 0.00011562500000000114, 0.00011511200000000055, 0.00011608300000000293, 0.00011588900000000096, 0.00011615300000000078, 0.00011531900000000261, 0.00011616700000000035, 0.00011588900000000096, 0.00011604200000000023, 0.00011518099999999892, 0.00011604200000000023, 0.00011543099999999917, 0.00011569499999999899, 0.00011580500000000007, 0.00011544399999999927, 0.00011541600000000013, 0.00011562499999999767, 0.0001152499999999973, 0.00011600000000000152, 0.00011558299999999896, 0.00011529199999999948, 0.00011579199999999998, 0.00011565300000000028, 0.0001160559999999998, 0.00011599999999999805, 0.00011577700000000093, 0.00011572199999999866, 0.00011608299999999946, 0.0001156109999999981, 0.0001153750000000009, 0.00011584799999999826, 0.00011552800000000016, 0.00011581999999999912, 0.00011570900000000203, 0.0001157230000000016, 0.00011544499999999874, 0.00011558299999999896, 0.00011569399999999952, 0.00011517999999999945, 0.00011520799999999859, 0.00011581899999999964]</msg>
<status status="PASS" starttime="20201117 14:48:12.761" endtime="20201117 14:48:12.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.757" endtime="20201117 14:48:12.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.766" endtime="20201117 14:48:12.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.769" endtime="20201117 14:48:12.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.767" endtime="20201117 14:48:12.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.764" endtime="20201117 14:48:12.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.394" endtime="20201117 14:48:12.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.392" endtime="20201117 14:48:12.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.391" endtime="20201117 14:48:12.790"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.792" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.800" endtime="20201117 14:48:12.820"></status>
</kw>
<msg timestamp="20201117 14:48:12.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.799" endtime="20201117 14:48:12.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.822" endtime="20201117 14:48:12.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.824" endtime="20201117 14:48:12.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.796" endtime="20201117 14:48:12.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.794" endtime="20201117 14:48:12.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.834" endtime="20201117 14:48:13.119"></status>
</kw>
<msg timestamp="20201117 14:48:13.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.832" endtime="20201117 14:48:13.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.123" endtime="20201117 14:48:13.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.131" endtime="20201117 14:48:13.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.829" endtime="20201117 14:48:13.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.828" endtime="20201117 14:48:13.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:13.138" level="INFO">${RESULT} = [{'time': 0.021858014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011636099999999885, 'source_diff': 0.00011636099999999885}, {'time': 0.021979056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:13.135" endtime="20201117 14:48:13.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.151" level="INFO">${ACCURACY} = {'diff': [0.00011636099999999885, 0.00011654200000000073, 0.0001170560000000008, 0.00011673700000000217, 0.00011615200000000131, 0.00011677799999999794, 0.00011626400000000134, 0.00011616700000000035,...</msg>
<status status="PASS" starttime="20201117 14:48:13.139" endtime="20201117 14:48:13.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.155" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.154" endtime="20201117 14:48:13.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.158" level="INFO">VALUE: [0.00011636099999999885, 0.00011654200000000073, 0.0001170560000000008, 0.00011673700000000217, 0.00011615200000000131, 0.00011677799999999794, 0.00011626400000000134, 0.00011616700000000035, 0.00011708300000000046, 0.00011623599999999873, 0.00011705599999999733, 0.00011693100000000067, 0.00011613900000000121, 0.00011676400000000184, 0.00011699999999999905, 0.0001165560000000003, 0.00011655499999999736, 0.00011705499999999786, 0.0001165690000000004, 0.00011694400000000077, 0.00011701399999999862, 0.00011681900000000064, 0.00011615300000000078, 0.0001164300000000007, 0.00011704200000000123, 0.00011659800000000248, 0.00011638900000000146, 0.0001167629999999989, 0.00011702800000000166, 0.00011672199999999966, 0.0001165690000000004, 0.00011615300000000078, 0.00011690300000000153, 0.00011620799999999959, 0.0001169170000000011, 0.00011618099999999992, 0.0001168750000000024, 0.00011705499999999786, 0.00011612500000000164, 0.00011680500000000107, 0.0001164439999999968, 0.0001163750000000019, 0.00011626399999999787, 0.00011688900000000196, 0.00011704200000000123, 0.00011616700000000035, 0.0001170560000000008, 0.00011654099999999779, 0.0001168750000000024, 0.00011631900000000014]</msg>
<status status="PASS" starttime="20201117 14:48:13.156" endtime="20201117 14:48:13.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.152" endtime="20201117 14:48:13.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.161" endtime="20201117 14:48:13.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.164" endtime="20201117 14:48:13.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.163" endtime="20201117 14:48:13.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.159" endtime="20201117 14:48:13.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.793" endtime="20201117 14:48:13.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.791" endtime="20201117 14:48:13.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.790" endtime="20201117 14:48:13.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.251" endtime="20201117 14:48:13.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.190" endtime="20201117 14:48:13.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.188" endtime="20201117 14:48:13.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.187" endtime="20201117 14:48:13.210"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:47:33.176" endtime="20201117 14:48:13.211" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:46:51.536" endtime="20201117 14:48:13.215"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201117 14:46:49.637" endtime="20201117 14:48:13.228"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
