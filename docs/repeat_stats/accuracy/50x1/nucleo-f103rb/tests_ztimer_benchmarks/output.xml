<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201115 22:59:43.656" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:44.918" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:44.934" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:46.830" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:44.914" endtime="20201115 22:59:46.831"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:46.834" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:46.832" endtime="20201115 22:59:46.834"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.911" endtime="20201115 22:59:46.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:46.838" endtime="20201115 22:59:47.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:46.836" endtime="20201115 22:59:47.171"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.203" endtime="20201115 22:59:47.226"></status>
</kw>
<msg timestamp="20201115 22:59:47.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201115 22:59:47.199" endtime="20201115 22:59:47.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.234" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201115 22:59:47.230" endtime="20201115 22:59:47.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.242" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:47.237" endtime="20201115 22:59:47.242"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:47.192" endtime="20201115 22:59:47.245"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:47.187" endtime="20201115 22:59:47.246"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.184" endtime="20201115 22:59:47.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:47.256" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:47.254" endtime="20201115 22:59:47.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.249" endtime="20201115 22:59:47.257"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.182" endtime="20201115 22:59:47.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.180" endtime="20201115 22:59:47.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.260" endtime="20201115 22:59:47.263"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.176" endtime="20201115 22:59:47.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.267" endtime="20201115 22:59:47.271"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.173" endtime="20201115 22:59:47.273"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:44.907" endtime="20201115 22:59:47.273"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:47.291" endtime="20201115 22:59:47.313"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.287" endtime="20201115 22:59:47.315"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.352" endtime="20201115 22:59:47.371"></status>
</kw>
<msg timestamp="20201115 22:59:47.372" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.348" endtime="20201115 22:59:47.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.379" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.375" endtime="20201115 22:59:47.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.386" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:47.382" endtime="20201115 22:59:47.387"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:47.340" endtime="20201115 22:59:47.389"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:47.333" endtime="20201115 22:59:47.391"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.329" endtime="20201115 22:59:47.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:47.401" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:47.399" endtime="20201115 22:59:47.401"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.394" endtime="20201115 22:59:47.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.327" endtime="20201115 22:59:47.402"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.326" endtime="20201115 22:59:47.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.404" endtime="20201115 22:59:47.408"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.321" endtime="20201115 22:59:47.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.316" endtime="20201115 22:59:47.411"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.284" endtime="20201115 22:59:47.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.431" endtime="20201115 22:59:47.446"></status>
</kw>
<msg timestamp="20201115 22:59:47.447" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.428" endtime="20201115 22:59:47.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.454" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:47.449" endtime="20201115 22:59:47.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:47.456" endtime="20201115 22:59:47.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.420" endtime="20201115 22:59:47.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.415" endtime="20201115 22:59:47.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.477" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:59:47.474" endtime="20201115 22:59:47.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.482" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:59:47.479" endtime="20201115 22:59:47.483"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.467" endtime="20201115 22:59:47.484"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:47.275" endtime="20201115 22:59:47.487" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:43.925" endtime="20201115 22:59:47.495"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:47.633" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:47.649" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:49.585" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:47.629" endtime="20201115 22:59:49.587"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.593" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:49.589" endtime="20201115 22:59:49.594"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.626" endtime="20201115 22:59:49.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:49.600" endtime="20201115 22:59:49.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.597" endtime="20201115 22:59:49.934"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:49.965" endtime="20201115 22:59:49.984"></status>
</kw>
<msg timestamp="20201115 22:59:49.985" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.961" endtime="20201115 22:59:49.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.992" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:49.988" endtime="20201115 22:59:49.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:49.999" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:49.995" endtime="20201115 22:59:50.001"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:49.955" endtime="20201115 22:59:50.003"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:49.949" endtime="20201115 22:59:50.004"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.946" endtime="20201115 22:59:50.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:50.014" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:50.012" endtime="20201115 22:59:50.015"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.007" endtime="20201115 22:59:50.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.944" endtime="20201115 22:59:50.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.943" endtime="20201115 22:59:50.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.020" endtime="20201115 22:59:50.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.939" endtime="20201115 22:59:50.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.027" endtime="20201115 22:59:50.031"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:49.936" endtime="20201115 22:59:50.033"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:47.623" endtime="20201115 22:59:50.033"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:50.049" endtime="20201115 22:59:50.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.045" endtime="20201115 22:59:50.073"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.109" endtime="20201115 22:59:50.129"></status>
</kw>
<msg timestamp="20201115 22:59:50.131" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.105" endtime="20201115 22:59:50.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.138" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.133" endtime="20201115 22:59:50.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.145" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:50.140" endtime="20201115 22:59:50.146"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:50.097" endtime="20201115 22:59:50.148"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:50.090" endtime="20201115 22:59:50.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.087" endtime="20201115 22:59:50.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:50.159" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:50.157" endtime="20201115 22:59:50.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.152" endtime="20201115 22:59:50.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.085" endtime="20201115 22:59:50.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.083" endtime="20201115 22:59:50.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.163" endtime="20201115 22:59:50.166"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.079" endtime="20201115 22:59:50.168"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.074" endtime="20201115 22:59:50.170"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.042" endtime="20201115 22:59:50.170"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.179" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.267" endtime="20201115 22:59:50.287"></status>
</kw>
<msg timestamp="20201115 22:59:50.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.264" endtime="20201115 22:59:50.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.290" endtime="20201115 22:59:50.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.297" endtime="20201115 22:59:50.301"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.255" endtime="20201115 22:59:50.303"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.185" endtime="20201115 22:59:50.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.323" endtime="20201115 22:59:50.631"></status>
</kw>
<msg timestamp="20201115 22:59:50.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.211799667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.211817028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.319" endtime="20201115 22:59:50.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.211799667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.211817028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.636" endtime="20201115 22:59:50.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.644" endtime="20201115 22:59:50.646"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.311" endtime="20201115 22:59:50.647"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.306" endtime="20201115 22:59:50.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:50.654" level="INFO">${RESULT} = [{'time': 0.211817028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.736099999999352e-05, 'source_diff': 1.736099999999352e-05}, {'time': 0.211853028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:50.649" endtime="20201115 22:59:50.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:50.668" level="INFO">${ACCURACY} = {'diff': [1.736099999999352e-05, 1.7806000000009092e-05, 1.7471999999990606e-05, 1.7445000000004818e-05, 1.8041999999995895e-05, 1.7332999999980503e-05, 1.793099999999881e-05, 1.7444000000005344e-05, ...</msg>
<status status="PASS" starttime="20201115 22:59:50.655" endtime="20201115 22:59:50.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.673" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 22:59:50.672" endtime="20201115 22:59:50.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.676" level="INFO">VALUE: [1.736099999999352e-05, 1.7806000000009092e-05, 1.7471999999990606e-05, 1.7445000000004818e-05, 1.8041999999995895e-05, 1.7332999999980503e-05, 1.793099999999881e-05, 1.7444000000005344e-05, 1.7806000000009092e-05, 1.8125000000007718e-05, 1.811099999998733e-05, 1.8084000000001543e-05, 1.8097999999994174e-05, 1.73200000000151e-05, 1.8014000000010633e-05, 1.773600000001818e-05, 1.8000000000018e-05, 1.816699999998561e-05, 1.7820000000001723e-05, 1.7903000000013547e-05, 1.8014000000010633e-05, 1.7887999999993687e-05, 1.7764000000003444e-05, 1.804099999999642e-05, 1.808300000000207e-05, 1.7500000000003624e-05, 1.783299999999488e-05, 1.74169999999918e-05, 1.7764000000003444e-05, 1.7916000000006704e-05, 1.7401999999999695e-05, 1.736099999999352e-05, 1.736099999999352e-05, 1.7681000000019376e-05, 1.733300000000826e-05, 1.8055999999988526e-05, 1.7750000000010813e-05, 1.8068999999981683e-05, 1.7500000000003624e-05, 1.7749999999983057e-05, 1.8028000000003264e-05, 1.781900000000225e-05, 1.7292000000002083e-05, 1.7472000000018362e-05, 1.7471999999990606e-05, 1.7806000000009092e-05, 1.8028000000003264e-05, 1.8041999999995895e-05, 1.74169999999918e-05, 1.7583000000015447e-05]</msg>
<status status="PASS" starttime="20201115 22:59:50.675" endtime="20201115 22:59:50.677"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.669" endtime="20201115 22:59:50.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.681" endtime="20201115 22:59:50.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:50.688" endtime="20201115 22:59:50.710"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.683" endtime="20201115 22:59:50.712"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.678" endtime="20201115 22:59:50.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.181" endtime="20201115 22:59:50.714"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.176" endtime="20201115 22:59:50.715"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.174" endtime="20201115 22:59:50.715"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.721" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.745" endtime="20201115 22:59:50.764"></status>
</kw>
<msg timestamp="20201115 22:59:50.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.741" endtime="20201115 22:59:50.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:50.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:50.768" endtime="20201115 22:59:50.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.775" endtime="20201115 22:59:50.779"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.733" endtime="20201115 22:59:50.781"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.727" endtime="20201115 22:59:50.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:50.800" endtime="20201115 22:59:51.162"></status>
</kw>
<msg timestamp="20201115 22:59:51.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050320486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050338056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:50.796" endtime="20201115 22:59:51.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050320486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050338056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.173" endtime="20201115 22:59:51.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.193" endtime="20201115 22:59:51.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.789" endtime="20201115 22:59:51.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.784" endtime="20201115 22:59:51.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.213" level="INFO">${RESULT} = [{'time': 0.050338056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7570000000001473e-05, 'source_diff': 1.7570000000001473e-05}, {'time': 0.050373056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:51.203" endtime="20201115 22:59:51.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.245" level="INFO">${ACCURACY} = {'diff': [1.7570000000001473e-05, 1.744499999999788e-05, 1.7570000000001473e-05, 1.7542000000002334e-05, 1.759700000000114e-05, 1.730500000000218e-05, 1.77769999999966e-05, 1.731900000000175e-05, 1.80...</msg>
<status status="PASS" starttime="20201115 22:59:51.216" endtime="20201115 22:59:51.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.257" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.255" endtime="20201115 22:59:51.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.263" level="INFO">VALUE: [1.7570000000001473e-05, 1.744499999999788e-05, 1.7570000000001473e-05, 1.7542000000002334e-05, 1.759700000000114e-05, 1.730500000000218e-05, 1.77769999999966e-05, 1.731900000000175e-05, 1.8056000000002403e-05, 1.761099999999377e-05, 1.734700000000089e-05, 1.7735999999997365e-05, 1.752699999999635e-05, 1.8179999999999585e-05, 1.734700000000089e-05, 1.762500000000028e-05, 1.7457999999997975e-05, 1.7403000000006108e-05, 1.736100000000046e-05, 1.8042000000002834e-05, 1.7471999999997545e-05, 1.7806000000002153e-05, 1.8013999999996755e-05, 1.7764000000003444e-05, 1.762500000000028e-05, 1.787500000000053e-05, 1.82089999999982e-05, 1.7584000000001043e-05, 1.7722000000004734e-05, 1.809700000000164e-05, 1.8221999999998295e-05, 1.8056000000002403e-05, 1.809700000000164e-05, 1.77089999999977e-05, 1.8027999999996325e-05, 1.7665999999999515e-05, 1.7334000000000793e-05, 1.787500000000053e-05, 1.8097999999994174e-05, 1.772299999999727e-05, 1.748699999999659e-05, 1.7750000000003874e-05, 1.7915999999999765e-05, 1.80690000000025e-05, 1.7638000000000376e-05, 1.8236000000004804e-05, 1.777700000000354e-05, 1.763899999999985e-05, 1.758299999999463e-05, 1.787500000000053e-05]</msg>
<status status="PASS" starttime="20201115 22:59:51.260" endtime="20201115 22:59:51.264"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.247" endtime="20201115 22:59:51.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.273" endtime="20201115 22:59:51.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.282" endtime="20201115 22:59:51.304"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.277" endtime="20201115 22:59:51.306"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.268" endtime="20201115 22:59:51.307"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.723" endtime="20201115 22:59:51.308"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.718" endtime="20201115 22:59:51.309"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.716" endtime="20201115 22:59:51.309"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.315" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.338" endtime="20201115 22:59:51.357"></status>
</kw>
<msg timestamp="20201115 22:59:51.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.335" endtime="20201115 22:59:51.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.361" endtime="20201115 22:59:51.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.368" endtime="20201115 22:59:51.372"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.327" endtime="20201115 22:59:51.374"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.321" endtime="20201115 22:59:51.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.394" endtime="20201115 22:59:51.757"></status>
</kw>
<msg timestamp="20201115 22:59:51.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049726875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049744556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.390" endtime="20201115 22:59:51.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049726875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049744556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.767" endtime="20201115 22:59:51.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.787" endtime="20201115 22:59:51.792"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.383" endtime="20201115 22:59:51.793"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.377" endtime="20201115 22:59:51.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:51.806" level="INFO">${RESULT} = [{'time': 0.049744556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7681000000005498e-05, 'source_diff': 1.7681000000005498e-05}, {'time': 0.049779569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:51.797" endtime="20201115 22:59:51.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:51.838" level="INFO">${ACCURACY} = {'diff': [1.7681000000005498e-05, 1.801300000000422e-05, 1.737500000000003e-05, 1.7542000000002334e-05, 1.811100000000121e-05, 1.763899999999985e-05, 1.8263999999997005e-05, 1.780500000000268e-05, 1.8...</msg>
<status status="PASS" starttime="20201115 22:59:51.808" endtime="20201115 22:59:51.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.850" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 22:59:51.848" endtime="20201115 22:59:51.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.856" level="INFO">VALUE: [1.7681000000005498e-05, 1.801300000000422e-05, 1.737500000000003e-05, 1.7542000000002334e-05, 1.811100000000121e-05, 1.763899999999985e-05, 1.8263999999997005e-05, 1.780500000000268e-05, 1.802699999999685e-05, 1.812500000000078e-05, 1.7458000000004914e-05, 1.743099999999831e-05, 1.7556000000001903e-05, 1.8027999999996325e-05, 1.812500000000078e-05, 1.7792000000002584e-05, 1.8236000000004804e-05, 1.80690000000025e-05, 1.7528000000002764e-05, 1.780500000000268e-05, 1.7443999999998405e-05, 1.7471999999997545e-05, 1.7291999999995145e-05, 1.743099999999831e-05, 1.790299999999967e-05, 1.7735999999997365e-05, 1.7973000000004458e-05, 1.794499999999838e-05, 1.8221999999998295e-05, 1.811100000000121e-05, 1.7459000000004388e-05, 1.815299999999992e-05, 1.745899999999745e-05, 1.7429999999998835e-05, 1.787500000000053e-05, 1.8250000000004374e-05, 1.733300000000132e-05, 1.8112000000000683e-05, 1.8027999999996325e-05, 1.8236000000004804e-05, 1.7222000000004234e-05, 1.783300000000182e-05, 1.7999999999997185e-05, 1.730500000000218e-05, 1.756899999999506e-05, 1.8249999999997435e-05, 1.7264000000002944e-05, 1.809700000000164e-05, 1.730500000000218e-05, 1.734700000000089e-05]</msg>
<status status="PASS" starttime="20201115 22:59:51.853" endtime="20201115 22:59:51.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.841" endtime="20201115 22:59:51.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.866" endtime="20201115 22:59:51.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:51.875" endtime="20201115 22:59:51.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.870" endtime="20201115 22:59:51.899"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.861" endtime="20201115 22:59:51.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.316" endtime="20201115 22:59:51.901"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.312" endtime="20201115 22:59:51.902"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.310" endtime="20201115 22:59:51.902"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.908" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.932" endtime="20201115 22:59:51.951"></status>
</kw>
<msg timestamp="20201115 22:59:51.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.928" endtime="20201115 22:59:51.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:51.955" endtime="20201115 22:59:51.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.962" endtime="20201115 22:59:51.966"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.920" endtime="20201115 22:59:51.968"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.914" endtime="20201115 22:59:51.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:51.987" endtime="20201115 22:59:52.349"></status>
</kw>
<msg timestamp="20201115 22:59:52.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050008653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050026694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:51.984" endtime="20201115 22:59:52.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050008653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050026694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:52.359" endtime="20201115 22:59:52.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.379" endtime="20201115 22:59:52.383"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.976" endtime="20201115 22:59:52.385"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.971" endtime="20201115 22:59:52.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.398" level="INFO">${RESULT} = [{'time': 0.050026694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.804099999999642e-05, 'source_diff': 1.804099999999642e-05}, {'time': 0.050058694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:52.388" endtime="20201115 22:59:52.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:52.432" level="INFO">${ACCURACY} = {'diff': [1.804099999999642e-05, 1.731900000000175e-05, 1.812500000000078e-05, 1.7263999999996005e-05, 1.7263999999996005e-05, 1.7499999999996685e-05, 1.7916000000006704e-05, 1.758300000000157e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:59:52.400" endtime="20201115 22:59:52.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.444" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 22:59:52.442" endtime="20201115 22:59:52.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.450" level="INFO">VALUE: [1.804099999999642e-05, 1.731900000000175e-05, 1.812500000000078e-05, 1.7263999999996005e-05, 1.7263999999996005e-05, 1.7499999999996685e-05, 1.7916000000006704e-05, 1.758300000000157e-05, 1.805499999999599e-05, 1.811100000000121e-05, 1.813900000000035e-05, 1.7444000000005344e-05, 1.7792000000002584e-05, 1.813900000000035e-05, 1.737500000000003e-05, 1.8056000000002403e-05, 1.808300000000207e-05, 1.8056000000002403e-05, 1.811099999999427e-05, 1.769499999999813e-05, 1.766699999999899e-05, 1.78890000000001e-05, 1.819499999999863e-05, 1.813899999999341e-05, 1.795899999999795e-05, 1.790299999999967e-05, 1.7778000000003014e-05, 1.7528000000002764e-05, 1.7638000000000376e-05, 1.762500000000028e-05, 1.808300000000207e-05, 1.7473000000003958e-05, 1.7473000000003958e-05, 1.777700000000354e-05, 1.7665999999999515e-05, 1.7569000000002e-05, 1.8000000000004124e-05, 1.813900000000035e-05, 1.752699999999635e-05, 1.731900000000175e-05, 1.781900000000225e-05, 1.729100000000261e-05, 1.734700000000089e-05, 1.7929999999999335e-05, 1.8221999999998295e-05, 1.818099999999906e-05, 1.815299999999992e-05, 1.7527999999995825e-05, 1.7528000000002764e-05, 1.743099999999831e-05]</msg>
<status status="PASS" starttime="20201115 22:59:52.446" endtime="20201115 22:59:52.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.434" endtime="20201115 22:59:52.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.459" endtime="20201115 22:59:52.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:52.468" endtime="20201115 22:59:52.491"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.464" endtime="20201115 22:59:52.492"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.454" endtime="20201115 22:59:52.494"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.909" endtime="20201115 22:59:52.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.905" endtime="20201115 22:59:52.495"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.903" endtime="20201115 22:59:52.496"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.502" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.526" endtime="20201115 22:59:52.545"></status>
</kw>
<msg timestamp="20201115 22:59:52.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.522" endtime="20201115 22:59:52.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:52.548" endtime="20201115 22:59:52.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.555" endtime="20201115 22:59:52.559"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.514" endtime="20201115 22:59:52.561"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.508" endtime="20201115 22:59:52.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.580" endtime="20201115 22:59:52.942"></status>
</kw>
<msg timestamp="20201115 22:59:52.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.05054225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050559514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:52.577" endtime="20201115 22:59:52.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:52.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.05054225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050559514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:52.952" endtime="20201115 22:59:52.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:52.972" endtime="20201115 22:59:52.978"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.569" endtime="20201115 22:59:52.979"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.564" endtime="20201115 22:59:52.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:52.992" level="INFO">${RESULT} = [{'time': 0.050559514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7264000000002944e-05, 'source_diff': 1.7264000000002944e-05}, {'time': 0.050588514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:52.983" endtime="20201115 22:59:52.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.025" level="INFO">${ACCURACY} = {'diff': [1.7264000000002944e-05, 1.7707999999998225e-05, 1.734699999999395e-05, 1.734700000000089e-05, 1.82089999999982e-05, 1.793099999999881e-05, 1.7695000000005068e-05, 1.7695000000005068e-05, 1.7...</msg>
<status status="PASS" starttime="20201115 22:59:52.995" endtime="20201115 22:59:53.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.036" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.034" endtime="20201115 22:59:53.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.042" level="INFO">VALUE: [1.7264000000002944e-05, 1.7707999999998225e-05, 1.734699999999395e-05, 1.734700000000089e-05, 1.82089999999982e-05, 1.793099999999881e-05, 1.7695000000005068e-05, 1.7695000000005068e-05, 1.7778000000003014e-05, 1.7556000000001903e-05, 1.7778000000003014e-05, 1.779100000000311e-05, 1.8084000000001543e-05, 1.7999999999997185e-05, 1.812500000000078e-05, 1.737500000000003e-05, 1.804099999999642e-05, 1.8083999999994604e-05, 1.78890000000001e-05, 1.7957999999998475e-05, 1.7693999999998655e-05, 1.790299999999967e-05, 1.804099999999642e-05, 1.7443999999998405e-05, 1.7486000000004054e-05, 1.7929999999999335e-05, 1.762500000000028e-05, 1.754100000000286e-05, 1.7999999999997185e-05, 1.759700000000114e-05, 1.8084000000001543e-05, 1.7764000000003444e-05, 1.808300000000207e-05, 1.763899999999985e-05, 1.791699999999924e-05, 1.7792000000002584e-05, 1.8042000000002834e-05, 1.808300000000207e-05, 1.783300000000182e-05, 1.8013999999996755e-05, 1.791699999999924e-05, 1.7528000000002764e-05, 1.7431000000005248e-05, 1.7735999999997365e-05, 1.765299999999942e-05, 1.7583999999994104e-05, 1.7444000000005344e-05, 1.7945000000005318e-05, 1.8084000000001543e-05, 1.7263999999996005e-05]</msg>
<status status="PASS" starttime="20201115 22:59:53.039" endtime="20201115 22:59:53.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.027" endtime="20201115 22:59:53.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.052" endtime="20201115 22:59:53.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.063" endtime="20201115 22:59:53.085"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.057" endtime="20201115 22:59:53.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.047" endtime="20201115 22:59:53.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.504" endtime="20201115 22:59:53.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.499" endtime="20201115 22:59:53.090"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:52.497" endtime="20201115 22:59:53.090"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.096" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.120" endtime="20201115 22:59:53.139"></status>
</kw>
<msg timestamp="20201115 22:59:53.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.116" endtime="20201115 22:59:53.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.143" endtime="20201115 22:59:53.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.150" endtime="20201115 22:59:53.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.108" endtime="20201115 22:59:53.156"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.102" endtime="20201115 22:59:53.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.176" endtime="20201115 22:59:53.537"></status>
</kw>
<msg timestamp="20201115 22:59:53.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050278264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050295806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.172" endtime="20201115 22:59:53.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050278264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050295806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.547" endtime="20201115 22:59:53.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.568" endtime="20201115 22:59:53.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.164" endtime="20201115 22:59:53.574"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.159" endtime="20201115 22:59:53.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:53.587" level="INFO">${RESULT} = [{'time': 0.050295806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7541999999995395e-05, 'source_diff': 1.7541999999995395e-05}, {'time': 0.050322778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:53.577" endtime="20201115 22:59:53.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:53.619" level="INFO">${ACCURACY} = {'diff': [1.7541999999995395e-05, 1.734700000000089e-05, 1.7292000000002083e-05, 1.7319999999994284e-05, 1.7555999999994965e-05, 1.787500000000053e-05, 1.7931000000005748e-05, 1.7415999999999265e-05, ...</msg>
<status status="PASS" starttime="20201115 22:59:53.589" endtime="20201115 22:59:53.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.631" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 22:59:53.629" endtime="20201115 22:59:53.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.637" level="INFO">VALUE: [1.7541999999995395e-05, 1.734700000000089e-05, 1.7292000000002083e-05, 1.7319999999994284e-05, 1.7555999999994965e-05, 1.787500000000053e-05, 1.7931000000005748e-05, 1.7415999999999265e-05, 1.812500000000078e-05, 1.7570000000001473e-05, 1.7443999999998405e-05, 1.8152000000000446e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.78890000000001e-05, 1.731900000000175e-05, 1.763899999999985e-05, 1.781899999999531e-05, 1.734700000000089e-05, 1.7278000000002514e-05, 1.7292000000002083e-05, 1.7763999999996505e-05, 1.790299999999967e-05, 1.78890000000001e-05, 1.805500000000293e-05, 1.7445000000004818e-05, 1.736100000000046e-05, 1.7792000000002584e-05, 1.7957999999998475e-05, 1.7542000000002334e-05, 1.8221999999998295e-05, 1.823699999999734e-05, 1.818099999999906e-05, 1.7528000000002764e-05, 1.769499999999813e-05, 1.8055999999995465e-05, 1.7820000000001723e-05, 1.797299999999752e-05, 1.7736000000004304e-05, 1.7263999999996005e-05, 1.7348000000000363e-05, 1.762500000000028e-05, 1.7834000000001293e-05, 1.758300000000157e-05, 1.7334000000000793e-05, 1.7570000000001473e-05, 1.7902000000000196e-05, 1.804099999999642e-05, 1.776299999999703e-05, 1.779099999999617e-05]</msg>
<status status="PASS" starttime="20201115 22:59:53.634" endtime="20201115 22:59:53.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.621" endtime="20201115 22:59:53.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.647" endtime="20201115 22:59:53.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.656" endtime="20201115 22:59:53.678"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.652" endtime="20201115 22:59:53.680"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.643" endtime="20201115 22:59:53.682"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.097" endtime="20201115 22:59:53.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.093" endtime="20201115 22:59:53.683"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.091" endtime="20201115 22:59:53.684"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.689" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.714" endtime="20201115 22:59:53.733"></status>
</kw>
<msg timestamp="20201115 22:59:53.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.710" endtime="20201115 22:59:53.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.737" endtime="20201115 22:59:53.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.744" endtime="20201115 22:59:53.748"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.702" endtime="20201115 22:59:53.750"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.695" endtime="20201115 22:59:53.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.769" endtime="20201115 22:59:54.087"></status>
</kw>
<msg timestamp="20201115 22:59:54.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051252708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051270847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:53.766" endtime="20201115 22:59:54.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051252708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051270847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.091" endtime="20201115 22:59:54.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.100" endtime="20201115 22:59:54.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.758" endtime="20201115 22:59:54.103"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.753" endtime="20201115 22:59:54.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.109" level="INFO">${RESULT} = [{'time': 0.051270847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.813900000000035e-05, 'source_diff': 1.813900000000035e-05}, {'time': 0.051309847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:54.105" endtime="20201115 22:59:54.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.123" level="INFO">${ACCURACY} = {'diff': [1.813900000000035e-05, 1.7915999999999765e-05, 1.7429999999998835e-05, 1.805499999999599e-05, 1.763899999999985e-05, 1.7693999999998655e-05, 1.7458000000004914e-05, 1.7721999999997795e-05, 1...</msg>
<status status="PASS" starttime="20201115 22:59:54.110" endtime="20201115 22:59:54.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.129" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.128" endtime="20201115 22:59:54.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.132" level="INFO">VALUE: [1.813900000000035e-05, 1.7915999999999765e-05, 1.7429999999998835e-05, 1.805499999999599e-05, 1.763899999999985e-05, 1.7693999999998655e-05, 1.7458000000004914e-05, 1.7721999999997795e-05, 1.786100000000096e-05, 1.7528000000002764e-05, 1.8042000000002834e-05, 1.7556000000001903e-05, 1.731900000000175e-05, 1.8208000000005664e-05, 1.7569000000002e-05, 1.754099999999592e-05, 1.7763999999996505e-05, 1.816699999999949e-05, 1.797299999999752e-05, 1.7820000000001723e-05, 1.812500000000078e-05, 1.815299999999992e-05, 1.8014000000003694e-05, 1.805500000000293e-05, 1.7486000000004054e-05, 1.7485999999997115e-05, 1.7959000000004888e-05, 1.7778000000003014e-05, 1.766699999999899e-05, 1.813900000000035e-05, 1.7736000000004304e-05, 1.8152000000000446e-05, 1.7958000000005414e-05, 1.752700000000329e-05, 1.804099999999642e-05, 1.7735999999997365e-05, 1.8166000000000015e-05, 1.783299999999488e-05, 1.765299999999942e-05, 1.761100000000071e-05, 1.7527999999995825e-05, 1.781899999999531e-05, 1.754100000000286e-05, 1.736100000000046e-05, 1.7514000000003194e-05, 1.763899999999985e-05, 1.7292000000002083e-05, 1.7584000000001043e-05, 1.791699999999924e-05, 1.781900000000225e-05]</msg>
<status status="PASS" starttime="20201115 22:59:54.130" endtime="20201115 22:59:54.132"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.124" endtime="20201115 22:59:54.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.136" endtime="20201115 22:59:54.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.141" endtime="20201115 22:59:54.160"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.138" endtime="20201115 22:59:54.161"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.134" endtime="20201115 22:59:54.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.691" endtime="20201115 22:59:54.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.687" endtime="20201115 22:59:54.162"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.685" endtime="20201115 22:59:54.162"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.165" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.176" endtime="20201115 22:59:54.191"></status>
</kw>
<msg timestamp="20201115 22:59:54.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.174" endtime="20201115 22:59:54.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.193" endtime="20201115 22:59:54.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.196" endtime="20201115 22:59:54.198"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.171" endtime="20201115 22:59:54.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.168" endtime="20201115 22:59:54.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.208" endtime="20201115 22:59:54.495"></status>
</kw>
<msg timestamp="20201115 22:59:54.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027944375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027961847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.206" endtime="20201115 22:59:54.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027944375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027961847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.500" endtime="20201115 22:59:54.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.508" endtime="20201115 22:59:54.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.202" endtime="20201115 22:59:54.511"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.200" endtime="20201115 22:59:54.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.517" level="INFO">${RESULT} = [{'time': 0.027961847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7472000000001014e-05, 'source_diff': 1.7472000000001014e-05}, {'time': 0.027992861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:54.513" endtime="20201115 22:59:54.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:54.533" level="INFO">${ACCURACY} = {'diff': [1.7472000000001014e-05, 1.8027999999999794e-05, 1.7792000000002584e-05, 1.781899999999878e-05, 1.8235999999997865e-05, 1.8028000000003264e-05, 1.741699999999874e-05, 1.78890000000001e-05, 1....</msg>
<status status="PASS" starttime="20201115 22:59:54.519" endtime="20201115 22:59:54.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.538" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 22:59:54.537" endtime="20201115 22:59:54.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.541" level="INFO">VALUE: [1.7472000000001014e-05, 1.8027999999999794e-05, 1.7792000000002584e-05, 1.781899999999878e-05, 1.8235999999997865e-05, 1.8028000000003264e-05, 1.741699999999874e-05, 1.78890000000001e-05, 1.7263999999999474e-05, 1.7929999999999335e-05, 1.7791999999999114e-05, 1.737500000000003e-05, 1.7834000000001293e-05, 1.8083999999998074e-05, 1.7487000000000058e-05, 1.769499999999813e-05, 1.7292000000002083e-05, 1.762500000000028e-05, 1.7833999999997824e-05, 1.815299999999992e-05, 1.7361999999999933e-05, 1.793099999999881e-05, 1.7415999999999265e-05, 1.7583999999997574e-05, 1.7292000000002083e-05, 1.783300000000182e-05, 1.8014000000000224e-05, 1.781900000000225e-05, 1.7430000000002305e-05, 1.7500000000000154e-05, 1.78890000000001e-05, 1.7277999999999044e-05, 1.7486000000000584e-05, 1.78890000000001e-05, 1.809699999999817e-05, 1.731900000000175e-05, 1.736099999999699e-05, 1.737500000000003e-05, 1.780499999999921e-05, 1.8000000000000654e-05, 1.8222000000001765e-05, 1.7291999999998614e-05, 1.762499999999681e-05, 1.809700000000164e-05, 1.737500000000003e-05, 1.7458000000001445e-05, 1.7820000000001723e-05, 1.7472000000001014e-05, 1.816699999999949e-05, 1.7735999999997365e-05]</msg>
<status status="PASS" starttime="20201115 22:59:54.540" endtime="20201115 22:59:54.542"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.534" endtime="20201115 22:59:54.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.546" endtime="20201115 22:59:54.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.550" endtime="20201115 22:59:54.569"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.548" endtime="20201115 22:59:54.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.543" endtime="20201115 22:59:54.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.166" endtime="20201115 22:59:54.571"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.164" endtime="20201115 22:59:54.572"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.163" endtime="20201115 22:59:54.572"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.574" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.585" endtime="20201115 22:59:54.601"></status>
</kw>
<msg timestamp="20201115 22:59:54.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.583" endtime="20201115 22:59:54.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.603" endtime="20201115 22:59:54.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.606" endtime="20201115 22:59:54.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.580" endtime="20201115 22:59:54.608"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.577" endtime="20201115 22:59:54.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.617" endtime="20201115 22:59:54.924"></status>
</kw>
<msg timestamp="20201115 22:59:54.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028270125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028287431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.616" endtime="20201115 22:59:54.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028270125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028287431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:54.935" endtime="20201115 22:59:54.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.955" endtime="20201115 22:59:54.961"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.612" endtime="20201115 22:59:54.963"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.610" endtime="20201115 22:59:54.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:54.976" level="INFO">${RESULT} = [{'time': 0.028287431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7305999999998184e-05, 'source_diff': 1.7305999999998184e-05}, {'time': 0.028313431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:54.966" endtime="20201115 22:59:54.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.008" level="INFO">${ACCURACY} = {'diff': [1.7305999999998184e-05, 1.791699999999924e-05, 1.786100000000096e-05, 1.7665999999999515e-05, 1.7401999999999695e-05, 1.7735999999997365e-05, 1.7459000000000918e-05, 1.7763999999999974e-05, ...</msg>
<status status="PASS" starttime="20201115 22:59:54.978" endtime="20201115 22:59:55.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.020" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.018" endtime="20201115 22:59:55.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.026" level="INFO">VALUE: [1.7305999999998184e-05, 1.791699999999924e-05, 1.786100000000096e-05, 1.7665999999999515e-05, 1.7401999999999695e-05, 1.7735999999997365e-05, 1.7459000000000918e-05, 1.7763999999999974e-05, 1.7735999999997365e-05, 1.783299999999835e-05, 1.7236000000000334e-05, 1.7472000000001014e-05, 1.736100000000046e-05, 1.7944000000002375e-05, 1.8221999999998295e-05, 1.805499999999946e-05, 1.7971999999998045e-05, 1.7957999999998475e-05, 1.7750000000000404e-05, 1.7486000000000584e-05, 1.7834000000001293e-05, 1.813900000000035e-05, 1.737500000000003e-05, 1.815299999999992e-05, 1.816699999999949e-05, 1.7791999999999114e-05, 1.7679999999999085e-05, 1.794499999999838e-05, 1.7334000000000793e-05, 1.7791999999999114e-05, 1.787500000000053e-05, 1.813900000000035e-05, 1.791700000000271e-05, 1.801300000000075e-05, 1.7500000000000154e-05, 1.7305999999998184e-05, 1.765299999999942e-05, 1.7306000000001653e-05, 1.777700000000007e-05, 1.7915999999999765e-05, 1.730499999999871e-05, 1.756899999999853e-05, 1.7514000000003194e-05, 1.7971999999998045e-05, 1.729100000000261e-05, 1.7722000000001265e-05, 1.806899999999903e-05, 1.7429999999998835e-05, 1.813900000000035e-05, 1.8014000000000224e-05]</msg>
<status status="PASS" starttime="20201115 22:59:55.023" endtime="20201115 22:59:55.027"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.010" endtime="20201115 22:59:55.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.036" endtime="20201115 22:59:55.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.045" endtime="20201115 22:59:55.067"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.040" endtime="20201115 22:59:55.069"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.031" endtime="20201115 22:59:55.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.575" endtime="20201115 22:59:55.071"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.573" endtime="20201115 22:59:55.072"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.572" endtime="20201115 22:59:55.072"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.078" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.101" endtime="20201115 22:59:55.121"></status>
</kw>
<msg timestamp="20201115 22:59:55.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.098" endtime="20201115 22:59:55.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.124" endtime="20201115 22:59:55.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.131" endtime="20201115 22:59:55.135"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.090" endtime="20201115 22:59:55.137"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.084" endtime="20201115 22:59:55.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.161" endtime="20201115 22:59:55.521"></status>
</kw>
<msg timestamp="20201115 22:59:55.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049821125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049838653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.153" endtime="20201115 22:59:55.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049821125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049838653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.532" endtime="20201115 22:59:55.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.552" endtime="20201115 22:59:55.556"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.145" endtime="20201115 22:59:55.558"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.140" endtime="20201115 22:59:55.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:55.571" level="INFO">${RESULT} = [{'time': 0.049838653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7527999999995825e-05, 'source_diff': 1.7527999999995825e-05}, {'time': 0.049866667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:55.561" endtime="20201115 22:59:55.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:55.603" level="INFO">${ACCURACY} = {'diff': [1.7527999999995825e-05, 1.8153000000006858e-05, 1.7542000000002334e-05, 1.7445000000004818e-05, 1.8221999999998295e-05, 1.755499999999549e-05, 1.7862000000000433e-05, 1.808300000000207e-05, ...</msg>
<status status="PASS" starttime="20201115 22:59:55.573" endtime="20201115 22:59:55.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.615" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 22:59:55.612" endtime="20201115 22:59:55.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.621" level="INFO">VALUE: [1.7527999999995825e-05, 1.8153000000006858e-05, 1.7542000000002334e-05, 1.7445000000004818e-05, 1.8221999999998295e-05, 1.755499999999549e-05, 1.7862000000000433e-05, 1.808300000000207e-05, 1.809700000000164e-05, 1.772299999999727e-05, 1.7902000000000196e-05, 1.783300000000182e-05, 1.7415999999999265e-05, 1.756899999999506e-05, 1.811100000000121e-05, 1.8042000000002834e-05, 1.7972000000004984e-05, 1.80969999999947e-05, 1.7750000000003874e-05, 1.7485999999997115e-05, 1.815299999999992e-05, 1.734700000000089e-05, 1.8263999999997005e-05, 1.818099999999906e-05, 1.787500000000053e-05, 1.766699999999899e-05, 1.815299999999992e-05, 1.78890000000001e-05, 1.7569999999994534e-05, 1.7445000000004818e-05, 1.7569000000002e-05, 1.763899999999985e-05, 1.7471999999997545e-05, 1.7263999999996005e-05, 1.784699999999445e-05, 1.7805999999995215e-05, 1.7278000000002514e-05, 1.7459000000004388e-05, 1.808300000000207e-05, 1.7264000000002944e-05, 1.8207999999998725e-05, 1.8223000000004708e-05, 1.8042000000002834e-05, 1.7999999999997185e-05, 1.8070000000001973e-05, 1.752700000000329e-05, 1.7986000000004554e-05, 1.7693999999998655e-05, 1.736100000000046e-05, 1.7750000000003874e-05]</msg>
<status status="PASS" starttime="20201115 22:59:55.617" endtime="20201115 22:59:55.622"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.605" endtime="20201115 22:59:55.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.630" endtime="20201115 22:59:55.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:55.639" endtime="20201115 22:59:55.661"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.635" endtime="20201115 22:59:55.663"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.625" endtime="20201115 22:59:55.665"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.079" endtime="20201115 22:59:55.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.075" endtime="20201115 22:59:55.666"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.073" endtime="20201115 22:59:55.667"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.673" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.696" endtime="20201115 22:59:55.715"></status>
</kw>
<msg timestamp="20201115 22:59:55.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.692" endtime="20201115 22:59:55.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:55.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:55.719" endtime="20201115 22:59:55.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.727" endtime="20201115 22:59:55.731"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.685" endtime="20201115 22:59:55.733"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.678" endtime="20201115 22:59:55.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:55.752" endtime="20201115 22:59:56.113"></status>
</kw>
<msg timestamp="20201115 22:59:56.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049754375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049772792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:55.748" endtime="20201115 22:59:56.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049754375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049772792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.123" endtime="20201115 22:59:56.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.143" endtime="20201115 22:59:56.149"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.741" endtime="20201115 22:59:56.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.735" endtime="20201115 22:59:56.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.164" level="INFO">${RESULT} = [{'time': 0.049772792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.841699999999974e-05, 'source_diff': 1.841699999999974e-05}, {'time': 0.049810806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:56.154" endtime="20201115 22:59:56.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.196" level="INFO">${ACCURACY} = {'diff': [1.841699999999974e-05, 1.8805999999996215e-05, 1.8693999999999655e-05, 1.847299999999802e-05, 1.88890000000011e-05, 1.9235999999998865e-05, 1.8598000000001613e-05, 1.861099999999477e-05, 1.8...</msg>
<status status="PASS" starttime="20201115 22:59:56.166" endtime="20201115 22:59:56.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.208" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.205" endtime="20201115 22:59:56.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.213" level="INFO">VALUE: [1.841699999999974e-05, 1.8805999999996215e-05, 1.8693999999999655e-05, 1.847299999999802e-05, 1.88890000000011e-05, 1.9235999999998865e-05, 1.8598000000001613e-05, 1.861099999999477e-05, 1.831900000000275e-05, 1.8348000000001363e-05, 1.87769999999976e-05, 1.8721999999998795e-05, 1.908300000000307e-05, 1.8735999999998365e-05, 1.8402000000000696e-05, 1.836100000000146e-05, 1.8985999999998615e-05, 1.9207999999999725e-05, 1.841699999999974e-05, 1.831900000000275e-05, 1.8528000000003764e-05, 1.906899999999656e-05, 1.8735999999998365e-05, 1.8778000000004014e-05, 1.888899999999416e-05, 1.9056000000003404e-05, 1.859700000000214e-05, 1.8541999999996395e-05, 1.881900000000325e-05, 1.862499999999434e-05, 1.916700000000049e-05, 1.9013999999997755e-05, 1.861100000000171e-05, 1.8792000000003584e-05, 1.887499999999459e-05, 1.897299999999852e-05, 1.8985999999998615e-05, 1.862500000000128e-05, 1.8930000000000335e-05, 1.8319999999995285e-05, 1.9027999999997325e-05, 1.9194000000000155e-05, 1.8693999999999655e-05, 1.840300000000017e-05, 1.8749999999997935e-05, 1.827700000000404e-05, 1.8457999999998975e-05, 1.9151999999994507e-05, 1.9194000000000155e-05, 1.8971999999999045e-05]</msg>
<status status="PASS" starttime="20201115 22:59:56.210" endtime="20201115 22:59:56.214"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.198" endtime="20201115 22:59:56.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.223" endtime="20201115 22:59:56.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.232" endtime="20201115 22:59:56.254"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.227" endtime="20201115 22:59:56.256"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.218" endtime="20201115 22:59:56.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.674" endtime="20201115 22:59:56.258"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.669" endtime="20201115 22:59:56.259"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:55.668" endtime="20201115 22:59:56.259"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.265" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.289" endtime="20201115 22:59:56.308"></status>
</kw>
<msg timestamp="20201115 22:59:56.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.286" endtime="20201115 22:59:56.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.312" endtime="20201115 22:59:56.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.319" endtime="20201115 22:59:56.323"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.278" endtime="20201115 22:59:56.325"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.271" endtime="20201115 22:59:56.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.344" endtime="20201115 22:59:56.706"></status>
</kw>
<msg timestamp="20201115 22:59:56.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050763792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050783111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.341" endtime="20201115 22:59:56.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050763792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050783111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.716" endtime="20201115 22:59:56.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.737" endtime="20201115 22:59:56.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.333" endtime="20201115 22:59:56.743"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.328" endtime="20201115 22:59:56.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:56.756" level="INFO">${RESULT} = [{'time': 0.050783111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931899999999681e-05, 'source_diff': 1.931899999999681e-05}, {'time': 0.050820125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:56.746" endtime="20201115 22:59:56.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:56.791" level="INFO">${ACCURACY} = {'diff': [1.931899999999681e-05, 2.0222000000000295e-05, 2.0028000000005264e-05, 2.0180000000001586e-05, 1.962500000000228e-05, 2.0069999999997035e-05, 1.990299999999473e-05, 1.9708000000000225e-05, 2...</msg>
<status status="PASS" starttime="20201115 22:59:56.758" endtime="20201115 22:59:56.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.803" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 22:59:56.801" endtime="20201115 22:59:56.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.809" level="INFO">VALUE: [1.931899999999681e-05, 2.0222000000000295e-05, 2.0028000000005264e-05, 2.0180000000001586e-05, 1.962500000000228e-05, 2.0069999999997035e-05, 1.990299999999473e-05, 1.9708000000000225e-05, 2.016700000000149e-05, 1.998699999999909e-05, 1.9569999999996535e-05, 1.9778000000005014e-05, 1.945899999999945e-05, 1.9291999999997145e-05, 1.962499999999534e-05, 2.018100000000106e-05, 2.0069999999997035e-05, 2.018099999999412e-05, 1.9791999999997645e-05, 1.958299999999663e-05, 1.9791999999997645e-05, 1.9666000000001516e-05, 1.9985999999999615e-05, 1.9430000000000835e-05, 2.002699999999885e-05, 1.9499999999998685e-05, 1.930499999999724e-05, 1.9416000000001266e-05, 2.016700000000149e-05, 1.9929999999994397e-05, 1.9694000000000655e-05, 1.9944000000000905e-05, 1.9485999999999115e-05, 1.938899999999466e-05, 2.0263999999999005e-05, 1.986099999999602e-05, 2.006899999999756e-05, 1.9958000000000475e-05, 1.940299999999423e-05, 2.015300000000192e-05, 1.9834000000003293e-05, 2.0041999999997895e-05, 1.9485999999999115e-05, 1.941700000000074e-05, 2.011100000000321e-05, 2.0249999999999435e-05, 1.965299999999448e-05, 2.0055999999997465e-05, 1.9834000000003293e-05, 2.015300000000192e-05]</msg>
<status status="PASS" starttime="20201115 22:59:56.806" endtime="20201115 22:59:56.811"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.793" endtime="20201115 22:59:56.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.820" endtime="20201115 22:59:56.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.830" endtime="20201115 22:59:56.852"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.824" endtime="20201115 22:59:56.854"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.814" endtime="20201115 22:59:56.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.267" endtime="20201115 22:59:56.856"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.262" endtime="20201115 22:59:56.857"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.260" endtime="20201115 22:59:56.857"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.863" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.887" endtime="20201115 22:59:56.907"></status>
</kw>
<msg timestamp="20201115 22:59:56.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.883" endtime="20201115 22:59:56.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.910" endtime="20201115 22:59:56.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.917" endtime="20201115 22:59:56.921"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.875" endtime="20201115 22:59:56.923"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.869" endtime="20201115 22:59:56.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.943" endtime="20201115 22:59:57.303"></status>
</kw>
<msg timestamp="20201115 22:59:57.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050059014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050079889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.939" endtime="20201115 22:59:57.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050059014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050079889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.314" endtime="20201115 22:59:57.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.334" endtime="20201115 22:59:57.340"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.931" endtime="20201115 22:59:57.342"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.926" endtime="20201115 22:59:57.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.355" level="INFO">${RESULT} = [{'time': 0.050079889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.087500000000353e-05, 'source_diff': 2.087500000000353e-05}, {'time': 0.050109889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:57.345" endtime="20201115 22:59:57.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.387" level="INFO">${ACCURACY} = {'diff': [2.087500000000353e-05, 2.058299999999763e-05, 2.116700000000249e-05, 2.115300000000292e-05, 2.115299999999598e-05, 2.0736000000000365e-05, 2.044500000000088e-05, 2.080500000000568e-05, 2.116...</msg>
<status status="PASS" starttime="20201115 22:59:57.357" endtime="20201115 22:59:57.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.398" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.396" endtime="20201115 22:59:57.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.404" level="INFO">VALUE: [2.087500000000353e-05, 2.058299999999763e-05, 2.116700000000249e-05, 2.115300000000292e-05, 2.115299999999598e-05, 2.0736000000000365e-05, 2.044500000000088e-05, 2.080500000000568e-05, 2.116699999999555e-05, 2.0805999999998215e-05, 2.056899999999806e-05, 2.1083999999997605e-05, 2.086100000000396e-05, 2.0736000000000365e-05, 2.1250000000000435e-05, 2.102699999999985e-05, 2.0763999999999505e-05, 2.0958000000001475e-05, 2.086099999999702e-05, 2.112500000000378e-05, 2.1236000000000865e-05, 2.058299999999763e-05, 2.0665999999995577e-05, 2.055499999999849e-05, 2.1027999999999325e-05, 2.062500000000328e-05, 2.0486000000000115e-05, 2.0958000000001475e-05, 2.0749999999999935e-05, 2.1194000000002156e-05, 2.065299999999548e-05, 2.055499999999849e-05, 2.116700000000249e-05, 2.065299999999548e-05, 2.0764000000006444e-05, 2.062500000000328e-05, 2.094500000000138e-05, 2.115300000000292e-05, 2.0736000000000365e-05, 2.129099999999967e-05, 2.093099999999487e-05, 2.1235999999993926e-05, 2.111100000000421e-05, 2.115300000000292e-05, 2.087500000000353e-05, 2.0763999999999505e-05, 2.0362000000002933e-05, 2.0665999999995577e-05, 2.1165999999996077e-05, 2.104099999999942e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.401" endtime="20201115 22:59:57.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.389" endtime="20201115 22:59:57.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.415" endtime="20201115 22:59:57.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.424" endtime="20201115 22:59:57.446"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.419" endtime="20201115 22:59:57.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.410" endtime="20201115 22:59:57.449"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.865" endtime="20201115 22:59:57.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.860" endtime="20201115 22:59:57.451"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.858" endtime="20201115 22:59:57.451"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.457" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.480" endtime="20201115 22:59:57.500"></status>
</kw>
<msg timestamp="20201115 22:59:57.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.477" endtime="20201115 22:59:57.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.504" endtime="20201115 22:59:57.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.510" endtime="20201115 22:59:57.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.468" endtime="20201115 22:59:57.516"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.462" endtime="20201115 22:59:57.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.536" endtime="20201115 22:59:57.897"></status>
</kw>
<msg timestamp="20201115 22:59:57.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04991025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049931694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:57.532" endtime="20201115 22:59:57.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04991025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049931694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:57.907" endtime="20201115 22:59:57.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.927" endtime="20201115 22:59:57.932"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.524" endtime="20201115 22:59:57.933"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.519" endtime="20201115 22:59:57.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.946" level="INFO">${RESULT} = [{'time': 0.049931694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1443999999995467e-05, 'source_diff': 2.1443999999995467e-05}, {'time': 0.049971708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:57.936" endtime="20201115 22:59:57.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.979" level="INFO">${ACCURACY} = {'diff': [2.1443999999995467e-05, 2.2040999999993482e-05, 2.181899999999931e-05, 2.133299999999838e-05, 2.1750000000000935e-05, 2.130499999999924e-05, 2.2250000000001435e-05, 2.137499999999709e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:59:57.948" endtime="20201115 22:59:57.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.991" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.988" endtime="20201115 22:59:57.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.997" level="INFO">VALUE: [2.1443999999995467e-05, 2.2040999999993482e-05, 2.181899999999931e-05, 2.133299999999838e-05, 2.1750000000000935e-05, 2.130499999999924e-05, 2.2250000000001435e-05, 2.137499999999709e-05, 2.193100000000281e-05, 2.1514000000000255e-05, 2.1764000000000505e-05, 2.1499999999993746e-05, 2.156899999999906e-05, 2.1708000000002226e-05, 2.212499999999784e-05, 2.188899999999716e-05, 2.190300000000367e-05, 2.1819999999998785e-05, 2.219500000000263e-05, 2.211099999999827e-05, 2.1569999999998535e-05, 2.216700000000349e-05, 2.1985999999994676e-05, 2.1514000000000255e-05, 2.2014000000000755e-05, 2.2014000000000755e-05, 2.1833999999998355e-05, 2.1680000000003086e-05, 2.131899999999881e-05, 2.2250000000001435e-05, 2.211100000000521e-05, 2.134699999999795e-05, 2.209700000000564e-05, 2.20969999999987e-05, 2.133299999999838e-05, 2.1429999999995897e-05, 2.1458000000001975e-05, 2.211099999999827e-05, 2.159700000000514e-05, 2.165300000000342e-05, 2.1708000000002226e-05, 2.212499999999784e-05, 2.205499999999999e-05, 2.1805999999999215e-05, 2.2014000000000755e-05, 2.2055999999999465e-05, 2.140300000000317e-05, 2.1721999999994857e-05, 2.1972000000002045e-05, 2.1514000000000255e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.993" endtime="20201115 22:59:57.998"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.981" endtime="20201115 22:59:58.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.007" endtime="20201115 22:59:58.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.016" endtime="20201115 22:59:58.038"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.011" endtime="20201115 22:59:58.040"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.002" endtime="20201115 22:59:58.041"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.458" endtime="20201115 22:59:58.042"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.454" endtime="20201115 22:59:58.043"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.452" endtime="20201115 22:59:58.043"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.049" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.070" endtime="20201115 22:59:58.085"></status>
</kw>
<msg timestamp="20201115 22:59:58.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.068" endtime="20201115 22:59:58.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.087" endtime="20201115 22:59:58.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.090" endtime="20201115 22:59:58.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.061" endtime="20201115 22:59:58.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.055" endtime="20201115 22:59:58.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.102" endtime="20201115 22:59:58.389"></status>
</kw>
<msg timestamp="20201115 22:59:58.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046365125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046388278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.100" endtime="20201115 22:59:58.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046365125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046388278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.393" endtime="20201115 22:59:58.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.402" endtime="20201115 22:59:58.405"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.097" endtime="20201115 22:59:58.406"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.094" endtime="20201115 22:59:58.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.411" level="INFO">${RESULT} = [{'time': 0.046388278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.315299999999798e-05, 'source_diff': 2.315299999999798e-05}, {'time': 0.046422278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:58.407" endtime="20201115 22:59:58.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.426" level="INFO">${ACCURACY} = {'diff': [2.315299999999798e-05, 2.2485999999995177e-05, 2.288899999999816e-05, 2.2819999999999785e-05, 2.244500000000288e-05, 2.293099999999687e-05, 2.2333999999998855e-05, 2.3083999999999605e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:59:58.413" endtime="20201115 22:59:58.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.431" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.430" endtime="20201115 22:59:58.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.434" level="INFO">VALUE: [2.315299999999798e-05, 2.2485999999995177e-05, 2.288899999999816e-05, 2.2819999999999785e-05, 2.244500000000288e-05, 2.293099999999687e-05, 2.2333999999998855e-05, 2.3083999999999605e-05, 2.3097999999999175e-05, 2.252700000000135e-05, 2.231899999999981e-05, 2.319499999999669e-05, 2.233299999999938e-05, 2.2957999999996537e-05, 2.3082999999993192e-05, 2.237499999999809e-05, 2.315299999999798e-05, 2.256900000000006e-05, 2.269499999999619e-05, 2.308300000000013e-05, 2.293099999999687e-05, 2.2542000000000395e-05, 2.2721999999995857e-05, 2.290299999999773e-05, 2.2777999999994136e-05, 2.2555999999999965e-05, 2.2569999999999535e-05, 2.2750000000001935e-05, 2.2542000000000395e-05, 2.322300000000277e-05, 2.2665999999997577e-05, 2.308300000000013e-05, 2.240299999999723e-05, 2.2528000000000825e-05, 2.2415999999997327e-05, 2.2749999999994996e-05, 2.2708000000003226e-05, 2.2887999999998687e-05, 2.3278000000001575e-05, 2.2500000000001685e-05, 2.2387999999998187e-05, 2.3151999999998507e-05, 2.2458000000002976e-05, 2.288899999999816e-05, 2.312499999999884e-05, 2.311099999999927e-05, 2.2694000000003656e-05, 2.261099999999877e-05, 2.236099999999852e-05, 2.2985999999995677e-05]</msg>
<status status="PASS" starttime="20201115 22:59:58.433" endtime="20201115 22:59:58.435"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.427" endtime="20201115 22:59:58.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.438" endtime="20201115 22:59:58.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.443" endtime="20201115 22:59:58.462"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.440" endtime="20201115 22:59:58.463"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.436" endtime="20201115 22:59:58.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.050" endtime="20201115 22:59:58.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.046" endtime="20201115 22:59:58.464"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.044" endtime="20201115 22:59:58.464"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.467" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.478" endtime="20201115 22:59:58.493"></status>
</kw>
<msg timestamp="20201115 22:59:58.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.476" endtime="20201115 22:59:58.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.495" endtime="20201115 22:59:58.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.498" endtime="20201115 22:59:58.500"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.473" endtime="20201115 22:59:58.501"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.470" endtime="20201115 22:59:58.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.510" endtime="20201115 22:59:58.871"></status>
</kw>
<msg timestamp="20201115 22:59:58.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028007792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028031972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.508" endtime="20201115 22:59:58.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028007792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028031972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.881" endtime="20201115 22:59:58.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.903" endtime="20201115 22:59:58.908"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.505" endtime="20201115 22:59:58.910"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.502" endtime="20201115 22:59:58.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.923" level="INFO">${RESULT} = [{'time': 0.028031972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4179999999998647e-05, 'source_diff': 2.4179999999998647e-05}, {'time': 0.028064986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:58.913" endtime="20201115 22:59:58.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.958" level="INFO">${ACCURACY} = {'diff': [2.4179999999998647e-05, 2.413899999999941e-05, 2.415300000000245e-05, 2.4193999999998217e-05, 2.3693999999997717e-05, 2.341700000000127e-05, 2.4236000000000396e-05, 2.412499999999984e-05, 2....</msg>
<status status="PASS" starttime="20201115 22:59:58.925" endtime="20201115 22:59:58.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.970" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.967" endtime="20201115 22:59:58.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.976" level="INFO">VALUE: [2.4179999999998647e-05, 2.413899999999941e-05, 2.415300000000245e-05, 2.4193999999998217e-05, 2.3693999999997717e-05, 2.341700000000127e-05, 2.4236000000000396e-05, 2.412499999999984e-05, 2.370899999999676e-05, 2.3528000000001825e-05, 2.3584000000000105e-05, 2.394499999999744e-05, 2.3333999999999855e-05, 2.368100000000109e-05, 2.3764000000002505e-05, 2.415299999999898e-05, 2.386100000000002e-05, 2.365300000000195e-05, 2.386100000000002e-05, 2.3458000000000506e-05, 2.3999999999999716e-05, 2.412500000000331e-05, 2.3514000000002255e-05, 2.4096999999997232e-05, 2.3929999999998397e-05, 2.3735999999999896e-05, 2.3929999999998397e-05, 2.3708000000000756e-05, 2.383300000000088e-05, 2.337499999999909e-05, 2.408300000000113e-05, 2.3763999999999036e-05, 2.3958000000001006e-05, 2.3320000000000285e-05, 2.3693999999997717e-05, 2.3735999999999896e-05, 2.3556000000000965e-05, 2.361099999999977e-05, 2.3556000000000965e-05, 2.4056000000001465e-05, 2.4249999999999966e-05, 2.348699999999912e-05, 2.336099999999952e-05, 2.3542000000001395e-05, 2.366700000000152e-05, 2.333300000000038e-05, 2.3556000000000965e-05, 2.3666000000002047e-05, 2.3541999999997926e-05, 2.3861999999999495e-05]</msg>
<status status="PASS" starttime="20201115 22:59:58.972" endtime="20201115 22:59:58.977"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.960" endtime="20201115 22:59:58.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.985" endtime="20201115 22:59:58.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.994" endtime="20201115 22:59:59.017"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.990" endtime="20201115 22:59:59.018"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.980" endtime="20201115 22:59:59.020"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.468" endtime="20201115 22:59:59.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.466" endtime="20201115 22:59:59.021"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.465" endtime="20201115 22:59:59.022"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.027" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.051" endtime="20201115 22:59:59.071"></status>
</kw>
<msg timestamp="20201115 22:59:59.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.048" endtime="20201115 22:59:59.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.074" endtime="20201115 22:59:59.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.082" endtime="20201115 22:59:59.087"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.040" endtime="20201115 22:59:59.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.034" endtime="20201115 22:59:59.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.110" endtime="20201115 22:59:59.475"></status>
</kw>
<msg timestamp="20201115 22:59:59.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050148222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050172958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.105" endtime="20201115 22:59:59.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050148222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050172958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.485" endtime="20201115 22:59:59.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.506" endtime="20201115 22:59:59.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.098" endtime="20201115 22:59:59.514"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.092" endtime="20201115 22:59:59.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.527" level="INFO">${RESULT} = [{'time': 0.050172958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4735999999997427e-05, 'source_diff': 2.4735999999997427e-05}, {'time': 0.050212014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:59.517" endtime="20201115 22:59:59.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.559" level="INFO">${ACCURACY} = {'diff': [2.4735999999997427e-05, 2.5207999999998787e-05, 2.4235999999996927e-05, 2.4471999999997607e-05, 2.4985999999997677e-05, 2.5013999999996817e-05, 2.4707999999998287e-05, 2.506900000000256e-05,...</msg>
<status status="PASS" starttime="20201115 22:59:59.529" endtime="20201115 22:59:59.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.571" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.568" endtime="20201115 22:59:59.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.577" level="INFO">VALUE: [2.4735999999997427e-05, 2.5207999999998787e-05, 2.4235999999996927e-05, 2.4471999999997607e-05, 2.4985999999997677e-05, 2.5013999999996817e-05, 2.4707999999998287e-05, 2.506900000000256e-05, 2.440299999999923e-05, 2.4693999999998717e-05, 2.465299999999948e-05, 2.4957999999998537e-05, 2.463899999999991e-05, 2.4693999999998717e-05, 2.5013999999996817e-05, 2.4806000000002215e-05, 2.49169999999993e-05, 2.5235999999997927e-05, 2.4346999999994012e-05, 2.469500000000513e-05, 2.5194000000006156e-05, 2.4570000000001535e-05, 2.5084000000001605e-05, 2.463899999999991e-05, 2.511100000000127e-05, 2.4485999999997177e-05, 2.4568999999995123e-05, 2.4486000000004116e-05, 2.4416000000006266e-05, 2.456900000000206e-05, 2.5027999999996386e-05, 2.486100000000102e-05, 2.4458000000004976e-05, 2.5068999999995623e-05, 2.433300000000138e-05, 2.4292000000002145e-05, 2.443099999999837e-05, 2.4278000000002575e-05, 2.4528000000002825e-05, 2.4820000000001785e-05, 2.4736000000004366e-05, 2.4471999999997607e-05, 2.4806000000002215e-05, 2.4292000000002145e-05, 2.463899999999991e-05, 2.4902000000000257e-05, 2.516700000000649e-05, 2.445899999999751e-05, 2.4665999999999577e-05, 2.4971999999998107e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.573" endtime="20201115 22:59:59.578"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.561" endtime="20201115 22:59:59.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.587" endtime="20201115 22:59:59.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.596" endtime="20201115 22:59:59.620"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.591" endtime="20201115 22:59:59.623"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.581" endtime="20201115 22:59:59.626"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.029" endtime="20201115 22:59:59.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.025" endtime="20201115 22:59:59.627"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.023" endtime="20201115 22:59:59.629"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.636" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.659" endtime="20201115 22:59:59.679"></status>
</kw>
<msg timestamp="20201115 22:59:59.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.656" endtime="20201115 22:59:59.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.682" endtime="20201115 22:59:59.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.690" endtime="20201115 22:59:59.694"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.648" endtime="20201115 22:59:59.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.642" endtime="20201115 22:59:59.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.716" endtime="20201115 23:00:00.064"></status>
</kw>
<msg timestamp="20201115 23:00:00.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057178958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05720425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 22:59:59.712" endtime="20201115 23:00:00.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057178958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05720425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:00.074" endtime="20201115 23:00:00.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.092" endtime="20201115 23:00:00.096"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.704" endtime="20201115 23:00:00.098"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.699" endtime="20201115 23:00:00.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.110" level="INFO">${RESULT} = [{'time': 0.05720425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5291999999996206e-05, 'source_diff': 2.5291999999996206e-05}, {'time': 0.057243264, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:00.101" endtime="20201115 23:00:00.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.141" level="INFO">${ACCURACY} = {'diff': [2.5291999999996206e-05, 2.6235999999998927e-05, 2.588900000000116e-05, 2.5971999999999107e-05, 2.6235999999998927e-05, 2.59170000000003e-05, 2.5485999999998177e-05, 2.5346999999995012e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:00:00.112" endtime="20201115 23:00:00.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.152" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.150" endtime="20201115 23:00:00.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.158" level="INFO">VALUE: [2.5291999999996206e-05, 2.6235999999998927e-05, 2.588900000000116e-05, 2.5971999999999107e-05, 2.6235999999998927e-05, 2.59170000000003e-05, 2.5485999999998177e-05, 2.5346999999995012e-05, 2.566700000000005e-05, 2.613900000000141e-05, 2.561100000000177e-05, 2.611100000000227e-05, 2.561100000000177e-05, 2.612500000000184e-05, 2.5846999999995512e-05, 2.613900000000141e-05, 2.6194000000000217e-05, 2.5790999999997233e-05, 2.6194000000000217e-05, 2.5791000000004172e-05, 2.5832999999995943e-05, 2.5528000000003825e-05, 2.5749999999997997e-05, 2.5693999999999717e-05, 2.562500000000134e-05, 2.537500000000109e-05, 2.6082999999996193e-05, 2.565300000000048e-05, 2.6014000000004756e-05, 2.5707999999999287e-05, 2.581900000000331e-05, 2.544499999999894e-05, 2.533300000000238e-05, 2.612500000000184e-05, 2.5471999999998607e-05, 2.5485999999998177e-05, 2.5333999999994916e-05, 2.561100000000177e-05, 2.590300000000073e-05, 2.565300000000048e-05, 2.54169999999998e-05, 2.6082999999996193e-05, 2.5612000000001245e-05, 2.563900000000091e-05, 2.5693999999999717e-05, 2.5860999999995082e-05, 2.5402000000000757e-05, 2.6194000000000217e-05, 2.616700000000055e-05, 2.5790999999997233e-05]</msg>
<status status="PASS" starttime="20201115 23:00:00.154" endtime="20201115 23:00:00.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.143" endtime="20201115 23:00:00.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.166" endtime="20201115 23:00:00.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.175" endtime="20201115 23:00:00.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.170" endtime="20201115 23:00:00.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.162" endtime="20201115 23:00:00.199"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.637" endtime="20201115 23:00:00.200"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.633" endtime="20201115 23:00:00.201"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.630" endtime="20201115 23:00:00.201"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.207" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.239" endtime="20201115 23:00:00.258"></status>
</kw>
<msg timestamp="20201115 23:00:00.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.235" endtime="20201115 23:00:00.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.262" endtime="20201115 23:00:00.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.268" endtime="20201115 23:00:00.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.228" endtime="20201115 23:00:00.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.212" endtime="20201115 23:00:00.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.292" endtime="20201115 23:00:00.656"></status>
</kw>
<msg timestamp="20201115 23:00:00.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057708278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057735514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.288" endtime="20201115 23:00:00.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057708278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057735514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.666" endtime="20201115 23:00:00.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.686" endtime="20201115 23:00:00.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.281" endtime="20201115 23:00:00.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.276" endtime="20201115 23:00:00.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.706" level="INFO">${RESULT} = [{'time': 0.057735514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7235999999999927e-05, 'source_diff': 2.7235999999999927e-05}, {'time': 0.057782514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:00.697" endtime="20201115 23:00:00.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.739" level="INFO">${ACCURACY} = {'diff': [2.7235999999999927e-05, 2.6320000000003285e-05, 2.6778000000005076e-05, 2.69170000000013e-05, 2.6820000000003785e-05, 2.6791999999997707e-05, 2.7084000000003605e-05, 2.662500000000234e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:00:00.709" endtime="20201115 23:00:00.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.750" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.748" endtime="20201115 23:00:00.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.756" level="INFO">VALUE: [2.7235999999999927e-05, 2.6320000000003285e-05, 2.6778000000005076e-05, 2.69170000000013e-05, 2.6820000000003785e-05, 2.6791999999997707e-05, 2.7084000000003605e-05, 2.662500000000234e-05, 2.687500000000259e-05, 2.656900000000406e-05, 2.6791000000005172e-05, 2.633300000000338e-05, 2.665199999999507e-05, 2.6485999999999177e-05, 2.7208000000000787e-05, 2.6776999999998663e-05, 2.6513999999998317e-05, 2.6804999999997803e-05, 2.633300000000338e-05, 2.712500000000284e-05, 2.6832999999996943e-05, 2.7054999999998053e-05, 2.7208000000000787e-05, 2.7194000000001217e-05, 2.7194000000001217e-05, 2.6832999999996943e-05, 2.6834000000003355e-05, 2.6848000000002925e-05, 2.6792000000004645e-05, 2.715300000000198e-05, 2.6471999999999607e-05, 2.7013999999998817e-05, 2.7013999999998817e-05, 2.6540999999997983e-05, 2.7069999999997096e-05, 2.7041999999997957e-05, 2.6582999999996693e-05, 2.716700000000155e-05, 2.6763999999998567e-05, 2.6999999999999247e-05, 2.6388999999994722e-05, 2.6790999999998233e-05, 2.6721999999999857e-05, 2.6458000000000037e-05, 2.683300000000388e-05, 2.6972000000000107e-05, 2.716700000000155e-05, 2.6944000000000967e-05, 2.6568999999997123e-05, 2.7028000000005326e-05]</msg>
<status status="PASS" starttime="20201115 23:00:00.753" endtime="20201115 23:00:00.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.741" endtime="20201115 23:00:00.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.766" endtime="20201115 23:00:00.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.775" endtime="20201115 23:00:00.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.770" endtime="20201115 23:00:00.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.761" endtime="20201115 23:00:00.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.208" endtime="20201115 23:00:00.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.204" endtime="20201115 23:00:00.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.202" endtime="20201115 23:00:00.803"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.808" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.832" endtime="20201115 23:00:00.851"></status>
</kw>
<msg timestamp="20201115 23:00:00.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.828" endtime="20201115 23:00:00.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.855" endtime="20201115 23:00:00.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.862" endtime="20201115 23:00:00.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.821" endtime="20201115 23:00:00.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.814" endtime="20201115 23:00:00.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.887" endtime="20201115 23:00:01.262"></status>
</kw>
<msg timestamp="20201115 23:00:01.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049829847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049857111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.883" endtime="20201115 23:00:01.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049829847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049857111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.272" endtime="20201115 23:00:01.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.293" endtime="20201115 23:00:01.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.876" endtime="20201115 23:00:01.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.871" endtime="20201115 23:00:01.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.311" level="INFO">${RESULT} = [{'time': 0.049857111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7264000000006006e-05, 'source_diff': 2.7264000000006006e-05}, {'time': 0.049901125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:01.302" endtime="20201115 23:00:01.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.347" level="INFO">${ACCURACY} = {'diff': [2.7264000000006006e-05, 2.7707999999994348e-05, 2.7278000000005576e-05, 2.7791999999998707e-05, 2.7527999999998887e-05, 2.768100000000162e-05, 2.795900000000101e-05, 2.7348000000003425e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:01.314" endtime="20201115 23:00:01.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.359" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.356" endtime="20201115 23:00:01.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.364" level="INFO">VALUE: [2.7264000000006006e-05, 2.7707999999994348e-05, 2.7278000000005576e-05, 2.7791999999998707e-05, 2.7527999999998887e-05, 2.768100000000162e-05, 2.795900000000101e-05, 2.7348000000003425e-05, 2.7277999999998637e-05, 2.7527999999998887e-05, 2.7736000000000427e-05, 2.795900000000101e-05, 2.7277999999998637e-05, 2.7402999999995292e-05, 2.7362000000002995e-05, 2.7916000000002827e-05, 2.7694000000001717e-05, 2.7804999999998803e-05, 2.7791000000006172e-05, 2.7776999999999663e-05, 2.7805000000005742e-05, 2.813900000000341e-05, 2.7971999999994168e-05, 2.7638999999995972e-05, 2.7818999999998373e-05, 2.7346999999997013e-05, 2.8000000000000247e-05, 2.7374999999996152e-05, 2.813900000000341e-05, 2.737500000000309e-05, 2.7944000000001967e-05, 2.8000000000000247e-05, 2.7694999999994252e-05, 2.7458000000001037e-05, 2.8054999999999053e-05, 2.7916999999995362e-05, 2.822300000000083e-05, 2.8180000000002647e-05, 2.8138999999996472e-05, 2.8138999999996472e-05, 2.7499999999999747e-05, 2.7860999999997083e-05, 2.7957999999994598e-05, 2.7638000000003438e-05, 2.7458000000001037e-05, 2.8000000000000247e-05, 2.7972000000001107e-05, 2.7818999999998373e-05, 2.8040999999999483e-05, 2.7472000000000607e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.361" endtime="20201115 23:00:01.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.349" endtime="20201115 23:00:01.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.375" endtime="20201115 23:00:01.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.384" endtime="20201115 23:00:01.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.379" endtime="20201115 23:00:01.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.370" endtime="20201115 23:00:01.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.810" endtime="20201115 23:00:01.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.806" endtime="20201115 23:00:01.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.804" endtime="20201115 23:00:01.411"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.417" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.441" endtime="20201115 23:00:01.460"></status>
</kw>
<msg timestamp="20201115 23:00:01.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.437" endtime="20201115 23:00:01.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.464" endtime="20201115 23:00:01.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.471" endtime="20201115 23:00:01.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.429" endtime="20201115 23:00:01.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.423" endtime="20201115 23:00:01.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.496" endtime="20201115 23:00:01.806"></status>
</kw>
<msg timestamp="20201115 23:00:01.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049745319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049774583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.492" endtime="20201115 23:00:01.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049745319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049774583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.810" endtime="20201115 23:00:01.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.819" endtime="20201115 23:00:01.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.484" endtime="20201115 23:00:01.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.479" endtime="20201115 23:00:01.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.828" level="INFO">${RESULT} = [{'time': 0.049774583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9263999999994128e-05, 'source_diff': 2.9263999999994128e-05}, {'time': 0.049812528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:01.824" endtime="20201115 23:00:01.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.842" level="INFO">${ACCURACY} = {'diff': [2.9263999999994128e-05, 2.920900000000226e-05, 2.9166999999996612e-05, 2.8722000000001857e-05, 2.834700000000495e-05, 2.8916999999996362e-05, 2.918100000000312e-05, 2.913900000000441e-05, 2....</msg>
<status status="PASS" starttime="20201115 23:00:01.830" endtime="20201115 23:00:01.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.848" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.847" endtime="20201115 23:00:01.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.851" level="INFO">VALUE: [2.9263999999994128e-05, 2.920900000000226e-05, 2.9166999999996612e-05, 2.8722000000001857e-05, 2.834700000000495e-05, 2.8916999999996362e-05, 2.918100000000312e-05, 2.913900000000441e-05, 2.8818999999999373e-05, 2.8319999999998346e-05, 2.9112000000004745e-05, 2.9250000000001497e-05, 2.913900000000441e-05, 2.8263000000000593e-05, 2.9208000000002787e-05, 2.8818999999999373e-05, 2.837500000000409e-05, 2.8750000000000997e-05, 2.833300000000538e-05, 2.865300000000348e-05, 2.8888999999997222e-05, 2.8944000000002967e-05, 2.858300000000563e-05, 2.9096999999998763e-05, 2.884700000000545e-05, 2.8402999999996292e-05, 2.8764000000000567e-05, 2.8778000000000137e-05, 2.8944999999995502e-05, 2.870799999999535e-05, 2.8374999999997152e-05, 2.865199999999707e-05, 2.9249999999994558e-05, 2.890300000000373e-05, 2.8597999999997736e-05, 2.8804999999999803e-05, 2.844500000000194e-05, 2.8818999999999373e-05, 2.8332999999998443e-05, 2.9124999999997903e-05, 2.838799999999725e-05, 2.8930000000003397e-05, 2.840199999999682e-05, 2.8458000000002037e-05, 2.8818999999999373e-05, 2.8736000000001427e-05, 2.8514000000000317e-05, 2.8958000000002537e-05, 2.8582999999998693e-05, 2.8818999999999373e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.849" endtime="20201115 23:00:01.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.843" endtime="20201115 23:00:01.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.856" endtime="20201115 23:00:01.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.860" endtime="20201115 23:00:01.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.858" endtime="20201115 23:00:01.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.853" endtime="20201115 23:00:01.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.418" endtime="20201115 23:00:01.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.414" endtime="20201115 23:00:01.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.412" endtime="20201115 23:00:01.882"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.884" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.895" endtime="20201115 23:00:01.912"></status>
</kw>
<msg timestamp="20201115 23:00:01.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.894" endtime="20201115 23:00:01.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.914" endtime="20201115 23:00:01.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.917" endtime="20201115 23:00:01.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.890" endtime="20201115 23:00:01.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.887" endtime="20201115 23:00:01.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.928" endtime="20201115 23:00:02.268"></status>
</kw>
<msg timestamp="20201115 23:00:02.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028370403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0284005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:01.927" endtime="20201115 23:00:02.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028370403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0284005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:02.278" endtime="20201115 23:00:02.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.298" endtime="20201115 23:00:02.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.923" endtime="20201115 23:00:02.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.921" endtime="20201115 23:00:02.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.317" level="INFO">${RESULT} = [{'time': 0.0284005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0096999999999763e-05, 'source_diff': 3.0096999999999763e-05}, {'time': 0.028448486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:02.308" endtime="20201115 23:00:02.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.351" level="INFO">${ACCURACY} = {'diff': [3.0096999999999763e-05, 3.0027999999997917e-05, 2.9707999999999818e-05, 2.9846999999999513e-05, 3.0181000000000652e-05, 3.0152000000002038e-05, 3.0056000000000527e-05, 2.9361000000002052e-05...</msg>
<status status="PASS" starttime="20201115 23:00:02.320" endtime="20201115 23:00:02.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.362" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.360" endtime="20201115 23:00:02.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.368" level="INFO">VALUE: [3.0096999999999763e-05, 3.0027999999997917e-05, 2.9707999999999818e-05, 2.9846999999999513e-05, 3.0181000000000652e-05, 3.0152000000002038e-05, 3.0056000000000527e-05, 2.9361000000002052e-05, 2.9596999999999263e-05, 2.9847999999998986e-05, 3.0069999999996627e-05, 3.0208000000000318e-05, 2.9902999999997792e-05, 2.9916999999997362e-05, 2.94309999999999e-05, 2.9792000000000707e-05, 2.9958000000000068e-05, 2.9471999999999138e-05, 2.9291000000000733e-05, 2.9430000000000428e-05, 2.9681000000000152e-05, 2.9750000000001997e-05, 2.9318999999999873e-05, 2.9749999999998528e-05, 3.0083000000000193e-05, 3.0263999999998598e-05, 2.9764000000001567e-05, 2.9749999999998528e-05, 3.0028000000001387e-05, 2.9639000000001442e-05, 3.0096999999999763e-05, 2.9541999999996987e-05, 2.9708000000003287e-05, 2.994499999999997e-05, 2.9360999999998583e-05, 2.9403000000000762e-05, 3.0250000000002497e-05, 3.019500000000022e-05, 2.9264000000001067e-05, 3.0181000000000652e-05, 2.9694000000000248e-05, 3.0083000000000193e-05, 2.9624999999998403e-05, 2.988799999999875e-05, 3.015199999999857e-05, 2.9804999999997334e-05, 2.9736000000002427e-05, 3.0194000000000748e-05, 2.9707999999999818e-05, 2.9471999999999138e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.365" endtime="20201115 23:00:02.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.353" endtime="20201115 23:00:02.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.378" endtime="20201115 23:00:02.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.387" endtime="20201115 23:00:02.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.382" endtime="20201115 23:00:02.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.373" endtime="20201115 23:00:02.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.885" endtime="20201115 23:00:02.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.883" endtime="20201115 23:00:02.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.882" endtime="20201115 23:00:02.414"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.420" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.443" endtime="20201115 23:00:02.465"></status>
</kw>
<msg timestamp="20201115 23:00:02.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.439" endtime="20201115 23:00:02.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.468" endtime="20201115 23:00:02.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.475" endtime="20201115 23:00:02.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.432" endtime="20201115 23:00:02.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.426" endtime="20201115 23:00:02.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.500" endtime="20201115 23:00:02.862"></status>
</kw>
<msg timestamp="20201115 23:00:02.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050203528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050234681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.497" endtime="20201115 23:00:02.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050203528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050234681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.872" endtime="20201115 23:00:02.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.893" endtime="20201115 23:00:02.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.489" endtime="20201115 23:00:02.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.484" endtime="20201115 23:00:02.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.913" level="INFO">${RESULT} = [{'time': 0.050234681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.115300000000598e-05, 'source_diff': 3.115300000000598e-05}, {'time': 0.050285681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:02.903" endtime="20201115 23:00:02.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.945" level="INFO">${ACCURACY} = {'diff': [3.115300000000598e-05, 3.0320000000000347e-05, 3.0472000000003607e-05, 3.0374999999999153e-05, 3.091599999999889e-05, 3.090299999999879e-05, 3.052799999999495e-05, 3.055500000000155e-05, 3.0...</msg>
<status status="PASS" starttime="20201115 23:00:02.915" endtime="20201115 23:00:02.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.957" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.955" endtime="20201115 23:00:02.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.963" level="INFO">VALUE: [3.115300000000598e-05, 3.0320000000000347e-05, 3.0472000000003607e-05, 3.0374999999999153e-05, 3.091599999999889e-05, 3.090299999999879e-05, 3.052799999999495e-05, 3.055500000000155e-05, 3.0513999999995378e-05, 3.0333000000000443e-05, 3.118099999999818e-05, 3.077800000000214e-05, 3.0486000000003177e-05, 3.0416999999997862e-05, 3.07779999999952e-05, 3.116700000000555e-05, 3.0402999999998293e-05, 3.079199999999477e-05, 3.070900000000376e-05, 3.11249999999999e-05, 3.109700000000076e-05, 3.093099999999793e-05, 3.05700000000006e-05, 3.04579999999971e-05, 3.1262999999996655e-05, 3.054100000000198e-05, 3.0347999999999486e-05, 3.0388999999998723e-05, 3.115299999999904e-05, 3.098600000000368e-05, 3.094399999999803e-05, 3.069399999999778e-05, 3.0750000000003e-05, 3.119399999999828e-05, 3.084700000000051e-05, 3.0818999999994434e-05, 3.079200000000171e-05, 3.077800000000214e-05, 3.090299999999879e-05, 3.072200000000386e-05, 3.093099999999793e-05, 3.055599999999409e-05, 3.0320000000000347e-05, 3.0514000000002317e-05, 3.05700000000006e-05, 3.0264000000002067e-05, 3.127700000000316e-05, 3.082000000000085e-05, 3.108400000000067e-05, 3.0320000000000347e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.959" endtime="20201115 23:00:02.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.947" endtime="20201115 23:00:02.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.972" endtime="20201115 23:00:02.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.982" endtime="20201115 23:00:03.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.977" endtime="20201115 23:00:03.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.967" endtime="20201115 23:00:03.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.421" endtime="20201115 23:00:03.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.417" endtime="20201115 23:00:03.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.415" endtime="20201115 23:00:03.010"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.016" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.039" endtime="20201115 23:00:03.059"></status>
</kw>
<msg timestamp="20201115 23:00:03.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.036" endtime="20201115 23:00:03.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.063" endtime="20201115 23:00:03.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.070" endtime="20201115 23:00:03.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.028" endtime="20201115 23:00:03.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.022" endtime="20201115 23:00:03.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.096" endtime="20201115 23:00:03.456"></status>
</kw>
<msg timestamp="20201115 23:00:03.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050908694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050940639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.091" endtime="20201115 23:00:03.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050908694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050940639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.466" endtime="20201115 23:00:03.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.486" endtime="20201115 23:00:03.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.084" endtime="20201115 23:00:03.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.078" endtime="20201115 23:00:03.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.505" level="INFO">${RESULT} = [{'time': 0.050940639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.194500000000544e-05, 'source_diff': 3.194500000000544e-05}, {'time': 0.050980639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:03.496" endtime="20201115 23:00:03.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.540" level="INFO">${ACCURACY} = {'diff': [3.194500000000544e-05, 3.182000000000185e-05, 3.182000000000185e-05, 3.148599999999724e-05, 3.21250000000009e-05, 3.129200000000221e-05, 3.136100000000058e-05, 3.200000000000425e-05, 3.17640...</msg>
<status status="PASS" starttime="20201115 23:00:03.507" endtime="20201115 23:00:03.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.552" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.550" endtime="20201115 23:00:03.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.558" level="INFO">VALUE: [3.194500000000544e-05, 3.182000000000185e-05, 3.182000000000185e-05, 3.148599999999724e-05, 3.21250000000009e-05, 3.129200000000221e-05, 3.136100000000058e-05, 3.200000000000425e-05, 3.176400000000357e-05, 3.222200000000536e-05, 3.2040999999996544e-05, 3.1527000000003413e-05, 3.190200000000032e-05, 3.1777000000003663e-05, 3.14579999999981e-05, 3.176400000000357e-05, 3.1540999999996044e-05, 3.159700000000126e-05, 3.202799999999645e-05, 3.187500000000065e-05, 3.176399999999663e-05, 3.165299999999954e-05, 3.134700000000101e-05, 3.173599999999749e-05, 3.184700000000151e-05, 3.156999999999466e-05, 3.187500000000065e-05, 3.177800000000314e-05, 3.205600000000253e-05, 3.215300000000004e-05, 3.190299999999979e-05, 3.20700000000021e-05, 3.165299999999954e-05, 3.145800000000504e-05, 3.133400000000092e-05, 3.211199999999387e-05, 3.211100000000133e-05, 3.206900000000262e-05, 3.144400000000547e-05, 3.1777000000003663e-05, 3.2027000000003913e-05, 3.151399999999638e-05, 3.152800000000289e-05, 3.190299999999979e-05, 3.201399999999688e-05, 3.180600000000228e-05, 3.193099999999893e-05, 3.1582999999994754e-05, 3.198599999999774e-05, 3.155600000000203e-05]</msg>
<status status="PASS" starttime="20201115 23:00:03.555" endtime="20201115 23:00:03.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.542" endtime="20201115 23:00:03.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.568" endtime="20201115 23:00:03.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.577" endtime="20201115 23:00:03.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.572" endtime="20201115 23:00:03.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.563" endtime="20201115 23:00:03.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.017" endtime="20201115 23:00:03.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.013" endtime="20201115 23:00:03.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.011" endtime="20201115 23:00:03.604"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.610" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.633" endtime="20201115 23:00:03.654"></status>
</kw>
<msg timestamp="20201115 23:00:03.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.629" endtime="20201115 23:00:03.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.657" endtime="20201115 23:00:03.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.665" endtime="20201115 23:00:03.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.622" endtime="20201115 23:00:03.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.615" endtime="20201115 23:00:03.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.690" endtime="20201115 23:00:04.051"></status>
</kw>
<msg timestamp="20201115 23:00:04.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050211597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050243972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.686" endtime="20201115 23:00:04.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050211597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050243972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.061" endtime="20201115 23:00:04.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.081" endtime="20201115 23:00:04.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.679" endtime="20201115 23:00:04.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.674" endtime="20201115 23:00:04.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.101" level="INFO">${RESULT} = [{'time': 0.050243972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.237500000000115e-05, 'source_diff': 3.237500000000115e-05}, {'time': 0.050289, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:04.091" endtime="20201115 23:00:04.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.133" level="INFO">${ACCURACY} = {'diff': [3.237500000000115e-05, 3.240300000000029e-05, 3.249999999999781e-05, 3.297199999999917e-05, 3.311100000000233e-05, 3.272199999999892e-05, 3.261100000000183e-05, 3.280599999999634e-05, 3.2999...</msg>
<status status="PASS" starttime="20201115 23:00:04.104" endtime="20201115 23:00:04.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.145" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.143" endtime="20201115 23:00:04.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.151" level="INFO">VALUE: [3.237500000000115e-05, 3.240300000000029e-05, 3.249999999999781e-05, 3.297199999999917e-05, 3.311100000000233e-05, 3.272199999999892e-05, 3.261100000000183e-05, 3.280599999999634e-05, 3.299999999999831e-05, 3.298599999999874e-05, 3.226399999999713e-05, 3.2846999999995574e-05, 3.322199999999942e-05, 3.298599999999874e-05, 3.2360999999994644e-05, 3.29449999999995e-05, 3.268100000000662e-05, 3.304199999999702e-05, 3.313799999999506e-05, 3.2554999999996614e-05, 3.28050000000038e-05, 3.324999999999856e-05, 3.27779999999972e-05, 3.2610999999994894e-05, 3.3082999999996254e-05, 3.29579999999996e-05, 3.305500000000405e-05, 3.22779999999967e-05, 3.313900000000147e-05, 3.22500000000045e-05, 3.270900000000576e-05, 3.272199999999892e-05, 3.2638999999994034e-05, 3.311100000000233e-05, 3.269500000000619e-05, 3.241699999999986e-05, 3.298599999999874e-05, 3.318000000000071e-05, 3.284800000000199e-05, 3.259800000000174e-05, 3.236100000000158e-05, 3.2402999999993354e-05, 3.284700000000251e-05, 3.302800000000439e-05, 3.319400000000028e-05, 3.270799999999935e-05, 3.3041000000004483e-05, 3.323599999999899e-05, 3.316700000000061e-05, 3.2388999999993784e-05]</msg>
<status status="PASS" starttime="20201115 23:00:04.148" endtime="20201115 23:00:04.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.135" endtime="20201115 23:00:04.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.161" endtime="20201115 23:00:04.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.170" endtime="20201115 23:00:04.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.165" endtime="20201115 23:00:04.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.156" endtime="20201115 23:00:04.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.611" endtime="20201115 23:00:04.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.607" endtime="20201115 23:00:04.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.605" endtime="20201115 23:00:04.197"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.203" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.227" endtime="20201115 23:00:04.247"></status>
</kw>
<msg timestamp="20201115 23:00:04.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.224" endtime="20201115 23:00:04.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.251" endtime="20201115 23:00:04.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.258" endtime="20201115 23:00:04.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.215" endtime="20201115 23:00:04.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.209" endtime="20201115 23:00:04.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.283" endtime="20201115 23:00:04.644"></status>
</kw>
<msg timestamp="20201115 23:00:04.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051101083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051135097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.279" endtime="20201115 23:00:04.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051101083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051135097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.654" endtime="20201115 23:00:04.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.674" endtime="20201115 23:00:04.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.272" endtime="20201115 23:00:04.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.266" endtime="20201115 23:00:04.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.693" level="INFO">${RESULT} = [{'time': 0.051135097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.401399999999888e-05, 'source_diff': 3.401399999999888e-05}, {'time': 0.051187111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:04.683" endtime="20201115 23:00:04.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.725" level="INFO">${ACCURACY} = {'diff': [3.401399999999888e-05, 3.344400000000053e-05, 3.355599999999709e-05, 3.413900000000247e-05, 3.3541000000004983e-05, 3.41250000000029e-05, 3.4040999999998545e-05, 3.326400000000507e-05, 3.390...</msg>
<status status="PASS" starttime="20201115 23:00:04.695" endtime="20201115 23:00:04.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.737" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.735" endtime="20201115 23:00:04.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.743" level="INFO">VALUE: [3.401399999999888e-05, 3.344400000000053e-05, 3.355599999999709e-05, 3.413900000000247e-05, 3.3541000000004983e-05, 3.41250000000029e-05, 3.4040999999998545e-05, 3.326400000000507e-05, 3.390300000000179e-05, 3.3832999999997004e-05, 3.347199999999967e-05, 3.383300000000394e-05, 3.3568999999997184e-05, 3.3430999999993494e-05, 3.380599999999734e-05, 3.329199999999727e-05, 3.347199999999967e-05, 3.340300000000129e-05, 3.39580000000006e-05, 3.383400000000342e-05, 3.39450000000005e-05, 3.345899999999957e-05, 3.398599999999974e-05, 3.406999999999716e-05, 3.419400000000128e-05, 3.423699999999946e-05, 3.343100000000043e-05, 3.401400000000582e-05, 3.397200000000017e-05, 3.349999999999881e-05, 3.340200000000182e-05, 3.324999999999856e-05, 3.37779999999982e-05, 3.347199999999967e-05, 3.352800000000489e-05, 3.343100000000043e-05, 3.368000000000121e-05, 3.348599999999924e-05, 3.393100000000093e-05, 3.391700000000136e-05, 3.387500000000265e-05, 3.391700000000136e-05, 3.42779999999987e-05, 3.382000000000385e-05, 3.345900000000651e-05, 3.424999999999956e-05, 3.4012999999999405e-05, 3.326399999999813e-05, 3.368100000000068e-05, 3.340300000000129e-05]</msg>
<status status="PASS" starttime="20201115 23:00:04.740" endtime="20201115 23:00:04.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.728" endtime="20201115 23:00:04.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.753" endtime="20201115 23:00:04.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.762" endtime="20201115 23:00:04.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.757" endtime="20201115 23:00:04.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.748" endtime="20201115 23:00:04.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.205" endtime="20201115 23:00:04.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.200" endtime="20201115 23:00:04.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.198" endtime="20201115 23:00:04.790"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.796" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.819" endtime="20201115 23:00:04.839"></status>
</kw>
<msg timestamp="20201115 23:00:04.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.816" endtime="20201115 23:00:04.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.843" endtime="20201115 23:00:04.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.850" endtime="20201115 23:00:04.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.808" endtime="20201115 23:00:04.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.802" endtime="20201115 23:00:04.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.875" endtime="20201115 23:00:05.238"></status>
</kw>
<msg timestamp="20201115 23:00:05.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050830542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050865, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:04.872" endtime="20201115 23:00:05.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050830542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050865, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:05.248" endtime="20201115 23:00:05.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.259" endtime="20201115 23:00:05.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.864" endtime="20201115 23:00:05.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.859" endtime="20201115 23:00:05.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.268" level="INFO">${RESULT} = [{'time': 0.050865, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.44580000000011e-05, 'source_diff': 3.44580000000011e-05}, {'time': 0.050908042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3....</msg>
<status status="PASS" starttime="20201115 23:00:05.264" endtime="20201115 23:00:05.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.282" level="INFO">${ACCURACY} = {'diff': [3.44580000000011e-05, 3.465300000000254e-05, 3.505599999999859e-05, 3.4930999999994994e-05, 3.473600000000049e-05, 3.4666999999995174e-05, 3.476400000000657e-05, 3.4388999999995784e-05, 3.45...</msg>
<status status="PASS" starttime="20201115 23:00:05.269" endtime="20201115 23:00:05.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.288" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.287" endtime="20201115 23:00:05.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.291" level="INFO">VALUE: [3.44580000000011e-05, 3.465300000000254e-05, 3.505599999999859e-05, 3.4930999999994994e-05, 3.473600000000049e-05, 3.4666999999995174e-05, 3.476400000000657e-05, 3.4388999999995784e-05, 3.45700000000046e-05, 3.493100000000193e-05, 3.4402999999995354e-05, 3.449999999999981e-05, 3.445900000000057e-05, 3.522200000000142e-05, 3.4846999999997574e-05, 3.4818999999998435e-05, 3.4360999999996644e-05, 3.498600000000074e-05, 3.447200000000067e-05, 3.4582999999997754e-05, 3.475000000000006e-05, 3.5138999999996534e-05, 3.493000000000246e-05, 3.493100000000193e-05, 3.476399999999963e-05, 3.449999999999981e-05, 3.451399999999938e-05, 3.4944999999994564e-05, 3.45700000000046e-05, 3.436100000000358e-05, 3.483399999999748e-05, 3.516700000000261e-05, 3.473699999999996e-05, 3.434800000000349e-05, 3.4402999999995354e-05, 3.447300000000014e-05, 3.5040999999999545e-05, 3.513900000000347e-05, 3.500000000000031e-05, 3.520799999999491e-05, 3.4874999999996714e-05, 3.475000000000006e-05, 3.4610999999996894e-05, 3.522200000000142e-05, 3.515300000000304e-05, 3.504199999999902e-05, 3.4445000000001e-05, 3.441700000000186e-05, 3.516600000000314e-05, 3.4554999999998615e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.289" endtime="20201115 23:00:05.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.283" endtime="20201115 23:00:05.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.304" endtime="20201115 23:00:05.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.308" endtime="20201115 23:00:05.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.306" endtime="20201115 23:00:05.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.301" endtime="20201115 23:00:05.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.797" endtime="20201115 23:00:05.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.793" endtime="20201115 23:00:05.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.791" endtime="20201115 23:00:05.330"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.333" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.343" endtime="20201115 23:00:05.361"></status>
</kw>
<msg timestamp="20201115 23:00:05.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.342" endtime="20201115 23:00:05.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.363" endtime="20201115 23:00:05.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.366" endtime="20201115 23:00:05.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.338" endtime="20201115 23:00:05.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.335" endtime="20201115 23:00:05.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.378" endtime="20201115 23:00:05.664"></status>
</kw>
<msg timestamp="20201115 23:00:05.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028133389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028168667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.376" endtime="20201115 23:00:05.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028133389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028168667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.669" endtime="20201115 23:00:05.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.677" endtime="20201115 23:00:05.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.372" endtime="20201115 23:00:05.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.370" endtime="20201115 23:00:05.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.686" level="INFO">${RESULT} = [{'time': 0.028168667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52779999999997e-05, 'source_diff': 3.52779999999997e-05}, {'time': 0.028213681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:05.682" endtime="20201115 23:00:05.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.702" level="INFO">${ACCURACY} = {'diff': [3.52779999999997e-05, 3.5916999999999893e-05, 3.616600000000067e-05, 3.5375000000000684e-05, 3.6068999999999685e-05, 3.623599999999852e-05, 3.5903000000000324e-05, 3.538799999999731e-05, 3.5...</msg>
<status status="PASS" starttime="20201115 23:00:05.687" endtime="20201115 23:00:05.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.707" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.706" endtime="20201115 23:00:05.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.710" level="INFO">VALUE: [3.52779999999997e-05, 3.5916999999999893e-05, 3.616600000000067e-05, 3.5375000000000684e-05, 3.6068999999999685e-05, 3.623599999999852e-05, 3.5903000000000324e-05, 3.538799999999731e-05, 3.57780000000002e-05, 3.552799999999995e-05, 3.550000000000081e-05, 3.626400000000113e-05, 3.530599999999884e-05, 3.5582999999998755e-05, 3.5347000000001544e-05, 3.594399999999956e-05, 3.579199999999977e-05, 3.550000000000081e-05, 3.550000000000081e-05, 3.572199999999845e-05, 3.555599999999909e-05, 3.5360999999997644e-05, 3.609800000000177e-05, 3.533400000000145e-05, 3.592999999999999e-05, 3.581999999999891e-05, 3.6041000000000545e-05, 3.575000000000106e-05, 3.520799999999838e-05, 3.554199999999952e-05, 3.5889000000000754e-05, 3.52779999999997e-05, 3.5625000000000934e-05, 3.59589999999986e-05, 3.6124999999997964e-05, 3.5360999999997644e-05, 3.5583000000002224e-05, 3.547200000000167e-05, 3.555599999999909e-05, 3.598599999999827e-05, 3.533399999999798e-05, 3.6125000000001434e-05, 3.57780000000002e-05, 3.619499999999928e-05, 3.626400000000113e-05, 3.590200000000085e-05, 3.592999999999999e-05, 3.533400000000145e-05, 3.566600000000017e-05, 3.5333000000001974e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.708" endtime="20201115 23:00:05.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.703" endtime="20201115 23:00:05.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.715" endtime="20201115 23:00:05.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.719" endtime="20201115 23:00:05.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.717" endtime="20201115 23:00:05.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.712" endtime="20201115 23:00:05.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.333" endtime="20201115 23:00:05.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.331" endtime="20201115 23:00:05.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.330" endtime="20201115 23:00:05.741"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.743" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.754" endtime="20201115 23:00:05.771"></status>
</kw>
<msg timestamp="20201115 23:00:05.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.753" endtime="20201115 23:00:05.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.773" endtime="20201115 23:00:05.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.776" endtime="20201115 23:00:05.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.749" endtime="20201115 23:00:05.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.746" endtime="20201115 23:00:05.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.788" endtime="20201115 23:00:06.074"></status>
</kw>
<msg timestamp="20201115 23:00:06.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027958556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027995819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.786" endtime="20201115 23:00:06.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027958556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027995819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.078" endtime="20201115 23:00:06.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.087" endtime="20201115 23:00:06.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.783" endtime="20201115 23:00:06.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.780" endtime="20201115 23:00:06.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.098" level="INFO">${RESULT} = [{'time': 0.027995819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7263000000002655e-05, 'source_diff': 3.7263000000002655e-05}, {'time': 0.028044847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:06.093" endtime="20201115 23:00:06.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.112" level="INFO">${ACCURACY} = {'diff': [3.7263000000002655e-05, 3.72780000000017e-05, 3.699999999999884e-05, 3.700000000000231e-05, 3.6360999999998644e-05, 3.71659999999982e-05, 3.715199999999863e-05, 3.6374999999998214e-05, 3.630...</msg>
<status status="PASS" starttime="20201115 23:00:06.099" endtime="20201115 23:00:06.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.118" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.117" endtime="20201115 23:00:06.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.121" level="INFO">VALUE: [3.7263000000002655e-05, 3.72780000000017e-05, 3.699999999999884e-05, 3.700000000000231e-05, 3.6360999999998644e-05, 3.71659999999982e-05, 3.715199999999863e-05, 3.6374999999998214e-05, 3.6305000000000365e-05, 3.719400000000081e-05, 3.69589999999996e-05, 3.631999999999941e-05, 3.6582999999999755e-05, 3.693000000000099e-05, 3.648599999999877e-05, 3.708399999999973e-05, 3.6332999999999505e-05, 3.698600000000274e-05, 3.6611000000002364e-05, 3.644400000000006e-05, 3.673600000000249e-05, 3.7152999999998104e-05, 3.6291000000000795e-05, 3.675000000000206e-05, 3.7138999999998534e-05, 3.649999999999834e-05, 3.6346999999999074e-05, 3.6333000000002974e-05, 3.666600000000117e-05, 3.6540999999997575e-05, 3.642999999999702e-05, 3.700000000000231e-05, 3.630599999999984e-05, 3.648600000000224e-05, 3.6332999999999505e-05, 3.6360999999998644e-05, 3.7152999999998104e-05, 3.70979999999993e-05, 3.694400000000056e-05, 3.654200000000052e-05, 3.702800000000145e-05, 3.668000000000074e-05, 3.6917000000000894e-05, 3.705599999999712e-05, 3.649999999999834e-05, 3.666600000000117e-05, 3.7026999999998506e-05, 3.700000000000231e-05, 3.680600000000034e-05, 3.7069000000000685e-05]</msg>
<status status="PASS" starttime="20201115 23:00:06.119" endtime="20201115 23:00:06.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.113" endtime="20201115 23:00:06.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.125" endtime="20201115 23:00:06.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.129" endtime="20201115 23:00:06.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.127" endtime="20201115 23:00:06.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.123" endtime="20201115 23:00:06.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.744" endtime="20201115 23:00:06.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.742" endtime="20201115 23:00:06.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.741" endtime="20201115 23:00:06.151"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.154" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.170" endtime="20201115 23:00:06.191"></status>
</kw>
<msg timestamp="20201115 23:00:06.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.166" endtime="20201115 23:00:06.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.194" endtime="20201115 23:00:06.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.201" endtime="20201115 23:00:06.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.159" endtime="20201115 23:00:06.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.157" endtime="20201115 23:00:06.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.227" endtime="20201115 23:00:06.588"></status>
</kw>
<msg timestamp="20201115 23:00:06.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035385153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035422556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.223" endtime="20201115 23:00:06.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035385153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035422556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.598" endtime="20201115 23:00:06.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.619" endtime="20201115 23:00:06.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.215" endtime="20201115 23:00:06.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.210" endtime="20201115 23:00:06.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.638" level="INFO">${RESULT} = [{'time': 0.035422556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7402999999998354e-05, 'source_diff': 3.7402999999998354e-05}, {'time': 0.035469583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:06.628" endtime="20201115 23:00:06.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.670" level="INFO">${ACCURACY} = {'diff': [3.7402999999998354e-05, 3.7291000000001795e-05, 3.791599999999895e-05, 3.767999999999827e-05, 3.7888999999999284e-05, 3.7777000000002725e-05, 3.807000000000116e-05, 3.7291000000001795e-05, 3...</msg>
<status status="PASS" starttime="20201115 23:00:06.640" endtime="20201115 23:00:06.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.682" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.679" endtime="20201115 23:00:06.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.688" level="INFO">VALUE: [3.7402999999998354e-05, 3.7291000000001795e-05, 3.791599999999895e-05, 3.767999999999827e-05, 3.7888999999999284e-05, 3.7777000000002725e-05, 3.807000000000116e-05, 3.7291000000001795e-05, 3.770799999999741e-05, 3.7304999999994426e-05, 3.751399999999544e-05, 3.768100000000468e-05, 3.8263000000003655e-05, 3.743100000000443e-05, 3.7916999999998424e-05, 3.7610999999999895e-05, 3.7874999999999714e-05, 3.7902999999998854e-05, 3.7888999999999284e-05, 3.800000000000331e-05, 3.824999999999662e-05, 3.79450000000045e-05, 3.8222999999996954e-05, 3.8069000000001685e-05, 3.7666999999998174e-05, 3.766700000000511e-05, 3.750000000000281e-05, 3.81659999999992e-05, 3.7360999999999644e-05, 3.8055000000002115e-05, 3.74859999999963e-05, 3.7597000000000325e-05, 3.7610999999999895e-05, 3.7347000000000075e-05, 3.749999999999587e-05, 3.807000000000116e-05, 3.7374999999999214e-05, 3.786199999999962e-05, 3.7930999999997994e-05, 3.755600000000109e-05, 3.80980000000003e-05, 3.8180999999998244e-05, 3.802800000000245e-05, 3.7569000000001185e-05, 3.823700000000346e-05, 3.7776999999995786e-05, 3.788799999999981e-05, 3.815199999999963e-05, 3.817999999999877e-05, 3.749999999999587e-05]</msg>
<status status="PASS" starttime="20201115 23:00:06.684" endtime="20201115 23:00:06.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.672" endtime="20201115 23:00:06.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.697" endtime="20201115 23:00:06.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.707" endtime="20201115 23:00:06.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.702" endtime="20201115 23:00:06.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.692" endtime="20201115 23:00:06.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.155" endtime="20201115 23:00:06.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.152" endtime="20201115 23:00:06.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.152" endtime="20201115 23:00:06.734"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.740" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.763" endtime="20201115 23:00:06.784"></status>
</kw>
<msg timestamp="20201115 23:00:06.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.760" endtime="20201115 23:00:06.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.788" endtime="20201115 23:00:06.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.795" endtime="20201115 23:00:06.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.752" endtime="20201115 23:00:06.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.745" endtime="20201115 23:00:06.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.821" endtime="20201115 23:00:07.187"></status>
</kw>
<msg timestamp="20201115 23:00:07.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050384083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050422875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.817" endtime="20201115 23:00:07.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050384083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050422875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.198" endtime="20201115 23:00:07.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.218" endtime="20201115 23:00:07.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.809" endtime="20201115 23:00:07.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.804" endtime="20201115 23:00:07.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.243" level="INFO">${RESULT} = [{'time': 0.050422875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.879199999999583e-05, 'source_diff': 3.879199999999583e-05}, {'time': 0.050473889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:07.233" endtime="20201115 23:00:07.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.275" level="INFO">${ACCURACY} = {'diff': [3.879199999999583e-05, 3.8388999999999784e-05, 3.9082999999995316e-05, 3.872199999999798e-05, 3.9153000000000104e-05, 3.87780000000032e-05, 3.9208999999998384e-05, 3.9291000000003795e-05, 3....</msg>
<status status="PASS" starttime="20201115 23:00:07.246" endtime="20201115 23:00:07.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.287" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.285" endtime="20201115 23:00:07.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.293" level="INFO">VALUE: [3.879199999999583e-05, 3.8388999999999784e-05, 3.9082999999995316e-05, 3.872199999999798e-05, 3.9153000000000104e-05, 3.87780000000032e-05, 3.9208999999998384e-05, 3.9291000000003795e-05, 3.8861000000001145e-05, 3.841599999999945e-05, 3.854200000000252e-05, 3.9236999999997524e-05, 3.848600000000424e-05, 3.8527000000003475e-05, 3.8568999999995246e-05, 3.8889000000000284e-05, 3.874999999999712e-05, 3.8902999999999854e-05, 3.9054999999996176e-05, 3.852800000000295e-05, 3.8569000000002185e-05, 3.924999999999762e-05, 3.924999999999762e-05, 3.8388999999999784e-05, 3.832000000000141e-05, 3.902800000000345e-05, 3.87780000000032e-05, 3.9166999999999674e-05, 3.9125000000000965e-05, 3.9111000000001395e-05, 3.850000000000381e-05, 3.854200000000252e-05, 3.9069000000002685e-05, 3.847199999999773e-05, 3.8333000000001505e-05, 3.845799999999816e-05, 3.86659999999997e-05, 3.8319000000001935e-05, 3.8402999999999354e-05, 3.8902999999999854e-05, 3.9153000000000104e-05, 3.872200000000492e-05, 3.924999999999762e-05, 3.8375000000000214e-05, 3.9153000000000104e-05, 3.8639000000000034e-05, 3.8347000000001075e-05, 3.8694999999998314e-05, 3.8694999999998314e-05, 3.897200000000517e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.290" endtime="20201115 23:00:07.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.277" endtime="20201115 23:00:07.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.303" endtime="20201115 23:00:07.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.312" endtime="20201115 23:00:07.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.307" endtime="20201115 23:00:07.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.298" endtime="20201115 23:00:07.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.741" endtime="20201115 23:00:07.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.737" endtime="20201115 23:00:07.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.735" endtime="20201115 23:00:07.339"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.345" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.368" endtime="20201115 23:00:07.388"></status>
</kw>
<msg timestamp="20201115 23:00:07.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.365" endtime="20201115 23:00:07.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.392" endtime="20201115 23:00:07.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.399" endtime="20201115 23:00:07.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.357" endtime="20201115 23:00:07.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.351" endtime="20201115 23:00:07.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.424" endtime="20201115 23:00:07.808"></status>
</kw>
<msg timestamp="20201115 23:00:07.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049831764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049871292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.421" endtime="20201115 23:00:07.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049831764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049871292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.818" endtime="20201115 23:00:07.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.838" endtime="20201115 23:00:07.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.413" endtime="20201115 23:00:07.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.408" endtime="20201115 23:00:07.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.857" level="INFO">${RESULT} = [{'time': 0.049871292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.952799999999701e-05, 'source_diff': 3.952799999999701e-05}, {'time': 0.049928292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:07.847" endtime="20201115 23:00:07.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.892" level="INFO">${ACCURACY} = {'diff': [3.952799999999701e-05, 3.9430999999999494e-05, 3.9304999999996426e-05, 3.9568999999996246e-05, 3.9554999999996676e-05, 4.0097000000002825e-05, 3.9597000000002325e-05, 4.019400000000034e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:07.859" endtime="20201115 23:00:07.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.904" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.901" endtime="20201115 23:00:07.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.909" level="INFO">VALUE: [3.952799999999701e-05, 3.9430999999999494e-05, 3.9304999999996426e-05, 3.9568999999996246e-05, 3.9554999999996676e-05, 4.0097000000002825e-05, 3.9597000000002325e-05, 4.019400000000034e-05, 3.9790999999997356e-05, 3.9332999999995566e-05, 3.9597000000002325e-05, 3.948600000000524e-05, 3.977799999999726e-05, 4.020799999999991e-05, 3.9611000000001895e-05, 3.9361000000001645e-05, 3.9847000000002575e-05, 3.9375000000001215e-05, 3.979200000000377e-05, 3.9819000000003435e-05, 3.97780000000042e-05, 3.932000000000241e-05, 3.9596999999995386e-05, 3.9819000000003435e-05, 3.9541000000004045e-05, 3.949999999999787e-05, 3.990199999999444e-05, 3.9347000000002075e-05, 3.991599999999401e-05, 4.019400000000034e-05, 4.0096999999995886e-05, 4.001399999999794e-05, 3.9917000000000424e-05, 3.9680999999999744e-05, 3.9819000000003435e-05, 3.9318999999995996e-05, 4.0096999999995886e-05, 3.9444999999999064e-05, 4.0194999999999814e-05, 3.9888999999994346e-05, 3.9360999999994706e-05, 3.9653000000000604e-05, 3.9875000000001715e-05, 3.99859999999988e-05, 3.979199999999683e-05, 3.9596999999995386e-05, 4.0125000000001965e-05, 3.9347000000002075e-05, 3.9361000000001645e-05, 4.001400000000488e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.906" endtime="20201115 23:00:07.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.894" endtime="20201115 23:00:07.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.919" endtime="20201115 23:00:07.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.928" endtime="20201115 23:00:07.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.923" endtime="20201115 23:00:07.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.914" endtime="20201115 23:00:07.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.346" endtime="20201115 23:00:07.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.342" endtime="20201115 23:00:07.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.340" endtime="20201115 23:00:07.955"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.961" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.985" endtime="20201115 23:00:08.005"></status>
</kw>
<msg timestamp="20201115 23:00:08.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.981" endtime="20201115 23:00:08.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.009" endtime="20201115 23:00:08.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.016" endtime="20201115 23:00:08.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.974" endtime="20201115 23:00:08.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.967" endtime="20201115 23:00:08.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.041" endtime="20201115 23:00:08.393"></status>
</kw>
<msg timestamp="20201115 23:00:08.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050399181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050439944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.038" endtime="20201115 23:00:08.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050399181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050439944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.402" endtime="20201115 23:00:08.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.421" endtime="20201115 23:00:08.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.030" endtime="20201115 23:00:08.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.025" endtime="20201115 23:00:08.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.441" level="INFO">${RESULT} = [{'time': 0.050439944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0762999999999217e-05, 'source_diff': 4.0762999999999217e-05}, {'time': 0.050490917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:08.432" endtime="20201115 23:00:08.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:08.471" level="INFO">${ACCURACY} = {'diff': [4.0762999999999217e-05, 4.0917000000001424e-05, 4.0625000000002465e-05, 4.11660000000022e-05, 4.0791000000005295e-05, 4.0597000000003325e-05, 4.049999999999887e-05, 4.066599999999476e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:00:08.443" endtime="20201115 23:00:08.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.482" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 23:00:08.480" endtime="20201115 23:00:08.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.487" level="INFO">VALUE: [4.0762999999999217e-05, 4.0917000000001424e-05, 4.0625000000002465e-05, 4.11660000000022e-05, 4.0791000000005295e-05, 4.0597000000003325e-05, 4.049999999999887e-05, 4.066599999999476e-05, 4.097200000000023e-05, 4.0389000000001785e-05, 4.0832999999997066e-05, 4.0667000000001174e-05, 4.051399999999844e-05, 4.105600000000459e-05, 4.0375000000002215e-05, 4.0375000000002215e-05, 4.030600000000384e-05, 4.0695000000000314e-05, 4.0389000000001785e-05, 4.080600000000434e-05, 4.101399999999894e-05, 4.0568999999997246e-05, 4.0931000000000994e-05, 4.0332999999996566e-05, 4.0625000000002465e-05, 4.090200000000238e-05, 4.119400000000134e-05, 4.0291000000004795e-05, 4.0304999999997426e-05, 4.126399999999919e-05, 4.105599999999765e-05, 4.044400000000059e-05, 4.026399999999819e-05, 4.1054999999998176e-05, 4.1167000000001674e-05, 4.0819000000004435e-05, 4.069400000000084e-05, 4.0874999999995776e-05, 4.026399999999819e-05, 4.090200000000238e-05, 4.051400000000538e-05, 4.083400000000348e-05, 4.0472999999999204e-05, 4.059799999999586e-05, 4.0762999999999217e-05, 4.0639000000002035e-05, 4.0568999999997246e-05, 4.0332999999996566e-05, 4.0861000000003145e-05, 4.069400000000084e-05]</msg>
<status status="PASS" starttime="20201115 23:00:08.484" endtime="20201115 23:00:08.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.473" endtime="20201115 23:00:08.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.496" endtime="20201115 23:00:08.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:08.506" endtime="20201115 23:00:08.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.500" endtime="20201115 23:00:08.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.492" endtime="20201115 23:00:08.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.962" endtime="20201115 23:00:08.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.958" endtime="20201115 23:00:08.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.956" endtime="20201115 23:00:08.532"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.537" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.559" endtime="20201115 23:00:08.580"></status>
</kw>
<msg timestamp="20201115 23:00:08.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.556" endtime="20201115 23:00:08.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.584" endtime="20201115 23:00:08.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.590" endtime="20201115 23:00:08.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.549" endtime="20201115 23:00:08.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.543" endtime="20201115 23:00:08.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.614" endtime="20201115 23:00:08.965"></status>
</kw>
<msg timestamp="20201115 23:00:08.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047369236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047411181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.610" endtime="20201115 23:00:08.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047369236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047411181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.975" endtime="20201115 23:00:08.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.994" endtime="20201115 23:00:08.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.603" endtime="20201115 23:00:08.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.598" endtime="20201115 23:00:09.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.011" level="INFO">${RESULT} = [{'time': 0.047411181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1944999999994625e-05, 'source_diff': 4.1944999999994625e-05}, {'time': 0.047461125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:09.002" endtime="20201115 23:00:09.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.042" level="INFO">${ACCURACY} = {'diff': [4.1944999999994625e-05, 4.1832999999998066e-05, 4.1916999999995486e-05, 4.175000000000012e-05, 4.1361000000003645e-05, 4.179199999999883e-05, 4.19860000000008e-05, 4.1361000000003645e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:00:09.014" endtime="20201115 23:00:09.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.053" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.051" endtime="20201115 23:00:09.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.058" level="INFO">VALUE: [4.1944999999994625e-05, 4.1832999999998066e-05, 4.1916999999995486e-05, 4.175000000000012e-05, 4.1361000000003645e-05, 4.179199999999883e-05, 4.19860000000008e-05, 4.1361000000003645e-05, 4.182000000000491e-05, 4.173600000000055e-05, 4.1959000000001134e-05, 4.204199999999908e-05, 4.1569000000005185e-05, 4.1625000000003465e-05, 4.130600000000484e-05, 4.166599999999576e-05, 4.1776999999999787e-05, 4.197200000000123e-05, 4.1804999999998926e-05, 4.222200000000148e-05, 4.200000000000037e-05, 4.194400000000209e-05, 4.1346999999997136e-05, 4.1417000000001924e-05, 4.1888999999996346e-05, 4.225000000000062e-05, 4.133399999999704e-05, 4.156999999999772e-05, 4.2153000000003105e-05, 4.1846999999997636e-05, 4.175000000000012e-05, 4.193000000000252e-05, 4.1625000000003465e-05, 4.2153000000003105e-05, 4.1737000000000024e-05, 4.2180999999995306e-05, 4.138799999999637e-05, 4.1832999999998066e-05, 4.1596999999997386e-05, 4.2054999999999176e-05, 4.142999999999508e-05, 4.2138999999996596e-05, 4.197200000000123e-05, 4.1402999999995416e-05, 4.2167000000002675e-05, 4.2082999999998316e-05, 4.175000000000012e-05, 4.1804999999998926e-05, 4.2194999999994875e-05, 4.180600000000534e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.055" endtime="20201115 23:00:09.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.044" endtime="20201115 23:00:09.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.068" endtime="20201115 23:00:09.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.076" endtime="20201115 23:00:09.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.072" endtime="20201115 23:00:09.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.063" endtime="20201115 23:00:09.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.539" endtime="20201115 23:00:09.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.535" endtime="20201115 23:00:09.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.533" endtime="20201115 23:00:09.103"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.108" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.130" endtime="20201115 23:00:09.151"></status>
</kw>
<msg timestamp="20201115 23:00:09.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.127" endtime="20201115 23:00:09.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.154" endtime="20201115 23:00:09.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.160" endtime="20201115 23:00:09.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.120" endtime="20201115 23:00:09.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.114" endtime="20201115 23:00:09.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.186" endtime="20201115 23:00:09.536"></status>
</kw>
<msg timestamp="20201115 23:00:09.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047231014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047274125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.182" endtime="20201115 23:00:09.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047231014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047274125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.546" endtime="20201115 23:00:09.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.566" endtime="20201115 23:00:09.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.175" endtime="20201115 23:00:09.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.170" endtime="20201115 23:00:09.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.585" level="INFO">${RESULT} = [{'time': 0.047274125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3110999999998456e-05, 'source_diff': 4.3110999999998456e-05}, {'time': 0.047335139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:09.576" endtime="20201115 23:00:09.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.615" level="INFO">${ACCURACY} = {'diff': [4.3110999999998456e-05, 4.323599999999511e-05, 4.2861000000005145e-05, 4.3152999999997166e-05, 4.2930999999996056e-05, 4.227799999999976e-05, 4.2389000000003785e-05, 4.234800000000455e-05, 4...</msg>
<status status="PASS" starttime="20201115 23:00:09.587" endtime="20201115 23:00:09.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.626" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.624" endtime="20201115 23:00:09.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.632" level="INFO">VALUE: [4.3110999999998456e-05, 4.323599999999511e-05, 4.2861000000005145e-05, 4.3152999999997166e-05, 4.2930999999996056e-05, 4.227799999999976e-05, 4.2389000000003785e-05, 4.234800000000455e-05, 4.232000000000541e-05, 4.2973000000001704e-05, 4.247199999999479e-05, 4.3041000000000607e-05, 4.3041000000000607e-05, 4.2832999999999066e-05, 4.2610999999997956e-05, 4.266599999999676e-05, 4.3237000000001524e-05, 4.254199999999958e-05, 4.300000000000137e-05, 4.273599999999461e-05, 4.279199999999983e-05, 4.2832999999999066e-05, 4.2347000000005075e-05, 4.2945000000002564e-05, 4.3166999999996736e-05, 4.2681000000002745e-05, 4.301400000000094e-05, 4.323600000000205e-05, 4.2459000000001634e-05, 4.290200000000438e-05, 4.3124999999998026e-05, 4.2332999999998566e-05, 4.2902999999996916e-05, 4.252800000000001e-05, 4.2804999999999926e-05, 4.2332999999998566e-05, 4.302800000000051e-05, 4.226400000000019e-05, 4.304200000000008e-05, 4.298599999999486e-05, 4.3138999999997596e-05, 4.2818999999999496e-05, 4.256999999999872e-05, 4.273599999999461e-05, 4.2389000000003785e-05, 4.2695000000002314e-05, 4.273600000000155e-05, 4.273600000000155e-05, 4.3167000000003675e-05, 4.325000000000162e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.628" endtime="20201115 23:00:09.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.617" endtime="20201115 23:00:09.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.641" endtime="20201115 23:00:09.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.650" endtime="20201115 23:00:09.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.645" endtime="20201115 23:00:09.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.637" endtime="20201115 23:00:09.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.109" endtime="20201115 23:00:09.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.106" endtime="20201115 23:00:09.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.104" endtime="20201115 23:00:09.676"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.682" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.703" endtime="20201115 23:00:09.724"></status>
</kw>
<msg timestamp="20201115 23:00:09.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.700" endtime="20201115 23:00:09.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.727" endtime="20201115 23:00:09.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.733" endtime="20201115 23:00:09.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.693" endtime="20201115 23:00:09.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.687" endtime="20201115 23:00:09.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.757" endtime="20201115 23:00:10.109"></status>
</kw>
<msg timestamp="20201115 23:00:10.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046927833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046971417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.753" endtime="20201115 23:00:10.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046927833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046971417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.118" endtime="20201115 23:00:10.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.137" endtime="20201115 23:00:10.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.746" endtime="20201115 23:00:10.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.741" endtime="20201115 23:00:10.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.155" level="INFO">${RESULT} = [{'time': 0.046971417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.358399999999929e-05, 'source_diff': 4.358399999999929e-05}, {'time': 0.047028403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:10.146" endtime="20201115 23:00:10.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.189" level="INFO">${ACCURACY} = {'diff': [4.358399999999929e-05, 4.3597000000006325e-05, 4.3888999999998346e-05, 4.376399999999475e-05, 4.3555000000000677e-05, 4.3987000000002274e-05, 4.416599999999826e-05, 4.392999999999758e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:00:10.157" endtime="20201115 23:00:10.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.201" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.198" endtime="20201115 23:00:10.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.206" level="INFO">VALUE: [4.358399999999929e-05, 4.3597000000006325e-05, 4.3888999999998346e-05, 4.376399999999475e-05, 4.3555000000000677e-05, 4.3987000000002274e-05, 4.416599999999826e-05, 4.392999999999758e-05, 4.41660000000052e-05, 4.3653000000004605e-05, 4.390199999999844e-05, 4.4110999999999456e-05, 4.401400000000194e-05, 4.408399999999979e-05, 4.375000000000212e-05, 4.3388999999997846e-05, 4.349999999999493e-05, 4.381999999999997e-05, 4.3903000000004855e-05, 4.372200000000298e-05, 4.372199999999604e-05, 4.3487000000001774e-05, 4.351400000000144e-05, 4.401400000000194e-05, 4.3722999999995515e-05, 4.359799999999886e-05, 4.3360999999998706e-05, 4.4083000000000316e-05, 4.4013999999995e-05, 4.3875000000005715e-05, 4.427799999999482e-05, 4.391599999999801e-05, 4.352800000000101e-05, 4.4138999999998596e-05, 4.352800000000101e-05, 4.3681000000003745e-05, 4.397199999999629e-05, 4.423599999999611e-05, 4.34860000000023e-05, 4.3416999999996986e-05, 4.3874999999998776e-05, 4.351400000000144e-05, 4.329200000000033e-05, 4.3987000000002274e-05, 4.3541000000001107e-05, 4.361199999999843e-05, 4.3346999999999136e-05, 4.3332999999999566e-05, 4.3305000000000426e-05, 4.415199999999869e-05]</msg>
<status status="PASS" starttime="20201115 23:00:10.203" endtime="20201115 23:00:10.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.191" endtime="20201115 23:00:10.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.216" endtime="20201115 23:00:10.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.225" endtime="20201115 23:00:10.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.220" endtime="20201115 23:00:10.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.211" endtime="20201115 23:00:10.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.683" endtime="20201115 23:00:10.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.679" endtime="20201115 23:00:10.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.677" endtime="20201115 23:00:10.252"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.257" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.279" endtime="20201115 23:00:10.299"></status>
</kw>
<msg timestamp="20201115 23:00:10.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.276" endtime="20201115 23:00:10.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.303" endtime="20201115 23:00:10.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.309" endtime="20201115 23:00:10.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.269" endtime="20201115 23:00:10.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.263" endtime="20201115 23:00:10.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.333" endtime="20201115 23:00:10.683"></status>
</kw>
<msg timestamp="20201115 23:00:10.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047713403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04775825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:10.329" endtime="20201115 23:00:10.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047713403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04775825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:10.693" endtime="20201115 23:00:10.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.718" endtime="20201115 23:00:10.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.322" endtime="20201115 23:00:10.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.317" endtime="20201115 23:00:10.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.737" level="INFO">${RESULT} = [{'time': 0.04775825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4847000000000636e-05, 'source_diff': 4.4847000000000636e-05}, {'time': 0.047813236, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:10.728" endtime="20201115 23:00:10.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.768" level="INFO">${ACCURACY} = {'diff': [4.4847000000000636e-05, 4.4917000000005425e-05, 4.44860000000033e-05, 4.477800000000226e-05, 4.507000000000122e-05, 4.4583000000000816e-05, 4.470799999999747e-05, 4.4695000000004315e-05, 4.4...</msg>
<status status="PASS" starttime="20201115 23:00:10.739" endtime="20201115 23:00:10.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.779" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.777" endtime="20201115 23:00:10.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.785" level="INFO">VALUE: [4.4847000000000636e-05, 4.4917000000005425e-05, 4.44860000000033e-05, 4.477800000000226e-05, 4.507000000000122e-05, 4.4583000000000816e-05, 4.470799999999747e-05, 4.4695000000004315e-05, 4.4402999999998416e-05, 4.4666999999998236e-05, 4.4861000000000206e-05, 4.477800000000226e-05, 4.509800000000036e-05, 4.479200000000183e-05, 4.495800000000466e-05, 4.455499999999474e-05, 4.4861000000000206e-05, 4.4930999999998056e-05, 4.456899999999431e-05, 4.479100000000236e-05, 4.500000000000337e-05, 4.475000000000312e-05, 4.5097000000000886e-05, 4.4652999999998666e-05, 4.4569000000001247e-05, 4.4569000000001247e-05, 4.504200000000208e-05, 4.455600000000115e-05, 4.436199999999918e-05, 4.5152999999999166e-05, 4.492999999999858e-05, 4.502700000000304e-05, 4.4431000000004495e-05, 4.473599999999661e-05, 4.429200000000133e-05, 4.517999999999883e-05, 4.469400000000484e-05, 4.4624999999999526e-05, 4.505499999999524e-05, 4.441599999999851e-05, 4.526400000000319e-05, 4.5125000000000026e-05, 4.447199999999679e-05, 4.4319000000000996e-05, 4.4874999999999776e-05, 4.477799999999532e-05, 4.4861000000000206e-05, 4.507000000000122e-05, 4.4917000000005425e-05, 4.4847000000000636e-05]</msg>
<status status="PASS" starttime="20201115 23:00:10.782" endtime="20201115 23:00:10.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.770" endtime="20201115 23:00:10.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.794" endtime="20201115 23:00:10.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.802" endtime="20201115 23:00:10.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.798" endtime="20201115 23:00:10.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.789" endtime="20201115 23:00:10.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.259" endtime="20201115 23:00:10.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.255" endtime="20201115 23:00:10.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.253" endtime="20201115 23:00:10.829"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.834" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.856" endtime="20201115 23:00:10.876"></status>
</kw>
<msg timestamp="20201115 23:00:10.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.853" endtime="20201115 23:00:10.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.879" endtime="20201115 23:00:10.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.886" endtime="20201115 23:00:10.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.845" endtime="20201115 23:00:10.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.839" endtime="20201115 23:00:10.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.910" endtime="20201115 23:00:11.216"></status>
</kw>
<msg timestamp="20201115 23:00:11.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046788333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046833847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.906" endtime="20201115 23:00:11.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046788333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046833847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.221" endtime="20201115 23:00:11.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.230" endtime="20201115 23:00:11.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.899" endtime="20201115 23:00:11.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.894" endtime="20201115 23:00:11.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.238" level="INFO">${RESULT} = [{'time': 0.046833847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.55139999999965e-05, 'source_diff': 4.55139999999965e-05}, {'time': 0.046892861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:11.234" endtime="20201115 23:00:11.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.252" level="INFO">${ACCURACY} = {'diff': [4.55139999999965e-05, 4.58190000000025e-05, 4.5889000000000346e-05, 4.58060000000024e-05, 4.602799999999657e-05, 4.56939999999989e-05, 4.5708999999997946e-05, 4.6153000000000166e-05, 4.61669...</msg>
<status status="PASS" starttime="20201115 23:00:11.239" endtime="20201115 23:00:11.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.257" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.256" endtime="20201115 23:00:11.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.260" level="INFO">VALUE: [4.55139999999965e-05, 4.58190000000025e-05, 4.5889000000000346e-05, 4.58060000000024e-05, 4.602799999999657e-05, 4.56939999999989e-05, 4.5708999999997946e-05, 4.6153000000000166e-05, 4.6166999999999736e-05, 4.586200000000068e-05, 4.6153000000000166e-05, 4.5959000000005135e-05, 4.6166999999999736e-05, 4.567999999999933e-05, 4.576300000000422e-05, 4.529100000000286e-05, 4.583299999999513e-05, 4.595799999999872e-05, 4.5375000000000276e-05, 4.529199999999539e-05, 4.629100000000386e-05, 4.5361000000000706e-05, 4.556899999999531e-05, 4.555599999999521e-05, 4.527799999999582e-05, 4.604200000000308e-05, 4.529199999999539e-05, 4.532000000000147e-05, 4.5875000000000776e-05, 4.565200000000019e-05, 4.6125000000001026e-05, 4.624999999999768e-05, 4.576400000000369e-05, 4.604099999999667e-05, 4.570799999999847e-05, 4.613800000000112e-05, 4.6013999999997e-05, 4.606900000000275e-05, 4.548599999999736e-05, 4.549999999999693e-05, 4.544399999999865e-05, 4.5639000000000096e-05, 4.5916999999999486e-05, 4.594399999999915e-05, 4.5889000000000346e-05, 4.592999999999958e-05, 4.529199999999539e-05, 4.5694999999998376e-05, 4.5444999999998126e-05, 4.5902999999999916e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.258" endtime="20201115 23:00:11.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.253" endtime="20201115 23:00:11.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.264" endtime="20201115 23:00:11.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.268" endtime="20201115 23:00:11.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.266" endtime="20201115 23:00:11.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.262" endtime="20201115 23:00:11.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.836" endtime="20201115 23:00:11.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.832" endtime="20201115 23:00:11.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.830" endtime="20201115 23:00:11.290"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.293" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.303" endtime="20201115 23:00:11.319"></status>
</kw>
<msg timestamp="20201115 23:00:11.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.301" endtime="20201115 23:00:11.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.321" endtime="20201115 23:00:11.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.327" endtime="20201115 23:00:11.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.298" endtime="20201115 23:00:11.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.295" endtime="20201115 23:00:11.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.351" endtime="20201115 23:00:11.701"></status>
</kw>
<msg timestamp="20201115 23:00:11.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026992861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027039236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.347" endtime="20201115 23:00:11.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026992861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027039236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.711" endtime="20201115 23:00:11.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.730" endtime="20201115 23:00:11.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.340" endtime="20201115 23:00:11.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.335" endtime="20201115 23:00:11.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.749" level="INFO">${RESULT} = [{'time': 0.027039236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6375000000001276e-05, 'source_diff': 4.6375000000001276e-05}, {'time': 0.027100278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:11.740" endtime="20201115 23:00:11.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.780" level="INFO">${ACCURACY} = {'diff': [4.6375000000001276e-05, 4.6958999999999196e-05, 4.693000000000058e-05, 4.712499999999856e-05, 4.6458999999998696e-05, 4.704200000000061e-05, 4.686099999999874e-05, 4.698599999999886e-05, 4.7...</msg>
<status status="PASS" starttime="20201115 23:00:11.751" endtime="20201115 23:00:11.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.791" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.789" endtime="20201115 23:00:11.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.796" level="INFO">VALUE: [4.6375000000001276e-05, 4.6958999999999196e-05, 4.693000000000058e-05, 4.712499999999856e-05, 4.6458999999998696e-05, 4.704200000000061e-05, 4.686099999999874e-05, 4.698599999999886e-05, 4.724999999999868e-05, 4.661099999999849e-05, 4.6680999999999806e-05, 4.723599999999911e-05, 4.680500000000046e-05, 4.704100000000114e-05, 4.626299999999778e-05, 4.708299999999985e-05, 4.697199999999929e-05, 4.661099999999849e-05, 4.723599999999911e-05, 4.63329999999991e-05, 4.706900000000028e-05, 4.6667000000000236e-05, 4.674999999999818e-05, 4.66529999999972e-05, 4.63329999999991e-05, 4.659699999999892e-05, 4.654200000000011e-05, 4.686099999999874e-05, 4.6625000000001526e-05, 4.680500000000046e-05, 4.727699999999835e-05, 4.6931000000000056e-05, 4.722199999999954e-05, 4.704100000000114e-05, 4.641600000000051e-05, 4.640200000000094e-05, 4.649999999999793e-05, 4.626400000000072e-05, 4.698599999999886e-05, 4.690299999999745e-05, 4.684699999999917e-05, 4.651400000000097e-05, 4.676400000000122e-05, 4.670799999999947e-05, 4.630599999999943e-05, 4.697200000000276e-05, 4.698600000000233e-05, 4.662499999999806e-05, 4.638899999999738e-05, 4.672200000000251e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.793" endtime="20201115 23:00:11.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.782" endtime="20201115 23:00:11.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.805" endtime="20201115 23:00:11.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.813" endtime="20201115 23:00:11.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.809" endtime="20201115 23:00:11.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.800" endtime="20201115 23:00:11.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.293" endtime="20201115 23:00:11.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.291" endtime="20201115 23:00:11.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.290" endtime="20201115 23:00:11.840"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.845" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.868" endtime="20201115 23:00:11.889"></status>
</kw>
<msg timestamp="20201115 23:00:11.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.864" endtime="20201115 23:00:11.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.892" endtime="20201115 23:00:11.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.898" endtime="20201115 23:00:11.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.857" endtime="20201115 23:00:11.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.851" endtime="20201115 23:00:11.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.922" endtime="20201115 23:00:12.273"></status>
</kw>
<msg timestamp="20201115 23:00:12.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048318819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048366236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.918" endtime="20201115 23:00:12.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048318819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048366236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.283" endtime="20201115 23:00:12.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.302" endtime="20201115 23:00:12.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.911" endtime="20201115 23:00:12.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.907" endtime="20201115 23:00:12.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.319" level="INFO">${RESULT} = [{'time': 0.048366236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7417000000000986e-05, 'source_diff': 4.7417000000000986e-05}, {'time': 0.048429236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:12.310" endtime="20201115 23:00:12.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.353" level="INFO">${ACCURACY} = {'diff': [4.7417000000000986e-05, 4.733300000000357e-05, 4.741699999999405e-05, 4.7903000000001916e-05, 4.777800000000526e-05, 4.757000000000372e-05, 4.8167000000001736e-05, 4.793099999999412e-05, 4.7...</msg>
<status status="PASS" starttime="20201115 23:00:12.322" endtime="20201115 23:00:12.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.365" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.362" endtime="20201115 23:00:12.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.370" level="INFO">VALUE: [4.7417000000000986e-05, 4.733300000000357e-05, 4.741699999999405e-05, 4.7903000000001916e-05, 4.777800000000526e-05, 4.757000000000372e-05, 4.8167000000001736e-05, 4.793099999999412e-05, 4.787499999999584e-05, 4.7458999999999696e-05, 4.749999999999893e-05, 4.7736999999999086e-05, 4.804199999999814e-05, 4.756999999999678e-05, 4.793000000000158e-05, 4.795800000000072e-05, 4.783300000000407e-05, 4.7875000000002776e-05, 4.770800000000047e-05, 4.7445000000000126e-05, 4.799999999999943e-05, 4.756900000000425e-05, 4.770800000000047e-05, 4.81940000000014e-05, 4.8167000000001736e-05, 4.7389000000001846e-05, 4.7889000000002346e-05, 4.7695000000000376e-05, 4.820800000000097e-05, 4.7472999999999266e-05, 4.7653000000001666e-05, 4.75139999999985e-05, 4.7458999999999696e-05, 4.755499999999774e-05, 4.793099999999412e-05, 4.75269999999986e-05, 4.759699999999645e-05, 4.799999999999943e-05, 4.795800000000072e-05, 4.776399999999875e-05, 4.777799999999832e-05, 4.806999999999728e-05, 4.7667000000001236e-05, 4.823600000000011e-05, 4.7903000000001916e-05, 4.73060000000039e-05, 4.799999999999943e-05, 4.740299999999448e-05, 4.780599999999746e-05, 4.7889000000002346e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.367" endtime="20201115 23:00:12.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.355" endtime="20201115 23:00:12.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.379" endtime="20201115 23:00:12.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.388" endtime="20201115 23:00:12.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.383" endtime="20201115 23:00:12.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.375" endtime="20201115 23:00:12.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.847" endtime="20201115 23:00:12.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.843" endtime="20201115 23:00:12.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.841" endtime="20201115 23:00:12.415"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.420" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.442" endtime="20201115 23:00:12.463"></status>
</kw>
<msg timestamp="20201115 23:00:12.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.439" endtime="20201115 23:00:12.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.466" endtime="20201115 23:00:12.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.473" endtime="20201115 23:00:12.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.432" endtime="20201115 23:00:12.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.426" endtime="20201115 23:00:12.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.496" endtime="20201115 23:00:12.846"></status>
</kw>
<msg timestamp="20201115 23:00:12.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048084361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048133361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.493" endtime="20201115 23:00:12.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048084361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048133361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.855" endtime="20201115 23:00:12.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.874" endtime="20201115 23:00:12.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.486" endtime="20201115 23:00:12.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.481" endtime="20201115 23:00:12.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.894" level="INFO">${RESULT} = [{'time': 0.048133361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.900000000000043e-05, 'source_diff': 4.900000000000043e-05}, {'time': 0.048201389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:12.885" endtime="20201115 23:00:12.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.924" level="INFO">${ACCURACY} = {'diff': [4.900000000000043e-05, 4.873600000000061e-05, 4.879199999999889e-05, 4.900000000000043e-05, 4.919499999999494e-05, 4.887499999999684e-05, 4.925000000000068e-05, 4.859699999999745e-05, 4.8568...</msg>
<status status="PASS" starttime="20201115 23:00:12.896" endtime="20201115 23:00:12.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.936" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.934" endtime="20201115 23:00:12.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.942" level="INFO">VALUE: [4.900000000000043e-05, 4.873600000000061e-05, 4.879199999999889e-05, 4.900000000000043e-05, 4.919499999999494e-05, 4.887499999999684e-05, 4.925000000000068e-05, 4.859699999999745e-05, 4.856899999999831e-05, 4.911099999999752e-05, 4.9223000000001016e-05, 4.8737000000000086e-05, 4.908300000000532e-05, 4.9207999999995033e-05, 4.898599999999392e-05, 4.83469999999972e-05, 4.875000000000018e-05, 4.895800000000172e-05, 4.841699999999505e-05, 4.876399999999975e-05, 4.9193999999995464e-05, 4.8431000000001556e-05, 4.8707999999994533e-05, 4.923599999999417e-05, 4.8653000000002666e-05, 4.913899999999666e-05, 4.873600000000061e-05, 4.923600000000111e-05, 4.8389000000002846e-05, 4.8931000000002056e-05, 4.8707999999994533e-05, 4.83469999999972e-05, 4.855499999999874e-05, 4.900000000000043e-05, 4.847200000000079e-05, 4.908300000000532e-05, 4.875000000000018e-05, 4.91669999999958e-05, 4.886100000000421e-05, 4.895800000000172e-05, 4.906899999999881e-05, 4.848600000000036e-05, 4.8417000000001986e-05, 4.9139000000003596e-05, 4.855600000000515e-05, 4.8375000000003276e-05, 4.855599999999821e-05, 4.8401999999996004e-05, 4.833299999999763e-05, 4.897199999999435e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.938" endtime="20201115 23:00:12.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.926" endtime="20201115 23:00:12.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.951" endtime="20201115 23:00:12.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.959" endtime="20201115 23:00:12.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.955" endtime="20201115 23:00:12.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.946" endtime="20201115 23:00:12.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.422" endtime="20201115 23:00:12.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.418" endtime="20201115 23:00:12.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.416" endtime="20201115 23:00:12.986"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.991" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.013" endtime="20201115 23:00:13.033"></status>
</kw>
<msg timestamp="20201115 23:00:13.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.010" endtime="20201115 23:00:13.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.036" endtime="20201115 23:00:13.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.043" endtime="20201115 23:00:13.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.003" endtime="20201115 23:00:13.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.997" endtime="20201115 23:00:13.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.066" endtime="20201115 23:00:13.419"></status>
</kw>
<msg timestamp="20201115 23:00:13.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046876792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046926292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.063" endtime="20201115 23:00:13.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046876792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046926292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.429" endtime="20201115 23:00:13.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.448" endtime="20201115 23:00:13.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.056" endtime="20201115 23:00:13.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.051" endtime="20201115 23:00:13.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.465" level="INFO">${RESULT} = [{'time': 0.046926292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.950000000000093e-05, 'source_diff': 4.950000000000093e-05}, {'time': 0.046995333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:13.456" endtime="20201115 23:00:13.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.495" level="INFO">${ACCURACY} = {'diff': [4.950000000000093e-05, 5.0014000000001e-05, 5.0223000000002016e-05, 4.961100000000496e-05, 4.936099999999777e-05, 4.999999999999449e-05, 5.009799999999842e-05, 4.956899999999931e-05, 5.01389...</msg>
<status status="PASS" starttime="20201115 23:00:13.467" endtime="20201115 23:00:13.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.506" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.504" endtime="20201115 23:00:13.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.513" level="INFO">VALUE: [4.950000000000093e-05, 5.0014000000001e-05, 5.0223000000002016e-05, 4.961100000000496e-05, 4.936099999999777e-05, 4.999999999999449e-05, 5.009799999999842e-05, 4.956899999999931e-05, 5.013899999999766e-05, 4.956900000000625e-05, 4.9443999999995714e-05, 4.983299999999913e-05, 4.972200000000204e-05, 5.020800000000297e-05, 4.961099999999802e-05, 4.945800000000222e-05, 4.943099999999562e-05, 4.9945000000002626e-05, 4.9625000000004527e-05, 5.025000000000168e-05, 4.9417000000002986e-05, 4.973600000000161e-05, 5.011200000000493e-05, 4.940200000000394e-05, 4.93469999999982e-05, 4.973599999999467e-05, 4.979199999999989e-05, 4.9319000000006e-05, 4.927799999999982e-05, 5.002800000000057e-05, 4.936099999999777e-05, 4.952800000000007e-05, 4.9653000000003666e-05, 4.93469999999982e-05, 5.013899999999766e-05, 5.013899999999766e-05, 4.98339999999986e-05, 5.002799999999363e-05, 4.954199999999964e-05, 4.981999999999903e-05, 4.937499999999734e-05, 5.002800000000057e-05, 4.936100000000471e-05, 4.999999999999449e-05, 5.011099999999852e-05, 4.95140000000005e-05, 4.948600000000136e-05, 5.009699999999895e-05, 4.991600000000401e-05, 4.981899999999956e-05]</msg>
<status status="PASS" starttime="20201115 23:00:13.509" endtime="20201115 23:00:13.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.497" endtime="20201115 23:00:13.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.522" endtime="20201115 23:00:13.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.530" endtime="20201115 23:00:13.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.526" endtime="20201115 23:00:13.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.517" endtime="20201115 23:00:13.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.993" endtime="20201115 23:00:13.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.989" endtime="20201115 23:00:13.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.987" endtime="20201115 23:00:13.557"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.562" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.585" endtime="20201115 23:00:13.605"></status>
</kw>
<msg timestamp="20201115 23:00:13.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.582" endtime="20201115 23:00:13.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.609" endtime="20201115 23:00:13.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.615" endtime="20201115 23:00:13.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.575" endtime="20201115 23:00:13.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.568" endtime="20201115 23:00:13.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.639" endtime="20201115 23:00:13.988"></status>
</kw>
<msg timestamp="20201115 23:00:13.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048075611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048126042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.635" endtime="20201115 23:00:13.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048075611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048126042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.997" endtime="20201115 23:00:14.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.016" endtime="20201115 23:00:14.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.628" endtime="20201115 23:00:14.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.623" endtime="20201115 23:00:14.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.036" level="INFO">${RESULT} = [{'time': 0.048126042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0431000000003556e-05, 'source_diff': 5.0431000000003556e-05}, {'time': 0.048186042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:14.027" endtime="20201115 23:00:14.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.066" level="INFO">${ACCURACY} = {'diff': [5.0431000000003556e-05, 5.070899999999601e-05, 5.0721999999996104e-05, 5.111199999999899e-05, 5.033299999999963e-05, 5.038800000000537e-05, 5.031900000000006e-05, 5.030500000000049e-05, 5.05...</msg>
<status status="PASS" starttime="20201115 23:00:14.038" endtime="20201115 23:00:14.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.077" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.075" endtime="20201115 23:00:14.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.083" level="INFO">VALUE: [5.0431000000003556e-05, 5.070899999999601e-05, 5.0721999999996104e-05, 5.111199999999899e-05, 5.033299999999963e-05, 5.038800000000537e-05, 5.031900000000006e-05, 5.030500000000049e-05, 5.058299999999988e-05, 5.077799999999438e-05, 5.033299999999963e-05, 5.044400000000365e-05, 5.102800000000157e-05, 5.094400000000415e-05, 5.111099999999952e-05, 5.0707999999996534e-05, 5.0429999999997144e-05, 5.0931000000004056e-05, 5.063899999999816e-05, 5.058399999999935e-05, 5.083300000000013e-05, 5.068099999999687e-05, 5.037499999999834e-05, 5.054100000000117e-05, 5.050000000000193e-05, 5.109699999999995e-05, 5.036099999999877e-05, 5.030599999999996e-05, 5.030500000000049e-05, 5.030599999999996e-05, 5.054200000000064e-05, 5.079200000000089e-05, 5.069499999999644e-05, 5.0959000000003196e-05, 5.098600000000286e-05, 5.0695000000003376e-05, 5.077700000000185e-05, 5.087499999999884e-05, 5.1137999999999184e-05, 5.1014000000002e-05, 5.108300000000038e-05, 5.036099999999877e-05, 5.0929999999997644e-05, 5.072200000000304e-05, 5.056900000000031e-05, 5.104200000000114e-05, 5.033299999999963e-05, 5.1014000000002e-05, 5.100000000000243e-05, 5.029200000000039e-05]</msg>
<status status="PASS" starttime="20201115 23:00:14.080" endtime="20201115 23:00:14.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.068" endtime="20201115 23:00:14.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.092" endtime="20201115 23:00:14.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.100" endtime="20201115 23:00:14.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.096" endtime="20201115 23:00:14.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.087" endtime="20201115 23:00:14.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.564" endtime="20201115 23:00:14.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.559" endtime="20201115 23:00:14.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.558" endtime="20201115 23:00:14.127"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.132" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.154" endtime="20201115 23:00:14.174"></status>
</kw>
<msg timestamp="20201115 23:00:14.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.150" endtime="20201115 23:00:14.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.178" endtime="20201115 23:00:14.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.184" endtime="20201115 23:00:14.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.143" endtime="20201115 23:00:14.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.137" endtime="20201115 23:00:14.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.207" endtime="20201115 23:00:14.559"></status>
</kw>
<msg timestamp="20201115 23:00:14.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04700875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047060208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:14.204" endtime="20201115 23:00:14.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04700875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047060208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:14.565" endtime="20201115 23:00:14.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.574" endtime="20201115 23:00:14.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.197" endtime="20201115 23:00:14.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.192" endtime="20201115 23:00:14.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.582" level="INFO">${RESULT} = [{'time': 0.047060208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1457999999997284e-05, 'source_diff': 5.1457999999997284e-05}, {'time': 0.047123208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:14.578" endtime="20201115 23:00:14.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.597" level="INFO">${ACCURACY} = {'diff': [5.1457999999997284e-05, 5.1693999999997964e-05, 5.177700000000285e-05, 5.133300000000063e-05, 5.131900000000106e-05, 5.193000000000558e-05, 5.207000000000128e-05, 5.133300000000063e-05, 5.17...</msg>
<status status="PASS" starttime="20201115 23:00:14.583" endtime="20201115 23:00:14.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.602" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.601" endtime="20201115 23:00:14.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.605" level="INFO">VALUE: [5.1457999999997284e-05, 5.1693999999997964e-05, 5.177700000000285e-05, 5.133300000000063e-05, 5.131900000000106e-05, 5.193000000000558e-05, 5.207000000000128e-05, 5.133300000000063e-05, 5.176400000000275e-05, 5.129200000000139e-05, 5.137500000000628e-05, 5.176399999999581e-05, 5.186199999999974e-05, 5.212500000000009e-05, 5.13340000000001e-05, 5.1721999999997104e-05, 5.161199999999949e-05, 5.207000000000128e-05, 5.2179999999998894e-05, 5.137500000000628e-05, 5.1665999999998824e-05, 5.204200000000214e-05, 5.191600000000601e-05, 5.182000000000103e-05, 5.193000000000558e-05, 5.130600000000096e-05, 5.130600000000096e-05, 5.129199999999445e-05, 5.1901999999999504e-05, 5.186100000000027e-05, 5.190299999999898e-05, 5.161199999999949e-05, 5.155600000000121e-05, 5.1387999999999434e-05, 5.2221999999997604e-05, 5.176300000000328e-05, 5.1943999999998214e-05, 5.133300000000063e-05, 5.197200000000429e-05, 5.161100000000002e-05, 5.144400000000465e-05, 5.193099999999812e-05, 5.207000000000128e-05, 5.206999999999434e-05, 5.15140000000025e-05, 5.138899999999891e-05, 5.170800000000447e-05, 5.169499999999744e-05, 5.157000000000078e-05, 5.1971999999997354e-05]</msg>
<status status="PASS" starttime="20201115 23:00:14.603" endtime="20201115 23:00:14.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.598" endtime="20201115 23:00:14.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.609" endtime="20201115 23:00:14.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.613" endtime="20201115 23:00:14.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.611" endtime="20201115 23:00:14.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.607" endtime="20201115 23:00:14.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.133" endtime="20201115 23:00:14.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.129" endtime="20201115 23:00:14.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.128" endtime="20201115 23:00:14.635"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.637" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.647" endtime="20201115 23:00:14.665"></status>
</kw>
<msg timestamp="20201115 23:00:14.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.646" endtime="20201115 23:00:14.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.666" endtime="20201115 23:00:14.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.669" endtime="20201115 23:00:14.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.643" endtime="20201115 23:00:14.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.640" endtime="20201115 23:00:14.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.681" endtime="20201115 23:00:14.968"></status>
</kw>
<msg timestamp="20201115 23:00:14.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0268255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026877778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:14.679" endtime="20201115 23:00:14.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0268255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026877778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:14.972" endtime="20201115 23:00:14.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.981" endtime="20201115 23:00:14.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.676" endtime="20201115 23:00:14.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.673" endtime="20201115 23:00:14.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.990" level="INFO">${RESULT} = [{'time': 0.026877778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.227800000000282e-05, 'source_diff': 5.227800000000282e-05}, {'time': 0.026940819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:14.986" endtime="20201115 23:00:14.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.003" level="INFO">${ACCURACY} = {'diff': [5.227800000000282e-05, 5.298600000000139e-05, 5.312499999999762e-05, 5.256999999999831e-05, 5.258300000000188e-05, 5.2443999999998714e-05, 5.25279999999996e-05, 5.284699999999823e-05, 5.3014...</msg>
<status status="PASS" starttime="20201115 23:00:14.991" endtime="20201115 23:00:15.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.008" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.007" endtime="20201115 23:00:15.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.011" level="INFO">VALUE: [5.227800000000282e-05, 5.298600000000139e-05, 5.312499999999762e-05, 5.256999999999831e-05, 5.258300000000188e-05, 5.2443999999998714e-05, 5.25279999999996e-05, 5.284699999999823e-05, 5.301400000000053e-05, 5.312500000000109e-05, 5.294400000000268e-05, 5.290299999999998e-05, 5.26669999999993e-05, 5.305599999999924e-05, 5.290299999999998e-05, 5.315300000000023e-05, 5.291699999999955e-05, 5.243100000000209e-05, 5.322299999999808e-05, 5.250000000000046e-05, 5.322200000000207e-05, 5.3179999999999894e-05, 5.2457999999998284e-05, 5.275000000000071e-05, 5.237500000000034e-05, 5.256900000000231e-05, 5.3263999999997313e-05, 5.305499999999977e-05, 5.265299999999973e-05, 5.298600000000139e-05, 5.250000000000046e-05, 5.231899999999859e-05, 5.311099999999805e-05, 5.261200000000049e-05, 5.259800000000092e-05, 5.2749999999997244e-05, 5.25279999999996e-05, 5.265299999999973e-05, 5.287500000000084e-05, 5.306899999999934e-05, 5.259700000000145e-05, 5.315299999999676e-05, 5.256899999999884e-05, 5.288900000000041e-05, 5.273600000000114e-05, 5.323600000000164e-05, 5.2693999999998964e-05, 5.269500000000191e-05, 5.2471999999997854e-05, 5.230600000000196e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.010" endtime="20201115 23:00:15.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.004" endtime="20201115 23:00:15.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.015" endtime="20201115 23:00:15.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.019" endtime="20201115 23:00:15.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.017" endtime="20201115 23:00:15.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.013" endtime="20201115 23:00:15.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.638" endtime="20201115 23:00:15.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.636" endtime="20201115 23:00:15.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.635" endtime="20201115 23:00:15.041"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.043" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.054" endtime="20201115 23:00:15.071"></status>
</kw>
<msg timestamp="20201115 23:00:15.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.052" endtime="20201115 23:00:15.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.072" endtime="20201115 23:00:15.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.076" endtime="20201115 23:00:15.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.049" endtime="20201115 23:00:15.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.046" endtime="20201115 23:00:15.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.087" endtime="20201115 23:00:15.375"></status>
</kw>
<msg timestamp="20201115 23:00:15.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027023611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027076972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.086" endtime="20201115 23:00:15.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027023611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027076972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.385" endtime="20201115 23:00:15.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.404" endtime="20201115 23:00:15.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.082" endtime="20201115 23:00:15.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.080" endtime="20201115 23:00:15.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.422" level="INFO">${RESULT} = [{'time': 0.027076972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.336100000000177e-05, 'source_diff': 5.336100000000177e-05}, {'time': 0.027142986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.412" endtime="20201115 23:00:15.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.452" level="INFO">${ACCURACY} = {'diff': [5.336100000000177e-05, 5.411100000000252e-05, 5.362499999999812e-05, 5.4194000000000464e-05, 5.3985999999998924e-05, 5.33470000000022e-05, 5.3971999999999354e-05, 5.365300000000073e-05, 5.40...</msg>
<status status="PASS" starttime="20201115 23:00:15.424" endtime="20201115 23:00:15.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.463" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.461" endtime="20201115 23:00:15.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.468" level="INFO">VALUE: [5.336100000000177e-05, 5.411100000000252e-05, 5.362499999999812e-05, 5.4194000000000464e-05, 5.3985999999998924e-05, 5.33470000000022e-05, 5.3971999999999354e-05, 5.365300000000073e-05, 5.408299999999991e-05, 5.358299999999941e-05, 5.4208000000000034e-05, 5.330600000000296e-05, 5.379200000000042e-05, 5.355599999999974e-05, 5.343099999999962e-05, 5.332000000000253e-05, 5.359700000000245e-05, 5.415300000000123e-05, 5.331899999999959e-05, 5.351400000000103e-05, 5.3693999999999964e-05, 5.331899999999959e-05, 5.358299999999941e-05, 5.420899999999951e-05, 5.355600000000321e-05, 5.4194000000000464e-05, 5.381999999999956e-05, 5.3499999999997994e-05, 5.350000000000146e-05, 5.361100000000202e-05, 5.338900000000091e-05, 5.394499999999969e-05, 5.3735999999998674e-05, 5.413900000000166e-05, 5.333300000000263e-05, 5.402699999999816e-05, 5.358299999999941e-05, 5.3499999999997994e-05, 5.35280000000006e-05, 5.3485999999998424e-05, 5.406999999999981e-05, 5.394499999999969e-05, 5.419499999999994e-05, 5.379199999999695e-05, 5.365299999999726e-05, 5.326400000000078e-05, 5.409699999999948e-05, 5.36670000000003e-05, 5.355599999999974e-05, 5.4208000000000034e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.465" endtime="20201115 23:00:15.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.454" endtime="20201115 23:00:15.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.477" endtime="20201115 23:00:15.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.486" endtime="20201115 23:00:15.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.481" endtime="20201115 23:00:15.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.473" endtime="20201115 23:00:15.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.044" endtime="20201115 23:00:15.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.042" endtime="20201115 23:00:15.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.041" endtime="20201115 23:00:15.512"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.518" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.540" endtime="20201115 23:00:15.561"></status>
</kw>
<msg timestamp="20201115 23:00:15.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.537" endtime="20201115 23:00:15.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.566" endtime="20201115 23:00:15.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.572" endtime="20201115 23:00:15.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.529" endtime="20201115 23:00:15.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.523" endtime="20201115 23:00:15.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.596" endtime="20201115 23:00:15.939"></status>
</kw>
<msg timestamp="20201115 23:00:15.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047903958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047958542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.592" endtime="20201115 23:00:15.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047903958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047958542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.949" endtime="20201115 23:00:15.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.968" endtime="20201115 23:00:15.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.585" endtime="20201115 23:00:15.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.580" endtime="20201115 23:00:15.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.988" level="INFO">${RESULT} = [{'time': 0.047958542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.458399999999641e-05, 'source_diff': 5.458399999999641e-05}, {'time': 0.048027569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.979" endtime="20201115 23:00:15.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.018" level="INFO">${ACCURACY} = {'diff': [5.458399999999641e-05, 5.437500000000234e-05, 5.5013999999999064e-05, 5.4487000000005836e-05, 5.4930000000001644e-05, 5.51670000000018e-05, 5.5027999999998634e-05, 5.431899999999712e-05, 5.4...</msg>
<status status="PASS" starttime="20201115 23:00:15.990" endtime="20201115 23:00:16.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.029" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.027" endtime="20201115 23:00:16.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.035" level="INFO">VALUE: [5.458399999999641e-05, 5.437500000000234e-05, 5.5013999999999064e-05, 5.4487000000005836e-05, 5.4930000000001644e-05, 5.51670000000018e-05, 5.5027999999998634e-05, 5.431899999999712e-05, 5.488900000000241e-05, 5.4694000000000964e-05, 5.4985999999999924e-05, 5.4541999999997703e-05, 5.515300000000223e-05, 5.459800000000292e-05, 5.4708000000000534e-05, 5.456899999999737e-05, 5.506999999999734e-05, 5.477699999999891e-05, 5.5041999999998203e-05, 5.433399999999616e-05, 5.494500000000069e-05, 5.4777999999998384e-05, 5.48470000000037e-05, 5.513899999999572e-05, 5.483300000000413e-05, 5.4680000000001394e-05, 5.4513999999998564e-05, 5.429200000000439e-05, 5.49869999999994e-05, 5.443099999999368e-05, 5.48470000000037e-05, 5.486099999999633e-05, 5.454200000000464e-05, 5.436100000000277e-05, 5.515299999999529e-05, 5.5041999999998203e-05, 5.5166000000002324e-05, 5.479099999999848e-05, 5.5014000000006e-05, 5.486099999999633e-05, 5.520900000000051e-05, 5.520900000000051e-05, 5.4277999999997883e-05, 5.461100000000302e-05, 5.452800000000507e-05, 5.509700000000395e-05, 5.511099999999658e-05, 5.5027999999998634e-05, 5.465300000000173e-05, 5.491700000000155e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.031" endtime="20201115 23:00:16.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.020" endtime="20201115 23:00:16.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.043" endtime="20201115 23:00:16.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.052" endtime="20201115 23:00:16.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.047" endtime="20201115 23:00:16.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.039" endtime="20201115 23:00:16.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.519" endtime="20201115 23:00:16.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.515" endtime="20201115 23:00:16.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.513" endtime="20201115 23:00:16.086"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.092" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.113" endtime="20201115 23:00:16.135"></status>
</kw>
<msg timestamp="20201115 23:00:16.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.110" endtime="20201115 23:00:16.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.138" endtime="20201115 23:00:16.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.145" endtime="20201115 23:00:16.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.103" endtime="20201115 23:00:16.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.097" endtime="20201115 23:00:16.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.169" endtime="20201115 23:00:16.509"></status>
</kw>
<msg timestamp="20201115 23:00:16.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055028458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055084069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.166" endtime="20201115 23:00:16.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055028458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055084069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.519" endtime="20201115 23:00:16.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.538" endtime="20201115 23:00:16.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.157" endtime="20201115 23:00:16.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.153" endtime="20201115 23:00:16.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.556" level="INFO">${RESULT} = [{'time': 0.055084069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.561099999999708e-05, 'source_diff': 5.561099999999708e-05}, {'time': 0.055158069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:16.547" endtime="20201115 23:00:16.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.590" level="INFO">${ACCURACY} = {'diff': [5.561099999999708e-05, 5.534699999999726e-05, 5.540300000000248e-05, 5.613900000000366e-05, 5.6250000000000744e-05, 5.544499999999425e-05, 5.540300000000248e-05, 5.616699999999586e-05, 5.618...</msg>
<status status="PASS" starttime="20201115 23:00:16.558" endtime="20201115 23:00:16.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.601" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.599" endtime="20201115 23:00:16.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.607" level="INFO">VALUE: [5.561099999999708e-05, 5.534699999999726e-05, 5.540300000000248e-05, 5.613900000000366e-05, 5.6250000000000744e-05, 5.544499999999425e-05, 5.540300000000248e-05, 5.616699999999586e-05, 5.618099999999543e-05, 5.563900000000316e-05, 5.544500000000119e-05, 5.6000000000000494e-05, 5.5513999999999564e-05, 5.5555999999998273e-05, 5.558299999999794e-05, 5.608400000000485e-05, 5.626300000000084e-05, 5.6208000000002034e-05, 5.581899999999862e-05, 5.538900000000291e-05, 5.5708000000001534e-05, 5.584699999999776e-05, 5.608399999999791e-05, 5.559799999999698e-05, 5.5958000000001784e-05, 5.569500000000144e-05, 5.618100000000237e-05, 5.570899999999407e-05, 5.568100000000187e-05, 5.620900000000151e-05, 5.581900000000556e-05, 5.5472000000000854e-05, 5.618099999999543e-05, 5.562500000000359e-05, 5.579099999999948e-05, 5.530499999999855e-05, 5.6193999999995525e-05, 5.6193999999995525e-05, 5.556899999999837e-05, 5.5736000000000674e-05, 5.6236000000001174e-05, 5.536099999999683e-05, 5.6041999999999204e-05, 5.6027999999999634e-05, 5.556999999999784e-05, 5.563899999999622e-05, 5.5777999999999384e-05, 5.5499999999999994e-05, 5.612499999999715e-05, 5.608299999999844e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.604" endtime="20201115 23:00:16.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.592" endtime="20201115 23:00:16.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.617" endtime="20201115 23:00:16.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.625" endtime="20201115 23:00:16.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.621" endtime="20201115 23:00:16.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.612" endtime="20201115 23:00:16.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.093" endtime="20201115 23:00:16.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.089" endtime="20201115 23:00:16.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.087" endtime="20201115 23:00:16.652"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.657" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.679" endtime="20201115 23:00:16.700"></status>
</kw>
<msg timestamp="20201115 23:00:16.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.676" endtime="20201115 23:00:16.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.703" endtime="20201115 23:00:16.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.710" endtime="20201115 23:00:16.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.668" endtime="20201115 23:00:16.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.663" endtime="20201115 23:00:16.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.734" endtime="20201115 23:00:17.077"></status>
</kw>
<msg timestamp="20201115 23:00:17.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047536, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047592417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:16.731" endtime="20201115 23:00:17.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047536, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047592417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:17.087" endtime="20201115 23:00:17.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.106" endtime="20201115 23:00:17.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.723" endtime="20201115 23:00:17.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.718" endtime="20201115 23:00:17.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.126" level="INFO">${RESULT} = [{'time': 0.047592417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.641699999999611e-05, 'source_diff': 5.641699999999611e-05}, {'time': 0.0476655, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:17.116" endtime="20201115 23:00:17.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.156" level="INFO">${ACCURACY} = {'diff': [5.641699999999611e-05, 5.6764000000000814e-05, 5.638899999999697e-05, 5.66949999999955e-05, 5.627700000000041e-05, 5.633300000000563e-05, 5.6291999999999454e-05, 5.6764000000000814e-05, 5.63...</msg>
<status status="PASS" starttime="20201115 23:00:17.128" endtime="20201115 23:00:17.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.167" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.165" endtime="20201115 23:00:17.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.174" level="INFO">VALUE: [5.641699999999611e-05, 5.6764000000000814e-05, 5.638899999999697e-05, 5.66949999999955e-05, 5.627700000000041e-05, 5.633300000000563e-05, 5.6291999999999454e-05, 5.6764000000000814e-05, 5.637500000000434e-05, 5.6541999999999704e-05, 5.6971999999995415e-05, 5.693100000000312e-05, 5.6305999999999023e-05, 5.6569999999998843e-05, 5.718099999999643e-05, 5.720900000000251e-05, 5.68619999999978e-05, 5.704100000000073e-05, 5.7151999999997816e-05, 5.7055999999999774e-05, 5.6971999999995415e-05, 5.6443999999995775e-05, 5.636099999999783e-05, 5.63749999999974e-05, 5.6957999999995845e-05, 5.633299999999869e-05, 5.662499999999765e-05, 5.6985999999994985e-05, 5.644500000000219e-05, 5.712499999999815e-05, 5.643100000000262e-05, 5.6569999999998843e-05, 5.663899999999722e-05, 5.659799999999798e-05, 5.6388000000004435e-05, 5.637500000000434e-05, 5.6901999999997566e-05, 5.681899999999962e-05, 5.634699999999826e-05, 5.683299999999919e-05, 5.6972000000002354e-05, 5.7055999999999774e-05, 5.636100000000477e-05, 5.691699999999661e-05, 5.686099999999833e-05, 5.690299999999704e-05, 5.633299999999869e-05, 5.690300000000398e-05, 5.6750000000001244e-05, 5.716699999999686e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.170" endtime="20201115 23:00:17.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.158" endtime="20201115 23:00:17.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.183" endtime="20201115 23:00:17.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.192" endtime="20201115 23:00:17.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.187" endtime="20201115 23:00:17.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.178" endtime="20201115 23:00:17.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.658" endtime="20201115 23:00:17.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.654" endtime="20201115 23:00:17.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.653" endtime="20201115 23:00:17.218"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.224" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.246" endtime="20201115 23:00:17.267"></status>
</kw>
<msg timestamp="20201115 23:00:17.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.243" endtime="20201115 23:00:17.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.270" endtime="20201115 23:00:17.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.277" endtime="20201115 23:00:17.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.235" endtime="20201115 23:00:17.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.229" endtime="20201115 23:00:17.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.301" endtime="20201115 23:00:17.644"></status>
</kw>
<msg timestamp="20201115 23:00:17.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047576264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047634403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.297" endtime="20201115 23:00:17.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047576264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047634403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.654" endtime="20201115 23:00:17.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.673" endtime="20201115 23:00:17.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.290" endtime="20201115 23:00:17.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.285" endtime="20201115 23:00:17.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.691" level="INFO">${RESULT} = [{'time': 0.047634403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.813899999999872e-05, 'source_diff': 5.813899999999872e-05}, {'time': 0.047712417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:17.682" endtime="20201115 23:00:17.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.723" level="INFO">${ACCURACY} = {'diff': [5.813899999999872e-05, 5.815299999999829e-05, 5.773700000000215e-05, 5.731900000000012e-05, 5.7999999999995555e-05, 5.7415999999997636e-05, 5.7443999999996775e-05, 5.808300000000044e-05, 5.8...</msg>
<status status="PASS" starttime="20201115 23:00:17.694" endtime="20201115 23:00:17.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.734" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.732" endtime="20201115 23:00:17.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.740" level="INFO">VALUE: [5.813899999999872e-05, 5.815299999999829e-05, 5.773700000000215e-05, 5.731900000000012e-05, 5.7999999999995555e-05, 5.7415999999997636e-05, 5.7443999999996775e-05, 5.808300000000044e-05, 5.802699999999522e-05, 5.7708000000003534e-05, 5.733299999999969e-05, 5.7736000000002674e-05, 5.8235999999996235e-05, 5.7693999999997025e-05, 5.818100000000437e-05, 5.8264000000002314e-05, 5.747300000000233e-05, 5.733299999999969e-05, 5.8194999999997e-05, 5.7750000000002244e-05, 5.768099999999693e-05, 5.7500000000001994e-05, 5.7901999999998566e-05, 5.754100000000123e-05, 5.7985999999995985e-05, 5.756900000000037e-05, 5.8264000000002314e-05, 5.815300000000523e-05, 5.731900000000012e-05, 5.811100000000652e-05, 5.7333999999999163e-05, 5.818099999999743e-05, 5.7319999999999593e-05, 5.827700000000241e-05, 5.7499999999995055e-05, 5.762499999999865e-05, 5.818100000000437e-05, 5.779099999999454e-05, 5.7915999999998136e-05, 5.7985999999995985e-05, 5.7971999999996415e-05, 5.78749999999989e-05, 5.7528000000001134e-05, 5.763900000000516e-05, 5.816699999999786e-05, 5.793100000000412e-05, 5.766699999999736e-05, 5.78749999999989e-05, 5.8194999999997e-05, 5.7805999999993585e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.737" endtime="20201115 23:00:17.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.725" endtime="20201115 23:00:17.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.749" endtime="20201115 23:00:17.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.758" endtime="20201115 23:00:17.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.753" endtime="20201115 23:00:17.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.744" endtime="20201115 23:00:17.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.225" endtime="20201115 23:00:17.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.221" endtime="20201115 23:00:17.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.219" endtime="20201115 23:00:17.784"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.790" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.812" endtime="20201115 23:00:17.833"></status>
</kw>
<msg timestamp="20201115 23:00:17.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.809" endtime="20201115 23:00:17.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.836" endtime="20201115 23:00:17.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.843" endtime="20201115 23:00:17.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.801" endtime="20201115 23:00:17.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.795" endtime="20201115 23:00:17.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.866" endtime="20201115 23:00:18.208"></status>
</kw>
<msg timestamp="20201115 23:00:18.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047800917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047859514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.863" endtime="20201115 23:00:18.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047800917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047859514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.218" endtime="20201115 23:00:18.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.238" endtime="20201115 23:00:18.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.856" endtime="20201115 23:00:18.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.851" endtime="20201115 23:00:18.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.257" level="INFO">${RESULT} = [{'time': 0.047859514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.859700000000051e-05, 'source_diff': 5.859700000000051e-05}, {'time': 0.047938542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:18.248" endtime="20201115 23:00:18.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.288" level="INFO">${ACCURACY} = {'diff': [5.859700000000051e-05, 5.86949999999975e-05, 5.8334000000000163e-05, 5.8679999999998456e-05, 5.8735999999996735e-05, 5.8471999999996915e-05, 5.8887999999999996e-05, 5.904100000000273e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:00:18.259" endtime="20201115 23:00:18.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.299" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.297" endtime="20201115 23:00:18.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.305" level="INFO">VALUE: [5.859700000000051e-05, 5.86949999999975e-05, 5.8334000000000163e-05, 5.8679999999998456e-05, 5.8735999999996735e-05, 5.8471999999996915e-05, 5.8887999999999996e-05, 5.904100000000273e-05, 5.83749999999994e-05, 5.8986000000003924e-05, 5.888899999999947e-05, 5.83749999999994e-05, 5.9249999999996805e-05, 5.915299999999929e-05, 5.8542000000001704e-05, 5.913899999999972e-05, 5.845899999999682e-05, 5.8264000000002314e-05, 5.8528000000002134e-05, 5.890299999999904e-05, 5.9000000000003494e-05, 5.83619999999993e-05, 5.8971999999997415e-05, 5.859700000000051e-05, 5.8415999999998636e-05, 5.890299999999904e-05, 5.884700000000076e-05, 5.904099999999579e-05, 5.861100000000008e-05, 5.8514000000002564e-05, 5.9055999999994835e-05, 5.843100000000462e-05, 5.8513999999995625e-05, 5.891699999999861e-05, 5.88749999999999e-05, 5.840299999999854e-05, 5.9042000000002204e-05, 5.9207999999998095e-05, 5.858300000000094e-05, 5.833300000000069e-05, 5.855499999999486e-05, 5.90829999999945e-05, 5.906899999999493e-05, 5.83749999999994e-05, 5.9250000000003744e-05, 5.83749999999994e-05, 5.856900000000137e-05, 5.834700000000026e-05, 5.8291999999994515e-05, 5.8986000000003924e-05]</msg>
<status status="PASS" starttime="20201115 23:00:18.302" endtime="20201115 23:00:18.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.290" endtime="20201115 23:00:18.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.314" endtime="20201115 23:00:18.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.322" endtime="20201115 23:00:18.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.318" endtime="20201115 23:00:18.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.309" endtime="20201115 23:00:18.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.791" endtime="20201115 23:00:18.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.787" endtime="20201115 23:00:18.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.785" endtime="20201115 23:00:18.349"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.355" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.377" endtime="20201115 23:00:18.398"></status>
</kw>
<msg timestamp="20201115 23:00:18.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.373" endtime="20201115 23:00:18.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.401" endtime="20201115 23:00:18.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.407" endtime="20201115 23:00:18.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.366" endtime="20201115 23:00:18.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.360" endtime="20201115 23:00:18.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.432" endtime="20201115 23:00:18.765"></status>
</kw>
<msg timestamp="20201115 23:00:18.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047904097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047963917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.428" endtime="20201115 23:00:18.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047904097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047963917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.770" endtime="20201115 23:00:18.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.778" endtime="20201115 23:00:18.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.421" endtime="20201115 23:00:18.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.416" endtime="20201115 23:00:18.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.787" level="INFO">${RESULT} = [{'time': 0.047963917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9820000000002094e-05, 'source_diff': 5.9820000000002094e-05}, {'time': 0.048043931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:18.783" endtime="20201115 23:00:18.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.802" level="INFO">${ACCURACY} = {'diff': [5.9820000000002094e-05, 5.9334000000001164e-05, 6.0014000000004064e-05, 6.013900000000072e-05, 5.977699999999697e-05, 5.959700000000151e-05, 5.934700000000126e-05, 5.9277999999995945e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:00:18.788" endtime="20201115 23:00:18.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.807" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.806" endtime="20201115 23:00:18.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.810" level="INFO">VALUE: [5.9820000000002094e-05, 5.9334000000001164e-05, 6.0014000000004064e-05, 6.013900000000072e-05, 5.977699999999697e-05, 5.959700000000151e-05, 5.934700000000126e-05, 5.9277999999995945e-05, 5.95550000000028e-05, 5.9806000000002524e-05, 5.934700000000126e-05, 5.9278000000002884e-05, 6.012500000000115e-05, 5.990300000000004e-05, 5.9652000000000316e-05, 5.9929999999999706e-05, 5.9750000000004244e-05, 5.9320000000001594e-05, 5.951300000000409e-05, 5.959700000000151e-05, 6.004100000000373e-05, 6.0250000000004744e-05, 5.9735999999997735e-05, 5.9707999999998596e-05, 5.9542000000002704e-05, 5.990300000000004e-05, 5.9819999999995155e-05, 5.96949999999985e-05, 5.9791999999996015e-05, 5.9334000000001164e-05, 5.93750000000004e-05, 5.995899999999832e-05, 5.963899999999328e-05, 5.979099999999654e-05, 6.0207999999999096e-05, 5.963900000000022e-05, 6.008300000000244e-05, 6.0028000000003634e-05, 5.9277999999995945e-05, 5.9792000000002954e-05, 5.956900000000237e-05, 5.968099999999893e-05, 5.944500000000519e-05, 5.9749999999997305e-05, 5.986099999999439e-05, 6.012500000000115e-05, 5.9638000000000746e-05, 6.0084000000001914e-05, 5.9902000000000566e-05, 5.936100000000083e-05]</msg>
<status status="PASS" starttime="20201115 23:00:18.808" endtime="20201115 23:00:18.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.803" endtime="20201115 23:00:18.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.814" endtime="20201115 23:00:18.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.818" endtime="20201115 23:00:18.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.816" endtime="20201115 23:00:18.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.812" endtime="20201115 23:00:18.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.356" endtime="20201115 23:00:18.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.352" endtime="20201115 23:00:18.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.350" endtime="20201115 23:00:18.840"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.842" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.853" endtime="20201115 23:00:18.871"></status>
</kw>
<msg timestamp="20201115 23:00:18.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.851" endtime="20201115 23:00:18.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.873" endtime="20201115 23:00:18.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.877" endtime="20201115 23:00:18.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.848" endtime="20201115 23:00:18.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.845" endtime="20201115 23:00:18.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.888" endtime="20201115 23:00:19.226"></status>
</kw>
<msg timestamp="20201115 23:00:19.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027274694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027335861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.886" endtime="20201115 23:00:19.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027274694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027335861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.236" endtime="20201115 23:00:19.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.255" endtime="20201115 23:00:19.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.883" endtime="20201115 23:00:19.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.881" endtime="20201115 23:00:19.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.274" level="INFO">${RESULT} = [{'time': 0.027335861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.116700000000086e-05, 'source_diff': 6.116700000000086e-05}, {'time': 0.027405847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:19.265" endtime="20201115 23:00:19.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.305" level="INFO">${ACCURACY} = {'diff': [6.116700000000086e-05, 6.030500000000008e-05, 6.106899999999693e-05, 6.063899999999775e-05, 6.0985999999998985e-05, 6.063900000000122e-05, 6.0806000000000054e-05, 6.043099999999968e-05, 6.10...</msg>
<status status="PASS" starttime="20201115 23:00:19.276" endtime="20201115 23:00:19.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.316" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.314" endtime="20201115 23:00:19.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.322" level="INFO">VALUE: [6.116700000000086e-05, 6.030500000000008e-05, 6.106899999999693e-05, 6.063899999999775e-05, 6.0985999999998985e-05, 6.063900000000122e-05, 6.0806000000000054e-05, 6.043099999999968e-05, 6.1028000000001165e-05, 6.112499999999868e-05, 6.090300000000104e-05, 6.070899999999907e-05, 6.0707999999999596e-05, 6.079100000000101e-05, 6.034699999999879e-05, 6.104099999999779e-05, 6.0806000000000054e-05, 6.0707999999999596e-05, 6.108299999999997e-05, 6.111100000000258e-05, 6.0305999999999554e-05, 6.0485999999998485e-05, 6.0819999999999624e-05, 6.072299999999864e-05, 6.062500000000165e-05, 6.047299999999839e-05, 6.080500000000058e-05, 6.0902000000001566e-05, 6.126400000000184e-05, 6.0499999999998055e-05, 6.119400000000053e-05, 6.0500000000001525e-05, 6.0971999999999416e-05, 6.0707999999999596e-05, 6.038900000000097e-05, 6.040300000000054e-05, 6.1195e-05, 6.0542000000000235e-05, 6.106999999999987e-05, 6.0999999999998555e-05, 6.034700000000226e-05, 6.0834000000002664e-05, 6.041700000000011e-05, 6.0611999999998084e-05, 6.03750000000014e-05, 6.0722000000002635e-05, 6.0944000000000276e-05, 6.122199999999967e-05, 6.083299999999972e-05, 6.087499999999843e-05]</msg>
<status status="PASS" starttime="20201115 23:00:19.318" endtime="20201115 23:00:19.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.307" endtime="20201115 23:00:19.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.331" endtime="20201115 23:00:19.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.339" endtime="20201115 23:00:19.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.335" endtime="20201115 23:00:19.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.326" endtime="20201115 23:00:19.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.843" endtime="20201115 23:00:19.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.841" endtime="20201115 23:00:19.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.840" endtime="20201115 23:00:19.366"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.372" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.394" endtime="20201115 23:00:19.415"></status>
</kw>
<msg timestamp="20201115 23:00:19.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.391" endtime="20201115 23:00:19.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.419" endtime="20201115 23:00:19.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.425" endtime="20201115 23:00:19.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.383" endtime="20201115 23:00:19.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.377" endtime="20201115 23:00:19.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.449" endtime="20201115 23:00:19.791"></status>
</kw>
<msg timestamp="20201115 23:00:19.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048372778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048434389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.446" endtime="20201115 23:00:19.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048372778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048434389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.801" endtime="20201115 23:00:19.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.821" endtime="20201115 23:00:19.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.439" endtime="20201115 23:00:19.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.434" endtime="20201115 23:00:19.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.838" level="INFO">${RESULT} = [{'time': 0.048434389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.161100000000308e-05, 'source_diff': 6.161100000000308e-05}, {'time': 0.048512375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:19.829" endtime="20201115 23:00:19.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.869" level="INFO">${ACCURACY} = {'diff': [6.161100000000308e-05, 6.169400000000103e-05, 6.211100000000358e-05, 6.209700000000401e-05, 6.138900000000197e-05, 6.215300000000229e-05, 6.176399999999888e-05, 6.156899999999743e-05, 6.1999...</msg>
<status status="PASS" starttime="20201115 23:00:19.841" endtime="20201115 23:00:19.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.881" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.878" endtime="20201115 23:00:19.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.886" level="INFO">VALUE: [6.161100000000308e-05, 6.169400000000103e-05, 6.211100000000358e-05, 6.209700000000401e-05, 6.138900000000197e-05, 6.215300000000229e-05, 6.176399999999888e-05, 6.156899999999743e-05, 6.199999999999956e-05, 6.145800000000035e-05, 6.177799999999845e-05, 6.177799999999845e-05, 6.197200000000042e-05, 6.191700000000161e-05, 6.208300000000444e-05, 6.136099999999589e-05, 6.129199999999752e-05, 6.215300000000229e-05, 6.19029999999951e-05, 6.198599999999999e-05, 6.198599999999999e-05, 6.148599999999949e-05, 6.158400000000341e-05, 6.1582999999997e-05, 6.133300000000369e-05, 6.17080000000006e-05, 6.223600000000024e-05, 6.145800000000035e-05, 6.147200000000685e-05, 6.130599999999709e-05, 6.191700000000161e-05, 6.186100000000333e-05, 6.145899999999982e-05, 6.141700000000111e-05, 6.13750000000024e-05, 6.209800000000348e-05, 6.20829999999975e-05, 6.180599999999759e-05, 6.168000000000146e-05, 6.211100000000358e-05, 6.129099999999804e-05, 6.209699999999707e-05, 6.177799999999845e-05, 6.227799999999895e-05, 6.20000000000065e-05, 6.129199999999752e-05, 6.131899999999718e-05, 6.17080000000006e-05, 6.208400000000391e-05, 6.223600000000024e-05]</msg>
<status status="PASS" starttime="20201115 23:00:19.883" endtime="20201115 23:00:19.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.871" endtime="20201115 23:00:19.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.896" endtime="20201115 23:00:19.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.904" endtime="20201115 23:00:19.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.900" endtime="20201115 23:00:19.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.891" endtime="20201115 23:00:19.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.373" endtime="20201115 23:00:19.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.369" endtime="20201115 23:00:19.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.367" endtime="20201115 23:00:19.932"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.937" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.959" endtime="20201115 23:00:19.981"></status>
</kw>
<msg timestamp="20201115 23:00:19.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.956" endtime="20201115 23:00:19.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.984" endtime="20201115 23:00:19.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.991" endtime="20201115 23:00:19.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.949" endtime="20201115 23:00:19.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.943" endtime="20201115 23:00:19.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.015" endtime="20201115 23:00:20.356"></status>
</kw>
<msg timestamp="20201115 23:00:20.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048495736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048558306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.012" endtime="20201115 23:00:20.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048495736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048558306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.366" endtime="20201115 23:00:20.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.385" endtime="20201115 23:00:20.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.004" endtime="20201115 23:00:20.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.999" endtime="20201115 23:00:20.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.405" level="INFO">${RESULT} = [{'time': 0.048558306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.257000000000484e-05, 'source_diff': 6.257000000000484e-05}, {'time': 0.048638333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:20.395" endtime="20201115 23:00:20.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.435" level="INFO">${ACCURACY} = {'diff': [6.257000000000484e-05, 6.267999999999552e-05, 6.30279999999997e-05, 6.29300000000027e-05, 6.309799999999754e-05, 6.255499999999886e-05, 6.316599999999645e-05, 6.294400000000228e-05, 6.242999...</msg>
<status status="PASS" starttime="20201115 23:00:20.407" endtime="20201115 23:00:20.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.447" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.444" endtime="20201115 23:00:20.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.452" level="INFO">VALUE: [6.257000000000484e-05, 6.267999999999552e-05, 6.30279999999997e-05, 6.29300000000027e-05, 6.309799999999754e-05, 6.255499999999886e-05, 6.316599999999645e-05, 6.294400000000228e-05, 6.242999999999527e-05, 6.231899999999818e-05, 6.319400000000253e-05, 6.236099999999689e-05, 6.319400000000253e-05, 6.300000000000056e-05, 6.315299999999635e-05, 6.273600000000074e-05, 6.294499999999481e-05, 6.281999999999816e-05, 6.294400000000228e-05, 6.3195000000002e-05, 6.256899999999843e-05, 6.252699999999972e-05, 6.27359999999938e-05, 6.322200000000167e-05, 6.234699999999732e-05, 6.295800000000185e-05, 6.230499999999861e-05, 6.306899999999893e-05, 6.288899999999653e-05, 6.304199999999927e-05, 6.230600000000502e-05, 6.272200000000117e-05, 6.300000000000056e-05, 6.27500000000003e-05, 6.294499999999481e-05, 6.279099999999954e-05, 6.236100000000383e-05, 6.315200000000382e-05, 6.27080000000016e-05, 6.24300000000022e-05, 6.23750000000034e-05, 6.318000000000296e-05, 6.233300000000469e-05, 6.237499999999646e-05, 6.298699999999352e-05, 6.27500000000003e-05, 6.25699999999979e-05, 6.277800000000638e-05, 6.283399999999773e-05, 6.312500000000415e-05]</msg>
<status status="PASS" starttime="20201115 23:00:20.449" endtime="20201115 23:00:20.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.437" endtime="20201115 23:00:20.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.462" endtime="20201115 23:00:20.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.471" endtime="20201115 23:00:20.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.466" endtime="20201115 23:00:20.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.457" endtime="20201115 23:00:20.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.939" endtime="20201115 23:00:20.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.934" endtime="20201115 23:00:20.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.933" endtime="20201115 23:00:20.497"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.503" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.526" endtime="20201115 23:00:20.548"></status>
</kw>
<msg timestamp="20201115 23:00:20.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.523" endtime="20201115 23:00:20.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.552" endtime="20201115 23:00:20.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.558" endtime="20201115 23:00:20.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.515" endtime="20201115 23:00:20.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.509" endtime="20201115 23:00:20.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.582" endtime="20201115 23:00:20.924"></status>
</kw>
<msg timestamp="20201115 23:00:20.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049691333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049755181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.579" endtime="20201115 23:00:20.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049691333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049755181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.934" endtime="20201115 23:00:20.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.953" endtime="20201115 23:00:20.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.571" endtime="20201115 23:00:20.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.567" endtime="20201115 23:00:20.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.971" level="INFO">${RESULT} = [{'time': 0.049755181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.384800000000523e-05, 'source_diff': 6.384800000000523e-05}, {'time': 0.049834194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:20.962" endtime="20201115 23:00:20.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.004" level="INFO">${ACCURACY} = {'diff': [6.384800000000523e-05, 6.338799999999756e-05, 6.377700000000097e-05, 6.344400000000278e-05, 6.420799999999616e-05, 6.40280000000007e-05, 6.412499999999821e-05, 6.40699999999994e-05, 6.333399...</msg>
<status status="PASS" starttime="20201115 23:00:20.973" endtime="20201115 23:00:21.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.016" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.013" endtime="20201115 23:00:21.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.022" level="INFO">VALUE: [6.384800000000523e-05, 6.338799999999756e-05, 6.377700000000097e-05, 6.344400000000278e-05, 6.420799999999616e-05, 6.40280000000007e-05, 6.412499999999821e-05, 6.40699999999994e-05, 6.333399999999823e-05, 6.412499999999821e-05, 6.35699999999989e-05, 6.326400000000038e-05, 6.35280000000002e-05, 6.357000000000584e-05, 6.379100000000054e-05, 6.419399999999659e-05, 6.331899999999918e-05, 6.365300000000379e-05, 6.363899999999728e-05, 6.386099999999839e-05, 6.39300000000037e-05, 6.362500000000465e-05, 6.426400000000138e-05, 6.411100000000558e-05, 6.393100000000318e-05, 6.416699999999692e-05, 6.334800000000473e-05, 6.337499999999746e-05, 6.384700000000576e-05, 6.406899999999993e-05, 6.354100000000029e-05, 6.42500000000018e-05, 6.415199999999788e-05, 6.363899999999728e-05, 6.349999999999412e-05, 6.331999999999866e-05, 6.413900000000472e-05, 6.372199999999523e-05, 6.331999999999866e-05, 6.362499999999771e-05, 6.351400000000063e-05, 6.422300000000214e-05, 6.401400000000113e-05, 6.344400000000278e-05, 6.354199999999977e-05, 6.33750000000044e-05, 6.372200000000217e-05, 6.394400000000328e-05, 6.419399999999659e-05, 6.35280000000002e-05]</msg>
<status status="PASS" starttime="20201115 23:00:21.018" endtime="20201115 23:00:21.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.006" endtime="20201115 23:00:21.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.031" endtime="20201115 23:00:21.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.039" endtime="20201115 23:00:21.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.035" endtime="20201115 23:00:21.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.026" endtime="20201115 23:00:21.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.504" endtime="20201115 23:00:21.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.500" endtime="20201115 23:00:21.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.498" endtime="20201115 23:00:21.066"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.071" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.094" endtime="20201115 23:00:21.115"></status>
</kw>
<msg timestamp="20201115 23:00:21.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.090" endtime="20201115 23:00:21.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.119" endtime="20201115 23:00:21.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.125" endtime="20201115 23:00:21.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.083" endtime="20201115 23:00:21.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.077" endtime="20201115 23:00:21.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.149" endtime="20201115 23:00:21.501"></status>
</kw>
<msg timestamp="20201115 23:00:21.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047973722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048038861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.146" endtime="20201115 23:00:21.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047973722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048038861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.510" endtime="20201115 23:00:21.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.530" endtime="20201115 23:00:21.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.138" endtime="20201115 23:00:21.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.134" endtime="20201115 23:00:21.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.549" level="INFO">${RESULT} = [{'time': 0.048038861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513899999999878e-05, 'source_diff': 6.513899999999878e-05}, {'time': 0.048124875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:21.540" endtime="20201115 23:00:21.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.587" level="INFO">${ACCURACY} = {'diff': [6.513899999999878e-05, 6.509700000000007e-05, 6.430600000000009e-05, 6.488900000000547e-05, 6.465200000000532e-05, 6.466599999999795e-05, 6.508399999999998e-05, 6.494400000000428e-05, 6.5097...</msg>
<status status="PASS" starttime="20201115 23:00:21.558" endtime="20201115 23:00:21.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.598" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.596" endtime="20201115 23:00:21.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.604" level="INFO">VALUE: [6.513899999999878e-05, 6.509700000000007e-05, 6.430600000000009e-05, 6.488900000000547e-05, 6.465200000000532e-05, 6.466599999999795e-05, 6.508399999999998e-05, 6.494400000000428e-05, 6.509799999999955e-05, 6.495800000000385e-05, 6.512500000000615e-05, 6.515199999999888e-05, 6.500000000000256e-05, 6.447200000000292e-05, 6.433399999999923e-05, 6.463899999999828e-05, 6.433299999999975e-05, 6.491699999999767e-05, 6.48620000000058e-05, 6.491699999999767e-05, 6.512499999999921e-05, 6.493099999999724e-05, 6.430600000000009e-05, 6.4583e-05, 6.459699999999957e-05, 6.483300000000025e-05, 6.450000000000206e-05, 6.50830000000005e-05, 6.455500000000086e-05, 6.482000000000016e-05, 6.511099999999964e-05, 6.480600000000059e-05, 6.518099999999749e-05, 6.498600000000299e-05, 6.512499999999921e-05, 6.45699999999999e-05, 6.505500000000136e-05, 6.495899999999638e-05, 6.479100000000154e-05, 6.444399999999684e-05, 6.476400000000188e-05, 6.472200000000317e-05, 6.469399999999709e-05, 6.50280000000017e-05, 6.455600000000034e-05, 6.47500000000023e-05, 6.441699999999717e-05, 6.509799999999955e-05, 6.45280000000012e-05, 6.498600000000299e-05]</msg>
<status status="PASS" starttime="20201115 23:00:21.601" endtime="20201115 23:00:21.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.589" endtime="20201115 23:00:21.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.613" endtime="20201115 23:00:21.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.621" endtime="20201115 23:00:21.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.617" endtime="20201115 23:00:21.645"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.608" endtime="20201115 23:00:21.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.073" endtime="20201115 23:00:21.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.069" endtime="20201115 23:00:21.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.067" endtime="20201115 23:00:21.648"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.654" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.676" endtime="20201115 23:00:21.697"></status>
</kw>
<msg timestamp="20201115 23:00:21.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.672" endtime="20201115 23:00:21.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.701" endtime="20201115 23:00:21.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.707" endtime="20201115 23:00:21.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.665" endtime="20201115 23:00:21.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.659" endtime="20201115 23:00:21.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.732" endtime="20201115 23:00:22.087"></status>
</kw>
<msg timestamp="20201115 23:00:22.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047610722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047677, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:21.728" endtime="20201115 23:00:22.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047610722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047677, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:22.097" endtime="20201115 23:00:22.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.117" endtime="20201115 23:00:22.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.721" endtime="20201115 23:00:22.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.716" endtime="20201115 23:00:22.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.134" level="INFO">${RESULT} = [{'time': 0.047677, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.6277999999996e-05, 'source_diff': 6.6277999999996e-05}, {'time': 0.047761, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.60689...</msg>
<status status="PASS" starttime="20201115 23:00:22.125" endtime="20201115 23:00:22.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.156" level="INFO">${ACCURACY} = {'diff': [6.6277999999996e-05, 6.606899999999499e-05, 6.598599999999705e-05, 6.55280000000022e-05, 6.591699999999867e-05, 6.609699999999413e-05, 6.605600000000184e-05, 6.57359999999968e-05, 6.57359999...</msg>
<status status="PASS" starttime="20201115 23:00:22.136" endtime="20201115 23:00:22.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.161" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.160" endtime="20201115 23:00:22.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.164" level="INFO">VALUE: [6.6277999999996e-05, 6.606899999999499e-05, 6.598599999999705e-05, 6.55280000000022e-05, 6.591699999999867e-05, 6.609699999999413e-05, 6.605600000000184e-05, 6.57359999999968e-05, 6.57359999999968e-05, 6.611100000000064e-05, 6.597299999999695e-05, 6.601400000000313e-05, 6.605499999999542e-05, 6.587499999999996e-05, 6.615299999999935e-05, 6.567999999999852e-05, 6.586100000000039e-05, 6.611100000000064e-05, 6.570799999999766e-05, 6.579200000000202e-05, 6.584700000000082e-05, 6.536099999999989e-05, 6.531999999999372e-05, 6.562499999999971e-05, 6.613899999999978e-05, 6.606899999999499e-05, 6.566699999999842e-05, 6.554100000000229e-05, 6.548599999999655e-05, 6.533300000000075e-05, 6.594399999999834e-05, 6.569400000000503e-05, 6.566700000000536e-05, 6.615299999999935e-05, 6.533299999999381e-05, 6.5583000000001e-05, 6.60700000000014e-05, 6.54029999999986e-05, 6.576400000000288e-05, 6.60700000000014e-05, 6.548600000000349e-05, 6.561100000000014e-05, 6.57359999999968e-05, 6.611100000000064e-05, 6.530500000000161e-05, 6.533300000000075e-05, 6.531900000000118e-05, 6.588800000000006e-05, 6.611100000000064e-05, 6.616699999999892e-05]</msg>
<status status="PASS" starttime="20201115 23:00:22.162" endtime="20201115 23:00:22.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.157" endtime="20201115 23:00:22.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.168" endtime="20201115 23:00:22.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.172" endtime="20201115 23:00:22.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.170" endtime="20201115 23:00:22.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.166" endtime="20201115 23:00:22.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.655" endtime="20201115 23:00:22.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.651" endtime="20201115 23:00:22.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.649" endtime="20201115 23:00:22.194"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.196" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.207" endtime="20201115 23:00:22.225"></status>
</kw>
<msg timestamp="20201115 23:00:22.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.205" endtime="20201115 23:00:22.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.226" endtime="20201115 23:00:22.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.229" endtime="20201115 23:00:22.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.202" endtime="20201115 23:00:22.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.199" endtime="20201115 23:00:22.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.241" endtime="20201115 23:00:22.573"></status>
</kw>
<msg timestamp="20201115 23:00:22.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026990403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027056861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.239" endtime="20201115 23:00:22.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026990403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027056861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.583" endtime="20201115 23:00:22.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.602" endtime="20201115 23:00:22.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.235" endtime="20201115 23:00:22.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.233" endtime="20201115 23:00:22.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.622" level="INFO">${RESULT} = [{'time': 0.027056861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.645800000000188e-05, 'source_diff': 6.645800000000188e-05}, {'time': 0.027135861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:22.613" endtime="20201115 23:00:22.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.652" level="INFO">${ACCURACY} = {'diff': [6.645800000000188e-05, 6.687500000000096e-05, 6.644500000000178e-05, 6.668100000000246e-05, 6.680599999999912e-05, 6.706999999999894e-05, 6.694499999999881e-05, 6.715300000000035e-05, 6.6375...</msg>
<status status="PASS" starttime="20201115 23:00:22.624" endtime="20201115 23:00:22.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.663" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.661" endtime="20201115 23:00:22.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.668" level="INFO">VALUE: [6.645800000000188e-05, 6.687500000000096e-05, 6.644500000000178e-05, 6.668100000000246e-05, 6.680599999999912e-05, 6.706999999999894e-05, 6.694499999999881e-05, 6.715300000000035e-05, 6.637500000000046e-05, 6.684699999999835e-05, 6.704100000000032e-05, 6.655499999999939e-05, 6.645800000000188e-05, 6.70830000000025e-05, 6.67220000000017e-05, 6.659700000000157e-05, 6.702800000000023e-05, 6.712499999999774e-05, 6.688799999999759e-05, 6.663900000000028e-05, 6.684699999999835e-05, 6.70969999999986e-05, 6.627799999999948e-05, 6.694499999999881e-05, 6.636200000000037e-05, 6.654099999999982e-05, 6.675000000000084e-05, 6.654200000000277e-05, 6.716699999999992e-05, 6.659700000000157e-05, 6.631899999999871e-05, 6.629199999999905e-05, 6.70419999999998e-05, 6.713900000000078e-05, 6.658400000000148e-05, 6.65419999999993e-05, 6.65700000000019e-05, 6.663900000000028e-05, 6.665299999999985e-05, 6.647199999999798e-05, 6.694399999999934e-05, 6.642999999999927e-05, 6.706999999999894e-05, 6.706899999999946e-05, 6.633299999999828e-05, 6.694499999999881e-05, 6.70419999999998e-05, 6.693099999999924e-05, 6.65969999999981e-05, 6.720799999999916e-05]</msg>
<status status="PASS" starttime="20201115 23:00:22.665" endtime="20201115 23:00:22.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.654" endtime="20201115 23:00:22.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.677" endtime="20201115 23:00:22.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.686" endtime="20201115 23:00:22.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.681" endtime="20201115 23:00:22.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.673" endtime="20201115 23:00:22.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.197" endtime="20201115 23:00:22.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.195" endtime="20201115 23:00:22.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.194" endtime="20201115 23:00:22.712"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.717" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.739" endtime="20201115 23:00:22.760"></status>
</kw>
<msg timestamp="20201115 23:00:22.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.736" endtime="20201115 23:00:22.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.764" endtime="20201115 23:00:22.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.771" endtime="20201115 23:00:22.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.729" endtime="20201115 23:00:22.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.723" endtime="20201115 23:00:22.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.794" endtime="20201115 23:00:23.130"></status>
</kw>
<msg timestamp="20201115 23:00:23.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046869597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046936903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.791" endtime="20201115 23:00:23.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046869597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046936903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.140" endtime="20201115 23:00:23.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.158" endtime="20201115 23:00:23.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.784" endtime="20201115 23:00:23.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.779" endtime="20201115 23:00:23.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.176" level="INFO">${RESULT} = [{'time': 0.046936903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.730600000000309e-05, 'source_diff': 6.730600000000309e-05}, {'time': 0.047014889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:23.167" endtime="20201115 23:00:23.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.209" level="INFO">${ACCURACY} = {'diff': [6.730600000000309e-05, 6.724999999999787e-05, 6.768099999999999e-05, 6.790299999999416e-05, 6.791700000000067e-05, 6.774999999999837e-05, 6.749999999999812e-05, 6.762500000000171e-05, 6.8040...</msg>
<status status="PASS" starttime="20201115 23:00:23.178" endtime="20201115 23:00:23.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.220" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.217" endtime="20201115 23:00:23.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.225" level="INFO">VALUE: [6.730600000000309e-05, 6.724999999999787e-05, 6.768099999999999e-05, 6.790299999999416e-05, 6.791700000000067e-05, 6.774999999999837e-05, 6.749999999999812e-05, 6.762500000000171e-05, 6.804099999999785e-05, 6.759700000000257e-05, 6.780499999999717e-05, 6.804200000000427e-05, 6.731899999999624e-05, 6.786100000000239e-05, 6.77359999999988e-05, 6.804199999999733e-05, 6.756999999999597e-05, 6.759800000000205e-05, 6.765299999999391e-05, 6.77229999999987e-05, 6.751299999999821e-05, 6.724999999999787e-05, 6.819400000000059e-05, 6.804100000000479e-05, 6.762500000000171e-05, 6.804199999999733e-05, 6.787500000000196e-05, 6.743099999999974e-05, 6.76109999999952e-05, 6.780600000000359e-05, 6.788900000000153e-05, 6.761100000000214e-05, 6.749999999999812e-05, 6.765300000000085e-05, 6.779100000000454e-05, 6.734700000000232e-05, 6.798599999999905e-05, 6.818000000000102e-05, 6.743000000000027e-05, 6.818100000000049e-05, 6.774999999999837e-05, 6.770799999999966e-05, 6.754200000000377e-05, 6.733400000000223e-05, 6.795899999999938e-05, 6.809800000000255e-05, 6.819400000000059e-05, 6.770900000000607e-05, 6.791599999999426e-05, 6.784700000000282e-05]</msg>
<status status="PASS" starttime="20201115 23:00:23.222" endtime="20201115 23:00:23.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.211" endtime="20201115 23:00:23.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.234" endtime="20201115 23:00:23.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.242" endtime="20201115 23:00:23.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.238" endtime="20201115 23:00:23.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.229" endtime="20201115 23:00:23.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.719" endtime="20201115 23:00:23.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.715" endtime="20201115 23:00:23.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.713" endtime="20201115 23:00:23.269"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.274" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.296" endtime="20201115 23:00:23.317"></status>
</kw>
<msg timestamp="20201115 23:00:23.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.293" endtime="20201115 23:00:23.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.321" endtime="20201115 23:00:23.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.327" endtime="20201115 23:00:23.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.285" endtime="20201115 23:00:23.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.279" endtime="20201115 23:00:23.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.351" endtime="20201115 23:00:23.686"></status>
</kw>
<msg timestamp="20201115 23:00:23.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047371833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047440361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.347" endtime="20201115 23:00:23.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047371833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047440361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.696" endtime="20201115 23:00:23.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.715" endtime="20201115 23:00:23.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.340" endtime="20201115 23:00:23.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.335" endtime="20201115 23:00:23.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.738" level="INFO">${RESULT} = [{'time': 0.047440361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.852799999999826e-05, 'source_diff': 6.852799999999826e-05}, {'time': 0.047518375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:23.725" endtime="20201115 23:00:23.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.768" level="INFO">${ACCURACY} = {'diff': [6.852799999999826e-05, 6.845800000000041e-05, 6.841700000000117e-05, 6.837499999999552e-05, 6.891699999999473e-05, 6.897200000000048e-05, 6.831999999999672e-05, 6.879100000000554e-05, 6.8902...</msg>
<status status="PASS" starttime="20201115 23:00:23.740" endtime="20201115 23:00:23.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.779" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.777" endtime="20201115 23:00:23.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.785" level="INFO">VALUE: [6.852799999999826e-05, 6.845800000000041e-05, 6.841700000000117e-05, 6.837499999999552e-05, 6.891699999999473e-05, 6.897200000000048e-05, 6.831999999999672e-05, 6.879100000000554e-05, 6.890200000000263e-05, 6.91109999999967e-05, 6.855600000000434e-05, 6.897200000000048e-05, 6.919400000000159e-05, 6.851399999999869e-05, 6.884699999999688e-05, 6.858299999999706e-05, 6.854099999999835e-05, 6.912500000000321e-05, 6.844500000000031e-05, 6.890200000000263e-05, 6.877699999999903e-05, 6.837499999999552e-05, 6.888799999999612e-05, 6.866600000000195e-05, 6.915300000000235e-05, 6.84030000000016e-05, 6.85280000000052e-05, 6.895800000000091e-05, 6.912500000000321e-05, 6.916700000000192e-05, 6.858399999999654e-05, 6.844500000000031e-05, 6.868100000000099e-05, 6.916600000000245e-05, 6.888899999999559e-05, 6.884699999999688e-05, 6.897200000000048e-05, 6.916699999999498e-05, 6.855500000000486e-05, 6.845899999999988e-05, 6.912500000000321e-05, 6.877799999999851e-05, 6.915300000000235e-05, 6.893100000000124e-05, 6.833299999999681e-05, 6.893100000000124e-05, 6.848700000000596e-05, 6.927799999999901e-05, 6.851299999999921e-05, 6.852799999999826e-05]</msg>
<status status="PASS" starttime="20201115 23:00:23.782" endtime="20201115 23:00:23.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.770" endtime="20201115 23:00:23.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.794" endtime="20201115 23:00:23.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.802" endtime="20201115 23:00:23.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.798" endtime="20201115 23:00:23.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.789" endtime="20201115 23:00:23.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.275" endtime="20201115 23:00:23.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.271" endtime="20201115 23:00:23.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.270" endtime="20201115 23:00:23.829"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.835" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.856" endtime="20201115 23:00:23.878"></status>
</kw>
<msg timestamp="20201115 23:00:23.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.853" endtime="20201115 23:00:23.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.881" endtime="20201115 23:00:23.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.887" endtime="20201115 23:00:23.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.846" endtime="20201115 23:00:23.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.840" endtime="20201115 23:00:23.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.911" endtime="20201115 23:00:24.248"></status>
</kw>
<msg timestamp="20201115 23:00:24.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047361708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047431069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.908" endtime="20201115 23:00:24.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047361708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047431069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.257" endtime="20201115 23:00:24.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.276" endtime="20201115 23:00:24.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.900" endtime="20201115 23:00:24.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.896" endtime="20201115 23:00:24.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.294" level="INFO">${RESULT} = [{'time': 0.047431069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.936099999999695e-05, 'source_diff': 6.936099999999695e-05}, {'time': 0.047511069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:24.285" endtime="20201115 23:00:24.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.323" level="INFO">${ACCURACY} = {'diff': [6.936099999999695e-05, 7.015200000000388e-05, 6.945800000000141e-05, 6.998600000000105e-05, 7.022200000000173e-05, 6.945799999999447e-05, 6.95700000000049e-05, 6.977799999999951e-05, 6.94030...</msg>
<status status="PASS" starttime="20201115 23:00:24.296" endtime="20201115 23:00:24.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.335" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.332" endtime="20201115 23:00:24.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.340" level="INFO">VALUE: [6.936099999999695e-05, 7.015200000000388e-05, 6.945800000000141e-05, 6.998600000000105e-05, 7.022200000000173e-05, 6.945799999999447e-05, 6.95700000000049e-05, 6.977799999999951e-05, 6.94030000000026e-05, 6.936200000000337e-05, 7.00559999999989e-05, 7.005600000000584e-05, 6.998600000000105e-05, 7.012500000000421e-05, 7.020800000000216e-05, 6.961100000000414e-05, 6.956899999999849e-05, 7.017999999999608e-05, 6.933299999999781e-05, 6.937499999999652e-05, 6.979199999999908e-05, 7.020799999999522e-05, 6.954199999999883e-05, 7.02360000000013e-05, 6.994400000000234e-05, 6.948700000000002e-05, 7.015200000000388e-05, 6.998599999999411e-05, 6.995799999999497e-05, 6.94030000000026e-05, 6.976399999999994e-05, 7.002799999999976e-05, 7.016700000000292e-05, 6.968000000000252e-05, 6.988799999999712e-05, 7.026400000000044e-05, 7.016699999999598e-05, 7.020900000000163e-05, 6.977799999999951e-05, 6.977799999999951e-05, 7.015299999999641e-05, 6.987499999999702e-05, 6.937500000000346e-05, 6.937500000000346e-05, 6.943000000000227e-05, 6.991599999999626e-05, 7.009699999999813e-05, 7.016700000000292e-05, 6.954199999999883e-05, 6.959699999999763e-05]</msg>
<status status="PASS" starttime="20201115 23:00:24.337" endtime="20201115 23:00:24.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.325" endtime="20201115 23:00:24.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.349" endtime="20201115 23:00:24.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.358" endtime="20201115 23:00:24.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.354" endtime="20201115 23:00:24.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.345" endtime="20201115 23:00:24.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.836" endtime="20201115 23:00:24.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.832" endtime="20201115 23:00:24.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.830" endtime="20201115 23:00:24.384"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.390" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.412" endtime="20201115 23:00:24.433"></status>
</kw>
<msg timestamp="20201115 23:00:24.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.408" endtime="20201115 23:00:24.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.436" endtime="20201115 23:00:24.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.443" endtime="20201115 23:00:24.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.401" endtime="20201115 23:00:24.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.395" endtime="20201115 23:00:24.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.466" endtime="20201115 23:00:24.800"></status>
</kw>
<msg timestamp="20201115 23:00:24.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046847292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046917861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.463" endtime="20201115 23:00:24.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046847292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046917861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.810" endtime="20201115 23:00:24.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.828" endtime="20201115 23:00:24.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.456" endtime="20201115 23:00:24.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.451" endtime="20201115 23:00:24.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.847" level="INFO">${RESULT} = [{'time': 0.046917861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.05689999999995e-05, 'source_diff': 7.05689999999995e-05}, {'time': 0.046997889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:24.839" endtime="20201115 23:00:24.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.877" level="INFO">${ACCURACY} = {'diff': [7.05689999999995e-05, 7.113899999999784e-05, 7.109699999999913e-05, 7.112499999999827e-05, 7.098599999999511e-05, 7.059699999999863e-05, 7.041700000000317e-05, 7.127700000000153e-05, 7.11670...</msg>
<status status="PASS" starttime="20201115 23:00:24.850" endtime="20201115 23:00:24.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.888" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.886" endtime="20201115 23:00:24.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.895" level="INFO">VALUE: [7.05689999999995e-05, 7.113899999999784e-05, 7.109699999999913e-05, 7.112499999999827e-05, 7.098599999999511e-05, 7.059699999999863e-05, 7.041700000000317e-05, 7.127700000000153e-05, 7.116700000000392e-05, 7.05689999999995e-05, 7.087499999999802e-05, 7.122199999999579e-05, 7.084699999999888e-05, 7.047299999999451e-05, 7.075000000000137e-05, 7.102800000000076e-05, 7.111100000000564e-05, 7.05700000000059e-05, 7.093100000000324e-05, 7.12230000000022e-05, 7.125000000000187e-05, 7.052700000000078e-05, 7.080500000000017e-05, 7.113900000000478e-05, 7.033299999999881e-05, 7.094500000000281e-05, 7.119400000000359e-05, 7.088900000000453e-05, 7.116599999999751e-05, 7.102800000000076e-05, 7.091700000000367e-05, 7.054199999999983e-05, 7.054199999999983e-05, 7.080500000000017e-05, 7.118100000000349e-05, 7.075000000000137e-05, 7.072200000000223e-05, 7.058299999999906e-05, 7.049999999999418e-05, 7.11109999999987e-05, 7.07360000000018e-05, 7.125000000000187e-05, 7.059700000000557e-05, 7.04030000000036e-05, 7.036099999999795e-05, 7.09030000000041e-05, 7.101400000000119e-05, 7.081999999999922e-05, 7.094400000000334e-05, 7.090199999999769e-05]</msg>
<status status="PASS" starttime="20201115 23:00:24.891" endtime="20201115 23:00:24.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.879" endtime="20201115 23:00:24.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.904" endtime="20201115 23:00:24.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.912" endtime="20201115 23:00:24.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.907" endtime="20201115 23:00:24.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.899" endtime="20201115 23:00:24.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.391" endtime="20201115 23:00:24.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.387" endtime="20201115 23:00:24.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.385" endtime="20201115 23:00:24.938"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.944" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.965" endtime="20201115 23:00:24.986"></status>
</kw>
<msg timestamp="20201115 23:00:24.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.962" endtime="20201115 23:00:24.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.990" endtime="20201115 23:00:24.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.996" endtime="20201115 23:00:24.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.955" endtime="20201115 23:00:25.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.949" endtime="20201115 23:00:25.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.019" endtime="20201115 23:00:25.355"></status>
</kw>
<msg timestamp="20201115 23:00:25.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046664597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046736222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.016" endtime="20201115 23:00:25.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046664597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046736222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.364" endtime="20201115 23:00:25.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.383" endtime="20201115 23:00:25.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.009" endtime="20201115 23:00:25.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.004" endtime="20201115 23:00:25.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.400" level="INFO">${RESULT} = [{'time': 0.046736222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.162499999999877e-05, 'source_diff': 7.162499999999877e-05}, {'time': 0.046818236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:25.391" endtime="20201115 23:00:25.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.434" level="INFO">${ACCURACY} = {'diff': [7.162499999999877e-05, 7.175000000000237e-05, 7.201399999999525e-05, 7.19309999999973e-05, 7.219399999999765e-05, 7.21109999999997e-05, 7.137500000000546e-05, 7.209700000000013e-05, 7.165299...</msg>
<status status="PASS" starttime="20201115 23:00:25.403" endtime="20201115 23:00:25.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.445" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.442" endtime="20201115 23:00:25.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.450" level="INFO">VALUE: [7.162499999999877e-05, 7.175000000000237e-05, 7.201399999999525e-05, 7.19309999999973e-05, 7.219399999999765e-05, 7.21109999999997e-05, 7.137500000000546e-05, 7.209700000000013e-05, 7.165299999999791e-05, 7.144400000000384e-05, 7.148600000000255e-05, 7.209700000000013e-05, 7.145799999999647e-05, 7.192999999999783e-05, 7.168099999999705e-05, 7.180500000000117e-05, 7.206899999999405e-05, 7.197300000000295e-05, 7.133399999999929e-05, 7.186099999999945e-05, 7.130600000000015e-05, 7.158399999999954e-05, 7.184699999999988e-05, 7.195900000000338e-05, 7.183300000000031e-05, 7.148600000000255e-05, 7.143000000000427e-05, 7.138900000000503e-05, 7.217999999999808e-05, 7.141699999999723e-05, 7.138900000000503e-05, 7.181900000000074e-05, 7.130600000000015e-05, 7.183399999999979e-05, 7.137500000000546e-05, 7.188799999999912e-05, 7.16109999999992e-05, 7.150000000000212e-05, 7.200000000000262e-05, 7.191699999999773e-05, 7.155500000000092e-05, 7.155500000000092e-05, 7.195799999999697e-05, 7.19309999999973e-05, 7.215299999999841e-05, 7.158399999999954e-05, 7.194499999999687e-05, 7.143100000000374e-05, 7.154100000000135e-05, 7.215300000000535e-05]</msg>
<status status="PASS" starttime="20201115 23:00:25.447" endtime="20201115 23:00:25.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.435" endtime="20201115 23:00:25.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.459" endtime="20201115 23:00:25.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.467" endtime="20201115 23:00:25.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.463" endtime="20201115 23:00:25.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.454" endtime="20201115 23:00:25.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.945" endtime="20201115 23:00:25.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.941" endtime="20201115 23:00:25.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.939" endtime="20201115 23:00:25.491"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.494" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.504" endtime="20201115 23:00:25.523"></status>
</kw>
<msg timestamp="20201115 23:00:25.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.502" endtime="20201115 23:00:25.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.524" endtime="20201115 23:00:25.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.527" endtime="20201115 23:00:25.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.499" endtime="20201115 23:00:25.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.496" endtime="20201115 23:00:25.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.538" endtime="20201115 23:00:25.863"></status>
</kw>
<msg timestamp="20201115 23:00:25.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028903514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028976, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:25.537" endtime="20201115 23:00:25.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028903514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028976, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:25.873" endtime="20201115 23:00:25.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.892" endtime="20201115 23:00:25.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.533" endtime="20201115 23:00:25.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.531" endtime="20201115 23:00:25.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.911" level="INFO">${RESULT} = [{'time': 0.028976, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.248599999999661e-05, 'source_diff': 7.248599999999661e-05}, {'time': 0.029063972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:25.902" endtime="20201115 23:00:25.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.941" level="INFO">${ACCURACY} = {'diff': [7.248599999999661e-05, 7.292999999999883e-05, 7.27499999999999e-05, 7.276399999999947e-05, 7.249999999999965e-05, 7.286100000000045e-05, 7.233400000000029e-05, 7.300000000000015e-05, 7.30700...</msg>
<status status="PASS" starttime="20201115 23:00:25.913" endtime="20201115 23:00:25.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.952" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.950" endtime="20201115 23:00:25.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.958" level="INFO">VALUE: [7.248599999999661e-05, 7.292999999999883e-05, 7.27499999999999e-05, 7.276399999999947e-05, 7.249999999999965e-05, 7.286100000000045e-05, 7.233400000000029e-05, 7.300000000000015e-05, 7.307000000000147e-05, 7.25699999999975e-05, 7.291699999999873e-05, 7.291599999999926e-05, 7.281900000000174e-05, 7.306899999999852e-05, 7.255499999999845e-05, 7.273600000000033e-05, 7.297299999999701e-05, 7.262499999999977e-05, 7.313899999999984e-05, 7.318099999999855e-05, 7.313899999999984e-05, 7.295900000000091e-05, 7.234799999999986e-05, 7.263799999999987e-05, 7.232000000000072e-05, 7.266599999999901e-05, 7.287500000000002e-05, 7.317999999999908e-05, 7.265299999999891e-05, 7.319399999999865e-05, 7.234700000000038e-05, 7.266700000000542e-05, 7.265199999999944e-05, 7.288899999999959e-05, 7.240299999999866e-05, 7.280600000000165e-05, 7.286100000000045e-05, 7.304199999999539e-05, 7.316599999999951e-05, 7.236099999999995e-05, 7.222199999999679e-05, 7.315299999999941e-05, 7.26110000000002e-05, 7.299999999999668e-05, 7.287500000000002e-05, 7.297199999999754e-05, 7.220899999999669e-05, 7.297300000000395e-05, 7.247200000000398e-05, 7.274999999999643e-05]</msg>
<status status="PASS" starttime="20201115 23:00:25.955" endtime="20201115 23:00:25.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.943" endtime="20201115 23:00:25.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.967" endtime="20201115 23:00:25.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.975" endtime="20201115 23:00:25.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.971" endtime="20201115 23:00:25.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.962" endtime="20201115 23:00:26.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.494" endtime="20201115 23:00:26.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.492" endtime="20201115 23:00:26.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.492" endtime="20201115 23:00:26.002"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.007" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.028" endtime="20201115 23:00:26.050"></status>
</kw>
<msg timestamp="20201115 23:00:26.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.025" endtime="20201115 23:00:26.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.053" endtime="20201115 23:00:26.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.060" endtime="20201115 23:00:26.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.018" endtime="20201115 23:00:26.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.012" endtime="20201115 23:00:26.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.084" endtime="20201115 23:00:26.420"></status>
</kw>
<msg timestamp="20201115 23:00:26.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046700889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046774333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.080" endtime="20201115 23:00:26.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046700889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046774333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.429" endtime="20201115 23:00:26.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.448" endtime="20201115 23:00:26.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.072" endtime="20201115 23:00:26.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.068" endtime="20201115 23:00:26.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.466" level="INFO">${RESULT} = [{'time': 0.046774333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.34439999999989e-05, 'source_diff': 7.34439999999989e-05}, {'time': 0.046858306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:26.457" endtime="20201115 23:00:26.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.496" level="INFO">${ACCURACY} = {'diff': [7.34439999999989e-05, 7.350000000000412e-05, 7.345899999999794e-05, 7.394400000000634e-05, 7.330500000000267e-05, 7.406899999999605e-05, 7.4069000000003e-05, 7.368099999999905e-05, 7.3652999...</msg>
<status status="PASS" starttime="20201115 23:00:26.468" endtime="20201115 23:00:26.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.507" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.504" endtime="20201115 23:00:26.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.512" level="INFO">VALUE: [7.34439999999989e-05, 7.350000000000412e-05, 7.345899999999794e-05, 7.394400000000634e-05, 7.330500000000267e-05, 7.406899999999605e-05, 7.4069000000003e-05, 7.368099999999905e-05, 7.365299999999991e-05, 7.382000000000222e-05, 7.35560000000024e-05, 7.404200000000333e-05, 7.390300000000016e-05, 7.416699999999998e-05, 7.418099999999955e-05, 7.370899999999819e-05, 7.354100000000335e-05, 7.327800000000301e-05, 7.363900000000034e-05, 7.352799999999632e-05, 7.416699999999998e-05, 7.404200000000333e-05, 7.409700000000213e-05, 7.372199999999829e-05, 7.334699999999444e-05, 7.409800000000161e-05, 7.40560000000029e-05, 7.394499999999887e-05, 7.334800000000086e-05, 7.408299999999562e-05, 7.358299999999512e-05, 7.409700000000213e-05, 7.422199999999879e-05, 7.333299999999487e-05, 7.388900000000059e-05, 7.348599999999761e-05, 7.373599999999786e-05, 7.363900000000034e-05, 7.337500000000052e-05, 7.345899999999794e-05, 7.405599999999596e-05, 7.397299999999801e-05, 7.387500000000102e-05, 7.381900000000274e-05, 7.345800000000541e-05, 7.423599999999836e-05, 7.41110000000017e-05, 7.420799999999922e-05, 7.351399999999675e-05, 7.347199999999804e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.509" endtime="20201115 23:00:26.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.498" endtime="20201115 23:00:26.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.521" endtime="20201115 23:00:26.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.529" endtime="20201115 23:00:26.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.525" endtime="20201115 23:00:26.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.516" endtime="20201115 23:00:26.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.008" endtime="20201115 23:00:26.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.004" endtime="20201115 23:00:26.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.002" endtime="20201115 23:00:26.556"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.561" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.583" endtime="20201115 23:00:26.604"></status>
</kw>
<msg timestamp="20201115 23:00:26.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.579" endtime="20201115 23:00:26.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.607" endtime="20201115 23:00:26.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.621" endtime="20201115 23:00:26.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.572" endtime="20201115 23:00:26.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.566" endtime="20201115 23:00:26.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.644" endtime="20201115 23:00:26.980"></status>
</kw>
<msg timestamp="20201115 23:00:26.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046793111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046867514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.641" endtime="20201115 23:00:26.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046793111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046867514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.990" endtime="20201115 23:00:27.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.008" endtime="20201115 23:00:27.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.634" endtime="20201115 23:00:27.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.629" endtime="20201115 23:00:27.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.028" level="INFO">${RESULT} = [{'time': 0.046867514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.440300000000066e-05, 'source_diff': 7.440300000000066e-05}, {'time': 0.046962528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:27.019" endtime="20201115 23:00:27.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.057" level="INFO">${ACCURACY} = {'diff': [7.440300000000066e-05, 7.475000000000537e-05, 7.49310000000003e-05, 7.472299999999876e-05, 7.445899999999894e-05, 7.512499999999533e-05, 7.465300000000091e-05, 7.474999999999843e-05, 7.48330...</msg>
<status status="PASS" starttime="20201115 23:00:27.030" endtime="20201115 23:00:27.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.068" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.066" endtime="20201115 23:00:27.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.074" level="INFO">VALUE: [7.440300000000066e-05, 7.475000000000537e-05, 7.49310000000003e-05, 7.472299999999876e-05, 7.445899999999894e-05, 7.512499999999533e-05, 7.465300000000091e-05, 7.474999999999843e-05, 7.483300000000331e-05, 7.501399999999825e-05, 7.486099999999551e-05, 7.470799999999972e-05, 7.452800000000426e-05, 7.454200000000383e-05, 7.497199999999954e-05, 7.47360000000058e-05, 7.498599999999911e-05, 7.462500000000177e-05, 7.519400000000065e-05, 7.529099999999816e-05, 7.470799999999972e-05, 7.495799999999997e-05, 7.501399999999825e-05, 7.519500000000012e-05, 7.4763999999998e-05, 7.481900000000374e-05, 7.437500000000152e-05, 7.465300000000091e-05, 7.499999999999868e-05, 7.500000000000562e-05, 7.466700000000048e-05, 7.452700000000478e-05, 7.497199999999954e-05, 7.463900000000134e-05, 7.49440000000004e-05, 7.458299999999612e-05, 7.454200000000383e-05, 7.465300000000091e-05, 7.513900000000184e-05, 7.477799999999757e-05, 7.441700000000023e-05, 7.429200000000358e-05, 7.507000000000347e-05, 7.507000000000347e-05, 7.518100000000055e-05, 7.436099999999501e-05, 7.433299999999587e-05, 7.459700000000263e-05, 7.509700000000313e-05, 7.520800000000022e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.071" endtime="20201115 23:00:27.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.059" endtime="20201115 23:00:27.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.083" endtime="20201115 23:00:27.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.091" endtime="20201115 23:00:27.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.087" endtime="20201115 23:00:27.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.078" endtime="20201115 23:00:27.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.562" endtime="20201115 23:00:27.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.558" endtime="20201115 23:00:27.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.556" endtime="20201115 23:00:27.118"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.123" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.145" endtime="20201115 23:00:27.167"></status>
</kw>
<msg timestamp="20201115 23:00:27.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.142" endtime="20201115 23:00:27.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.170" endtime="20201115 23:00:27.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.177" endtime="20201115 23:00:27.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.134" endtime="20201115 23:00:27.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.128" endtime="20201115 23:00:27.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.200" endtime="20201115 23:00:27.536"></status>
</kw>
<msg timestamp="20201115 23:00:27.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047527542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047603056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.197" endtime="20201115 23:00:27.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047527542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047603056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.546" endtime="20201115 23:00:27.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.564" endtime="20201115 23:00:27.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.190" endtime="20201115 23:00:27.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.185" endtime="20201115 23:00:27.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.582" level="INFO">${RESULT} = [{'time': 0.047603056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.551399999999875e-05, 'source_diff': 7.551399999999875e-05}, {'time': 0.047698069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:27.573" endtime="20201115 23:00:27.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.615" level="INFO">${ACCURACY} = {'diff': [7.551399999999875e-05, 7.550000000000612e-05, 7.619399999999471e-05, 7.616700000000198e-05, 7.587500000000302e-05, 7.576400000000594e-05, 7.612500000000327e-05, 7.527799999999807e-05, 7.5846...</msg>
<status status="PASS" starttime="20201115 23:00:27.584" endtime="20201115 23:00:27.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.625" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.623" endtime="20201115 23:00:27.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.631" level="INFO">VALUE: [7.551399999999875e-05, 7.550000000000612e-05, 7.619399999999471e-05, 7.616700000000198e-05, 7.587500000000302e-05, 7.576400000000594e-05, 7.612500000000327e-05, 7.527799999999807e-05, 7.584699999999694e-05, 7.556999999999703e-05, 7.56389999999954e-05, 7.59310000000013e-05, 7.558299999999712e-05, 7.580599999999771e-05, 7.620800000000122e-05, 7.556899999999755e-05, 7.6151999999996e-05, 7.554099999999841e-05, 7.55969999999967e-05, 7.530599999999721e-05, 7.536100000000295e-05, 7.531999999999678e-05, 7.562499999999583e-05, 7.557000000000397e-05, 7.601399999999925e-05, 7.618000000000208e-05, 7.609800000000361e-05, 7.605499999999848e-05, 7.547200000000004e-05, 7.551399999999875e-05, 7.572200000000029e-05, 7.605599999999796e-05, 7.619400000000165e-05, 7.562499999999583e-05, 7.56110000000032e-05, 7.579199999999814e-05, 7.552799999999832e-05, 7.56110000000032e-05, 7.591599999999532e-05, 7.541700000000123e-05, 7.572200000000029e-05, 7.583299999999737e-05, 7.583400000000379e-05, 7.608299999999762e-05, 7.547200000000004e-05, 7.541700000000123e-05, 7.565300000000191e-05, 7.619500000000112e-05, 7.566699999999454e-05, 7.533300000000381e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.628" endtime="20201115 23:00:27.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.616" endtime="20201115 23:00:27.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.640" endtime="20201115 23:00:27.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.648" endtime="20201115 23:00:27.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.644" endtime="20201115 23:00:27.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.635" endtime="20201115 23:00:27.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.124" endtime="20201115 23:00:27.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.120" endtime="20201115 23:00:27.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.118" endtime="20201115 23:00:27.675"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.680" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.702" endtime="20201115 23:00:27.723"></status>
</kw>
<msg timestamp="20201115 23:00:27.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.699" endtime="20201115 23:00:27.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.726" endtime="20201115 23:00:27.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.733" endtime="20201115 23:00:27.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.692" endtime="20201115 23:00:27.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.686" endtime="20201115 23:00:27.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.756" endtime="20201115 23:00:28.092"></status>
</kw>
<msg timestamp="20201115 23:00:28.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047218097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047295167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.753" endtime="20201115 23:00:28.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047218097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047295167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.101" endtime="20201115 23:00:28.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.120" endtime="20201115 23:00:28.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.746" endtime="20201115 23:00:28.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.741" endtime="20201115 23:00:28.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.139" level="INFO">${RESULT} = [{'time': 0.047295167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.706999999999853e-05, 'source_diff': 7.706999999999853e-05}, {'time': 0.047389194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:28.130" endtime="20201115 23:00:28.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.169" level="INFO">${ACCURACY} = {'diff': [7.706999999999853e-05, 7.700000000000068e-05, 7.655500000000592e-05, 7.684700000000488e-05, 7.641700000000223e-05, 7.675000000000043e-05, 7.722200000000179e-05, 7.720800000000222e-05, 7.6346...</msg>
<status status="PASS" starttime="20201115 23:00:28.141" endtime="20201115 23:00:28.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.179" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.177" endtime="20201115 23:00:28.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.185" level="INFO">VALUE: [7.706999999999853e-05, 7.700000000000068e-05, 7.655500000000592e-05, 7.684700000000488e-05, 7.641700000000223e-05, 7.675000000000043e-05, 7.722200000000179e-05, 7.720800000000222e-05, 7.634699999999744e-05, 7.669500000000162e-05, 7.694500000000187e-05, 7.694500000000187e-05, 7.654199999999889e-05, 7.719500000000212e-05, 7.654099999999942e-05, 7.648600000000061e-05, 7.723600000000136e-05, 7.640300000000266e-05, 7.708400000000504e-05, 7.679199999999914e-05, 7.694500000000187e-05, 7.68189999999988e-05, 7.704199999999939e-05, 7.684799999999742e-05, 7.665300000000291e-05, 7.640300000000266e-05, 7.706899999999905e-05, 7.647200000000104e-05, 7.715300000000341e-05, 7.72640000000005e-05, 7.68189999999988e-05, 7.697200000000154e-05, 7.712499999999733e-05, 7.64440000000019e-05, 7.663900000000334e-05, 7.686099999999751e-05, 7.636100000000395e-05, 7.690299999999622e-05, 7.636100000000395e-05, 7.695900000000144e-05, 7.700000000000068e-05, 7.634700000000438e-05, 7.697200000000154e-05, 7.695800000000197e-05, 7.718100000000255e-05, 7.716699999999604e-05, 7.634700000000438e-05, 7.655599999999846e-05, 7.701400000000025e-05, 7.723700000000083e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.182" endtime="20201115 23:00:28.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.170" endtime="20201115 23:00:28.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.195" endtime="20201115 23:00:28.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.203" endtime="20201115 23:00:28.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.199" endtime="20201115 23:00:28.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.190" endtime="20201115 23:00:28.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.682" endtime="20201115 23:00:28.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.678" endtime="20201115 23:00:28.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.676" endtime="20201115 23:00:28.229"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.235" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.256" endtime="20201115 23:00:28.278"></status>
</kw>
<msg timestamp="20201115 23:00:28.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.253" endtime="20201115 23:00:28.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.281" endtime="20201115 23:00:28.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.288" endtime="20201115 23:00:28.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.246" endtime="20201115 23:00:28.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.240" endtime="20201115 23:00:28.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.311" endtime="20201115 23:00:28.646"></status>
</kw>
<msg timestamp="20201115 23:00:28.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046634097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046712014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.308" endtime="20201115 23:00:28.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046634097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046712014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.655" endtime="20201115 23:00:28.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.674" endtime="20201115 23:00:28.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.301" endtime="20201115 23:00:28.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.296" endtime="20201115 23:00:28.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.691" level="INFO">${RESULT} = [{'time': 0.046712014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.791700000000373e-05, 'source_diff': 7.791700000000373e-05}, {'time': 0.046804, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:28.682" endtime="20201115 23:00:28.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.721" level="INFO">${ACCURACY} = {'diff': [7.791700000000373e-05, 7.752800000000032e-05, 7.786100000000545e-05, 7.812500000000527e-05, 7.816699999999704e-05, 7.755599999999946e-05, 7.751400000000075e-05, 7.752800000000032e-05, 7.7319...</msg>
<status status="PASS" starttime="20201115 23:00:28.693" endtime="20201115 23:00:28.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.732" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.730" endtime="20201115 23:00:28.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.739" level="INFO">VALUE: [7.791700000000373e-05, 7.752800000000032e-05, 7.786100000000545e-05, 7.812500000000527e-05, 7.816699999999704e-05, 7.755599999999946e-05, 7.751400000000075e-05, 7.752800000000032e-05, 7.731999999999878e-05, 7.765300000000391e-05, 7.770900000000219e-05, 7.75269999999939e-05, 7.816600000000451e-05, 7.805500000000049e-05, 7.767999999999664e-05, 7.751399999999381e-05, 7.754199999999989e-05, 7.820800000000322e-05, 7.82640000000015e-05, 7.798600000000211e-05, 7.790299999999722e-05, 7.801400000000125e-05, 7.74310000000028e-05, 7.761199999999774e-05, 7.730499999999974e-05, 7.740300000000366e-05, 7.780500000000024e-05, 7.741599999999682e-05, 7.81110000000057e-05, 7.816699999999704e-05, 7.823600000000236e-05, 7.798599999999517e-05, 7.795900000000244e-05, 7.813900000000484e-05, 7.752700000000085e-05, 7.819400000000365e-05, 7.752700000000085e-05, 7.762499999999783e-05, 7.733299999999887e-05, 7.790300000000416e-05, 7.780500000000024e-05, 7.816699999999704e-05, 7.748600000000161e-05, 7.822200000000279e-05, 7.773599999999492e-05, 7.816699999999704e-05, 7.744500000000237e-05, 7.752800000000032e-05, 7.790299999999722e-05, 7.754199999999989e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.735" endtime="20201115 23:00:28.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.723" endtime="20201115 23:00:28.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.748" endtime="20201115 23:00:28.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.756" endtime="20201115 23:00:28.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.752" endtime="20201115 23:00:28.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.743" endtime="20201115 23:00:28.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.236" endtime="20201115 23:00:28.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.232" endtime="20201115 23:00:28.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.230" endtime="20201115 23:00:28.782"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.788" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.811" endtime="20201115 23:00:28.831"></status>
</kw>
<msg timestamp="20201115 23:00:28.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.807" endtime="20201115 23:00:28.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.833" endtime="20201115 23:00:28.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.836" endtime="20201115 23:00:28.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.799" endtime="20201115 23:00:28.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.793" endtime="20201115 23:00:28.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.847" endtime="20201115 23:00:29.151"></status>
</kw>
<msg timestamp="20201115 23:00:29.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04831125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048389944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:28.845" endtime="20201115 23:00:29.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04831125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048389944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:29.160" endtime="20201115 23:00:29.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.179" endtime="20201115 23:00:29.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.842" endtime="20201115 23:00:29.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.840" endtime="20201115 23:00:29.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.198" level="INFO">${RESULT} = [{'time': 0.048389944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.869399999999721e-05, 'source_diff': 7.869399999999721e-05}, {'time': 0.048480986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:29.189" endtime="20201115 23:00:29.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.229" level="INFO">${ACCURACY} = {'diff': [7.869399999999721e-05, 7.869399999999721e-05, 7.877799999999463e-05, 7.898599999999617e-05, 7.897200000000354e-05, 7.86389999999984e-05, 7.836100000000595e-05, 7.85839999999996e-05, 7.830600...</msg>
<status status="PASS" starttime="20201115 23:00:29.201" endtime="20201115 23:00:29.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.240" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.238" endtime="20201115 23:00:29.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.245" level="INFO">VALUE: [7.869399999999721e-05, 7.869399999999721e-05, 7.877799999999463e-05, 7.898599999999617e-05, 7.897200000000354e-05, 7.86389999999984e-05, 7.836100000000595e-05, 7.85839999999996e-05, 7.830600000000021e-05, 7.882000000000028e-05, 7.880500000000124e-05, 7.866600000000501e-05, 7.869400000000415e-05, 7.895800000000397e-05, 7.845800000000347e-05, 7.883300000000037e-05, 7.880500000000124e-05, 7.857000000000003e-05, 7.879200000000114e-05, 7.831999999999978e-05, 7.890300000000516e-05, 7.854200000000089e-05, 7.843099999999686e-05, 7.898699999999564e-05, 7.920800000000422e-05, 7.83190000000003e-05, 7.836099999999901e-05, 7.895799999999703e-05, 7.888899999999865e-05, 7.919500000000412e-05, 7.923599999999642e-05, 7.831999999999978e-05, 7.886099999999951e-05, 7.869400000000415e-05, 7.830600000000021e-05, 7.870899999999625e-05, 7.873700000000233e-05, 7.842999999999739e-05, 7.922199999999685e-05, 7.884699999999994e-05, 7.868099999999711e-05, 7.895800000000397e-05, 7.852799999999438e-05, 7.830600000000021e-05, 7.854200000000089e-05, 7.831999999999978e-05, 7.85839999999996e-05, 7.894500000000387e-05, 7.909799999999967e-05, 7.849999999999524e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.242" endtime="20201115 23:00:29.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.231" endtime="20201115 23:00:29.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.254" endtime="20201115 23:00:29.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.263" endtime="20201115 23:00:29.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.258" endtime="20201115 23:00:29.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.249" endtime="20201115 23:00:29.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.789" endtime="20201115 23:00:29.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.785" endtime="20201115 23:00:29.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.783" endtime="20201115 23:00:29.289"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.294" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.316" endtime="20201115 23:00:29.337"></status>
</kw>
<msg timestamp="20201115 23:00:29.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.313" endtime="20201115 23:00:29.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.341" endtime="20201115 23:00:29.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.347" endtime="20201115 23:00:29.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.305" endtime="20201115 23:00:29.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.299" endtime="20201115 23:00:29.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.371" endtime="20201115 23:00:29.706"></status>
</kw>
<msg timestamp="20201115 23:00:29.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046788292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046868417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.367" endtime="20201115 23:00:29.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046788292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046868417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.716" endtime="20201115 23:00:29.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.735" endtime="20201115 23:00:29.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.360" endtime="20201115 23:00:29.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.355" endtime="20201115 23:00:29.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.753" level="INFO">${RESULT} = [{'time': 0.046868417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.012500000000033e-05, 'source_diff': 8.012500000000033e-05}, {'time': 0.046966472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:29.744" endtime="20201115 23:00:29.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.785" level="INFO">${ACCURACY} = {'diff': [8.012500000000033e-05, 7.940299999999872e-05, 7.951400000000275e-05, 8.000000000000368e-05, 7.977799999999563e-05, 8.006899999999512e-05, 8.006900000000206e-05, 7.94310000000048e-05, 7.95969...</msg>
<status status="PASS" starttime="20201115 23:00:29.755" endtime="20201115 23:00:29.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.796" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.794" endtime="20201115 23:00:29.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.802" level="INFO">VALUE: [8.012500000000033e-05, 7.940299999999872e-05, 7.951400000000275e-05, 8.000000000000368e-05, 7.977799999999563e-05, 8.006899999999512e-05, 8.006900000000206e-05, 7.94310000000048e-05, 7.959699999999376e-05, 7.955600000000146e-05, 7.987500000000008e-05, 7.938899999999915e-05, 7.944499999999743e-05, 7.986100000000051e-05, 7.990299999999922e-05, 8.027800000000307e-05, 7.975000000000343e-05, 7.956900000000156e-05, 7.94719999999971e-05, 8.025000000000393e-05, 7.930500000000174e-05, 7.97919999999952e-05, 8.023599999999742e-05, 7.948599999999667e-05, 7.977800000000257e-05, 8.001400000000325e-05, 7.987500000000008e-05, 7.952700000000285e-05, 7.934700000000044e-05, 8.009699999999426e-05, 7.923600000000336e-05, 7.93190000000013e-05, 7.948599999999667e-05, 7.993099999999836e-05, 8.015299999999947e-05, 7.998699999999664e-05, 7.951400000000275e-05, 8.006999999999459e-05, 7.986100000000051e-05, 7.969500000000462e-05, 7.9846999999994e-05, 7.977799999999563e-05, 8.022200000000479e-05, 8.001399999999631e-05, 8.009699999999426e-05, 7.937499999999958e-05, 7.990299999999922e-05, 7.930599999999427e-05, 8.016699999999904e-05, 8.00970000000012e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.799" endtime="20201115 23:00:29.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.787" endtime="20201115 23:00:29.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.811" endtime="20201115 23:00:29.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.819" endtime="20201115 23:00:29.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.815" endtime="20201115 23:00:29.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.806" endtime="20201115 23:00:29.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.296" endtime="20201115 23:00:29.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.292" endtime="20201115 23:00:29.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.290" endtime="20201115 23:00:29.846"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.851" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.874" endtime="20201115 23:00:29.896"></status>
</kw>
<msg timestamp="20201115 23:00:29.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.870" endtime="20201115 23:00:29.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.899" endtime="20201115 23:00:29.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.906" endtime="20201115 23:00:29.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.863" endtime="20201115 23:00:29.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.857" endtime="20201115 23:00:29.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.930" endtime="20201115 23:00:30.265"></status>
</kw>
<msg timestamp="20201115 23:00:30.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048318611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048399444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.926" endtime="20201115 23:00:30.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048318611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048399444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.274" endtime="20201115 23:00:30.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.293" endtime="20201115 23:00:30.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.919" endtime="20201115 23:00:30.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.914" endtime="20201115 23:00:30.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.312" level="INFO">${RESULT} = [{'time': 0.048399444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.083300000000238e-05, 'source_diff': 8.083300000000238e-05}, {'time': 0.048492444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:30.303" endtime="20201115 23:00:30.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.342" level="INFO">${ACCURACY} = {'diff': [8.083300000000238e-05, 8.084700000000195e-05, 8.106899999999612e-05, 8.045799999999853e-05, 8.079200000000314e-05, 8.084700000000195e-05, 8.055499999999605e-05, 8.11669999999931e-05, 8.05279...</msg>
<status status="PASS" starttime="20201115 23:00:30.314" endtime="20201115 23:00:30.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.353" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.351" endtime="20201115 23:00:30.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.358" level="INFO">VALUE: [8.083300000000238e-05, 8.084700000000195e-05, 8.106899999999612e-05, 8.045799999999853e-05, 8.079200000000314e-05, 8.084700000000195e-05, 8.055499999999605e-05, 8.11669999999931e-05, 8.052799999999638e-05, 8.072199999999835e-05, 8.054199999999595e-05, 8.087500000000108e-05, 8.054199999999595e-05, 8.0764000000004e-05, 8.055500000000299e-05, 8.054100000000342e-05, 8.127800000000407e-05, 8.09169999999998e-05, 8.086100000000151e-05, 8.05840000000016e-05, 8.104200000000339e-05, 8.072199999999835e-05, 8.032000000000178e-05, 8.104200000000339e-05, 8.037500000000058e-05, 8.066600000000007e-05, 8.042999999999939e-05, 8.111100000000177e-05, 8.077799999999663e-05, 8.116700000000004e-05, 8.105599999999602e-05, 8.02919999999957e-05, 8.052800000000332e-05, 8.043099999999886e-05, 8.105600000000296e-05, 8.126399999999756e-05, 8.033400000000135e-05, 8.093099999999936e-05, 8.065299999999997e-05, 8.045799999999853e-05, 8.088900000000065e-05, 8.111099999999483e-05, 8.120799999999928e-05, 8.105599999999602e-05, 8.123600000000536e-05, 8.056999999999509e-05, 8.07090000000052e-05, 8.037500000000058e-05, 8.062500000000083e-05, 8.072299999999782e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.355" endtime="20201115 23:00:30.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.344" endtime="20201115 23:00:30.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.367" endtime="20201115 23:00:30.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.376" endtime="20201115 23:00:30.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.371" endtime="20201115 23:00:30.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.363" endtime="20201115 23:00:30.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.853" endtime="20201115 23:00:30.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.849" endtime="20201115 23:00:30.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.847" endtime="20201115 23:00:30.402"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.407" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.429" endtime="20201115 23:00:30.451"></status>
</kw>
<msg timestamp="20201115 23:00:30.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.426" endtime="20201115 23:00:30.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.454" endtime="20201115 23:00:30.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.461" endtime="20201115 23:00:30.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.418" endtime="20201115 23:00:30.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.413" endtime="20201115 23:00:30.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.485" endtime="20201115 23:00:30.820"></status>
</kw>
<msg timestamp="20201115 23:00:30.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046924264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047005542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.481" endtime="20201115 23:00:30.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046924264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047005542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.830" endtime="20201115 23:00:30.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.849" endtime="20201115 23:00:30.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.474" endtime="20201115 23:00:30.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.469" endtime="20201115 23:00:30.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.866" level="INFO">${RESULT} = [{'time': 0.047005542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.127799999999713e-05, 'source_diff': 8.127799999999713e-05}, {'time': 0.047108542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:30.857" endtime="20201115 23:00:30.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.897" level="INFO">${ACCURACY} = {'diff': [8.127799999999713e-05, 8.204200000000439e-05, 8.187499999999515e-05, 8.141600000000082e-05, 8.212500000000234e-05, 8.161100000000227e-05, 8.137499999999465e-05, 8.20970000000032e-05, 8.14309...</msg>
<status status="PASS" starttime="20201115 23:00:30.869" endtime="20201115 23:00:30.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.908" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.906" endtime="20201115 23:00:30.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.914" level="INFO">VALUE: [8.127799999999713e-05, 8.204200000000439e-05, 8.187499999999515e-05, 8.141600000000082e-05, 8.212500000000234e-05, 8.161100000000227e-05, 8.137499999999465e-05, 8.20970000000032e-05, 8.143099999999986e-05, 8.19719999999996e-05, 8.154199999999695e-05, 8.162500000000183e-05, 8.148600000000561e-05, 8.159699999999576e-05, 8.201399999999831e-05, 8.149999999999824e-05, 8.137500000000158e-05, 8.161100000000227e-05, 8.224999999999899e-05, 8.148600000000561e-05, 8.208299999999669e-05, 8.14170000000003e-05, 8.154200000000389e-05, 8.204199999999745e-05, 8.198599999999917e-05, 8.173599999999892e-05, 8.13190000000033e-05, 8.180500000000424e-05, 8.199999999999874e-05, 8.218000000000114e-05, 8.177799999999763e-05, 8.181899999999687e-05, 8.14170000000003e-05, 8.211099999999583e-05, 8.158399999999566e-05, 8.148599999999867e-05, 8.16390000000014e-05, 8.179100000000467e-05, 8.147299999999857e-05, 8.169400000000021e-05, 8.198599999999917e-05, 8.174999999999849e-05, 8.143000000000039e-05, 8.223599999999942e-05, 8.184700000000295e-05, 8.202800000000482e-05, 8.191699999999386e-05, 8.218100000000061e-05, 8.208399999999616e-05, 8.173600000000586e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.911" endtime="20201115 23:00:30.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.899" endtime="20201115 23:00:30.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.923" endtime="20201115 23:00:30.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.931" endtime="20201115 23:00:30.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.927" endtime="20201115 23:00:30.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.918" endtime="20201115 23:00:30.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.409" endtime="20201115 23:00:30.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.405" endtime="20201115 23:00:30.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.403" endtime="20201115 23:00:30.958"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.963" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.986" endtime="20201115 23:00:31.008"></status>
</kw>
<msg timestamp="20201115 23:00:31.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.982" endtime="20201115 23:00:31.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.011" endtime="20201115 23:00:31.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.018" endtime="20201115 23:00:31.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.974" endtime="20201115 23:00:31.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.968" endtime="20201115 23:00:31.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.041" endtime="20201115 23:00:31.375"></status>
</kw>
<msg timestamp="20201115 23:00:31.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047835292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047918444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.038" endtime="20201115 23:00:31.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047835292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047918444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.385" endtime="20201115 23:00:31.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.403" endtime="20201115 23:00:31.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.031" endtime="20201115 23:00:31.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.026" endtime="20201115 23:00:31.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.422" level="INFO">${RESULT} = [{'time': 0.047918444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.315199999999606e-05, 'source_diff': 8.315199999999606e-05}, {'time': 0.048012528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:31.413" endtime="20201115 23:00:31.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.452" level="INFO">${ACCURACY} = {'diff': [8.315199999999606e-05, 8.255599999999752e-05, 8.240300000000172e-05, 8.272200000000035e-05, 8.262500000000284e-05, 8.298600000000017e-05, 8.27919999999982e-05, 8.240300000000172e-05, 8.26389...</msg>
<status status="PASS" starttime="20201115 23:00:31.425" endtime="20201115 23:00:31.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.463" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.461" endtime="20201115 23:00:31.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.469" level="INFO">VALUE: [8.315199999999606e-05, 8.255599999999752e-05, 8.240300000000172e-05, 8.272200000000035e-05, 8.262500000000284e-05, 8.298600000000017e-05, 8.27919999999982e-05, 8.240300000000172e-05, 8.263899999999547e-05, 8.233399999999641e-05, 8.290199999999581e-05, 8.262500000000284e-05, 8.290200000000275e-05, 8.266600000000207e-05, 8.230500000000474e-05, 8.323600000000042e-05, 8.290300000000222e-05, 8.313899999999597e-05, 8.277799999999863e-05, 8.287499999999615e-05, 8.22919999999977e-05, 8.290300000000222e-05, 8.22919999999977e-05, 8.305599999999802e-05, 8.30970000000042e-05, 8.252699999999891e-05, 8.243000000000139e-05, 8.316600000000257e-05, 8.255599999999752e-05, 8.24170000000013e-05, 8.312500000000334e-05, 8.276399999999906e-05, 8.266700000000154e-05, 8.240200000000225e-05, 8.2846999999997e-05, 8.301399999999931e-05, 8.248599999999967e-05, 8.318000000000214e-05, 8.25970000000037e-05, 8.313899999999597e-05, 8.249999999999924e-05, 8.258299999999719e-05, 8.261100000000327e-05, 8.298699999999964e-05, 8.291600000000232e-05, 8.306900000000506e-05, 8.229099999999823e-05, 8.299999999999974e-05, 8.273599999999992e-05, 8.290200000000275e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.466" endtime="20201115 23:00:31.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.454" endtime="20201115 23:00:31.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.478" endtime="20201115 23:00:31.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.486" endtime="20201115 23:00:31.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.482" endtime="20201115 23:00:31.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.473" endtime="20201115 23:00:31.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.965" endtime="20201115 23:00:31.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.960" endtime="20201115 23:00:31.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.959" endtime="20201115 23:00:31.513"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.518" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.540" endtime="20201115 23:00:31.562"></status>
</kw>
<msg timestamp="20201115 23:00:31.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.537" endtime="20201115 23:00:31.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.565" endtime="20201115 23:00:31.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.572" endtime="20201115 23:00:31.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.530" endtime="20201115 23:00:31.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.524" endtime="20201115 23:00:31.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.595" endtime="20201115 23:00:31.931"></status>
</kw>
<msg timestamp="20201115 23:00:31.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047409069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047492792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.592" endtime="20201115 23:00:31.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047409069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047492792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.940" endtime="20201115 23:00:31.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.959" endtime="20201115 23:00:31.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.585" endtime="20201115 23:00:31.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.580" endtime="20201115 23:00:31.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.977" level="INFO">${RESULT} = [{'time': 0.047492792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.372300000000082e-05, 'source_diff': 8.372300000000082e-05}, {'time': 0.047587806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:31.968" endtime="20201115 23:00:31.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.010" level="INFO">${ACCURACY} = {'diff': [8.372300000000082e-05, 8.365300000000297e-05, 8.355499999999905e-05, 8.355499999999905e-05, 8.358300000000513e-05, 8.36390000000034e-05, 8.348600000000067e-05, 8.402799999999988e-05, 8.35689...</msg>
<status status="PASS" starttime="20201115 23:00:31.979" endtime="20201115 23:00:32.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.021" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.019" endtime="20201115 23:00:32.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.027" level="INFO">VALUE: [8.372300000000082e-05, 8.365300000000297e-05, 8.355499999999905e-05, 8.355499999999905e-05, 8.358300000000513e-05, 8.36390000000034e-05, 8.348600000000067e-05, 8.402799999999988e-05, 8.356899999999862e-05, 8.373599999999398e-05, 8.394500000000193e-05, 8.330599999999827e-05, 8.338899999999622e-05, 8.402799999999988e-05, 8.34720000000011e-05, 8.383300000000538e-05, 8.337500000000359e-05, 8.404099999999998e-05, 8.3846999999998e-05, 8.36249999999969e-05, 8.415300000000348e-05, 8.415299999999654e-05, 8.383400000000485e-05, 8.326399999999956e-05, 8.356899999999862e-05, 8.415199999999706e-05, 8.355500000000599e-05, 8.395800000000203e-05, 8.418000000000314e-05, 8.394400000000246e-05, 8.408299999999869e-05, 8.350000000000024e-05, 8.368100000000211e-05, 8.361200000000374e-05, 8.369500000000168e-05, 8.427800000000013e-05, 8.338900000000316e-05, 8.420899999999482e-05, 8.394500000000193e-05, 8.415300000000348e-05, 8.41799999999962e-05, 8.33469999999975e-05, 8.395800000000203e-05, 8.394500000000193e-05, 8.376400000000006e-05, 8.368100000000211e-05, 8.400000000000074e-05, 8.372300000000082e-05, 8.395800000000203e-05, 8.422300000000132e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.023" endtime="20201115 23:00:32.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.012" endtime="20201115 23:00:32.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.043" endtime="20201115 23:00:32.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.051" endtime="20201115 23:00:32.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.046" endtime="20201115 23:00:32.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.038" endtime="20201115 23:00:32.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.520" endtime="20201115 23:00:32.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.516" endtime="20201115 23:00:32.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.514" endtime="20201115 23:00:32.077"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.083" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.104" endtime="20201115 23:00:32.126"></status>
</kw>
<msg timestamp="20201115 23:00:32.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.101" endtime="20201115 23:00:32.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.129" endtime="20201115 23:00:32.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.136" endtime="20201115 23:00:32.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.094" endtime="20201115 23:00:32.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.088" endtime="20201115 23:00:32.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.159" endtime="20201115 23:00:32.475"></status>
</kw>
<msg timestamp="20201115 23:00:32.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046553708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046638958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.156" endtime="20201115 23:00:32.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046553708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046638958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.485" endtime="20201115 23:00:32.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.503" endtime="20201115 23:00:32.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.148" endtime="20201115 23:00:32.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.144" endtime="20201115 23:00:32.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.522" level="INFO">${RESULT} = [{'time': 0.046638958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.525000000000199e-05, 'source_diff': 8.525000000000199e-05}, {'time': 0.046738042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:32.513" endtime="20201115 23:00:32.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.552" level="INFO">${ACCURACY} = {'diff': [8.525000000000199e-05, 8.47920000000002e-05, 8.470800000000278e-05, 8.46669999999966e-05, 8.433400000000535e-05, 8.4846999999999e-05, 8.459699999999876e-05, 8.50970000000062e-05, 8.515299999...</msg>
<status status="PASS" starttime="20201115 23:00:32.525" endtime="20201115 23:00:32.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.563" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.561" endtime="20201115 23:00:32.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.569" level="INFO">VALUE: [8.525000000000199e-05, 8.47920000000002e-05, 8.470800000000278e-05, 8.46669999999966e-05, 8.433400000000535e-05, 8.4846999999999e-05, 8.459699999999876e-05, 8.50970000000062e-05, 8.515299999999754e-05, 8.472199999999541e-05, 8.433300000000588e-05, 8.502700000000141e-05, 8.497199999999566e-05, 8.519399999999677e-05, 8.437499999999765e-05, 8.519400000000371e-05, 8.436099999999808e-05, 8.433299999999894e-05, 8.522300000000232e-05, 8.452800000000038e-05, 8.433399999999841e-05, 8.445799999999559e-05, 8.43469999999985e-05, 8.429100000000023e-05, 8.481899999999987e-05, 8.481899999999987e-05, 8.522199999999591e-05, 8.466700000000354e-05, 8.441699999999636e-05, 8.461100000000527e-05, 8.437500000000459e-05, 8.454199999999995e-05, 8.504200000000045e-05, 8.450000000000124e-05, 8.498600000000217e-05, 8.445799999999559e-05, 8.518000000000414e-05, 8.495800000000303e-05, 8.475000000000149e-05, 8.519500000000318e-05, 8.494500000000293e-05, 8.490300000000423e-05, 8.451400000000081e-05, 8.438900000000416e-05, 8.46249999999979e-05, 8.46119999999978e-05, 8.509699999999926e-05, 8.502700000000141e-05, 8.518099999999668e-05, 8.443000000000339e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.566" endtime="20201115 23:00:32.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.554" endtime="20201115 23:00:32.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.578" endtime="20201115 23:00:32.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.587" endtime="20201115 23:00:32.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.582" endtime="20201115 23:00:32.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.574" endtime="20201115 23:00:32.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.084" endtime="20201115 23:00:32.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.080" endtime="20201115 23:00:32.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.078" endtime="20201115 23:00:32.613"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.618" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.640" endtime="20201115 23:00:32.662"></status>
</kw>
<msg timestamp="20201115 23:00:32.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.637" endtime="20201115 23:00:32.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.665" endtime="20201115 23:00:32.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.671" endtime="20201115 23:00:32.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.629" endtime="20201115 23:00:32.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.624" endtime="20201115 23:00:32.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.695" endtime="20201115 23:00:33.034"></status>
</kw>
<msg timestamp="20201115 23:00:33.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046640861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046727139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.692" endtime="20201115 23:00:33.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046640861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046727139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.043" endtime="20201115 23:00:33.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.062" endtime="20201115 23:00:33.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.684" endtime="20201115 23:00:33.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.680" endtime="20201115 23:00:33.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.079" level="INFO">${RESULT} = [{'time': 0.046727139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.627800000000213e-05, 'source_diff': 8.627800000000213e-05}, {'time': 0.046830181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:33.070" endtime="20201115 23:00:33.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.110" level="INFO">${ACCURACY} = {'diff': [8.627800000000213e-05, 8.632000000000084e-05, 8.550000000000224e-05, 8.595800000000403e-05, 8.588899999999872e-05, 8.573599999999598e-05, 8.604199999999451e-05, 8.584799999999948e-05, 8.6026...</msg>
<status status="PASS" starttime="20201115 23:00:33.082" endtime="20201115 23:00:33.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.121" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.119" endtime="20201115 23:00:33.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.127" level="INFO">VALUE: [8.627800000000213e-05, 8.632000000000084e-05, 8.550000000000224e-05, 8.595800000000403e-05, 8.588899999999872e-05, 8.573599999999598e-05, 8.604199999999451e-05, 8.584799999999948e-05, 8.602699999999547e-05, 8.605500000000155e-05, 8.544400000000396e-05, 8.533299999999994e-05, 8.576400000000206e-05, 8.59170000000048e-05, 8.559699999999976e-05, 8.601400000000231e-05, 8.583399999999991e-05, 8.630600000000127e-05, 8.593099999999743e-05, 8.57370000000024e-05, 8.53050000000008e-05, 8.575000000000249e-05, 8.590300000000523e-05, 8.619399999999777e-05, 8.573599999999598e-05, 8.551399999999487e-05, 8.538899999999822e-05, 8.600000000000274e-05, 8.556900000000062e-05, 8.582000000000034e-05, 8.580499999999436e-05, 8.591599999999838e-05, 8.601399999999537e-05, 8.534700000000645e-05, 8.566700000000455e-05, 8.569500000000368e-05, 8.559699999999976e-05, 8.554200000000095e-05, 8.626400000000256e-05, 8.588900000000566e-05, 8.583399999999991e-05, 8.541699999999736e-05, 8.573600000000292e-05, 8.551400000000181e-05, 8.56669999999976e-05, 8.587499999999915e-05, 8.543099999999693e-05, 8.538899999999822e-05, 8.586100000000652e-05, 8.618100000000462e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.124" endtime="20201115 23:00:33.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.112" endtime="20201115 23:00:33.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.136" endtime="20201115 23:00:33.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.145" endtime="20201115 23:00:33.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.140" endtime="20201115 23:00:33.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.131" endtime="20201115 23:00:33.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.620" endtime="20201115 23:00:33.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.616" endtime="20201115 23:00:33.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.614" endtime="20201115 23:00:33.171"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.176" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.198" endtime="20201115 23:00:33.220"></status>
</kw>
<msg timestamp="20201115 23:00:33.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.195" endtime="20201115 23:00:33.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.223" endtime="20201115 23:00:33.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.230" endtime="20201115 23:00:33.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.187" endtime="20201115 23:00:33.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.182" endtime="20201115 23:00:33.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.253" endtime="20201115 23:00:33.588"></status>
</kw>
<msg timestamp="20201115 23:00:33.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046859181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046945583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.250" endtime="20201115 23:00:33.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046859181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046945583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.597" endtime="20201115 23:00:33.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.616" endtime="20201115 23:00:33.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.243" endtime="20201115 23:00:33.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.238" endtime="20201115 23:00:33.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.636" level="INFO">${RESULT} = [{'time': 0.046945583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.640199999999931e-05, 'source_diff': 8.640199999999931e-05}, {'time': 0.047044625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:33.627" endtime="20201115 23:00:33.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.665" level="INFO">${ACCURACY} = {'diff': [8.640199999999931e-05, 8.724999999999705e-05, 8.66669999999986e-05, 8.648599999999673e-05, 8.693100000000537e-05, 8.657000000000109e-05, 8.715299999999954e-05, 8.640300000000573e-05, 8.64299...</msg>
<status status="PASS" starttime="20201115 23:00:33.638" endtime="20201115 23:00:33.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.676" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.674" endtime="20201115 23:00:33.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.682" level="INFO">VALUE: [8.640199999999931e-05, 8.724999999999705e-05, 8.66669999999986e-05, 8.648599999999673e-05, 8.693100000000537e-05, 8.657000000000109e-05, 8.715299999999954e-05, 8.640300000000573e-05, 8.642999999999845e-05, 8.644500000000443e-05, 8.658300000000119e-05, 8.688899999999972e-05, 8.730599999999533e-05, 8.704100000000298e-05, 8.687500000000015e-05, 8.680599999999483e-05, 8.6944999999998e-05, 8.648599999999673e-05, 8.672299999999689e-05, 8.669499999999775e-05, 8.632000000000084e-05, 8.697299999999714e-05, 8.636100000000008e-05, 8.669399999999827e-05, 8.654100000000248e-05, 8.656900000000162e-05, 8.627800000000213e-05, 8.724999999999705e-05, 8.661100000000033e-05, 8.71250000000004e-05, 8.720899999999782e-05, 8.665199999999956e-05, 8.694399999999852e-05, 8.719399999999877e-05, 8.676399999999612e-05, 8.713899999999997e-05, 8.722200000000485e-05, 8.655499999999511e-05, 8.687500000000015e-05, 8.713899999999997e-05, 8.715299999999954e-05, 8.658400000000066e-05, 8.723600000000442e-05, 8.674999999999655e-05, 8.659800000000023e-05, 8.66799999999987e-05, 8.656900000000162e-05, 8.645799999999759e-05, 8.727800000000313e-05, 8.71250000000004e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.679" endtime="20201115 23:00:33.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.667" endtime="20201115 23:00:33.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.691" endtime="20201115 23:00:33.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.699" endtime="20201115 23:00:33.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.695" endtime="20201115 23:00:33.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.686" endtime="20201115 23:00:33.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.178" endtime="20201115 23:00:33.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.174" endtime="20201115 23:00:33.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.172" endtime="20201115 23:00:33.725"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.731" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.752" endtime="20201115 23:00:33.775"></status>
</kw>
<msg timestamp="20201115 23:00:33.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.749" endtime="20201115 23:00:33.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.778" endtime="20201115 23:00:33.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.784" endtime="20201115 23:00:33.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.742" endtime="20201115 23:00:33.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.736" endtime="20201115 23:00:33.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.808" endtime="20201115 23:00:34.145"></status>
</kw>
<msg timestamp="20201115 23:00:34.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047010431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047097778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.804" endtime="20201115 23:00:34.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047010431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047097778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.155" endtime="20201115 23:00:34.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.174" endtime="20201115 23:00:34.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.797" endtime="20201115 23:00:34.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.792" endtime="20201115 23:00:34.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.191" level="INFO">${RESULT} = [{'time': 0.047097778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.73470000000015e-05, 'source_diff': 8.73470000000015e-05}, {'time': 0.047202764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:34.182" endtime="20201115 23:00:34.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.224" level="INFO">${ACCURACY} = {'diff': [8.73470000000015e-05, 8.786100000000158e-05, 8.773600000000492e-05, 8.734800000000098e-05, 8.737500000000065e-05, 8.825000000000499e-05, 8.765200000000056e-05, 8.809700000000226e-05, 8.76529...</msg>
<status status="PASS" starttime="20201115 23:00:34.193" endtime="20201115 23:00:34.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.235" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.233" endtime="20201115 23:00:34.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.240" level="INFO">VALUE: [8.73470000000015e-05, 8.786100000000158e-05, 8.773600000000492e-05, 8.734800000000098e-05, 8.737500000000065e-05, 8.825000000000499e-05, 8.765200000000056e-05, 8.809700000000226e-05, 8.76529999999931e-05, 8.787500000000115e-05, 8.772199999999841e-05, 8.731899999999543e-05, 8.790300000000029e-05, 8.784699999999507e-05, 8.787500000000115e-05, 8.787500000000115e-05, 8.790300000000029e-05, 8.81800000000002e-05, 8.788900000000072e-05, 8.773599999999798e-05, 8.748600000000467e-05, 8.742999999999945e-05, 8.765300000000004e-05, 8.802799999999694e-05, 8.790300000000029e-05, 8.819499999999925e-05, 8.759800000000123e-05, 8.74999999999973e-05, 8.763900000000047e-05, 8.797199999999866e-05, 8.804099999999704e-05, 8.744399999999902e-05, 8.763900000000047e-05, 8.76669999999996e-05, 8.775000000000449e-05, 8.802799999999694e-05, 8.738900000000022e-05, 8.776400000000406e-05, 8.729199999999576e-05, 8.763900000000047e-05, 8.736100000000108e-05, 8.812499999999446e-05, 8.745799999999859e-05, 8.827800000000413e-05, 8.798599999999823e-05, 8.812499999999446e-05, 8.793099999999943e-05, 8.736100000000108e-05, 8.823600000000542e-05, 8.72920000000027e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.237" endtime="20201115 23:00:34.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.226" endtime="20201115 23:00:34.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.249" endtime="20201115 23:00:34.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.258" endtime="20201115 23:00:34.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.253" endtime="20201115 23:00:34.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.245" endtime="20201115 23:00:34.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.732" endtime="20201115 23:00:34.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.728" endtime="20201115 23:00:34.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.726" endtime="20201115 23:00:34.284"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.289" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.311" endtime="20201115 23:00:34.333"></status>
</kw>
<msg timestamp="20201115 23:00:34.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.308" endtime="20201115 23:00:34.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.336" endtime="20201115 23:00:34.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.344" endtime="20201115 23:00:34.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.300" endtime="20201115 23:00:34.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.295" endtime="20201115 23:00:34.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.367" endtime="20201115 23:00:34.703"></status>
</kw>
<msg timestamp="20201115 23:00:34.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046733222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046821847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.364" endtime="20201115 23:00:34.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046733222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046821847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.713" endtime="20201115 23:00:34.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.731" endtime="20201115 23:00:34.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.356" endtime="20201115 23:00:34.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.352" endtime="20201115 23:00:34.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.751" level="INFO">${RESULT} = [{'time': 0.046821847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.86250000000019e-05, 'source_diff': 8.86250000000019e-05}, {'time': 0.046924875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:34.742" endtime="20201115 23:00:34.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.781" level="INFO">${ACCURACY} = {'diff': [8.86250000000019e-05, 8.880599999999683e-05, 8.893000000000095e-05, 8.863900000000147e-05, 8.858400000000266e-05, 8.84999999999983e-05, 8.902799999999794e-05, 8.886100000000258e-05, 8.850000...</msg>
<status status="PASS" starttime="20201115 23:00:34.753" endtime="20201115 23:00:34.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.792" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.789" endtime="20201115 23:00:34.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.797" level="INFO">VALUE: [8.86250000000019e-05, 8.880599999999683e-05, 8.893000000000095e-05, 8.863900000000147e-05, 8.858400000000266e-05, 8.84999999999983e-05, 8.902799999999794e-05, 8.886100000000258e-05, 8.850000000000524e-05, 8.90129999999989e-05, 8.861100000000233e-05, 8.859700000000276e-05, 8.867999999999376e-05, 8.908300000000369e-05, 8.855599999999658e-05, 8.920800000000034e-05, 8.8945e-05, 8.905599999999708e-05, 8.906999999999665e-05, 8.854099999999754e-05, 8.838900000000122e-05, 8.902700000000541e-05, 8.870799999999984e-05, 8.925000000000599e-05, 8.91670000000011e-05, 8.886100000000258e-05, 8.86800000000007e-05, 8.83199999999959e-05, 8.897199999999966e-05, 8.882000000000334e-05, 8.902699999999847e-05, 8.927799999999819e-05, 8.879099999999779e-05, 8.923599999999948e-05, 8.859700000000276e-05, 8.841700000000036e-05, 8.920800000000034e-05, 8.848599999999873e-05, 8.915300000000154e-05, 8.91250000000024e-05, 8.919400000000077e-05, 8.861100000000233e-05, 8.893000000000095e-05, 8.874999999999855e-05, 8.91250000000024e-05, 8.89999999999988e-05, 8.845799999999959e-05, 8.901399999999837e-05, 8.848599999999873e-05, 8.837500000000165e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.794" endtime="20201115 23:00:34.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.782" endtime="20201115 23:00:34.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.806" endtime="20201115 23:00:34.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.814" endtime="20201115 23:00:34.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.810" endtime="20201115 23:00:34.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.801" endtime="20201115 23:00:34.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.291" endtime="20201115 23:00:34.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.287" endtime="20201115 23:00:34.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.285" endtime="20201115 23:00:34.841"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.846" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.868" endtime="20201115 23:00:34.890"></status>
</kw>
<msg timestamp="20201115 23:00:34.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.865" endtime="20201115 23:00:34.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.894" endtime="20201115 23:00:34.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.900" endtime="20201115 23:00:34.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.857" endtime="20201115 23:00:34.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.851" endtime="20201115 23:00:34.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.923" endtime="20201115 23:00:35.259"></status>
</kw>
<msg timestamp="20201115 23:00:35.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047445944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047535736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.920" endtime="20201115 23:00:35.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047445944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047535736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.268" endtime="20201115 23:00:35.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.287" endtime="20201115 23:00:35.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.913" endtime="20201115 23:00:35.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.908" endtime="20201115 23:00:35.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.305" level="INFO">${RESULT} = [{'time': 0.047535736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.97920000000052e-05, 'source_diff': 8.97920000000052e-05}, {'time': 0.047643736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:35.296" endtime="20201115 23:00:35.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.335" level="INFO">${ACCURACY} = {'diff': [8.97920000000052e-05, 9.002799999999894e-05, 9.018099999999474e-05, 8.958299999999725e-05, 9.004199999999851e-05, 8.934699999999657e-05, 8.94450000000005e-05, 8.924999999999905e-05, 8.970800...</msg>
<status status="PASS" starttime="20201115 23:00:35.307" endtime="20201115 23:00:35.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.346" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.344" endtime="20201115 23:00:35.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.351" level="INFO">VALUE: [8.97920000000052e-05, 9.002799999999894e-05, 9.018099999999474e-05, 8.958299999999725e-05, 9.004199999999851e-05, 8.934699999999657e-05, 8.94450000000005e-05, 8.924999999999905e-05, 8.970800000000084e-05, 8.998600000000023e-05, 9.01670000000021e-05, 8.962499999999596e-05, 9.009699999999732e-05, 9.005599999999808e-05, 9.001399999999937e-05, 8.998600000000023e-05, 8.998600000000023e-05, 8.929199999999776e-05, 8.941700000000136e-05, 8.979199999999826e-05, 9.027799999999919e-05, 8.937500000000265e-05, 8.986100000000358e-05, 8.952799999999844e-05, 8.936100000000308e-05, 8.988900000000272e-05, 8.927799999999819e-05, 8.94999999999993e-05, 8.951399999999887e-05, 8.951399999999887e-05, 8.947200000000016e-05, 9.004099999999904e-05, 8.967999999999476e-05, 9.009700000000426e-05, 8.941699999999442e-05, 8.977799999999869e-05, 8.99859999999933e-05, 8.991699999999492e-05, 9.002799999999894e-05, 8.963900000000247e-05, 9.02079999999944e-05, 8.970800000000084e-05, 8.99999999999998e-05, 8.997199999999372e-05, 8.976399999999912e-05, 9.016699999999517e-05, 8.938900000000222e-05, 8.997200000000066e-05, 8.952800000000538e-05, 8.947299999999964e-05]</msg>
<status status="PASS" starttime="20201115 23:00:35.348" endtime="20201115 23:00:35.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.337" endtime="20201115 23:00:35.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.360" endtime="20201115 23:00:35.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.369" endtime="20201115 23:00:35.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.364" endtime="20201115 23:00:35.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.356" endtime="20201115 23:00:35.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.847" endtime="20201115 23:00:35.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.843" endtime="20201115 23:00:35.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.841" endtime="20201115 23:00:35.396"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.401" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.423" endtime="20201115 23:00:35.444"></status>
</kw>
<msg timestamp="20201115 23:00:35.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.419" endtime="20201115 23:00:35.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.448" endtime="20201115 23:00:35.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.454" endtime="20201115 23:00:35.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.412" endtime="20201115 23:00:35.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.406" endtime="20201115 23:00:35.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.478" endtime="20201115 23:00:35.782"></status>
</kw>
<msg timestamp="20201115 23:00:35.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047373556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047464431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.474" endtime="20201115 23:00:35.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047373556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047464431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.787" endtime="20201115 23:00:35.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.795" endtime="20201115 23:00:35.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.467" endtime="20201115 23:00:35.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.462" endtime="20201115 23:00:35.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.804" level="INFO">${RESULT} = [{'time': 0.047464431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.087500000000415e-05, 'source_diff': 9.087500000000415e-05}, {'time': 0.047570444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:35.800" endtime="20201115 23:00:35.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.817" level="INFO">${ACCURACY} = {'diff': [9.087500000000415e-05, 9.095800000000209e-05, 9.102700000000047e-05, 9.074999999999361e-05, 9.092999999999601e-05, 9.11529999999966e-05, 9.097300000000114e-05, 9.105600000000602e-05, 9.08339...</msg>
<status status="PASS" starttime="20201115 23:00:35.805" endtime="20201115 23:00:35.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.823" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.822" endtime="20201115 23:00:35.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.825" level="INFO">VALUE: [9.087500000000415e-05, 9.095800000000209e-05, 9.102700000000047e-05, 9.074999999999361e-05, 9.092999999999601e-05, 9.11529999999966e-05, 9.097300000000114e-05, 9.105600000000602e-05, 9.083399999999797e-05, 9.072200000000141e-05, 9.065300000000304e-05, 9.101400000000037e-05, 9.03879999999968e-05, 9.076300000000065e-05, 9.027699999999972e-05, 9.04859999999938e-05, 9.037499999999671e-05, 9.036100000000408e-05, 9.080600000000577e-05, 9.11250000000044e-05, 9.026399999999962e-05, 9.109799999999779e-05, 9.113900000000397e-05, 9.090299999999635e-05, 9.061099999999739e-05, 9.034699999999757e-05, 9.076400000000012e-05, 9.111099999999789e-05, 9.075000000000055e-05, 9.02920000000057e-05, 9.043100000000193e-05, 9.123600000000148e-05, 9.062499999999696e-05, 9.031899999999843e-05, 9.113800000000449e-05, 9.054099999999954e-05, 9.120800000000234e-05, 9.026399999999962e-05, 9.062499999999696e-05, 9.055599999999858e-05, 9.037500000000365e-05, 9.040299999999585e-05, 9.044400000000202e-05, 9.077799999999969e-05, 9.056899999999868e-05, 9.081899999999893e-05, 9.063899999999653e-05, 9.027699999999972e-05, 9.034699999999757e-05, 9.088899999999678e-05]</msg>
<status status="PASS" starttime="20201115 23:00:35.824" endtime="20201115 23:00:35.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.818" endtime="20201115 23:00:35.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.830" endtime="20201115 23:00:35.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.834" endtime="20201115 23:00:35.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.832" endtime="20201115 23:00:35.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.828" endtime="20201115 23:00:35.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.402" endtime="20201115 23:00:35.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.398" endtime="20201115 23:00:35.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.397" endtime="20201115 23:00:35.856"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.858" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.868" endtime="20201115 23:00:35.888"></status>
</kw>
<msg timestamp="20201115 23:00:35.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.867" endtime="20201115 23:00:35.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.889" endtime="20201115 23:00:35.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.892" endtime="20201115 23:00:35.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.864" endtime="20201115 23:00:35.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.861" endtime="20201115 23:00:35.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.903" endtime="20201115 23:00:36.206"></status>
</kw>
<msg timestamp="20201115 23:00:36.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02730675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027398264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:35.902" endtime="20201115 23:00:36.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02730675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027398264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:36.216" endtime="20201115 23:00:36.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.235" endtime="20201115 23:00:36.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.898" endtime="20201115 23:00:36.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.896" endtime="20201115 23:00:36.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.252" level="INFO">${RESULT} = [{'time': 0.027398264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.15139999999974e-05, 'source_diff': 9.15139999999974e-05}, {'time': 0.027510292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:36.243" endtime="20201115 23:00:36.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.285" level="INFO">${ACCURACY} = {'diff': [9.15139999999974e-05, 9.218100000000021e-05, 9.126400000000062e-05, 9.154100000000054e-05, 9.170799999999937e-05, 9.21940000000003e-05, 9.15000000000013e-05, 9.154200000000001e-05, 9.1542000...</msg>
<status status="PASS" starttime="20201115 23:00:36.254" endtime="20201115 23:00:36.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.296" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.294" endtime="20201115 23:00:36.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.302" level="INFO">VALUE: [9.15139999999974e-05, 9.218100000000021e-05, 9.126400000000062e-05, 9.154100000000054e-05, 9.170799999999937e-05, 9.21940000000003e-05, 9.15000000000013e-05, 9.154200000000001e-05, 9.154200000000001e-05, 9.179200000000026e-05, 9.166700000000014e-05, 9.176399999999765e-05, 9.159700000000229e-05, 9.173599999999851e-05, 9.191600000000091e-05, 9.173600000000198e-05, 9.223599999999901e-05, 9.199999999999833e-05, 9.159699999999882e-05, 9.187499999999821e-05, 9.183300000000297e-05, 9.18199999999994e-05, 9.173600000000198e-05, 9.1639000000001e-05, 9.197299999999867e-05, 9.184799999999854e-05, 9.166600000000066e-05, 9.193000000000048e-05, 9.134699999999857e-05, 9.211100000000236e-05, 9.130499999999986e-05, 9.191700000000039e-05, 9.158299999999925e-05, 9.194400000000005e-05, 9.193000000000048e-05, 9.225000000000205e-05, 9.134699999999857e-05, 9.224999999999858e-05, 9.136099999999814e-05, 9.205500000000061e-05, 9.226400000000162e-05, 9.14450000000025e-05, 9.220800000000334e-05, 9.212499999999846e-05, 9.162499999999796e-05, 9.134799999999804e-05, 9.154200000000001e-05, 9.156899999999968e-05, 9.136099999999814e-05, 9.187499999999821e-05]</msg>
<status status="PASS" starttime="20201115 23:00:36.298" endtime="20201115 23:00:36.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.287" endtime="20201115 23:00:36.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.311" endtime="20201115 23:00:36.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.319" endtime="20201115 23:00:36.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.315" endtime="20201115 23:00:36.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.306" endtime="20201115 23:00:36.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.859" endtime="20201115 23:00:36.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.857" endtime="20201115 23:00:36.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.856" endtime="20201115 23:00:36.346"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.351" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.373" endtime="20201115 23:00:36.396"></status>
</kw>
<msg timestamp="20201115 23:00:36.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.369" endtime="20201115 23:00:36.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.399" endtime="20201115 23:00:36.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.406" endtime="20201115 23:00:36.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.362" endtime="20201115 23:00:36.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.356" endtime="20201115 23:00:36.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.429" endtime="20201115 23:00:36.764"></status>
</kw>
<msg timestamp="20201115 23:00:36.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047204917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047297764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.426" endtime="20201115 23:00:36.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047204917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047297764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.774" endtime="20201115 23:00:36.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.792" endtime="20201115 23:00:36.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.418" endtime="20201115 23:00:36.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.414" endtime="20201115 23:00:36.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.812" level="INFO">${RESULT} = [{'time': 0.047297764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.284700000000007e-05, 'source_diff': 9.284700000000007e-05}, {'time': 0.047409778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:36.803" endtime="20201115 23:00:36.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.842" level="INFO">${ACCURACY} = {'diff': [9.284700000000007e-05, 9.268099999999724e-05, 9.2333e-05, 9.234699999999957e-05, 9.259799999999929e-05, 9.270900000000332e-05, 9.267999999999776e-05, 9.308299999999381e-05, 9.31529999999986e...</msg>
<status status="PASS" starttime="20201115 23:00:36.814" endtime="20201115 23:00:36.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.853" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.851" endtime="20201115 23:00:36.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.859" level="INFO">VALUE: [9.284700000000007e-05, 9.268099999999724e-05, 9.2333e-05, 9.234699999999957e-05, 9.259799999999929e-05, 9.270900000000332e-05, 9.267999999999776e-05, 9.308299999999381e-05, 9.31529999999986e-05, 9.262499999999896e-05, 9.319400000000477e-05, 9.252800000000144e-05, 9.263899999999853e-05, 9.319500000000425e-05, 9.290199999999887e-05, 9.294400000000452e-05, 9.269400000000427e-05, 9.236099999999914e-05, 9.31659999999987e-05, 9.31659999999987e-05, 9.309799999999979e-05, 9.26529999999981e-05, 9.320800000000434e-05, 9.326400000000262e-05, 9.249999999999536e-05, 9.277800000000169e-05, 9.270800000000384e-05, 9.252699999999503e-05, 9.284700000000007e-05, 9.308300000000075e-05, 9.231900000000043e-05, 9.28330000000005e-05, 9.304200000000151e-05, 9.236099999999914e-05, 9.30000000000028e-05, 9.257000000000015e-05, 9.23199999999999e-05, 9.259699999999982e-05, 9.291599999999844e-05, 9.290199999999887e-05, 9.258300000000025e-05, 9.238899999999828e-05, 9.313900000000597e-05, 9.316699999999817e-05, 9.245900000000307e-05, 9.258399999999972e-05, 9.274999999999561e-05, 9.290300000000529e-05, 9.273600000000298e-05, 9.255499999999417e-05]</msg>
<status status="PASS" starttime="20201115 23:00:36.856" endtime="20201115 23:00:36.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.844" endtime="20201115 23:00:36.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.868" endtime="20201115 23:00:36.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.876" endtime="20201115 23:00:36.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.872" endtime="20201115 23:00:36.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.863" endtime="20201115 23:00:36.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.352" endtime="20201115 23:00:36.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.348" endtime="20201115 23:00:36.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.347" endtime="20201115 23:00:36.903"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.908" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.929" endtime="20201115 23:00:36.952"></status>
</kw>
<msg timestamp="20201115 23:00:36.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.926" endtime="20201115 23:00:36.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.955" endtime="20201115 23:00:36.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.961" endtime="20201115 23:00:36.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.919" endtime="20201115 23:00:36.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.913" endtime="20201115 23:00:36.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.985" endtime="20201115 23:00:37.321"></status>
</kw>
<msg timestamp="20201115 23:00:37.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047126389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047220153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.982" endtime="20201115 23:00:37.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047126389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047220153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.331" endtime="20201115 23:00:37.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.356" endtime="20201115 23:00:37.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.974" endtime="20201115 23:00:37.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.970" endtime="20201115 23:00:37.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.374" level="INFO">${RESULT} = [{'time': 0.047220153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.376400000000312e-05, 'source_diff': 9.376400000000312e-05}, {'time': 0.047330153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:37.365" endtime="20201115 23:00:37.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.404" level="INFO">${ACCURACY} = {'diff': [9.376400000000312e-05, 9.411100000000089e-05, 9.358400000000072e-05, 9.361100000000039e-05, 9.369499999999781e-05, 9.358300000000125e-05, 9.362499999999996e-05, 9.344399999999808e-05, 9.3957...</msg>
<status status="PASS" starttime="20201115 23:00:37.376" endtime="20201115 23:00:37.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.415" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.413" endtime="20201115 23:00:37.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.421" level="INFO">VALUE: [9.376400000000312e-05, 9.411100000000089e-05, 9.358400000000072e-05, 9.361100000000039e-05, 9.369499999999781e-05, 9.358300000000125e-05, 9.362499999999996e-05, 9.344399999999808e-05, 9.395799999999815e-05, 9.337499999999971e-05, 9.41529999999996e-05, 9.42079999999984e-05, 9.387500000000021e-05, 9.383299999999456e-05, 9.416699999999917e-05, 9.409700000000132e-05, 9.356899999999474e-05, 9.415200000000012e-05, 9.363899999999953e-05, 9.412500000000046e-05, 9.354200000000201e-05, 9.322199999999697e-05, 9.418100000000568e-05, 9.391699999999892e-05, 9.416699999999917e-05, 9.369500000000475e-05, 9.337499999999971e-05, 9.377699999999628e-05, 9.379099999999585e-05, 9.424999999999711e-05, 9.363899999999953e-05, 9.355600000000158e-05, 9.352800000000244e-05, 9.347199999999722e-05, 9.338899999999928e-05, 9.326400000000262e-05, 9.395799999999815e-05, 9.36659999999992e-05, 9.387500000000021e-05, 9.35279999999955e-05, 9.36659999999992e-05, 9.377799999999575e-05, 9.420899999999788e-05, 9.423599999999754e-05, 9.401400000000337e-05, 9.363899999999953e-05, 9.398600000000423e-05, 9.35409999999956e-05, 9.35409999999956e-05, 9.40000000000038e-05]</msg>
<status status="PASS" starttime="20201115 23:00:37.418" endtime="20201115 23:00:37.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.406" endtime="20201115 23:00:37.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.430" endtime="20201115 23:00:37.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.438" endtime="20201115 23:00:37.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.434" endtime="20201115 23:00:37.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.425" endtime="20201115 23:00:37.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.909" endtime="20201115 23:00:37.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.905" endtime="20201115 23:00:37.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.903" endtime="20201115 23:00:37.464"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.470" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.491" endtime="20201115 23:00:37.514"></status>
</kw>
<msg timestamp="20201115 23:00:37.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.488" endtime="20201115 23:00:37.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.517" endtime="20201115 23:00:37.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.524" endtime="20201115 23:00:37.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.481" endtime="20201115 23:00:37.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.475" endtime="20201115 23:00:37.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.548" endtime="20201115 23:00:37.882"></status>
</kw>
<msg timestamp="20201115 23:00:37.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046809403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046903694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.544" endtime="20201115 23:00:37.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046809403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046903694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.892" endtime="20201115 23:00:37.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.910" endtime="20201115 23:00:37.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.537" endtime="20201115 23:00:37.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.532" endtime="20201115 23:00:37.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.929" level="INFO">${RESULT} = [{'time': 0.046903694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.429100000000329e-05, 'source_diff': 9.429100000000329e-05}, {'time': 0.047009694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:37.920" endtime="20201115 23:00:37.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.959" level="INFO">${ACCURACY} = {'diff': [9.429100000000329e-05, 9.511099999999495e-05, 9.48330000000025e-05, 9.525000000000505e-05, 9.473599999999804e-05, 9.516700000000017e-05, 9.513900000000103e-05, 9.47079999999989e-05, 9.465300...</msg>
<status status="PASS" starttime="20201115 23:00:37.931" endtime="20201115 23:00:37.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.970" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.968" endtime="20201115 23:00:37.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.976" level="INFO">VALUE: [9.429100000000329e-05, 9.511099999999495e-05, 9.48330000000025e-05, 9.525000000000505e-05, 9.473599999999804e-05, 9.516700000000017e-05, 9.513900000000103e-05, 9.47079999999989e-05, 9.46530000000001e-05, 9.511099999999495e-05, 9.511200000000136e-05, 9.448600000000473e-05, 9.508300000000275e-05, 9.5027999999997e-05, 9.494399999999958e-05, 9.468100000000618e-05, 9.51530000000006e-05, 9.484699999999513e-05, 9.469499999999881e-05, 9.4333000000002e-05, 9.527699999999778e-05, 9.463900000000053e-05, 9.51660000000007e-05, 9.477800000000369e-05, 9.490300000000035e-05, 9.523599999999854e-05, 9.438900000000028e-05, 9.466699999999967e-05, 9.490200000000087e-05, 9.455500000000311e-05, 9.440299999999985e-05, 9.493099999999949e-05, 9.512500000000146e-05, 9.458300000000225e-05, 9.458300000000225e-05, 9.430500000000286e-05, 9.511100000000189e-05, 9.507000000000265e-05, 9.462499999999402e-05, 9.459699999999488e-05, 9.454199999999607e-05, 9.4945000000006e-05, 9.527799999999725e-05, 9.493000000000001e-05, 9.469399999999933e-05, 9.501399999999743e-05, 9.509700000000232e-05, 9.469400000000627e-05, 9.455599999999564e-05, 9.48200000000024e-05]</msg>
<status status="PASS" starttime="20201115 23:00:37.973" endtime="20201115 23:00:37.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.961" endtime="20201115 23:00:37.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.985" endtime="20201115 23:00:37.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.993" endtime="20201115 23:00:38.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.988" endtime="20201115 23:00:38.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.980" endtime="20201115 23:00:38.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.471" endtime="20201115 23:00:38.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.467" endtime="20201115 23:00:38.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.465" endtime="20201115 23:00:38.019"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.025" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.046" endtime="20201115 23:00:38.069"></status>
</kw>
<msg timestamp="20201115 23:00:38.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.043" endtime="20201115 23:00:38.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.072" endtime="20201115 23:00:38.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.079" endtime="20201115 23:00:38.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.036" endtime="20201115 23:00:38.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.030" endtime="20201115 23:00:38.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.104" endtime="20201115 23:00:38.441"></status>
</kw>
<msg timestamp="20201115 23:00:38.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046734333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046829611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.101" endtime="20201115 23:00:38.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046734333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046829611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.450" endtime="20201115 23:00:38.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.469" endtime="20201115 23:00:38.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.093" endtime="20201115 23:00:38.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.088" endtime="20201115 23:00:38.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.486" level="INFO">${RESULT} = [{'time': 0.046829611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.527799999999725e-05, 'source_diff': 9.527799999999725e-05}, {'time': 0.046934611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:38.477" endtime="20201115 23:00:38.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.519" level="INFO">${ACCURACY} = {'diff': [9.527799999999725e-05, 9.593000000000101e-05, 9.601399999999843e-05, 9.537500000000171e-05, 9.568000000000076e-05, 9.547199999999922e-05, 9.612500000000246e-05, 9.57079999999999e-05, 9.62080...</msg>
<status status="PASS" starttime="20201115 23:00:38.488" endtime="20201115 23:00:38.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.531" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.528" endtime="20201115 23:00:38.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.536" level="INFO">VALUE: [9.527799999999725e-05, 9.593000000000101e-05, 9.601399999999843e-05, 9.537500000000171e-05, 9.568000000000076e-05, 9.547199999999922e-05, 9.612500000000246e-05, 9.57079999999999e-05, 9.62080000000004e-05, 9.599999999999886e-05, 9.561099999999545e-05, 9.605499999999767e-05, 9.616700000000117e-05, 9.608299999999681e-05, 9.529199999999682e-05, 9.594500000000006e-05, 9.548699999999827e-05, 9.563800000000205e-05, 9.58200000000034e-05, 9.573599999999904e-05, 9.551399999999793e-05, 9.619400000000083e-05, 9.554200000000401e-05, 9.56530000000011e-05, 9.554200000000401e-05, 9.581999999999646e-05, 9.609700000000332e-05, 9.615199999999519e-05, 9.581900000000393e-05, 9.526299999999821e-05, 9.552699999999803e-05, 9.606899999999724e-05, 9.563899999999459e-05, 9.568100000000024e-05, 9.529199999999682e-05, 9.526399999999768e-05, 9.605600000000408e-05, 9.529099999999735e-05, 9.599999999999886e-05, 9.579099999999785e-05, 9.58609999999957e-05, 9.619500000000031e-05, 9.62080000000004e-05, 9.626399999999868e-05, 9.618100000000074e-05, 9.561099999999545e-05, 9.587500000000221e-05, 9.616700000000117e-05, 9.576399999999818e-05, 9.552699999999803e-05]</msg>
<status status="PASS" starttime="20201115 23:00:38.533" endtime="20201115 23:00:38.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.521" endtime="20201115 23:00:38.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.545" endtime="20201115 23:00:38.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.554" endtime="20201115 23:00:38.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.549" endtime="20201115 23:00:38.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.541" endtime="20201115 23:00:38.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.026" endtime="20201115 23:00:38.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.022" endtime="20201115 23:00:38.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.020" endtime="20201115 23:00:38.581"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.586" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.609" endtime="20201115 23:00:38.631"></status>
</kw>
<msg timestamp="20201115 23:00:38.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.605" endtime="20201115 23:00:38.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.635" endtime="20201115 23:00:38.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.641" endtime="20201115 23:00:38.645"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.597" endtime="20201115 23:00:38.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.592" endtime="20201115 23:00:38.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.664" endtime="20201115 23:00:39.002"></status>
</kw>
<msg timestamp="20201115 23:00:39.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048261736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048358806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.661" endtime="20201115 23:00:39.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048261736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048358806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.011" endtime="20201115 23:00:39.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.030" endtime="20201115 23:00:39.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.654" endtime="20201115 23:00:39.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.649" endtime="20201115 23:00:39.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.049" level="INFO">${RESULT} = [{'time': 0.048358806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.706999999999771e-05, 'source_diff': 9.706999999999771e-05}, {'time': 0.048468819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:39.040" endtime="20201115 23:00:39.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.079" level="INFO">${ACCURACY} = {'diff': [9.706999999999771e-05, 9.725000000000011e-05, 9.665199999999569e-05, 9.640300000000185e-05, 9.699999999999986e-05, 9.694400000000158e-05, 9.687500000000321e-05, 9.720799999999447e-05, 9.6916...</msg>
<status status="PASS" starttime="20201115 23:00:39.052" endtime="20201115 23:00:39.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.090" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.088" endtime="20201115 23:00:39.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.096" level="INFO">VALUE: [9.706999999999771e-05, 9.725000000000011e-05, 9.665199999999569e-05, 9.640300000000185e-05, 9.699999999999986e-05, 9.694400000000158e-05, 9.687500000000321e-05, 9.720799999999447e-05, 9.691600000000244e-05, 9.669500000000081e-05, 9.699999999999986e-05, 9.677799999999875e-05, 9.715200000000312e-05, 9.637500000000271e-05, 9.633299999999706e-05, 9.679199999999832e-05, 9.630600000000433e-05, 9.708300000000475e-05, 9.654199999999807e-05, 9.698699999999977e-05, 9.656999999999721e-05, 9.681999999999746e-05, 9.659700000000382e-05, 9.71660000000027e-05, 9.652800000000544e-05, 9.694400000000158e-05, 9.690300000000235e-05, 9.68330000000045e-05, 9.697200000000072e-05, 9.69730000000002e-05, 9.726399999999968e-05, 9.69860000000003e-05, 9.661099999999645e-05, 9.704199999999857e-05, 9.640300000000185e-05, 9.718000000000226e-05, 9.711100000000389e-05, 9.680600000000483e-05, 9.633299999999706e-05, 9.723600000000054e-05, 9.629199999999782e-05, 9.69870000000067e-05, 9.72080000000014e-05, 9.644400000000108e-05, 9.718000000000226e-05, 9.662500000000296e-05, 9.677799999999875e-05, 9.663900000000253e-05, 9.698699999999977e-05, 9.679200000000526e-05]</msg>
<status status="PASS" starttime="20201115 23:00:39.093" endtime="20201115 23:00:39.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.081" endtime="20201115 23:00:39.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.105" endtime="20201115 23:00:39.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.113" endtime="20201115 23:00:39.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.108" endtime="20201115 23:00:39.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.100" endtime="20201115 23:00:39.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.587" endtime="20201115 23:00:39.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.583" endtime="20201115 23:00:39.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.582" endtime="20201115 23:00:39.141"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.146" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.169" endtime="20201115 23:00:39.191"></status>
</kw>
<msg timestamp="20201115 23:00:39.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.165" endtime="20201115 23:00:39.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.195" endtime="20201115 23:00:39.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.201" endtime="20201115 23:00:39.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.158" endtime="20201115 23:00:39.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.152" endtime="20201115 23:00:39.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.225" endtime="20201115 23:00:39.530"></status>
</kw>
<msg timestamp="20201115 23:00:39.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048904472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049002222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.221" endtime="20201115 23:00:39.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048904472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049002222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.534" endtime="20201115 23:00:39.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.543" endtime="20201115 23:00:39.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.214" endtime="20201115 23:00:39.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.209" endtime="20201115 23:00:39.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.551" level="INFO">${RESULT} = [{'time': 0.049002222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.775000000000061e-05, 'source_diff': 9.775000000000061e-05}, {'time': 0.049114236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:39.547" endtime="20201115 23:00:39.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.575" level="INFO">${ACCURACY} = {'diff': [9.775000000000061e-05, 9.775000000000061e-05, 9.736100000000414e-05, 9.809699999999838e-05, 9.768100000000224e-05, 9.800000000000086e-05, 9.819500000000231e-05, 9.813899999999709e-05, 9.7500...</msg>
<status status="PASS" starttime="20201115 23:00:39.552" endtime="20201115 23:00:39.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.586" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.584" endtime="20201115 23:00:39.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.592" level="INFO">VALUE: [9.775000000000061e-05, 9.775000000000061e-05, 9.736100000000414e-05, 9.809699999999838e-05, 9.768100000000224e-05, 9.800000000000086e-05, 9.819500000000231e-05, 9.813899999999709e-05, 9.750000000000036e-05, 9.806899999999924e-05, 9.826400000000068e-05, 9.73609999999972e-05, 9.8028e-05, 9.790300000000335e-05, 9.754199999999907e-05, 9.777799999999975e-05, 9.758399999999778e-05, 9.738799999999687e-05, 9.813900000000403e-05, 9.775000000000061e-05, 9.819400000000283e-05, 9.822199999999504e-05, 9.816700000000317e-05, 9.784699999999813e-05, 9.747200000000122e-05, 9.8028e-05, 9.78059999999989e-05, 9.755499999999917e-05, 9.738799999999687e-05, 9.758299999999831e-05, 9.822200000000197e-05, 9.822200000000197e-05, 9.755599999999864e-05, 9.75279999999995e-05, 9.795900000000163e-05, 9.819500000000231e-05, 9.816699999999623e-05, 9.812499999999752e-05, 9.762499999999702e-05, 9.81530000000036e-05, 9.754199999999907e-05, 9.793000000000301e-05, 9.817999999999633e-05, 9.762499999999702e-05, 9.809699999999838e-05, 9.819499999999537e-05, 9.816699999999623e-05, 9.812499999999752e-05, 9.800000000000086e-05, 9.813899999999709e-05]</msg>
<status status="PASS" starttime="20201115 23:00:39.588" endtime="20201115 23:00:39.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.577" endtime="20201115 23:00:39.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.601" endtime="20201115 23:00:39.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.610" endtime="20201115 23:00:39.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.605" endtime="20201115 23:00:39.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.597" endtime="20201115 23:00:39.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.148" endtime="20201115 23:00:39.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.144" endtime="20201115 23:00:39.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.142" endtime="20201115 23:00:39.636"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.641" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.663" endtime="20201115 23:00:39.686"></status>
</kw>
<msg timestamp="20201115 23:00:39.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.660" endtime="20201115 23:00:39.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.690" endtime="20201115 23:00:39.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.696" endtime="20201115 23:00:39.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.653" endtime="20201115 23:00:39.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.647" endtime="20201115 23:00:39.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.719" endtime="20201115 23:00:40.055"></status>
</kw>
<msg timestamp="20201115 23:00:40.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047283111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047382208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.716" endtime="20201115 23:00:40.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047283111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047382208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.065" endtime="20201115 23:00:40.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.084" endtime="20201115 23:00:40.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.709" endtime="20201115 23:00:40.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.704" endtime="20201115 23:00:40.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.103" level="INFO">${RESULT} = [{'time': 0.047382208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.909699999999938e-05, 'source_diff': 9.909699999999938e-05}, {'time': 0.047494194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:40.094" endtime="20201115 23:00:40.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.133" level="INFO">${ACCURACY} = {'diff': [9.909699999999938e-05, 9.858300000000625e-05, 9.856899999999974e-05, 9.890199999999794e-05, 9.827799999999332e-05, 9.911099999999895e-05, 9.918100000000374e-05, 9.833399999999853e-05, 9.9125...</msg>
<status status="PASS" starttime="20201115 23:00:40.105" endtime="20201115 23:00:40.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.144" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.141" endtime="20201115 23:00:40.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.150" level="INFO">VALUE: [9.909699999999938e-05, 9.858300000000625e-05, 9.856899999999974e-05, 9.890199999999794e-05, 9.827799999999332e-05, 9.911099999999895e-05, 9.918100000000374e-05, 9.833399999999853e-05, 9.912500000000546e-05, 9.897299999999526e-05, 9.861099999999845e-05, 9.887499999999827e-05, 9.855500000000017e-05, 9.867999999999683e-05, 9.861099999999845e-05, 9.927800000000125e-05, 9.844400000000308e-05, 9.875000000000161e-05, 9.838899999999734e-05, 9.861199999999792e-05, 9.890299999999741e-05, 9.855599999999964e-05, 9.884699999999913e-05, 9.833299999999906e-05, 9.891699999999698e-05, 9.926399999999475e-05, 9.869400000000333e-05, 9.877800000000075e-05, 9.909699999999938e-05, 9.856999999999921e-05, 9.91809999999968e-05, 9.919500000000331e-05, 9.862499999999802e-05, 9.858299999999931e-05, 9.895800000000315e-05, 9.858300000000625e-05, 9.856899999999974e-05, 9.831899999999949e-05, 9.894499999999612e-05, 9.866700000000367e-05, 9.861100000000539e-05, 9.905600000000014e-05, 9.902699999999459e-05, 9.891600000000444e-05, 9.854200000000007e-05, 9.847200000000222e-05, 9.881899999999999e-05, 9.873600000000204e-05, 9.84860000000018e-05, 9.893099999999655e-05]</msg>
<status status="PASS" starttime="20201115 23:00:40.146" endtime="20201115 23:00:40.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.134" endtime="20201115 23:00:40.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.159" endtime="20201115 23:00:40.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.169" endtime="20201115 23:00:40.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.164" endtime="20201115 23:00:40.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.154" endtime="20201115 23:00:40.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.643" endtime="20201115 23:00:40.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.639" endtime="20201115 23:00:40.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.637" endtime="20201115 23:00:40.195"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.201" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.223" endtime="20201115 23:00:40.245"></status>
</kw>
<msg timestamp="20201115 23:00:40.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.219" endtime="20201115 23:00:40.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.249" endtime="20201115 23:00:40.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.255" endtime="20201115 23:00:40.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.212" endtime="20201115 23:00:40.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.206" endtime="20201115 23:00:40.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.279" endtime="20201115 23:00:40.615"></status>
</kw>
<msg timestamp="20201115 23:00:40.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047190361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047290292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.276" endtime="20201115 23:00:40.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047190361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047290292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.625" endtime="20201115 23:00:40.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.644" endtime="20201115 23:00:40.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.268" endtime="20201115 23:00:40.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.263" endtime="20201115 23:00:40.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.661" level="INFO">${RESULT} = [{'time': 0.047290292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.993099999999755e-05, 'source_diff': 9.993099999999755e-05}, {'time': 0.047405278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:40.652" endtime="20201115 23:00:40.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.695" level="INFO">${ACCURACY} = {'diff': [9.993099999999755e-05, 9.93060000000004e-05, 0.00010025000000000311, 0.00010012499999999952, 9.97359999999961e-05, 9.967999999999783e-05, 9.995799999999722e-05, 0.00010004200000000157, 9.934...</msg>
<status status="PASS" starttime="20201115 23:00:40.664" endtime="20201115 23:00:40.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.705" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.703" endtime="20201115 23:00:40.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.711" level="INFO">VALUE: [9.993099999999755e-05, 9.93060000000004e-05, 0.00010025000000000311, 0.00010012499999999952, 9.97359999999961e-05, 9.967999999999783e-05, 9.995799999999722e-05, 0.00010004200000000157, 9.934699999999963e-05, 0.00010008300000000081, 9.991700000000492e-05, 9.957000000000021e-05, 0.00010026299999999627, 9.958399999999978e-05, 9.956900000000074e-05, 9.988899999999884e-05, 9.955499999999423e-05, 0.00010015299999999866, 0.0001001939999999979, 9.984700000000013e-05, 0.00010008300000000081, 9.999999999999593e-05, 9.991699999999798e-05, 9.995900000000363e-05, 9.945800000000365e-05, 0.00010005600000000114, 9.959699999999988e-05, 9.9513999999995e-05, 9.938899999999834e-05, 9.98060000000009e-05, 0.00010011099999999995, 0.00010020900000000388, 9.972199999999654e-05, 9.997199999999679e-05, 9.958300000000031e-05, 0.0001001660000000057, 0.00010012499999999952, 0.00010020899999999694, 0.00010009700000000038, 9.983300000000056e-05, 9.949999999999543e-05, 0.00010007000000000071, 0.00010015299999999866, 9.972300000000295e-05, 9.931899999999355e-05, 9.997200000000372e-05, 9.96939999999974e-05, 9.965299999999816e-05, 9.927799999999432e-05, 0.0001000139999999955]</msg>
<status status="PASS" starttime="20201115 23:00:40.708" endtime="20201115 23:00:40.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.696" endtime="20201115 23:00:40.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.720" endtime="20201115 23:00:40.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.728" endtime="20201115 23:00:40.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.724" endtime="20201115 23:00:40.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.715" endtime="20201115 23:00:40.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.202" endtime="20201115 23:00:40.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.198" endtime="20201115 23:00:40.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.196" endtime="20201115 23:00:40.754"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.760" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.782" endtime="20201115 23:00:40.804"></status>
</kw>
<msg timestamp="20201115 23:00:40.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.778" endtime="20201115 23:00:40.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.807" endtime="20201115 23:00:40.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.814" endtime="20201115 23:00:40.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.771" endtime="20201115 23:00:40.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.765" endtime="20201115 23:00:40.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.837" endtime="20201115 23:00:41.173"></status>
</kw>
<msg timestamp="20201115 23:00:41.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046809569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046910153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.834" endtime="20201115 23:00:41.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046809569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046910153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.182" endtime="20201115 23:00:41.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.201" endtime="20201115 23:00:41.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.827" endtime="20201115 23:00:41.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.822" endtime="20201115 23:00:41.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.221" level="INFO">${RESULT} = [{'time': 0.046910153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010058400000000078, 'source_diff': 0.00010058400000000078}, {'time': 0.047030167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:41.212" endtime="20201115 23:00:41.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.251" level="INFO">${ACCURACY} = {'diff': [0.00010058400000000078, 0.00010079199999999539, 0.0001011809999999988, 0.00010036200000000661, 0.0001011660000000067, 0.00010058300000000131, 0.00010106900000000224, 0.00010055500000000217, ...</msg>
<status status="PASS" starttime="20201115 23:00:41.223" endtime="20201115 23:00:41.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.262" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.259" endtime="20201115 23:00:41.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.267" level="INFO">VALUE: [0.00010058400000000078, 0.00010079199999999539, 0.0001011809999999988, 0.00010036200000000661, 0.0001011660000000067, 0.00010058300000000131, 0.00010106900000000224, 0.00010055500000000217, 0.00010116699999999923, 0.00010029199999999489, 0.0001003610000000002, 0.00010120899999999794, 0.00010055500000000217, 0.00010059700000000088, 0.00010050000000000336, 0.00010113900000000009, 0.00010111100000000095, 0.00010124999999999718, 0.00010065299999999916, 0.00010106900000000224, 0.00010112500000000052, 0.00010066699999999873, 0.00010027800000000225, 0.00010037499999999977, 0.00010062500000000002, 0.00010047199999999729, 0.00010065299999999916, 0.00010106999999999478, 0.00010101400000000343, 0.00010054199999999514, 0.00010091699999999898, 0.00010056999999999428, 0.00010069500000000481, 0.00010054200000000207, 0.00010077699999999634, 0.000100415999999999, 0.0001011939999999989, 0.00010072199999999754, 0.00010088899999999984, 0.0001008060000000019, 0.00010063899999999959, 0.00010086200000000017, 0.00010101400000000343, 0.00010037499999999977, 0.00010112500000000052, 0.00010090199999999994, 0.00010106900000000224, 0.00010088800000000037, 0.00010093099999999855, 0.00010094500000000506]</msg>
<status status="PASS" starttime="20201115 23:00:41.264" endtime="20201115 23:00:41.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.253" endtime="20201115 23:00:41.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.276" endtime="20201115 23:00:41.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.284" endtime="20201115 23:00:41.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.280" endtime="20201115 23:00:41.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.271" endtime="20201115 23:00:41.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.761" endtime="20201115 23:00:41.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.757" endtime="20201115 23:00:41.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.755" endtime="20201115 23:00:41.311"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.316" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.338" endtime="20201115 23:00:41.361"></status>
</kw>
<msg timestamp="20201115 23:00:41.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.335" endtime="20201115 23:00:41.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.364" endtime="20201115 23:00:41.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.371" endtime="20201115 23:00:41.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.327" endtime="20201115 23:00:41.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.322" endtime="20201115 23:00:41.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.395" endtime="20201115 23:00:41.736"></status>
</kw>
<msg timestamp="20201115 23:00:41.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046830306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046932097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.391" endtime="20201115 23:00:41.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046830306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046932097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.745" endtime="20201115 23:00:41.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.764" endtime="20201115 23:00:41.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.384" endtime="20201115 23:00:41.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.379" endtime="20201115 23:00:41.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.781" level="INFO">${RESULT} = [{'time': 0.046932097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010179099999999691, 'source_diff': 0.00010179099999999691}, {'time': 0.047047111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:41.772" endtime="20201115 23:00:41.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.810" level="INFO">${ACCURACY} = {'diff': [0.00010179099999999691, 0.00010181900000000299, 0.00010205600000000314, 0.00010202799999999707, 0.00010166699999999973, 0.0001017359999999981, 0.00010183400000000203, 0.00010176399999999725,...</msg>
<status status="PASS" starttime="20201115 23:00:41.783" endtime="20201115 23:00:41.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.821" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.819" endtime="20201115 23:00:41.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.827" level="INFO">VALUE: [0.00010179099999999691, 0.00010181900000000299, 0.00010205600000000314, 0.00010202799999999707, 0.00010166699999999973, 0.0001017359999999981, 0.00010183400000000203, 0.00010176399999999725, 0.00010212500000000152, 0.00010165300000000016, 0.00010204099999999716, 0.00010176400000000418, 0.00010223600000000554, 0.00010161100000000145, 0.0001014860000000048, 0.0001020559999999962, 0.00010187500000000127, 0.00010206999999999578, 0.00010188800000000137, 0.00010179100000000385, 0.00010187500000000127, 0.00010208300000000281, 0.00010206900000000324, 0.00010205499999999673, 0.00010227799999999732, 0.00010190300000000041, 0.00010148699999999733, 0.00010216600000000076, 0.00010222199999999904, 0.00010181900000000299, 0.00010166600000000026, 0.00010137500000000077, 0.00010180599999999596, 0.00010206999999999578, 0.00010212500000000152, 0.00010216700000000023, 0.00010212500000000152, 0.00010206900000000324, 0.00010211100000000195, 0.00010166699999999973, 0.00010218000000000033, 0.00010166699999999973, 0.00010188900000000084, 0.0001018610000000017, 0.00010200000000000486, 0.00010190300000000041, 0.00010190300000000041, 0.0001021939999999999, 0.00010137500000000077, 0.00010172199999999854]</msg>
<status status="PASS" starttime="20201115 23:00:41.824" endtime="20201115 23:00:41.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.812" endtime="20201115 23:00:41.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.835" endtime="20201115 23:00:41.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.844" endtime="20201115 23:00:41.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.839" endtime="20201115 23:00:41.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.831" endtime="20201115 23:00:41.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.318" endtime="20201115 23:00:41.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.314" endtime="20201115 23:00:41.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.312" endtime="20201115 23:00:41.871"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.876" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.897" endtime="20201115 23:00:41.920"></status>
</kw>
<msg timestamp="20201115 23:00:41.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.894" endtime="20201115 23:00:41.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.924" endtime="20201115 23:00:41.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.931" endtime="20201115 23:00:41.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.887" endtime="20201115 23:00:41.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.881" endtime="20201115 23:00:41.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.954" endtime="20201115 23:00:42.302"></status>
</kw>
<msg timestamp="20201115 23:00:42.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047039528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047142569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.951" endtime="20201115 23:00:42.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047039528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047142569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.311" endtime="20201115 23:00:42.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.329" endtime="20201115 23:00:42.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.944" endtime="20201115 23:00:42.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.939" endtime="20201115 23:00:42.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.348" level="INFO">${RESULT} = [{'time': 0.047142569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001030410000000051, 'source_diff': 0.0001030410000000051}, {'time': 0.047262611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:42.339" endtime="20201115 23:00:42.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.377" level="INFO">${ACCURACY} = {'diff': [0.0001030410000000051, 0.00010268000000000083, 0.0001023889999999944, 0.0001030139999999985, 0.0001028060000000039, 0.00010313899999999515, 0.00010249999999999843, 0.00010266700000000073, 0....</msg>
<status status="PASS" starttime="20201115 23:00:42.350" endtime="20201115 23:00:42.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.388" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.386" endtime="20201115 23:00:42.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.394" level="INFO">VALUE: [0.0001030410000000051, 0.00010268000000000083, 0.0001023889999999944, 0.0001030139999999985, 0.0001028060000000039, 0.00010313899999999515, 0.00010249999999999843, 0.00010266700000000073, 0.00010265300000000116, 0.00010227700000000478, 0.00010279100000000485, 0.00010227699999999784, 0.0001023060000000034, 0.00010231899999999655, 0.00010259699999999594, 0.00010255600000000364, 0.00010326400000000568, 0.00010272199999999954, 0.00010241700000000048, 0.00010255499999999723, 0.00010320800000000047, 0.00010259699999999594, 0.00010299999999999893, 0.00010240300000000091, 0.00010309699999999644, 0.00010274999999999868, 0.0001027359999999991, 0.0001023339999999956, 0.00010298599999999936, 0.00010295800000000022, 0.00010312499999999558, 0.00010311100000000295, 0.00010305500000000467, 0.00010313900000000209, 0.00010319500000000037, 0.00010262500000000202, 0.00010265300000000116, 0.0001031940000000009, 0.00010319399999999396, 0.00010262500000000202, 0.00010309699999999644, 0.00010229099999999741, 0.00010247199999999929, 0.0001028480000000026, 0.00010238900000000134, 0.00010307000000000371, 0.00010280599999999696, 0.00010313899999999515, 0.0001025689999999968, 0.00010251299999999852]</msg>
<status status="PASS" starttime="20201115 23:00:42.391" endtime="20201115 23:00:42.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.379" endtime="20201115 23:00:42.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.403" endtime="20201115 23:00:42.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.411" endtime="20201115 23:00:42.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.407" endtime="20201115 23:00:42.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.398" endtime="20201115 23:00:42.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.877" endtime="20201115 23:00:42.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.873" endtime="20201115 23:00:42.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.871" endtime="20201115 23:00:42.438"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.443" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.471" endtime="20201115 23:00:42.494"></status>
</kw>
<msg timestamp="20201115 23:00:42.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.468" endtime="20201115 23:00:42.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.497" endtime="20201115 23:00:42.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.504" endtime="20201115 23:00:42.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.461" endtime="20201115 23:00:42.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.448" endtime="20201115 23:00:42.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.527" endtime="20201115 23:00:42.855"></status>
</kw>
<msg timestamp="20201115 23:00:42.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053722972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053826847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.524" endtime="20201115 23:00:42.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053722972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053826847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.859" endtime="20201115 23:00:42.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.867" endtime="20201115 23:00:42.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.517" endtime="20201115 23:00:42.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.512" endtime="20201115 23:00:42.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.875" level="INFO">${RESULT} = [{'time': 0.053826847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010387499999999633, 'source_diff': 0.00010387499999999633}, {'time': 0.053938875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:42.871" endtime="20201115 23:00:42.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.890" level="INFO">${ACCURACY} = {'diff': [0.00010387499999999633, 0.0001040559999999982, 0.0001041940000000019, 0.00010416700000000223, 0.00010370900000000044, 0.00010412499999999658, 0.00010387499999999633, 0.00010377799999999882, ...</msg>
<status status="PASS" starttime="20201115 23:00:42.876" endtime="20201115 23:00:42.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.895" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.894" endtime="20201115 23:00:42.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.898" level="INFO">VALUE: [0.00010387499999999633, 0.0001040559999999982, 0.0001041940000000019, 0.00010416700000000223, 0.00010370900000000044, 0.00010412499999999658, 0.00010387499999999633, 0.00010377799999999882, 0.000103513999999999, 0.00010395800000000122, 0.00010386099999999676, 0.00010330500000000492, 0.00010345800000000072, 0.00010343000000000158, 0.00010391700000000198, 0.00010393100000000155, 0.00010368099999999436, 0.00010394400000000165, 0.00010399999999999993, 0.00010398600000000036, 0.00010361100000000345, 0.00010377799999999882, 0.00010347200000000029, 0.00010409700000000438, 0.00010330599999999746, 0.00010379099999999891, 0.00010358399999999685, 0.00010370800000000097, 0.00010349999999999943, 0.00010348699999999933, 0.0001040689999999983, 0.00010412500000000352, 0.0001037360000000001, 0.00010347200000000029, 0.0001036810000000013, 0.00010376299999999977, 0.00010402799999999907, 0.0001036940000000014, 0.00010376399999999925, 0.00010370800000000097, 0.00010418000000000233, 0.00010377799999999882, 0.0001040139999999995, 0.00010426399999999975, 0.00010356999999999728, 0.00010379199999999839, 0.00010343000000000158, 0.00010363900000000259, 0.00010422200000000104, 0.00010411099999999701]</msg>
<status status="PASS" starttime="20201115 23:00:42.896" endtime="20201115 23:00:42.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.891" endtime="20201115 23:00:42.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.902" endtime="20201115 23:00:42.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.907" endtime="20201115 23:00:42.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.904" endtime="20201115 23:00:42.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.900" endtime="20201115 23:00:42.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.444" endtime="20201115 23:00:42.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.440" endtime="20201115 23:00:42.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.439" endtime="20201115 23:00:42.928"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.931" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.941" endtime="20201115 23:00:42.961"></status>
</kw>
<msg timestamp="20201115 23:00:42.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.939" endtime="20201115 23:00:42.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.963" endtime="20201115 23:00:42.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.966" endtime="20201115 23:00:42.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.936" endtime="20201115 23:00:42.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.933" endtime="20201115 23:00:42.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.977" endtime="20201115 23:00:43.277"></status>
</kw>
<msg timestamp="20201115 23:00:43.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027286639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027391139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.975" endtime="20201115 23:00:43.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027286639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027391139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.287" endtime="20201115 23:00:43.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.306" endtime="20201115 23:00:43.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.972" endtime="20201115 23:00:43.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.970" endtime="20201115 23:00:43.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.325" level="INFO">${RESULT} = [{'time': 0.027391139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010449999999999696, 'source_diff': 0.00010449999999999696}, {'time': 0.027514111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:43.316" endtime="20201115 23:00:43.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.354" level="INFO">${ACCURACY} = {'diff': [0.00010449999999999696, 0.00010504199999999964, 0.0001043750000000003, 0.0001048339999999981, 0.00010444500000000162, 0.00010461100000000098, 0.00010447300000000076, 0.00010522300000000151, ...</msg>
<status status="PASS" starttime="20201115 23:00:43.327" endtime="20201115 23:00:43.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.365" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.363" endtime="20201115 23:00:43.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.370" level="INFO">VALUE: [0.00010449999999999696, 0.00010504199999999964, 0.0001043750000000003, 0.0001048339999999981, 0.00010444500000000162, 0.00010461100000000098, 0.00010447300000000076, 0.00010522300000000151, 0.000105207999999999, 0.0001042360000000006, 0.00010448599999999739, 0.00010477799999999982, 0.00010477799999999982, 0.00010530499999999998, 0.0001046949999999984, 0.000104820000000002, 0.00010505499999999973, 0.00010523599999999814, 0.00010481900000000252, 0.00010466699999999926, 0.00010498599999999789, 0.00010509700000000191, 0.0001043750000000003, 0.00010526400000000075, 0.00010455600000000217, 0.00010476400000000025, 0.00010443000000000258, 0.00010459700000000141, 0.0001045559999999987, 0.00010459699999999794, 0.000104514, 0.00010472199999999807, 0.00010472200000000154, 0.00010495899999999822, 0.00010497200000000179, 0.0001051940000000029, 0.00010447200000000129, 0.00010515299999999672, 0.00010526400000000075, 0.00010515300000000366, 0.00010461099999999751, 0.00010509699999999844, 0.00010511099999999801, 0.00010448600000000086, 0.0001050140000000005, 0.00010458300000000531, 0.00010495799999999528, 0.00010515299999999672, 0.00010436099999999726, 0.00010473599999999417]</msg>
<status status="PASS" starttime="20201115 23:00:43.367" endtime="20201115 23:00:43.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.356" endtime="20201115 23:00:43.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.380" endtime="20201115 23:00:43.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.388" endtime="20201115 23:00:43.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.384" endtime="20201115 23:00:43.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.375" endtime="20201115 23:00:43.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.931" endtime="20201115 23:00:43.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.929" endtime="20201115 23:00:43.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.929" endtime="20201115 23:00:43.415"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.420" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.442" endtime="20201115 23:00:43.466"></status>
</kw>
<msg timestamp="20201115 23:00:43.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.438" endtime="20201115 23:00:43.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.469" endtime="20201115 23:00:43.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.475" endtime="20201115 23:00:43.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.431" endtime="20201115 23:00:43.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.425" endtime="20201115 23:00:43.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.499" endtime="20201115 23:00:43.846"></status>
</kw>
<msg timestamp="20201115 23:00:43.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046811625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046917014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.495" endtime="20201115 23:00:43.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046811625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046917014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.856" endtime="20201115 23:00:43.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.874" endtime="20201115 23:00:43.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.488" endtime="20201115 23:00:43.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.483" endtime="20201115 23:00:43.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.891" level="INFO">${RESULT} = [{'time': 0.046917014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001053889999999974, 'source_diff': 0.0001053889999999974}, {'time': 0.047042014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:43.883" endtime="20201115 23:00:43.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.921" level="INFO">${ACCURACY} = {'diff': [0.0001053889999999974, 0.00010556999999999928, 0.0001062219999999961, 0.00010575000000000168, 0.00010542999999999664, 0.00010555500000000023, 0.00010604100000000116, 0.0001053889999999974, 0...</msg>
<status status="PASS" starttime="20201115 23:00:43.893" endtime="20201115 23:00:43.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.932" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.929" endtime="20201115 23:00:43.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.938" level="INFO">VALUE: [0.0001053889999999974, 0.00010556999999999928, 0.0001062219999999961, 0.00010575000000000168, 0.00010542999999999664, 0.00010555500000000023, 0.00010604100000000116, 0.0001053889999999974, 0.00010544500000000262, 0.0001053060000000064, 0.00010566699999999679, 0.00010608399999999935, 0.00010594500000000312, 0.00010573599999999517, 0.00010612499999999858, 0.00010613899999999815, 0.00010527700000000084, 0.00010590299999999747, 0.00010611099999999901, 0.0001055559999999997, 0.00010552800000000057, 0.00010577800000000082, 0.00010529199999999989, 0.00010579200000000039, 0.0001057360000000021, 0.0001055559999999997, 0.00010612499999999858, 0.00010579200000000039, 0.0001061940000000039, 0.00010541699999999654, 0.00010566700000000373, 0.00010595899999999575, 0.00010572200000000254, 0.00010594399999999671, 0.00010552800000000057, 0.00010530599999999946, 0.0001058610000000057, 0.00010540299999999697, 0.00010604200000000064, 0.00010537500000000477, 0.00010597200000000279, 0.00010569499999999593, 0.00010598600000000236, 0.00010625000000000218, 0.00010590300000000441, 0.00010550000000000143, 0.00010558299999999937, 0.00010552800000000057, 0.00010579200000000039, 0.00010559699999999894]</msg>
<status status="PASS" starttime="20201115 23:00:43.934" endtime="20201115 23:00:43.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.923" endtime="20201115 23:00:43.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.947" endtime="20201115 23:00:43.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.955" endtime="20201115 23:00:43.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.951" endtime="20201115 23:00:43.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.942" endtime="20201115 23:00:43.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.422" endtime="20201115 23:00:43.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.417" endtime="20201115 23:00:43.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.416" endtime="20201115 23:00:43.982"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.987" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.009" endtime="20201115 23:00:44.032"></status>
</kw>
<msg timestamp="20201115 23:00:44.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.006" endtime="20201115 23:00:44.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.036" endtime="20201115 23:00:44.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.042" endtime="20201115 23:00:44.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.998" endtime="20201115 23:00:44.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.992" endtime="20201115 23:00:44.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.065" endtime="20201115 23:00:44.411"></status>
</kw>
<msg timestamp="20201115 23:00:44.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047330139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047437264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.062" endtime="20201115 23:00:44.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047330139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047437264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.420" endtime="20201115 23:00:44.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.438" endtime="20201115 23:00:44.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.055" endtime="20201115 23:00:44.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.050" endtime="20201115 23:00:44.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.457" level="INFO">${RESULT} = [{'time': 0.047437264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010712499999999958, 'source_diff': 0.00010712499999999958}, {'time': 0.047562278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:44.448" endtime="20201115 23:00:44.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.487" level="INFO">${ACCURACY} = {'diff': [0.00010712499999999958, 0.0001068340000000001, 0.00010687499999999933, 0.00010630600000000046, 0.00010672300000000301, 0.00010662499999999908, 0.00010643099999999711, 0.00010701399999999556,...</msg>
<status status="PASS" starttime="20201115 23:00:44.460" endtime="20201115 23:00:44.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.498" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.496" endtime="20201115 23:00:44.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.505" level="INFO">VALUE: [0.00010712499999999958, 0.0001068340000000001, 0.00010687499999999933, 0.00010630600000000046, 0.00010672300000000301, 0.00010662499999999908, 0.00010643099999999711, 0.00010701399999999556, 0.00010675000000000268, 0.00010647200000000329, 0.0001068889999999989, 0.00010686199999999924, 0.00010649999999999549, 0.00010693100000000455, 0.00010690299999999847, 0.00010659699999999994, 0.00010683300000000062, 0.00010672200000000354, 0.00010652800000000157, 0.00010674999999999574, 0.00010726399999999581, 0.00010633400000000653, 0.0001072769999999959, 0.000106514000000002, 0.00010644400000000415, 0.00010651399999999506, 0.00010658300000000037, 0.00010716699999999829, 0.00010637499999999883, 0.00010691699999999804, 0.00010709700000000044, 0.0001068889999999989, 0.00010674999999999574, 0.00010641700000000448, 0.000106901999999999, 0.00010708300000000087, 0.0001068889999999989, 0.00010684700000000019, 0.0001063339999999996, 0.00010704200000000164, 0.00010650000000000243, 0.00010670900000000344, 0.00010679100000000191, 0.0001066940000000044, 0.00010708299999999393, 0.00010672200000000354, 0.00010658399999999985, 0.00010680600000000096, 0.00010644500000000362, 0.00010712499999999958]</msg>
<status status="PASS" starttime="20201115 23:00:44.502" endtime="20201115 23:00:44.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.489" endtime="20201115 23:00:44.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.514" endtime="20201115 23:00:44.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.524" endtime="20201115 23:00:44.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.518" endtime="20201115 23:00:44.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.510" endtime="20201115 23:00:44.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.988" endtime="20201115 23:00:44.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.984" endtime="20201115 23:00:44.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.983" endtime="20201115 23:00:44.550"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.556" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.577" endtime="20201115 23:00:44.601"></status>
</kw>
<msg timestamp="20201115 23:00:44.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.574" endtime="20201115 23:00:44.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.605" endtime="20201115 23:00:44.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.611" endtime="20201115 23:00:44.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.567" endtime="20201115 23:00:44.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.561" endtime="20201115 23:00:44.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.634" endtime="20201115 23:00:44.970"></status>
</kw>
<msg timestamp="20201115 23:00:44.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047150125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047258167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.631" endtime="20201115 23:00:44.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047150125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047258167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.979" endtime="20201115 23:00:44.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.998" endtime="20201115 23:00:45.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.624" endtime="20201115 23:00:45.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.619" endtime="20201115 23:00:45.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.016" level="INFO">${RESULT} = [{'time': 0.047258167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001080419999999957, 'source_diff': 0.0001080419999999957}, {'time': 0.047387153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:45.007" endtime="20201115 23:00:45.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.048" level="INFO">${ACCURACY} = {'diff': [0.0001080419999999957, 0.00010812500000000058, 0.00010811100000000101, 0.00010784800000000067, 0.00010773699999999664, 0.0001077769999999964, 0.0001077360000000041, 0.00010734700000000069, 0...</msg>
<status status="PASS" starttime="20201115 23:00:45.018" endtime="20201115 23:00:45.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.059" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.057" endtime="20201115 23:00:45.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.064" level="INFO">VALUE: [0.0001080419999999957, 0.00010812500000000058, 0.00010811100000000101, 0.00010784800000000067, 0.00010773699999999664, 0.0001077769999999964, 0.0001077360000000041, 0.00010734700000000069, 0.00010787500000000033, 0.00010791699999999904, 0.00010732000000000103, 0.00010808300000000187, 0.00010747299999999682, 0.00010774999999999674, 0.00010791699999999904, 0.00010734700000000069, 0.00010777800000000282, 0.00010762500000000008, 0.00010752800000000257, 0.00010766699999999879, 0.00010727800000000232, 0.00010741700000000548, 0.00010781900000000205, 0.00010802800000000307, 0.00010769399999999846, 0.00010733299999999418, 0.00010808300000000187, 0.00010772200000000454, 0.00010816699999999929, 0.00010775000000000368, 0.0001077360000000041, 0.00010741699999999854, 0.0001078889999999999, 0.0001075690000000018, 0.0001082360000000046, 0.00010752800000000257, 0.00010737499999999983, 0.00010748600000000386, 0.00010757000000000128, 0.00010807000000000178, 0.0001077769999999964, 0.0001080690000000023, 0.00010743000000000558, 0.0001077219999999976, 0.00010816599999999982, 0.00010790299999999947, 0.00010787500000000033, 0.00010808300000000187, 0.00010804200000000264, 0.00010795900000000469]</msg>
<status status="PASS" starttime="20201115 23:00:45.061" endtime="20201115 23:00:45.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.050" endtime="20201115 23:00:45.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.073" endtime="20201115 23:00:45.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.082" endtime="20201115 23:00:45.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.077" endtime="20201115 23:00:45.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.069" endtime="20201115 23:00:45.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.557" endtime="20201115 23:00:45.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.553" endtime="20201115 23:00:45.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.551" endtime="20201115 23:00:45.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:50.172" endtime="20201115 23:00:45.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.119" endtime="20201115 23:00:45.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.114" endtime="20201115 23:00:45.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.112" endtime="20201115 23:00:45.143"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:50.034" endtime="20201115 23:00:45.144" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.162" endtime="20201115 23:00:45.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.158" endtime="20201115 23:00:45.185"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.219" endtime="20201115 23:00:45.239"></status>
</kw>
<msg timestamp="20201115 23:00:45.241" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.215" endtime="20201115 23:00:45.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.247" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.243" endtime="20201115 23:00:45.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.254" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:00:45.249" endtime="20201115 23:00:45.254"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:45.208" endtime="20201115 23:00:45.256"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:45.202" endtime="20201115 23:00:45.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.199" endtime="20201115 23:00:45.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:00:45.266" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:00:45.265" endtime="20201115 23:00:45.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.260" endtime="20201115 23:00:45.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.197" endtime="20201115 23:00:45.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.195" endtime="20201115 23:00:45.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.270" endtime="20201115 23:00:45.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.191" endtime="20201115 23:00:45.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.187" endtime="20201115 23:00:45.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.155" endtime="20201115 23:00:45.277"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.285" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.307" endtime="20201115 23:00:45.326"></status>
</kw>
<msg timestamp="20201115 23:00:45.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.304" endtime="20201115 23:00:45.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.330" endtime="20201115 23:00:45.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.337" endtime="20201115 23:00:45.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.296" endtime="20201115 23:00:45.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.291" endtime="20201115 23:00:45.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.361" endtime="20201115 23:00:45.706"></status>
</kw>
<msg timestamp="20201115 23:00:45.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138726, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138753403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:45.358" endtime="20201115 23:00:45.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138726, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138753403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:45.716" endtime="20201115 23:00:45.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.735" endtime="20201115 23:00:45.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.350" endtime="20201115 23:00:45.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.345" endtime="20201115 23:00:45.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.753" level="INFO">${RESULT} = [{'time': 0.138753403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.740300000000917e-05, 'source_diff': 2.740300000000917e-05}, {'time': 0.138790417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:45.743" endtime="20201115 23:00:45.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.784" level="INFO">${ACCURACY} = {'diff': [2.740300000000917e-05, 2.7028000000012264e-05, 2.770900000001464e-05, 2.7834000000004355e-05, 2.7222999999992892e-05, 2.7903000000023548e-05, 2.7098000000003175e-05, 2.7082999999983315e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:45.755" endtime="20201115 23:00:45.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.795" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.793" endtime="20201115 23:00:45.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.801" level="INFO">VALUE: [2.740300000000917e-05, 2.7028000000012264e-05, 2.770900000001464e-05, 2.7834000000004355e-05, 2.7222999999992892e-05, 2.7903000000023548e-05, 2.7098000000003175e-05, 2.7082999999983315e-05, 2.7290999999984855e-05, 2.7986000000007616e-05, 2.8028000000013265e-05, 2.7500000000013625e-05, 2.712500000001672e-05, 2.744399999998759e-05, 2.7374999999996152e-05, 2.780500000001962e-05, 2.734700000001089e-05, 2.797199999998723e-05, 2.6986000000006616e-05, 2.749999999998587e-05, 2.769399999999478e-05, 2.7306000000004715e-05, 2.7000000000027002e-05, 2.745799999998022e-05, 2.7263999999999067e-05, 2.7278000000019453e-05, 2.793100000000881e-05, 2.7111000000024088e-05, 2.765300000001636e-05, 2.765300000001636e-05, 2.7250000000006436e-05, 2.744500000001482e-05, 2.7110999999996332e-05, 2.7570000000004535e-05, 2.787500000001053e-05, 2.7069999999990157e-05, 2.7110999999996332e-05, 2.7791999999998707e-05, 2.7820000000011724e-05, 2.7472000000000607e-05, 2.749999999998587e-05, 2.792999999998158e-05, 2.7208000000000787e-05, 2.7818999999984495e-05, 2.755500000001243e-05, 2.7804999999991864e-05, 2.708300000001107e-05, 2.7318999999997873e-05, 2.7542000000019273e-05, 2.7582999999997693e-05]</msg>
<status status="PASS" starttime="20201115 23:00:45.798" endtime="20201115 23:00:45.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.786" endtime="20201115 23:00:45.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.810" endtime="20201115 23:00:45.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.818" endtime="20201115 23:00:45.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.814" endtime="20201115 23:00:45.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.805" endtime="20201115 23:00:45.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.287" endtime="20201115 23:00:45.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.282" endtime="20201115 23:00:45.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.281" endtime="20201115 23:00:45.844"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.850" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.871" endtime="20201115 23:00:45.891"></status>
</kw>
<msg timestamp="20201115 23:00:45.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.868" endtime="20201115 23:00:45.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.894" endtime="20201115 23:00:45.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.900" endtime="20201115 23:00:45.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.861" endtime="20201115 23:00:45.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.855" endtime="20201115 23:00:45.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.924" endtime="20201115 23:00:46.259"></status>
</kw>
<msg timestamp="20201115 23:00:46.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047102819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047130694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.921" endtime="20201115 23:00:46.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047102819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047130694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.269" endtime="20201115 23:00:46.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.288" endtime="20201115 23:00:46.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.913" endtime="20201115 23:00:46.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.909" endtime="20201115 23:00:46.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.305" level="INFO">${RESULT} = [{'time': 0.047130694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.787500000000359e-05, 'source_diff': 2.787500000000359e-05}, {'time': 0.047166681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:46.296" endtime="20201115 23:00:46.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.337" level="INFO">${ACCURACY} = {'diff': [2.787500000000359e-05, 2.7070000000004035e-05, 2.7499999999999747e-05, 2.7124999999995902e-05, 2.711100000000327e-05, 2.7276999999999163e-05, 2.7346999999997013e-05, 2.7318999999997873e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:46.308" endtime="20201115 23:00:46.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.348" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.346" endtime="20201115 23:00:46.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.353" level="INFO">VALUE: [2.787500000000359e-05, 2.7070000000004035e-05, 2.7499999999999747e-05, 2.7124999999995902e-05, 2.711100000000327e-05, 2.7276999999999163e-05, 2.7346999999997013e-05, 2.7318999999997873e-05, 2.7818999999998373e-05, 2.7110999999996332e-05, 2.7318999999997873e-05, 2.731900000000481e-05, 2.740300000000223e-05, 2.7388999999995722e-05, 2.7486000000000177e-05, 2.7736000000000427e-05, 2.7360999999996582e-05, 2.7554999999998553e-05, 2.7082999999997193e-05, 2.7360999999996582e-05, 2.787500000000359e-05, 2.7041999999997957e-05, 2.744500000000094e-05, 2.7819999999997846e-05, 2.7083999999996666e-05, 2.7972000000001107e-05, 2.7777999999999137e-05, 2.7818999999998373e-05, 2.7319999999997346e-05, 2.7056000000004465e-05, 2.7319999999997346e-05, 2.7847999999996986e-05, 2.786100000000402e-05, 2.7791999999998707e-05, 2.7612000000003245e-05, 2.794500000000144e-05, 2.7277999999998637e-05, 2.734700000000395e-05, 2.7472000000000607e-05, 2.7444000000001467e-05, 2.7068999999997623e-05, 2.761100000000377e-05, 2.713900000000241e-05, 2.7721999999993918e-05, 2.7472000000000607e-05, 2.7082999999997193e-05, 2.7513999999999317e-05, 2.718100000000112e-05, 2.738900000000266e-05, 2.7235999999999927e-05]</msg>
<status status="PASS" starttime="20201115 23:00:46.350" endtime="20201115 23:00:46.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.339" endtime="20201115 23:00:46.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.363" endtime="20201115 23:00:46.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.372" endtime="20201115 23:00:46.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.367" endtime="20201115 23:00:46.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.358" endtime="20201115 23:00:46.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.851" endtime="20201115 23:00:46.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.847" endtime="20201115 23:00:46.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.845" endtime="20201115 23:00:46.398"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.404" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.425" endtime="20201115 23:00:46.445"></status>
</kw>
<msg timestamp="20201115 23:00:46.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.422" endtime="20201115 23:00:46.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.448" endtime="20201115 23:00:46.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.454" endtime="20201115 23:00:46.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.415" endtime="20201115 23:00:46.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.409" endtime="20201115 23:00:46.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.478" endtime="20201115 23:00:46.814"></status>
</kw>
<msg timestamp="20201115 23:00:46.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047083542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047110653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.475" endtime="20201115 23:00:46.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047083542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047110653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.823" endtime="20201115 23:00:46.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.842" endtime="20201115 23:00:46.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.468" endtime="20201115 23:00:46.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.463" endtime="20201115 23:00:46.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.859" level="INFO">${RESULT} = [{'time': 0.047110653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.711100000000327e-05, 'source_diff': 2.711100000000327e-05}, {'time': 0.047144653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:46.850" endtime="20201115 23:00:46.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.891" level="INFO">${ACCURACY} = {'diff': [2.711100000000327e-05, 2.734700000000395e-05, 2.765199999999607e-05, 2.7541999999998457e-05, 2.7791999999998707e-05, 2.7583999999997166e-05, 2.7027999999998387e-05, 2.7166000000002077e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:00:46.861" endtime="20201115 23:00:46.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.902" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.899" endtime="20201115 23:00:46.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.907" level="INFO">VALUE: [2.711100000000327e-05, 2.734700000000395e-05, 2.765199999999607e-05, 2.7541999999998457e-05, 2.7791999999998707e-05, 2.7583999999997166e-05, 2.7027999999998387e-05, 2.7166000000002077e-05, 2.7348000000003425e-05, 2.783300000000488e-05, 2.7804999999998803e-05, 2.7735999999993488e-05, 2.7804999999998803e-05, 2.7916000000002827e-05, 2.7805000000005742e-05, 2.7624999999996402e-05, 2.7277999999998637e-05, 2.763900000000291e-05, 2.7318999999997873e-05, 2.7264000000006006e-05, 2.7846999999997513e-05, 2.7027999999998387e-05, 2.7263999999999067e-05, 2.7013999999998817e-05, 2.7027999999998387e-05, 2.7194000000001217e-05, 2.7777999999999137e-05, 2.7986000000000677e-05, 2.7527999999998887e-05, 2.7320000000004285e-05, 2.7819999999997846e-05, 2.7110999999996332e-05, 2.7070000000004035e-05, 2.7834000000004355e-05, 2.7320000000004285e-05, 2.788900000000316e-05, 2.7860999999997083e-05, 2.743100000000137e-05, 2.7082999999997193e-05, 2.765300000000248e-05, 2.7957999999994598e-05, 2.761100000000377e-05, 2.8000000000000247e-05, 2.7818999999998373e-05, 2.7540999999998983e-05, 2.740300000000223e-05, 2.7708000000001287e-05, 2.7277999999998637e-05, 2.7013999999998817e-05, 2.7916999999995362e-05]</msg>
<status status="PASS" starttime="20201115 23:00:46.904" endtime="20201115 23:00:46.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.893" endtime="20201115 23:00:46.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.916" endtime="20201115 23:00:46.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.924" endtime="20201115 23:00:46.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.920" endtime="20201115 23:00:46.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.912" endtime="20201115 23:00:46.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.405" endtime="20201115 23:00:46.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.401" endtime="20201115 23:00:46.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.399" endtime="20201115 23:00:46.951"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.956" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.978" endtime="20201115 23:00:46.997"></status>
</kw>
<msg timestamp="20201115 23:00:46.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.974" endtime="20201115 23:00:46.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.001" endtime="20201115 23:00:47.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.007" endtime="20201115 23:00:47.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.967" endtime="20201115 23:00:47.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.961" endtime="20201115 23:00:47.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.031" endtime="20201115 23:00:47.365"></status>
</kw>
<msg timestamp="20201115 23:00:47.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046876083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046903486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.027" endtime="20201115 23:00:47.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046876083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046903486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.374" endtime="20201115 23:00:47.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.393" endtime="20201115 23:00:47.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.020" endtime="20201115 23:00:47.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.015" endtime="20201115 23:00:47.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.412" level="INFO">${RESULT} = [{'time': 0.046903486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.740300000000223e-05, 'source_diff': 2.740300000000223e-05}, {'time': 0.046935486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:47.402" endtime="20201115 23:00:47.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.447" level="INFO">${ACCURACY} = {'diff': [2.740300000000223e-05, 2.7402999999995292e-05, 2.6999999999999247e-05, 2.7208000000000787e-05, 2.7527999999998887e-05, 2.7138999999995472e-05, 2.7416999999994862e-05, 2.7096999999996763e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:47.414" endtime="20201115 23:00:47.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.458" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.455" endtime="20201115 23:00:47.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.463" level="INFO">VALUE: [2.740300000000223e-05, 2.7402999999995292e-05, 2.6999999999999247e-05, 2.7208000000000787e-05, 2.7527999999998887e-05, 2.7138999999995472e-05, 2.7416999999994862e-05, 2.7096999999996763e-05, 2.7277999999998637e-05, 2.7320000000004285e-05, 2.7152999999995042e-05, 2.786100000000402e-05, 2.769500000000119e-05, 2.7666999999995112e-05, 2.72369999999994e-05, 2.77369999999999e-05, 2.7124999999995902e-05, 2.723700000000634e-05, 2.7290999999998733e-05, 2.76379999999965e-05, 2.7416000000002327e-05, 2.7582999999997693e-05, 2.7471999999993668e-05, 2.7040999999998483e-05, 2.7124999999995902e-05, 2.7708000000001287e-05, 2.7472000000000607e-05, 2.7444000000001467e-05, 2.7304999999998303e-05, 2.7624999999996402e-05, 2.7263999999999067e-05, 2.7277999999998637e-05, 2.7304999999998303e-05, 2.7986000000000677e-05, 2.766700000000205e-05, 2.7874999999996652e-05, 2.7292000000005145e-05, 2.7708000000001287e-05, 2.7541999999998457e-05, 2.7208000000000787e-05, 2.7527999999998887e-05, 2.7763999999999567e-05, 2.7652999999995542e-05, 2.7680999999994682e-05, 2.713900000000241e-05, 2.7749999999999997e-05, 2.7792000000005646e-05, 2.7263999999999067e-05, 2.7249999999999497e-05, 2.7110999999996332e-05]</msg>
<status status="PASS" starttime="20201115 23:00:47.460" endtime="20201115 23:00:47.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.449" endtime="20201115 23:00:47.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.472" endtime="20201115 23:00:47.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.480" endtime="20201115 23:00:47.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.476" endtime="20201115 23:00:47.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.467" endtime="20201115 23:00:47.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.957" endtime="20201115 23:00:47.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.953" endtime="20201115 23:00:47.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.952" endtime="20201115 23:00:47.507"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.519" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.541" endtime="20201115 23:00:47.560"></status>
</kw>
<msg timestamp="20201115 23:00:47.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.537" endtime="20201115 23:00:47.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.564" endtime="20201115 23:00:47.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.570" endtime="20201115 23:00:47.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.530" endtime="20201115 23:00:47.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.524" endtime="20201115 23:00:47.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.594" endtime="20201115 23:00:47.929"></status>
</kw>
<msg timestamp="20201115 23:00:47.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053641875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053669361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.590" endtime="20201115 23:00:47.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053641875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053669361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.938" endtime="20201115 23:00:47.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.957" endtime="20201115 23:00:47.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.583" endtime="20201115 23:00:47.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.578" endtime="20201115 23:00:47.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.975" level="INFO">${RESULT} = [{'time': 0.053669361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7486000000000177e-05, 'source_diff': 2.7486000000000177e-05}, {'time': 0.053701361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:47.966" endtime="20201115 23:00:47.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.006" level="INFO">${ACCURACY} = {'diff': [2.7486000000000177e-05, 2.7194000000001217e-05, 2.7860999999997083e-05, 2.7736000000000427e-05, 2.7249999999999497e-05, 2.7666999999995112e-05, 2.794500000000144e-05, 2.7763999999999567e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:47.977" endtime="20201115 23:00:48.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.018" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.015" endtime="20201115 23:00:48.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.023" level="INFO">VALUE: [2.7486000000000177e-05, 2.7194000000001217e-05, 2.7860999999997083e-05, 2.7736000000000427e-05, 2.7249999999999497e-05, 2.7666999999995112e-05, 2.794500000000144e-05, 2.7763999999999567e-05, 2.794500000000144e-05, 2.719500000000069e-05, 2.743100000000137e-05, 2.7042000000004895e-05, 2.7514000000006256e-05, 2.7054999999998053e-05, 2.737500000000309e-05, 2.7555999999998027e-05, 2.761100000000377e-05, 2.7541999999998457e-05, 2.7263999999999067e-05, 2.7361999999996056e-05, 2.7194000000001217e-05, 2.7362000000002995e-05, 2.711100000000327e-05, 2.7819000000005312e-05, 2.7444000000001467e-05, 2.7985999999993738e-05, 2.708300000000413e-05, 2.7472000000000607e-05, 2.7888999999996222e-05, 2.7430000000001897e-05, 2.769399999999478e-05, 2.7208000000000787e-05, 2.7430000000001897e-05, 2.7513999999999317e-05, 2.7235999999999927e-05, 2.7318999999997873e-05, 2.74170000000018e-05, 2.7486000000000177e-05, 2.7832999999997943e-05, 2.7958000000001537e-05, 2.75970000000042e-05, 2.7041999999997957e-05, 2.7680000000002147e-05, 2.7624999999996402e-05, 2.795900000000101e-05, 2.7430999999994432e-05, 2.7068999999997623e-05, 2.762500000000334e-05, 2.7084000000003605e-05, 2.7805999999998277e-05]</msg>
<status status="PASS" starttime="20201115 23:00:48.020" endtime="20201115 23:00:48.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.007" endtime="20201115 23:00:48.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.033" endtime="20201115 23:00:48.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.041" endtime="20201115 23:00:48.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.037" endtime="20201115 23:00:48.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.028" endtime="20201115 23:00:48.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.520" endtime="20201115 23:00:48.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.509" endtime="20201115 23:00:48.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.508" endtime="20201115 23:00:48.068"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.073" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.095" endtime="20201115 23:00:48.114"></status>
</kw>
<msg timestamp="20201115 23:00:48.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.091" endtime="20201115 23:00:48.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.117" endtime="20201115 23:00:48.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.123" endtime="20201115 23:00:48.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.084" endtime="20201115 23:00:48.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.078" endtime="20201115 23:00:48.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.147" endtime="20201115 23:00:48.478"></status>
</kw>
<msg timestamp="20201115 23:00:48.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046699819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046727181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.143" endtime="20201115 23:00:48.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046699819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046727181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.482" endtime="20201115 23:00:48.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.491" endtime="20201115 23:00:48.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.136" endtime="20201115 23:00:48.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.132" endtime="20201115 23:00:48.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.499" level="INFO">${RESULT} = [{'time': 0.046727181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7362000000002995e-05, 'source_diff': 2.7362000000002995e-05}, {'time': 0.046761181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:48.495" endtime="20201115 23:00:48.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.513" level="INFO">${ACCURACY} = {'diff': [2.7362000000002995e-05, 2.7902999999995792e-05, 2.748699999999965e-05, 2.7082999999997193e-05, 2.7568999999998123e-05, 2.7194000000001217e-05, 2.7694000000001717e-05, 2.7166000000002077e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:48.500" endtime="20201115 23:00:48.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.519" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.517" endtime="20201115 23:00:48.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.521" level="INFO">VALUE: [2.7362000000002995e-05, 2.7902999999995792e-05, 2.748699999999965e-05, 2.7082999999997193e-05, 2.7568999999998123e-05, 2.7194000000001217e-05, 2.7694000000001717e-05, 2.7166000000002077e-05, 2.7804999999998803e-05, 2.7694000000001717e-05, 2.7527000000006352e-05, 2.74170000000018e-05, 2.7624999999996402e-05, 2.7958000000001537e-05, 2.7249999999999497e-05, 2.7207999999993848e-05, 2.7278000000005576e-05, 2.7624999999996402e-05, 2.765300000000248e-05, 2.75970000000042e-05, 2.8000000000000247e-05, 2.712500000000284e-05, 2.769500000000119e-05, 2.7402999999995292e-05, 2.7860999999997083e-05, 2.716700000000155e-05, 2.769500000000119e-05, 2.7084000000003605e-05, 2.74170000000018e-05, 2.7944999999994502e-05, 2.7583999999997166e-05, 2.794500000000144e-05, 2.77369999999999e-05, 2.8055999999998527e-05, 2.7944000000001967e-05, 2.7708000000001287e-05, 2.7957999999994598e-05, 2.756900000000506e-05, 2.765199999999607e-05, 2.75970000000042e-05, 2.7026999999998913e-05, 2.7582999999997693e-05, 2.7068999999997623e-05, 2.7957999999994598e-05, 2.7068999999997623e-05, 2.7444000000001467e-05, 2.75970000000042e-05, 2.7486000000000177e-05, 2.75970000000042e-05, 2.7486000000000177e-05]</msg>
<status status="PASS" starttime="20201115 23:00:48.520" endtime="20201115 23:00:48.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.514" endtime="20201115 23:00:48.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.526" endtime="20201115 23:00:48.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.530" endtime="20201115 23:00:48.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.528" endtime="20201115 23:00:48.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.524" endtime="20201115 23:00:48.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.074" endtime="20201115 23:00:48.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.070" endtime="20201115 23:00:48.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.068" endtime="20201115 23:00:48.552"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.554" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.565" endtime="20201115 23:00:48.581"></status>
</kw>
<msg timestamp="20201115 23:00:48.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.563" endtime="20201115 23:00:48.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.582" endtime="20201115 23:00:48.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.585" endtime="20201115 23:00:48.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.559" endtime="20201115 23:00:48.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.557" endtime="20201115 23:00:48.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.597" endtime="20201115 23:00:48.919"></status>
</kw>
<msg timestamp="20201115 23:00:48.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027095083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027122597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.595" endtime="20201115 23:00:48.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027095083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027122597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.929" endtime="20201115 23:00:48.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.948" endtime="20201115 23:00:48.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.592" endtime="20201115 23:00:48.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.589" endtime="20201115 23:00:48.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.965" level="INFO">${RESULT} = [{'time': 0.027122597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7513999999999317e-05, 'source_diff': 2.7513999999999317e-05}, {'time': 0.027160528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:48.956" endtime="20201115 23:00:48.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.996" level="INFO">${ACCURACY} = {'diff': [2.7513999999999317e-05, 2.7611000000000302e-05, 2.7486000000000177e-05, 2.7388999999999192e-05, 2.7749999999999997e-05, 2.7986000000000677e-05, 2.7819999999997846e-05, 2.7875000000000122e-05...</msg>
<status status="PASS" starttime="20201115 23:00:48.967" endtime="20201115 23:00:48.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.007" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.005" endtime="20201115 23:00:49.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.015" level="INFO">VALUE: [2.7513999999999317e-05, 2.7611000000000302e-05, 2.7486000000000177e-05, 2.7388999999999192e-05, 2.7749999999999997e-05, 2.7986000000000677e-05, 2.7819999999997846e-05, 2.7875000000000122e-05, 2.77369999999999e-05, 2.7319999999997346e-05, 2.7848000000000456e-05, 2.7055000000001522e-05, 2.7486000000000177e-05, 2.7763000000000093e-05, 2.7401999999999288e-05, 2.7471999999997138e-05, 2.7875000000000122e-05, 2.7527999999998887e-05, 2.7277999999998637e-05, 2.7068999999997623e-05, 2.715299999999851e-05, 2.8000000000000247e-05, 2.7736000000000427e-05, 2.7319000000001342e-05, 2.7235999999999927e-05, 2.715300000000198e-05, 2.7305999999997776e-05, 2.7361000000000052e-05, 2.7820000000001316e-05, 2.7985999999997208e-05, 2.740300000000223e-05, 2.716699999999808e-05, 2.7361000000000052e-05, 2.7235999999999927e-05, 2.7541999999998457e-05, 2.715299999999851e-05, 2.718099999999765e-05, 2.7902999999999262e-05, 2.7875000000000122e-05, 2.7097000000000232e-05, 2.7180000000001647e-05, 2.798700000000015e-05, 2.7819000000001842e-05, 2.7512999999999843e-05, 2.7749999999999997e-05, 2.7222000000000357e-05, 2.7638999999999442e-05, 2.7930000000002397e-05, 2.7472000000000607e-05, 2.7249999999999497e-05]</msg>
<status status="PASS" starttime="20201115 23:00:49.009" endtime="20201115 23:00:49.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.998" endtime="20201115 23:00:49.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.024" endtime="20201115 23:00:49.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.032" endtime="20201115 23:00:49.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.027" endtime="20201115 23:00:49.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.019" endtime="20201115 23:00:49.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.555" endtime="20201115 23:00:49.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.553" endtime="20201115 23:00:49.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.552" endtime="20201115 23:00:49.058"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.064" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.085" endtime="20201115 23:00:49.104"></status>
</kw>
<msg timestamp="20201115 23:00:49.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.082" endtime="20201115 23:00:49.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.107" endtime="20201115 23:00:49.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.114" endtime="20201115 23:00:49.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.075" endtime="20201115 23:00:49.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.069" endtime="20201115 23:00:49.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.137" endtime="20201115 23:00:49.471"></status>
</kw>
<msg timestamp="20201115 23:00:49.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046709222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046736944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.134" endtime="20201115 23:00:49.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046709222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046736944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.481" endtime="20201115 23:00:49.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.500" endtime="20201115 23:00:49.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.127" endtime="20201115 23:00:49.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.122" endtime="20201115 23:00:49.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.517" level="INFO">${RESULT} = [{'time': 0.046736944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7722000000000857e-05, 'source_diff': 2.7722000000000857e-05}, {'time': 0.046775931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:49.508" endtime="20201115 23:00:49.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.551" level="INFO">${ACCURACY} = {'diff': [2.7722000000000857e-05, 2.7362000000002995e-05, 2.798700000000015e-05, 2.713900000000241e-05, 2.7096999999996763e-05, 2.7304999999998303e-05, 2.713900000000241e-05, 2.7499999999999747e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:00:49.520" endtime="20201115 23:00:49.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.562" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.559" endtime="20201115 23:00:49.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.567" level="INFO">VALUE: [2.7722000000000857e-05, 2.7362000000002995e-05, 2.798700000000015e-05, 2.713900000000241e-05, 2.7096999999996763e-05, 2.7304999999998303e-05, 2.713900000000241e-05, 2.7499999999999747e-05, 2.790199999999632e-05, 2.7026999999998913e-05, 2.7040999999998483e-05, 2.7666999999995112e-05, 2.7902999999995792e-05, 2.7652999999995542e-05, 2.7027999999998387e-05, 2.7902999999995792e-05, 2.7568999999998123e-05, 2.7818999999998373e-05, 2.7763000000000093e-05, 2.793100000000187e-05, 2.795900000000101e-05, 2.7860999999997083e-05, 2.7055999999997526e-05, 2.74170000000018e-05, 2.7472000000000607e-05, 2.7610999999996833e-05, 2.745900000000051e-05, 2.7278000000005576e-05, 2.766700000000205e-05, 2.768100000000162e-05, 2.697299999999958e-05, 2.769500000000119e-05, 2.712500000000284e-05, 2.722299999999983e-05, 2.715300000000198e-05, 2.7070000000004035e-05, 2.7249999999999497e-05, 2.736100000000352e-05, 2.7610999999996833e-05, 2.7374999999996152e-05, 2.761100000000377e-05, 2.7916000000002827e-05, 2.7874999999996652e-05, 2.711100000000327e-05, 2.7652999999995542e-05, 2.769399999999478e-05, 2.7902999999995792e-05, 2.772300000000033e-05, 2.7832999999997943e-05, 2.762500000000334e-05]</msg>
<status status="PASS" starttime="20201115 23:00:49.564" endtime="20201115 23:00:49.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.553" endtime="20201115 23:00:49.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.577" endtime="20201115 23:00:49.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.586" endtime="20201115 23:00:49.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.581" endtime="20201115 23:00:49.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.573" endtime="20201115 23:00:49.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.065" endtime="20201115 23:00:49.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.061" endtime="20201115 23:00:49.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.059" endtime="20201115 23:00:49.612"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.617" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.639" endtime="20201115 23:00:49.658"></status>
</kw>
<msg timestamp="20201115 23:00:49.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.636" endtime="20201115 23:00:49.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.661" endtime="20201115 23:00:49.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.668" endtime="20201115 23:00:49.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.628" endtime="20201115 23:00:49.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.623" endtime="20201115 23:00:49.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.691" endtime="20201115 23:00:50.026"></status>
</kw>
<msg timestamp="20201115 23:00:50.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046721153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046749097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.688" endtime="20201115 23:00:50.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046721153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046749097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.036" endtime="20201115 23:00:50.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.055" endtime="20201115 23:00:50.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.681" endtime="20201115 23:00:50.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.676" endtime="20201115 23:00:50.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.073" level="INFO">${RESULT} = [{'time': 0.046749097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7944000000001967e-05, 'source_diff': 2.7944000000001967e-05}, {'time': 0.046780056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:50.064" endtime="20201115 23:00:50.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.103" level="INFO">${ACCURACY} = {'diff': [2.7944000000001967e-05, 2.769500000000119e-05, 2.7028000000005326e-05, 2.77369999999999e-05, 2.8041999999998957e-05, 2.7902000000003258e-05, 2.7290999999998733e-05, 2.741599999999539e-05, 2....</msg>
<status status="PASS" starttime="20201115 23:00:50.075" endtime="20201115 23:00:50.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.114" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.112" endtime="20201115 23:00:50.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.120" level="INFO">VALUE: [2.7944000000001967e-05, 2.769500000000119e-05, 2.7028000000005326e-05, 2.77369999999999e-05, 2.8041999999998957e-05, 2.7902000000003258e-05, 2.7290999999998733e-05, 2.741599999999539e-05, 2.740300000000223e-05, 2.7804999999998803e-05, 2.788900000000316e-05, 2.7832999999997943e-05, 2.7763999999999567e-05, 2.715300000000198e-05, 2.7638999999995972e-05, 2.7736000000000427e-05, 2.7486000000000177e-05, 2.7582999999997693e-05, 2.7277999999998637e-05, 2.786100000000402e-05, 2.744500000000094e-05, 2.761100000000377e-05, 2.766700000000205e-05, 2.7583999999997166e-05, 2.720900000000026e-05, 2.7346999999997013e-05, 2.7320000000004285e-05, 2.761100000000377e-05, 2.7596999999997263e-05, 2.7541999999998457e-05, 2.7137999999996e-05, 2.762500000000334e-05, 2.7027999999998387e-05, 2.7832999999997943e-05, 2.748700000000659e-05, 2.7026999999998913e-05, 2.7235999999999927e-05, 2.740199999999582e-05, 2.8000000000000247e-05, 2.7249999999999497e-05, 2.7832999999997943e-05, 2.790300000000273e-05, 2.7888999999996222e-05, 2.742999999999496e-05, 2.711100000000327e-05, 2.731900000000481e-05, 2.715300000000198e-05, 2.7735999999993488e-05, 2.7068999999997623e-05, 2.7749999999999997e-05]</msg>
<status status="PASS" starttime="20201115 23:00:50.117" endtime="20201115 23:00:50.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.105" endtime="20201115 23:00:50.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.130" endtime="20201115 23:00:50.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.138" endtime="20201115 23:00:50.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.134" endtime="20201115 23:00:50.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.125" endtime="20201115 23:00:50.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.619" endtime="20201115 23:00:50.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.615" endtime="20201115 23:00:50.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.613" endtime="20201115 23:00:50.165"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.170" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.192" endtime="20201115 23:00:50.211"></status>
</kw>
<msg timestamp="20201115 23:00:50.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.188" endtime="20201115 23:00:50.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.214" endtime="20201115 23:00:50.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.220" endtime="20201115 23:00:50.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.181" endtime="20201115 23:00:50.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.175" endtime="20201115 23:00:50.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.244" endtime="20201115 23:00:50.579"></status>
</kw>
<msg timestamp="20201115 23:00:50.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047221042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047248639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.240" endtime="20201115 23:00:50.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047221042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047248639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.589" endtime="20201115 23:00:50.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.607" endtime="20201115 23:00:50.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.233" endtime="20201115 23:00:50.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.228" endtime="20201115 23:00:50.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.625" level="INFO">${RESULT} = [{'time': 0.047248639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.75970000000042e-05, 'source_diff': 2.75970000000042e-05}, {'time': 0.047285611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:50.616" endtime="20201115 23:00:50.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.655" level="INFO">${ACCURACY} = {'diff': [2.75970000000042e-05, 2.7652999999995542e-05, 2.7916999999995362e-05, 2.7819000000005312e-05, 2.7832999999997943e-05, 2.7736000000000427e-05, 2.7292000000005145e-05, 2.788900000000316e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:00:50.627" endtime="20201115 23:00:50.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.666" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.664" endtime="20201115 23:00:50.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.672" level="INFO">VALUE: [2.75970000000042e-05, 2.7652999999995542e-05, 2.7916999999995362e-05, 2.7819000000005312e-05, 2.7832999999997943e-05, 2.7736000000000427e-05, 2.7292000000005145e-05, 2.788900000000316e-05, 2.7708000000001287e-05, 2.7736000000000427e-05, 2.7070000000004035e-05, 2.793100000000187e-05, 2.719500000000069e-05, 2.7569999999997596e-05, 2.7819999999997846e-05, 2.797300000000058e-05, 2.7055999999997526e-05, 2.7513999999999317e-05, 2.7486000000000177e-05, 2.7874999999996652e-05, 2.7569999999997596e-05, 2.7916000000002827e-05, 2.79170000000023e-05, 2.7902000000003258e-05, 2.7540999999998983e-05, 2.7652000000003008e-05, 2.790199999999632e-05, 2.7790999999999233e-05, 2.7986000000000677e-05, 2.8000000000000247e-05, 2.7944000000001967e-05, 2.765300000000248e-05, 2.7916999999995362e-05, 2.711100000000327e-05, 2.769399999999478e-05, 2.7986000000000677e-05, 2.734700000000395e-05, 2.7818999999998373e-05, 2.7583999999997166e-05, 2.7694000000001717e-05, 2.7027999999998387e-05, 2.7708000000001287e-05, 2.7860999999997083e-05, 2.7055999999997526e-05, 2.794500000000144e-05, 2.793100000000187e-05, 2.787500000000359e-05, 2.7736000000000427e-05, 2.7263999999999067e-05, 2.7013999999998817e-05]</msg>
<status status="PASS" starttime="20201115 23:00:50.669" endtime="20201115 23:00:50.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.657" endtime="20201115 23:00:50.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.682" endtime="20201115 23:00:50.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.690" endtime="20201115 23:00:50.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.686" endtime="20201115 23:00:50.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.677" endtime="20201115 23:00:50.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.171" endtime="20201115 23:00:50.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.167" endtime="20201115 23:00:50.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.166" endtime="20201115 23:00:50.717"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.722" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.744" endtime="20201115 23:00:50.763"></status>
</kw>
<msg timestamp="20201115 23:00:50.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.741" endtime="20201115 23:00:50.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.767" endtime="20201115 23:00:50.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.774" endtime="20201115 23:00:50.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.733" endtime="20201115 23:00:50.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.728" endtime="20201115 23:00:50.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.797" endtime="20201115 23:00:51.133"></status>
</kw>
<msg timestamp="20201115 23:00:51.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04719825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047226792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:50.794" endtime="20201115 23:00:51.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04719825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047226792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:51.143" endtime="20201115 23:00:51.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.162" endtime="20201115 23:00:51.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.787" endtime="20201115 23:00:51.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.782" endtime="20201115 23:00:51.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.179" level="INFO">${RESULT} = [{'time': 0.047226792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8541999999999457e-05, 'source_diff': 2.8541999999999457e-05}, {'time': 0.047258792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:51.170" endtime="20201115 23:00:51.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.210" level="INFO">${ACCURACY} = {'diff': [2.8541999999999457e-05, 2.8291999999999207e-05, 2.872300000000133e-05, 2.8680999999995682e-05, 2.8500000000000747e-05, 2.895900000000201e-05, 2.8291999999999207e-05, 2.847300000000108e-05, 2...</msg>
<status status="PASS" starttime="20201115 23:00:51.181" endtime="20201115 23:00:51.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.221" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.218" endtime="20201115 23:00:51.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.226" level="INFO">VALUE: [2.8541999999999457e-05, 2.8291999999999207e-05, 2.872300000000133e-05, 2.8680999999995682e-05, 2.8500000000000747e-05, 2.895900000000201e-05, 2.8291999999999207e-05, 2.847300000000108e-05, 2.82370000000004e-05, 2.819399999999528e-05, 2.8874999999997653e-05, 2.8277000000000163e-05, 2.8776999999993724e-05, 2.890199999999732e-05, 2.8846999999998513e-05, 2.818100000000212e-05, 2.9014000000000817e-05, 2.812500000000384e-05, 2.8985999999994738e-05, 2.890300000000373e-05, 2.8278000000006576e-05, 2.8818999999999373e-05, 2.84170000000028e-05, 2.8805999999999277e-05, 2.8888999999997222e-05, 2.8346999999998013e-05, 2.8542000000006396e-05, 2.8846999999998513e-05, 2.8041999999998957e-05, 2.869500000000219e-05, 2.8013999999999817e-05, 2.8819999999998847e-05, 2.8124999999996902e-05, 2.8916000000003828e-05, 2.8736000000001427e-05, 2.8111999999996806e-05, 2.8944999999995502e-05, 2.8972000000002107e-05, 2.8222000000001357e-05, 2.8694000000002717e-05, 2.8360999999997583e-05, 2.8930000000003397e-05, 2.8388000000004188e-05, 2.888900000000416e-05, 2.865199999999707e-05, 2.833300000000538e-05, 2.8318999999998873e-05, 2.8832999999998943e-05, 2.869399999999578e-05, 2.8292000000006146e-05]</msg>
<status status="PASS" starttime="20201115 23:00:51.223" endtime="20201115 23:00:51.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.212" endtime="20201115 23:00:51.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.236" endtime="20201115 23:00:51.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.245" endtime="20201115 23:00:51.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.240" endtime="20201115 23:00:51.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.232" endtime="20201115 23:00:51.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.724" endtime="20201115 23:00:51.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.719" endtime="20201115 23:00:51.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.718" endtime="20201115 23:00:51.271"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.276" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.299" endtime="20201115 23:00:51.318"></status>
</kw>
<msg timestamp="20201115 23:00:51.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.296" endtime="20201115 23:00:51.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.321" endtime="20201115 23:00:51.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.328" endtime="20201115 23:00:51.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.288" endtime="20201115 23:00:51.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.282" endtime="20201115 23:00:51.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.351" endtime="20201115 23:00:51.686"></status>
</kw>
<msg timestamp="20201115 23:00:51.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047661181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047691125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.348" endtime="20201115 23:00:51.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047661181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047691125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.695" endtime="20201115 23:00:51.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.714" endtime="20201115 23:00:51.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.341" endtime="20201115 23:00:51.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.336" endtime="20201115 23:00:51.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.732" level="INFO">${RESULT} = [{'time': 0.047691125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9944000000003967e-05, 'source_diff': 2.9944000000003967e-05}, {'time': 0.047730139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:51.723" endtime="20201115 23:00:51.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.764" level="INFO">${ACCURACY} = {'diff': [2.9944000000003967e-05, 2.9444999999996002e-05, 2.9902999999997792e-05, 2.9263999999994128e-05, 2.9541000000000983e-05, 2.9485999999995238e-05, 2.9318999999999873e-05, 2.9346999999999013e-05...</msg>
<status status="PASS" starttime="20201115 23:00:51.734" endtime="20201115 23:00:51.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.775" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.773" endtime="20201115 23:00:51.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.782" level="INFO">VALUE: [2.9944000000003967e-05, 2.9444999999996002e-05, 2.9902999999997792e-05, 2.9263999999994128e-05, 2.9541000000000983e-05, 2.9485999999995238e-05, 2.9318999999999873e-05, 2.9346999999999013e-05, 2.9556000000000027e-05, 2.9986000000002677e-05, 2.944500000000294e-05, 2.9694999999996252e-05, 2.9612000000005245e-05, 2.9110999999998333e-05, 2.9291000000000733e-05, 2.9540999999994044e-05, 2.9819000000000373e-05, 2.9680000000004148e-05, 2.913900000000441e-05, 2.9694000000003717e-05, 2.9096999999998763e-05, 2.9763999999994628e-05, 2.9666999999997112e-05, 2.9458999999995572e-05, 2.9083999999998666e-05, 2.9860999999999083e-05, 2.9528000000000887e-05, 2.9305000000000303e-05, 2.9750000000001997e-05, 2.9069000000006562e-05, 2.9264000000001067e-05, 2.9041999999999957e-05, 2.9014000000000817e-05, 2.9542000000000457e-05, 2.9916999999997362e-05, 2.987500000000559e-05, 2.9346999999999013e-05, 2.9638999999997973e-05, 2.9277999999993698e-05, 2.9514000000001317e-05, 2.969500000000319e-05, 2.9986000000002677e-05, 2.9291000000000733e-05, 2.944500000000294e-05, 2.988799999999875e-05, 2.9556000000000027e-05, 2.9582999999999693e-05, 2.915199999999757e-05, 2.9291000000000733e-05, 2.965199999999807e-05]</msg>
<status status="PASS" starttime="20201115 23:00:51.778" endtime="20201115 23:00:51.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.766" endtime="20201115 23:00:51.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.791" endtime="20201115 23:00:51.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.800" endtime="20201115 23:00:51.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.795" endtime="20201115 23:00:51.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.787" endtime="20201115 23:00:51.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.278" endtime="20201115 23:00:51.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.274" endtime="20201115 23:00:51.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.272" endtime="20201115 23:00:51.827"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.832" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.854" endtime="20201115 23:00:51.872"></status>
</kw>
<msg timestamp="20201115 23:00:51.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.850" endtime="20201115 23:00:51.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.876" endtime="20201115 23:00:51.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.882" endtime="20201115 23:00:51.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.843" endtime="20201115 23:00:51.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.837" endtime="20201115 23:00:51.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.904" endtime="20201115 23:00:52.190"></status>
</kw>
<msg timestamp="20201115 23:00:52.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046597833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046628403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.902" endtime="20201115 23:00:52.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046597833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046628403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.194" endtime="20201115 23:00:52.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.203" endtime="20201115 23:00:52.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.895" endtime="20201115 23:00:52.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.890" endtime="20201115 23:00:52.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.217" level="INFO">${RESULT} = [{'time': 0.046628403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.05700000000006e-05, 'source_diff': 3.05700000000006e-05}, {'time': 0.046674431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:52.207" endtime="20201115 23:00:52.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.247" level="INFO">${ACCURACY} = {'diff': [3.05700000000006e-05, 3.083400000000042e-05, 3.087499999999965e-05, 3.0055000000001053e-05, 3.040199999999882e-05, 3.044399999999753e-05, 3.09170000000053e-05, 3.0333000000000443e-05, 3.0610...</msg>
<status status="PASS" starttime="20201115 23:00:52.219" endtime="20201115 23:00:52.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.258" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.256" endtime="20201115 23:00:52.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.264" level="INFO">VALUE: [3.05700000000006e-05, 3.083400000000042e-05, 3.087499999999965e-05, 3.0055000000001053e-05, 3.040199999999882e-05, 3.044399999999753e-05, 3.09170000000053e-05, 3.0333000000000443e-05, 3.061099999999983e-05, 3.094399999999803e-05, 3.0083000000000193e-05, 3.098600000000368e-05, 3.0068999999993684e-05, 3.0500000000002747e-05, 3.0222000000003357e-05, 3.0194000000004217e-05, 3.0110999999999333e-05, 3.081900000000137e-05, 3.015300000000498e-05, 3.0347000000000013e-05, 3.0319000000000873e-05, 3.0306000000000777e-05, 3.088899999999922e-05, 3.0166999999997612e-05, 3.0042000000000957e-05, 3.0014000000001817e-05, 3.038900000000566e-05, 3.0042000000000957e-05, 3.0292000000001207e-05, 3.0306000000000777e-05, 3.06249999999994e-05, 3.073599999999649e-05, 3.018100000000412e-05, 3.0096999999999763e-05, 3.0790999999995294e-05, 3.0416999999997862e-05, 3.0096999999999763e-05, 3.0138999999998473e-05, 3.0472000000003607e-05, 3.020799999999685e-05, 3.091699999999836e-05, 3.0027000000001913e-05, 3.06249999999994e-05, 3.077800000000214e-05, 3.0263999999995128e-05, 3.0319000000000873e-05, 3.08050000000018e-05, 3.0166999999997612e-05, 3.0388999999998723e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201115 23:00:52.261" endtime="20201115 23:00:52.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.249" endtime="20201115 23:00:52.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.275" endtime="20201115 23:00:52.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.283" endtime="20201115 23:00:52.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.279" endtime="20201115 23:00:52.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.270" endtime="20201115 23:00:52.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.834" endtime="20201115 23:00:52.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.829" endtime="20201115 23:00:52.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.828" endtime="20201115 23:00:52.309"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.315" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.336" endtime="20201115 23:00:52.356"></status>
</kw>
<msg timestamp="20201115 23:00:52.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.333" endtime="20201115 23:00:52.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.359" endtime="20201115 23:00:52.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.366" endtime="20201115 23:00:52.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.326" endtime="20201115 23:00:52.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.320" endtime="20201115 23:00:52.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.389" endtime="20201115 23:00:52.723"></status>
</kw>
<msg timestamp="20201115 23:00:52.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046751792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046783111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.386" endtime="20201115 23:00:52.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046751792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046783111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.733" endtime="20201115 23:00:52.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.751" endtime="20201115 23:00:52.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.379" endtime="20201115 23:00:52.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.374" endtime="20201115 23:00:52.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.769" level="INFO">${RESULT} = [{'time': 0.046783111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.131900000000187e-05, 'source_diff': 3.131900000000187e-05}, {'time': 0.046824125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:52.760" endtime="20201115 23:00:52.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.799" level="INFO">${ACCURACY} = {'diff': [3.131900000000187e-05, 3.186100000000108e-05, 3.167999999999921e-05, 3.141699999999886e-05, 3.119399999999828e-05, 3.10700000000011e-05, 3.132000000000135e-05, 3.118099999999818e-05, 3.17779...</msg>
<status status="PASS" starttime="20201115 23:00:52.771" endtime="20201115 23:00:52.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.811" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.808" endtime="20201115 23:00:52.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.822" level="INFO">VALUE: [3.131900000000187e-05, 3.186100000000108e-05, 3.167999999999921e-05, 3.141699999999886e-05, 3.119399999999828e-05, 3.10700000000011e-05, 3.132000000000135e-05, 3.118099999999818e-05, 3.17779999999962e-05, 3.127800000000264e-05, 3.169499999999825e-05, 3.184800000000099e-05, 3.193099999999893e-05, 3.126400000000307e-05, 3.183400000000142e-05, 3.102800000000239e-05, 3.170899999999782e-05, 3.197199999999817e-05, 3.1862000000000557e-05, 3.188900000000022e-05, 3.136100000000058e-05, 3.169399999999878e-05, 3.140199999999982e-05, 3.127700000000316e-05, 3.165200000000007e-05, 3.191599999999989e-05, 3.148599999999724e-05, 3.127800000000264e-05, 3.172199999999792e-05, 3.186100000000108e-05, 3.201400000000382e-05, 3.1804999999995864e-05, 3.1318999999994934e-05, 3.101399999999588e-05, 3.116699999999861e-05, 3.16250000000004e-05, 3.119499999999775e-05, 3.191699999999936e-05, 3.150000000000375e-05, 3.195899999999807e-05, 3.10700000000011e-05, 3.123600000000393e-05, 3.116699999999861e-05, 3.151399999999638e-05, 3.106999999999416e-05, 3.170799999999835e-05, 3.148699999999671e-05, 3.197199999999817e-05, 3.158300000000169e-05, 3.116599999999914e-05]</msg>
<status status="PASS" starttime="20201115 23:00:52.813" endtime="20201115 23:00:52.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.801" endtime="20201115 23:00:52.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.833" endtime="20201115 23:00:52.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.841" endtime="20201115 23:00:52.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.837" endtime="20201115 23:00:52.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.828" endtime="20201115 23:00:52.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.316" endtime="20201115 23:00:52.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.312" endtime="20201115 23:00:52.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.310" endtime="20201115 23:00:52.868"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.873" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.895" endtime="20201115 23:00:52.914"></status>
</kw>
<msg timestamp="20201115 23:00:52.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.892" endtime="20201115 23:00:52.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.918" endtime="20201115 23:00:52.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.924" endtime="20201115 23:00:52.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.884" endtime="20201115 23:00:52.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.878" endtime="20201115 23:00:52.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.947" endtime="20201115 23:00:53.281"></status>
</kw>
<msg timestamp="20201115 23:00:53.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047296472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047328597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.944" endtime="20201115 23:00:53.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047296472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047328597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.291" endtime="20201115 23:00:53.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.310" endtime="20201115 23:00:53.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.937" endtime="20201115 23:00:53.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.932" endtime="20201115 23:00:53.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.328" level="INFO">${RESULT} = [{'time': 0.047328597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.21250000000009e-05, 'source_diff': 3.21250000000009e-05}, {'time': 0.047364625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:53.319" endtime="20201115 23:00:53.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.359" level="INFO">${ACCURACY} = {'diff': [3.21250000000009e-05, 3.272199999999892e-05, 3.244399999999953e-05, 3.206900000000262e-05, 3.299999999999831e-05, 3.243099999999943e-05, 3.27779999999972e-05, 3.294400000000003e-05, 3.298599...</msg>
<status status="PASS" starttime="20201115 23:00:53.331" endtime="20201115 23:00:53.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.370" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.368" endtime="20201115 23:00:53.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.377" level="INFO">VALUE: [3.21250000000009e-05, 3.272199999999892e-05, 3.244399999999953e-05, 3.206900000000262e-05, 3.299999999999831e-05, 3.243099999999943e-05, 3.27779999999972e-05, 3.294400000000003e-05, 3.298599999999874e-05, 3.242999999999996e-05, 3.2444999999999e-05, 3.284700000000251e-05, 3.244399999999953e-05, 3.298600000000568e-05, 3.247200000000561e-05, 3.21250000000009e-05, 3.2624999999994464e-05, 3.274999999999806e-05, 3.215300000000004e-05, 3.236100000000158e-05, 3.216699999999961e-05, 3.2082999999995254e-05, 3.26250000000014e-05, 3.284800000000199e-05, 3.290300000000079e-05, 3.2402999999993354e-05, 3.238900000000072e-05, 3.269399999999978e-05, 3.256900000000312e-05, 3.281900000000337e-05, 3.241699999999986e-05, 3.250000000000475e-05, 3.231900000000287e-05, 3.251399999999738e-05, 3.265300000000054e-05, 3.233300000000244e-05, 3.263900000000097e-05, 3.2388999999993784e-05, 3.244399999999953e-05, 3.222199999999842e-05, 3.245800000000604e-05, 3.276399999999763e-05, 3.216699999999961e-05, 3.223599999999799e-05, 3.255600000000303e-05, 3.244500000000594e-05, 3.299999999999831e-05, 3.250000000000475e-05, 3.248600000000518e-05, 3.21250000000009e-05]</msg>
<status status="PASS" starttime="20201115 23:00:53.373" endtime="20201115 23:00:53.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.361" endtime="20201115 23:00:53.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.386" endtime="20201115 23:00:53.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.394" endtime="20201115 23:00:53.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.390" endtime="20201115 23:00:53.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.381" endtime="20201115 23:00:53.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.875" endtime="20201115 23:00:53.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.871" endtime="20201115 23:00:53.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.869" endtime="20201115 23:00:53.421"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.426" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.448" endtime="20201115 23:00:53.467"></status>
</kw>
<msg timestamp="20201115 23:00:53.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.444" endtime="20201115 23:00:53.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.471" endtime="20201115 23:00:53.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.477" endtime="20201115 23:00:53.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.437" endtime="20201115 23:00:53.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.432" endtime="20201115 23:00:53.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.501" endtime="20201115 23:00:53.835"></status>
</kw>
<msg timestamp="20201115 23:00:53.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046995903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047029194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.497" endtime="20201115 23:00:53.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046995903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047029194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.845" endtime="20201115 23:00:53.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.864" endtime="20201115 23:00:53.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.490" endtime="20201115 23:00:53.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.485" endtime="20201115 23:00:53.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.882" level="INFO">${RESULT} = [{'time': 0.047029194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3291000000004733e-05, 'source_diff': 3.3291000000004733e-05}, {'time': 0.047075194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:53.873" endtime="20201115 23:00:53.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.915" level="INFO">${ACCURACY} = {'diff': [3.3291000000004733e-05, 3.333300000000344e-05, 3.3596999999996324e-05, 3.3026999999997975e-05, 3.39580000000006e-05, 3.3860999999996144e-05, 3.3568999999997184e-05, 3.373600000000643e-05, 3....</msg>
<status status="PASS" starttime="20201115 23:00:53.884" endtime="20201115 23:00:53.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.926" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.923" endtime="20201115 23:00:53.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.932" level="INFO">VALUE: [3.3291000000004733e-05, 3.333300000000344e-05, 3.3596999999996324e-05, 3.3026999999997975e-05, 3.39580000000006e-05, 3.3860999999996144e-05, 3.3568999999997184e-05, 3.373600000000643e-05, 3.304200000000396e-05, 3.370800000000035e-05, 3.323599999999899e-05, 3.384799999999605e-05, 3.355599999999709e-05, 3.372199999999992e-05, 3.352799999999795e-05, 3.31250000000019e-05, 3.308300000000319e-05, 3.370899999999982e-05, 3.355599999999709e-05, 3.3750000000006e-05, 3.348599999999924e-05, 3.370899999999982e-05, 3.370900000000676e-05, 3.340300000000129e-05, 3.386100000000308e-05, 3.306999999999616e-05, 3.348699999999871e-05, 3.384799999999605e-05, 3.3277000000005164e-05, 3.3026999999997975e-05, 3.351399999999838e-05, 3.319400000000028e-05, 3.3638999999995034e-05, 3.3888999999995284e-05, 3.3568999999997184e-05, 3.3332999999996504e-05, 3.363900000000197e-05, 3.309700000000276e-05, 3.304199999999702e-05, 3.399999999999931e-05, 3.326399999999813e-05, 3.341700000000086e-05, 3.366700000000111e-05, 3.32779999999977e-05, 3.358400000000317e-05, 3.391700000000136e-05, 3.304200000000396e-05, 3.345899999999957e-05, 3.337500000000215e-05, 3.304199999999702e-05]</msg>
<status status="PASS" starttime="20201115 23:00:53.928" endtime="20201115 23:00:53.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.916" endtime="20201115 23:00:53.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.941" endtime="20201115 23:00:53.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.950" endtime="20201115 23:00:53.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.945" endtime="20201115 23:00:53.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.937" endtime="20201115 23:00:53.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.428" endtime="20201115 23:00:53.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.423" endtime="20201115 23:00:53.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.422" endtime="20201115 23:00:53.976"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.981" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.003" endtime="20201115 23:00:54.022"></status>
</kw>
<msg timestamp="20201115 23:00:54.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.000" endtime="20201115 23:00:54.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.025" endtime="20201115 23:00:54.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.032" endtime="20201115 23:00:54.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.992" endtime="20201115 23:00:54.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.987" endtime="20201115 23:00:54.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.056" endtime="20201115 23:00:54.391"></status>
</kw>
<msg timestamp="20201115 23:00:54.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046854806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046888833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.052" endtime="20201115 23:00:54.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046854806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046888833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.401" endtime="20201115 23:00:54.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.420" endtime="20201115 23:00:54.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.044" endtime="20201115 23:00:54.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.040" endtime="20201115 23:00:54.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.437" level="INFO">${RESULT} = [{'time': 0.046888833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4026999999998975e-05, 'source_diff': 3.4026999999998975e-05}, {'time': 0.046931819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:54.428" endtime="20201115 23:00:54.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.467" level="INFO">${ACCURACY} = {'diff': [3.4026999999998975e-05, 3.491600000000289e-05, 3.411100000000333e-05, 3.41250000000029e-05, 3.488900000000322e-05, 3.500000000000031e-05, 3.441599999999545e-05, 3.4124999999995964e-05, 3.440...</msg>
<status status="PASS" starttime="20201115 23:00:54.439" endtime="20201115 23:00:54.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.478" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.476" endtime="20201115 23:00:54.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.485" level="INFO">VALUE: [3.4026999999998975e-05, 3.491600000000289e-05, 3.411100000000333e-05, 3.41250000000029e-05, 3.488900000000322e-05, 3.500000000000031e-05, 3.441599999999545e-05, 3.4124999999995964e-05, 3.440300000000229e-05, 3.426399999999913e-05, 3.4902999999995854e-05, 3.4318999999997934e-05, 3.469400000000178e-05, 3.416700000000161e-05, 3.4568999999998185e-05, 3.472200000000092e-05, 3.473599999999355e-05, 3.448600000000024e-05, 3.4610999999996894e-05, 3.426399999999913e-05, 3.4554999999998615e-05, 3.411100000000333e-05, 3.4445000000001e-05, 3.418100000000118e-05, 3.4902999999995854e-05, 3.433399999999698e-05, 3.4082999999997254e-05, 3.481999999999791e-05, 3.423599999999999e-05, 3.4526999999999475e-05, 3.4596999999997324e-05, 3.4569000000005123e-05, 3.4054999999998115e-05, 3.437500000000315e-05, 3.411100000000333e-05, 3.44580000000011e-05, 3.472200000000092e-05, 3.483300000000494e-05, 3.4902999999995854e-05, 3.402799999999845e-05, 3.4874999999996714e-05, 3.4860999999997144e-05, 3.4360999999996644e-05, 3.449999999999981e-05, 3.402799999999845e-05, 3.427800000000564e-05, 3.444399999999459e-05, 3.49580000000016e-05, 3.436100000000358e-05, 3.491700000000236e-05]</msg>
<status status="PASS" starttime="20201115 23:00:54.481" endtime="20201115 23:00:54.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.469" endtime="20201115 23:00:54.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.494" endtime="20201115 23:00:54.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.502" endtime="20201115 23:00:54.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.498" endtime="20201115 23:00:54.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.489" endtime="20201115 23:00:54.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.983" endtime="20201115 23:00:54.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.979" endtime="20201115 23:00:54.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.977" endtime="20201115 23:00:54.529"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.534" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.556" endtime="20201115 23:00:54.575"></status>
</kw>
<msg timestamp="20201115 23:00:54.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.552" endtime="20201115 23:00:54.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.578" endtime="20201115 23:00:54.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.586" endtime="20201115 23:00:54.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.545" endtime="20201115 23:00:54.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.539" endtime="20201115 23:00:54.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.610" endtime="20201115 23:00:54.946"></status>
</kw>
<msg timestamp="20201115 23:00:54.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046820236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046855444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.607" endtime="20201115 23:00:54.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046820236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046855444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.956" endtime="20201115 23:00:54.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.974" endtime="20201115 23:00:54.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.599" endtime="20201115 23:00:54.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.594" endtime="20201115 23:00:54.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.992" level="INFO">${RESULT} = [{'time': 0.046855444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.520800000000185e-05, 'source_diff': 3.520800000000185e-05}, {'time': 0.046898403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:54.983" endtime="20201115 23:00:54.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.023" level="INFO">${ACCURACY} = {'diff': [3.520800000000185e-05, 3.5124999999996964e-05, 3.501399999999988e-05, 3.54859999999943e-05, 3.51250000000039e-05, 3.573599999999455e-05, 3.5444999999995064e-05, 3.572200000000192e-05, 3.5027...</msg>
<status status="PASS" starttime="20201115 23:00:54.994" endtime="20201115 23:00:55.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.034" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.031" endtime="20201115 23:00:55.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.040" level="INFO">VALUE: [3.520800000000185e-05, 3.5124999999996964e-05, 3.501399999999988e-05, 3.54859999999943e-05, 3.51250000000039e-05, 3.573599999999455e-05, 3.5444999999995064e-05, 3.572200000000192e-05, 3.502799999999945e-05, 3.5486999999993774e-05, 3.5568999999999185e-05, 3.572200000000192e-05, 3.591600000000389e-05, 3.543000000000296e-05, 3.54580000000021e-05, 3.5902999999996854e-05, 3.511100000000433e-05, 3.544400000000253e-05, 3.590300000000379e-05, 3.552799999999995e-05, 3.552799999999995e-05, 3.569399999999584e-05, 3.502799999999945e-05, 3.5152999999996104e-05, 3.5832999999999005e-05, 3.597300000000164e-05, 3.552799999999995e-05, 3.583400000000542e-05, 3.515300000000304e-05, 3.561100000000483e-05, 3.504199999999902e-05, 3.588900000000422e-05, 3.515300000000304e-05, 3.57780000000002e-05, 3.5290999999999795e-05, 3.586200000000456e-05, 3.525000000000056e-05, 3.5527000000000475e-05, 3.548600000000124e-05, 3.544399999999559e-05, 3.598600000000174e-05, 3.516700000000261e-05, 3.57780000000002e-05, 3.5318999999998935e-05, 3.516600000000314e-05, 3.550000000000081e-05, 3.525000000000056e-05, 3.575000000000106e-05, 3.5138999999996534e-05, 3.54580000000021e-05]</msg>
<status status="PASS" starttime="20201115 23:00:55.036" endtime="20201115 23:00:55.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.024" endtime="20201115 23:00:55.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.049" endtime="20201115 23:00:55.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.058" endtime="20201115 23:00:55.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.053" endtime="20201115 23:00:55.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.045" endtime="20201115 23:00:55.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.535" endtime="20201115 23:00:55.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.531" endtime="20201115 23:00:55.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.530" endtime="20201115 23:00:55.084"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.089" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.112" endtime="20201115 23:00:55.132"></status>
</kw>
<msg timestamp="20201115 23:00:55.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.108" endtime="20201115 23:00:55.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.135" endtime="20201115 23:00:55.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.142" endtime="20201115 23:00:55.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.100" endtime="20201115 23:00:55.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.095" endtime="20201115 23:00:55.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.165" endtime="20201115 23:00:55.492"></status>
</kw>
<msg timestamp="20201115 23:00:55.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04762475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047661111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:55.162" endtime="20201115 23:00:55.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04762475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047661111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:55.496" endtime="20201115 23:00:55.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.505" endtime="20201115 23:00:55.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.155" endtime="20201115 23:00:55.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.150" endtime="20201115 23:00:55.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.513" level="INFO">${RESULT} = [{'time': 0.047661111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6360999999998644e-05, 'source_diff': 3.6360999999998644e-05}, {'time': 0.047712125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:55.509" endtime="20201115 23:00:55.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.526" level="INFO">${ACCURACY} = {'diff': [3.6360999999998644e-05, 3.6874999999998714e-05, 3.6124999999997964e-05, 3.670800000000335e-05, 3.694400000000403e-05, 3.618100000000318e-05, 3.6416999999996924e-05, 3.623600000000199e-05, 3....</msg>
<status status="PASS" starttime="20201115 23:00:55.514" endtime="20201115 23:00:55.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.532" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.531" endtime="20201115 23:00:55.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.535" level="INFO">VALUE: [3.6360999999998644e-05, 3.6874999999998714e-05, 3.6124999999997964e-05, 3.670800000000335e-05, 3.694400000000403e-05, 3.618100000000318e-05, 3.6416999999996924e-05, 3.623600000000199e-05, 3.608399999999873e-05, 3.650000000000181e-05, 3.658399999999923e-05, 3.623600000000199e-05, 3.6430999999996494e-05, 3.679200000000077e-05, 3.694399999999709e-05, 3.65979999999988e-05, 3.61250000000049e-05, 3.694400000000403e-05, 3.6541000000001045e-05, 3.618000000000371e-05, 3.6360999999998644e-05, 3.6027000000000975e-05, 3.692999999999752e-05, 3.693000000000446e-05, 3.64859999999953e-05, 3.6819000000000435e-05, 3.69859999999958e-05, 3.6902999999997854e-05, 3.6068999999999685e-05, 3.647200000000267e-05, 3.640199999999788e-05, 3.6110999999998394e-05, 3.647200000000267e-05, 3.669400000000378e-05, 3.6610999999998894e-05, 3.672199999999598e-05, 3.6708999999995884e-05, 3.697199999999623e-05, 3.680600000000034e-05, 3.681999999999991e-05, 3.6582999999999755e-05, 3.627799999999376e-05, 3.6124999999997964e-05, 3.6527000000001475e-05, 3.6819000000000435e-05, 3.6276999999994286e-05, 3.648600000000224e-05, 3.602800000000045e-05, 3.648600000000224e-05, 3.630599999999984e-05]</msg>
<status status="PASS" starttime="20201115 23:00:55.533" endtime="20201115 23:00:55.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.527" endtime="20201115 23:00:55.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.539" endtime="20201115 23:00:55.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.543" endtime="20201115 23:00:55.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.541" endtime="20201115 23:00:55.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.537" endtime="20201115 23:00:55.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.091" endtime="20201115 23:00:55.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.087" endtime="20201115 23:00:55.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.085" endtime="20201115 23:00:55.565"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.568" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.578" endtime="20201115 23:00:55.595"></status>
</kw>
<msg timestamp="20201115 23:00:55.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.577" endtime="20201115 23:00:55.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.597" endtime="20201115 23:00:55.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.599" endtime="20201115 23:00:55.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.573" endtime="20201115 23:00:55.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.571" endtime="20201115 23:00:55.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.611" endtime="20201115 23:00:55.922"></status>
</kw>
<msg timestamp="20201115 23:00:55.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027795361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027832875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.609" endtime="20201115 23:00:55.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027795361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027832875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.932" endtime="20201115 23:00:55.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.950" endtime="20201115 23:00:55.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.606" endtime="20201115 23:00:55.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.603" endtime="20201115 23:00:55.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.968" level="INFO">${RESULT} = [{'time': 0.027832875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.751399999999891e-05, 'source_diff': 3.751399999999891e-05}, {'time': 0.027872847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:55.959" endtime="20201115 23:00:55.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.001" level="INFO">${ACCURACY} = {'diff': [3.751399999999891e-05, 3.7319000000000935e-05, 3.7888999999999284e-05, 3.7583000000000755e-05, 3.77919999999983e-05, 3.7889000000002754e-05, 3.7124999999998964e-05, 3.774999999999959e-05, 3....</msg>
<status status="PASS" starttime="20201115 23:00:55.970" endtime="20201115 23:00:56.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.012" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.009" endtime="20201115 23:00:56.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.018" level="INFO">VALUE: [3.751399999999891e-05, 3.7319000000000935e-05, 3.7888999999999284e-05, 3.7583000000000755e-05, 3.77919999999983e-05, 3.7889000000002754e-05, 3.7124999999998964e-05, 3.774999999999959e-05, 3.7694999999997314e-05, 3.772200000000045e-05, 3.777799999999873e-05, 3.732000000000041e-05, 3.79720000000007e-05, 3.779200000000177e-05, 3.7333000000000505e-05, 3.7124999999998964e-05, 3.777799999999873e-05, 3.797300000000017e-05, 3.7638999999999034e-05, 3.741599999999845e-05, 3.7861000000000145e-05, 3.79720000000007e-05, 3.752800000000195e-05, 3.7319000000000935e-05, 3.76520000000026e-05, 3.720800000000038e-05, 3.74720000000002e-05, 3.752799999999848e-05, 3.705600000000059e-05, 3.7417000000001394e-05, 3.7167000000001144e-05, 3.744400000000106e-05, 3.72780000000017e-05, 3.770799999999741e-05, 3.705600000000059e-05, 3.7388999999998784e-05, 3.7388999999998784e-05, 3.798600000000027e-05, 3.7139000000002004e-05, 3.7430999999997494e-05, 3.7417000000001394e-05, 3.7694999999997314e-05, 3.766600000000217e-05, 3.7583000000000755e-05, 3.7526999999999006e-05, 3.7889000000002754e-05, 3.719400000000081e-05, 3.776399999999916e-05, 3.769400000000131e-05, 3.7360999999999644e-05]</msg>
<status status="PASS" starttime="20201115 23:00:56.014" endtime="20201115 23:00:56.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.003" endtime="20201115 23:00:56.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.028" endtime="20201115 23:00:56.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.037" endtime="20201115 23:00:56.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.032" endtime="20201115 23:00:56.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.024" endtime="20201115 23:00:56.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.569" endtime="20201115 23:00:56.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.567" endtime="20201115 23:00:56.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.566" endtime="20201115 23:00:56.063"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.068" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.090" endtime="20201115 23:00:56.110"></status>
</kw>
<msg timestamp="20201115 23:00:56.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.087" endtime="20201115 23:00:56.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.113" endtime="20201115 23:00:56.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.119" endtime="20201115 23:00:56.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.079" endtime="20201115 23:00:56.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.074" endtime="20201115 23:00:56.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.143" endtime="20201115 23:00:56.476"></status>
</kw>
<msg timestamp="20201115 23:00:56.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047004833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047042903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.139" endtime="20201115 23:00:56.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047004833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047042903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.486" endtime="20201115 23:00:56.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.505" endtime="20201115 23:00:56.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.132" endtime="20201115 23:00:56.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.128" endtime="20201115 23:00:56.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.522" level="INFO">${RESULT} = [{'time': 0.047042903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.806999999999422e-05, 'source_diff': 3.806999999999422e-05}, {'time': 0.047092931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:56.513" endtime="20201115 23:00:56.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.553" level="INFO">${ACCURACY} = {'diff': [3.806999999999422e-05, 3.8375000000000214e-05, 3.890200000000038e-05, 3.880600000000234e-05, 3.8694999999998314e-05, 3.8262999999996716e-05, 3.81659999999992e-05, 3.811199999999987e-05, 3.82...</msg>
<status status="PASS" starttime="20201115 23:00:56.524" endtime="20201115 23:00:56.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.564" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.561" endtime="20201115 23:00:56.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.571" level="INFO">VALUE: [3.806999999999422e-05, 3.8375000000000214e-05, 3.890200000000038e-05, 3.880600000000234e-05, 3.8694999999998314e-05, 3.8262999999996716e-05, 3.81659999999992e-05, 3.811199999999987e-05, 3.8277000000003225e-05, 3.819399999999834e-05, 3.8124999999999964e-05, 3.8861000000001145e-05, 3.8554999999995676e-05, 3.872199999999798e-05, 3.8319000000001935e-05, 3.84859999999973e-05, 3.8791000000003295e-05, 3.873599999999755e-05, 3.8111000000000395e-05, 3.880600000000234e-05, 3.8097000000000825e-05, 3.8138999999999534e-05, 3.8875000000000715e-05, 3.805600000000159e-05, 3.805600000000159e-05, 3.825000000000356e-05, 3.8902999999999854e-05, 3.8639000000000034e-05, 3.84859999999973e-05, 3.8361000000000645e-05, 3.836200000000012e-05, 3.8694999999998314e-05, 3.869399999999884e-05, 3.8791000000003295e-05, 3.890200000000038e-05, 3.894399999999909e-05, 3.848600000000424e-05, 3.8610999999993956e-05, 3.8582999999994816e-05, 3.84859999999973e-05, 3.852800000000295e-05, 3.879200000000277e-05, 3.847199999999773e-05, 3.894399999999909e-05, 3.8361000000000645e-05, 3.8304999999995426e-05, 3.8930999999998994e-05, 3.8624999999993526e-05, 3.826400000000313e-05, 3.880600000000234e-05]</msg>
<status status="PASS" starttime="20201115 23:00:56.566" endtime="20201115 23:00:56.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.554" endtime="20201115 23:00:56.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.580" endtime="20201115 23:00:56.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.588" endtime="20201115 23:00:56.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.584" endtime="20201115 23:00:56.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.575" endtime="20201115 23:00:56.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.070" endtime="20201115 23:00:56.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.066" endtime="20201115 23:00:56.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.064" endtime="20201115 23:00:56.615"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.620" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.641" endtime="20201115 23:00:56.661"></status>
</kw>
<msg timestamp="20201115 23:00:56.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.638" endtime="20201115 23:00:56.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.664" endtime="20201115 23:00:56.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.670" endtime="20201115 23:00:56.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.631" endtime="20201115 23:00:56.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.625" endtime="20201115 23:00:56.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.694" endtime="20201115 23:00:57.031"></status>
</kw>
<msg timestamp="20201115 23:00:57.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046804847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046843958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.691" endtime="20201115 23:00:57.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046804847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046843958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.041" endtime="20201115 23:00:57.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.060" endtime="20201115 23:00:57.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.683" endtime="20201115 23:00:57.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.678" endtime="20201115 23:00:57.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.077" level="INFO">${RESULT} = [{'time': 0.046843958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9111000000001395e-05, 'source_diff': 3.9111000000001395e-05}, {'time': 0.046889958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:57.068" endtime="20201115 23:00:57.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.108" level="INFO">${ACCURACY} = {'diff': [3.9111000000001395e-05, 3.998600000000574e-05, 3.9903000000000854e-05, 3.954199999999658e-05, 3.997199999999923e-05, 3.9653000000000604e-05, 3.9861000000002145e-05, 3.895799999999866e-05, 3....</msg>
<status status="PASS" starttime="20201115 23:00:57.080" endtime="20201115 23:00:57.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.119" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.117" endtime="20201115 23:00:57.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.126" level="INFO">VALUE: [3.9111000000001395e-05, 3.998600000000574e-05, 3.9903000000000854e-05, 3.954199999999658e-05, 3.997199999999923e-05, 3.9653000000000604e-05, 3.9861000000002145e-05, 3.895799999999866e-05, 3.9875000000001715e-05, 3.9667000000000174e-05, 3.9403000000000354e-05, 3.99859999999988e-05, 3.9639000000001035e-05, 3.92780000000037e-05, 3.932000000000241e-05, 3.973599999999855e-05, 3.9861000000002145e-05, 3.973599999999855e-05, 3.949999999999787e-05, 3.9526999999997536e-05, 3.89859999999978e-05, 3.9819000000003435e-05, 3.9041000000003545e-05, 3.943000000000002e-05, 3.943000000000002e-05, 3.9361000000001645e-05, 3.9153000000000104e-05, 3.945799999999916e-05, 3.994400000000009e-05, 3.9416999999999924e-05, 3.904200000000302e-05, 3.9096999999994886e-05, 3.970799999999941e-05, 3.9833000000003005e-05, 3.9903000000000854e-05, 3.9194999999998814e-05, 3.9125000000000965e-05, 3.982000000000291e-05, 3.9097000000001825e-05, 3.9139000000000534e-05, 3.9403000000000354e-05, 3.9263000000004655e-05, 3.9097000000001825e-05, 3.9526999999997536e-05, 3.944399999999959e-05, 3.938800000000131e-05, 3.9513000000004905e-05, 3.9360999999994706e-05, 3.947199999999873e-05, 3.9332999999995566e-05]</msg>
<status status="PASS" starttime="20201115 23:00:57.122" endtime="20201115 23:00:57.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.110" endtime="20201115 23:00:57.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.135" endtime="20201115 23:00:57.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.143" endtime="20201115 23:00:57.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.139" endtime="20201115 23:00:57.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.131" endtime="20201115 23:00:57.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.621" endtime="20201115 23:00:57.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.617" endtime="20201115 23:00:57.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.615" endtime="20201115 23:00:57.170"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.175" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.197" endtime="20201115 23:00:57.217"></status>
</kw>
<msg timestamp="20201115 23:00:57.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.193" endtime="20201115 23:00:57.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.221" endtime="20201115 23:00:57.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.227" endtime="20201115 23:00:57.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.186" endtime="20201115 23:00:57.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.180" endtime="20201115 23:00:57.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.250" endtime="20201115 23:00:57.584"></status>
</kw>
<msg timestamp="20201115 23:00:57.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047364472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047404806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.247" endtime="20201115 23:00:57.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047364472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047404806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.594" endtime="20201115 23:00:57.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.613" endtime="20201115 23:00:57.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.240" endtime="20201115 23:00:57.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.235" endtime="20201115 23:00:57.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.631" level="INFO">${RESULT} = [{'time': 0.047404806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.033400000000298e-05, 'source_diff': 4.033400000000298e-05}, {'time': 0.047448847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:57.622" endtime="20201115 23:00:57.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.661" level="INFO">${ACCURACY} = {'diff': [4.033400000000298e-05, 4.0333000000003505e-05, 4.068000000000127e-05, 4.0431000000000494e-05, 4.0290999999997856e-05, 4.0526999999998536e-05, 4.019400000000034e-05, 4.041600000000145e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:00:57.633" endtime="20201115 23:00:57.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.672" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.670" endtime="20201115 23:00:57.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.679" level="INFO">VALUE: [4.033400000000298e-05, 4.0333000000003505e-05, 4.068000000000127e-05, 4.0431000000000494e-05, 4.0290999999997856e-05, 4.0526999999998536e-05, 4.019400000000034e-05, 4.041600000000145e-05, 4.0903000000001855e-05, 4.04859999999993e-05, 4.045800000000016e-05, 4.0139000000001535e-05, 4.020799999999991e-05, 4.026400000000513e-05, 4.045800000000016e-05, 4.0124999999995026e-05, 4.0653000000001605e-05, 4.051399999999844e-05, 4.006999999999622e-05, 4.0903000000001855e-05, 4.004199999999708e-05, 4.094400000000109e-05, 4.086200000000262e-05, 4.049999999999887e-05, 4.001399999999794e-05, 4.099999999999937e-05, 4.0903000000001855e-05, 4.0805000000004865e-05, 4.0818999999997496e-05, 4.0361000000002645e-05, 4.0361000000002645e-05, 4.044400000000059e-05, 4.0125000000001965e-05, 4.0681000000000744e-05, 4.04859999999993e-05, 4.0110999999995456e-05, 4.054199999999758e-05, 4.019400000000034e-05, 4.0125000000001965e-05, 4.079199999999783e-05, 4.052799999999801e-05, 4.029199999999733e-05, 4.0181000000000244e-05, 4.0861000000003145e-05, 4.031999999999647e-05, 4.077799999999826e-05, 4.074999999999912e-05, 4.04859999999993e-05, 4.069400000000084e-05, 4.024999999999862e-05]</msg>
<status status="PASS" starttime="20201115 23:00:57.675" endtime="20201115 23:00:57.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.663" endtime="20201115 23:00:57.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.688" endtime="20201115 23:00:57.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.696" endtime="20201115 23:00:57.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.692" endtime="20201115 23:00:57.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.683" endtime="20201115 23:00:57.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.176" endtime="20201115 23:00:57.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.172" endtime="20201115 23:00:57.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.171" endtime="20201115 23:00:57.723"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.729" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.752" endtime="20201115 23:00:57.772"></status>
</kw>
<msg timestamp="20201115 23:00:57.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.748" endtime="20201115 23:00:57.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.775" endtime="20201115 23:00:57.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.782" endtime="20201115 23:00:57.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.741" endtime="20201115 23:00:57.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.734" endtime="20201115 23:00:57.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.806" endtime="20201115 23:00:58.141"></status>
</kw>
<msg timestamp="20201115 23:00:58.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049139569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049181306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.802" endtime="20201115 23:00:58.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049139569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049181306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.150" endtime="20201115 23:00:58.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.169" endtime="20201115 23:00:58.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.795" endtime="20201115 23:00:58.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.790" endtime="20201115 23:00:58.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.187" level="INFO">${RESULT} = [{'time': 0.049181306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1737000000000024e-05, 'source_diff': 4.1737000000000024e-05}, {'time': 0.049226306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:58.178" endtime="20201115 23:00:58.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.220" level="INFO">${ACCURACY} = {'diff': [4.1737000000000024e-05, 4.124999999999962e-05, 4.136200000000312e-05, 4.140199999999594e-05, 4.1318999999997996e-05, 4.1276999999999286e-05, 4.1388999999995846e-05, 4.1068999999997746e-05, 4...</msg>
<status status="PASS" starttime="20201115 23:00:58.189" endtime="20201115 23:00:58.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.231" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.228" endtime="20201115 23:00:58.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.238" level="INFO">VALUE: [4.1737000000000024e-05, 4.124999999999962e-05, 4.136200000000312e-05, 4.140199999999594e-05, 4.1318999999997996e-05, 4.1276999999999286e-05, 4.1388999999995846e-05, 4.1068999999997746e-05, 4.177799999999926e-05, 4.1417000000001924e-05, 4.177799999999926e-05, 4.124999999999962e-05, 4.1181000000001244e-05, 4.1318999999997996e-05, 4.144400000000159e-05, 4.1431000000001494e-05, 4.155599999999815e-05, 4.158399999999729e-05, 4.1139000000002535e-05, 4.1054999999998176e-05, 4.1695000000001314e-05, 4.1944999999994625e-05, 4.1459000000000634e-05, 4.1124999999996026e-05, 4.194400000000209e-05, 4.1318999999997996e-05, 4.1889000000003285e-05, 4.147200000000073e-05, 4.167999999999533e-05, 4.1319000000004935e-05, 4.1068999999997746e-05, 4.195799999999472e-05, 4.1554999999998676e-05, 4.144400000000159e-05, 4.154200000000552e-05, 4.1402999999995416e-05, 4.1666999999995236e-05, 4.1987000000000274e-05, 4.1819000000005435e-05, 4.101399999999894e-05, 4.151399999999944e-05, 4.1847000000004575e-05, 4.1375000000003215e-05, 4.1459000000000634e-05, 4.1917000000002425e-05, 4.202799999999951e-05, 4.151399999999944e-05, 4.179199999999883e-05, 4.1596999999997386e-05, 4.141600000000245e-05]</msg>
<status status="PASS" starttime="20201115 23:00:58.233" endtime="20201115 23:00:58.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.222" endtime="20201115 23:00:58.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.247" endtime="20201115 23:00:58.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.255" endtime="20201115 23:00:58.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.251" endtime="20201115 23:00:58.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.242" endtime="20201115 23:00:58.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.730" endtime="20201115 23:00:58.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.726" endtime="20201115 23:00:58.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.724" endtime="20201115 23:00:58.281"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.286" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.308" endtime="20201115 23:00:58.328"></status>
</kw>
<msg timestamp="20201115 23:00:58.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.305" endtime="20201115 23:00:58.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.331" endtime="20201115 23:00:58.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.345" endtime="20201115 23:00:58.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.298" endtime="20201115 23:00:58.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.292" endtime="20201115 23:00:58.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.368" endtime="20201115 23:00:58.704"></status>
</kw>
<msg timestamp="20201115 23:00:58.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046922597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046965542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.365" endtime="20201115 23:00:58.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046922597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046965542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.714" endtime="20201115 23:00:58.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.733" endtime="20201115 23:00:58.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.357" endtime="20201115 23:00:58.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.353" endtime="20201115 23:00:58.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.751" level="INFO">${RESULT} = [{'time': 0.046965542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2944999999995626e-05, 'source_diff': 4.2944999999995626e-05}, {'time': 0.047023556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:58.741" endtime="20201115 23:00:58.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.782" level="INFO">${ACCURACY} = {'diff': [4.2944999999995626e-05, 4.281999999999897e-05, 4.252800000000001e-05, 4.223600000000105e-05, 4.247200000000173e-05, 4.292999999999658e-05, 4.226400000000019e-05, 4.294400000000309e-05, 4.238...</msg>
<status status="PASS" starttime="20201115 23:00:58.753" endtime="20201115 23:00:58.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.793" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.791" endtime="20201115 23:00:58.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.800" level="INFO">VALUE: [4.2944999999995626e-05, 4.281999999999897e-05, 4.252800000000001e-05, 4.223600000000105e-05, 4.247200000000173e-05, 4.292999999999658e-05, 4.226400000000019e-05, 4.294400000000309e-05, 4.2388999999996846e-05, 4.254199999999958e-05, 4.294399999999615e-05, 4.2374999999997276e-05, 4.202799999999951e-05, 4.2597000000005325e-05, 4.223600000000105e-05, 4.2125000000003965e-05, 4.219400000000234e-05, 4.2625000000004465e-05, 4.2708999999994945e-05, 4.283399999999854e-05, 4.2403000000003355e-05, 4.2917000000003425e-05, 4.2695000000002314e-05, 4.2054999999999176e-05, 4.2181000000002244e-05, 4.2804999999999926e-05, 4.2346999999998136e-05, 4.243000000000302e-05, 4.226300000000072e-05, 4.2388999999996846e-05, 4.2290999999999856e-05, 4.2027000000000037e-05, 4.2917000000003425e-05, 4.247200000000173e-05, 4.2167000000002675e-05, 4.226400000000019e-05, 4.2903000000003855e-05, 4.24860000000013e-05, 4.2374999999997276e-05, 4.2944999999995626e-05, 4.2694999999995376e-05, 4.273600000000155e-05, 4.2945000000002564e-05, 4.2694999999995376e-05, 4.250000000000087e-05, 4.279199999999983e-05, 4.241599999999651e-05, 4.227799999999976e-05, 4.236199999999718e-05, 4.2541000000000107e-05]</msg>
<status status="PASS" starttime="20201115 23:00:58.796" endtime="20201115 23:00:58.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.784" endtime="20201115 23:00:58.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.810" endtime="20201115 23:00:58.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.819" endtime="20201115 23:00:58.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.814" endtime="20201115 23:00:58.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.805" endtime="20201115 23:00:58.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.288" endtime="20201115 23:00:58.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.284" endtime="20201115 23:00:58.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.282" endtime="20201115 23:00:58.845"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.851" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.873" endtime="20201115 23:00:58.893"></status>
</kw>
<msg timestamp="20201115 23:00:58.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.870" endtime="20201115 23:00:58.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.896" endtime="20201115 23:00:58.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.902" endtime="20201115 23:00:58.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.863" endtime="20201115 23:00:58.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.856" endtime="20201115 23:00:58.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.926" endtime="20201115 23:00:59.225"></status>
</kw>
<msg timestamp="20201115 23:00:59.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047595403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047638903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.923" endtime="20201115 23:00:59.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047595403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047638903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.234" endtime="20201115 23:00:59.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.253" endtime="20201115 23:00:59.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.915" endtime="20201115 23:00:59.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.911" endtime="20201115 23:00:59.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.270" level="INFO">${RESULT} = [{'time': 0.047638903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.350000000000187e-05, 'source_diff': 4.350000000000187e-05}, {'time': 0.047696917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:59.261" endtime="20201115 23:00:59.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.301" level="INFO">${ACCURACY} = {'diff': [4.350000000000187e-05, 4.3666999999997236e-05, 4.3652999999997666e-05, 4.383399999999954e-05, 4.327800000000076e-05, 4.3737000000002024e-05, 4.379100000000136e-05, 4.3318999999999996e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:00:59.272" endtime="20201115 23:00:59.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.312" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.310" endtime="20201115 23:00:59.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.319" level="INFO">VALUE: [4.350000000000187e-05, 4.3666999999997236e-05, 4.3652999999997666e-05, 4.383399999999954e-05, 4.327800000000076e-05, 4.3737000000002024e-05, 4.379100000000136e-05, 4.3318999999999996e-05, 4.3332999999999566e-05, 4.400000000000237e-05, 4.342999999999708e-05, 4.326399999999425e-05, 4.3346999999999136e-05, 4.3888999999998346e-05, 4.394399999999715e-05, 4.3846999999999636e-05, 4.395799999999672e-05, 4.369400000000384e-05, 4.354200000000058e-05, 4.3416999999996986e-05, 4.3667000000004175e-05, 4.305599999999965e-05, 4.308400000000573e-05, 4.398599999999586e-05, 4.3667000000004175e-05, 4.3417000000003925e-05, 4.302800000000051e-05, 4.361199999999843e-05, 4.3236999999994585e-05, 4.3291000000000857e-05, 4.3666999999997236e-05, 4.350000000000187e-05, 4.36660000000047e-05, 4.370799999999647e-05, 4.3555000000000677e-05, 4.399999999999543e-05, 4.3819000000000496e-05, 4.3819000000000496e-05, 4.3402999999997416e-05, 4.352800000000101e-05, 4.345800000000316e-05, 4.3874999999998776e-05, 4.308400000000573e-05, 4.359799999999886e-05, 4.3111000000005395e-05, 4.325000000000162e-05, 4.329200000000033e-05, 4.3458999999995696e-05, 4.383399999999954e-05, 4.358399999999929e-05]</msg>
<status status="PASS" starttime="20201115 23:00:59.314" endtime="20201115 23:00:59.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.303" endtime="20201115 23:00:59.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.328" endtime="20201115 23:00:59.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.337" endtime="20201115 23:00:59.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.332" endtime="20201115 23:00:59.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.323" endtime="20201115 23:00:59.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.852" endtime="20201115 23:00:59.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.848" endtime="20201115 23:00:59.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.846" endtime="20201115 23:00:59.363"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.368" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.390" endtime="20201115 23:00:59.411"></status>
</kw>
<msg timestamp="20201115 23:00:59.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.387" endtime="20201115 23:00:59.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.414" endtime="20201115 23:00:59.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.421" endtime="20201115 23:00:59.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.380" endtime="20201115 23:00:59.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.374" endtime="20201115 23:00:59.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.444" endtime="20201115 23:00:59.779"></status>
</kw>
<msg timestamp="20201115 23:00:59.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046869889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046914819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.441" endtime="20201115 23:00:59.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046869889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046914819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.788" endtime="20201115 23:00:59.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.807" endtime="20201115 23:00:59.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.434" endtime="20201115 23:00:59.813"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.429" endtime="20201115 23:00:59.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.826" level="INFO">${RESULT} = [{'time': 0.046914819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.493000000000552e-05, 'source_diff': 4.493000000000552e-05}, {'time': 0.046970806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:59.816" endtime="20201115 23:00:59.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.857" level="INFO">${ACCURACY} = {'diff': [4.493000000000552e-05, 4.4930999999998056e-05, 4.4944999999997626e-05, 4.500000000000337e-05, 4.4861000000000206e-05, 4.498599999999686e-05, 4.44860000000033e-05, 4.4374999999999276e-05, 4.4...</msg>
<status status="PASS" starttime="20201115 23:00:59.828" endtime="20201115 23:00:59.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.868" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.865" endtime="20201115 23:00:59.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.874" level="INFO">VALUE: [4.493000000000552e-05, 4.4930999999998056e-05, 4.4944999999997626e-05, 4.500000000000337e-05, 4.4861000000000206e-05, 4.498599999999686e-05, 4.44860000000033e-05, 4.4374999999999276e-05, 4.4638999999999096e-05, 4.423599999999611e-05, 4.470799999999747e-05, 4.4347000000000136e-05, 4.4083000000000316e-05, 4.4083000000000316e-05, 4.4888999999999346e-05, 4.456999999999378e-05, 4.39860000000028e-05, 4.430499999999449e-05, 4.401400000000194e-05, 4.484800000000011e-05, 4.459799999999986e-05, 4.4666999999998236e-05, 4.474999999999618e-05, 4.441599999999851e-05, 4.423600000000305e-05, 4.4874999999999776e-05, 4.479100000000236e-05, 4.4597000000000386e-05, 4.4874999999999776e-05, 4.43060000000009e-05, 4.4652999999998666e-05, 4.434799999999961e-05, 4.451400000000244e-05, 4.4667000000005175e-05, 4.4681000000004745e-05, 4.404200000000108e-05, 4.4166999999997736e-05, 4.4208999999996446e-05, 4.4958999999997196e-05, 4.45139999999955e-05, 4.4861000000000206e-05, 4.429200000000133e-05, 4.404200000000108e-05, 4.401400000000194e-05, 4.4333000000000566e-05, 4.423599999999611e-05, 4.452700000000254e-05, 4.491599999999901e-05, 4.454200000000158e-05, 4.442999999999808e-05]</msg>
<status status="PASS" starttime="20201115 23:00:59.870" endtime="20201115 23:00:59.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.858" endtime="20201115 23:00:59.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.884" endtime="20201115 23:00:59.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.892" endtime="20201115 23:00:59.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.888" endtime="20201115 23:00:59.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.879" endtime="20201115 23:00:59.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.370" endtime="20201115 23:00:59.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.366" endtime="20201115 23:00:59.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.364" endtime="20201115 23:00:59.919"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.924" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.946" endtime="20201115 23:00:59.966"></status>
</kw>
<msg timestamp="20201115 23:00:59.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.943" endtime="20201115 23:00:59.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.969" endtime="20201115 23:00:59.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.976" endtime="20201115 23:00:59.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.936" endtime="20201115 23:00:59.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.930" endtime="20201115 23:00:59.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.999" endtime="20201115 23:01:00.334"></status>
</kw>
<msg timestamp="20201115 23:01:00.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047095542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047140625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.996" endtime="20201115 23:01:00.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047095542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047140625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.344" endtime="20201115 23:01:00.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.363" endtime="20201115 23:01:00.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.989" endtime="20201115 23:01:00.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.984" endtime="20201115 23:01:00.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.380" level="INFO">${RESULT} = [{'time': 0.047140625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5083000000001316e-05, 'source_diff': 4.5083000000001316e-05}, {'time': 0.047195625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:00.371" endtime="20201115 23:01:00.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.413" level="INFO">${ACCURACY} = {'diff': [4.5083000000001316e-05, 4.5430999999998556e-05, 4.526399999999625e-05, 4.5444999999998126e-05, 4.533400000000104e-05, 4.522199999999754e-05, 4.5694999999998376e-05, 4.532000000000147e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:01:00.382" endtime="20201115 23:01:00.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.424" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.422" endtime="20201115 23:01:00.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.432" level="INFO">VALUE: [4.5083000000001316e-05, 4.5430999999998556e-05, 4.526399999999625e-05, 4.5444999999998126e-05, 4.533400000000104e-05, 4.522199999999754e-05, 4.5694999999998376e-05, 4.532000000000147e-05, 4.523599999999711e-05, 4.574999999999718e-05, 4.508299999999438e-05, 4.5138999999999596e-05, 4.523600000000405e-05, 4.541599999999951e-05, 4.540199999999994e-05, 4.541599999999951e-05, 4.555500000000268e-05, 4.5625000000000526e-05, 4.55139999999965e-05, 4.583299999999513e-05, 4.5111000000000456e-05, 4.5861000000001206e-05, 4.5625000000000526e-05, 4.5403000000006355e-05, 4.5902999999999916e-05, 4.5889000000000346e-05, 4.504200000000208e-05, 4.552799999999607e-05, 4.527799999999582e-05, 4.515199999999969e-05, 4.55269999999966e-05, 4.526399999999625e-05, 4.526399999999625e-05, 4.5583000000001817e-05, 4.545799999999822e-05, 4.506899999999481e-05, 4.5111000000000456e-05, 4.5847000000001636e-05, 4.533299999999463e-05, 4.586099999999427e-05, 4.5916999999999486e-05, 4.58060000000024e-05, 4.527799999999582e-05, 4.594399999999915e-05, 4.5416999999998986e-05, 4.555499999999574e-05, 4.5402999999999416e-05, 4.5916999999999486e-05, 4.509800000000036e-05, 4.5694999999998376e-05]</msg>
<status status="PASS" starttime="20201115 23:01:00.427" endtime="20201115 23:01:00.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.415" endtime="20201115 23:01:00.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.441" endtime="20201115 23:01:00.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.450" endtime="20201115 23:01:00.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.446" endtime="20201115 23:01:00.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.436" endtime="20201115 23:01:00.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.926" endtime="20201115 23:01:00.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.922" endtime="20201115 23:01:00.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.920" endtime="20201115 23:01:00.477"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.482" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.504" endtime="20201115 23:01:00.524"></status>
</kw>
<msg timestamp="20201115 23:01:00.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.501" endtime="20201115 23:01:00.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.527" endtime="20201115 23:01:00.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.533" endtime="20201115 23:01:00.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.493" endtime="20201115 23:01:00.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.488" endtime="20201115 23:01:00.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.557" endtime="20201115 23:01:00.892"></status>
</kw>
<msg timestamp="20201115 23:01:00.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046984333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047031292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.554" endtime="20201115 23:01:00.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046984333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047031292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.901" endtime="20201115 23:01:00.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.920" endtime="20201115 23:01:00.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.546" endtime="20201115 23:01:00.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.542" endtime="20201115 23:01:00.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.938" level="INFO">${RESULT} = [{'time': 0.047031292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6958999999999196e-05, 'source_diff': 4.6958999999999196e-05}, {'time': 0.047082306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:00.929" endtime="20201115 23:01:00.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.969" level="INFO">${ACCURACY} = {'diff': [4.6958999999999196e-05, 4.6680999999999806e-05, 4.623599999999811e-05, 4.658399999999535e-05, 4.626400000000419e-05, 4.656899999999631e-05, 4.626399999999725e-05, 4.616600000000026e-05, 4.66...</msg>
<status status="PASS" starttime="20201115 23:01:00.940" endtime="20201115 23:01:00.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.980" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.977" endtime="20201115 23:01:00.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.987" level="INFO">VALUE: [4.6958999999999196e-05, 4.6680999999999806e-05, 4.623599999999811e-05, 4.658399999999535e-05, 4.626400000000419e-05, 4.656899999999631e-05, 4.626399999999725e-05, 4.616600000000026e-05, 4.6625000000001526e-05, 4.641600000000051e-05, 4.612499999999409e-05, 4.644399999999965e-05, 4.6333000000002567e-05, 4.66939999999999e-05, 4.602800000000351e-05, 4.624999999999768e-05, 4.6944999999999626e-05, 4.6166999999999736e-05, 4.633400000000204e-05, 4.677799999999732e-05, 4.6972999999998766e-05, 4.679199999999689e-05, 4.6917000000000486e-05, 4.6166999999999736e-05, 4.6444999999999126e-05, 4.659800000000186e-05, 4.655599999999621e-05, 4.6430999999999556e-05, 4.6611000000001956e-05, 4.617999999999983e-05, 4.643000000000008e-05, 4.6333000000002567e-05, 4.6597000000002387e-05, 4.668000000000033e-05, 4.6625000000001526e-05, 4.677799999999732e-05, 4.650000000000487e-05, 4.683299999999613e-05, 4.6445000000006065e-05, 4.629199999999639e-05, 4.6931000000000056e-05, 4.658400000000229e-05, 4.655600000000315e-05, 4.631999999999553e-05, 4.682000000000297e-05, 4.6680999999999806e-05, 4.604099999999667e-05, 4.6694999999999376e-05, 4.60269999999971e-05, 4.643000000000008e-05]</msg>
<status status="PASS" starttime="20201115 23:01:00.982" endtime="20201115 23:01:00.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.971" endtime="20201115 23:01:00.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.995" endtime="20201115 23:01:00.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.004" endtime="20201115 23:01:01.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.999" endtime="20201115 23:01:01.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.991" endtime="20201115 23:01:01.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.484" endtime="20201115 23:01:01.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.479" endtime="20201115 23:01:01.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.478" endtime="20201115 23:01:01.030"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.036" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.057" endtime="20201115 23:01:01.077"></status>
</kw>
<msg timestamp="20201115 23:01:01.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.054" endtime="20201115 23:01:01.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.080" endtime="20201115 23:01:01.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.087" endtime="20201115 23:01:01.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.047" endtime="20201115 23:01:01.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.041" endtime="20201115 23:01:01.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.110" endtime="20201115 23:01:01.454"></status>
</kw>
<msg timestamp="20201115 23:01:01.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046844889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046892333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.107" endtime="20201115 23:01:01.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046844889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046892333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.463" endtime="20201115 23:01:01.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.483" endtime="20201115 23:01:01.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.100" endtime="20201115 23:01:01.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.095" endtime="20201115 23:01:01.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.500" level="INFO">${RESULT} = [{'time': 0.046892333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.744400000000065e-05, 'source_diff': 4.744400000000065e-05}, {'time': 0.046951361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:01.491" endtime="20201115 23:01:01.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.531" level="INFO">${ACCURACY} = {'diff': [4.744400000000065e-05, 4.758299999999688e-05, 4.731899999999706e-05, 4.7375000000002276e-05, 4.727799999999782e-05, 4.748599999999936e-05, 4.724999999999868e-05, 4.7708999999999946e-05, 4.75...</msg>
<status status="PASS" starttime="20201115 23:01:01.502" endtime="20201115 23:01:01.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.542" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.540" endtime="20201115 23:01:01.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.549" level="INFO">VALUE: [4.744400000000065e-05, 4.758299999999688e-05, 4.731899999999706e-05, 4.7375000000002276e-05, 4.727799999999782e-05, 4.748599999999936e-05, 4.724999999999868e-05, 4.7708999999999946e-05, 4.754199999999764e-05, 4.798599999999986e-05, 4.7194999999999876e-05, 4.755600000000415e-05, 4.727800000000476e-05, 4.773599999999961e-05, 4.736199999999524e-05, 4.7403000000001416e-05, 4.787499999999584e-05, 4.708299999999638e-05, 4.7111000000002456e-05, 4.798599999999986e-05, 4.777699999999885e-05, 4.727799999999782e-05, 4.706900000000375e-05, 4.7111000000002456e-05, 4.7389000000001846e-05, 4.744400000000065e-05, 4.7194999999999876e-05, 4.744400000000065e-05, 4.7917000000001486e-05, 4.7945000000000626e-05, 4.7431000000000556e-05, 4.779199999999789e-05, 4.73469999999962e-05, 4.7458999999999696e-05, 4.786200000000268e-05, 4.722199999999954e-05, 4.724999999999868e-05, 4.7125000000002026e-05, 4.786099999999627e-05, 4.783300000000407e-05, 4.7319000000004e-05, 4.776399999999875e-05, 4.7153000000001166e-05, 4.740299999999448e-05, 4.729200000000433e-05, 4.7667000000001236e-05, 4.770800000000047e-05, 4.774999999999918e-05, 4.7445000000000126e-05, 4.7013999999998e-05]</msg>
<status status="PASS" starttime="20201115 23:01:01.544" endtime="20201115 23:01:01.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.533" endtime="20201115 23:01:01.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.558" endtime="20201115 23:01:01.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.566" endtime="20201115 23:01:01.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.562" endtime="20201115 23:01:01.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.553" endtime="20201115 23:01:01.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.037" endtime="20201115 23:01:01.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.033" endtime="20201115 23:01:01.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.031" endtime="20201115 23:01:01.592"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.598" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.619" endtime="20201115 23:01:01.639"></status>
</kw>
<msg timestamp="20201115 23:01:01.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.616" endtime="20201115 23:01:01.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.643" endtime="20201115 23:01:01.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.649" endtime="20201115 23:01:01.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.609" endtime="20201115 23:01:01.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.603" endtime="20201115 23:01:01.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.673" endtime="20201115 23:01:02.008"></status>
</kw>
<msg timestamp="20201115 23:01:02.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046760403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046808819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.669" endtime="20201115 23:01:02.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046760403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046808819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.018" endtime="20201115 23:01:02.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.037" endtime="20201115 23:01:02.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.662" endtime="20201115 23:01:02.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.657" endtime="20201115 23:01:02.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.054" level="INFO">${RESULT} = [{'time': 0.046808819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.841600000000251e-05, 'source_diff': 4.841600000000251e-05}, {'time': 0.046867833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:02.045" endtime="20201115 23:01:02.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.085" level="INFO">${ACCURACY} = {'diff': [4.841600000000251e-05, 4.820800000000097e-05, 4.8943999999995214e-05, 4.8151999999995754e-05, 4.826399999999925e-05, 4.86940000000019e-05, 4.829200000000533e-05, 4.852799999999907e-05, 4.886...</msg>
<status status="PASS" starttime="20201115 23:01:02.057" endtime="20201115 23:01:02.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.096" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.094" endtime="20201115 23:01:02.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.103" level="INFO">VALUE: [4.841600000000251e-05, 4.820800000000097e-05, 4.8943999999995214e-05, 4.8151999999995754e-05, 4.826399999999925e-05, 4.86940000000019e-05, 4.829200000000533e-05, 4.852799999999907e-05, 4.886099999999727e-05, 4.888899999999641e-05, 4.809699999999695e-05, 4.8389000000002846e-05, 4.880599999999846e-05, 4.890299999999598e-05, 4.809700000000389e-05, 4.848600000000036e-05, 4.827799999999882e-05, 4.88469999999977e-05, 4.881999999999803e-05, 4.845800000000122e-05, 4.834799999999667e-05, 4.822200000000054e-05, 4.837499999999634e-05, 4.881899999999856e-05, 4.8693999999994964e-05, 4.824999999999968e-05, 4.823600000000011e-05, 4.806899999999781e-05, 4.86940000000019e-05, 4.855499999999874e-05, 4.86940000000019e-05, 4.8389000000002846e-05, 4.8459000000000696e-05, 4.875000000000018e-05, 4.8473000000000266e-05, 4.832000000000447e-05, 4.8959000000001196e-05, 4.868000000000233e-05, 4.806999999999728e-05, 4.827799999999882e-05, 4.838899999999591e-05, 4.876399999999975e-05, 4.886099999999727e-05, 4.895800000000172e-05, 4.873600000000061e-05, 4.877799999999932e-05, 4.9014e-05, 4.895800000000172e-05, 4.8139000000002596e-05, 4.8875000000003777e-05]</msg>
<status status="PASS" starttime="20201115 23:01:02.098" endtime="20201115 23:01:02.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.087" endtime="20201115 23:01:02.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.112" endtime="20201115 23:01:02.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.120" endtime="20201115 23:01:02.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.116" endtime="20201115 23:01:02.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.107" endtime="20201115 23:01:02.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.599" endtime="20201115 23:01:02.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.595" endtime="20201115 23:01:02.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.593" endtime="20201115 23:01:02.146"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.152" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.173" endtime="20201115 23:01:02.194"></status>
</kw>
<msg timestamp="20201115 23:01:02.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.170" endtime="20201115 23:01:02.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.197" endtime="20201115 23:01:02.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.204" endtime="20201115 23:01:02.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.163" endtime="20201115 23:01:02.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.157" endtime="20201115 23:01:02.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.227" endtime="20201115 23:01:02.536"></status>
</kw>
<msg timestamp="20201115 23:01:02.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046892181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046941625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.224" endtime="20201115 23:01:02.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046892181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046941625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.541" endtime="20201115 23:01:02.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.549" endtime="20201115 23:01:02.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.217" endtime="20201115 23:01:02.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.212" endtime="20201115 23:01:02.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.557" level="INFO">${RESULT} = [{'time': 0.046941625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.944400000000265e-05, 'source_diff': 4.944400000000265e-05}, {'time': 0.046997583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:02.553" endtime="20201115 23:01:02.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.572" level="INFO">${ACCURACY} = {'diff': [4.944400000000265e-05, 4.955499999999974e-05, 4.947200000000179e-05, 4.972200000000204e-05, 4.931899999999906e-05, 4.904199999999914e-05, 4.980499999999999e-05, 4.909699999999795e-05, 4.9167...</msg>
<status status="PASS" starttime="20201115 23:01:02.558" endtime="20201115 23:01:02.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.578" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.577" endtime="20201115 23:01:02.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.581" level="INFO">VALUE: [4.944400000000265e-05, 4.955499999999974e-05, 4.947200000000179e-05, 4.972200000000204e-05, 4.931899999999906e-05, 4.904199999999914e-05, 4.980499999999999e-05, 4.909699999999795e-05, 4.9167000000002736e-05, 4.983299999999913e-05, 4.909699999999795e-05, 4.912499999999709e-05, 4.9389000000003846e-05, 5.000000000000143e-05, 4.9403000000003416e-05, 4.988800000000487e-05, 4.911200000000393e-05, 4.9987000000001336e-05, 4.952699999999366e-05, 4.913899999999666e-05, 4.9915999999997074e-05, 4.9639000000004097e-05, 4.96669999999963e-05, 4.98469999999987e-05, 4.975000000000118e-05, 4.902799999999957e-05, 4.986100000000521e-05, 4.944400000000265e-05, 5.0014000000001e-05, 4.9459000000001696e-05, 4.9165999999996324e-05, 4.927799999999982e-05, 4.954199999999964e-05, 4.95140000000005e-05, 4.911099999999752e-05, 4.9709000000001946e-05, 4.952800000000007e-05, 4.931899999999906e-05, 4.9889000000004347e-05, 4.959699999999845e-05, 4.96940000000029e-05, 4.961099999999802e-05, 4.920800000000197e-05, 4.950000000000093e-05, 4.975000000000118e-05, 4.906899999999881e-05, 4.927799999999982e-05, 4.965299999999673e-05, 4.931999999999853e-05, 4.922200000000154e-05]</msg>
<status status="PASS" starttime="20201115 23:01:02.579" endtime="20201115 23:01:02.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.573" endtime="20201115 23:01:02.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.585" endtime="20201115 23:01:02.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.589" endtime="20201115 23:01:02.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.587" endtime="20201115 23:01:02.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.583" endtime="20201115 23:01:02.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.153" endtime="20201115 23:01:02.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.149" endtime="20201115 23:01:02.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.147" endtime="20201115 23:01:02.611"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.613" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.624" endtime="20201115 23:01:02.642"></status>
</kw>
<msg timestamp="20201115 23:01:02.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.622" endtime="20201115 23:01:02.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.646" endtime="20201115 23:01:02.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.652" endtime="20201115 23:01:02.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.619" endtime="20201115 23:01:02.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.616" endtime="20201115 23:01:02.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.675" endtime="20201115 23:01:03.009"></status>
</kw>
<msg timestamp="20201115 23:01:03.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027567236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027617958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.672" endtime="20201115 23:01:03.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027567236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027617958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.019" endtime="20201115 23:01:03.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.037" endtime="20201115 23:01:03.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.665" endtime="20201115 23:01:03.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.660" endtime="20201115 23:01:03.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.055" level="INFO">${RESULT} = [{'time': 0.027617958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.072200000000304e-05, 'source_diff': 5.072200000000304e-05}, {'time': 0.027670944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:03.046" endtime="20201115 23:01:03.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.085" level="INFO">${ACCURACY} = {'diff': [5.072200000000304e-05, 5.073599999999914e-05, 5.045800000000322e-05, 5.061099999999902e-05, 5.069400000000043e-05, 5.088899999999841e-05, 5.02079999999995e-05, 5.061100000000249e-05, 5.03190...</msg>
<status status="PASS" starttime="20201115 23:01:03.057" endtime="20201115 23:01:03.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.096" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.094" endtime="20201115 23:01:03.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.103" level="INFO">VALUE: [5.072200000000304e-05, 5.073599999999914e-05, 5.045800000000322e-05, 5.061099999999902e-05, 5.069400000000043e-05, 5.088899999999841e-05, 5.02079999999995e-05, 5.061100000000249e-05, 5.031900000000006e-05, 5.044400000000018e-05, 5.022199999999907e-05, 5.06669999999973e-05, 5.05279999999976e-05, 5.0223000000002016e-05, 5.077800000000132e-05, 5.09729999999993e-05, 5.051399999999803e-05, 5.073600000000261e-05, 5.058299999999988e-05, 5.061200000000196e-05, 5.036099999999877e-05, 5.081900000000056e-05, 5.065299999999773e-05, 5.100000000000243e-05, 5.045799999999975e-05, 5.081899999999709e-05, 5.036099999999877e-05, 5.099999999999896e-05, 5.008299999999938e-05, 5.043100000000009e-05, 5.094400000000068e-05, 5.090299999999798e-05, 5.006999999999928e-05, 5.051399999999803e-05, 5.0165999999997324e-05, 5.084799999999917e-05, 5.088899999999841e-05, 5.095899999999973e-05, 5.0652000000001723e-05, 5.030500000000049e-05, 5.048599999999889e-05, 5.081900000000056e-05, 5.031900000000006e-05, 5.097199999999982e-05, 5.013900000000113e-05, 5.079200000000089e-05, 5.022199999999907e-05, 5.009699999999895e-05, 5.002800000000057e-05, 5.073600000000261e-05]</msg>
<status status="PASS" starttime="20201115 23:01:03.098" endtime="20201115 23:01:03.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.087" endtime="20201115 23:01:03.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.112" endtime="20201115 23:01:03.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.120" endtime="20201115 23:01:03.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.116" endtime="20201115 23:01:03.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.107" endtime="20201115 23:01:03.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.614" endtime="20201115 23:01:03.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.612" endtime="20201115 23:01:03.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.611" endtime="20201115 23:01:03.147"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.152" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.174" endtime="20201115 23:01:03.194"></status>
</kw>
<msg timestamp="20201115 23:01:03.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.171" endtime="20201115 23:01:03.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.197" endtime="20201115 23:01:03.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.204" endtime="20201115 23:01:03.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.163" endtime="20201115 23:01:03.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.158" endtime="20201115 23:01:03.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.227" endtime="20201115 23:01:03.561"></status>
</kw>
<msg timestamp="20201115 23:01:03.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047489472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047541389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.224" endtime="20201115 23:01:03.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047489472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047541389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.571" endtime="20201115 23:01:03.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.589" endtime="20201115 23:01:03.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.217" endtime="20201115 23:01:03.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.212" endtime="20201115 23:01:03.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.607" level="INFO">${RESULT} = [{'time': 0.047541389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1917000000005487e-05, 'source_diff': 5.1917000000005487e-05}, {'time': 0.047598389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:03.598" endtime="20201115 23:01:03.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.637" level="INFO">${ACCURACY} = {'diff': [5.1917000000005487e-05, 5.182000000000103e-05, 5.1959000000004196e-05, 5.112499999999909e-05, 5.137499999999934e-05, 5.107000000000028e-05, 5.13340000000001e-05, 5.154200000000164e-05, 5.104...</msg>
<status status="PASS" starttime="20201115 23:01:03.609" endtime="20201115 23:01:03.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.648" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.646" endtime="20201115 23:01:03.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.655" level="INFO">VALUE: [5.1917000000005487e-05, 5.182000000000103e-05, 5.1959000000004196e-05, 5.112499999999909e-05, 5.137499999999934e-05, 5.107000000000028e-05, 5.13340000000001e-05, 5.154200000000164e-05, 5.104099999999473e-05, 5.166600000000576e-05, 5.181900000000156e-05, 5.15549999999948e-05, 5.104100000000167e-05, 5.201399999999606e-05, 5.1693999999997964e-05, 5.16940000000049e-05, 5.191699999999855e-05, 5.1179999999997894e-05, 5.145800000000422e-05, 5.148600000000336e-05, 5.120800000000397e-05, 5.1195000000003876e-05, 5.190299999999898e-05, 5.194499999999769e-05, 5.193000000000558e-05, 5.1485999999996424e-05, 5.104200000000114e-05, 5.108300000000038e-05, 5.1695000000004376e-05, 5.181900000000156e-05, 5.104099999999473e-05, 5.148600000000336e-05, 5.131900000000106e-05, 5.161100000000002e-05, 5.1749999999996243e-05, 5.150000000000293e-05, 5.190299999999898e-05, 5.136099999999977e-05, 5.113899999999866e-05, 5.1195000000003876e-05, 5.184699999999376e-05, 5.184800000000017e-05, 5.1653000000005667e-05, 5.1014000000002e-05, 5.1209000000003446e-05, 5.112499999999909e-05, 5.188899999999941e-05, 5.112499999999909e-05, 5.1651999999999254e-05, 5.101399999999506e-05]</msg>
<status status="PASS" starttime="20201115 23:01:03.651" endtime="20201115 23:01:03.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.639" endtime="20201115 23:01:03.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.675" endtime="20201115 23:01:03.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.684" endtime="20201115 23:01:03.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.679" endtime="20201115 23:01:03.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.671" endtime="20201115 23:01:03.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.154" endtime="20201115 23:01:03.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.150" endtime="20201115 23:01:03.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.148" endtime="20201115 23:01:03.710"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.715" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.737" endtime="20201115 23:01:03.758"></status>
</kw>
<msg timestamp="20201115 23:01:03.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.734" endtime="20201115 23:01:03.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.761" endtime="20201115 23:01:03.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.767" endtime="20201115 23:01:03.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.727" endtime="20201115 23:01:03.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.721" endtime="20201115 23:01:03.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.791" endtime="20201115 23:01:04.125"></status>
</kw>
<msg timestamp="20201115 23:01:04.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047119083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047171417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.787" endtime="20201115 23:01:04.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047119083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047171417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.135" endtime="20201115 23:01:04.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.153" endtime="20201115 23:01:04.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.780" endtime="20201115 23:01:04.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.776" endtime="20201115 23:01:04.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.171" level="INFO">${RESULT} = [{'time': 0.047171417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.23340000000011e-05, 'source_diff': 5.23340000000011e-05}, {'time': 0.047228417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:04.162" endtime="20201115 23:01:04.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.201" level="INFO">${ACCURACY} = {'diff': [5.23340000000011e-05, 5.287500000000084e-05, 5.24869999999969e-05, 5.2638000000000684e-05, 5.250000000000393e-05, 5.208300000000138e-05, 5.261100000000102e-05, 5.238899999999991e-05, 5.23889...</msg>
<status status="PASS" starttime="20201115 23:01:04.173" endtime="20201115 23:01:04.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.212" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.210" endtime="20201115 23:01:04.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.220" level="INFO">VALUE: [5.23340000000011e-05, 5.287500000000084e-05, 5.24869999999969e-05, 5.2638000000000684e-05, 5.250000000000393e-05, 5.208300000000138e-05, 5.261100000000102e-05, 5.238899999999991e-05, 5.238899999999991e-05, 5.21669999999988e-05, 5.256900000000231e-05, 5.2749999999997244e-05, 5.2971999999998354e-05, 5.2471999999997854e-05, 5.233300000000163e-05, 5.269499999999844e-05, 5.240299999999948e-05, 5.28340000000016e-05, 5.295899999999826e-05, 5.230600000000196e-05, 5.2138000000000184e-05, 5.252800000000307e-05, 5.279200000000289e-05, 5.240299999999948e-05, 5.262500000000059e-05, 5.2402000000000004e-05, 5.2735999999997674e-05, 5.2707999999998534e-05, 5.2929999999999644e-05, 5.276400000000375e-05, 5.223600000000411e-05, 5.259700000000145e-05, 5.263900000000016e-05, 5.2943999999999214e-05, 5.231900000000206e-05, 5.207000000000128e-05, 5.295899999999826e-05, 5.298600000000486e-05, 5.2471999999997854e-05, 5.212500000000009e-05, 5.269499999999844e-05, 5.283399999999466e-05, 5.231999999999459e-05, 5.2721999999998104e-05, 5.256899999999537e-05, 5.233300000000163e-05, 5.2485999999997424e-05, 5.2943999999999214e-05, 5.23470000000012e-05, 5.265299999999973e-05]</msg>
<status status="PASS" starttime="20201115 23:01:04.215" endtime="20201115 23:01:04.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.203" endtime="20201115 23:01:04.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.229" endtime="20201115 23:01:04.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.237" endtime="20201115 23:01:04.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.233" endtime="20201115 23:01:04.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.224" endtime="20201115 23:01:04.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.717" endtime="20201115 23:01:04.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.713" endtime="20201115 23:01:04.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.711" endtime="20201115 23:01:04.263"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.269" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.290" endtime="20201115 23:01:04.311"></status>
</kw>
<msg timestamp="20201115 23:01:04.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.287" endtime="20201115 23:01:04.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.314" endtime="20201115 23:01:04.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.321" endtime="20201115 23:01:04.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.280" endtime="20201115 23:01:04.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.274" endtime="20201115 23:01:04.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.344" endtime="20201115 23:01:04.680"></status>
</kw>
<msg timestamp="20201115 23:01:04.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046941681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046995, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:04.341" endtime="20201115 23:01:04.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046941681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046995, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:04.690" endtime="20201115 23:01:04.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.708" endtime="20201115 23:01:04.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.334" endtime="20201115 23:01:04.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.329" endtime="20201115 23:01:04.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.726" level="INFO">${RESULT} = [{'time': 0.046995, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.331900000000306e-05, 'source_diff': 5.331900000000306e-05}, {'time': 0.047062, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3...</msg>
<status status="PASS" starttime="20201115 23:01:04.717" endtime="20201115 23:01:04.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.759" level="INFO">${ACCURACY} = {'diff': [5.331900000000306e-05, 5.308300000000238e-05, 5.390300000000098e-05, 5.3749999999998244e-05, 5.336100000000177e-05, 5.358399999999541e-05, 5.304200000000314e-05, 5.395899999999926e-05, 5.358...</msg>
<status status="PASS" starttime="20201115 23:01:04.728" endtime="20201115 23:01:04.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.770" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.768" endtime="20201115 23:01:04.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.777" level="INFO">VALUE: [5.331900000000306e-05, 5.308300000000238e-05, 5.390300000000098e-05, 5.3749999999998244e-05, 5.336100000000177e-05, 5.358399999999541e-05, 5.304200000000314e-05, 5.395899999999926e-05, 5.358400000000235e-05, 5.38340000000026e-05, 5.322299999999808e-05, 5.3707999999999534e-05, 5.333299999999569e-05, 5.330499999999655e-05, 5.381899999999662e-05, 5.354099999999723e-05, 5.3679999999993455e-05, 5.379200000000389e-05, 5.3235999999998174e-05, 5.379200000000389e-05, 5.390300000000098e-05, 5.383299999999619e-05, 5.309699999999501e-05, 5.370899999999901e-05, 5.3195000000005876e-05, 5.33340000000021e-05, 5.3013999999997063e-05, 5.365300000000073e-05, 5.3416000000000574e-05, 5.3235999999998174e-05, 5.3985999999998924e-05, 5.359700000000245e-05, 5.3166000000000324e-05, 5.3166000000000324e-05, 5.3430000000000144e-05, 5.311099999999458e-05, 5.3499999999997994e-05, 5.3457999999999284e-05, 5.3971999999999354e-05, 5.3471999999998854e-05, 5.333300000000263e-05, 5.390300000000098e-05, 5.36670000000003e-05, 5.306999999999534e-05, 5.3513999999997564e-05, 5.355599999999627e-05, 5.305599999999577e-05, 5.330499999999655e-05, 5.3680000000000394e-05, 5.33470000000022e-05]</msg>
<status status="PASS" starttime="20201115 23:01:04.773" endtime="20201115 23:01:04.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.761" endtime="20201115 23:01:04.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.786" endtime="20201115 23:01:04.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.794" endtime="20201115 23:01:04.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.790" endtime="20201115 23:01:04.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.781" endtime="20201115 23:01:04.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.270" endtime="20201115 23:01:04.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.266" endtime="20201115 23:01:04.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.264" endtime="20201115 23:01:04.821"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.826" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.847" endtime="20201115 23:01:04.868"></status>
</kw>
<msg timestamp="20201115 23:01:04.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.844" endtime="20201115 23:01:04.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.871" endtime="20201115 23:01:04.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.878" endtime="20201115 23:01:04.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.837" endtime="20201115 23:01:04.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.831" endtime="20201115 23:01:04.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.901" endtime="20201115 23:01:05.236"></status>
</kw>
<msg timestamp="20201115 23:01:05.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046880458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046935111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.898" endtime="20201115 23:01:05.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046880458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046935111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.245" endtime="20201115 23:01:05.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.264" endtime="20201115 23:01:05.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.890" endtime="20201115 23:01:05.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.886" endtime="20201115 23:01:05.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.282" level="INFO">${RESULT} = [{'time': 0.046935111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.465300000000173e-05, 'source_diff': 5.465300000000173e-05}, {'time': 0.046995139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:05.273" endtime="20201115 23:01:05.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.313" level="INFO">${ACCURACY} = {'diff': [5.465300000000173e-05, 5.443100000000062e-05, 5.462500000000259e-05, 5.4013999999998064e-05, 5.482000000000403e-05, 5.444500000000019e-05, 5.455599999999727e-05, 5.465300000000173e-05, 5.438...</msg>
<status status="PASS" starttime="20201115 23:01:05.284" endtime="20201115 23:01:05.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.324" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.321" endtime="20201115 23:01:05.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.330" level="INFO">VALUE: [5.465300000000173e-05, 5.443100000000062e-05, 5.462500000000259e-05, 5.4013999999998064e-05, 5.482000000000403e-05, 5.444500000000019e-05, 5.455599999999727e-05, 5.465300000000173e-05, 5.438899999999497e-05, 5.4499999999998994e-05, 5.415299999999429e-05, 5.411200000000199e-05, 5.427699999999841e-05, 5.4430000000001144e-05, 5.4458000000000284e-05, 5.450000000000593e-05, 5.429200000000439e-05, 5.486100000000327e-05, 5.4444000000000714e-05, 5.4694000000000964e-05, 5.437500000000234e-05, 5.436100000000277e-05, 5.490300000000198e-05, 5.430599999999702e-05, 5.480599999999752e-05, 5.477800000000532e-05, 5.483399999999666e-05, 5.484799999999623e-05, 5.4637999999995746e-05, 5.411199999999505e-05, 5.4166000000001324e-05, 5.4208000000000034e-05, 5.4263999999998314e-05, 5.429099999999798e-05, 5.433300000000363e-05, 5.4777999999998384e-05, 5.4221999999999604e-05, 5.488900000000241e-05, 5.490300000000198e-05, 5.45140000000055e-05, 5.4777999999998384e-05, 5.436099999999583e-05, 5.409700000000295e-05, 5.4735999999999674e-05, 5.454100000000517e-05, 5.4027999999997633e-05, 5.406899999999687e-05, 5.4513999999998564e-05, 5.4499999999998994e-05, 5.4444000000000714e-05]</msg>
<status status="PASS" starttime="20201115 23:01:05.326" endtime="20201115 23:01:05.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.315" endtime="20201115 23:01:05.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.339" endtime="20201115 23:01:05.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.348" endtime="20201115 23:01:05.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.343" endtime="20201115 23:01:05.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.335" endtime="20201115 23:01:05.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.827" endtime="20201115 23:01:05.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.823" endtime="20201115 23:01:05.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.822" endtime="20201115 23:01:05.374"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.379" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.401" endtime="20201115 23:01:05.422"></status>
</kw>
<msg timestamp="20201115 23:01:05.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.397" endtime="20201115 23:01:05.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.426" endtime="20201115 23:01:05.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.432" endtime="20201115 23:01:05.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.390" endtime="20201115 23:01:05.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.385" endtime="20201115 23:01:05.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.456" endtime="20201115 23:01:05.792"></status>
</kw>
<msg timestamp="20201115 23:01:05.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046909528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046965153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.452" endtime="20201115 23:01:05.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046909528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046965153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.802" endtime="20201115 23:01:05.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.821" endtime="20201115 23:01:05.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.445" endtime="20201115 23:01:05.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.440" endtime="20201115 23:01:05.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.838" level="INFO">${RESULT} = [{'time': 0.046965153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.562500000000359e-05, 'source_diff': 5.562500000000359e-05}, {'time': 0.047023181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:05.829" endtime="20201115 23:01:05.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.868" level="INFO">${ACCURACY} = {'diff': [5.562500000000359e-05, 5.5805999999998523e-05, 5.58470000000047e-05, 5.5457999999994345e-05, 5.5986000000000924e-05, 5.5986000000000924e-05, 5.512499999999615e-05, 5.5236000000000174e-05, 5....</msg>
<status status="PASS" starttime="20201115 23:01:05.840" endtime="20201115 23:01:05.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.874" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.873" endtime="20201115 23:01:05.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.878" level="INFO">VALUE: [5.562500000000359e-05, 5.5805999999998523e-05, 5.58470000000047e-05, 5.5457999999994345e-05, 5.5986000000000924e-05, 5.5986000000000924e-05, 5.512499999999615e-05, 5.5236000000000174e-05, 5.594500000000169e-05, 5.561099999999708e-05, 5.561099999999708e-05, 5.5277999999998884e-05, 5.5235999999993235e-05, 5.504099999999873e-05, 5.50270000000061e-05, 5.5777999999999384e-05, 5.536099999999683e-05, 5.5694000000001964e-05, 5.5499999999999994e-05, 5.591700000000255e-05, 5.5444000000001714e-05, 5.5707999999994595e-05, 5.591699999999561e-05, 5.593100000000212e-05, 5.584799999999723e-05, 5.5277999999998884e-05, 5.5805999999998523e-05, 5.5736000000000674e-05, 5.54869999999999e-05, 5.506900000000481e-05, 5.533299999999769e-05, 5.5943999999995275e-05, 5.5236000000000174e-05, 5.5750000000000244e-05, 5.509700000000395e-05, 5.530500000000549e-05, 5.563899999999622e-05, 5.515299999999529e-05, 5.511099999999658e-05, 5.533299999999769e-05, 5.5249999999999744e-05, 5.556999999999784e-05, 5.573700000000015e-05, 5.540299999999554e-05, 5.594499999999475e-05, 5.56670000000023e-05, 5.5305999999998023e-05, 5.5750000000000244e-05, 5.5458000000001284e-05, 5.565300000000273e-05]</msg>
<status status="PASS" starttime="20201115 23:01:05.876" endtime="20201115 23:01:05.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.870" endtime="20201115 23:01:05.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.882" endtime="20201115 23:01:05.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.886" endtime="20201115 23:01:05.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.884" endtime="20201115 23:01:05.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.880" endtime="20201115 23:01:05.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.381" endtime="20201115 23:01:05.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.377" endtime="20201115 23:01:05.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.375" endtime="20201115 23:01:05.907"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.910" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.920" endtime="20201115 23:01:05.938"></status>
</kw>
<msg timestamp="20201115 23:01:05.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.919" endtime="20201115 23:01:05.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.939" endtime="20201115 23:01:05.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.943" endtime="20201115 23:01:05.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.915" endtime="20201115 23:01:05.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.913" endtime="20201115 23:01:05.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.954" endtime="20201115 23:01:06.269"></status>
</kw>
<msg timestamp="20201115 23:01:06.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027096375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027153278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.952" endtime="20201115 23:01:06.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027096375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027153278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.278" endtime="20201115 23:01:06.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.297" endtime="20201115 23:01:06.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.949" endtime="20201115 23:01:06.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.947" endtime="20201115 23:01:06.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:06.315" level="INFO">${RESULT} = [{'time': 0.027153278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.690300000000051e-05, 'source_diff': 5.690300000000051e-05}, {'time': 0.027223292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:06.305" endtime="20201115 23:01:06.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:06.345" level="INFO">${ACCURACY} = {'diff': [5.690300000000051e-05, 5.6485999999997955e-05, 5.665300000000026e-05, 5.645899999999829e-05, 5.659800000000145e-05, 5.6528000000000134e-05, 5.652699999999719e-05, 5.6750000000001244e-05, 5.6...</msg>
<status status="PASS" starttime="20201115 23:01:06.317" endtime="20201115 23:01:06.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.356" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:01:06.354" endtime="20201115 23:01:06.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.363" level="INFO">VALUE: [5.690300000000051e-05, 5.6485999999997955e-05, 5.665300000000026e-05, 5.645899999999829e-05, 5.659800000000145e-05, 5.6528000000000134e-05, 5.652699999999719e-05, 5.6750000000001244e-05, 5.6250000000000744e-05, 5.6165999999999855e-05, 5.61809999999989e-05, 5.6499999999997524e-05, 5.684699999999876e-05, 5.691700000000008e-05, 5.659699999999851e-05, 5.6221999999998135e-05, 5.6513999999997094e-05, 5.662500000000112e-05, 5.690300000000051e-05, 5.695900000000226e-05, 5.68610000000018e-05, 5.620900000000151e-05, 5.686200000000127e-05, 5.6486000000001424e-05, 5.6735999999998205e-05, 5.68749999999979e-05, 5.656899999999937e-05, 5.661100000000155e-05, 5.6750000000001244e-05, 5.680500000000005e-05, 5.691700000000008e-05, 5.6443999999999245e-05, 5.611100000000105e-05, 5.644499999999872e-05, 5.6055999999998773e-05, 5.654100000000023e-05, 5.6277999999999884e-05, 5.645899999999829e-05, 5.633399999999816e-05, 5.638900000000044e-05, 5.698699999999793e-05, 5.690300000000051e-05, 5.604099999999973e-05, 5.63610000000013e-05, 5.606899999999887e-05, 5.6541999999999704e-05, 5.681899999999962e-05, 5.616699999999933e-05, 5.68610000000018e-05, 5.6957999999999315e-05]</msg>
<status status="PASS" starttime="20201115 23:01:06.359" endtime="20201115 23:01:06.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.347" endtime="20201115 23:01:06.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.372" endtime="20201115 23:01:06.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.380" endtime="20201115 23:01:06.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.376" endtime="20201115 23:01:06.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.367" endtime="20201115 23:01:06.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.911" endtime="20201115 23:01:06.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.909" endtime="20201115 23:01:06.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.908" endtime="20201115 23:01:06.407"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.412" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.434" endtime="20201115 23:01:06.455"></status>
</kw>
<msg timestamp="20201115 23:01:06.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.431" endtime="20201115 23:01:06.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.458" endtime="20201115 23:01:06.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.465" endtime="20201115 23:01:06.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.424" endtime="20201115 23:01:06.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.417" endtime="20201115 23:01:06.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.488" endtime="20201115 23:01:06.827"></status>
</kw>
<msg timestamp="20201115 23:01:06.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047710333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047767611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.485" endtime="20201115 23:01:06.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047710333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047767611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.837" endtime="20201115 23:01:06.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.856" endtime="20201115 23:01:06.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.477" endtime="20201115 23:01:06.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.473" endtime="20201115 23:01:06.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:06.873" level="INFO">${RESULT} = [{'time': 0.047767611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7278000000000884e-05, 'source_diff': 5.7278000000000884e-05}, {'time': 0.047839611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:06.864" endtime="20201115 23:01:06.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:06.906" level="INFO">${ACCURACY} = {'diff': [5.7278000000000884e-05, 5.786099999999933e-05, 5.7028000000000634e-05, 5.7069999999999343e-05, 5.7055999999999774e-05, 5.7083999999998913e-05, 5.7083999999998913e-05, 5.709699999999901e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:06.875" endtime="20201115 23:01:06.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.918" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:01:06.915" endtime="20201115 23:01:06.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.924" level="INFO">VALUE: [5.7278000000000884e-05, 5.786099999999933e-05, 5.7028000000000634e-05, 5.7069999999999343e-05, 5.7055999999999774e-05, 5.7083999999998913e-05, 5.7083999999998913e-05, 5.709699999999901e-05, 5.7264000000001314e-05, 5.7485999999995485e-05, 5.7721999999996165e-05, 5.762499999999865e-05, 5.7665999999997886e-05, 5.7694000000003964e-05, 5.7236000000002174e-05, 5.75550000000008e-05, 5.7457999999996345e-05, 5.7278000000000884e-05, 5.7208000000003034e-05, 5.7028000000000634e-05, 5.7694000000003964e-05, 5.7055999999999774e-05, 5.740300000000448e-05, 5.7055999999999774e-05, 5.7319999999999593e-05, 5.747300000000233e-05, 5.711100000000552e-05, 5.7583999999999413e-05, 5.7306000000000024e-05, 5.712499999999815e-05, 5.7986000000002924e-05, 5.781900000000062e-05, 5.7443999999996775e-05, 5.709700000000595e-05, 5.712500000000509e-05, 5.786099999999933e-05, 5.7443999999996775e-05, 5.7694000000003964e-05, 5.7194000000003464e-05, 5.7319999999999593e-05, 5.734799999999873e-05, 5.730500000000055e-05, 5.7277999999993945e-05, 5.709699999999901e-05, 5.7806000000000524e-05, 5.78749999999989e-05, 5.733299999999969e-05, 5.7457999999996345e-05, 5.7707999999996595e-05, 5.7901999999998566e-05]</msg>
<status status="PASS" starttime="20201115 23:01:06.920" endtime="20201115 23:01:06.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.908" endtime="20201115 23:01:06.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.933" endtime="20201115 23:01:06.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.942" endtime="20201115 23:01:06.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.937" endtime="20201115 23:01:06.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.929" endtime="20201115 23:01:06.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.413" endtime="20201115 23:01:06.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.409" endtime="20201115 23:01:06.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.407" endtime="20201115 23:01:06.969"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.974" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.996" endtime="20201115 23:01:07.017"></status>
</kw>
<msg timestamp="20201115 23:01:07.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.993" endtime="20201115 23:01:07.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.021" endtime="20201115 23:01:07.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.028" endtime="20201115 23:01:07.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.985" endtime="20201115 23:01:07.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.980" endtime="20201115 23:01:07.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.052" endtime="20201115 23:01:07.398"></status>
</kw>
<msg timestamp="20201115 23:01:07.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047359708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047418472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.049" endtime="20201115 23:01:07.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047359708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047418472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.408" endtime="20201115 23:01:07.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.427" endtime="20201115 23:01:07.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.041" endtime="20201115 23:01:07.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.036" endtime="20201115 23:01:07.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:07.444" level="INFO">${RESULT} = [{'time': 0.047418472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8764000000002814e-05, 'source_diff': 5.8764000000002814e-05}, {'time': 0.0474905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:07.435" endtime="20201115 23:01:07.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:07.475" level="INFO">${ACCURACY} = {'diff': [5.8764000000002814e-05, 5.8027999999994695e-05, 5.859700000000051e-05, 5.8722000000004104e-05, 5.868099999999793e-05, 5.863899999999922e-05, 5.8013999999995125e-05, 5.86949999999975e-05, 5.8...</msg>
<status status="PASS" starttime="20201115 23:01:07.446" endtime="20201115 23:01:07.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.486" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:01:07.484" endtime="20201115 23:01:07.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.493" level="INFO">VALUE: [5.8764000000002814e-05, 5.8027999999994695e-05, 5.859700000000051e-05, 5.8722000000004104e-05, 5.868099999999793e-05, 5.863899999999922e-05, 5.8013999999995125e-05, 5.86949999999975e-05, 5.845900000000376e-05, 5.894499999999775e-05, 5.872300000000358e-05, 5.806900000000087e-05, 5.829100000000198e-05, 5.8500000000002994e-05, 5.88749999999999e-05, 5.8943999999998276e-05, 5.836099999999983e-05, 5.829100000000198e-05, 5.806900000000087e-05, 5.865299999999879e-05, 5.841699999999811e-05, 5.8500000000002994e-05, 5.831900000000112e-05, 5.8707999999997595e-05, 5.818100000000437e-05, 5.840299999999854e-05, 5.809700000000001e-05, 5.811099999999958e-05, 5.818099999999743e-05, 5.865299999999879e-05, 5.8971999999997415e-05, 5.808300000000044e-05, 5.8499999999996055e-05, 5.8429999999998206e-05, 5.8764000000002814e-05, 5.8235999999996235e-05, 5.8250000000002744e-05, 5.840300000000548e-05, 5.8500000000002994e-05, 5.8264000000002314e-05, 5.843099999999768e-05, 5.8820000000001094e-05, 5.8985999999996985e-05, 5.8528000000002134e-05, 5.844500000000419e-05, 5.8583999999993475e-05, 5.894500000000469e-05, 5.809700000000001e-05, 5.8235999999996235e-05, 5.854100000000223e-05]</msg>
<status status="PASS" starttime="20201115 23:01:07.488" endtime="20201115 23:01:07.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.477" endtime="20201115 23:01:07.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.502" endtime="20201115 23:01:07.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:07.511" endtime="20201115 23:01:07.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.506" endtime="20201115 23:01:07.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.498" endtime="20201115 23:01:07.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.976" endtime="20201115 23:01:07.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.972" endtime="20201115 23:01:07.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.970" endtime="20201115 23:01:07.537"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.542" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.564" endtime="20201115 23:01:07.584"></status>
</kw>
<msg timestamp="20201115 23:01:07.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.561" endtime="20201115 23:01:07.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.588" endtime="20201115 23:01:07.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.594" endtime="20201115 23:01:07.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.554" endtime="20201115 23:01:07.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.548" endtime="20201115 23:01:07.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.617" endtime="20201115 23:01:07.952"></status>
</kw>
<msg timestamp="20201115 23:01:07.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047220958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047280722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.614" endtime="20201115 23:01:07.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047220958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047280722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.961" endtime="20201115 23:01:07.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.980" endtime="20201115 23:01:07.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.607" endtime="20201115 23:01:07.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.602" endtime="20201115 23:01:07.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:07.997" level="INFO">${RESULT} = [{'time': 0.047280722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9763999999996875e-05, 'source_diff': 5.9763999999996875e-05}, {'time': 0.047345708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:07.988" endtime="20201115 23:01:07.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:08.028" level="INFO">${ACCURACY} = {'diff': [5.9763999999996875e-05, 5.9402000000000066e-05, 5.9028000000002634e-05, 5.906899999999493e-05, 5.9556000000002274e-05, 5.911100000000058e-05, 5.965299999999979e-05, 5.9485999999997485e-05, 5...</msg>
<status status="PASS" starttime="20201115 23:01:07.999" endtime="20201115 23:01:08.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.039" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:01:08.037" endtime="20201115 23:01:08.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.047" level="INFO">VALUE: [5.9763999999996875e-05, 5.9402000000000066e-05, 5.9028000000002634e-05, 5.906899999999493e-05, 5.9556000000002274e-05, 5.911100000000058e-05, 5.965299999999979e-05, 5.9485999999997485e-05, 5.912500000000015e-05, 5.9999999999997555e-05, 5.961100000000108e-05, 5.944499999999825e-05, 5.97629999999974e-05, 5.9679999999999456e-05, 5.979100000000348e-05, 5.979100000000348e-05, 5.9514000000003564e-05, 5.9264000000003314e-05, 5.9778000000003384e-05, 5.904100000000273e-05, 5.940299999999954e-05, 5.9598000000000984e-05, 5.941699999999911e-05, 5.933300000000169e-05, 5.9986000000004924e-05, 5.912500000000015e-05, 5.9070000000001344e-05, 5.9291999999995515e-05, 5.9735999999997735e-05, 5.98750000000009e-05, 5.915299999999929e-05, 5.9929999999999706e-05, 5.9362000000000303e-05, 5.934700000000126e-05, 5.958300000000194e-05, 5.988899999999353e-05, 5.9179999999998956e-05, 5.9943999999999276e-05, 5.908300000000144e-05, 5.9028000000002634e-05, 5.9042000000002204e-05, 5.9792000000002954e-05, 5.908300000000144e-05, 6.002700000000416e-05, 5.9236000000004174e-05, 5.966699999999936e-05, 5.9291999999995515e-05, 5.911100000000058e-05, 5.9320000000001594e-05, 5.944499999999825e-05]</msg>
<status status="PASS" starttime="20201115 23:01:08.042" endtime="20201115 23:01:08.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.030" endtime="20201115 23:01:08.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.056" endtime="20201115 23:01:08.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:08.065" endtime="20201115 23:01:08.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.060" endtime="20201115 23:01:08.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.051" endtime="20201115 23:01:08.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.544" endtime="20201115 23:01:08.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.540" endtime="20201115 23:01:08.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.538" endtime="20201115 23:01:08.092"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.097" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.119" endtime="20201115 23:01:08.139"></status>
</kw>
<msg timestamp="20201115 23:01:08.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.115" endtime="20201115 23:01:08.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.142" endtime="20201115 23:01:08.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.149" endtime="20201115 23:01:08.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.108" endtime="20201115 23:01:08.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.102" endtime="20201115 23:01:08.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.172" endtime="20201115 23:01:08.506"></status>
</kw>
<msg timestamp="20201115 23:01:08.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047256917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047317639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.169" endtime="20201115 23:01:08.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047256917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047317639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.516" endtime="20201115 23:01:08.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.535" endtime="20201115 23:01:08.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.161" endtime="20201115 23:01:08.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.157" endtime="20201115 23:01:08.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:08.552" level="INFO">${RESULT} = [{'time': 0.047317639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0721999999999166e-05, 'source_diff': 6.0721999999999166e-05}, {'time': 0.047380653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:08.543" endtime="20201115 23:01:08.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:08.583" level="INFO">${ACCURACY} = {'diff': [6.0721999999999166e-05, 6.0764000000004814e-05, 6.0820000000003094e-05, 6.0333999999995225e-05, 6.06949999999995e-05, 6.0235999999998235e-05, 6.086099999999539e-05, 6.0499999999998055e-05, 6...</msg>
<status status="PASS" starttime="20201115 23:01:08.555" endtime="20201115 23:01:08.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.594" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:01:08.592" endtime="20201115 23:01:08.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.601" level="INFO">VALUE: [6.0721999999999166e-05, 6.0764000000004814e-05, 6.0820000000003094e-05, 6.0333999999995225e-05, 6.06949999999995e-05, 6.0235999999998235e-05, 6.086099999999539e-05, 6.0499999999998055e-05, 6.090300000000104e-05, 6.0556000000003274e-05, 6.08750000000019e-05, 6.079099999999754e-05, 6.083300000000319e-05, 6.0334000000002164e-05, 6.0236000000005174e-05, 6.0222000000005604e-05, 6.0694000000000026e-05, 6.011100000000158e-05, 6.0985999999998985e-05, 6.068099999999993e-05, 6.0069999999995405e-05, 6.045899999999882e-05, 6.0319999999995655e-05, 6.0721999999999166e-05, 6.098699999999846e-05, 6.030499999999661e-05, 6.0472000000005854e-05, 6.0207999999999096e-05, 6.0179999999999956e-05, 6.06949999999995e-05, 6.033299999999575e-05, 6.0277999999996945e-05, 6.0291999999996515e-05, 6.0027999999996695e-05, 6.0598000000001984e-05, 6.0528000000004134e-05, 6.065300000000079e-05, 6.0820000000003094e-05, 6.088900000000147e-05, 6.0834000000002664e-05, 6.06949999999995e-05, 6.062500000000165e-05, 6.0750000000005244e-05, 6.077699999999797e-05, 6.029100000000398e-05, 6.080500000000405e-05, 6.0777999999997445e-05, 6.015300000000029e-05, 6.0179999999999956e-05, 6.0499999999998055e-05]</msg>
<status status="PASS" starttime="20201115 23:01:08.597" endtime="20201115 23:01:08.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.585" endtime="20201115 23:01:08.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.610" endtime="20201115 23:01:08.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:08.618" endtime="20201115 23:01:08.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.614" endtime="20201115 23:01:08.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.605" endtime="20201115 23:01:08.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.098" endtime="20201115 23:01:08.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.094" endtime="20201115 23:01:08.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.093" endtime="20201115 23:01:08.644"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.650" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.671" endtime="20201115 23:01:08.692"></status>
</kw>
<msg timestamp="20201115 23:01:08.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.668" endtime="20201115 23:01:08.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.696" endtime="20201115 23:01:08.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.702" endtime="20201115 23:01:08.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.661" endtime="20201115 23:01:08.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.655" endtime="20201115 23:01:08.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.725" endtime="20201115 23:01:09.060"></status>
</kw>
<msg timestamp="20201115 23:01:09.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046815486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046877431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.722" endtime="20201115 23:01:09.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046815486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046877431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.069" endtime="20201115 23:01:09.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.095" endtime="20201115 23:01:09.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.715" endtime="20201115 23:01:09.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.710" endtime="20201115 23:01:09.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:09.114" level="INFO">${RESULT} = [{'time': 0.046877431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194499999999381e-05, 'source_diff': 6.194499999999381e-05}, {'time': 0.046945514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:09.105" endtime="20201115 23:01:09.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:09.147" level="INFO">${ACCURACY} = {'diff': [6.194499999999381e-05, 6.184700000000376e-05, 6.148600000000642e-05, 6.14300000000012e-05, 6.127799999999795e-05, 6.109699999999607e-05, 6.172200000000017e-05, 6.122199999999967e-05, 6.15419...</msg>
<status status="PASS" starttime="20201115 23:01:09.116" endtime="20201115 23:01:09.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.158" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:01:09.156" endtime="20201115 23:01:09.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.165" level="INFO">VALUE: [6.194499999999381e-05, 6.184700000000376e-05, 6.148600000000642e-05, 6.14300000000012e-05, 6.127799999999795e-05, 6.109699999999607e-05, 6.172200000000017e-05, 6.122199999999967e-05, 6.154199999999777e-05, 6.168100000000093e-05, 6.111100000000258e-05, 6.195800000000085e-05, 6.131999999999665e-05, 6.195900000000032e-05, 6.112500000000215e-05, 6.10420000000042e-05, 6.199999999999956e-05, 6.186100000000333e-05, 6.177699999999897e-05, 6.123599999999924e-05, 6.116600000000139e-05, 6.136099999999589e-05, 6.163900000000222e-05, 6.155599999999734e-05, 6.147199999999992e-05, 6.191700000000161e-05, 6.131899999999718e-05, 6.183299999999725e-05, 6.13200000000036e-05, 6.198599999999999e-05, 6.138900000000197e-05, 6.18750000000029e-05, 6.16950000000005e-05, 6.143100000000068e-05, 6.168000000000146e-05, 6.165200000000232e-05, 6.166600000000189e-05, 6.127699999999847e-05, 6.162499999999571e-05, 6.109700000000301e-05, 6.181899999999768e-05, 6.129200000000445e-05, 6.186099999999639e-05, 6.169400000000103e-05, 6.154199999999777e-05, 6.147199999999992e-05, 6.147199999999992e-05, 6.183399999999672e-05, 6.12499999999988e-05, 6.166699999999442e-05]</msg>
<status status="PASS" starttime="20201115 23:01:09.161" endtime="20201115 23:01:09.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.149" endtime="20201115 23:01:09.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.174" endtime="20201115 23:01:09.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:09.182" endtime="20201115 23:01:09.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.178" endtime="20201115 23:01:09.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.169" endtime="20201115 23:01:09.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.651" endtime="20201115 23:01:09.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.647" endtime="20201115 23:01:09.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.645" endtime="20201115 23:01:09.209"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.214" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.236" endtime="20201115 23:01:09.257"></status>
</kw>
<msg timestamp="20201115 23:01:09.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:09.233" endtime="20201115 23:01:09.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:09.260" endtime="20201115 23:01:09.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.267" endtime="20201115 23:01:09.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.225" endtime="20201115 23:01:09.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.219" endtime="20201115 23:01:09.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.291" endtime="20201115 23:01:09.608"></status>
</kw>
<msg timestamp="20201115 23:01:09.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047017097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047079375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.287" endtime="20201115 23:01:09.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047017097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047079375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.618" endtime="20201115 23:01:09.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.637" endtime="20201115 23:01:09.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.280" endtime="20201115 23:01:09.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.275" endtime="20201115 23:01:09.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:09.654" level="INFO">${RESULT} = [{'time': 0.047079375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.227799999999895e-05, 'source_diff': 6.227799999999895e-05}, {'time': 0.047154333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:09.645" endtime="20201115 23:01:09.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:09.685" level="INFO">${ACCURACY} = {'diff': [6.227799999999895e-05, 6.230499999999861e-05, 6.256899999999843e-05, 6.209699999999707e-05, 6.215299999999535e-05, 6.254199999999877e-05, 6.204199999999827e-05, 6.233399999999722e-05, 6.2208...</msg>
<status status="PASS" starttime="20201115 23:01:09.656" endtime="20201115 23:01:09.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.696" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:01:09.693" endtime="20201115 23:01:09.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.702" level="INFO">VALUE: [6.227799999999895e-05, 6.230499999999861e-05, 6.256899999999843e-05, 6.209699999999707e-05, 6.215299999999535e-05, 6.254199999999877e-05, 6.204199999999827e-05, 6.233399999999722e-05, 6.220899999999363e-05, 6.262500000000365e-05, 6.20699999999974e-05, 6.27500000000003e-05, 6.222199999999373e-05, 6.20699999999974e-05, 6.222200000000067e-05, 6.204099999999879e-05, 6.227699999999947e-05, 6.244400000000178e-05, 6.20829999999975e-05, 6.269400000000203e-05, 6.230499999999861e-05, 6.295800000000185e-05, 6.250000000000006e-05, 6.204199999999827e-05, 6.248600000000049e-05, 6.226399999999938e-05, 6.263900000000322e-05, 6.25279999999992e-05, 6.267999999999552e-05, 6.25279999999992e-05, 6.248600000000049e-05, 6.23750000000034e-05, 6.204099999999879e-05, 6.266600000000289e-05, 6.223600000000024e-05, 6.256899999999843e-05, 6.245799999999441e-05, 6.230499999999861e-05, 6.229200000000545e-05, 6.27080000000016e-05, 6.24029999999956e-05, 6.270900000000107e-05, 6.215300000000229e-05, 6.280599999999859e-05, 6.273600000000074e-05, 6.280499999999911e-05, 6.243100000000168e-05, 6.300000000000056e-05, 6.223600000000024e-05, 6.229099999999904e-05]</msg>
<status status="PASS" starttime="20201115 23:01:09.698" endtime="20201115 23:01:09.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.687" endtime="20201115 23:01:09.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.711" endtime="20201115 23:01:09.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:09.720" endtime="20201115 23:01:09.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.715" endtime="20201115 23:01:09.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.707" endtime="20201115 23:01:09.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.216" endtime="20201115 23:01:09.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.211" endtime="20201115 23:01:09.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.210" endtime="20201115 23:01:09.746"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.751" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.773" endtime="20201115 23:01:09.795"></status>
</kw>
<msg timestamp="20201115 23:01:09.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:09.770" endtime="20201115 23:01:09.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:09.798" endtime="20201115 23:01:09.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.805" endtime="20201115 23:01:09.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.763" endtime="20201115 23:01:09.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.757" endtime="20201115 23:01:09.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.828" endtime="20201115 23:01:10.166"></status>
</kw>
<msg timestamp="20201115 23:01:10.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047024625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047087847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.825" endtime="20201115 23:01:10.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047024625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047087847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:10.175" endtime="20201115 23:01:10.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.194" endtime="20201115 23:01:10.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.818" endtime="20201115 23:01:10.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.813" endtime="20201115 23:01:10.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:10.211" level="INFO">${RESULT} = [{'time': 0.047087847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.322200000000167e-05, 'source_diff': 6.322200000000167e-05}, {'time': 0.047161847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:10.202" endtime="20201115 23:01:10.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:10.242" level="INFO">${ACCURACY} = {'diff': [6.322200000000167e-05, 6.319400000000253e-05, 6.356899999999943e-05, 6.330499999999961e-05, 6.372200000000217e-05, 6.30829999999985e-05, 6.377800000000045e-05, 6.37359999999948e-05, 6.361100...</msg>
<status status="PASS" starttime="20201115 23:01:10.213" endtime="20201115 23:01:10.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.253" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:01:10.251" endtime="20201115 23:01:10.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.259" level="INFO">VALUE: [6.322200000000167e-05, 6.319400000000253e-05, 6.356899999999943e-05, 6.330499999999961e-05, 6.372200000000217e-05, 6.30829999999985e-05, 6.377800000000045e-05, 6.37359999999948e-05, 6.361100000000508e-05, 6.3195000000002e-05, 6.366700000000336e-05, 6.3195000000002e-05, 6.359700000000551e-05, 6.386199999999786e-05, 6.30829999999985e-05, 6.365200000000432e-05, 6.32500000000008e-05, 6.380500000000011e-05, 6.3582999999999e-05, 6.380599999999959e-05, 6.369399999999609e-05, 6.368000000000346e-05, 6.298600000000099e-05, 6.397200000000242e-05, 6.348600000000149e-05, 6.365199999999738e-05, 6.348600000000149e-05, 6.394399999999634e-05, 6.329100000000004e-05, 6.338899999999703e-05, 6.331899999999918e-05, 6.30829999999985e-05, 6.327700000000047e-05, 6.394400000000328e-05, 6.35280000000002e-05, 6.350000000000106e-05, 6.398599999999505e-05, 6.319400000000253e-05, 6.39029999999971e-05, 6.308399999999798e-05, 6.311100000000458e-05, 6.338899999999703e-05, 6.395899999999538e-05, 6.394400000000328e-05, 6.380500000000011e-05, 6.340300000000354e-05, 6.326400000000038e-05, 6.347199999999498e-05, 6.37500000000013e-05, 6.372200000000217e-05]</msg>
<status status="PASS" starttime="20201115 23:01:10.255" endtime="20201115 23:01:10.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.244" endtime="20201115 23:01:10.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.268" endtime="20201115 23:01:10.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:10.277" endtime="20201115 23:01:10.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.273" endtime="20201115 23:01:10.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.264" endtime="20201115 23:01:10.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.753" endtime="20201115 23:01:10.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.749" endtime="20201115 23:01:10.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.747" endtime="20201115 23:01:10.303"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.308" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.331" endtime="20201115 23:01:10.352"></status>
</kw>
<msg timestamp="20201115 23:01:10.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:10.328" endtime="20201115 23:01:10.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:10.355" endtime="20201115 23:01:10.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.362" endtime="20201115 23:01:10.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.320" endtime="20201115 23:01:10.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.314" endtime="20201115 23:01:10.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.385" endtime="20201115 23:01:10.720"></status>
</kw>
<msg timestamp="20201115 23:01:10.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047961347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048026125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:10.382" endtime="20201115 23:01:10.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047961347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048026125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:10.729" endtime="20201115 23:01:10.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.748" endtime="20201115 23:01:10.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.375" endtime="20201115 23:01:10.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.370" endtime="20201115 23:01:10.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:10.765" level="INFO">${RESULT} = [{'time': 0.048026125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.477800000000145e-05, 'source_diff': 6.477800000000145e-05}, {'time': 0.048105139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:10.756" endtime="20201115 23:01:10.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:10.796" level="INFO">${ACCURACY} = {'diff': [6.477800000000145e-05, 6.401400000000113e-05, 6.445900000000282e-05, 6.465300000000479e-05, 6.44159999999977e-05, 6.444500000000325e-05, 6.416699999999692e-05, 6.462499999999871e-05, 6.49860...</msg>
<status status="PASS" starttime="20201115 23:01:10.768" endtime="20201115 23:01:10.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.807" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:01:10.805" endtime="20201115 23:01:10.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.814" level="INFO">VALUE: [6.477800000000145e-05, 6.401400000000113e-05, 6.445900000000282e-05, 6.465300000000479e-05, 6.44159999999977e-05, 6.444500000000325e-05, 6.416699999999692e-05, 6.462499999999871e-05, 6.498600000000299e-05, 6.455499999999392e-05, 6.444399999999684e-05, 6.404100000000079e-05, 6.45280000000012e-05, 6.437499999999846e-05, 6.469400000000403e-05, 6.426399999999444e-05, 6.407000000000634e-05, 6.405599999999984e-05, 6.454199999999383e-05, 6.441700000000411e-05, 6.437499999999846e-05, 6.438799999999856e-05, 6.415300000000429e-05, 6.40699999999994e-05, 6.426399999999444e-05, 6.4583e-05, 6.423600000000224e-05, 6.411100000000558e-05, 6.445800000000335e-05, 6.412500000000515e-05, 6.406899999999993e-05, 6.40829999999995e-05, 6.445799999999641e-05, 6.436099999999889e-05, 6.474999999999537e-05, 6.468099999999699e-05, 6.466700000000436e-05, 6.445899999999588e-05, 6.431999999999966e-05, 6.469499999999656e-05, 6.491600000000514e-05, 6.470799999999666e-05, 6.434699999999932e-05, 6.419400000000353e-05, 6.431999999999966e-05, 6.477800000000145e-05, 6.442999999999727e-05, 6.427800000000095e-05, 6.445799999999641e-05, 6.483300000000025e-05]</msg>
<status status="PASS" starttime="20201115 23:01:10.809" endtime="20201115 23:01:10.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.798" endtime="20201115 23:01:10.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.823" endtime="20201115 23:01:10.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:10.831" endtime="20201115 23:01:10.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.827" endtime="20201115 23:01:10.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.818" endtime="20201115 23:01:10.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.310" endtime="20201115 23:01:10.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.306" endtime="20201115 23:01:10.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.304" endtime="20201115 23:01:10.858"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.864" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.885" endtime="20201115 23:01:10.905"></status>
</kw>
<msg timestamp="20201115 23:01:10.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:10.882" endtime="20201115 23:01:10.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:10.909" endtime="20201115 23:01:10.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.915" endtime="20201115 23:01:10.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.875" endtime="20201115 23:01:10.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.869" endtime="20201115 23:01:10.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.939" endtime="20201115 23:01:11.274"></status>
</kw>
<msg timestamp="20201115 23:01:11.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047489194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047554278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:10.935" endtime="20201115 23:01:11.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047489194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047554278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:11.283" endtime="20201115 23:01:11.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.302" endtime="20201115 23:01:11.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.928" endtime="20201115 23:01:11.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.923" endtime="20201115 23:01:11.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:11.319" level="INFO">${RESULT} = [{'time': 0.047554278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.508399999999998e-05, 'source_diff': 6.508399999999998e-05}, {'time': 0.047634278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:11.310" endtime="20201115 23:01:11.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:11.352" level="INFO">${ACCURACY} = {'diff': [6.508399999999998e-05, 6.523600000000324e-05, 6.601400000000313e-05, 6.556900000000143e-05, 6.549999999999612e-05, 6.594399999999834e-05, 6.556900000000143e-05, 6.5583000000001e-05, 6.569500...</msg>
<status status="PASS" starttime="20201115 23:01:11.321" endtime="20201115 23:01:11.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.363" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:01:11.361" endtime="20201115 23:01:11.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.440" level="INFO">VALUE: [6.508399999999998e-05, 6.523600000000324e-05, 6.601400000000313e-05, 6.556900000000143e-05, 6.549999999999612e-05, 6.594399999999834e-05, 6.556900000000143e-05, 6.5583000000001e-05, 6.56950000000045e-05, 6.57359999999968e-05, 6.599999999999662e-05, 6.577800000000245e-05, 6.591699999999867e-05, 6.533400000000023e-05, 6.566699999999842e-05, 6.534700000000032e-05, 6.529200000000152e-05, 6.508399999999998e-05, 6.515299999999835e-05, 6.574999999999637e-05, 6.509700000000007e-05, 6.519399999999759e-05, 6.595799999999791e-05, 6.50280000000017e-05, 6.562499999999971e-05, 6.545799999999741e-05, 6.562499999999971e-05, 6.597199999999748e-05, 6.512499999999921e-05, 6.57779999999955e-05, 6.598699999999652e-05, 6.545899999999688e-05, 6.584700000000082e-05, 6.50280000000017e-05, 6.534700000000032e-05, 6.594499999999781e-05, 6.595799999999791e-05, 6.511099999999964e-05, 6.569399999999809e-05, 6.513899999999878e-05, 6.584699999999388e-05, 6.563899999999928e-05, 6.55280000000022e-05, 6.591699999999867e-05, 6.529199999999458e-05, 6.508299999999356e-05, 6.586100000000039e-05, 6.586100000000039e-05, 6.512499999999921e-05, 6.52229999999962e-05]</msg>
<status status="PASS" starttime="20201115 23:01:11.366" endtime="20201115 23:01:11.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.354" endtime="20201115 23:01:11.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.450" endtime="20201115 23:01:11.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:11.458" endtime="20201115 23:01:11.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.454" endtime="20201115 23:01:11.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.445" endtime="20201115 23:01:11.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.865" endtime="20201115 23:01:11.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.861" endtime="20201115 23:01:11.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.859" endtime="20201115 23:01:11.484"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.490" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.511" endtime="20201115 23:01:11.533"></status>
</kw>
<msg timestamp="20201115 23:01:11.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:11.508" endtime="20201115 23:01:11.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:11.536" endtime="20201115 23:01:11.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.543" endtime="20201115 23:01:11.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.501" endtime="20201115 23:01:11.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.495" endtime="20201115 23:01:11.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.566" endtime="20201115 23:01:11.900"></status>
</kw>
<msg timestamp="20201115 23:01:11.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046722972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046789333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:11.563" endtime="20201115 23:01:11.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046722972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046789333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:11.910" endtime="20201115 23:01:11.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.928" endtime="20201115 23:01:11.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.556" endtime="20201115 23:01:11.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.551" endtime="20201115 23:01:11.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:11.946" level="INFO">${RESULT} = [{'time': 0.046789333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.636100000000089e-05, 'source_diff': 6.636100000000089e-05}, {'time': 0.046867361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:11.937" endtime="20201115 23:01:11.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:11.977" level="INFO">${ACCURACY} = {'diff': [6.636100000000089e-05, 6.701400000000413e-05, 6.686099999999445e-05, 6.613899999999978e-05, 6.60830000000015e-05, 6.644499999999831e-05, 6.670799999999866e-05, 6.627800000000295e-05, 6.69999...</msg>
<status status="PASS" starttime="20201115 23:01:11.948" endtime="20201115 23:01:11.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.988" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:01:11.985" endtime="20201115 23:01:11.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.994" level="INFO">VALUE: [6.636100000000089e-05, 6.701400000000413e-05, 6.686099999999445e-05, 6.613899999999978e-05, 6.60830000000015e-05, 6.644499999999831e-05, 6.670799999999866e-05, 6.627800000000295e-05, 6.699999999999762e-05, 6.666699999999942e-05, 6.67500000000043e-05, 6.634700000000132e-05, 6.618099999999849e-05, 6.64159999999997e-05, 6.69160000000002e-05, 6.695799999999891e-05, 6.669399999999909e-05, 6.681899999999574e-05, 6.609699999999413e-05, 6.606900000000193e-05, 6.681899999999574e-05, 6.609699999999413e-05, 6.632000000000166e-05, 6.643099999999874e-05, 6.62500000000038e-05, 6.651399999999669e-05, 6.686100000000139e-05, 6.612500000000021e-05, 6.70559999999959e-05, 6.655500000000286e-05, 6.669399999999909e-05, 6.697200000000542e-05, 6.668100000000593e-05, 6.674999999999737e-05, 6.619399999999859e-05, 6.65559999999954e-05, 6.666699999999942e-05, 6.6583000000002e-05, 6.672199999999823e-05, 6.629200000000252e-05, 6.698600000000499e-05, 6.629100000000304e-05, 6.69160000000002e-05, 6.697299999999795e-05, 6.606899999999499e-05, 6.687499999999402e-05, 6.654099999999635e-05, 6.649999999999712e-05, 6.651400000000363e-05, 6.691699999999967e-05]</msg>
<status status="PASS" starttime="20201115 23:01:11.990" endtime="20201115 23:01:11.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.978" endtime="20201115 23:01:11.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.003" endtime="20201115 23:01:12.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:12.011" endtime="20201115 23:01:12.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.007" endtime="20201115 23:01:12.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.998" endtime="20201115 23:01:12.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.491" endtime="20201115 23:01:12.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.487" endtime="20201115 23:01:12.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.485" endtime="20201115 23:01:12.037"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.043" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.064" endtime="20201115 23:01:12.085"></status>
</kw>
<msg timestamp="20201115 23:01:12.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.061" endtime="20201115 23:01:12.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.089" endtime="20201115 23:01:12.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.095" endtime="20201115 23:01:12.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.054" endtime="20201115 23:01:12.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.048" endtime="20201115 23:01:12.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.120" endtime="20201115 23:01:12.454"></status>
</kw>
<msg timestamp="20201115 23:01:12.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046655181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04672225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:12.115" endtime="20201115 23:01:12.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046655181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04672225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:12.463" endtime="20201115 23:01:12.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.482" endtime="20201115 23:01:12.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.108" endtime="20201115 23:01:12.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.103" endtime="20201115 23:01:12.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:12.500" level="INFO">${RESULT} = [{'time': 0.04672225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.706900000000293e-05, 'source_diff': 6.706900000000293e-05}, {'time': 0.046802264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:12.491" endtime="20201115 23:01:12.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:12.530" level="INFO">${ACCURACY} = {'diff': [6.706900000000293e-05, 6.773600000000574e-05, 6.772199999999923e-05, 6.791700000000067e-05, 6.713900000000078e-05, 6.783400000000273e-05, 6.794499999999981e-05, 6.772199999999923e-05, 6.7305...</msg>
<status status="PASS" starttime="20201115 23:01:12.502" endtime="20201115 23:01:12.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.541" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:01:12.539" endtime="20201115 23:01:12.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.547" level="INFO">VALUE: [6.706900000000293e-05, 6.773600000000574e-05, 6.772199999999923e-05, 6.791700000000067e-05, 6.713900000000078e-05, 6.783400000000273e-05, 6.794499999999981e-05, 6.772199999999923e-05, 6.730500000000361e-05, 6.736099999999495e-05, 6.756899999999649e-05, 6.729100000000404e-05, 6.765300000000085e-05, 6.793100000000024e-05, 6.706899999999599e-05, 6.729199999999658e-05, 6.756900000000343e-05, 6.741700000000017e-05, 6.788899999999459e-05, 6.716699999999992e-05, 6.750000000000506e-05, 6.77909999999976e-05, 6.729199999999658e-05, 6.773600000000574e-05, 6.712500000000121e-05, 6.77080000000066e-05, 6.715200000000088e-05, 6.756900000000343e-05, 6.794400000000034e-05, 6.795799999999991e-05, 6.712500000000121e-05, 6.744399999999984e-05, 6.798599999999905e-05, 6.795899999999938e-05, 6.723600000000524e-05, 6.733400000000223e-05, 6.794499999999981e-05, 6.724999999999787e-05, 6.733299999999581e-05, 6.784700000000282e-05, 6.769400000000009e-05, 6.766600000000095e-05, 6.711100000000164e-05, 6.741700000000017e-05, 6.712500000000121e-05, 6.715300000000035e-05, 6.719499999999906e-05, 6.795799999999991e-05, 6.774999999999837e-05, 6.758400000000248e-05]</msg>
<status status="PASS" starttime="20201115 23:01:12.543" endtime="20201115 23:01:12.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.532" endtime="20201115 23:01:12.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.555" endtime="20201115 23:01:12.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:12.564" endtime="20201115 23:01:12.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.559" endtime="20201115 23:01:12.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.551" endtime="20201115 23:01:12.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.044" endtime="20201115 23:01:12.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.040" endtime="20201115 23:01:12.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.038" endtime="20201115 23:01:12.590"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.595" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.617" endtime="20201115 23:01:12.637"></status>
</kw>
<msg timestamp="20201115 23:01:12.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.614" endtime="20201115 23:01:12.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.641" endtime="20201115 23:01:12.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.647" endtime="20201115 23:01:12.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.606" endtime="20201115 23:01:12.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.601" endtime="20201115 23:01:12.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.660" endtime="20201115 23:01:12.947"></status>
</kw>
<msg timestamp="20201115 23:01:12.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046673764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04674275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:12.658" endtime="20201115 23:01:12.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046673764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04674275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:12.951" endtime="20201115 23:01:12.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.960" endtime="20201115 23:01:12.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.655" endtime="20201115 23:01:12.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.653" endtime="20201115 23:01:12.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:12.969" level="INFO">${RESULT} = [{'time': 0.04674275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.898600000000005e-05, 'source_diff': 6.898600000000005e-05}, {'time': 0.046818764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:12.964" endtime="20201115 23:01:12.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:12.982" level="INFO">${ACCURACY} = {'diff': [6.898600000000005e-05, 6.812500000000221e-05, 6.811100000000264e-05, 6.824999999999887e-05, 6.884700000000382e-05, 6.858399999999654e-05, 6.843000000000127e-05, 6.841599999999476e-05, 6.8486...</msg>
<status status="PASS" starttime="20201115 23:01:12.970" endtime="20201115 23:01:12.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.987" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:01:12.986" endtime="20201115 23:01:12.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.990" level="INFO">VALUE: [6.898600000000005e-05, 6.812500000000221e-05, 6.811100000000264e-05, 6.824999999999887e-05, 6.884700000000382e-05, 6.858399999999654e-05, 6.843000000000127e-05, 6.841599999999476e-05, 6.848600000000649e-05, 6.816600000000145e-05, 6.87909999999986e-05, 6.872200000000023e-05, 6.805499999999742e-05, 6.824999999999887e-05, 6.82500000000058e-05, 6.82359999999993e-05, 6.872200000000023e-05, 6.901399999999919e-05, 6.851400000000563e-05, 6.892999999999483e-05, 6.806999999999647e-05, 6.808400000000298e-05, 6.87909999999986e-05, 6.845800000000041e-05, 6.865200000000238e-05, 6.876399999999894e-05, 6.883300000000425e-05, 6.826399999999844e-05, 6.879199999999808e-05, 6.815300000000135e-05, 6.858299999999706e-05, 6.881999999999722e-05, 6.80700000000034e-05, 6.865300000000185e-05, 6.816700000000092e-05, 6.900000000000656e-05, 6.808399999999604e-05, 6.893100000000124e-05, 6.815200000000188e-05, 6.852699999999878e-05, 6.849999999999912e-05, 6.805500000000436e-05, 6.848599999999955e-05, 6.865300000000185e-05, 6.813900000000178e-05, 6.802799999999776e-05, 6.862500000000271e-05, 6.826399999999844e-05, 6.804199999999733e-05, 6.838900000000203e-05]</msg>
<status status="PASS" starttime="20201115 23:01:12.988" endtime="20201115 23:01:12.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.983" endtime="20201115 23:01:12.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.994" endtime="20201115 23:01:12.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:12.998" endtime="20201115 23:01:13.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.996" endtime="20201115 23:01:13.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.992" endtime="20201115 23:01:13.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.597" endtime="20201115 23:01:13.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.593" endtime="20201115 23:01:13.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.591" endtime="20201115 23:01:13.020"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.022" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.032" endtime="20201115 23:01:13.050"></status>
</kw>
<msg timestamp="20201115 23:01:13.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.031" endtime="20201115 23:01:13.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.052" endtime="20201115 23:01:13.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.055" endtime="20201115 23:01:13.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.027" endtime="20201115 23:01:13.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.025" endtime="20201115 23:01:13.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.078" endtime="20201115 23:01:13.415"></status>
</kw>
<msg timestamp="20201115 23:01:13.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027427222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027496736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.074" endtime="20201115 23:01:13.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027427222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027496736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.425" endtime="20201115 23:01:13.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.444" endtime="20201115 23:01:13.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.067" endtime="20201115 23:01:13.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.063" endtime="20201115 23:01:13.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:13.461" level="INFO">${RESULT} = [{'time': 0.027496736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.951399999999969e-05, 'source_diff': 6.951399999999969e-05}, {'time': 0.02757675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:13.452" endtime="20201115 23:01:13.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:13.493" level="INFO">${ACCURACY} = {'diff': [6.951399999999969e-05, 6.984700000000135e-05, 6.915299999999888e-05, 6.930599999999815e-05, 6.901399999999919e-05, 6.934700000000085e-05, 6.998600000000105e-05, 6.944500000000131e-05, 6.9249...</msg>
<status status="PASS" starttime="20201115 23:01:13.463" endtime="20201115 23:01:13.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.504" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:01:13.502" endtime="20201115 23:01:13.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.509" level="INFO">VALUE: [6.951399999999969e-05, 6.984700000000135e-05, 6.915299999999888e-05, 6.930599999999815e-05, 6.901399999999919e-05, 6.934700000000085e-05, 6.998600000000105e-05, 6.944500000000131e-05, 6.924999999999987e-05, 6.952799999999926e-05, 6.908300000000103e-05, 6.929100000000257e-05, 6.997199999999801e-05, 6.947200000000098e-05, 6.933300000000128e-05, 6.919500000000106e-05, 6.904199999999833e-05, 6.901399999999919e-05, 6.994400000000234e-05, 6.958300000000153e-05, 6.944500000000131e-05, 6.929200000000205e-05, 6.938899999999956e-05, 6.994400000000234e-05, 6.954199999999883e-05, 6.965299999999938e-05, 6.945799999999794e-05, 6.995799999999844e-05, 6.987499999999702e-05, 6.954099999999935e-05, 6.929200000000205e-05, 6.911100000000017e-05, 6.969400000000209e-05, 6.951399999999969e-05, 6.931999999999772e-05, 6.984700000000135e-05, 6.997299999999748e-05, 6.92230000000002e-05, 6.931899999999824e-05, 6.976300000000046e-05, 6.954099999999935e-05, 6.944400000000184e-05, 6.913899999999931e-05, 6.913900000000278e-05, 6.963899999999981e-05, 6.950000000000012e-05, 6.979200000000255e-05, 6.981899999999874e-05, 6.963899999999981e-05, 6.929199999999858e-05]</msg>
<status status="PASS" starttime="20201115 23:01:13.506" endtime="20201115 23:01:13.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.495" endtime="20201115 23:01:13.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.518" endtime="20201115 23:01:13.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:13.527" endtime="20201115 23:01:13.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.522" endtime="20201115 23:01:13.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.514" endtime="20201115 23:01:13.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.023" endtime="20201115 23:01:13.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.021" endtime="20201115 23:01:13.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.020" endtime="20201115 23:01:13.553"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.558" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.580" endtime="20201115 23:01:13.600"></status>
</kw>
<msg timestamp="20201115 23:01:13.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.577" endtime="20201115 23:01:13.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.604" endtime="20201115 23:01:13.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.611" endtime="20201115 23:01:13.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.569" endtime="20201115 23:01:13.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.564" endtime="20201115 23:01:13.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.634" endtime="20201115 23:01:13.969"></status>
</kw>
<msg timestamp="20201115 23:01:13.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046828597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046898875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.631" endtime="20201115 23:01:13.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046828597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046898875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.978" endtime="20201115 23:01:13.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.997" endtime="20201115 23:01:14.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.624" endtime="20201115 23:01:14.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.619" endtime="20201115 23:01:14.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:14.016" level="INFO">${RESULT} = [{'time': 0.046898875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.027800000000001e-05, 'source_diff': 7.027800000000001e-05}, {'time': 0.046975875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:14.007" endtime="20201115 23:01:14.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:14.046" level="INFO">${ACCURACY} = {'diff': [7.027800000000001e-05, 7.077800000000051e-05, 7.069500000000256e-05, 7.051400000000069e-05, 7.025000000000087e-05, 7.04309999999958e-05, 7.063900000000428e-05, 7.088799999999812e-05, 7.02230...</msg>
<status status="PASS" starttime="20201115 23:01:14.018" endtime="20201115 23:01:14.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.057" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:01:14.055" endtime="20201115 23:01:14.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.062" level="INFO">VALUE: [7.027800000000001e-05, 7.077800000000051e-05, 7.069500000000256e-05, 7.051400000000069e-05, 7.025000000000087e-05, 7.04309999999958e-05, 7.063900000000428e-05, 7.088799999999812e-05, 7.02230000000012e-05, 7.05689999999995e-05, 7.072200000000223e-05, 7.097200000000248e-05, 7.087499999999802e-05, 7.025000000000087e-05, 7.011100000000464e-05, 7.070800000000266e-05, 7.031900000000618e-05, 7.05559999999994e-05, 7.018099999999555e-05, 7.09030000000041e-05, 7.097300000000195e-05, 7.100000000000162e-05, 7.083399999999879e-05, 7.023700000000077e-05, 7.02360000000013e-05, 7.020799999999522e-05, 7.04439999999959e-05, 7.033300000000575e-05, 7.083299999999931e-05, 7.027800000000001e-05, 7.09030000000041e-05, 7.01109999999977e-05, 7.07360000000018e-05, 7.079200000000008e-05, 7.054199999999983e-05, 7.07230000000017e-05, 7.091699999999673e-05, 7.031999999999872e-05, 7.070800000000266e-05, 7.018000000000302e-05, 7.088900000000453e-05, 7.006899999999899e-05, 7.002799999999976e-05, 7.040299999999666e-05, 7.05689999999995e-05, 7.075000000000137e-05, 7.004199999999933e-05, 7.004199999999933e-05, 7.094499999999587e-05, 7.008399999999804e-05]</msg>
<status status="PASS" starttime="20201115 23:01:14.059" endtime="20201115 23:01:14.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.048" endtime="20201115 23:01:14.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.071" endtime="20201115 23:01:14.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:14.079" endtime="20201115 23:01:14.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.075" endtime="20201115 23:01:14.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.066" endtime="20201115 23:01:14.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.559" endtime="20201115 23:01:14.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.556" endtime="20201115 23:01:14.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.554" endtime="20201115 23:01:14.106"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.111" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.139" endtime="20201115 23:01:14.160"></status>
</kw>
<msg timestamp="20201115 23:01:14.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.136" endtime="20201115 23:01:14.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.164" endtime="20201115 23:01:14.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.170" endtime="20201115 23:01:14.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.122" endtime="20201115 23:01:14.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.116" endtime="20201115 23:01:14.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.194" endtime="20201115 23:01:14.530"></status>
</kw>
<msg timestamp="20201115 23:01:14.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053266014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053337597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.190" endtime="20201115 23:01:14.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053266014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053337597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.539" endtime="20201115 23:01:14.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.559" endtime="20201115 23:01:14.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.183" endtime="20201115 23:01:14.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.178" endtime="20201115 23:01:14.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:14.576" level="INFO">${RESULT} = [{'time': 0.053337597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.158300000000006e-05, 'source_diff': 7.158300000000006e-05}, {'time': 0.053420611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:14.567" endtime="20201115 23:01:14.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:14.606" level="INFO">${ACCURACY} = {'diff': [7.158300000000006e-05, 7.158300000000006e-05, 7.151400000000169e-05, 7.119399999999665e-05, 7.154200000000083e-05, 7.15560000000004e-05, 7.112500000000521e-05, 7.125000000000187e-05, 7.15839...</msg>
<status status="PASS" starttime="20201115 23:01:14.578" endtime="20201115 23:01:14.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.617" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:01:14.615" endtime="20201115 23:01:14.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.623" level="INFO">VALUE: [7.158300000000006e-05, 7.158300000000006e-05, 7.151400000000169e-05, 7.119399999999665e-05, 7.154200000000083e-05, 7.15560000000004e-05, 7.112500000000521e-05, 7.125000000000187e-05, 7.158399999999954e-05, 7.187499999999902e-05, 7.154100000000135e-05, 7.179099999999466e-05, 7.105500000000042e-05, 7.127700000000153e-05, 7.191599999999826e-05, 7.170800000000366e-05, 7.187499999999902e-05, 7.108299999999956e-05, 7.12360000000023e-05, 7.200000000000262e-05, 7.106999999999947e-05, 7.183399999999979e-05, 7.170900000000313e-05, 7.163899999999834e-05, 7.191599999999826e-05, 7.174999999999543e-05, 7.116599999999751e-05, 7.112500000000521e-05, 7.154200000000083e-05, 7.144400000000384e-05, 7.195799999999697e-05, 7.144400000000384e-05, 7.177800000000151e-05, 7.195800000000391e-05, 7.131999999999972e-05, 7.175000000000237e-05, 7.163899999999834e-05, 7.159799999999911e-05, 7.154200000000083e-05, 7.137500000000546e-05, 7.12360000000023e-05, 7.159699999999963e-05, 7.137499999999852e-05, 7.126400000000144e-05, 7.100000000000162e-05, 7.174999999999543e-05, 7.154199999999389e-05, 7.126400000000144e-05, 7.156999999999997e-05, 7.104200000000033e-05]</msg>
<status status="PASS" starttime="20201115 23:01:14.619" endtime="20201115 23:01:14.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.608" endtime="20201115 23:01:14.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.631" endtime="20201115 23:01:14.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:14.640" endtime="20201115 23:01:14.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.635" endtime="20201115 23:01:14.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.627" endtime="20201115 23:01:14.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.113" endtime="20201115 23:01:14.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.108" endtime="20201115 23:01:14.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.107" endtime="20201115 23:01:14.667"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.672" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.694" endtime="20201115 23:01:14.715"></status>
</kw>
<msg timestamp="20201115 23:01:14.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.691" endtime="20201115 23:01:14.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.718" endtime="20201115 23:01:14.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.725" endtime="20201115 23:01:14.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.683" endtime="20201115 23:01:14.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.678" endtime="20201115 23:01:14.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.749" endtime="20201115 23:01:15.083"></status>
</kw>
<msg timestamp="20201115 23:01:15.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047628111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047700722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.745" endtime="20201115 23:01:15.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047628111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047700722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.093" endtime="20201115 23:01:15.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.111" endtime="20201115 23:01:15.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.738" endtime="20201115 23:01:15.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.733" endtime="20201115 23:01:15.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:15.130" level="INFO">${RESULT} = [{'time': 0.047700722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.26110000000002e-05, 'source_diff': 7.26110000000002e-05}, {'time': 0.047787736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:15.121" endtime="20201115 23:01:15.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:15.160" level="INFO">${ACCURACY} = {'diff': [7.26110000000002e-05, 7.266699999999848e-05, 7.238799999999962e-05, 7.290299999999916e-05, 7.216599999999851e-05, 7.290299999999916e-05, 7.21109999999997e-05, 7.298599999999711e-05, 7.202799...</msg>
<status status="PASS" starttime="20201115 23:01:15.132" endtime="20201115 23:01:15.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.171" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:01:15.169" endtime="20201115 23:01:15.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.176" level="INFO">VALUE: [7.26110000000002e-05, 7.266699999999848e-05, 7.238799999999962e-05, 7.290299999999916e-05, 7.216599999999851e-05, 7.290299999999916e-05, 7.21109999999997e-05, 7.298599999999711e-05, 7.202799999999482e-05, 7.257000000000097e-05, 7.284700000000088e-05, 7.27360000000038e-05, 7.247199999999704e-05, 7.22910000000021e-05, 7.247199999999704e-05, 7.220799999999722e-05, 7.227799999999507e-05, 7.276400000000294e-05, 7.287500000000002e-05, 7.209700000000013e-05, 7.277800000000251e-05, 7.274999999999643e-05, 7.26110000000002e-05, 7.220900000000363e-05, 7.280500000000217e-05, 7.201299999999577e-05, 7.213899999999884e-05, 7.298600000000405e-05, 7.222199999999679e-05, 7.245799999999747e-05, 7.206899999999405e-05, 7.291700000000567e-05, 7.300000000000362e-05, 7.227800000000201e-05, 7.207000000000047e-05, 7.234799999999986e-05, 7.26110000000002e-05, 7.2763999999996e-05, 7.24030000000056e-05, 7.208300000000056e-05, 7.281900000000174e-05, 7.204100000000185e-05, 7.223599999999636e-05, 7.229199999999464e-05, 7.226400000000244e-05, 7.254199999999489e-05, 7.204200000000133e-05, 7.250000000000312e-05, 7.251400000000269e-05, 7.28189999999948e-05]</msg>
<status status="PASS" starttime="20201115 23:01:15.173" endtime="20201115 23:01:15.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.162" endtime="20201115 23:01:15.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.186" endtime="20201115 23:01:15.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.194" endtime="20201115 23:01:15.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.190" endtime="20201115 23:01:15.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.181" endtime="20201115 23:01:15.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.674" endtime="20201115 23:01:15.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.669" endtime="20201115 23:01:15.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.668" endtime="20201115 23:01:15.221"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.226" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.248" endtime="20201115 23:01:15.269"></status>
</kw>
<msg timestamp="20201115 23:01:15.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.244" endtime="20201115 23:01:15.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.272" endtime="20201115 23:01:15.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.279" endtime="20201115 23:01:15.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.237" endtime="20201115 23:01:15.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.231" endtime="20201115 23:01:15.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.303" endtime="20201115 23:01:15.640"></status>
</kw>
<msg timestamp="20201115 23:01:15.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046878181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046951208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.299" endtime="20201115 23:01:15.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046878181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046951208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.650" endtime="20201115 23:01:15.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.668" endtime="20201115 23:01:15.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.292" endtime="20201115 23:01:15.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.287" endtime="20201115 23:01:15.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:15.686" level="INFO">${RESULT} = [{'time': 0.046951208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.302700000000328e-05, 'source_diff': 7.302700000000328e-05}, {'time': 0.047040222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:15.677" endtime="20201115 23:01:15.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:15.718" level="INFO">${ACCURACY} = {'diff': [7.302700000000328e-05, 7.383300000000231e-05, 7.397199999999854e-05, 7.313899999999984e-05, 7.384699999999494e-05, 7.350000000000412e-05, 7.359799999999417e-05, 7.374999999999743e-05, 7.3680...</msg>
<status status="PASS" starttime="20201115 23:01:15.688" endtime="20201115 23:01:15.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.729" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:01:15.727" endtime="20201115 23:01:15.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.736" level="INFO">VALUE: [7.302700000000328e-05, 7.383300000000231e-05, 7.397199999999854e-05, 7.313899999999984e-05, 7.384699999999494e-05, 7.350000000000412e-05, 7.359799999999417e-05, 7.374999999999743e-05, 7.368099999999905e-05, 7.361200000000068e-05, 7.373699999999733e-05, 7.318099999999855e-05, 7.301299999999677e-05, 7.333300000000181e-05, 7.370799999999872e-05, 7.305499999999548e-05, 7.304200000000233e-05, 7.390300000000016e-05, 7.366699999999948e-05, 7.372199999999829e-05, 7.304200000000233e-05, 7.391699999999973e-05, 7.320900000000463e-05, 7.312500000000027e-05, 7.347300000000445e-05, 7.391600000000026e-05, 7.325000000000387e-05, 7.390200000000069e-05, 7.32910000000031e-05, 7.308400000000104e-05, 7.39439999999994e-05, 7.348600000000455e-05, 7.368099999999905e-05, 7.348599999999761e-05, 7.362500000000077e-05, 7.363900000000034e-05, 7.400000000000462e-05, 7.329199999999564e-05, 7.347300000000445e-05, 7.319499999999812e-05, 7.305500000000242e-05, 7.375000000000437e-05, 7.333300000000181e-05, 7.362500000000077e-05, 7.323599999999736e-05, 7.324999999999693e-05, 7.363900000000034e-05, 7.302800000000276e-05, 7.391699999999973e-05, 7.387500000000102e-05]</msg>
<status status="PASS" starttime="20201115 23:01:15.732" endtime="20201115 23:01:15.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.720" endtime="20201115 23:01:15.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.744" endtime="20201115 23:01:15.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.753" endtime="20201115 23:01:15.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.748" endtime="20201115 23:01:15.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.740" endtime="20201115 23:01:15.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.227" endtime="20201115 23:01:15.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.223" endtime="20201115 23:01:15.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.222" endtime="20201115 23:01:15.779"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.784" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.806" endtime="20201115 23:01:15.827"></status>
</kw>
<msg timestamp="20201115 23:01:15.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.803" endtime="20201115 23:01:15.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.831" endtime="20201115 23:01:15.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.837" endtime="20201115 23:01:15.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.796" endtime="20201115 23:01:15.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.790" endtime="20201115 23:01:15.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.860" endtime="20201115 23:01:16.195"></status>
</kw>
<msg timestamp="20201115 23:01:16.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046715861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046790653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.857" endtime="20201115 23:01:16.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046715861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046790653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.205" endtime="20201115 23:01:16.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.223" endtime="20201115 23:01:16.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.850" endtime="20201115 23:01:16.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.845" endtime="20201115 23:01:16.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:16.242" level="INFO">${RESULT} = [{'time': 0.046790653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.479200000000408e-05, 'source_diff': 7.479200000000408e-05}, {'time': 0.046876667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:16.233" endtime="20201115 23:01:16.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:16.273" level="INFO">${ACCURACY} = {'diff': [7.479200000000408e-05, 7.45839999999956e-05, 7.427800000000401e-05, 7.425000000000487e-05, 7.455500000000392e-05, 7.463800000000187e-05, 7.487500000000202e-05, 7.44439999999999e-05, 7.454099...</msg>
<status status="PASS" starttime="20201115 23:01:16.245" endtime="20201115 23:01:16.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.284" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:01:16.282" endtime="20201115 23:01:16.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.289" level="INFO">VALUE: [7.479200000000408e-05, 7.45839999999956e-05, 7.427800000000401e-05, 7.425000000000487e-05, 7.455500000000392e-05, 7.463800000000187e-05, 7.487500000000202e-05, 7.44439999999999e-05, 7.454099999999741e-05, 7.462500000000177e-05, 7.423599999999836e-05, 7.415300000000041e-05, 7.459700000000263e-05, 7.404199999999639e-05, 7.415299999999347e-05, 7.495799999999997e-05, 7.440300000000066e-05, 7.437500000000152e-05, 7.454100000000435e-05, 7.450000000000512e-05, 7.474999999999843e-05, 7.423599999999836e-05, 7.49440000000004e-05, 7.427800000000401e-05, 7.452799999999732e-05, 7.436100000000195e-05, 7.402799999999682e-05, 7.499999999999868e-05, 7.470899999999919e-05, 7.432000000000272e-05, 7.448599999999861e-05, 7.486200000000193e-05, 7.449999999999818e-05, 7.41110000000017e-05, 7.449999999999818e-05, 7.462500000000177e-05, 7.470799999999972e-05, 7.481900000000374e-05, 7.487500000000202e-05, 7.461099999999526e-05, 7.470799999999972e-05, 7.416699999999998e-05, 7.423599999999836e-05, 7.408400000000204e-05, 7.495899999999944e-05, 7.409700000000213e-05, 7.495799999999997e-05, 7.487500000000202e-05, 7.436099999999501e-05, 7.413900000000084e-05]</msg>
<status status="PASS" starttime="20201115 23:01:16.286" endtime="20201115 23:01:16.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.275" endtime="20201115 23:01:16.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.296" endtime="20201115 23:01:16.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.300" endtime="20201115 23:01:16.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.298" endtime="20201115 23:01:16.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.294" endtime="20201115 23:01:16.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.786" endtime="20201115 23:01:16.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.782" endtime="20201115 23:01:16.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.780" endtime="20201115 23:01:16.322"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.324" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.335" endtime="20201115 23:01:16.353"></status>
</kw>
<msg timestamp="20201115 23:01:16.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.334" endtime="20201115 23:01:16.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.355" endtime="20201115 23:01:16.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.358" endtime="20201115 23:01:16.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.330" endtime="20201115 23:01:16.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.327" endtime="20201115 23:01:16.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.369" endtime="20201115 23:01:16.699"></status>
</kw>
<msg timestamp="20201115 23:01:16.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028520792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028596639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.368" endtime="20201115 23:01:16.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028520792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028596639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.709" endtime="20201115 23:01:16.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.728" endtime="20201115 23:01:16.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.364" endtime="20201115 23:01:16.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.362" endtime="20201115 23:01:16.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:16.745" level="INFO">${RESULT} = [{'time': 0.028596639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.584700000000041e-05, 'source_diff': 7.584700000000041e-05}, {'time': 0.028674681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:16.736" endtime="20201115 23:01:16.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:16.775" level="INFO">${ACCURACY} = {'diff': [7.584700000000041e-05, 7.511200000000218e-05, 7.568099999999758e-05, 7.520899999999969e-05, 7.595900000000044e-05, 7.511099999999923e-05, 7.595800000000097e-05, 7.590200000000269e-05, 7.5360...</msg>
<status status="PASS" starttime="20201115 23:01:16.748" endtime="20201115 23:01:16.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.786" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:01:16.784" endtime="20201115 23:01:16.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.792" level="INFO">VALUE: [7.584700000000041e-05, 7.511200000000218e-05, 7.568099999999758e-05, 7.520899999999969e-05, 7.595900000000044e-05, 7.511099999999923e-05, 7.595800000000097e-05, 7.590200000000269e-05, 7.536099999999948e-05, 7.524999999999893e-05, 7.530499999999773e-05, 7.502800000000129e-05, 7.504200000000086e-05, 7.584700000000041e-05, 7.5763999999999e-05, 7.595900000000044e-05, 7.533399999999982e-05, 7.511200000000218e-05, 7.59449999999974e-05, 7.519500000000012e-05, 7.511099999999923e-05, 7.597200000000054e-05, 7.59440000000014e-05, 7.505499999999748e-05, 7.536099999999948e-05, 7.574999999999943e-05, 7.529200000000111e-05, 7.572200000000029e-05, 7.554200000000136e-05, 7.519500000000012e-05, 7.549999999999918e-05, 7.558400000000007e-05, 7.559799999999964e-05, 7.597200000000401e-05, 7.525000000000587e-05, 7.526299999999903e-05, 7.506899999999705e-05, 7.502799999999782e-05, 7.530599999999721e-05, 7.53189999999973e-05, 7.515299999999447e-05, 7.529199999999764e-05, 7.53189999999973e-05, 7.520899999999969e-05, 7.587499999999608e-05, 7.532000000000372e-05, 7.538799999999568e-05, 7.540300000000166e-05, 7.512500000000227e-05, 7.52910000000051e-05]</msg>
<status status="PASS" starttime="20201115 23:01:16.789" endtime="20201115 23:01:16.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.777" endtime="20201115 23:01:16.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.801" endtime="20201115 23:01:16.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.809" endtime="20201115 23:01:16.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.805" endtime="20201115 23:01:16.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.796" endtime="20201115 23:01:16.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.325" endtime="20201115 23:01:16.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.323" endtime="20201115 23:01:16.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.322" endtime="20201115 23:01:16.835"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.841" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.862" endtime="20201115 23:01:16.883"></status>
</kw>
<msg timestamp="20201115 23:01:16.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.859" endtime="20201115 23:01:16.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.887" endtime="20201115 23:01:16.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.893" endtime="20201115 23:01:16.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.852" endtime="20201115 23:01:16.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.846" endtime="20201115 23:01:16.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.917" endtime="20201115 23:01:17.251"></status>
</kw>
<msg timestamp="20201115 23:01:17.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046860778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046936958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.913" endtime="20201115 23:01:17.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046860778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046936958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.261" endtime="20201115 23:01:17.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.279" endtime="20201115 23:01:17.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.906" endtime="20201115 23:01:17.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.901" endtime="20201115 23:01:17.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.298" level="INFO">${RESULT} = [{'time': 0.046936958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.618000000000208e-05, 'source_diff': 7.618000000000208e-05}, {'time': 0.047018958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:17.289" endtime="20201115 23:01:17.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.328" level="INFO">${ACCURACY} = {'diff': [7.618000000000208e-05, 7.619400000000165e-05, 7.631900000000524e-05, 7.62639999999995e-05, 7.670800000000172e-05, 7.69169999999958e-05, 7.6764e-05, 7.638899999999615e-05, 7.670799999999478e-...</msg>
<status status="PASS" starttime="20201115 23:01:17.300" endtime="20201115 23:01:17.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.339" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.337" endtime="20201115 23:01:17.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.345" level="INFO">VALUE: [7.618000000000208e-05, 7.619400000000165e-05, 7.631900000000524e-05, 7.62639999999995e-05, 7.670800000000172e-05, 7.69169999999958e-05, 7.6764e-05, 7.638899999999615e-05, 7.670799999999478e-05, 7.604199999999839e-05, 7.605599999999796e-05, 7.661099999999726e-05, 7.620900000000069e-05, 7.637499999999658e-05, 7.636099999999701e-05, 7.636100000000395e-05, 7.680499999999923e-05, 7.602800000000576e-05, 7.60560000000049e-05, 7.650000000000018e-05, 7.640300000000266e-05, 7.612500000000327e-05, 7.674999999999349e-05, 7.672200000000129e-05, 7.701400000000025e-05, 7.6764e-05, 7.611199999999624e-05, 7.637499999999658e-05, 7.624999999999993e-05, 7.690199999999675e-05, 7.665300000000291e-05, 7.687500000000402e-05, 7.63189999999983e-05, 7.613900000000284e-05, 7.673600000000086e-05, 7.669499999999468e-05, 7.675000000000043e-05, 7.622200000000079e-05, 7.598600000000011e-05, 7.676300000000053e-05, 7.606899999999805e-05, 7.690200000000369e-05, 7.604099999999892e-05, 7.611099999999676e-05, 7.602799999999882e-05, 7.695800000000197e-05, 7.608300000000456e-05, 7.623600000000036e-05, 7.654199999999889e-05, 7.616699999999504e-05]</msg>
<status status="PASS" starttime="20201115 23:01:17.342" endtime="20201115 23:01:17.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.330" endtime="20201115 23:01:17.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.354" endtime="20201115 23:01:17.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.363" endtime="20201115 23:01:17.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.358" endtime="20201115 23:01:17.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.349" endtime="20201115 23:01:17.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.842" endtime="20201115 23:01:17.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.838" endtime="20201115 23:01:17.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.836" endtime="20201115 23:01:17.390"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.395" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.417" endtime="20201115 23:01:17.438"></status>
</kw>
<msg timestamp="20201115 23:01:17.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.414" endtime="20201115 23:01:17.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.441" endtime="20201115 23:01:17.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.448" endtime="20201115 23:01:17.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.406" endtime="20201115 23:01:17.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.401" endtime="20201115 23:01:17.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.472" endtime="20201115 23:01:17.807"></status>
</kw>
<msg timestamp="20201115 23:01:17.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047168, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047245542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:17.468" endtime="20201115 23:01:17.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047168, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047245542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:17.816" endtime="20201115 23:01:17.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.835" endtime="20201115 23:01:17.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.461" endtime="20201115 23:01:17.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.457" endtime="20201115 23:01:17.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.852" level="INFO">${RESULT} = [{'time': 0.047245542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.754199999999989e-05, 'source_diff': 7.754199999999989e-05}, {'time': 0.047334597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:17.843" endtime="20201115 23:01:17.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.885" level="INFO">${ACCURACY} = {'diff': [7.754199999999989e-05, 7.758299999999912e-05, 7.730499999999974e-05, 7.723700000000083e-05, 7.705499999999949e-05, 7.78189999999998e-05, 7.752700000000085e-05, 7.722200000000179e-05, 7.74579...</msg>
<status status="PASS" starttime="20201115 23:01:17.855" endtime="20201115 23:01:17.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.896" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.894" endtime="20201115 23:01:17.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.901" level="INFO">VALUE: [7.754199999999989e-05, 7.758299999999912e-05, 7.730499999999974e-05, 7.723700000000083e-05, 7.705499999999949e-05, 7.78189999999998e-05, 7.752700000000085e-05, 7.722200000000179e-05, 7.745799999999553e-05, 7.787499999999808e-05, 7.758299999999912e-05, 7.769400000000315e-05, 7.737499999999758e-05, 7.743099999999586e-05, 7.747200000000204e-05, 7.787500000000502e-05, 7.800000000000168e-05, 7.709700000000513e-05, 7.731900000000624e-05, 7.745799999999553e-05, 7.7764000000001e-05, 7.767999999999664e-05, 7.730599999999921e-05, 7.756899999999955e-05, 7.72640000000005e-05, 7.741700000000323e-05, 7.781999999999928e-05, 7.766699999999654e-05, 7.772300000000176e-05, 7.733399999999835e-05, 7.756999999999903e-05, 7.763800000000487e-05, 7.776399999999406e-05, 7.711099999999776e-05, 7.70969999999982e-05, 7.729199999999964e-05, 7.740299999999672e-05, 7.725000000000093e-05, 7.768099999999611e-05, 7.719500000000212e-05, 7.795900000000244e-05, 7.709799999999767e-05, 7.779200000000014e-05, 7.786199999999799e-05, 7.722200000000179e-05, 7.798600000000211e-05, 7.770800000000272e-05, 7.70969999999982e-05, 7.797200000000254e-05, 7.713900000000384e-05]</msg>
<status status="PASS" starttime="20201115 23:01:17.898" endtime="20201115 23:01:17.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.887" endtime="20201115 23:01:17.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.910" endtime="20201115 23:01:17.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.918" endtime="20201115 23:01:17.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.914" endtime="20201115 23:01:17.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.906" endtime="20201115 23:01:17.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.397" endtime="20201115 23:01:17.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.393" endtime="20201115 23:01:17.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.391" endtime="20201115 23:01:17.945"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.950" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.972" endtime="20201115 23:01:17.994"></status>
</kw>
<msg timestamp="20201115 23:01:17.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.969" endtime="20201115 23:01:17.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.997" endtime="20201115 23:01:18.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.004" endtime="20201115 23:01:18.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.961" endtime="20201115 23:01:18.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.955" endtime="20201115 23:01:18.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.027" endtime="20201115 23:01:18.361"></status>
</kw>
<msg timestamp="20201115 23:01:18.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047441986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047520819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.024" endtime="20201115 23:01:18.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047441986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047520819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.370" endtime="20201115 23:01:18.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.389" endtime="20201115 23:01:18.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.017" endtime="20201115 23:01:18.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.012" endtime="20201115 23:01:18.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:18.409" level="INFO">${RESULT} = [{'time': 0.047520819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.883300000000037e-05, 'source_diff': 7.883300000000037e-05}, {'time': 0.047603847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:18.400" endtime="20201115 23:01:18.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.439" level="INFO">${ACCURACY} = {'diff': [7.883300000000037e-05, 7.799999999999474e-05, 7.880500000000124e-05, 7.866599999999807e-05, 7.848600000000261e-05, 7.88190000000008e-05, 7.873600000000286e-05, 7.836099999999901e-05, 7.87640...</msg>
<status status="PASS" starttime="20201115 23:01:18.412" endtime="20201115 23:01:18.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.451" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:01:18.448" endtime="20201115 23:01:18.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.456" level="INFO">VALUE: [7.883300000000037e-05, 7.799999999999474e-05, 7.880500000000124e-05, 7.866599999999807e-05, 7.848600000000261e-05, 7.88190000000008e-05, 7.873600000000286e-05, 7.836099999999901e-05, 7.8764000000002e-05, 7.837499999999858e-05, 7.850000000000218e-05, 7.850000000000218e-05, 7.833299999999987e-05, 7.81110000000057e-05, 7.824999999999499e-05, 7.884699999999994e-05, 7.884699999999994e-05, 7.833299999999987e-05, 7.852800000000132e-05, 7.836099999999901e-05, 7.85969999999997e-05, 7.829100000000117e-05, 7.886099999999951e-05, 7.827699999999466e-05, 7.808299999999962e-05, 7.819500000000312e-05, 7.872200000000329e-05, 7.890199999999875e-05, 7.83190000000003e-05, 7.829200000000064e-05, 7.886099999999951e-05, 7.83890000000051e-05, 7.823600000000236e-05, 7.815299999999747e-05, 7.868100000000405e-05, 7.842999999999739e-05, 7.829200000000064e-05, 7.826399999999456e-05, 7.812500000000527e-05, 7.898699999999564e-05, 7.863900000000534e-05, 7.811099999999876e-05, 7.861099999999926e-05, 7.895799999999703e-05, 7.899999999999574e-05, 7.819399999999671e-05, 7.880600000000071e-05, 7.8764000000002e-05, 7.819499999999618e-05, 7.805599999999996e-05]</msg>
<status status="PASS" starttime="20201115 23:01:18.453" endtime="20201115 23:01:18.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.441" endtime="20201115 23:01:18.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.465" endtime="20201115 23:01:18.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.474" endtime="20201115 23:01:18.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.469" endtime="20201115 23:01:18.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.460" endtime="20201115 23:01:18.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.951" endtime="20201115 23:01:18.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.947" endtime="20201115 23:01:18.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.946" endtime="20201115 23:01:18.501"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.506" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.528" endtime="20201115 23:01:18.550"></status>
</kw>
<msg timestamp="20201115 23:01:18.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.525" endtime="20201115 23:01:18.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.553" endtime="20201115 23:01:18.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.559" endtime="20201115 23:01:18.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.517" endtime="20201115 23:01:18.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.512" endtime="20201115 23:01:18.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.583" endtime="20201115 23:01:18.920"></status>
</kw>
<msg timestamp="20201115 23:01:18.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047592569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047671639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.580" endtime="20201115 23:01:18.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047592569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047671639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.929" endtime="20201115 23:01:18.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.948" endtime="20201115 23:01:18.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.573" endtime="20201115 23:01:18.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.568" endtime="20201115 23:01:18.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:18.965" level="INFO">${RESULT} = [{'time': 0.047671639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.907000000000053e-05, 'source_diff': 7.907000000000053e-05}, {'time': 0.047753667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:18.956" endtime="20201115 23:01:18.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.995" level="INFO">${ACCURACY} = {'diff': [7.907000000000053e-05, 7.934799999999992e-05, 7.998600000000411e-05, 7.905600000000096e-05, 7.927799999999513e-05, 7.947300000000351e-05, 7.936100000000001e-05, 7.92640000000025e-05, 7.91389...</msg>
<status status="PASS" starttime="20201115 23:01:18.967" endtime="20201115 23:01:18.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.007" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.004" endtime="20201115 23:01:19.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.012" level="INFO">VALUE: [7.907000000000053e-05, 7.934799999999992e-05, 7.998600000000411e-05, 7.905600000000096e-05, 7.927799999999513e-05, 7.947300000000351e-05, 7.936100000000001e-05, 7.92640000000025e-05, 7.91389999999989e-05, 7.944399999999796e-05, 7.995799999999803e-05, 7.970800000000472e-05, 7.983300000000138e-05, 7.94169999999983e-05, 7.955499999999505e-05, 7.986100000000051e-05, 7.983400000000085e-05, 7.952799999999538e-05, 7.916600000000551e-05, 8.000000000000368e-05, 7.972200000000429e-05, 7.900000000000268e-05, 7.974999999999649e-05, 7.955600000000146e-05, 7.969399999999821e-05, 7.954200000000189e-05, 7.962499999999983e-05, 7.983299999999444e-05, 7.958300000000113e-05, 7.997300000000401e-05, 7.987500000000008e-05, 7.912499999999933e-05, 7.991599999999932e-05, 7.975000000000343e-05, 7.999999999999674e-05, 7.929100000000217e-05, 7.911099999999976e-05, 7.908300000000063e-05, 7.905600000000096e-05, 7.962499999999983e-05, 7.94169999999983e-05, 7.943099999999786e-05, 7.923599999999642e-05, 7.983400000000085e-05, 7.970899999999725e-05, 7.920799999999728e-05, 7.963799999999993e-05, 7.994399999999846e-05, 7.990199999999975e-05, 8.001400000000325e-05]</msg>
<status status="PASS" starttime="20201115 23:01:19.009" endtime="20201115 23:01:19.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.997" endtime="20201115 23:01:19.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.022" endtime="20201115 23:01:19.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.030" endtime="20201115 23:01:19.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.026" endtime="20201115 23:01:19.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.017" endtime="20201115 23:01:19.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.508" endtime="20201115 23:01:19.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.504" endtime="20201115 23:01:19.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.502" endtime="20201115 23:01:19.056"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.062" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.083" endtime="20201115 23:01:19.105"></status>
</kw>
<msg timestamp="20201115 23:01:19.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.080" endtime="20201115 23:01:19.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.108" endtime="20201115 23:01:19.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.114" endtime="20201115 23:01:19.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.073" endtime="20201115 23:01:19.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.067" endtime="20201115 23:01:19.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.138" endtime="20201115 23:01:19.474"></status>
</kw>
<msg timestamp="20201115 23:01:19.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046917903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046998819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.135" endtime="20201115 23:01:19.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046917903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046998819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.483" endtime="20201115 23:01:19.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.502" endtime="20201115 23:01:19.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.127" endtime="20201115 23:01:19.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.123" endtime="20201115 23:01:19.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.521" level="INFO">${RESULT} = [{'time': 0.046998819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.091600000000032e-05, 'source_diff': 8.091600000000032e-05}, {'time': 0.047083819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:19.512" endtime="20201115 23:01:19.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.551" level="INFO">${ACCURACY} = {'diff': [8.091600000000032e-05, 8.087500000000108e-05, 8.086100000000151e-05, 8.062500000000083e-05, 8.08190000000028e-05, 8.070799999999878e-05, 8.09719999999986e-05, 8.062500000000083e-05, 8.031899...</msg>
<status status="PASS" starttime="20201115 23:01:19.524" endtime="20201115 23:01:19.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.562" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.560" endtime="20201115 23:01:19.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.574" level="INFO">VALUE: [8.091600000000032e-05, 8.087500000000108e-05, 8.086100000000151e-05, 8.062500000000083e-05, 8.08190000000028e-05, 8.070799999999878e-05, 8.09719999999986e-05, 8.062500000000083e-05, 8.031899999999537e-05, 8.051400000000375e-05, 8.061100000000126e-05, 8.100000000000468e-05, 8.09169999999998e-05, 8.005600000000196e-05, 8.09719999999986e-05, 8.079099999999673e-05, 8.011100000000076e-05, 8.062500000000083e-05, 8.025000000000393e-05, 8.012500000000033e-05, 8.092999999999989e-05, 8.04719999999981e-05, 8.04169999999993e-05, 8.101400000000425e-05, 8.005500000000249e-05, 8.037500000000058e-05, 8.007000000000153e-05, 8.086199999999405e-05, 8.006899999999512e-05, 8.048599999999767e-05, 8.090200000000075e-05, 8.058300000000213e-05, 8.066699999999954e-05, 8.094399999999946e-05, 8.03190000000023e-05, 8.04169999999993e-05, 8.023600000000436e-05, 8.012500000000033e-05, 8.084800000000142e-05, 8.069499999999868e-05, 8.070799999999878e-05, 8.074999999999749e-05, 8.004099999999598e-05, 8.09169999999998e-05, 8.04169999999993e-05, 8.004199999999545e-05, 8.038900000000015e-05, 8.04169999999993e-05, 8.008300000000163e-05, 8.081999999999534e-05]</msg>
<status status="PASS" starttime="20201115 23:01:19.565" endtime="20201115 23:01:19.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.553" endtime="20201115 23:01:19.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.584" endtime="20201115 23:01:19.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.592" endtime="20201115 23:01:19.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.588" endtime="20201115 23:01:19.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.579" endtime="20201115 23:01:19.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.063" endtime="20201115 23:01:19.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.059" endtime="20201115 23:01:19.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.057" endtime="20201115 23:01:19.619"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.624" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.640" endtime="20201115 23:01:19.659"></status>
</kw>
<msg timestamp="20201115 23:01:19.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.638" endtime="20201115 23:01:19.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.660" endtime="20201115 23:01:19.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.663" endtime="20201115 23:01:19.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.635" endtime="20201115 23:01:19.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.629" endtime="20201115 23:01:19.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.674" endtime="20201115 23:01:20.002"></status>
</kw>
<msg timestamp="20201115 23:01:20.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039779194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039860236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.673" endtime="20201115 23:01:20.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039779194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039860236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.011" endtime="20201115 23:01:20.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.030" endtime="20201115 23:01:20.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.669" endtime="20201115 23:01:20.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.667" endtime="20201115 23:01:20.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.047" level="INFO">${RESULT} = [{'time': 0.039860236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.104200000000339e-05, 'source_diff': 8.104200000000339e-05}, {'time': 0.03994925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:20.038" endtime="20201115 23:01:20.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.081" level="INFO">${ACCURACY} = {'diff': [8.104200000000339e-05, 8.195800000000003e-05, 8.1764000000005e-05, 8.130600000000321e-05, 8.159799999999523e-05, 8.188900000000165e-05, 8.149999999999824e-05, 8.13049999999968e-05, 8.1513999...</msg>
<status status="PASS" starttime="20201115 23:01:20.050" endtime="20201115 23:01:20.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.092" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.089" endtime="20201115 23:01:20.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.097" level="INFO">VALUE: [8.104200000000339e-05, 8.195800000000003e-05, 8.1764000000005e-05, 8.130600000000321e-05, 8.159799999999523e-05, 8.188900000000165e-05, 8.149999999999824e-05, 8.13049999999968e-05, 8.151399999999781e-05, 8.144399999999996e-05, 8.154100000000442e-05, 8.13190000000033e-05, 8.131899999999637e-05, 8.195800000000003e-05, 8.108299999999569e-05, 8.169400000000021e-05, 8.145799999999953e-05, 8.15269999999979e-05, 8.187500000000208e-05, 8.113899999999397e-05, 8.166700000000054e-05, 8.137500000000158e-05, 8.179099999999773e-05, 8.120799999999928e-05, 8.15269999999979e-05, 8.194399999999352e-05, 8.144399999999996e-05, 8.190299999999429e-05, 8.102800000000382e-05, 8.131999999999584e-05, 8.113899999999397e-05, 8.126399999999756e-05, 8.176299999999859e-05, 8.19170000000008e-05, 8.182000000000328e-05, 8.104100000000392e-05, 8.177699999999816e-05, 8.155500000000399e-05, 8.205600000000396e-05, 8.11390000000009e-05, 8.11390000000009e-05, 8.10970000000022e-05, 8.136100000000202e-05, 8.158399999999566e-05, 8.169500000000662e-05, 8.132000000000278e-05, 8.107000000000253e-05, 8.112500000000133e-05, 8.131899999999637e-05, 8.190200000000175e-05]</msg>
<status status="PASS" starttime="20201115 23:01:20.094" endtime="20201115 23:01:20.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.082" endtime="20201115 23:01:20.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.106" endtime="20201115 23:01:20.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.114" endtime="20201115 23:01:20.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.110" endtime="20201115 23:01:20.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.101" endtime="20201115 23:01:20.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.625" endtime="20201115 23:01:20.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.621" endtime="20201115 23:01:20.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.619" endtime="20201115 23:01:20.140"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.146" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.167" endtime="20201115 23:01:20.190"></status>
</kw>
<msg timestamp="20201115 23:01:20.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.164" endtime="20201115 23:01:20.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.193" endtime="20201115 23:01:20.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.199" endtime="20201115 23:01:20.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.157" endtime="20201115 23:01:20.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.151" endtime="20201115 23:01:20.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.223" endtime="20201115 23:01:20.557"></status>
</kw>
<msg timestamp="20201115 23:01:20.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047223292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047305903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.219" endtime="20201115 23:01:20.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047223292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047305903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.567" endtime="20201115 23:01:20.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.586" endtime="20201115 23:01:20.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.212" endtime="20201115 23:01:20.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.208" endtime="20201115 23:01:20.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.605" level="INFO">${RESULT} = [{'time': 0.047305903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.261100000000327e-05, 'source_diff': 8.261100000000327e-05}, {'time': 0.047395875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:20.596" endtime="20201115 23:01:20.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.635" level="INFO">${ACCURACY} = {'diff': [8.261100000000327e-05, 8.21249999999954e-05, 8.274999999999949e-05, 8.268100000000111e-05, 8.205599999999702e-05, 8.222199999999985e-05, 8.211099999999583e-05, 8.224999999999899e-05, 8.22779...</msg>
<status status="PASS" starttime="20201115 23:01:20.607" endtime="20201115 23:01:20.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.646" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.644" endtime="20201115 23:01:20.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.652" level="INFO">VALUE: [8.261100000000327e-05, 8.21249999999954e-05, 8.274999999999949e-05, 8.268100000000111e-05, 8.205599999999702e-05, 8.222199999999985e-05, 8.211099999999583e-05, 8.224999999999899e-05, 8.227799999999813e-05, 8.208300000000363e-05, 8.23049999999978e-05, 8.283299999999744e-05, 8.281899999999787e-05, 8.270800000000078e-05, 8.286099999999658e-05, 8.206899999999712e-05, 8.204199999999745e-05, 8.299999999999974e-05, 8.248599999999967e-05, 8.225000000000593e-05, 8.226300000000603e-05, 8.258300000000413e-05, 8.2152000000002e-05, 8.266599999999513e-05, 8.294400000000146e-05, 8.243000000000139e-05, 8.233300000000388e-05, 8.287499999999615e-05, 8.244500000000043e-05, 8.230600000000421e-05, 8.233400000000335e-05, 8.220899999999975e-05, 8.272299999999982e-05, 8.254099999999848e-05, 8.26249999999959e-05, 8.276300000000653e-05, 8.208300000000363e-05, 8.270799999999384e-05, 8.237500000000259e-05, 8.202799999999788e-05, 8.284700000000395e-05, 8.287500000000309e-05, 8.211099999999583e-05, 8.286099999999658e-05, 8.299999999999974e-05, 8.262500000000284e-05, 8.208300000000363e-05, 8.294400000000146e-05, 8.261100000000327e-05, 8.227799999999813e-05]</msg>
<status status="PASS" starttime="20201115 23:01:20.649" endtime="20201115 23:01:20.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.637" endtime="20201115 23:01:20.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.661" endtime="20201115 23:01:20.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.669" endtime="20201115 23:01:20.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.665" endtime="20201115 23:01:20.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.656" endtime="20201115 23:01:20.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.147" endtime="20201115 23:01:20.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.143" endtime="20201115 23:01:20.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.141" endtime="20201115 23:01:20.695"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.700" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.722" endtime="20201115 23:01:20.744"></status>
</kw>
<msg timestamp="20201115 23:01:20.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.719" endtime="20201115 23:01:20.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.747" endtime="20201115 23:01:20.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.754" endtime="20201115 23:01:20.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.712" endtime="20201115 23:01:20.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.706" endtime="20201115 23:01:20.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.778" endtime="20201115 23:01:21.112"></status>
</kw>
<msg timestamp="20201115 23:01:21.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04670725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046790625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:20.774" endtime="20201115 23:01:21.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04670725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046790625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:21.122" endtime="20201115 23:01:21.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.141" endtime="20201115 23:01:21.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.767" endtime="20201115 23:01:21.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.762" endtime="20201115 23:01:21.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.158" level="INFO">${RESULT} = [{'time': 0.046790625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.337500000000359e-05, 'source_diff': 8.337500000000359e-05}, {'time': 0.046888625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:21.149" endtime="20201115 23:01:21.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.188" level="INFO">${ACCURACY} = {'diff': [8.337500000000359e-05, 8.345800000000153e-05, 8.387499999999715e-05, 8.39170000000028e-05, 8.381999999999834e-05, 8.357000000000503e-05, 8.350000000000024e-05, 8.354200000000589e-05, 8.32779...</msg>
<status status="PASS" starttime="20201115 23:01:21.160" endtime="20201115 23:01:21.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.199" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.197" endtime="20201115 23:01:21.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.205" level="INFO">VALUE: [8.337500000000359e-05, 8.345800000000153e-05, 8.387499999999715e-05, 8.39170000000028e-05, 8.381999999999834e-05, 8.357000000000503e-05, 8.350000000000024e-05, 8.354200000000589e-05, 8.327799999999913e-05, 8.38049999999993e-05, 8.358300000000513e-05, 8.386099999999758e-05, 8.377799999999963e-05, 8.308299999999769e-05, 8.39170000000028e-05, 8.377799999999963e-05, 8.36669999999956e-05, 8.308399999999716e-05, 8.319500000000118e-05, 8.373600000000092e-05, 8.313799999999649e-05, 8.356899999999862e-05, 8.394399999999552e-05, 8.333299999999794e-05, 8.324999999999999e-05, 8.400000000000074e-05, 8.352799999999938e-05, 8.334700000000445e-05, 8.348600000000067e-05, 8.311099999999683e-05, 8.354199999999895e-05, 8.400000000000074e-05, 8.348600000000067e-05, 8.3459000000001e-05, 8.345800000000153e-05, 8.394400000000246e-05, 8.392999999999595e-05, 8.327800000000607e-05, 8.33469999999975e-05, 8.394399999999552e-05, 8.356899999999862e-05, 8.302799999999888e-05, 8.3459000000001e-05, 8.306999999999759e-05, 8.372300000000082e-05, 8.372200000000135e-05, 8.391600000000332e-05, 8.392999999999595e-05, 8.325000000000693e-05, 8.375000000000049e-05]</msg>
<status status="PASS" starttime="20201115 23:01:21.201" endtime="20201115 23:01:21.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.190" endtime="20201115 23:01:21.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.213" endtime="20201115 23:01:21.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.222" endtime="20201115 23:01:21.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.217" endtime="20201115 23:01:21.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.209" endtime="20201115 23:01:21.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.702" endtime="20201115 23:01:21.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.698" endtime="20201115 23:01:21.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.696" endtime="20201115 23:01:21.248"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.253" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.275" endtime="20201115 23:01:21.297"></status>
</kw>
<msg timestamp="20201115 23:01:21.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.272" endtime="20201115 23:01:21.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.300" endtime="20201115 23:01:21.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.307" endtime="20201115 23:01:21.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.264" endtime="20201115 23:01:21.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.259" endtime="20201115 23:01:21.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.331" endtime="20201115 23:01:21.665"></status>
</kw>
<msg timestamp="20201115 23:01:21.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04656975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046654583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:21.327" endtime="20201115 23:01:21.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04656975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046654583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:21.675" endtime="20201115 23:01:21.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.693" endtime="20201115 23:01:21.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.320" endtime="20201115 23:01:21.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.315" endtime="20201115 23:01:21.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.712" level="INFO">${RESULT} = [{'time': 0.046654583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.483299999999944e-05, 'source_diff': 8.483299999999944e-05}, {'time': 0.046749611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:21.703" endtime="20201115 23:01:21.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.742" level="INFO">${ACCURACY} = {'diff': [8.483299999999944e-05, 8.422200000000185e-05, 8.402799999999988e-05, 8.493000000000389e-05, 8.486099999999858e-05, 8.501400000000131e-05, 8.415300000000348e-05, 8.454199999999995e-05, 8.4944...</msg>
<status status="PASS" starttime="20201115 23:01:21.714" endtime="20201115 23:01:21.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.753" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.751" endtime="20201115 23:01:21.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.759" level="INFO">VALUE: [8.483299999999944e-05, 8.422200000000185e-05, 8.402799999999988e-05, 8.493000000000389e-05, 8.486099999999858e-05, 8.501400000000131e-05, 8.415300000000348e-05, 8.454199999999995e-05, 8.494400000000346e-05, 8.434700000000545e-05, 8.431899999999937e-05, 8.41249999999974e-05, 8.477699999999422e-05, 8.472200000000235e-05, 8.443100000000286e-05, 8.431899999999937e-05, 8.440299999999679e-05, 8.423600000000142e-05, 8.472199999999541e-05, 8.458399999999866e-05, 8.483399999999891e-05, 8.427800000000013e-05, 8.482000000000628e-05, 8.48050000000003e-05, 8.498600000000217e-05, 8.441599999999688e-05, 8.447199999999516e-05, 8.49999999999948e-05, 8.445799999999559e-05, 8.483299999999944e-05, 8.459699999999876e-05, 8.49590000000025e-05, 8.413899999999697e-05, 8.459699999999876e-05, 8.404199999999945e-05, 8.404099999999998e-05, 8.433299999999894e-05, 8.473600000000192e-05, 8.405499999999955e-05, 8.4846999999999e-05, 8.430600000000621e-05, 8.44170000000033e-05, 8.487499999999815e-05, 8.456999999999909e-05, 8.431999999999884e-05, 8.41390000000039e-05, 8.42919999999997e-05, 8.46249999999979e-05, 8.490299999999729e-05, 8.425000000000099e-05]</msg>
<status status="PASS" starttime="20201115 23:01:21.755" endtime="20201115 23:01:21.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.744" endtime="20201115 23:01:21.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.767" endtime="20201115 23:01:21.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.776" endtime="20201115 23:01:21.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.772" endtime="20201115 23:01:21.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.763" endtime="20201115 23:01:21.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.255" endtime="20201115 23:01:21.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.251" endtime="20201115 23:01:21.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.249" endtime="20201115 23:01:21.802"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.807" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.830" endtime="20201115 23:01:21.851"></status>
</kw>
<msg timestamp="20201115 23:01:21.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.827" endtime="20201115 23:01:21.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.855" endtime="20201115 23:01:21.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.861" endtime="20201115 23:01:21.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.819" endtime="20201115 23:01:21.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.813" endtime="20201115 23:01:21.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.884" endtime="20201115 23:01:22.221"></status>
</kw>
<msg timestamp="20201115 23:01:22.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047563347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047649194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.881" endtime="20201115 23:01:22.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047563347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047649194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.230" endtime="20201115 23:01:22.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.249" endtime="20201115 23:01:22.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.874" endtime="20201115 23:01:22.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.869" endtime="20201115 23:01:22.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.266" level="INFO">${RESULT} = [{'time': 0.047649194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.5847e-05, 'source_diff': 8.5847e-05}, {'time': 0.047746222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.515299999999754e-...</msg>
<status status="PASS" starttime="20201115 23:01:22.257" endtime="20201115 23:01:22.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.299" level="INFO">${ACCURACY} = {'diff': [8.5847e-05, 8.515299999999754e-05, 8.513899999999797e-05, 8.551400000000181e-05, 8.586099999999958e-05, 8.583300000000044e-05, 8.598599999999623e-05, 8.504200000000045e-05, 8.56249999999989e...</msg>
<status status="PASS" starttime="20201115 23:01:22.268" endtime="20201115 23:01:22.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.310" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.308" endtime="20201115 23:01:22.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.315" level="INFO">VALUE: [8.5847e-05, 8.515299999999754e-05, 8.513899999999797e-05, 8.551400000000181e-05, 8.586099999999958e-05, 8.583300000000044e-05, 8.598599999999623e-05, 8.504200000000045e-05, 8.56249999999989e-05, 8.582000000000034e-05, 8.588899999999872e-05, 8.587499999999915e-05, 8.504100000000098e-05, 8.576399999999512e-05, 8.51249999999984e-05, 8.54720000000031e-05, 8.502800000000088e-05, 8.572200000000335e-05, 8.53469999999995e-05, 8.587499999999915e-05, 8.568100000000411e-05, 8.509799999999873e-05, 8.56799999999977e-05, 8.544399999999702e-05, 8.527800000000113e-05, 8.576399999999512e-05, 8.576400000000206e-05, 8.58050000000013e-05, 8.586099999999958e-05, 8.59170000000048e-05, 8.563899999999847e-05, 8.504200000000045e-05, 8.559699999999976e-05, 8.533399999999941e-05, 8.5847e-05, 8.557000000000009e-05, 8.504100000000098e-05, 8.598600000000317e-05, 8.565300000000498e-05, 8.574999999999555e-05, 8.586099999999958e-05, 8.512500000000534e-05, 8.520799999999634e-05, 8.537499999999865e-05, 8.526399999999462e-05, 8.58199999999934e-05, 8.600000000000274e-05, 8.563799999999899e-05, 8.525000000000199e-05, 8.54720000000031e-05]</msg>
<status status="PASS" starttime="20201115 23:01:22.312" endtime="20201115 23:01:22.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.301" endtime="20201115 23:01:22.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.324" endtime="20201115 23:01:22.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.333" endtime="20201115 23:01:22.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.328" endtime="20201115 23:01:22.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.320" endtime="20201115 23:01:22.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.809" endtime="20201115 23:01:22.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.805" endtime="20201115 23:01:22.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.803" endtime="20201115 23:01:22.360"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.365" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.387" endtime="20201115 23:01:22.409"></status>
</kw>
<msg timestamp="20201115 23:01:22.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.384" endtime="20201115 23:01:22.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.412" endtime="20201115 23:01:22.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.418" endtime="20201115 23:01:22.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.376" endtime="20201115 23:01:22.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.371" endtime="20201115 23:01:22.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.441" endtime="20201115 23:01:22.776"></status>
</kw>
<msg timestamp="20201115 23:01:22.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047374444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04746125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:22.438" endtime="20201115 23:01:22.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047374444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04746125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:22.785" endtime="20201115 23:01:22.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.804" endtime="20201115 23:01:22.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.431" endtime="20201115 23:01:22.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.426" endtime="20201115 23:01:22.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.823" level="INFO">${RESULT} = [{'time': 0.04746125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.680600000000177e-05, 'source_diff': 8.680600000000177e-05}, {'time': 0.047561278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:22.814" endtime="20201115 23:01:22.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.853" level="INFO">${ACCURACY} = {'diff': [8.680600000000177e-05, 8.609700000000026e-05, 8.618099999999768e-05, 8.66249999999999e-05, 8.693100000000537e-05, 8.688800000000024e-05, 8.658300000000119e-05, 8.62920000000017e-05, 8.633300...</msg>
<status status="PASS" starttime="20201115 23:01:22.826" endtime="20201115 23:01:22.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.864" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.862" endtime="20201115 23:01:22.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.870" level="INFO">VALUE: [8.680600000000177e-05, 8.609700000000026e-05, 8.618099999999768e-05, 8.66249999999999e-05, 8.693100000000537e-05, 8.688800000000024e-05, 8.658300000000119e-05, 8.62920000000017e-05, 8.633300000000094e-05, 8.631900000000137e-05, 8.661100000000033e-05, 8.661100000000033e-05, 8.61249999999994e-05, 8.618100000000462e-05, 8.61249999999994e-05, 8.648599999999673e-05, 8.645899999999707e-05, 8.61249999999994e-05, 8.665299999999904e-05, 8.602700000000241e-05, 8.629100000000223e-05, 8.683300000000144e-05, 8.673599999999698e-05, 8.600000000000274e-05, 8.650000000000324e-05, 8.665299999999904e-05, 8.61249999999994e-05, 8.657000000000109e-05, 8.623600000000342e-05, 8.691699999999886e-05, 8.687500000000015e-05, 8.636100000000008e-05, 8.669399999999827e-05, 8.632000000000084e-05, 8.672199999999741e-05, 8.659700000000076e-05, 8.683300000000144e-05, 8.611099999999983e-05, 8.645800000000453e-05, 8.61669999999981e-05, 8.654199999999501e-05, 8.680499999999536e-05, 8.601400000000231e-05, 8.673599999999698e-05, 8.674999999999655e-05, 8.611099999999983e-05, 8.672299999999689e-05, 8.647199999999716e-05, 8.694399999999852e-05, 8.602800000000188e-05]</msg>
<status status="PASS" starttime="20201115 23:01:22.867" endtime="20201115 23:01:22.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.855" endtime="20201115 23:01:22.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.879" endtime="20201115 23:01:22.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.888" endtime="20201115 23:01:22.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.883" endtime="20201115 23:01:22.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.875" endtime="20201115 23:01:22.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.367" endtime="20201115 23:01:22.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.363" endtime="20201115 23:01:22.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.361" endtime="20201115 23:01:22.914"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.919" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.941" endtime="20201115 23:01:22.963"></status>
</kw>
<msg timestamp="20201115 23:01:22.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.937" endtime="20201115 23:01:22.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.966" endtime="20201115 23:01:22.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.973" endtime="20201115 23:01:22.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.930" endtime="20201115 23:01:22.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.925" endtime="20201115 23:01:22.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.985" endtime="20201115 23:01:23.289"></status>
</kw>
<msg timestamp="20201115 23:01:23.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046751167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046838542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.983" endtime="20201115 23:01:23.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046751167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046838542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.298" endtime="20201115 23:01:23.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.317" endtime="20201115 23:01:23.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.980" endtime="20201115 23:01:23.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.977" endtime="20201115 23:01:23.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.335" level="INFO">${RESULT} = [{'time': 0.046838542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.737499999999371e-05, 'source_diff': 8.737499999999371e-05}, {'time': 0.046941556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:23.326" endtime="20201115 23:01:23.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.365" level="INFO">${ACCURACY} = {'diff': [8.737499999999371e-05, 8.782000000000234e-05, 8.757000000000209e-05, 8.761100000000133e-05, 8.733300000000194e-05, 8.783300000000244e-05, 8.79720000000056e-05, 8.78329999999955e-05, 8.724999...</msg>
<status status="PASS" starttime="20201115 23:01:23.337" endtime="20201115 23:01:23.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.376" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.374" endtime="20201115 23:01:23.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.382" level="INFO">VALUE: [8.737499999999371e-05, 8.782000000000234e-05, 8.757000000000209e-05, 8.761100000000133e-05, 8.733300000000194e-05, 8.783300000000244e-05, 8.79720000000056e-05, 8.78329999999955e-05, 8.724999999999705e-05, 8.786100000000158e-05, 8.720899999999782e-05, 8.740299999999979e-05, 8.704199999999551e-05, 8.772199999999841e-05, 8.784800000000148e-05, 8.751300000000434e-05, 8.795799999999909e-05, 8.78050000000033e-05, 8.736099999999414e-05, 8.755499999999611e-05, 8.787499999999421e-05, 8.741699999999936e-05, 8.776399999999712e-05, 8.752799999999644e-05, 8.711099999999389e-05, 8.719499999999825e-05, 8.765300000000004e-05, 8.755500000000305e-05, 8.74999999999973e-05, 8.783300000000244e-05, 8.723600000000442e-05, 8.737500000000065e-05, 8.713899999999997e-05, 8.71799999999992e-05, 8.772199999999841e-05, 8.71250000000004e-05, 8.734800000000098e-05, 8.708400000000116e-05, 8.780600000000277e-05, 8.71250000000004e-05, 8.773599999999798e-05, 8.792999999999995e-05, 8.72920000000027e-05, 8.750000000000424e-05, 8.720799999999834e-05, 8.727800000000313e-05, 8.773599999999798e-05, 8.738800000000074e-05, 8.704200000000245e-05, 8.791699999999986e-05]</msg>
<status status="PASS" starttime="20201115 23:01:23.378" endtime="20201115 23:01:23.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.367" endtime="20201115 23:01:23.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.391" endtime="20201115 23:01:23.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.399" endtime="20201115 23:01:23.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.395" endtime="20201115 23:01:23.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.386" endtime="20201115 23:01:23.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.921" endtime="20201115 23:01:23.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.917" endtime="20201115 23:01:23.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.915" endtime="20201115 23:01:23.426"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.431" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.453" endtime="20201115 23:01:23.474"></status>
</kw>
<msg timestamp="20201115 23:01:23.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.449" endtime="20201115 23:01:23.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.478" endtime="20201115 23:01:23.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.484" endtime="20201115 23:01:23.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.442" endtime="20201115 23:01:23.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.436" endtime="20201115 23:01:23.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.507" endtime="20201115 23:01:23.842"></status>
</kw>
<msg timestamp="20201115 23:01:23.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047073486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047162042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.504" endtime="20201115 23:01:23.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047073486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047162042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.852" endtime="20201115 23:01:23.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.870" endtime="20201115 23:01:23.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.497" endtime="20201115 23:01:23.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.492" endtime="20201115 23:01:23.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.889" level="INFO">${RESULT} = [{'time': 0.047162042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.855600000000352e-05, 'source_diff': 8.855600000000352e-05}, {'time': 0.047258042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:23.880" endtime="20201115 23:01:23.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.920" level="INFO">${ACCURACY} = {'diff': [8.855600000000352e-05, 8.895899999999957e-05, 8.869499999999975e-05, 8.81800000000002e-05, 8.854099999999754e-05, 8.884699999999607e-05, 8.872199999999941e-05, 8.81670000000001e-05, 8.820799...</msg>
<status status="PASS" starttime="20201115 23:01:23.892" endtime="20201115 23:01:23.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.931" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.928" endtime="20201115 23:01:23.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.936" level="INFO">VALUE: [8.855600000000352e-05, 8.895899999999957e-05, 8.869499999999975e-05, 8.81800000000002e-05, 8.854099999999754e-05, 8.884699999999607e-05, 8.872199999999941e-05, 8.81670000000001e-05, 8.820799999999934e-05, 8.831899999999643e-05, 8.848599999999873e-05, 8.882000000000334e-05, 8.895899999999957e-05, 8.802799999999694e-05, 8.886099999999564e-05, 8.847299999999864e-05, 8.861100000000233e-05, 8.811100000000183e-05, 8.890300000000129e-05, 8.798600000000517e-05, 8.861100000000233e-05, 8.819399999999977e-05, 8.813900000000097e-05, 8.880599999999683e-05, 8.877800000000463e-05, 8.820899999999882e-05, 8.81250000000014e-05, 8.840200000000131e-05, 8.837500000000165e-05, 8.865300000000104e-05, 8.866600000000113e-05, 8.827799999999719e-05, 8.855600000000352e-05, 8.890200000000181e-05, 8.830499999999686e-05, 8.823599999999848e-05, 8.865300000000104e-05, 8.854199999999701e-05, 8.804100000000398e-05, 8.850000000000524e-05, 8.869400000000027e-05, 8.890199999999487e-05, 8.819399999999977e-05, 8.880600000000377e-05, 8.851399999999787e-05, 8.827800000000413e-05, 8.833300000000294e-05, 8.829199999999676e-05, 8.873600000000592e-05, 8.804200000000345e-05]</msg>
<status status="PASS" starttime="20201115 23:01:23.933" endtime="20201115 23:01:23.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.922" endtime="20201115 23:01:23.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.945" endtime="20201115 23:01:23.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.953" endtime="20201115 23:01:23.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.949" endtime="20201115 23:01:23.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.940" endtime="20201115 23:01:23.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.432" endtime="20201115 23:01:23.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.428" endtime="20201115 23:01:23.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.426" endtime="20201115 23:01:23.980"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.985" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.007" endtime="20201115 23:01:24.030"></status>
</kw>
<msg timestamp="20201115 23:01:24.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.004" endtime="20201115 23:01:24.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.033" endtime="20201115 23:01:24.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.039" endtime="20201115 23:01:24.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.996" endtime="20201115 23:01:24.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.990" endtime="20201115 23:01:24.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.063" endtime="20201115 23:01:24.398"></status>
</kw>
<msg timestamp="20201115 23:01:24.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047378944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047468931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.059" endtime="20201115 23:01:24.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047378944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047468931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.408" endtime="20201115 23:01:24.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.427" endtime="20201115 23:01:24.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.052" endtime="20201115 23:01:24.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.047" endtime="20201115 23:01:24.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.445" level="INFO">${RESULT} = [{'time': 0.047468931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.99869999999997e-05, 'source_diff': 8.99869999999997e-05}, {'time': 0.047573944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:24.436" endtime="20201115 23:01:24.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.477" level="INFO">${ACCURACY} = {'diff': [8.99869999999997e-05, 8.98329999999975e-05, 8.970800000000084e-05, 8.919400000000077e-05, 8.902800000000488e-05, 8.981899999999793e-05, 8.911099999999589e-05, 8.943100000000093e-05, 8.913900...</msg>
<status status="PASS" starttime="20201115 23:01:24.447" endtime="20201115 23:01:24.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.488" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.486" endtime="20201115 23:01:24.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.494" level="INFO">VALUE: [8.99869999999997e-05, 8.98329999999975e-05, 8.970800000000084e-05, 8.919400000000077e-05, 8.902800000000488e-05, 8.981899999999793e-05, 8.911099999999589e-05, 8.943100000000093e-05, 8.913900000000197e-05, 8.956999999999715e-05, 8.919500000000025e-05, 8.918100000000068e-05, 8.927800000000513e-05, 8.980599999999783e-05, 8.945800000000059e-05, 8.929099999999829e-05, 8.924999999999905e-05, 8.969400000000127e-05, 8.9332999999997e-05, 8.927800000000513e-05, 8.991700000000186e-05, 8.927799999999819e-05, 8.979199999999826e-05, 8.980499999999836e-05, 8.952800000000538e-05, 8.936100000000308e-05, 8.951399999999887e-05, 8.977699999999922e-05, 8.958300000000419e-05, 8.941699999999442e-05, 8.929199999999776e-05, 8.947200000000016e-05, 8.980599999999783e-05, 8.958399999999672e-05, 8.94999999999993e-05, 8.980499999999836e-05, 8.917999999999426e-05, 8.933300000000394e-05, 8.991600000000238e-05, 8.924999999999905e-05, 8.959699999999682e-05, 8.926400000000556e-05, 8.994400000000152e-05, 8.96670000000016e-05, 8.91670000000011e-05, 8.969500000000075e-05, 8.959799999999629e-05, 8.936199999999561e-05, 8.984800000000348e-05, 8.958299999999725e-05]</msg>
<status status="PASS" starttime="20201115 23:01:24.491" endtime="20201115 23:01:24.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.479" endtime="20201115 23:01:24.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.503" endtime="20201115 23:01:24.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.511" endtime="20201115 23:01:24.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.506" endtime="20201115 23:01:24.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.498" endtime="20201115 23:01:24.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.986" endtime="20201115 23:01:24.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.982" endtime="20201115 23:01:24.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.981" endtime="20201115 23:01:24.537"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.542" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.564" endtime="20201115 23:01:24.586"></status>
</kw>
<msg timestamp="20201115 23:01:24.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.561" endtime="20201115 23:01:24.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.590" endtime="20201115 23:01:24.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.597" endtime="20201115 23:01:24.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.553" endtime="20201115 23:01:24.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.548" endtime="20201115 23:01:24.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.627" endtime="20201115 23:01:24.963"></status>
</kw>
<msg timestamp="20201115 23:01:24.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046923528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047014472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.618" endtime="20201115 23:01:24.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046923528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047014472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.972" endtime="20201115 23:01:24.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.991" endtime="20201115 23:01:24.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.610" endtime="20201115 23:01:24.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.605" endtime="20201115 23:01:25.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.010" level="INFO">${RESULT} = [{'time': 0.047014472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.094400000000252e-05, 'source_diff': 9.094400000000252e-05}, {'time': 0.047113486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:25.001" endtime="20201115 23:01:25.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.040" level="INFO">${ACCURACY} = {'diff': [9.094400000000252e-05, 9.006900000000512e-05, 9.011099999999689e-05, 9.05000000000003e-05, 9.073600000000098e-05, 9.090300000000329e-05, 9.063900000000347e-05, 9.01670000000021e-05, 9.004099...</msg>
<status status="PASS" starttime="20201115 23:01:25.013" endtime="20201115 23:01:25.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.051" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.049" endtime="20201115 23:01:25.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.057" level="INFO">VALUE: [9.094400000000252e-05, 9.006900000000512e-05, 9.011099999999689e-05, 9.05000000000003e-05, 9.073600000000098e-05, 9.090300000000329e-05, 9.063900000000347e-05, 9.01670000000021e-05, 9.004099999999904e-05, 9.05000000000003e-05, 9.080499999999936e-05, 9.05000000000003e-05, 9.016600000000263e-05, 9.080600000000577e-05, 9.041700000000236e-05, 9.012499999999646e-05, 9.020899999999388e-05, 9.097300000000114e-05, 9.084699999999807e-05, 9.043099999999499e-05, 9.090199999999687e-05, 9.088899999999678e-05, 9.030499999999886e-05, 9.026399999999962e-05, 9.079199999999926e-05, 9.041700000000236e-05, 9.009700000000426e-05, 9.072300000000089e-05, 9.055599999999858e-05, 9.061099999999739e-05, 9.045900000000107e-05, 9.079099999999979e-05, 9.002699999999947e-05, 9.070800000000184e-05, 9.045799999999465e-05, 9.086199999999711e-05, 9.058399999999772e-05, 9.011100000000383e-05, 9.051399999999987e-05, 9.05000000000003e-05, 9.079199999999926e-05, 9.052799999999944e-05, 9.009799999999679e-05, 9.029099999999929e-05, 9.033300000000494e-05, 9.072200000000141e-05, 9.047200000000116e-05, 9.009700000000426e-05, 9.026399999999962e-05, 9.019400000000177e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.054" endtime="20201115 23:01:25.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.042" endtime="20201115 23:01:25.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.066" endtime="20201115 23:01:25.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.074" endtime="20201115 23:01:25.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.070" endtime="20201115 23:01:25.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.061" endtime="20201115 23:01:25.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.544" endtime="20201115 23:01:25.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.540" endtime="20201115 23:01:25.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.538" endtime="20201115 23:01:25.100"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.106" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.127" endtime="20201115 23:01:25.149"></status>
</kw>
<msg timestamp="20201115 23:01:25.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.124" endtime="20201115 23:01:25.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.153" endtime="20201115 23:01:25.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.160" endtime="20201115 23:01:25.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.117" endtime="20201115 23:01:25.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.111" endtime="20201115 23:01:25.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.184" endtime="20201115 23:01:25.520"></status>
</kw>
<msg timestamp="20201115 23:01:25.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04684275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046933903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:25.180" endtime="20201115 23:01:25.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04684275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046933903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:25.530" endtime="20201115 23:01:25.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.548" endtime="20201115 23:01:25.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.173" endtime="20201115 23:01:25.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.168" endtime="20201115 23:01:25.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.566" level="INFO">${RESULT} = [{'time': 0.046933903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.11529999999966e-05, 'source_diff': 9.11529999999966e-05}, {'time': 0.047033944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:25.557" endtime="20201115 23:01:25.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.596" level="INFO">${ACCURACY} = {'diff': [9.11529999999966e-05, 9.131899999999943e-05, 9.174999999999461e-05, 9.123699999999402e-05, 9.194400000000352e-05, 9.125000000000105e-05, 9.122199999999497e-05, 9.137499999999771e-05, 9.17770...</msg>
<status status="PASS" starttime="20201115 23:01:25.568" endtime="20201115 23:01:25.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.607" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.605" endtime="20201115 23:01:25.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.613" level="INFO">VALUE: [9.11529999999966e-05, 9.131899999999943e-05, 9.174999999999461e-05, 9.123699999999402e-05, 9.194400000000352e-05, 9.125000000000105e-05, 9.122199999999497e-05, 9.137499999999771e-05, 9.177700000000122e-05, 9.184699999999907e-05, 9.129199999999976e-05, 9.138900000000422e-05, 9.102799999999994e-05, 9.130599999999933e-05, 9.137500000000465e-05, 9.140200000000431e-05, 9.122200000000191e-05, 9.197200000000266e-05, 9.180599999999983e-05, 9.137500000000465e-05, 9.181899999999993e-05, 9.116699999999617e-05, 9.105599999999908e-05, 9.166699999999667e-05, 9.198600000000223e-05, 9.145900000000207e-05, 9.111099999999789e-05, 9.11670000000031e-05, 9.18329999999995e-05, 9.170899999999538e-05, 9.145799999999565e-05, 9.198600000000223e-05, 9.141700000000336e-05, 9.186099999999864e-05, 9.195900000000257e-05, 9.129199999999976e-05, 9.176400000000112e-05, 9.125000000000105e-05, 9.105499999999961e-05, 9.195799999999615e-05, 9.181899999999993e-05, 9.197200000000266e-05, 9.11250000000044e-05, 9.152800000000044e-05, 9.111099999999789e-05, 9.180599999999983e-05, 9.126400000000062e-05, 9.104199999999951e-05, 9.180500000000036e-05, 9.159799999999829e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.609" endtime="20201115 23:01:25.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.598" endtime="20201115 23:01:25.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.621" endtime="20201115 23:01:25.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.630" endtime="20201115 23:01:25.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.626" endtime="20201115 23:01:25.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.617" endtime="20201115 23:01:25.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.107" endtime="20201115 23:01:25.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.103" endtime="20201115 23:01:25.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.101" endtime="20201115 23:01:25.657"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.663" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.685" endtime="20201115 23:01:25.708"></status>
</kw>
<msg timestamp="20201115 23:01:25.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.682" endtime="20201115 23:01:25.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.711" endtime="20201115 23:01:25.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.717" endtime="20201115 23:01:25.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.674" endtime="20201115 23:01:25.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.668" endtime="20201115 23:01:25.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.741" endtime="20201115 23:01:26.075"></status>
</kw>
<msg timestamp="20201115 23:01:26.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048056486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048149083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.738" endtime="20201115 23:01:26.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048056486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048149083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.085" endtime="20201115 23:01:26.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.103" endtime="20201115 23:01:26.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.730" endtime="20201115 23:01:26.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.726" endtime="20201115 23:01:26.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.122" level="INFO">${RESULT} = [{'time': 0.048149083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.259699999999982e-05, 'source_diff': 9.259699999999982e-05}, {'time': 0.048245083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:26.113" endtime="20201115 23:01:26.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.152" level="INFO">${ACCURACY} = {'diff': [9.259699999999982e-05, 9.208299999999975e-05, 9.230500000000086e-05, 9.223600000000248e-05, 9.226400000000162e-05, 9.234699999999957e-05, 9.291699999999792e-05, 9.222199999999597e-05, 9.2028...</msg>
<status status="PASS" starttime="20201115 23:01:26.124" endtime="20201115 23:01:26.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.163" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.161" endtime="20201115 23:01:26.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.168" level="INFO">VALUE: [9.259699999999982e-05, 9.208299999999975e-05, 9.230500000000086e-05, 9.223600000000248e-05, 9.226400000000162e-05, 9.234699999999957e-05, 9.291699999999792e-05, 9.222199999999597e-05, 9.202800000000094e-05, 9.219499999999631e-05, 9.272200000000341e-05, 9.2945000000004e-05, 9.295799999999715e-05, 9.290299999999835e-05, 9.252800000000144e-05, 9.21800000000042e-05, 9.269400000000427e-05, 9.2333e-05, 9.28330000000005e-05, 9.25000000000023e-05, 9.266700000000461e-05, 9.265300000000504e-05, 9.30000000000028e-05, 9.252700000000197e-05, 9.293000000000495e-05, 9.291599999999844e-05, 9.237499999999871e-05, 9.231900000000043e-05, 9.295799999999715e-05, 9.230600000000033e-05, 9.28200000000004e-05, 9.213899999999803e-05, 9.252800000000144e-05, 9.276299999999571e-05, 9.240299999999785e-05, 9.231900000000043e-05, 9.267999999999776e-05, 9.270899999999638e-05, 9.208299999999975e-05, 9.276400000000212e-05, 9.21250000000054e-05, 9.23199999999999e-05, 9.294499999999706e-05, 9.293099999999749e-05, 9.219499999999631e-05, 9.222300000000239e-05, 9.267999999999776e-05, 9.227700000000172e-05, 9.206900000000018e-05, 9.2333e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.165" endtime="20201115 23:01:26.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.154" endtime="20201115 23:01:26.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.177" endtime="20201115 23:01:26.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.186" endtime="20201115 23:01:26.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.181" endtime="20201115 23:01:26.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.173" endtime="20201115 23:01:26.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.664" endtime="20201115 23:01:26.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.660" endtime="20201115 23:01:26.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.658" endtime="20201115 23:01:26.213"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.218" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.240" endtime="20201115 23:01:26.262"></status>
</kw>
<msg timestamp="20201115 23:01:26.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.236" endtime="20201115 23:01:26.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.265" endtime="20201115 23:01:26.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.271" endtime="20201115 23:01:26.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.229" endtime="20201115 23:01:26.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.223" endtime="20201115 23:01:26.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.295" endtime="20201115 23:01:26.596"></status>
</kw>
<msg timestamp="20201115 23:01:26.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047880417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047974361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.292" endtime="20201115 23:01:26.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047880417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047974361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.600" endtime="20201115 23:01:26.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.608" endtime="20201115 23:01:26.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.284" endtime="20201115 23:01:26.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.279" endtime="20201115 23:01:26.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.616" level="INFO">${RESULT} = [{'time': 0.047974361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.394399999999858e-05, 'source_diff': 9.394399999999858e-05}, {'time': 0.048073375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:26.612" endtime="20201115 23:01:26.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.648" level="INFO">${ACCURACY} = {'diff': [9.394399999999858e-05, 9.362499999999996e-05, 9.391699999999892e-05, 9.312499999999946e-05, 9.333400000000047e-05, 9.34870000000032e-05, 9.369399999999833e-05, 9.355500000000211e-05, 9.36110...</msg>
<status status="PASS" starttime="20201115 23:01:26.617" endtime="20201115 23:01:26.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.659" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.657" endtime="20201115 23:01:26.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.665" level="INFO">VALUE: [9.394399999999858e-05, 9.362499999999996e-05, 9.391699999999892e-05, 9.312499999999946e-05, 9.333400000000047e-05, 9.34870000000032e-05, 9.369399999999833e-05, 9.355500000000211e-05, 9.361100000000039e-05, 9.327699999999578e-05, 9.386100000000064e-05, 9.331899999999449e-05, 9.365199999999962e-05, 9.33200000000009e-05, 9.311099999999989e-05, 9.297200000000366e-05, 9.349999999999636e-05, 9.34870000000032e-05, 9.387500000000021e-05, 9.390199999999987e-05, 9.36529999999991e-05, 9.324999999999611e-05, 9.312499999999946e-05, 9.318100000000468e-05, 9.334700000000057e-05, 9.319500000000425e-05, 9.36529999999991e-05, 9.383400000000097e-05, 9.390199999999987e-05, 9.386100000000064e-05, 9.373599999999704e-05, 9.352800000000244e-05, 9.369399999999833e-05, 9.372199999999747e-05, 9.309700000000032e-05, 9.344499999999756e-05, 9.397199999999772e-05, 9.304199999999457e-05, 9.325000000000305e-05, 9.305600000000108e-05, 9.302800000000194e-05, 9.38330000000015e-05, 9.329100000000229e-05, 9.345799999999765e-05, 9.380500000000236e-05, 9.359700000000082e-05, 9.349999999999636e-05, 9.340299999999885e-05, 9.333400000000047e-05, 9.398600000000423e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.662" endtime="20201115 23:01:26.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.650" endtime="20201115 23:01:26.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.675" endtime="20201115 23:01:26.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.684" endtime="20201115 23:01:26.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.679" endtime="20201115 23:01:26.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.670" endtime="20201115 23:01:26.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.219" endtime="20201115 23:01:26.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.215" endtime="20201115 23:01:26.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.214" endtime="20201115 23:01:26.710"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.716" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.737" endtime="20201115 23:01:26.760"></status>
</kw>
<msg timestamp="20201115 23:01:26.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.734" endtime="20201115 23:01:26.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.764" endtime="20201115 23:01:26.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.770" endtime="20201115 23:01:26.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.727" endtime="20201115 23:01:26.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.721" endtime="20201115 23:01:26.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.793" endtime="20201115 23:01:27.127"></status>
</kw>
<msg timestamp="20201115 23:01:27.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047157444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047252444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.790" endtime="20201115 23:01:27.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047157444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047252444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.137" endtime="20201115 23:01:27.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.156" endtime="20201115 23:01:27.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.783" endtime="20201115 23:01:27.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.778" endtime="20201115 23:01:27.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.175" level="INFO">${RESULT} = [{'time': 0.047252444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.499999999999786e-05, 'source_diff': 9.499999999999786e-05}, {'time': 0.047356444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:27.166" endtime="20201115 23:01:27.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.205" level="INFO">${ACCURACY} = {'diff': [9.499999999999786e-05, 9.484699999999513e-05, 9.469499999999881e-05, 9.480600000000283e-05, 9.416699999999917e-05, 9.463900000000053e-05, 9.48330000000025e-05, 9.451400000000387e-05, 9.47499...</msg>
<status status="PASS" starttime="20201115 23:01:27.177" endtime="20201115 23:01:27.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.216" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.213" endtime="20201115 23:01:27.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.222" level="INFO">VALUE: [9.499999999999786e-05, 9.484699999999513e-05, 9.469499999999881e-05, 9.480600000000283e-05, 9.416699999999917e-05, 9.463900000000053e-05, 9.48330000000025e-05, 9.451400000000387e-05, 9.474999999999761e-05, 9.488900000000078e-05, 9.459800000000129e-05, 9.44729999999977e-05, 9.40409999999961e-05, 9.490200000000087e-05, 9.404100000000304e-05, 9.486100000000164e-05, 9.45130000000044e-05, 9.473599999999804e-05, 9.401400000000337e-05, 9.481999999999546e-05, 9.394499999999806e-05, 9.441699999999942e-05, 9.429200000000276e-05, 9.429100000000329e-05, 9.430499999999592e-05, 9.438900000000028e-05, 9.408300000000175e-05, 9.490200000000087e-05, 9.429200000000276e-05, 9.497199999999872e-05, 9.486100000000164e-05, 9.477799999999675e-05, 9.487500000000121e-05, 9.498699999999777e-05, 9.433299999999506e-05, 9.494399999999958e-05, 9.490300000000035e-05, 9.413900000000003e-05, 9.416700000000611e-05, 9.418099999999874e-05, 9.420800000000534e-05, 9.44859999999978e-05, 9.416699999999917e-05, 9.479200000000326e-05, 9.476299999999771e-05, 9.46530000000001e-05, 9.490200000000087e-05, 9.479100000000379e-05, 9.474999999999761e-05, 9.487500000000121e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.218" endtime="20201115 23:01:27.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.207" endtime="20201115 23:01:27.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.231" endtime="20201115 23:01:27.234"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.239" endtime="20201115 23:01:27.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.235" endtime="20201115 23:01:27.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.226" endtime="20201115 23:01:27.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.717" endtime="20201115 23:01:27.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.713" endtime="20201115 23:01:27.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.711" endtime="20201115 23:01:27.266"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.271" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.293" endtime="20201115 23:01:27.315"></status>
</kw>
<msg timestamp="20201115 23:01:27.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.289" endtime="20201115 23:01:27.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.319" endtime="20201115 23:01:27.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.325" endtime="20201115 23:01:27.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.282" endtime="20201115 23:01:27.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.276" endtime="20201115 23:01:27.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.348" endtime="20201115 23:01:27.683"></status>
</kw>
<msg timestamp="20201115 23:01:27.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047349569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047445139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.345" endtime="20201115 23:01:27.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047349569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047445139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.693" endtime="20201115 23:01:27.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.712" endtime="20201115 23:01:27.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.338" endtime="20201115 23:01:27.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.333" endtime="20201115 23:01:27.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.730" level="INFO">${RESULT} = [{'time': 0.047445139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.556999999999621e-05, 'source_diff': 9.556999999999621e-05}, {'time': 0.047545153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:27.721" endtime="20201115 23:01:27.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.761" level="INFO">${ACCURACY} = {'diff': [9.556999999999621e-05, 9.524999999999811e-05, 9.555600000000358e-05, 9.590300000000135e-05, 9.587500000000221e-05, 9.541600000000094e-05, 9.551400000000487e-05, 9.587500000000221e-05, 9.5360...</msg>
<status status="PASS" starttime="20201115 23:01:27.733" endtime="20201115 23:01:27.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.772" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.770" endtime="20201115 23:01:27.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.778" level="INFO">VALUE: [9.556999999999621e-05, 9.524999999999811e-05, 9.555600000000358e-05, 9.590300000000135e-05, 9.587500000000221e-05, 9.541600000000094e-05, 9.551400000000487e-05, 9.587500000000221e-05, 9.53609999999952e-05, 9.516700000000017e-05, 9.572199999999947e-05, 9.512500000000146e-05, 9.586100000000264e-05, 9.541700000000042e-05, 9.568100000000024e-05, 9.533399999999553e-05, 9.537499999999477e-05, 9.601400000000537e-05, 9.572199999999947e-05, 9.557000000000315e-05, 9.577799999999775e-05, 9.56530000000011e-05, 9.538900000000128e-05, 9.505599999999614e-05, 9.529199999999682e-05, 9.58200000000034e-05, 9.56530000000011e-05, 9.55409999999976e-05, 9.552700000000497e-05, 9.587500000000221e-05, 9.552800000000444e-05, 9.593100000000049e-05, 9.541700000000042e-05, 9.508399999999528e-05, 9.549999999999836e-05, 9.55279999999975e-05, 9.51660000000007e-05, 9.581899999999699e-05, 9.56660000000012e-05, 9.55409999999976e-05, 9.562500000000196e-05, 9.527799999999725e-05, 9.545799999999965e-05, 9.537500000000171e-05, 9.497199999999872e-05, 9.526399999999768e-05, 9.513899999999409e-05, 9.562500000000196e-05, 9.531999999999596e-05, 9.511100000000189e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.775" endtime="20201115 23:01:27.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.763" endtime="20201115 23:01:27.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.786" endtime="20201115 23:01:27.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.795" endtime="20201115 23:01:27.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.790" endtime="20201115 23:01:27.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.782" endtime="20201115 23:01:27.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.272" endtime="20201115 23:01:27.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.268" endtime="20201115 23:01:27.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.266" endtime="20201115 23:01:27.821"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.826" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.848" endtime="20201115 23:01:27.870"></status>
</kw>
<msg timestamp="20201115 23:01:27.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.845" endtime="20201115 23:01:27.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.874" endtime="20201115 23:01:27.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.880" endtime="20201115 23:01:27.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.838" endtime="20201115 23:01:27.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.832" endtime="20201115 23:01:27.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.903" endtime="20201115 23:01:28.239"></status>
</kw>
<msg timestamp="20201115 23:01:28.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046768944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046865667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.900" endtime="20201115 23:01:28.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046768944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046865667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.248" endtime="20201115 23:01:28.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.268" endtime="20201115 23:01:28.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.893" endtime="20201115 23:01:28.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.888" endtime="20201115 23:01:28.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.287" level="INFO">${RESULT} = [{'time': 0.046865667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.672299999999995e-05, 'source_diff': 9.672299999999995e-05}, {'time': 0.046976653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:28.278" endtime="20201115 23:01:28.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.317" level="INFO">${ACCURACY} = {'diff': [9.672299999999995e-05, 9.622199999999997e-05, 9.662500000000296e-05, 9.637500000000271e-05, 9.697200000000072e-05, 9.615299999999466e-05, 9.692999999999508e-05, 9.644399999999415e-05, 9.6667...</msg>
<status status="PASS" starttime="20201115 23:01:28.289" endtime="20201115 23:01:28.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.328" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.325" endtime="20201115 23:01:28.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.333" level="INFO">VALUE: [9.672299999999995e-05, 9.622199999999997e-05, 9.662500000000296e-05, 9.637500000000271e-05, 9.697200000000072e-05, 9.615299999999466e-05, 9.692999999999508e-05, 9.644399999999415e-05, 9.666700000000167e-05, 9.688900000000278e-05, 9.66809999999943e-05, 9.637500000000271e-05, 9.670900000000038e-05, 9.669500000000081e-05, 9.669500000000081e-05, 9.641700000000142e-05, 9.691600000000244e-05, 9.661099999999645e-05, 9.666700000000167e-05, 9.63609999999962e-05, 9.641700000000142e-05, 9.699999999999986e-05, 9.674999999999961e-05, 9.626399999999868e-05, 9.63200000000039e-05, 9.670900000000038e-05, 9.606900000000418e-05, 9.602700000000547e-05, 9.61660000000017e-05, 9.63609999999962e-05, 9.601399999999843e-05, 9.616700000000117e-05, 9.616700000000117e-05, 9.651399999999893e-05, 9.691699999999498e-05, 9.669500000000081e-05, 9.606999999999671e-05, 9.616599999999476e-05, 9.647200000000022e-05, 9.630499999999792e-05, 9.656900000000468e-05, 9.622199999999997e-05, 9.701299999999996e-05, 9.676399999999918e-05, 9.608399999999628e-05, 9.695900000000063e-05, 9.606999999999671e-05, 9.634700000000357e-05, 9.695800000000115e-05, 9.60409999999981e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.330" endtime="20201115 23:01:28.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.318" endtime="20201115 23:01:28.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.342" endtime="20201115 23:01:28.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.350" endtime="20201115 23:01:28.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.346" endtime="20201115 23:01:28.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.337" endtime="20201115 23:01:28.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.828" endtime="20201115 23:01:28.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.824" endtime="20201115 23:01:28.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.822" endtime="20201115 23:01:28.377"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.382" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.404" endtime="20201115 23:01:28.426"></status>
</kw>
<msg timestamp="20201115 23:01:28.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.400" endtime="20201115 23:01:28.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.429" endtime="20201115 23:01:28.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.436" endtime="20201115 23:01:28.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.393" endtime="20201115 23:01:28.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.387" endtime="20201115 23:01:28.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.460" endtime="20201115 23:01:28.795"></status>
</kw>
<msg timestamp="20201115 23:01:28.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047014653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047112181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.456" endtime="20201115 23:01:28.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047014653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047112181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.805" endtime="20201115 23:01:28.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.823" endtime="20201115 23:01:28.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.448" endtime="20201115 23:01:28.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.444" endtime="20201115 23:01:28.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.841" level="INFO">${RESULT} = [{'time': 0.047112181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.75279999999995e-05, 'source_diff': 9.75279999999995e-05}, {'time': 0.047224167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:28.832" endtime="20201115 23:01:28.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.874" level="INFO">${ACCURACY} = {'diff': [9.75279999999995e-05, 9.69730000000002e-05, 9.744400000000208e-05, 9.759699999999788e-05, 9.738799999999687e-05, 9.77080000000019e-05, 9.706899999999824e-05, 9.791700000000292e-05, 9.7236000...</msg>
<status status="PASS" starttime="20201115 23:01:28.843" endtime="20201115 23:01:28.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.885" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.882" endtime="20201115 23:01:28.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.890" level="INFO">VALUE: [9.75279999999995e-05, 9.69730000000002e-05, 9.744400000000208e-05, 9.759699999999788e-05, 9.738799999999687e-05, 9.77080000000019e-05, 9.706899999999824e-05, 9.791700000000292e-05, 9.723600000000054e-05, 9.769400000000233e-05, 9.78200000000054e-05, 9.711099999999695e-05, 9.79730000000012e-05, 9.797200000000172e-05, 9.740299999999591e-05, 9.794400000000258e-05, 9.726399999999968e-05, 9.750000000000036e-05, 9.769400000000233e-05, 9.729200000000576e-05, 9.713900000000303e-05, 9.762499999999702e-05, 9.800000000000086e-05, 9.769400000000233e-05, 9.70409999999991e-05, 9.75409999999996e-05, 9.755500000000611e-05, 9.797200000000172e-05, 9.749999999999343e-05, 9.72080000000014e-05, 9.750000000000036e-05, 9.779199999999932e-05, 9.713900000000303e-05, 9.763899999999659e-05, 9.750000000000036e-05, 9.750000000000036e-05, 9.762500000000396e-05, 9.705500000000561e-05, 9.788899999999684e-05, 9.723600000000054e-05, 9.798599999999436e-05, 9.750000000000036e-05, 9.779199999999932e-05, 9.770900000000138e-05, 9.776400000000018e-05, 9.752800000000644e-05, 9.744500000000156e-05, 9.733299999999806e-05, 9.79860000000013e-05, 9.763899999999659e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.887" endtime="20201115 23:01:28.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.875" endtime="20201115 23:01:28.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.899" endtime="20201115 23:01:28.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.907" endtime="20201115 23:01:28.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.903" endtime="20201115 23:01:28.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.894" endtime="20201115 23:01:28.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.384" endtime="20201115 23:01:28.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.379" endtime="20201115 23:01:28.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.378" endtime="20201115 23:01:28.933"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.939" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.960" endtime="20201115 23:01:28.982"></status>
</kw>
<msg timestamp="20201115 23:01:28.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.957" endtime="20201115 23:01:28.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.986" endtime="20201115 23:01:28.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.993" endtime="20201115 23:01:28.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.950" endtime="20201115 23:01:28.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.944" endtime="20201115 23:01:29.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.016" endtime="20201115 23:01:29.350"></status>
</kw>
<msg timestamp="20201115 23:01:29.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046796528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046895083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.013" endtime="20201115 23:01:29.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046796528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046895083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.359" endtime="20201115 23:01:29.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.378" endtime="20201115 23:01:29.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.006" endtime="20201115 23:01:29.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.001" endtime="20201115 23:01:29.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.397" level="INFO">${RESULT} = [{'time': 0.046895083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.855500000000017e-05, 'source_diff': 9.855500000000017e-05}, {'time': 0.047001083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:29.388" endtime="20201115 23:01:29.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.427" level="INFO">${ACCURACY} = {'diff': [9.855500000000017e-05, 9.85410000000006e-05, 9.894399999999665e-05, 9.812500000000446e-05, 9.806899999999924e-05, 9.844500000000256e-05, 9.825000000000111e-05, 9.876399999999425e-05, 9.81379...</msg>
<status status="PASS" starttime="20201115 23:01:29.399" endtime="20201115 23:01:29.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.438" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.436" endtime="20201115 23:01:29.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.443" level="INFO">VALUE: [9.855500000000017e-05, 9.85410000000006e-05, 9.894399999999665e-05, 9.812500000000446e-05, 9.806899999999924e-05, 9.844500000000256e-05, 9.825000000000111e-05, 9.876399999999425e-05, 9.813799999999762e-05, 9.876300000000171e-05, 9.897200000000272e-05, 9.87080000000029e-05, 9.883299999999956e-05, 9.809699999999838e-05, 9.825000000000111e-05, 9.86530000000041e-05, 9.82080000000024e-05, 9.877800000000075e-05, 9.819500000000231e-05, 9.888900000000478e-05, 9.891699999999698e-05, 9.879100000000085e-05, 9.809699999999838e-05, 9.845800000000265e-05, 9.879200000000032e-05, 9.822299999999451e-05, 9.894499999999612e-05, 9.861099999999845e-05, 9.806999999999871e-05, 9.851400000000093e-05, 9.888899999999784e-05, 9.898699999999483e-05, 9.811100000000489e-05, 9.826400000000068e-05, 9.887499999999827e-05, 9.855500000000017e-05, 9.805599999999914e-05, 9.869500000000281e-05, 9.891700000000392e-05, 9.863899999999759e-05, 9.845899999999519e-05, 9.816699999999623e-05, 9.8415999999997e-05, 9.881899999999999e-05, 9.88609999999987e-05, 9.876400000000118e-05, 9.805599999999914e-05, 9.890300000000435e-05, 9.856899999999974e-05, 9.830499999999992e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.440" endtime="20201115 23:01:29.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.429" endtime="20201115 23:01:29.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.452" endtime="20201115 23:01:29.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.460" endtime="20201115 23:01:29.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.456" endtime="20201115 23:01:29.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.448" endtime="20201115 23:01:29.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.940" endtime="20201115 23:01:29.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.936" endtime="20201115 23:01:29.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.934" endtime="20201115 23:01:29.487"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.492" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.514" endtime="20201115 23:01:29.538"></status>
</kw>
<msg timestamp="20201115 23:01:29.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.511" endtime="20201115 23:01:29.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.541" endtime="20201115 23:01:29.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.547" endtime="20201115 23:01:29.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.503" endtime="20201115 23:01:29.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.497" endtime="20201115 23:01:29.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.571" endtime="20201115 23:01:29.898"></status>
</kw>
<msg timestamp="20201115 23:01:29.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047801403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047901, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:29.568" endtime="20201115 23:01:29.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047801403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047901, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:29.902" endtime="20201115 23:01:29.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.911" endtime="20201115 23:01:29.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.560" endtime="20201115 23:01:29.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.556" endtime="20201115 23:01:29.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.919" level="INFO">${RESULT} = [{'time': 0.047901, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.959699999999988e-05, 'source_diff': 9.959699999999988e-05}, {'time': 0.048011028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:29.915" endtime="20201115 23:01:29.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.933" level="INFO">${ACCURACY} = {'diff': [9.959699999999988e-05, 9.984700000000013e-05, 9.911099999999895e-05, 9.994499999999712e-05, 9.929200000000082e-05, 9.91809999999968e-05, 9.911099999999895e-05, 9.975000000000261e-05, 9.92079...</msg>
<status status="PASS" starttime="20201115 23:01:29.920" endtime="20201115 23:01:29.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.938" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.937" endtime="20201115 23:01:29.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.940" level="INFO">VALUE: [9.959699999999988e-05, 9.984700000000013e-05, 9.911099999999895e-05, 9.994499999999712e-05, 9.929200000000082e-05, 9.91809999999968e-05, 9.911099999999895e-05, 9.975000000000261e-05, 9.920799999999647e-05, 9.983300000000056e-05, 9.949999999999543e-05, 9.993100000000449e-05, 9.905600000000014e-05, 9.963899999999859e-05, 9.937499999999877e-05, 9.987500000000621e-05, 9.934800000000604e-05, 9.931999999999996e-05, 9.968000000000476e-05, 9.895799999999622e-05, 9.898599999999536e-05, 9.945799999999672e-05, 9.906900000000024e-05, 9.911099999999895e-05, 9.916699999999723e-05, 9.944499999999662e-05, 9.977799999999482e-05, 9.955500000000117e-05, 9.969499999999687e-05, 9.940200000000537e-05, 9.967999999999783e-05, 9.937499999999877e-05, 9.92080000000034e-05, 9.962499999999902e-05, 9.987499999999927e-05, 9.92359999999956e-05, 9.990299999999841e-05, 9.912499999999852e-05, 9.948700000000227e-05, 9.912500000000546e-05, 9.913899999999809e-05, 9.966599999999826e-05, 9.929200000000082e-05, 9.990299999999841e-05, 9.920900000000288e-05, 9.947199999999629e-05, 9.905600000000014e-05, 9.922300000000245e-05, 9.987499999999927e-05, 9.998700000000277e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.939" endtime="20201115 23:01:29.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.933" endtime="20201115 23:01:29.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.945" endtime="20201115 23:01:29.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.949" endtime="20201115 23:01:29.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.946" endtime="20201115 23:01:29.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.942" endtime="20201115 23:01:29.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.493" endtime="20201115 23:01:29.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.489" endtime="20201115 23:01:29.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.488" endtime="20201115 23:01:29.975"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.980" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.002" endtime="20201115 23:01:30.025"></status>
</kw>
<msg timestamp="20201115 23:01:30.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.999" endtime="20201115 23:01:30.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.028" endtime="20201115 23:01:30.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.034" endtime="20201115 23:01:30.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.991" endtime="20201115 23:01:30.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.986" endtime="20201115 23:01:30.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.057" endtime="20201115 23:01:30.392"></status>
</kw>
<msg timestamp="20201115 23:01:30.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047782444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047882583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.054" endtime="20201115 23:01:30.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047782444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047882583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.401" endtime="20201115 23:01:30.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.419" endtime="20201115 23:01:30.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.047" endtime="20201115 23:01:30.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.042" endtime="20201115 23:01:30.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.438" level="INFO">${RESULT} = [{'time': 0.047882583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010013899999999909, 'source_diff': 0.00010013899999999909}, {'time': 0.047988528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:30.429" endtime="20201115 23:01:30.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.467" level="INFO">${ACCURACY} = {'diff': [0.00010013899999999909, 0.00010079200000000232, 0.00010091699999999898, 0.00010029200000000182, 0.0001004730000000037, 0.00010025000000000311, 0.0001003610000000002, 0.0001006530000000061, 0...</msg>
<status status="PASS" starttime="20201115 23:01:30.440" endtime="20201115 23:01:30.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.478" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.476" endtime="20201115 23:01:30.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.483" level="INFO">VALUE: [0.00010013899999999909, 0.00010079200000000232, 0.00010091699999999898, 0.00010029200000000182, 0.0001004730000000037, 0.00010025000000000311, 0.0001003610000000002, 0.0001006530000000061, 0.00010044399999999815, 0.00010045799999999772, 0.00010049999999999643, 0.00010004200000000157, 0.00010029200000000182, 0.00010087500000000027, 0.00010095799999999822, 0.00010029099999999541, 0.00010056900000000174, 0.00010081900000000199, 0.00010094399999999865, 0.00010015299999999866, 0.00010061100000000045, 0.00010087500000000027, 0.00010037499999999977, 0.00010098599999999736, 0.00010065299999999916, 0.0001008060000000019, 0.0001002080000000044, 0.00010095799999999822, 0.00010081899999999505, 0.00010050000000000336, 0.0001007359999999971, 0.00010090299999999941, 0.00010019500000000431, 0.00010033400000000053, 0.00010091699999999898, 0.00010097199999999779, 0.00010092999999999908, 0.0001003610000000002, 0.00010077699999999634, 0.00010007000000000071, 0.000100513999999996, 0.00010072200000000447, 0.0001008610000000007, 0.00010049999999999643, 0.00010037499999999977, 0.00010090299999999941, 0.00010043100000000499, 0.0001009159999999995, 0.00010070799999999797, 0.00010031900000000149]</msg>
<status status="PASS" starttime="20201115 23:01:30.480" endtime="20201115 23:01:30.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.469" endtime="20201115 23:01:30.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.493" endtime="20201115 23:01:30.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.501" endtime="20201115 23:01:30.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.497" endtime="20201115 23:01:30.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.488" endtime="20201115 23:01:30.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.982" endtime="20201115 23:01:30.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.978" endtime="20201115 23:01:30.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.976" endtime="20201115 23:01:30.527"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.533" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.554" endtime="20201115 23:01:30.577"></status>
</kw>
<msg timestamp="20201115 23:01:30.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.551" endtime="20201115 23:01:30.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.580" endtime="20201115 23:01:30.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.587" endtime="20201115 23:01:30.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.544" endtime="20201115 23:01:30.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.538" endtime="20201115 23:01:30.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.610" endtime="20201115 23:01:30.950"></status>
</kw>
<msg timestamp="20201115 23:01:30.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046722472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046824222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.607" endtime="20201115 23:01:30.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046722472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046824222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.959" endtime="20201115 23:01:30.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.977" endtime="20201115 23:01:30.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.599" endtime="20201115 23:01:30.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.595" endtime="20201115 23:01:30.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.994" level="INFO">${RESULT} = [{'time': 0.046824222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010174999999999768, 'source_diff': 0.00010174999999999768}, {'time': 0.046934236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:30.986" endtime="20201115 23:01:30.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.027" level="INFO">${ACCURACY} = {'diff': [0.00010174999999999768, 0.00010172199999999854, 0.00010131899999999555, 0.00010101400000000343, 0.00010155600000000264, 0.00010201400000000443, 0.00010100000000000386, 0.00010177800000000375...</msg>
<status status="PASS" starttime="20201115 23:01:30.996" endtime="20201115 23:01:31.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.038" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.036" endtime="20201115 23:01:31.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.044" level="INFO">VALUE: [0.00010174999999999768, 0.00010172199999999854, 0.00010131899999999555, 0.00010101400000000343, 0.00010155600000000264, 0.00010201400000000443, 0.00010100000000000386, 0.00010177800000000375, 0.00010109700000000138, 0.00010111100000000095, 0.0001010410000000031, 0.00010181900000000299, 0.000101513999999997, 0.00010133299999999512, 0.0001010689999999953, 0.00010147199999999829, 0.00010197200000000572, 0.00010116699999999923, 0.00010116599999999976, 0.00010124999999999718, 0.00010129099999999641, 0.00010112500000000052, 0.00010151400000000393, 0.00010181900000000299, 0.00010126400000000368, 0.00010198599999999836, 0.00010195899999999869, 0.00010170900000000538, 0.00010170899999999844, 0.00010190300000000041, 0.00010165200000000069, 0.0001015410000000036, 0.00010184700000000213, 0.00010198599999999836, 0.0001017080000000059, 0.00010184699999999519, 0.00010190300000000041, 0.00010194499999999912, 0.00010141699999999948, 0.00010130499999999598, 0.00010133300000000206, 0.00010137499999999383, 0.00010138900000000034, 0.0001015280000000035, 0.00010169400000000633, 0.00010159699999999494, 0.00010125000000000411, 0.00010193000000000008, 0.00010104199999999564, 0.00010169500000000581]</msg>
<status status="PASS" starttime="20201115 23:01:31.040" endtime="20201115 23:01:31.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.029" endtime="20201115 23:01:31.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.053" endtime="20201115 23:01:31.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.061" endtime="20201115 23:01:31.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.057" endtime="20201115 23:01:31.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.048" endtime="20201115 23:01:31.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.534" endtime="20201115 23:01:31.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.530" endtime="20201115 23:01:31.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.528" endtime="20201115 23:01:31.088"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.093" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.115" endtime="20201115 23:01:31.137"></status>
</kw>
<msg timestamp="20201115 23:01:31.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.111" endtime="20201115 23:01:31.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.141" endtime="20201115 23:01:31.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.147" endtime="20201115 23:01:31.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.104" endtime="20201115 23:01:31.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.098" endtime="20201115 23:01:31.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.171" endtime="20201115 23:01:31.518"></status>
</kw>
<msg timestamp="20201115 23:01:31.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046977792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047080639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.167" endtime="20201115 23:01:31.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046977792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047080639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.527" endtime="20201115 23:01:31.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.545" endtime="20201115 23:01:31.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.160" endtime="20201115 23:01:31.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.155" endtime="20201115 23:01:31.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.564" level="INFO">${RESULT} = [{'time': 0.047080639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010284700000000313, 'source_diff': 0.00010284700000000313}, {'time': 0.047190639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:31.555" endtime="20201115 23:01:31.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.594" level="INFO">${ACCURACY} = {'diff': [0.00010284700000000313, 0.00010274999999999868, 0.00010270799999999997, 0.00010216700000000023, 0.00010295899999999969, 0.00010202799999999707, 0.0001026940000000004, 0.00010281899999999705,...</msg>
<status status="PASS" starttime="20201115 23:01:31.567" endtime="20201115 23:01:31.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.605" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.603" endtime="20201115 23:01:31.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.610" level="INFO">VALUE: [0.00010284700000000313, 0.00010274999999999868, 0.00010270799999999997, 0.00010216700000000023, 0.00010295899999999969, 0.00010202799999999707, 0.0001026940000000004, 0.00010281899999999705, 0.00010212500000000152, 0.00010287500000000227, 0.0001028610000000027, 0.00010208300000000281, 0.00010223600000000554, 0.00010277799999999782, 0.00010266700000000073, 0.00010248699999999833, 0.0001020139999999975, 0.0001022359999999986, 0.0001020410000000041, 0.00010248599999999886, 0.00010233299999999612, 0.00010279200000000432, 0.00010293100000000055, 0.00010232000000000296, 0.00010293100000000055, 0.00010241700000000048, 0.00010211200000000142, 0.00010255499999999723, 0.00010211100000000195, 0.00010295800000000022, 0.00010224999999999818, 0.00010222199999999904, 0.00010227800000000425, 0.00010225000000000511, 0.00010279199999999739, 0.00010258299999999637, 0.00010284699999999619, 0.0001021939999999999, 0.00010252699999999809, 0.00010268000000000083, 0.00010287499999999533, 0.00010229200000000382, 0.0001021809999999998, 0.00010272199999999954, 0.00010212500000000152, 0.00010261100000000245, 0.00010295899999999969, 0.00010274999999999868, 0.00010243000000000058, 0.00010213900000000109]</msg>
<status status="PASS" starttime="20201115 23:01:31.607" endtime="20201115 23:01:31.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.596" endtime="20201115 23:01:31.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.619" endtime="20201115 23:01:31.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.627" endtime="20201115 23:01:31.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.623" endtime="20201115 23:01:31.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.615" endtime="20201115 23:01:31.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.094" endtime="20201115 23:01:31.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.090" endtime="20201115 23:01:31.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.089" endtime="20201115 23:01:31.654"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.659" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.681" endtime="20201115 23:01:31.704"></status>
</kw>
<msg timestamp="20201115 23:01:31.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.678" endtime="20201115 23:01:31.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.708" endtime="20201115 23:01:31.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.714" endtime="20201115 23:01:31.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.671" endtime="20201115 23:01:31.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.665" endtime="20201115 23:01:31.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.737" endtime="20201115 23:01:32.074"></status>
</kw>
<msg timestamp="20201115 23:01:32.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047050847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047154319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.734" endtime="20201115 23:01:32.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047050847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047154319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.083" endtime="20201115 23:01:32.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.103" endtime="20201115 23:01:32.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.727" endtime="20201115 23:01:32.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.722" endtime="20201115 23:01:32.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.120" level="INFO">${RESULT} = [{'time': 0.047154319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010347200000000029, 'source_diff': 0.00010347200000000029}, {'time': 0.047270306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:32.111" endtime="20201115 23:01:32.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.149" level="INFO">${ACCURACY} = {'diff': [0.00010347200000000029, 0.00010331999999999703, 0.00010322299999999951, 0.00010327699999999884, 0.00010376399999999925, 0.00010345800000000072, 0.00010370800000000097, 0.00010397200000000079...</msg>
<status status="PASS" starttime="20201115 23:01:32.122" endtime="20201115 23:01:32.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.160" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.158" endtime="20201115 23:01:32.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.166" level="INFO">VALUE: [0.00010347200000000029, 0.00010331999999999703, 0.00010322299999999951, 0.00010327699999999884, 0.00010376399999999925, 0.00010345800000000072, 0.00010370800000000097, 0.00010397200000000079, 0.00010391700000000198, 0.0001031810000000008, 0.00010390300000000241, 0.00010341699999999454, 0.00010395900000000069, 0.000103416000000002, 0.00010344400000000115, 0.00010308299999999687, 0.00010306999999999678, 0.00010388900000000284, 0.0001040139999999995, 0.00010394500000000112, 0.00010341700000000148, 0.0001033339999999966, 0.00010362499999999608, 0.00010379099999999891, 0.00010372200000000054, 0.00010372200000000054, 0.00010366699999999479, 0.00010329199999999789, 0.00010395800000000122, 0.00010307000000000371, 0.00010393100000000155, 0.00010326399999999875, 0.00010305499999999773, 0.00010381899999999805, 0.00010365300000000216, 0.00010327699999999884, 0.00010336099999999626, 0.00010320799999999353, 0.00010343100000000105, 0.0001035280000000055, 0.00010312499999999558, 0.00010352799999999857, 0.00010361199999999599, 0.00010399999999999993, 0.00010359699999999694, 0.00010383300000000456, 0.00010308300000000381, 0.00010320800000000047, 0.00010356999999999728, 0.00010359700000000388]</msg>
<status status="PASS" starttime="20201115 23:01:32.163" endtime="20201115 23:01:32.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.151" endtime="20201115 23:01:32.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.175" endtime="20201115 23:01:32.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.183" endtime="20201115 23:01:32.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.179" endtime="20201115 23:01:32.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.170" endtime="20201115 23:01:32.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.661" endtime="20201115 23:01:32.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.657" endtime="20201115 23:01:32.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.655" endtime="20201115 23:01:32.209"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.215" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.236" endtime="20201115 23:01:32.260"></status>
</kw>
<msg timestamp="20201115 23:01:32.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.233" endtime="20201115 23:01:32.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.263" endtime="20201115 23:01:32.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.269" endtime="20201115 23:01:32.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.226" endtime="20201115 23:01:32.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.220" endtime="20201115 23:01:32.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.293" endtime="20201115 23:01:32.630"></status>
</kw>
<msg timestamp="20201115 23:01:32.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046913542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04701775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:32.289" endtime="20201115 23:01:32.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046913542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04701775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:32.639" endtime="20201115 23:01:32.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.657" endtime="20201115 23:01:32.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.282" endtime="20201115 23:01:32.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.277" endtime="20201115 23:01:32.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.676" level="INFO">${RESULT} = [{'time': 0.04701775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010420799999999453, 'source_diff': 0.00010420799999999453}, {'time': 0.04712975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:32.667" endtime="20201115 23:01:32.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.705" level="INFO">${ACCURACY} = {'diff': [0.00010420799999999453, 0.00010412499999999658, 0.00010475000000000068, 0.00010475000000000068, 0.00010481999999999853, 0.0001044019999999965, 0.00010437500000000377, 0.000104901999999997, 0...</msg>
<status status="PASS" starttime="20201115 23:01:32.678" endtime="20201115 23:01:32.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.716" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.714" endtime="20201115 23:01:32.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.722" level="INFO">VALUE: [0.00010420799999999453, 0.00010412499999999658, 0.00010475000000000068, 0.00010475000000000068, 0.00010481999999999853, 0.0001044019999999965, 0.00010437500000000377, 0.000104901999999997, 0.00010463900000000359, 0.00010420800000000147, 0.00010500000000000093, 0.00010475000000000068, 0.00010441699999999554, 0.0001047219999999946, 0.00010412499999999658, 0.00010402799999999907, 0.000104514, 0.00010454099999999966, 0.00010412500000000352, 0.00010458299999999837, 0.00010500000000000093, 0.00010408299999999787, 0.00010472200000000154, 0.00010430499999999898, 0.0001042360000000006, 0.00010444500000000162, 0.0001043339999999976, 0.00010466599999999632, 0.00010415200000000319, 0.00010466599999999632, 0.00010408299999999787, 0.00010483299999999862, 0.0001041940000000019, 0.00010481999999999853, 0.00010458399999999785, 0.0001045559999999987, 0.0001043339999999976, 0.0001043889999999964, 0.00010447199999999435, 0.0001045689999999988, 0.00010427799999999932, 0.0001046940000000024, 0.00010476400000000025, 0.00010458299999999837, 0.00010452799999999957, 0.00010408400000000428, 0.00010438800000000387, 0.00010466599999999632, 0.0001043060000000054, 0.00010462500000000402]</msg>
<status status="PASS" starttime="20201115 23:01:32.719" endtime="20201115 23:01:32.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.707" endtime="20201115 23:01:32.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.731" endtime="20201115 23:01:32.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.739" endtime="20201115 23:01:32.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.735" endtime="20201115 23:01:32.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.726" endtime="20201115 23:01:32.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.216" endtime="20201115 23:01:32.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.212" endtime="20201115 23:01:32.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.210" endtime="20201115 23:01:32.766"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.771" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.792" endtime="20201115 23:01:32.815"></status>
</kw>
<msg timestamp="20201115 23:01:32.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.789" endtime="20201115 23:01:32.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.819" endtime="20201115 23:01:32.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.826" endtime="20201115 23:01:32.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.782" endtime="20201115 23:01:32.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.776" endtime="20201115 23:01:32.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.849" endtime="20201115 23:01:33.193"></status>
</kw>
<msg timestamp="20201115 23:01:33.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047139944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047245653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.846" endtime="20201115 23:01:33.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047139944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047245653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.199" endtime="20201115 23:01:33.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.208" endtime="20201115 23:01:33.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.839" endtime="20201115 23:01:33.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.834" endtime="20201115 23:01:33.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.216" level="INFO">${RESULT} = [{'time': 0.047245653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001057089999999955, 'source_diff': 0.0001057089999999955}, {'time': 0.047354653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:33.212" endtime="20201115 23:01:33.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.231" level="INFO">${ACCURACY} = {'diff': [0.0001057089999999955, 0.00010544499999999568, 0.00010525000000000118, 0.00010545900000000219, 0.00010558299999999937, 0.00010558299999999937, 0.0001058889999999979, 0.00010552800000000057, ...</msg>
<status status="PASS" starttime="20201115 23:01:33.217" endtime="20201115 23:01:33.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.236" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.235" endtime="20201115 23:01:33.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.239" level="INFO">VALUE: [0.0001057089999999955, 0.00010544499999999568, 0.00010525000000000118, 0.00010545900000000219, 0.00010558299999999937, 0.00010558299999999937, 0.0001058889999999979, 0.00010552800000000057, 0.00010530599999999946, 0.00010525000000000118, 0.00010530599999999946, 0.00010516700000000323, 0.00010575000000000168, 0.00010534699999999869, 0.00010569399999999646, 0.00010540200000000444, 0.00010552700000000109, 0.00010565299999999722, 0.0001055559999999997, 0.00010508299999999887, 0.00010570799999999603, 0.00010548600000000186, 0.00010569500000000287, 0.00010554100000000066, 0.00010529100000000041, 0.0001050689999999993, 0.00010591599999999757, 0.0001056940000000034, 0.00010577800000000082, 0.00010511100000000495, 0.00010540299999999697, 0.00010512499999999758, 0.00010566700000000373, 0.00010573599999999517, 0.0001058889999999979, 0.000105514000000001, 0.00010525000000000118, 0.000105514000000001, 0.00010568099999999636, 0.00010502800000000007, 0.00010570800000000297, 0.00010587499999999833, 0.00010586099999999876, 0.00010529100000000041, 0.00010598699999999489, 0.0001051810000000028, 0.00010558299999999937, 0.0001059160000000045, 0.00010587499999999833, 0.00010566700000000373]</msg>
<status status="PASS" starttime="20201115 23:01:33.237" endtime="20201115 23:01:33.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.232" endtime="20201115 23:01:33.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.243" endtime="20201115 23:01:33.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.247" endtime="20201115 23:01:33.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.245" endtime="20201115 23:01:33.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.241" endtime="20201115 23:01:33.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.772" endtime="20201115 23:01:33.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.768" endtime="20201115 23:01:33.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.766" endtime="20201115 23:01:33.269"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.271" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.282" endtime="20201115 23:01:33.303"></status>
</kw>
<msg timestamp="20201115 23:01:33.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.280" endtime="20201115 23:01:33.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.307" endtime="20201115 23:01:33.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.313" endtime="20201115 23:01:33.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.277" endtime="20201115 23:01:33.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.274" endtime="20201115 23:01:33.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.336" endtime="20201115 23:01:33.671"></status>
</kw>
<msg timestamp="20201115 23:01:33.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027787167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027893264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.333" endtime="20201115 23:01:33.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027787167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027893264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.680" endtime="20201115 23:01:33.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.698" endtime="20201115 23:01:33.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.326" endtime="20201115 23:01:33.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.321" endtime="20201115 23:01:33.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.717" level="INFO">${RESULT} = [{'time': 0.027893264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010609699999999944, 'source_diff': 0.00010609699999999944}, {'time': 0.028009264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:33.708" endtime="20201115 23:01:33.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.746" level="INFO">${ACCURACY} = {'diff': [0.00010609699999999944, 0.00010665299999999822, 0.00010666699999999779, 0.00010686099999999976, 0.00010690300000000194, 0.00010665200000000222, 0.00010604100000000116, 0.00010636099999999926...</msg>
<status status="PASS" starttime="20201115 23:01:33.719" endtime="20201115 23:01:33.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.757" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.755" endtime="20201115 23:01:33.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.763" level="INFO">VALUE: [0.00010609699999999944, 0.00010665299999999822, 0.00010666699999999779, 0.00010686099999999976, 0.00010690300000000194, 0.00010665200000000222, 0.00010604100000000116, 0.00010636099999999926, 0.00010616599999999782, 0.00010654200000000114, 0.00010663899999999865, 0.000106514000000002, 0.00010604199999999717, 0.0001066950000000004, 0.00010659799999999942, 0.00010690300000000194, 0.00010608299999999987, 0.00010645800000000025, 0.0001062360000000026, 0.00010701399999999903, 0.0001065690000000008, 0.00010676400000000225, 0.00010636099999999926, 0.00010626400000000175, 0.0001062499999999987, 0.00010680500000000148, 0.00010683300000000062, 0.00010645800000000025, 0.0001067080000000005, 0.00010701399999999903, 0.00010644500000000362, 0.00010674999999999574, 0.00010648600000000286, 0.00010668099999999736, 0.00010687499999999933, 0.00010684700000000019, 0.00010645799999999678, 0.00010662499999999908, 0.00010661099999999951, 0.0001063889999999984, 0.00010623599999999567, 0.00010680600000000096, 0.00010682000000000053, 0.00010700000000000293, 0.0001067360000000031, 0.00010638799999999893, 0.00010693099999999761, 0.00010695800000000422, 0.00010611099999999901, 0.00010699999999999599]</msg>
<status status="PASS" starttime="20201115 23:01:33.760" endtime="20201115 23:01:33.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.748" endtime="20201115 23:01:33.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.772" endtime="20201115 23:01:33.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.781" endtime="20201115 23:01:33.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.776" endtime="20201115 23:01:33.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.767" endtime="20201115 23:01:33.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.272" endtime="20201115 23:01:33.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.270" endtime="20201115 23:01:33.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.269" endtime="20201115 23:01:33.807"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.813" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.834" endtime="20201115 23:01:33.857"></status>
</kw>
<msg timestamp="20201115 23:01:33.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.831" endtime="20201115 23:01:33.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.861" endtime="20201115 23:01:33.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.867" endtime="20201115 23:01:33.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.824" endtime="20201115 23:01:33.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.818" endtime="20201115 23:01:33.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.891" endtime="20201115 23:01:34.229"></status>
</kw>
<msg timestamp="20201115 23:01:34.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046914056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047021931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.887" endtime="20201115 23:01:34.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046914056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047021931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.239" endtime="20201115 23:01:34.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.257" endtime="20201115 23:01:34.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.880" endtime="20201115 23:01:34.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.875" endtime="20201115 23:01:34.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.274" level="INFO">${RESULT} = [{'time': 0.047021931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010787500000000033, 'source_diff': 0.00010787500000000033}, {'time': 0.047135944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:34.265" endtime="20201115 23:01:34.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.304" level="INFO">${ACCURACY} = {'diff': [0.00010787500000000033, 0.00010737499999999983, 0.00010702700000000259, 0.00010791599999999957, 0.00010741699999999854, 0.00010752800000000257, 0.00010712499999999958, 0.00010804099999999622...</msg>
<status status="PASS" starttime="20201115 23:01:34.276" endtime="20201115 23:01:34.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.315" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.312" endtime="20201115 23:01:34.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.320" level="INFO">VALUE: [0.00010787500000000033, 0.00010737499999999983, 0.00010702700000000259, 0.00010791599999999957, 0.00010741699999999854, 0.00010752800000000257, 0.00010712499999999958, 0.00010804099999999622, 0.00010763899999999965, 0.00010770900000000444, 0.00010783299999999468, 0.00010737499999999983, 0.00010770800000000497, 0.00010708300000000087, 0.00010737499999999983, 0.00010729200000000189, 0.00010768099999999836, 0.00010745800000000472, 0.00010784700000000119, 0.0001073340000000006, 0.00010702800000000207, 0.00010730500000000198, 0.00010729099999999547, 0.00010713899999999915, 0.00010748599999999692, 0.00010769399999999846, 0.00010743100000000505, 0.00010734700000000069, 0.0001073340000000006, 0.0001073340000000006, 0.00010704200000000164, 0.00010795799999999828, 0.0001074019999999995, 0.00010723599999999667, 0.0001070140000000025, 0.00010726400000000275, 0.00010761100000000051, 0.00010758300000000137, 0.00010722299999999657, 0.00010769500000000487, 0.00010713899999999915, 0.00010709700000000044, 0.00010759700000000094, 0.00010750000000000343, 0.00010748599999999692, 0.0001075560000000017, 0.00010718099999999786, 0.00010784700000000119, 0.00010727800000000232, 0.00010704200000000164]</msg>
<status status="PASS" starttime="20201115 23:01:34.317" endtime="20201115 23:01:34.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.305" endtime="20201115 23:01:34.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.330" endtime="20201115 23:01:34.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.338" endtime="20201115 23:01:34.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.334" endtime="20201115 23:01:34.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.325" endtime="20201115 23:01:34.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.814" endtime="20201115 23:01:34.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.810" endtime="20201115 23:01:34.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.808" endtime="20201115 23:01:34.364"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.370" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.391" endtime="20201115 23:01:34.414"></status>
</kw>
<msg timestamp="20201115 23:01:34.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.388" endtime="20201115 23:01:34.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.418" endtime="20201115 23:01:34.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.424" endtime="20201115 23:01:34.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.381" endtime="20201115 23:01:34.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.375" endtime="20201115 23:01:34.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.448" endtime="20201115 23:01:34.782"></status>
</kw>
<msg timestamp="20201115 23:01:34.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047193931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047302889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.444" endtime="20201115 23:01:34.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047193931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047302889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.792" endtime="20201115 23:01:34.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.810" endtime="20201115 23:01:34.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.437" endtime="20201115 23:01:34.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.432" endtime="20201115 23:01:34.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.829" level="INFO">${RESULT} = [{'time': 0.047302889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010895799999999928, 'source_diff': 0.00010895799999999928}, {'time': 0.047414889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:34.820" endtime="20201115 23:01:34.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.858" level="INFO">${ACCURACY} = {'diff': [0.00010895799999999928, 0.00010844499999999868, 0.00010886100000000176, 0.00010836100000000126, 0.0001082360000000046, 0.00010829199999999595, 0.00010888800000000143, 0.00010837499999999389,...</msg>
<status status="PASS" starttime="20201115 23:01:34.831" endtime="20201115 23:01:34.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.869" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.867" endtime="20201115 23:01:34.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.888" level="INFO">VALUE: [0.00010895799999999928, 0.00010844499999999868, 0.00010886100000000176, 0.00010836100000000126, 0.0001082360000000046, 0.00010829199999999595, 0.00010888800000000143, 0.00010837499999999389, 0.00010805500000000273, 0.00010847199999999835, 0.00010891700000000004, 0.00010883300000000262, 0.00010868099999999936, 0.00010849999999999749, 0.00010869399999999946, 0.00010877700000000434, 0.00010891600000000057, 0.00010850000000000443, 0.00010865300000000022, 0.00010865300000000022, 0.00010813900000000015, 0.0001090140000000045, 0.00010825000000000418, 0.00010840300000000691, 0.00010870799999999903, 0.00010879100000000391, 0.00010866599999999338, 0.00010852800000000357, 0.00010870799999999903, 0.0001085690000000028, 0.00010844399999999921, 0.00010844499999999868, 0.00010862500000000108, 0.0001087089999999985, 0.00010867999999999989, 0.00010883300000000262, 0.00010861100000000151, 0.00010849999999999749, 0.00010876399999999731, 0.00010858299999999543, 0.00010852799999999663, 0.00010898700000000483, 0.00010866699999999979, 0.00010866699999999979, 0.00010866699999999979, 0.00010869399999999946, 0.0001085549999999963, 0.00010809700000000144, 0.00010836099999999432, 0.00010830600000000246]</msg>
<status status="PASS" starttime="20201115 23:01:34.871" endtime="20201115 23:01:34.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.860" endtime="20201115 23:01:34.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.897" endtime="20201115 23:01:34.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.906" endtime="20201115 23:01:34.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.901" endtime="20201115 23:01:34.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.892" endtime="20201115 23:01:34.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.371" endtime="20201115 23:01:34.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.367" endtime="20201115 23:01:34.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.365" endtime="20201115 23:01:34.932"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.938" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.961" endtime="20201115 23:01:34.985"></status>
</kw>
<msg timestamp="20201115 23:01:34.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.957" endtime="20201115 23:01:34.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.988" endtime="20201115 23:01:34.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.994" endtime="20201115 23:01:34.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.950" endtime="20201115 23:01:35.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.944" endtime="20201115 23:01:35.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.018" endtime="20201115 23:01:35.355"></status>
</kw>
<msg timestamp="20201115 23:01:35.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048852222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048961806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.015" endtime="20201115 23:01:35.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048852222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048961806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.364" endtime="20201115 23:01:35.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.382" endtime="20201115 23:01:35.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.007" endtime="20201115 23:01:35.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.003" endtime="20201115 23:01:35.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.399" level="INFO">${RESULT} = [{'time': 0.048961806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010958399999999591, 'source_diff': 0.00010958399999999591}, {'time': 0.049077792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:35.391" endtime="20201115 23:01:35.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.432" level="INFO">${ACCURACY} = {'diff': [0.00010958399999999591, 0.00010999999999999899, 0.00010916700000000029, 0.00010990300000000147, 0.00010966700000000079, 0.00010906899999999636, 0.00010924999999999824, 0.00010983300000000362...</msg>
<status status="PASS" starttime="20201115 23:01:35.402" endtime="20201115 23:01:35.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.443" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.441" endtime="20201115 23:01:35.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.449" level="INFO">VALUE: [0.00010958399999999591, 0.00010999999999999899, 0.00010916700000000029, 0.00010990300000000147, 0.00010966700000000079, 0.00010906899999999636, 0.00010924999999999824, 0.00010983300000000362, 0.00010908299999999593, 0.00010987500000000233, 0.00010973599999999917, 0.00010908400000000235, 0.0001090419999999967, 0.00010965200000000175, 0.00010952699999999815, 0.00010919499999999943, 0.00010926399999999781, 0.00010923599999999867, 0.00010920799999999953, 0.00010948599999999892, 0.00010906999999999584, 0.0001097219999999996, 0.00010929199999999695, 0.00010930599999999652, 0.00010948599999999892, 0.00010984700000000319, 0.00010915300000000072, 0.00010923599999999867, 0.00010944400000000021, 0.00010965300000000122, 0.00010908400000000235, 0.00010966700000000079, 0.00010991700000000104, 0.0001095549999999973, 0.0001095549999999973, 0.00010969400000000046, 0.0001095549999999973, 0.00010927800000000432, 0.00010970900000000644, 0.00010902800000000407, 0.00010930600000000346, 0.00010958299999999643, 0.00010990300000000147, 0.00010976299999999883, 0.00010970800000000003, 0.00010906899999999636, 0.00010941600000000107, 0.000109596999999996, 0.00010905599999999627, 0.00010945799999999978]</msg>
<status status="PASS" starttime="20201115 23:01:35.446" endtime="20201115 23:01:35.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.434" endtime="20201115 23:01:35.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.457" endtime="20201115 23:01:35.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.466" endtime="20201115 23:01:35.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.461" endtime="20201115 23:01:35.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.453" endtime="20201115 23:01:35.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.939" endtime="20201115 23:01:35.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.935" endtime="20201115 23:01:35.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.933" endtime="20201115 23:01:35.492"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.497" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.519" endtime="20201115 23:01:35.542"></status>
</kw>
<msg timestamp="20201115 23:01:35.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.516" endtime="20201115 23:01:35.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.546" endtime="20201115 23:01:35.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.552" endtime="20201115 23:01:35.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.508" endtime="20201115 23:01:35.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.503" endtime="20201115 23:01:35.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.575" endtime="20201115 23:01:35.911"></status>
</kw>
<msg timestamp="20201115 23:01:35.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046712847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0468235, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:35.572" endtime="20201115 23:01:35.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046712847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0468235, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:35.921" endtime="20201115 23:01:35.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.939" endtime="20201115 23:01:35.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.565" endtime="20201115 23:01:35.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.560" endtime="20201115 23:01:35.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.958" level="INFO">${RESULT} = [{'time': 0.0468235, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011065299999999528, 'source_diff': 0.00011065299999999528}, {'time': 0.046942528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:35.949" endtime="20201115 23:01:35.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.988" level="INFO">${ACCURACY} = {'diff': [0.00011065299999999528, 0.00011066699999999485, 0.00011087499999999639, 0.00011066700000000179, 0.00011058400000000385, 0.00011037500000000283, 0.00011009700000000344, 0.00011054200000000514...</msg>
<status status="PASS" starttime="20201115 23:01:35.960" endtime="20201115 23:01:35.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.000" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.997" endtime="20201115 23:01:36.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.006" level="INFO">VALUE: [0.00011065299999999528, 0.00011066699999999485, 0.00011087499999999639, 0.00011066700000000179, 0.00011058400000000385, 0.00011037500000000283, 0.00011009700000000344, 0.00011054200000000514, 0.00011020800000000053, 0.0001102220000000001, 0.0001100419999999977, 0.00011008400000000335, 0.00011013900000000215, 0.00011086099999999682, 0.00011037499999999589, 0.00011088899999999596, 0.00011079099999999897, 0.00011076399999999931, 0.00011070800000000103, 0.00011047200000000035, 0.00011083399999999716, 0.000110514000000006, 0.0001107769999999994, 0.00011049999999999949, 0.00011024999999999924, 0.00011036100000000326, 0.00011070800000000103, 0.00011081900000000505, 0.00011087499999999639, 0.00011076399999999931, 0.00011023599999999967, 0.00011047299999999982, 0.00011087500000000333, 0.00011084799999999673, 0.00011099999999999999, 0.00011025000000000618, 0.00011066600000000232, 0.00011015300000000172, 0.00011091700000000204, 0.00011076399999999931, 0.00011068100000000136, 0.00011036100000000326, 0.00011026399999999881, 0.00011012500000000258, 0.00011049999999999949, 0.00011091700000000204, 0.00011029099999999847, 0.00011050000000000643, 0.00011024999999999924, 0.00011004200000000464]</msg>
<status status="PASS" starttime="20201115 23:01:36.002" endtime="20201115 23:01:36.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.990" endtime="20201115 23:01:36.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.014" endtime="20201115 23:01:36.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.023" endtime="20201115 23:01:36.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.018" endtime="20201115 23:01:36.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.010" endtime="20201115 23:01:36.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.499" endtime="20201115 23:01:36.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.495" endtime="20201115 23:01:36.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.493" endtime="20201115 23:01:36.049"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.055" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.076" endtime="20201115 23:01:36.100"></status>
</kw>
<msg timestamp="20201115 23:01:36.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.073" endtime="20201115 23:01:36.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.103" endtime="20201115 23:01:36.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.109" endtime="20201115 23:01:36.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.066" endtime="20201115 23:01:36.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.060" endtime="20201115 23:01:36.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.134" endtime="20201115 23:01:36.469"></status>
</kw>
<msg timestamp="20201115 23:01:36.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046864083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046976069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.129" endtime="20201115 23:01:36.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046864083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046976069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.478" endtime="20201115 23:01:36.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.497" endtime="20201115 23:01:36.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.122" endtime="20201115 23:01:36.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.117" endtime="20201115 23:01:36.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.514" level="INFO">${RESULT} = [{'time': 0.046976069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011198600000000142, 'source_diff': 0.00011198600000000142}, {'time': 0.047097083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:36.505" endtime="20201115 23:01:36.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.540" level="INFO">${ACCURACY} = {'diff': [0.00011198600000000142, 0.00011186099999999782, 0.00011126399999999981, 0.00011108300000000487, 0.00011145800000000178, 0.00011195800000000228, 0.00011127799999999938, 0.00011187500000000433...</msg>
<status status="PASS" starttime="20201115 23:01:36.516" endtime="20201115 23:01:36.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.546" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.544" endtime="20201115 23:01:36.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.548" level="INFO">VALUE: [0.00011198600000000142, 0.00011186099999999782, 0.00011126399999999981, 0.00011108300000000487, 0.00011145800000000178, 0.00011195800000000228, 0.00011127799999999938, 0.00011187500000000433, 0.00011179199999999945, 0.00011141599999999613, 0.00011131900000000555, 0.00011158300000000537, 0.00011165299999999628, 0.00011159700000000494, 0.00011116700000000229, 0.00011140299999999603, 0.00011188899999999696, 0.00011182000000000553, 0.00011183399999999816, 0.00011156899999999886, 0.00011127799999999938, 0.0001110419999999987, 0.00011131899999999861, 0.00011136099999999732, 0.00011173600000000117, 0.00011112500000000358, 0.00011168100000000236, 0.00011106899999999836, 0.00011170800000000203, 0.00011179099999999997, 0.00011125000000000024, 0.00011119399999999502, 0.00011169400000000246, 0.00011145799999999484, 0.00011169499999999499, 0.00011195900000000175, 0.00011197200000000185, 0.0001119169999999961, 0.00011149999999999355, 0.00011188899999999696, 0.00011113899999999621, 0.00011145800000000178, 0.00011155599999999877, 0.00011165300000000322, 0.00011186099999999782, 0.00011134799999999723, 0.0001110969999999975, 0.00011133299999999818, 0.00011148600000000092, 0.00011194400000000271]</msg>
<status status="PASS" starttime="20201115 23:01:36.547" endtime="20201115 23:01:36.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.541" endtime="20201115 23:01:36.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.552" endtime="20201115 23:01:36.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.556" endtime="20201115 23:01:36.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.554" endtime="20201115 23:01:36.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.550" endtime="20201115 23:01:36.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.056" endtime="20201115 23:01:36.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.052" endtime="20201115 23:01:36.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.050" endtime="20201115 23:01:36.578"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.581" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.591" endtime="20201115 23:01:36.612"></status>
</kw>
<msg timestamp="20201115 23:01:36.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.589" endtime="20201115 23:01:36.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.613" endtime="20201115 23:01:36.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.617" endtime="20201115 23:01:36.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.586" endtime="20201115 23:01:36.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.583" endtime="20201115 23:01:36.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.628" endtime="20201115 23:01:36.914"></status>
</kw>
<msg timestamp="20201115 23:01:36.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027174014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027286819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.626" endtime="20201115 23:01:36.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027174014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027286819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.918" endtime="20201115 23:01:36.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.926" endtime="20201115 23:01:36.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.623" endtime="20201115 23:01:36.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.621" endtime="20201115 23:01:36.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.935" level="INFO">${RESULT} = [{'time': 0.027286819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011280500000000054, 'source_diff': 0.00011280500000000054}, {'time': 0.027403819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:36.931" endtime="20201115 23:01:36.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.948" level="INFO">${ACCURACY} = {'diff': [0.00011280500000000054, 0.00011204100000000022, 0.0001122770000000009, 0.0001125420000000002, 0.00011236099999999832, 0.00011294399999999677, 0.00011276400000000131, 0.00011298599999999895, ...</msg>
<status status="PASS" starttime="20201115 23:01:36.936" endtime="20201115 23:01:36.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.954" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.952" endtime="20201115 23:01:36.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.956" level="INFO">VALUE: [0.00011280500000000054, 0.00011204100000000022, 0.0001122770000000009, 0.0001125420000000002, 0.00011236099999999832, 0.00011294399999999677, 0.00011276400000000131, 0.00011298599999999895, 0.0001127359999999987, 0.00011301400000000156, 0.00011300000000000199, 0.00011266600000000085, 0.00011286099999999882, 0.00011280600000000002, 0.00011261099999999857, 0.00011247199999999888, 0.00011294499999999971, 0.00011208400000000188, 0.00011301399999999809, 0.00011247200000000235, 0.00011229100000000047, 0.00011212500000000111, 0.00011256899999999986, 0.00011234699999999875, 0.00011247199999999888, 0.00011222199999999863, 0.00011263900000000118, 0.00011262500000000161, 0.00011230599999999952, 0.00011277800000000088, 0.00011284699999999925, 0.00011266600000000085, 0.0001120969999999985, 0.00011229199999999995, 0.00011294499999999624, 0.00011284699999999925, 0.0001127090000000025, 0.00011230599999999952, 0.00011215299999999678, 0.00011279100000000097, 0.00011218000000000339, 0.00011229100000000047, 0.00011276400000000131, 0.00011297199999999591, 0.00011276400000000131, 0.00011294499999999624, 0.00011306900000000036, 0.00011229199999999995, 0.00011273700000000164, 0.00011216599999999688]</msg>
<status status="PASS" starttime="20201115 23:01:36.955" endtime="20201115 23:01:36.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.949" endtime="20201115 23:01:36.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.960" endtime="20201115 23:01:36.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.964" endtime="20201115 23:01:36.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.962" endtime="20201115 23:01:36.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.958" endtime="20201115 23:01:36.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.581" endtime="20201115 23:01:36.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.579" endtime="20201115 23:01:36.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.578" endtime="20201115 23:01:36.986"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.988" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.999" endtime="20201115 23:01:37.019"></status>
</kw>
<msg timestamp="20201115 23:01:37.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.998" endtime="20201115 23:01:37.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.021" endtime="20201115 23:01:37.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.024" endtime="20201115 23:01:37.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.994" endtime="20201115 23:01:37.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.991" endtime="20201115 23:01:37.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.035" endtime="20201115 23:01:37.369"></status>
</kw>
<msg timestamp="20201115 23:01:37.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027853292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027967, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:37.034" endtime="20201115 23:01:37.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027853292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027967, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:37.379" endtime="20201115 23:01:37.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.397" endtime="20201115 23:01:37.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.030" endtime="20201115 23:01:37.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.028" endtime="20201115 23:01:37.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.414" level="INFO">${RESULT} = [{'time': 0.027967, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011370799999999709, 'source_diff': 0.00011370799999999709}, {'time': 0.028083014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:37.406" endtime="20201115 23:01:37.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.447" level="INFO">${ACCURACY} = {'diff': [0.00011370799999999709, 0.00011312499999999864, 0.0001130420000000007, 0.00011313900000000168, 0.00011368000000000142, 0.00011388899999999896, 0.00011313900000000168, 0.0001139299999999982, ...</msg>
<status status="PASS" starttime="20201115 23:01:37.416" endtime="20201115 23:01:37.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.458" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.455" endtime="20201115 23:01:37.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.463" level="INFO">VALUE: [0.00011370799999999709, 0.00011312499999999864, 0.0001130420000000007, 0.00011313900000000168, 0.00011368000000000142, 0.00011388899999999896, 0.00011313900000000168, 0.0001139299999999982, 0.00011376399999999884, 0.0001139169999999981, 0.00011398599999999995, 0.00011329199999999748, 0.00011343100000000064, 0.00011351399999999859, 0.00011312499999999864, 0.00011398599999999995, 0.00011348599999999945, 0.00011333300000000018, 0.00011313900000000168, 0.00011351400000000206, 0.00011398599999999995, 0.00011388899999999896, 0.00011355600000000077, 0.00011306900000000036, 0.00011347199999999988, 0.00011366599999999838, 0.00011319400000000049, 0.00011325000000000224, 0.00011320799999999659, 0.00011381900000000111, 0.00011362499999999914, 0.00011320899999999606, 0.00011319499999999649, 0.00011317999999999745, 0.00011394399999999777, 0.00011393000000000514, 0.00011350000000000249, 0.00011370800000000403, 0.00011329200000000095, 0.0001135420000000012, 0.00011380600000000102, 0.00011329100000000147, 0.00011325000000000224, 0.00011383300000000068, 0.00011326399999999487, 0.0001135420000000012, 0.0001139169999999981, 0.0001138749999999994, 0.00011369499999999699, 0.00011319499999999649]</msg>
<status status="PASS" starttime="20201115 23:01:37.460" endtime="20201115 23:01:37.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.449" endtime="20201115 23:01:37.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.472" endtime="20201115 23:01:37.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.481" endtime="20201115 23:01:37.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.476" endtime="20201115 23:01:37.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.467" endtime="20201115 23:01:37.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.989" endtime="20201115 23:01:37.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.987" endtime="20201115 23:01:37.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.986" endtime="20201115 23:01:37.507"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.513" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.534" endtime="20201115 23:01:37.557"></status>
</kw>
<msg timestamp="20201115 23:01:37.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.531" endtime="20201115 23:01:37.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.561" endtime="20201115 23:01:37.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.567" endtime="20201115 23:01:37.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.524" endtime="20201115 23:01:37.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.518" endtime="20201115 23:01:37.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.591" endtime="20201115 23:01:37.926"></status>
</kw>
<msg timestamp="20201115 23:01:37.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046691167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046805264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.587" endtime="20201115 23:01:37.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046691167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046805264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.936" endtime="20201115 23:01:37.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.954" endtime="20201115 23:01:37.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.580" endtime="20201115 23:01:37.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.575" endtime="20201115 23:01:37.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.973" level="INFO">${RESULT} = [{'time': 0.046805264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001140970000000005, 'source_diff': 0.0001140970000000005}, {'time': 0.046924222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:37.964" endtime="20201115 23:01:37.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.003" level="INFO">${ACCURACY} = {'diff': [0.0001140970000000005, 0.00011423600000000367, 0.00011488899999999996, 0.00011476399999999637, 0.00011457000000000134, 0.00011498600000000442, 0.00011473600000000417, 0.00011494499999999824,...</msg>
<status status="PASS" starttime="20201115 23:01:37.975" endtime="20201115 23:01:38.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.014" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.011" endtime="20201115 23:01:38.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.019" level="INFO">VALUE: [0.0001140970000000005, 0.00011423600000000367, 0.00011488899999999996, 0.00011476399999999637, 0.00011457000000000134, 0.00011498600000000442, 0.00011473600000000417, 0.00011494499999999824, 0.00011483300000000168, 0.00011497199999999791, 0.00011495799999999834, 0.00011447199999999741, 0.00011481900000000211, 0.0001143749999999999, 0.00011416699999999835, 0.00011490299999999953, 0.00011462500000000014, 0.0001142629999999964, 0.00011463800000000024, 0.00011447199999999741, 0.00011426400000000281, 0.00011451399999999612, 0.00011475000000000374, 0.00011412499999999964, 0.0001143749999999999, 0.00011416700000000529, 0.00011469499999999799, 0.00011444399999999827, 0.00011404100000000222, 0.00011445799999999784, 0.00011425000000000324, 0.00011402800000000213, 0.00011475000000000374, 0.00011465299999999928, 0.0001147499999999968, 0.00011458400000000091, 0.00011420799999999759, 0.00011420799999999759, 0.00011483300000000168, 0.00011497199999999791, 0.00011476399999999637, 0.0001144169999999986, 0.00011430600000000152, 0.00011479199999999551, 0.00011420899999999706, 0.00011458300000000143, 0.00011412499999999964, 0.00011495799999999834, 0.00011404100000000222, 0.00011450000000000349]</msg>
<status status="PASS" starttime="20201115 23:01:38.016" endtime="20201115 23:01:38.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.005" endtime="20201115 23:01:38.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.029" endtime="20201115 23:01:38.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.038" endtime="20201115 23:01:38.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.034" endtime="20201115 23:01:38.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.025" endtime="20201115 23:01:38.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.514" endtime="20201115 23:01:38.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.510" endtime="20201115 23:01:38.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.508" endtime="20201115 23:01:38.065"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.070" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.092" endtime="20201115 23:01:38.115"></status>
</kw>
<msg timestamp="20201115 23:01:38.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.089" endtime="20201115 23:01:38.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.119" endtime="20201115 23:01:38.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.125" endtime="20201115 23:01:38.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.082" endtime="20201115 23:01:38.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.076" endtime="20201115 23:01:38.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.149" endtime="20201115 23:01:38.483"></status>
</kw>
<msg timestamp="20201115 23:01:38.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047293375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047408736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.145" endtime="20201115 23:01:38.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047293375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047408736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.493" endtime="20201115 23:01:38.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.511" endtime="20201115 23:01:38.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.138" endtime="20201115 23:01:38.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.134" endtime="20201115 23:01:38.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.528" level="INFO">${RESULT} = [{'time': 0.047408736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011536100000000132, 'source_diff': 0.00011536100000000132}, {'time': 0.04752975, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:38.520" endtime="20201115 23:01:38.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.558" level="INFO">${ACCURACY} = {'diff': [0.00011536100000000132, 0.00011520800000000553, 0.00011582000000000259, 0.0001150420000000027, 0.00011543099999999917, 0.00011531900000000261, 0.00011552699999999722, 0.00011591600000000063,...</msg>
<status status="PASS" starttime="20201115 23:01:38.531" endtime="20201115 23:01:38.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.569" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.567" endtime="20201115 23:01:38.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.576" level="INFO">VALUE: [0.00011536100000000132, 0.00011520800000000553, 0.00011582000000000259, 0.0001150420000000027, 0.00011543099999999917, 0.00011531900000000261, 0.00011552699999999722, 0.00011591600000000063, 0.00011595799999999934, 0.00011540300000000003, 0.00011545799999999884, 0.00011590300000000053, 0.00011545899999999831, 0.00011558400000000191, 0.00011522300000000457, 0.0001155550000000033, 0.0001158750000000014, 0.00011584700000000225, 0.00011591600000000063, 0.00011590300000000053, 0.00011587499999999445, 0.0001153750000000009, 0.00011570899999999856, 0.00011513900000000021, 0.00011572199999999866, 0.00011554099999999679, 0.00011508300000000193, 0.00011550000000000449, 0.00011576400000000431, 0.00011588900000000096, 0.00011583300000000268, 0.00011538900000000046, 0.00011601400000000456, 0.00011512500000000064, 0.00011552700000000415, 0.00011516599999999988, 0.0001158750000000014, 0.00011518099999999892, 0.00011548600000000492, 0.00011552800000000363, 0.00011590300000000053, 0.00011515299999999978, 0.00011586100000000182, 0.00011545899999999831, 0.00011506899999999542, 0.00011554100000000372, 0.00011550000000000449, 0.00011602799999999719, 0.0001152499999999973, 0.00011583299999999574]</msg>
<status status="PASS" starttime="20201115 23:01:38.572" endtime="20201115 23:01:38.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.560" endtime="20201115 23:01:38.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.585" endtime="20201115 23:01:38.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.593" endtime="20201115 23:01:38.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.589" endtime="20201115 23:01:38.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.580" endtime="20201115 23:01:38.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.072" endtime="20201115 23:01:38.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.068" endtime="20201115 23:01:38.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.066" endtime="20201115 23:01:38.620"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.625" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.647" endtime="20201115 23:01:38.670"></status>
</kw>
<msg timestamp="20201115 23:01:38.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.644" endtime="20201115 23:01:38.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.674" endtime="20201115 23:01:38.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.680" endtime="20201115 23:01:38.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.637" endtime="20201115 23:01:38.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.631" endtime="20201115 23:01:38.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.704" endtime="20201115 23:01:39.041"></status>
</kw>
<msg timestamp="20201115 23:01:39.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047400083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0475165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:38.700" endtime="20201115 23:01:39.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047400083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0475165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:39.050" endtime="20201115 23:01:39.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.069" endtime="20201115 23:01:39.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.693" endtime="20201115 23:01:39.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.688" endtime="20201115 23:01:39.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.088" level="INFO">${RESULT} = [{'time': 0.0475165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001164170000000006, 'source_diff': 0.0001164170000000006}, {'time': 0.047648514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:39.079" endtime="20201115 23:01:39.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.119" level="INFO">${ACCURACY} = {'diff': [0.0001164170000000006, 0.00011683300000000368, 0.00011634800000000223, 0.00011643100000000017, 0.00011665300000000128, 0.00011627699999999797, 0.00011616599999999394, 0.00011687499999999545,...</msg>
<status status="PASS" starttime="20201115 23:01:39.091" endtime="20201115 23:01:39.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.130" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.128" endtime="20201115 23:01:39.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.135" level="INFO">VALUE: [0.0001164170000000006, 0.00011683300000000368, 0.00011634800000000223, 0.00011643100000000017, 0.00011665300000000128, 0.00011627699999999797, 0.00011616599999999394, 0.00011687499999999545, 0.00011622199999999916, 0.00011620799999999959, 0.00011609699999999556, 0.00011633400000000266, 0.00011673599999999923, 0.0001162629999999984, 0.00011680500000000454, 0.00011656899999999693, 0.00011672199999999966, 0.00011683299999999675, 0.00011672199999999966, 0.00011643100000000017, 0.00011662500000000214, 0.00011679200000000445, 0.00011633399999999572, 0.00011661200000000205, 0.00011641600000000113, 0.00011672199999999966, 0.00011638900000000146, 0.00011684699999999631, 0.00011673599999999923, 0.00011684700000000325, 0.00011652800000000463, 0.00011665300000000128, 0.00011595899999999881, 0.00011618000000000045, 0.00011702799999999819, 0.00011670800000000009, 0.00011694500000000024, 0.00011670800000000009, 0.00011661100000000257, 0.00011658300000000343, 0.00011616700000000035, 0.00011622199999999916, 0.00011612500000000164, 0.0001160970000000025, 0.0001166249999999952, 0.00011670800000000009, 0.00011611100000000207, 0.0001161249999999947, 0.00011645900000000625, 0.00011652799999999769]</msg>
<status status="PASS" starttime="20201115 23:01:39.132" endtime="20201115 23:01:39.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.121" endtime="20201115 23:01:39.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.144" endtime="20201115 23:01:39.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.153" endtime="20201115 23:01:39.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.148" endtime="20201115 23:01:39.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.140" endtime="20201115 23:01:39.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.627" endtime="20201115 23:01:39.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.622" endtime="20201115 23:01:39.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.621" endtime="20201115 23:01:39.179"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.184" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.206" endtime="20201115 23:01:39.230"></status>
</kw>
<msg timestamp="20201115 23:01:39.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.203" endtime="20201115 23:01:39.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.233" endtime="20201115 23:01:39.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.240" endtime="20201115 23:01:39.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.195" endtime="20201115 23:01:39.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.190" endtime="20201115 23:01:39.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.263" endtime="20201115 23:01:39.600"></status>
</kw>
<msg timestamp="20201115 23:01:39.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047126056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047243278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.260" endtime="20201115 23:01:39.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047126056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047243278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.610" endtime="20201115 23:01:39.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.629" endtime="20201115 23:01:39.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.253" endtime="20201115 23:01:39.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.248" endtime="20201115 23:01:39.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.646" level="INFO">${RESULT} = [{'time': 0.047243278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011722200000000016, 'source_diff': 0.00011722200000000016}, {'time': 0.047371306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:39.637" endtime="20201115 23:01:39.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.678" level="INFO">${ACCURACY} = {'diff': [0.00011722200000000016, 0.00011784800000000373, 0.00011736199999999586, 0.00011733299999999725, 0.00011790199999999612, 0.00011765200000000281, 0.00011766599999999544, 0.00011726399999999887...</msg>
<status status="PASS" starttime="20201115 23:01:39.648" endtime="20201115 23:01:39.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.689" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.687" endtime="20201115 23:01:39.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.695" level="INFO">VALUE: [0.00011722200000000016, 0.00011784800000000373, 0.00011736199999999586, 0.00011733299999999725, 0.00011790199999999612, 0.00011765200000000281, 0.00011766599999999544, 0.00011726399999999887, 0.00011736099999999638, 0.0001177499999999998, 0.000117082999999997, 0.00011729199999999801, 0.0001172629999999994, 0.00011733299999999725, 0.00011713900000000221, 0.0001173049999999981, 0.00011736100000000332, 0.00011704199999999776, 0.00011772200000000066, 0.00011788900000000296, 0.00011751399999999912, 0.0001175550000000053, 0.00011725000000000624, 0.000117082999999997, 0.00011770800000000109, 0.00011793099999999473, 0.0001171379999999958, 0.00011731999999999715, 0.00011748599999999998, 0.00011712500000000264, 0.00011768100000000142, 0.00011719399999999408, 0.0001174300000000017, 0.00011712500000000264, 0.00011800000000000005, 0.00011744400000000127, 0.00011770800000000109, 0.00011784799999999679, 0.00011791699999999516, 0.00011719500000000049, 0.00011763899999999577, 0.0001177499999999998, 0.00011733299999999725, 0.00011704199999999776, 0.00011704199999999776, 0.0001179170000000021, 0.00011772300000000013, 0.00011715300000000178, 0.0001170699999999969, 0.00011788899999999602]</msg>
<status status="PASS" starttime="20201115 23:01:39.692" endtime="20201115 23:01:39.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.680" endtime="20201115 23:01:39.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.704" endtime="20201115 23:01:39.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.712" endtime="20201115 23:01:39.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.708" endtime="20201115 23:01:39.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.699" endtime="20201115 23:01:39.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.186" endtime="20201115 23:01:39.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.182" endtime="20201115 23:01:39.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.180" endtime="20201115 23:01:39.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.278" endtime="20201115 23:01:39.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.749" endtime="20201115 23:01:39.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.745" endtime="20201115 23:01:39.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.742" endtime="20201115 23:01:39.773"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:00:45.149" endtime="20201115 23:01:39.774" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:47.511" endtime="20201115 23:01:39.785"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:59:43.666" endtime="20201115 23:01:39.816"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
