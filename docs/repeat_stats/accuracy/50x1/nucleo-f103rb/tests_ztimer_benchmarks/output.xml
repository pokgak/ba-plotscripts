<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201117 14:46:50.744" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:46:51.972" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:46:51.988" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:46:53.878" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:46:51.969" endtime="20201117 14:46:53.880"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.885" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:46:53.882" endtime="20201117 14:46:53.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.966" endtime="20201117 14:46:53.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:53.892" endtime="20201117 14:46:54.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.889" endtime="20201117 14:46:54.223"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.252" endtime="20201117 14:46:54.274"></status>
</kw>
<msg timestamp="20201117 14:46:54.275" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.249" endtime="20201117 14:46:54.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.281" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.277" endtime="20201117 14:46:54.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.288" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:54.284" endtime="20201117 14:46:54.289"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.243" endtime="20201117 14:46:54.291"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.237" endtime="20201117 14:46:54.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.235" endtime="20201117 14:46:54.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:54.302" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:54.301" endtime="20201117 14:46:54.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.295" endtime="20201117 14:46:54.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.233" endtime="20201117 14:46:54.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.231" endtime="20201117 14:46:54.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.306" endtime="20201117 14:46:54.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.227" endtime="20201117 14:46:54.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.312" endtime="20201117 14:46:54.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.224" endtime="20201117 14:46:54.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:51.962" endtime="20201117 14:46:54.318"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:54.334" endtime="20201117 14:46:54.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.331" endtime="20201117 14:46:54.358"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.392" endtime="20201117 14:46:54.411"></status>
</kw>
<msg timestamp="20201117 14:46:54.412" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.389" endtime="20201117 14:46:54.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.414" endtime="20201117 14:46:54.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.425" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:54.421" endtime="20201117 14:46:54.426"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.382" endtime="20201117 14:46:54.427"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.375" endtime="20201117 14:46:54.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.372" endtime="20201117 14:46:54.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:54.437" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:54.436" endtime="20201117 14:46:54.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.432" endtime="20201117 14:46:54.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.370" endtime="20201117 14:46:54.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.368" endtime="20201117 14:46:54.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.441" endtime="20201117 14:46:54.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.364" endtime="20201117 14:46:54.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.359" endtime="20201117 14:46:54.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.328" endtime="20201117 14:46:54.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.466" endtime="20201117 14:46:54.480"></status>
</kw>
<msg timestamp="20201117 14:46:54.481" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.462" endtime="20201117 14:46:54.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.487" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.484" endtime="20201117 14:46:54.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.489" endtime="20201117 14:46:54.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.455" endtime="20201117 14:46:54.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.450" endtime="20201117 14:46:54.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.509" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201117 14:46:54.507" endtime="20201117 14:46:54.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.514" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201117 14:46:54.512" endtime="20201117 14:46:54.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.501" endtime="20201117 14:46:54.516"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:46:54.319" endtime="20201117 14:46:54.518" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:46:51.005" endtime="20201117 14:46:54.525"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.659" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:46:54.675" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:46:56.516" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:46:54.656" endtime="20201117 14:46:56.517"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.523" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:46:56.520" endtime="20201117 14:46:56.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.653" endtime="20201117 14:46:56.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.530" endtime="20201117 14:46:56.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.527" endtime="20201117 14:46:56.860"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.889" endtime="20201117 14:46:56.913"></status>
</kw>
<msg timestamp="20201117 14:46:56.914" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201117 14:46:56.886" endtime="20201117 14:46:56.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201117 14:46:56.916" endtime="20201117 14:46:56.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.928" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:56.923" endtime="20201117 14:46:56.928"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:56.880" endtime="20201117 14:46:56.930"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:56.874" endtime="20201117 14:46:56.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.872" endtime="20201117 14:46:56.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:56.940" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:56.939" endtime="20201117 14:46:56.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.934" endtime="20201117 14:46:56.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.870" endtime="20201117 14:46:56.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.868" endtime="20201117 14:46:56.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.946" endtime="20201117 14:46:56.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.865" endtime="20201117 14:46:56.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:56.952" endtime="20201117 14:46:56.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.862" endtime="20201117 14:46:56.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.650" endtime="20201117 14:46:56.958"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.972" endtime="20201117 14:46:56.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.968" endtime="20201117 14:46:56.995"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.029" endtime="20201117 14:46:57.048"></status>
</kw>
<msg timestamp="20201117 14:46:57.049" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.025" endtime="20201117 14:46:57.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.056" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.052" endtime="20201117 14:46:57.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.063" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:57.058" endtime="20201117 14:46:57.064"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:57.018" endtime="20201117 14:46:57.066"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:57.011" endtime="20201117 14:46:57.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.009" endtime="20201117 14:46:57.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:57.076" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:57.074" endtime="20201117 14:46:57.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.070" endtime="20201117 14:46:57.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.007" endtime="20201117 14:46:57.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.005" endtime="20201117 14:46:57.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.079" endtime="20201117 14:46:57.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.001" endtime="20201117 14:46:57.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.997" endtime="20201117 14:46:57.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.966" endtime="20201117 14:46:57.086"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.095" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.179" endtime="20201117 14:46:57.197"></status>
</kw>
<msg timestamp="20201117 14:46:57.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.176" endtime="20201117 14:46:57.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.200" endtime="20201117 14:46:57.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.206" endtime="20201117 14:46:57.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.168" endtime="20201117 14:46:57.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.101" endtime="20201117 14:46:57.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.230" endtime="20201117 14:46:57.583"></status>
</kw>
<msg timestamp="20201117 14:46:57.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.200171194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.200188542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.226" endtime="20201117 14:46:57.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.200171194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.200188542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.593" endtime="20201117 14:46:57.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.612" endtime="20201117 14:46:57.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.219" endtime="20201117 14:46:57.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.214" endtime="20201117 14:46:57.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:57.630" level="INFO">${RESULT} = [{'time': 0.200188542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7348000000000363e-05, 'source_diff': 1.7348000000000363e-05}, {'time': 0.200224542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:57.621" endtime="20201117 14:46:57.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:57.661" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:46:57.632" endtime="20201117 14:46:57.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.672" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:46:57.670" endtime="20201117 14:46:57.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.677" level="INFO">VALUE: [1.7348000000000363e-05, 1.7820000000001723e-05, 1.7652000000006884e-05, 1.740299999999917e-05, 1.8055000000016808e-05, 1.734700000000089e-05, 1.7847999999986985e-05, 1.7415999999992327e-05, 1.7749999999983057e-05, 1.811200000001456e-05, 1.813900000000035e-05, 1.806900000000944e-05, 1.811099999998733e-05, 1.7318999999987872e-05, 1.802700000000379e-05, 1.7721999999997795e-05, 1.8013999999982877e-05, 1.813900000000035e-05, 1.788899999999316e-05, 1.790299999998579e-05, 1.8014000000010633e-05, 1.788899999999316e-05, 1.7777999999996075e-05, 1.8014000000010633e-05, 1.806900000000944e-05, 1.7527999999988886e-05, 1.781900000000225e-05, 1.7431000000012187e-05, 1.7764000000003444e-05, 1.7903000000013547e-05, 1.743099999998443e-05, 1.7375000000013907e-05, 1.734700000000089e-05, 1.7653000000006358e-05, 1.7319999999987346e-05, 1.805600000001628e-05, 1.7735999999990426e-05, 1.8070000000008912e-05, 1.7583000000015447e-05, 1.7695000000012007e-05, 1.8028000000003264e-05, 1.7833999999994354e-05, 1.7263999999989066e-05, 1.747299999999008e-05, 1.745899999999745e-05, 1.7791000000016988e-05, 1.8055000000016808e-05, 1.802700000000379e-05, 1.7416000000020082e-05, 1.755500000000243e-05]</msg>
<status status="PASS" starttime="20201117 14:46:57.674" endtime="20201117 14:46:57.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.663" endtime="20201117 14:46:57.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.686" endtime="20201117 14:46:57.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.694" endtime="20201117 14:46:57.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.690" endtime="20201117 14:46:57.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.682" endtime="20201117 14:46:57.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.096" endtime="20201117 14:46:57.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.092" endtime="20201117 14:46:57.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.090" endtime="20201117 14:46:57.721"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.726" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.747" endtime="20201117 14:46:57.766"></status>
</kw>
<msg timestamp="20201117 14:46:57.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.744" endtime="20201117 14:46:57.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.769" endtime="20201117 14:46:57.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.775" endtime="20201117 14:46:57.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.737" endtime="20201117 14:46:57.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.731" endtime="20201117 14:46:57.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.798" endtime="20201117 14:46:58.154"></status>
</kw>
<msg timestamp="20201117 14:46:58.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046093986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046111236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.795" endtime="20201117 14:46:58.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046093986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046111236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.164" endtime="20201117 14:46:58.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.185" endtime="20201117 14:46:58.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.788" endtime="20201117 14:46:58.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.783" endtime="20201117 14:46:58.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.205" level="INFO">${RESULT} = [{'time': 0.046111236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7249999999996435e-05, 'source_diff': 1.7249999999996435e-05}, {'time': 0.046146181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:58.195" endtime="20201117 14:46:58.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:58.238" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:46:58.207" endtime="20201117 14:46:58.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.249" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:46:58.247" endtime="20201117 14:46:58.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.255" level="INFO">VALUE: [1.7249999999996435e-05, 1.7445000000004818e-05, 1.758299999999463e-05, 1.7542000000002334e-05, 1.765299999999942e-05, 1.730500000000218e-05, 1.7750000000003874e-05, 1.731899999999481e-05, 1.8042000000002834e-05, 1.762500000000028e-05, 1.730500000000218e-05, 1.7722000000004734e-05, 1.7514000000003194e-05, 1.8222000000005234e-05, 1.736100000000046e-05, 1.762500000000028e-05, 1.7527999999995825e-05, 1.73889999999996e-05, 1.737500000000003e-05, 1.8042000000002834e-05, 1.7528000000002764e-05, 1.786100000000096e-05, 1.8027999999996325e-05, 1.7736000000004304e-05, 1.762500000000028e-05, 1.787500000000053e-05, 1.82089999999982e-05, 1.75969999999942e-05, 1.7736000000004304e-05, 1.8084000000001543e-05, 1.822299999999777e-05, 1.8042000000002834e-05, 1.7971999999998045e-05, 1.7722000000004734e-05, 1.8028000000003264e-05, 1.7651999999999946e-05, 1.7334000000000793e-05, 1.7862000000000433e-05, 1.8112000000000683e-05, 1.7736000000004304e-05, 1.7514000000003194e-05, 1.7749999999996935e-05, 1.7916000000006704e-05, 1.805499999999599e-05, 1.762500000000028e-05, 1.8235999999997865e-05, 1.781900000000225e-05, 1.7665999999999515e-05, 1.758300000000157e-05, 1.787500000000053e-05]</msg>
<status status="PASS" starttime="20201117 14:46:58.252" endtime="20201117 14:46:58.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.240" endtime="20201117 14:46:58.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.264" endtime="20201117 14:46:58.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:58.273" endtime="20201117 14:46:58.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.269" endtime="20201117 14:46:58.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.260" endtime="20201117 14:46:58.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.727" endtime="20201117 14:46:58.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.723" endtime="20201117 14:46:58.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.722" endtime="20201117 14:46:58.301"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.306" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.330" endtime="20201117 14:46:58.348"></status>
</kw>
<msg timestamp="20201117 14:46:58.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.326" endtime="20201117 14:46:58.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.352" endtime="20201117 14:46:58.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.359" endtime="20201117 14:46:58.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.318" endtime="20201117 14:46:58.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.312" endtime="20201117 14:46:58.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.384" endtime="20201117 14:46:58.722"></status>
</kw>
<msg timestamp="20201117 14:46:58.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049737458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049755208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.381" endtime="20201117 14:46:58.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049737458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049755208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.727" endtime="20201117 14:46:58.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.736" endtime="20201117 14:46:58.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.373" endtime="20201117 14:46:58.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.368" endtime="20201117 14:46:58.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.744" level="INFO">${RESULT} = [{'time': 0.049755208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7750000000003874e-05, 'source_diff': 1.7750000000003874e-05}, {'time': 0.049790208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:58.740" endtime="20201117 14:46:58.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:58.758" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:46:58.745" endtime="20201117 14:46:58.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.764" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:46:58.763" endtime="20201117 14:46:58.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.766" level="INFO">VALUE: [1.7750000000003874e-05, 1.808300000000207e-05, 1.736100000000046e-05, 1.7569000000002e-05, 1.804100000000336e-05, 1.765299999999942e-05, 1.8235999999997865e-05, 1.781900000000225e-05, 1.8013999999996755e-05, 1.811100000000121e-05, 1.7556000000001903e-05, 1.744499999999788e-05, 1.7542000000002334e-05, 1.7999999999997185e-05, 1.808300000000207e-05, 1.7778000000003014e-05, 1.8264000000003944e-05, 1.8056000000002403e-05, 1.7486000000004054e-05, 1.786100000000096e-05, 1.745899999999745e-05, 1.7471999999997545e-05, 1.7305999999994714e-05, 1.73889999999996e-05, 1.7999999999997185e-05, 1.7736000000004304e-05, 1.8013999999996755e-05, 1.787500000000053e-05, 1.8235999999997865e-05, 1.812500000000078e-05, 1.7459000000004388e-05, 1.8179999999999585e-05, 1.7471999999997545e-05, 1.7429999999998835e-05, 1.781900000000225e-05, 1.8278000000003514e-05, 1.733300000000132e-05, 1.808299999999513e-05, 1.802699999999685e-05, 1.8222000000005234e-05, 1.727700000000304e-05, 1.784700000000139e-05, 1.8014000000003694e-05, 1.733300000000132e-05, 1.755499999999549e-05, 1.8249999999997435e-05, 1.7263999999996005e-05, 1.795899999999795e-05, 1.7292000000002083e-05, 1.734700000000089e-05]</msg>
<status status="PASS" starttime="20201117 14:46:58.765" endtime="20201117 14:46:58.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.759" endtime="20201117 14:46:58.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.771" endtime="20201117 14:46:58.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:58.775" endtime="20201117 14:46:58.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.773" endtime="20201117 14:46:58.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.768" endtime="20201117 14:46:58.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.308" endtime="20201117 14:46:58.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.303" endtime="20201117 14:46:58.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.302" endtime="20201117 14:46:58.797"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.799" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.810" endtime="20201117 14:46:58.826"></status>
</kw>
<msg timestamp="20201117 14:46:58.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.808" endtime="20201117 14:46:58.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.828" endtime="20201117 14:46:58.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.831" endtime="20201117 14:46:58.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.805" endtime="20201117 14:46:58.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.802" endtime="20201117 14:46:58.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.843" endtime="20201117 14:46:59.186"></status>
</kw>
<msg timestamp="20201117 14:46:59.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027635306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027652708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.841" endtime="20201117 14:46:59.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027635306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027652708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.197" endtime="20201117 14:46:59.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.217" endtime="20201117 14:46:59.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.837" endtime="20201117 14:46:59.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.835" endtime="20201117 14:46:59.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:59.236" level="INFO">${RESULT} = [{'time': 0.027652708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7402000000003165e-05, 'source_diff': 1.7402000000003165e-05}, {'time': 0.02768475, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:46:59.226" endtime="20201117 14:46:59.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.270" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:46:59.238" endtime="20201117 14:46:59.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.282" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.280" endtime="20201117 14:46:59.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.288" level="INFO">VALUE: [1.7402000000003165e-05, 1.740300000000264e-05, 1.808300000000207e-05, 1.730499999999871e-05, 1.729099999999914e-05, 1.7444000000001875e-05, 1.7915999999999765e-05, 1.756899999999853e-05, 1.804099999999989e-05, 1.813900000000035e-05, 1.816699999999949e-05, 1.7499999999996685e-05, 1.786099999999749e-05, 1.811099999999774e-05, 1.734700000000089e-05, 1.808300000000207e-05, 1.812500000000078e-05, 1.8027999999999794e-05, 1.809699999999817e-05, 1.768099999999856e-05, 1.769499999999813e-05, 1.78890000000001e-05, 1.8237000000000808e-05, 1.813900000000035e-05, 1.8000000000000654e-05, 1.793099999999881e-05, 1.7763999999999974e-05, 1.7542000000002334e-05, 1.7665999999999515e-05, 1.762500000000028e-05, 1.8041999999999364e-05, 1.7459000000000918e-05, 1.7487000000000058e-05, 1.777700000000007e-05, 1.7665999999999515e-05, 1.754099999999939e-05, 1.8000000000000654e-05, 1.812500000000078e-05, 1.756899999999853e-05, 1.729100000000261e-05, 1.786100000000096e-05, 1.730499999999871e-05, 1.736100000000046e-05, 1.7986000000001084e-05, 1.8278000000000044e-05, 1.815299999999992e-05, 1.808300000000207e-05, 1.758300000000157e-05, 1.7500000000000154e-05, 1.741700000000221e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.284" endtime="20201117 14:46:59.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.272" endtime="20201117 14:46:59.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.297" endtime="20201117 14:46:59.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.306" endtime="20201117 14:46:59.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.301" endtime="20201117 14:46:59.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.292" endtime="20201117 14:46:59.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.800" endtime="20201117 14:46:59.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.798" endtime="20201117 14:46:59.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.797" endtime="20201117 14:46:59.333"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.341" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.364" endtime="20201117 14:46:59.383"></status>
</kw>
<msg timestamp="20201117 14:46:59.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.360" endtime="20201117 14:46:59.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.386" endtime="20201117 14:46:59.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.393" endtime="20201117 14:46:59.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.352" endtime="20201117 14:46:59.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.346" endtime="20201117 14:46:59.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.418" endtime="20201117 14:46:59.779"></status>
</kw>
<msg timestamp="20201117 14:46:59.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051457292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051474958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.414" endtime="20201117 14:46:59.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051457292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051474958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.789" endtime="20201117 14:46:59.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.809" endtime="20201117 14:46:59.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.407" endtime="20201117 14:46:59.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.402" endtime="20201117 14:46:59.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:59.829" level="INFO">${RESULT} = [{'time': 0.051474958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7665999999999515e-05, 'source_diff': 1.7665999999999515e-05}, {'time': 0.051503944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:59.820" endtime="20201117 14:46:59.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.862" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:46:59.832" endtime="20201117 14:46:59.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.873" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.871" endtime="20201117 14:46:59.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.879" level="INFO">VALUE: [1.7665999999999515e-05, 1.7665999999999515e-05, 1.736100000000046e-05, 1.7235999999996865e-05, 1.8235999999997865e-05, 1.7902000000000196e-05, 1.7693999999998655e-05, 1.7693999999998655e-05, 1.7764000000003444e-05, 1.755499999999549e-05, 1.7777999999996075e-05, 1.7749999999996935e-05, 1.811100000000121e-05, 1.7985999999997615e-05, 1.816699999999949e-05, 1.73889999999996e-05, 1.8013999999996755e-05, 1.806899999999556e-05, 1.78890000000001e-05, 1.794499999999838e-05, 1.7749999999996935e-05, 1.784700000000139e-05, 1.811100000000121e-05, 1.7473000000003958e-05, 1.7471999999997545e-05, 1.7931000000005748e-05, 1.762499999999334e-05, 1.7542000000002334e-05, 1.7971999999998045e-05, 1.7584000000001043e-05, 1.8042000000002834e-05, 1.7778000000003014e-05, 1.809700000000164e-05, 1.7598000000000613e-05, 1.790299999999967e-05, 1.779099999999617e-05, 1.802700000000379e-05, 1.806899999999556e-05, 1.784700000000139e-05, 1.8042000000002834e-05, 1.7915999999999765e-05, 1.7514000000003194e-05, 1.7429999999998835e-05, 1.7750000000003874e-05, 1.7653000000006358e-05, 1.756899999999506e-05, 1.7417000000005678e-05, 1.7958000000005414e-05, 1.8028000000003264e-05, 1.7264000000002944e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.876" endtime="20201117 14:46:59.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.864" endtime="20201117 14:46:59.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.889" endtime="20201117 14:46:59.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.898" endtime="20201117 14:46:59.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.894" endtime="20201117 14:46:59.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.884" endtime="20201117 14:46:59.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.342" endtime="20201117 14:46:59.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.336" endtime="20201117 14:46:59.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.334" endtime="20201117 14:46:59.926"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.931" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.955" endtime="20201117 14:46:59.973"></status>
</kw>
<msg timestamp="20201117 14:46:59.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.951" endtime="20201117 14:46:59.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.977" endtime="20201117 14:46:59.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.983" endtime="20201117 14:46:59.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.943" endtime="20201117 14:46:59.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.937" endtime="20201117 14:46:59.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.009" endtime="20201117 14:47:00.373"></status>
</kw>
<msg timestamp="20201117 14:47:00.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049301569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049319806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.005" endtime="20201117 14:47:00.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049301569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049319806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.383" endtime="20201117 14:47:00.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.403" endtime="20201117 14:47:00.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.997" endtime="20201117 14:47:00.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.992" endtime="20201117 14:47:00.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:00.422" level="INFO">${RESULT} = [{'time': 0.049319806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.823699999999734e-05, 'source_diff': 1.823699999999734e-05}, {'time': 0.049346806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:00.412" endtime="20201117 14:47:00.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:00.455" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:00.424" endtime="20201117 14:47:00.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.466" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:47:00.464" endtime="20201117 14:47:00.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.472" level="INFO">VALUE: [1.823699999999734e-05, 1.7348000000000363e-05, 1.726300000000347e-05, 1.731900000000175e-05, 1.7569000000002e-05, 1.783299999999488e-05, 1.7943999999998905e-05, 1.7430000000005774e-05, 1.812500000000078e-05, 1.7569000000002e-05, 1.7485999999997115e-05, 1.8166000000000015e-05, 1.7971999999998045e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.7334000000000793e-05, 1.763899999999985e-05, 1.7805999999995215e-05, 1.7292000000002083e-05, 1.7320000000001223e-05, 1.7277999999995575e-05, 1.7763999999996505e-05, 1.787500000000053e-05, 1.793099999999881e-05, 1.8042000000002834e-05, 1.741699999999874e-05, 1.7348000000000363e-05, 1.7764000000003444e-05, 1.7959000000004888e-05, 1.7570000000001473e-05, 1.8223000000004708e-05, 1.8207999999998725e-05, 1.82089999999982e-05, 1.7541999999995395e-05, 1.769499999999813e-05, 1.80690000000025e-05, 1.7820000000001723e-05, 1.787500000000053e-05, 1.7749999999996935e-05, 1.7235999999996865e-05, 1.737500000000003e-05, 1.765299999999942e-05, 1.783300000000182e-05, 1.755499999999549e-05, 1.731899999999481e-05, 1.7569000000002e-05, 1.783300000000182e-05, 1.805500000000293e-05, 1.7791999999995645e-05, 1.783300000000182e-05]</msg>
<status status="PASS" starttime="20201117 14:47:00.469" endtime="20201117 14:47:00.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.457" endtime="20201117 14:47:00.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.482" endtime="20201117 14:47:00.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:00.491" endtime="20201117 14:47:00.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.486" endtime="20201117 14:47:00.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.477" endtime="20201117 14:47:00.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.933" endtime="20201117 14:47:00.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.929" endtime="20201117 14:47:00.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.927" endtime="20201117 14:47:00.518"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.524" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.547" endtime="20201117 14:47:00.566"></status>
</kw>
<msg timestamp="20201117 14:47:00.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.544" endtime="20201117 14:47:00.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.569" endtime="20201117 14:47:00.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.576" endtime="20201117 14:47:00.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.536" endtime="20201117 14:47:00.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.530" endtime="20201117 14:47:00.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.601" endtime="20201117 14:47:00.964"></status>
</kw>
<msg timestamp="20201117 14:47:00.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049570306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049588542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.597" endtime="20201117 14:47:00.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049570306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049588542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.974" endtime="20201117 14:47:00.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.994" endtime="20201117 14:47:00.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.590" endtime="20201117 14:47:01.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.585" endtime="20201117 14:47:01.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.014" level="INFO">${RESULT} = [{'time': 0.049588542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8235999999997865e-05, 'source_diff': 1.8235999999997865e-05}, {'time': 0.049627528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:01.005" endtime="20201117 14:47:01.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.047" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:01.016" endtime="20201117 14:47:01.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.059" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.056" endtime="20201117 14:47:01.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.065" level="INFO">VALUE: [1.8235999999997865e-05, 1.787500000000053e-05, 1.734700000000089e-05, 1.8084000000001543e-05, 1.7651999999999946e-05, 1.7584000000001043e-05, 1.73889999999996e-05, 1.766699999999899e-05, 1.787500000000053e-05, 1.7513999999996255e-05, 1.8084000000001543e-05, 1.7541999999995395e-05, 1.7320000000001223e-05, 1.8237000000004278e-05, 1.7556000000001903e-05, 1.745899999999745e-05, 1.7764000000003444e-05, 1.8166000000000015e-05, 1.7957999999998475e-05, 1.783300000000182e-05, 1.80969999999947e-05, 1.8166000000000015e-05, 1.804100000000336e-05, 1.8000000000004124e-05, 1.7429999999998835e-05, 1.7429999999998835e-05, 1.7944000000005844e-05, 1.7806000000002153e-05, 1.766699999999899e-05, 1.813900000000035e-05, 1.7708000000005164e-05, 1.815299999999992e-05, 1.7957999999998475e-05, 1.7542000000002334e-05, 1.8027999999996325e-05, 1.7722000000004734e-05, 1.8291999999996145e-05, 1.7834000000001293e-05, 1.763899999999985e-05, 1.762500000000028e-05, 1.762500000000028e-05, 1.7806000000002153e-05, 1.7514000000003194e-05, 1.7291999999995145e-05, 1.7556000000001903e-05, 1.7638000000000376e-05, 1.7306000000001653e-05, 1.7528000000002764e-05, 1.787500000000053e-05, 1.783300000000182e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.061" endtime="20201117 14:47:01.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.049" endtime="20201117 14:47:01.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.075" endtime="20201117 14:47:01.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.083" endtime="20201117 14:47:01.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.079" endtime="20201117 14:47:01.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.070" endtime="20201117 14:47:01.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.526" endtime="20201117 14:47:01.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.521" endtime="20201117 14:47:01.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.519" endtime="20201117 14:47:01.111"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.116" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.139" endtime="20201117 14:47:01.159"></status>
</kw>
<msg timestamp="20201117 14:47:01.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.136" endtime="20201117 14:47:01.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.162" endtime="20201117 14:47:01.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.169" endtime="20201117 14:47:01.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.128" endtime="20201117 14:47:01.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.122" endtime="20201117 14:47:01.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.196" endtime="20201117 14:47:01.577"></status>
</kw>
<msg timestamp="20201117 14:47:01.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049345931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049363764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.192" endtime="20201117 14:47:01.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049345931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049363764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.587" endtime="20201117 14:47:01.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.607" endtime="20201117 14:47:01.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.184" endtime="20201117 14:47:01.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.179" endtime="20201117 14:47:01.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.626" level="INFO">${RESULT} = [{'time': 0.049363764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.783299999999488e-05, 'source_diff': 1.783299999999488e-05}, {'time': 0.049394764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:01.616" endtime="20201117 14:47:01.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.662" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:01.629" endtime="20201117 14:47:01.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.673" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.671" endtime="20201117 14:47:01.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.679" level="INFO">VALUE: [1.783299999999488e-05, 1.8028000000003264e-05, 1.7763999999996505e-05, 1.7917000000006178e-05, 1.8235999999997865e-05, 1.802700000000379e-05, 1.743099999999831e-05, 1.78890000000001e-05, 1.7278000000002514e-05, 1.784700000000139e-05, 1.7792000000002584e-05, 1.736100000000046e-05, 1.784700000000139e-05, 1.8084000000001543e-05, 1.7471999999997545e-05, 1.7763999999996505e-05, 1.7277999999995575e-05, 1.768099999999856e-05, 1.7848000000000863e-05, 1.808300000000207e-05, 1.740299999999917e-05, 1.794499999999838e-05, 1.7429999999998835e-05, 1.7570000000001473e-05, 1.729099999999567e-05, 1.783299999999488e-05, 1.7985999999997615e-05, 1.784700000000139e-05, 1.7443999999998405e-05, 1.7486000000004054e-05, 1.780500000000268e-05, 1.7263999999996005e-05, 1.7443999999998405e-05, 1.791699999999924e-05, 1.811100000000121e-05, 1.736100000000046e-05, 1.736100000000046e-05, 1.737500000000003e-05, 1.783300000000182e-05, 1.7930000000006274e-05, 1.826300000000447e-05, 1.7306000000001653e-05, 1.762500000000028e-05, 1.808299999999513e-05, 1.7292000000002083e-05, 1.7471999999997545e-05, 1.7792000000002584e-05, 1.755499999999549e-05, 1.813900000000035e-05, 1.7736000000004304e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.676" endtime="20201117 14:47:01.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.664" endtime="20201117 14:47:01.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.689" endtime="20201117 14:47:01.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.698" endtime="20201117 14:47:01.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.693" endtime="20201117 14:47:01.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.684" endtime="20201117 14:47:01.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.118" endtime="20201117 14:47:01.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.113" endtime="20201117 14:47:01.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.112" endtime="20201117 14:47:01.725"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.731" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.754" endtime="20201117 14:47:01.773"></status>
</kw>
<msg timestamp="20201117 14:47:01.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.750" endtime="20201117 14:47:01.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.777" endtime="20201117 14:47:01.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.784" endtime="20201117 14:47:01.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.742" endtime="20201117 14:47:01.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.736" endtime="20201117 14:47:01.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.808" endtime="20201117 14:47:02.172"></status>
</kw>
<msg timestamp="20201117 14:47:02.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049501458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049519486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.805" endtime="20201117 14:47:02.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049501458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049519486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.176" endtime="20201117 14:47:02.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.185" endtime="20201117 14:47:02.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.797" endtime="20201117 14:47:02.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.792" endtime="20201117 14:47:02.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.195" level="INFO">${RESULT} = [{'time': 0.049519486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8028000000003264e-05, 'source_diff': 1.8028000000003264e-05}, {'time': 0.049545486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:02.190" endtime="20201117 14:47:02.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.209" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:02.196" endtime="20201117 14:47:02.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.215" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.214" endtime="20201117 14:47:02.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.217" level="INFO">VALUE: [1.8028000000003264e-05, 1.7985999999997615e-05, 1.7945000000005318e-05, 1.7693999999998655e-05, 1.73889999999996e-05, 1.7695000000005068e-05, 1.744499999999788e-05, 1.7778000000003014e-05, 1.7735999999997365e-05, 1.7806000000002153e-05, 1.733300000000132e-05, 1.7471999999997545e-05, 1.7333999999993854e-05, 1.793099999999881e-05, 1.8235999999997865e-05, 1.8084000000001543e-05, 1.7973000000004458e-05, 1.793099999999881e-05, 1.780500000000268e-05, 1.747299999999702e-05, 1.78890000000001e-05, 1.812500000000078e-05, 1.736100000000046e-05, 1.8166000000000015e-05, 1.812500000000078e-05, 1.7763999999996505e-05, 1.7679999999999085e-05, 1.7971999999998045e-05, 1.729100000000261e-05, 1.77769999999966e-05, 1.793099999999881e-05, 1.813900000000035e-05, 1.797299999999752e-05, 1.8014000000003694e-05, 1.7471999999997545e-05, 1.7292000000002083e-05, 1.7721999999997795e-05, 1.731899999999481e-05, 1.7764000000003444e-05, 1.790299999999967e-05, 1.734700000000089e-05, 1.7513999999996255e-05, 1.7500000000003624e-05, 1.7957999999998475e-05, 1.7277999999995575e-05, 1.7707999999998225e-05, 1.8084000000001543e-05, 1.7514000000003194e-05, 1.815299999999992e-05, 1.809700000000164e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.216" endtime="20201117 14:47:02.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.210" endtime="20201117 14:47:02.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.222" endtime="20201117 14:47:02.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.226" endtime="20201117 14:47:02.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.224" endtime="20201117 14:47:02.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.219" endtime="20201117 14:47:02.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.732" endtime="20201117 14:47:02.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.728" endtime="20201117 14:47:02.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.726" endtime="20201117 14:47:02.248"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.250" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.261" endtime="20201117 14:47:02.278"></status>
</kw>
<msg timestamp="20201117 14:47:02.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.259" endtime="20201117 14:47:02.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.282" endtime="20201117 14:47:02.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.288" endtime="20201117 14:47:02.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.256" endtime="20201117 14:47:02.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.253" endtime="20201117 14:47:02.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.315" endtime="20201117 14:47:02.677"></status>
</kw>
<msg timestamp="20201117 14:47:02.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027459417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027477681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.310" endtime="20201117 14:47:02.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027459417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027477681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.688" endtime="20201117 14:47:02.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.708" endtime="20201117 14:47:02.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.302" endtime="20201117 14:47:02.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.297" endtime="20201117 14:47:02.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.727" level="INFO">${RESULT} = [{'time': 0.027477681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8264000000000474e-05, 'source_diff': 1.8264000000000474e-05}, {'time': 0.027505694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:02.717" endtime="20201117 14:47:02.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.759" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:02.729" endtime="20201117 14:47:02.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.771" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.768" endtime="20201117 14:47:02.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.777" level="INFO">VALUE: [1.8264000000000474e-05, 1.811100000000121e-05, 1.7541999999998864e-05, 1.744499999999788e-05, 1.8235999999997865e-05, 1.752699999999982e-05, 1.787500000000053e-05, 1.806899999999903e-05, 1.80829999999986e-05, 1.7763999999999974e-05, 1.791700000000271e-05, 1.779099999999964e-05, 1.7443999999998405e-05, 1.761100000000071e-05, 1.80829999999986e-05, 1.7971999999998045e-05, 1.8041999999999364e-05, 1.806899999999903e-05, 1.7708000000001695e-05, 1.7471999999997545e-05, 1.8221999999998295e-05, 1.733299999999785e-05, 1.8250000000000904e-05, 1.816699999999949e-05, 1.783299999999835e-05, 1.763899999999985e-05, 1.8084000000001543e-05, 1.790299999999967e-05, 1.7513999999999724e-05, 1.741699999999874e-05, 1.7584000000001043e-05, 1.765299999999942e-05, 1.7500000000000154e-05, 1.7263999999999474e-05, 1.786100000000096e-05, 1.7819999999998254e-05, 1.736100000000046e-05, 1.745899999999745e-05, 1.8070000000001973e-05, 1.727699999999957e-05, 1.8221999999998295e-05, 1.8250000000000904e-05, 1.805499999999946e-05, 1.802700000000032e-05, 1.7986000000001084e-05, 1.7513999999999724e-05, 1.8000000000000654e-05, 1.7665999999999515e-05, 1.731899999999828e-05, 1.7750000000000404e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.773" endtime="20201117 14:47:02.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.761" endtime="20201117 14:47:02.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.786" endtime="20201117 14:47:02.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.795" endtime="20201117 14:47:02.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.790" endtime="20201117 14:47:02.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.781" endtime="20201117 14:47:02.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.251" endtime="20201117 14:47:02.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.249" endtime="20201117 14:47:02.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.248" endtime="20201117 14:47:02.822"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.828" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.851" endtime="20201117 14:47:02.870"></status>
</kw>
<msg timestamp="20201117 14:47:02.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.847" endtime="20201117 14:47:02.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.874" endtime="20201117 14:47:02.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.881" endtime="20201117 14:47:02.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.840" endtime="20201117 14:47:02.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.833" endtime="20201117 14:47:02.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.906" endtime="20201117 14:47:03.269"></status>
</kw>
<msg timestamp="20201117 14:47:03.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049181861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049200917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.903" endtime="20201117 14:47:03.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049181861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049200917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.279" endtime="20201117 14:47:03.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.299" endtime="20201117 14:47:03.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.895" endtime="20201117 14:47:03.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.890" endtime="20201117 14:47:03.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.320" level="INFO">${RESULT} = [{'time': 0.049200917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9055999999996465e-05, 'source_diff': 1.9055999999996465e-05}, {'time': 0.049238917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:03.310" endtime="20201117 14:47:03.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.353" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:03.322" endtime="20201117 14:47:03.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.365" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.362" endtime="20201117 14:47:03.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.370" level="INFO">VALUE: [1.9055999999996465e-05, 1.872299999999827e-05, 1.869499999999913e-05, 1.8514000000004194e-05, 1.8959000000005888e-05, 1.9166000000001016e-05, 1.862500000000128e-05, 1.859700000000214e-05, 1.831900000000275e-05, 1.836100000000146e-05, 1.880499999999674e-05, 1.8680000000000085e-05, 1.915300000000092e-05, 1.880499999999674e-05, 1.8402000000000696e-05, 1.843099999999931e-05, 1.9070000000002973e-05, 1.9235999999998865e-05, 1.834700000000189e-05, 1.833300000000232e-05, 1.8556000000002904e-05, 1.905499999999699e-05, 1.8777999999997075e-05, 1.8764000000004444e-05, 1.884699999999545e-05, 1.909700000000264e-05, 1.859700000000214e-05, 1.8555999999995965e-05, 1.883300000000282e-05, 1.865299999999348e-05, 1.9221999999999295e-05, 1.9013999999997755e-05, 1.859700000000214e-05, 1.8806000000003154e-05, 1.886099999999502e-05, 1.8999999999998185e-05, 1.9013999999997755e-05, 1.8584000000002043e-05, 1.886099999999502e-05, 1.8305999999995715e-05, 1.9027999999997325e-05, 1.9221999999999295e-05, 1.8708000000006164e-05, 1.840300000000017e-05, 1.8707999999999225e-05, 1.827700000000404e-05, 1.8429999999999835e-05, 1.9207999999999725e-05, 1.9194000000000155e-05, 1.8999999999998185e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.367" endtime="20201117 14:47:03.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.355" endtime="20201117 14:47:03.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.380" endtime="20201117 14:47:03.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.389" endtime="20201117 14:47:03.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.384" endtime="20201117 14:47:03.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.375" endtime="20201117 14:47:03.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.829" endtime="20201117 14:47:03.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.825" endtime="20201117 14:47:03.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.823" endtime="20201117 14:47:03.416"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.422" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.445" endtime="20201117 14:47:03.466"></status>
</kw>
<msg timestamp="20201117 14:47:03.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.442" endtime="20201117 14:47:03.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.469" endtime="20201117 14:47:03.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.476" endtime="20201117 14:47:03.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.434" endtime="20201117 14:47:03.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.427" endtime="20201117 14:47:03.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.502" endtime="20201117 14:47:03.868"></status>
</kw>
<msg timestamp="20201117 14:47:03.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050457403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050477125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.498" endtime="20201117 14:47:03.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050457403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050477125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.878" endtime="20201117 14:47:03.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.898" endtime="20201117 14:47:03.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.490" endtime="20201117 14:47:03.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.485" endtime="20201117 14:47:03.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.917" level="INFO">${RESULT} = [{'time': 0.050477125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9721999999999795e-05, 'source_diff': 1.9721999999999795e-05}, {'time': 0.050514125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:03.907" endtime="20201117 14:47:03.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.952" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:03.919" endtime="20201117 14:47:03.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.964" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.961" endtime="20201117 14:47:03.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.970" level="INFO">VALUE: [1.9721999999999795e-05, 2.0222000000000295e-05, 2.0056000000004404e-05, 2.018100000000106e-05, 1.962500000000228e-05, 2.00969999999967e-05, 1.988899999999516e-05, 1.9721999999999795e-05, 2.018100000000106e-05, 1.994499999999344e-05, 1.9570000000003474e-05, 1.9750000000005874e-05, 1.945899999999945e-05, 1.9319999999996285e-05, 1.9721999999999795e-05, 2.02090000000002e-05, 2.0069999999997035e-05, 2.0208000000000725e-05, 1.973699999999884e-05, 1.95969999999962e-05, 1.979099999999817e-05, 1.9680000000001086e-05, 1.9972000000000045e-05, 1.9485999999999115e-05, 2.008300000000407e-05, 1.9430000000000835e-05, 1.930499999999724e-05, 1.9402000000001696e-05, 2.011099999999627e-05, 1.990300000000167e-05, 1.9708000000000225e-05, 1.9944000000000905e-05, 1.9542000000004334e-05, 1.938899999999466e-05, 2.0235999999999865e-05, 1.986099999999602e-05, 2.006899999999756e-05, 2.001299999999928e-05, 1.940299999999423e-05, 2.016700000000149e-05, 1.9777999999998075e-05, 2.0027999999998325e-05, 1.9499999999998685e-05, 1.941700000000074e-05, 2.011100000000321e-05, 2.0249999999999435e-05, 1.965299999999448e-05, 2.0069999999997035e-05, 1.9819999999996785e-05, 2.0070000000003974e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.966" endtime="20201117 14:47:03.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.954" endtime="20201117 14:47:03.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.979" endtime="20201117 14:47:03.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.989" endtime="20201117 14:47:04.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.983" endtime="20201117 14:47:04.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.974" endtime="20201117 14:47:04.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.423" endtime="20201117 14:47:04.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.419" endtime="20201117 14:47:04.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.417" endtime="20201117 14:47:04.016"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.022" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.045" endtime="20201117 14:47:04.064"></status>
</kw>
<msg timestamp="20201117 14:47:04.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.041" endtime="20201117 14:47:04.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.068" endtime="20201117 14:47:04.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.074" endtime="20201117 14:47:04.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.034" endtime="20201117 14:47:04.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.027" endtime="20201117 14:47:04.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.099" endtime="20201117 14:47:04.463"></status>
</kw>
<msg timestamp="20201117 14:47:04.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049779347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049800542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.096" endtime="20201117 14:47:04.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049779347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049800542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.473" endtime="20201117 14:47:04.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.493" endtime="20201117 14:47:04.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.088" endtime="20201117 14:47:04.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.083" endtime="20201117 14:47:04.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:04.513" level="INFO">${RESULT} = [{'time': 0.049800542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.119500000000163e-05, 'source_diff': 2.119500000000163e-05}, {'time': 0.049830611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:04.504" endtime="20201117 14:47:04.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:04.546" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:04.516" endtime="20201117 14:47:04.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.558" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:47:04.555" endtime="20201117 14:47:04.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.564" level="INFO">VALUE: [2.119500000000163e-05, 2.063899999999591e-05, 2.1180000000002586e-05, 2.115300000000292e-05, 2.113899999999641e-05, 2.0737000000006778e-05, 2.044500000000088e-05, 2.079099999999917e-05, 2.113900000000335e-05, 2.083299999999788e-05, 2.0513999999999255e-05, 2.10969999999977e-05, 2.08890000000031e-05, 2.0735999999993426e-05, 2.1250000000000435e-05, 2.1041999999998895e-05, 2.0777999999999075e-05, 2.0972000000001045e-05, 2.086100000000396e-05, 2.113900000000335e-05, 2.1250000000000435e-05, 2.058299999999763e-05, 2.066700000000199e-05, 2.0555999999997965e-05, 2.102699999999985e-05, 2.065300000000242e-05, 2.0527999999998825e-05, 2.094500000000138e-05, 2.0736000000000365e-05, 2.118100000000206e-05, 2.069500000000113e-05, 2.062500000000328e-05, 2.119500000000163e-05, 2.062499999999634e-05, 2.07769999999996e-05, 2.061100000000371e-05, 2.0986000000000615e-05, 2.115300000000292e-05, 2.0736000000000365e-05, 2.1236000000000865e-05, 2.094500000000138e-05, 2.1222000000001295e-05, 2.1165999999996077e-05, 2.1152000000003446e-05, 2.087499999999659e-05, 2.088899999999616e-05, 2.030499999999824e-05, 2.0652000000002946e-05, 2.116699999999555e-05, 2.0986000000000615e-05]</msg>
<status status="PASS" starttime="20201117 14:47:04.560" endtime="20201117 14:47:04.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.548" endtime="20201117 14:47:04.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.580" endtime="20201117 14:47:04.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:04.589" endtime="20201117 14:47:04.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.584" endtime="20201117 14:47:04.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.575" endtime="20201117 14:47:04.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.023" endtime="20201117 14:47:04.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.019" endtime="20201117 14:47:04.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.017" endtime="20201117 14:47:04.616"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.622" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.645" endtime="20201117 14:47:04.664"></status>
</kw>
<msg timestamp="20201117 14:47:04.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.641" endtime="20201117 14:47:04.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.667" endtime="20201117 14:47:04.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.674" endtime="20201117 14:47:04.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.633" endtime="20201117 14:47:04.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.627" endtime="20201117 14:47:04.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.699" endtime="20201117 14:47:05.064"></status>
</kw>
<msg timestamp="20201117 14:47:05.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049531792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049553944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.695" endtime="20201117 14:47:05.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049531792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049553944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.074" endtime="20201117 14:47:05.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.094" endtime="20201117 14:47:05.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.688" endtime="20201117 14:47:05.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.683" endtime="20201117 14:47:05.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.113" level="INFO">${RESULT} = [{'time': 0.049553944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2152000000004446e-05, 'source_diff': 2.2152000000004446e-05}, {'time': 0.049593958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:05.104" endtime="20201117 14:47:05.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.146" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:05.115" endtime="20201117 14:47:05.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.157" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.155" endtime="20201117 14:47:05.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.164" level="INFO">VALUE: [2.2152000000004446e-05, 2.1972000000002045e-05, 2.1778000000000075e-05, 2.1277999999999575e-05, 2.169500000000213e-05, 2.133299999999838e-05, 2.1291999999999145e-05, 2.13890000000036e-05, 2.19169999999963e-05, 2.1443999999995467e-05, 2.1750000000000935e-05, 2.1527999999999825e-05, 2.158300000000557e-05, 2.17090000000017e-05, 2.20969999999987e-05, 2.187500000000453e-05, 2.191700000000324e-05, 2.184699999999845e-05, 2.222300000000177e-05, 2.213900000000435e-05, 2.1541999999999395e-05, 2.218100000000306e-05, 2.194500000000238e-05, 2.151300000000078e-05, 2.1986000000001615e-05, 2.197300000000152e-05, 2.1805999999999215e-05, 2.1722000000001795e-05, 2.131899999999881e-05, 2.2250000000001435e-05, 2.215299999999698e-05, 2.133299999999838e-05, 2.208299999999913e-05, 2.211099999999827e-05, 2.134700000000489e-05, 2.1416000000003266e-05, 2.1485999999994176e-05, 2.212499999999784e-05, 2.162499999999734e-05, 2.162499999999734e-05, 2.17770000000006e-05, 2.219500000000263e-05, 2.205499999999999e-05, 2.1764000000000505e-05, 2.1957999999995537e-05, 2.211099999999827e-05, 2.137500000000403e-05, 2.173700000000084e-05, 2.1958000000002476e-05, 2.1527999999999825e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.160" endtime="20201117 14:47:05.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.148" endtime="20201117 14:47:05.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.173" endtime="20201117 14:47:05.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.182" endtime="20201117 14:47:05.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.178" endtime="20201117 14:47:05.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.169" endtime="20201117 14:47:05.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.623" endtime="20201117 14:47:05.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.619" endtime="20201117 14:47:05.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.617" endtime="20201117 14:47:05.210"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.215" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.238" endtime="20201117 14:47:05.257"></status>
</kw>
<msg timestamp="20201117 14:47:05.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.235" endtime="20201117 14:47:05.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.261" endtime="20201117 14:47:05.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.267" endtime="20201117 14:47:05.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.227" endtime="20201117 14:47:05.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.221" endtime="20201117 14:47:05.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.293" endtime="20201117 14:47:05.617"></status>
</kw>
<msg timestamp="20201117 14:47:05.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049210861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049233403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.289" endtime="20201117 14:47:05.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049210861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049233403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.622" endtime="20201117 14:47:05.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.630" endtime="20201117 14:47:05.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.281" endtime="20201117 14:47:05.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.276" endtime="20201117 14:47:05.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.640" level="INFO">${RESULT} = [{'time': 0.049233403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.049267403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:05.635" endtime="20201117 14:47:05.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.654" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:05.641" endtime="20201117 14:47:05.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.660" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.659" endtime="20201117 14:47:05.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.662" level="INFO">VALUE: [2.2542000000000395e-05, 2.241700000000374e-05, 2.2833999999999355e-05, 2.2750000000001935e-05, 2.2513999999994316e-05, 2.295900000000295e-05, 2.23890000000046e-05, 2.3151999999998507e-05, 2.3111999999998745e-05, 2.2500000000001685e-05, 2.231899999999981e-05, 2.311099999999927e-05, 2.233299999999938e-05, 2.2943999999996967e-05, 2.308300000000013e-05, 2.236100000000546e-05, 2.320899999999626e-05, 2.256900000000006e-05, 2.268099999999662e-05, 2.311099999999927e-05, 2.291700000000424e-05, 2.2568999999993122e-05, 2.268100000000356e-05, 2.28890000000051e-05, 2.2778000000001075e-05, 2.258299999999963e-05, 2.2569999999999535e-05, 2.2792000000000645e-05, 2.2569999999999535e-05, 2.316699999999755e-05, 2.263899999999791e-05, 2.3056000000000465e-05, 2.2362000000004933e-05, 2.2499999999994746e-05, 2.2347999999998425e-05, 2.2778000000001075e-05, 2.2665999999997577e-05, 2.2861999999998495e-05, 2.3221999999996357e-05, 2.254100000000092e-05, 2.2402000000004696e-05, 2.3137999999998937e-05, 2.254100000000092e-05, 2.291700000000424e-05, 2.309700000000664e-05, 2.311099999999927e-05, 2.2679999999997147e-05, 2.261099999999877e-05, 2.234700000000589e-05, 2.3028000000001325e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.661" endtime="20201117 14:47:05.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.655" endtime="20201117 14:47:05.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.667" endtime="20201117 14:47:05.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.671" endtime="20201117 14:47:05.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.669" endtime="20201117 14:47:05.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.665" endtime="20201117 14:47:05.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.217" endtime="20201117 14:47:05.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.212" endtime="20201117 14:47:05.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.211" endtime="20201117 14:47:05.693"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.695" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.706" endtime="20201117 14:47:05.722"></status>
</kw>
<msg timestamp="20201117 14:47:05.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.704" endtime="20201117 14:47:05.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.723" endtime="20201117 14:47:05.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.726" endtime="20201117 14:47:05.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.701" endtime="20201117 14:47:05.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.698" endtime="20201117 14:47:05.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.738" endtime="20201117 14:47:06.025"></status>
</kw>
<msg timestamp="20201117 14:47:06.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027588083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027611625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.736" endtime="20201117 14:47:06.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027588083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027611625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.029" endtime="20201117 14:47:06.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.038" endtime="20201117 14:47:06.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.733" endtime="20201117 14:47:06.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.730" endtime="20201117 14:47:06.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:06.047" level="INFO">${RESULT} = [{'time': 0.027611625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3542000000001395e-05, 'source_diff': 2.3542000000001395e-05}, {'time': 0.027644639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:06.042" endtime="20201117 14:47:06.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.062" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:06.048" endtime="20201117 14:47:06.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.068" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.067" endtime="20201117 14:47:06.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.070" level="INFO">VALUE: [2.3542000000001395e-05, 2.419499999999769e-05, 2.4070000000001035e-05, 2.420900000000073e-05, 2.3764000000002505e-05, 2.338899999999866e-05, 2.4236000000000396e-05, 2.413899999999941e-05, 2.369500000000066e-05, 2.3499999999999216e-05, 2.3665999999998577e-05, 2.391700000000177e-05, 2.3291999999997676e-05, 2.3708000000000756e-05, 2.3804999999998272e-05, 2.4096999999997232e-05, 2.386100000000002e-05, 2.3693999999997717e-05, 2.387499999999959e-05, 2.3472000000000076e-05, 2.3999999999999716e-05, 2.412499999999984e-05, 2.3485999999999646e-05, 2.411100000000027e-05, 2.3986000000000146e-05, 2.3722000000000326e-05, 2.394500000000091e-05, 2.3679999999998147e-05, 2.3820000000000785e-05, 2.337500000000256e-05, 2.4068999999998092e-05, 2.3764000000002505e-05, 2.395900000000048e-05, 2.3277999999998106e-05, 2.370900000000023e-05, 2.3750000000002935e-05, 2.3570000000000535e-05, 2.362499999999934e-05, 2.3611999999999245e-05, 2.4055999999997996e-05, 2.4249999999999966e-05, 2.3472000000000076e-05, 2.337499999999909e-05, 2.3526999999998882e-05, 2.366699999999805e-05, 2.32770000000021e-05, 2.3513999999998786e-05, 2.361099999999977e-05, 2.35970000000002e-05, 2.379100000000217e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.069" endtime="20201117 14:47:06.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.063" endtime="20201117 14:47:06.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.075" endtime="20201117 14:47:06.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.079" endtime="20201117 14:47:06.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.077" endtime="20201117 14:47:06.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.072" endtime="20201117 14:47:06.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.696" endtime="20201117 14:47:06.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.694" endtime="20201117 14:47:06.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.693" endtime="20201117 14:47:06.100"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.103" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.114" endtime="20201117 14:47:06.131"></status>
</kw>
<msg timestamp="20201117 14:47:06.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.112" endtime="20201117 14:47:06.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.132" endtime="20201117 14:47:06.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.135" endtime="20201117 14:47:06.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.108" endtime="20201117 14:47:06.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.106" endtime="20201117 14:47:06.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.147" endtime="20201117 14:47:06.466"></status>
</kw>
<msg timestamp="20201117 14:47:06.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02752, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027544444, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:47:06.145" endtime="20201117 14:47:06.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02752, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027544444, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:47:06.476" endtime="20201117 14:47:06.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.497" endtime="20201117 14:47:06.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.142" endtime="20201117 14:47:06.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.139" endtime="20201117 14:47:06.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:06.517" level="INFO">${RESULT} = [{'time': 0.027544444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4444000000001936e-05, 'source_diff': 2.4444000000001936e-05}, {'time': 0.027583486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:06.507" endtime="20201117 14:47:06.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.550" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:06.520" endtime="20201117 14:47:06.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.562" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.559" endtime="20201117 14:47:06.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.568" level="INFO">VALUE: [2.4444000000001936e-05, 2.5222000000001826e-05, 2.429100000000267e-05, 2.4527999999999356e-05, 2.4999999999997247e-05, 2.5042000000002895e-05, 2.4722000000001326e-05, 2.508300000000213e-05, 2.438899999999966e-05, 2.4693999999998717e-05, 2.463899999999991e-05, 2.4944000000002436e-05, 2.463899999999991e-05, 2.463899999999991e-05, 2.506900000000256e-05, 2.4820000000001785e-05, 2.49169999999993e-05, 2.520899999999826e-05, 2.4291999999998676e-05, 2.469500000000166e-05, 2.520900000000173e-05, 2.45970000000012e-05, 2.5084000000001605e-05, 2.465300000000295e-05, 2.5068999999999092e-05, 2.448700000000012e-05, 2.4568999999998592e-05, 2.4486000000000646e-05, 2.4415999999999327e-05, 2.456900000000206e-05, 2.4986000000001146e-05, 2.486100000000102e-05, 2.4443999999998467e-05, 2.50970000000017e-05, 2.434700000000095e-05, 2.4291999999998676e-05, 2.4457999999998037e-05, 2.4277999999999106e-05, 2.4472000000001076e-05, 2.4804999999999272e-05, 2.4736000000000896e-05, 2.443100000000184e-05, 2.4833999999997886e-05, 2.4306000000001715e-05, 2.463899999999991e-05, 2.487500000000059e-05, 2.512500000000084e-05, 2.445900000000098e-05, 2.465300000000295e-05, 2.493099999999887e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.564" endtime="20201117 14:47:06.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.552" endtime="20201117 14:47:06.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.577" endtime="20201117 14:47:06.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.586" endtime="20201117 14:47:06.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.581" endtime="20201117 14:47:06.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.572" endtime="20201117 14:47:06.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.104" endtime="20201117 14:47:06.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.102" endtime="20201117 14:47:06.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.101" endtime="20201117 14:47:06.613"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.619" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.642" endtime="20201117 14:47:06.662"></status>
</kw>
<msg timestamp="20201117 14:47:06.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.638" endtime="20201117 14:47:06.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.665" endtime="20201117 14:47:06.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.673" endtime="20201117 14:47:06.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.630" endtime="20201117 14:47:06.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.624" endtime="20201117 14:47:06.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.698" endtime="20201117 14:47:07.060"></status>
</kw>
<msg timestamp="20201117 14:47:07.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049318764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049344486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.694" endtime="20201117 14:47:07.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049318764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049344486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.071" endtime="20201117 14:47:07.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.091" endtime="20201117 14:47:07.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.686" endtime="20201117 14:47:07.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.681" endtime="20201117 14:47:07.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.110" level="INFO">${RESULT} = [{'time': 0.049344486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5721999999998857e-05, 'source_diff': 2.5721999999998857e-05}, {'time': 0.049383486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:07.100" endtime="20201117 14:47:07.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.143" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:07.112" endtime="20201117 14:47:07.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.154" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.152" endtime="20201117 14:47:07.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.160" level="INFO">VALUE: [2.5721999999998857e-05, 2.6235999999998927e-05, 2.5888999999994222e-05, 2.5971999999999107e-05, 2.6194000000000217e-05, 2.5943999999999967e-05, 2.5485999999998177e-05, 2.536100000000152e-05, 2.565300000000048e-05, 2.613900000000141e-05, 2.562500000000134e-05, 2.60970000000027e-05, 2.5610999999994832e-05, 2.6138999999994472e-05, 2.5806000000003215e-05, 2.611100000000227e-05, 2.620899999999926e-05, 2.5818999999996373e-05, 2.6194000000000217e-05, 2.5791999999996706e-05, 2.584700000000245e-05, 2.5512999999997843e-05, 2.5763999999997567e-05, 2.5749999999997997e-05, 2.565300000000048e-05, 2.5443999999999467e-05, 2.612500000000184e-05, 2.566700000000005e-05, 2.5971999999999107e-05, 2.5707999999999287e-05, 2.5777999999997137e-05, 2.5443999999999467e-05, 2.5374999999994152e-05, 2.612500000000184e-05, 2.538900000000066e-05, 2.5556000000002965e-05, 2.533300000000238e-05, 2.562500000000134e-05, 2.588900000000116e-05, 2.570899999999876e-05, 2.540300000000023e-05, 2.606900000000356e-05, 2.562500000000134e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.5805999999996276e-05, 2.540300000000023e-05, 2.619499999999969e-05, 2.6263999999998067e-05, 2.5776999999997663e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.157" endtime="20201117 14:47:07.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.145" endtime="20201117 14:47:07.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.170" endtime="20201117 14:47:07.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.179" endtime="20201117 14:47:07.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.174" endtime="20201117 14:47:07.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.165" endtime="20201117 14:47:07.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.620" endtime="20201117 14:47:07.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.616" endtime="20201117 14:47:07.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.614" endtime="20201117 14:47:07.206"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.211" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.235" endtime="20201117 14:47:07.255"></status>
</kw>
<msg timestamp="20201117 14:47:07.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.232" endtime="20201117 14:47:07.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.259" endtime="20201117 14:47:07.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.266" endtime="20201117 14:47:07.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.224" endtime="20201117 14:47:07.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.217" endtime="20201117 14:47:07.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.290" endtime="20201117 14:47:07.653"></status>
</kw>
<msg timestamp="20201117 14:47:07.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049990444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050017458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.287" endtime="20201117 14:47:07.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049990444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050017458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.663" endtime="20201117 14:47:07.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.683" endtime="20201117 14:47:07.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.279" endtime="20201117 14:47:07.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.274" endtime="20201117 14:47:07.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.704" level="INFO">${RESULT} = [{'time': 0.050017458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7013999999998817e-05, 'source_diff': 2.7013999999998817e-05}, {'time': 0.050064403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:07.694" endtime="20201117 14:47:07.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.736" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:07.706" endtime="20201117 14:47:07.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.748" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.745" endtime="20201117 14:47:07.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.754" level="INFO">VALUE: [2.7013999999998817e-05, 2.6320000000003285e-05, 2.6806000000004215e-05, 2.690300000000173e-05, 2.687500000000259e-05, 2.6804999999997803e-05, 2.7098000000003175e-05, 2.6721999999999857e-05, 2.691599999999489e-05, 2.656900000000406e-05, 2.6721999999999857e-05, 2.636100000000252e-05, 2.6680000000001147e-05, 2.6541999999997457e-05, 2.717999999999471e-05, 2.6763999999998567e-05, 2.6569999999996596e-05, 2.686100000000302e-05, 2.630500000000424e-05, 2.711100000000327e-05, 2.686100000000302e-05, 2.7055999999997526e-05, 2.719500000000069e-05, 2.7194000000001217e-05, 2.720900000000026e-05, 2.6805999999997276e-05, 2.6806000000004215e-05, 2.6805999999997276e-05, 2.6792000000004645e-05, 2.711100000000327e-05, 2.643100000000037e-05, 2.7027999999998387e-05, 2.7054999999998053e-05, 2.6513999999998317e-05, 2.7069999999997096e-05, 2.6985999999999677e-05, 2.6554999999997553e-05, 2.7152000000002507e-05, 2.6764000000005506e-05, 2.69170000000013e-05, 2.6374999999995152e-05, 2.6804999999997803e-05, 2.665300000000148e-05, 2.6471999999999607e-05, 2.684700000000345e-05, 2.6972000000000107e-05, 2.722299999999983e-05, 2.6985999999999677e-05, 2.6568999999997123e-05, 2.7042000000004895e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.750" endtime="20201117 14:47:07.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.738" endtime="20201117 14:47:07.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.763" endtime="20201117 14:47:07.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.773" endtime="20201117 14:47:07.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.767" endtime="20201117 14:47:07.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.758" endtime="20201117 14:47:07.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.213" endtime="20201117 14:47:07.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.209" endtime="20201117 14:47:07.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.207" endtime="20201117 14:47:07.800"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.806" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.829" endtime="20201117 14:47:07.849"></status>
</kw>
<msg timestamp="20201117 14:47:07.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.825" endtime="20201117 14:47:07.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.852" endtime="20201117 14:47:07.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.859" endtime="20201117 14:47:07.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.817" endtime="20201117 14:47:07.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.811" endtime="20201117 14:47:07.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.884" endtime="20201117 14:47:08.249"></status>
</kw>
<msg timestamp="20201117 14:47:08.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049298542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049325903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.880" endtime="20201117 14:47:08.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049298542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049325903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.259" endtime="20201117 14:47:08.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.279" endtime="20201117 14:47:08.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.873" endtime="20201117 14:47:08.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.868" endtime="20201117 14:47:08.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.298" level="INFO">${RESULT} = [{'time': 0.049325903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7360999999996582e-05, 'source_diff': 2.7360999999996582e-05}, {'time': 0.049369875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:08.288" endtime="20201117 14:47:08.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.334" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:08.300" endtime="20201117 14:47:08.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.345" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.343" endtime="20201117 14:47:08.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.351" level="INFO">VALUE: [2.7360999999996582e-05, 2.766700000000205e-05, 2.7374999999996152e-05, 2.786100000000402e-05, 2.7584000000004105e-05, 2.769500000000119e-05, 2.7888999999996222e-05, 2.8264000000000067e-05, 2.7304999999998303e-05, 2.7584000000004105e-05, 2.7763000000000093e-05, 2.792999999999546e-05, 2.7278000000005576e-05, 2.740300000000223e-05, 2.7346999999997013e-05, 2.7930000000002397e-05, 2.7694000000001717e-05, 2.7804999999998803e-05, 2.7763999999999567e-05, 2.7776999999999663e-05, 2.7930999999994932e-05, 2.8138999999996472e-05, 2.8083999999997666e-05, 2.765300000000248e-05, 2.7818999999998373e-05, 2.736100000000352e-05, 2.8000000000000247e-05, 2.738900000000266e-05, 2.8152999999996042e-05, 2.7402999999995292e-05, 2.8028000000006326e-05, 2.7972000000001107e-05, 2.7763999999999567e-05, 2.745900000000051e-05, 2.7986000000000677e-05, 2.794500000000144e-05, 2.8166999999995612e-05, 2.813900000000341e-05, 2.8138000000003938e-05, 2.8138000000003938e-05, 2.7499999999999747e-05, 2.794500000000144e-05, 2.7944000000001967e-05, 2.763900000000291e-05, 2.7430000000001897e-05, 2.8000000000000247e-05, 2.7972000000001107e-05, 2.7819000000005312e-05, 2.8040999999999483e-05, 2.7486000000000177e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.348" endtime="20201117 14:47:08.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.336" endtime="20201117 14:47:08.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.361" endtime="20201117 14:47:08.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:08.370" endtime="20201117 14:47:08.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.366" endtime="20201117 14:47:08.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.356" endtime="20201117 14:47:08.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.807" endtime="20201117 14:47:08.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.803" endtime="20201117 14:47:08.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.801" endtime="20201117 14:47:08.398"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.404" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.427" endtime="20201117 14:47:08.447"></status>
</kw>
<msg timestamp="20201117 14:47:08.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.424" endtime="20201117 14:47:08.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.451" endtime="20201117 14:47:08.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.458" endtime="20201117 14:47:08.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.416" endtime="20201117 14:47:08.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.410" endtime="20201117 14:47:08.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.483" endtime="20201117 14:47:08.846"></status>
</kw>
<msg timestamp="20201117 14:47:08.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050389153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050418375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.479" endtime="20201117 14:47:08.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050389153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050418375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.856" endtime="20201117 14:47:08.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.876" endtime="20201117 14:47:08.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.471" endtime="20201117 14:47:08.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.466" endtime="20201117 14:47:08.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.897" level="INFO">${RESULT} = [{'time': 0.050418375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9222000000002357e-05, 'source_diff': 2.9222000000002357e-05}, {'time': 0.050456361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:08.887" endtime="20201117 14:47:08.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.929" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:08.899" endtime="20201117 14:47:08.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.941" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.939" endtime="20201117 14:47:08.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.948" level="INFO">VALUE: [2.9222000000002357e-05, 2.9110999999998333e-05, 2.915300000000398e-05, 2.8778000000000137e-05, 2.8347999999997486e-05, 2.89170000000033e-05, 2.9180999999996182e-05, 2.9124999999997903e-05, 2.8778000000000137e-05, 2.8320000000005285e-05, 2.9124999999997903e-05, 2.9250000000001497e-05, 2.9180000000003647e-05, 2.8277999999999637e-05, 2.919500000000269e-05, 2.8833999999998416e-05, 2.8319999999998346e-05, 2.8750000000000997e-05, 2.8332999999998443e-05, 2.865199999999707e-05, 2.8860999999998083e-05, 2.9014000000000817e-05, 2.8568999999999123e-05, 2.9096999999998763e-05, 2.8818999999999373e-05, 2.838900000000366e-05, 2.8750000000000997e-05, 2.8833999999998416e-05, 2.8972000000002107e-05, 2.8708000000002287e-05, 2.838900000000366e-05, 2.8596999999998263e-05, 2.9236000000001927e-05, 2.8930999999995932e-05, 2.85970000000052e-05, 2.8791999999999707e-05, 2.843100000000237e-05, 2.8805999999999277e-05, 2.8264000000000067e-05, 2.915300000000398e-05, 2.840300000000323e-05, 2.890300000000373e-05, 2.8430000000002897e-05, 2.8388999999996722e-05, 2.8777000000000663e-05, 2.8735999999994488e-05, 2.8514000000000317e-05, 2.8944000000002967e-05, 2.8582999999998693e-05, 2.8832999999998943e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.943" endtime="20201117 14:47:08.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.931" endtime="20201117 14:47:08.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.957" endtime="20201117 14:47:08.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:08.966" endtime="20201117 14:47:08.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.961" endtime="20201117 14:47:08.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.952" endtime="20201117 14:47:08.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.406" endtime="20201117 14:47:08.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.401" endtime="20201117 14:47:08.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.399" endtime="20201117 14:47:08.993"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.999" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.022" endtime="20201117 14:47:09.042"></status>
</kw>
<msg timestamp="20201117 14:47:09.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.019" endtime="20201117 14:47:09.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.046" endtime="20201117 14:47:09.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.052" endtime="20201117 14:47:09.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.011" endtime="20201117 14:47:09.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.005" endtime="20201117 14:47:09.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.077" endtime="20201117 14:47:09.441"></status>
</kw>
<msg timestamp="20201117 14:47:09.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049626583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049656694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.074" endtime="20201117 14:47:09.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049626583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049656694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.451" endtime="20201117 14:47:09.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.472" endtime="20201117 14:47:09.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.066" endtime="20201117 14:47:09.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.061" endtime="20201117 14:47:09.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.491" level="INFO">${RESULT} = [{'time': 0.049656694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0110999999999333e-05, 'source_diff': 3.0110999999999333e-05}, {'time': 0.049704694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:09.481" endtime="20201117 14:47:09.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.524" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:09.494" endtime="20201117 14:47:09.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.536" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.534" endtime="20201117 14:47:09.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.542" level="INFO">VALUE: [3.0110999999999333e-05, 2.9958000000003537e-05, 2.9804999999993864e-05, 2.9819000000000373e-05, 3.015199999999857e-05, 3.0055000000001053e-05, 3.0027999999994448e-05, 2.936100000000552e-05, 2.9610999999998833e-05, 2.9819000000000373e-05, 3.0055999999993588e-05, 3.0166999999997612e-05, 2.9902999999997792e-05, 2.994500000000344e-05, 2.944500000000294e-05, 2.9764000000001567e-05, 3.0000000000002247e-05, 2.9500000000001747e-05, 2.9305999999999777e-05, 2.9458999999995572e-05, 2.9666000000004578e-05, 2.9749999999995058e-05, 2.9346999999999013e-05, 2.9750000000001997e-05, 3.0056000000000527e-05, 3.0292000000001207e-05, 2.9778000000001137e-05, 2.9762999999995154e-05, 3.0014000000001817e-05, 2.9624999999998403e-05, 3.0124999999998903e-05, 2.9569000000000123e-05, 2.9624999999998403e-05, 2.9958000000003537e-05, 2.94170000000038e-05, 2.938900000000466e-05, 3.0333000000000443e-05, 3.020799999999685e-05, 2.9278000000000637e-05, 3.0194999999996752e-05, 2.9694999999996252e-05, 3.0083999999999667e-05, 2.962500000000534e-05, 2.9846999999999513e-05, 3.0180999999997182e-05, 2.9819999999999847e-05, 2.9750000000001997e-05, 3.020900000000326e-05, 2.9708999999995822e-05, 2.9486999999994712e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.538" endtime="20201117 14:47:09.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.526" endtime="20201117 14:47:09.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.552" endtime="20201117 14:47:09.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.560" endtime="20201117 14:47:09.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.556" endtime="20201117 14:47:09.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.547" endtime="20201117 14:47:09.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.000" endtime="20201117 14:47:09.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.996" endtime="20201117 14:47:09.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.994" endtime="20201117 14:47:09.588"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.594" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.616" endtime="20201117 14:47:09.637"></status>
</kw>
<msg timestamp="20201117 14:47:09.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.613" endtime="20201117 14:47:09.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.640" endtime="20201117 14:47:09.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.647" endtime="20201117 14:47:09.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.605" endtime="20201117 14:47:09.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.599" endtime="20201117 14:47:09.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.665" endtime="20201117 14:47:09.952"></status>
</kw>
<msg timestamp="20201117 14:47:09.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049318389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049349264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.663" endtime="20201117 14:47:09.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049318389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049349264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.956" endtime="20201117 14:47:09.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.970" endtime="20201117 14:47:09.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.660" endtime="20201117 14:47:09.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.656" endtime="20201117 14:47:09.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.979" level="INFO">${RESULT} = [{'time': 0.049349264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.087499999999965e-05, 'source_diff': 3.087499999999965e-05}, {'time': 0.049400278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:09.975" endtime="20201117 14:47:09.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.993" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:09.980" endtime="20201117 14:47:09.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.999" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.998" endtime="20201117 14:47:09.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.002" level="INFO">VALUE: [3.087499999999965e-05, 3.0333999999999917e-05, 3.043100000000437e-05, 3.0458000000004037e-05, 3.09170000000053e-05, 3.087499999999965e-05, 3.044399999999753e-05, 3.054200000000146e-05, 3.0500000000002747e-05, 3.038799999999925e-05, 3.115300000000598e-05, 3.073600000000343e-05, 3.0458000000004037e-05, 3.0444000000004467e-05, 3.0776999999995724e-05, 3.113899999999947e-05, 3.041599999999839e-05, 3.0790999999995294e-05, 3.070800000000429e-05, 3.119499999999775e-05, 3.105600000000153e-05, 3.086100000000008e-05, 3.0554999999994614e-05, 3.0416999999997862e-05, 3.119499999999775e-05, 3.0499999999995808e-05, 3.0347000000000013e-05, 3.0416999999997862e-05, 3.113899999999947e-05, 3.099999999999631e-05, 3.097299999999664e-05, 3.070899999999682e-05, 3.072300000000333e-05, 3.118099999999818e-05, 3.086100000000008e-05, 3.07779999999952e-05, 3.0750000000003e-05, 3.076399999999563e-05, 3.094399999999803e-05, 3.073600000000343e-05, 3.092999999999846e-05, 3.0568999999994184e-05, 3.0264000000002067e-05, 3.052800000000189e-05, 3.055500000000155e-05, 3.0305000000001303e-05, 3.12500000000035e-05, 3.079199999999477e-05, 3.111100000000033e-05, 3.0333000000000443e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.000" endtime="20201117 14:47:10.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.994" endtime="20201117 14:47:10.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.006" endtime="20201117 14:47:10.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.010" endtime="20201117 14:47:10.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.008" endtime="20201117 14:47:10.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.004" endtime="20201117 14:47:10.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.595" endtime="20201117 14:47:10.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.591" endtime="20201117 14:47:10.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.589" endtime="20201117 14:47:10.032"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.034" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.045" endtime="20201117 14:47:10.061"></status>
</kw>
<msg timestamp="20201117 14:47:10.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.043" endtime="20201117 14:47:10.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.062" endtime="20201117 14:47:10.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.065" endtime="20201117 14:47:10.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.040" endtime="20201117 14:47:10.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.037" endtime="20201117 14:47:10.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.077" endtime="20201117 14:47:10.364"></status>
</kw>
<msg timestamp="20201117 14:47:10.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027363778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027395806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.075" endtime="20201117 14:47:10.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027363778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027395806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.368" endtime="20201117 14:47:10.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.377" endtime="20201117 14:47:10.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.072" endtime="20201117 14:47:10.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.069" endtime="20201117 14:47:10.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.385" level="INFO">${RESULT} = [{'time': 0.027395806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.202800000000339e-05, 'source_diff': 3.202800000000339e-05}, {'time': 0.027435833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:10.381" endtime="20201117 14:47:10.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.401" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:10.386" endtime="20201117 14:47:10.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.406" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.405" endtime="20201117 14:47:10.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.409" level="INFO">VALUE: [3.202800000000339e-05, 3.1832999999998474e-05, 3.181900000000237e-05, 3.1444999999998e-05, 3.225000000000103e-05, 3.223700000000093e-05, 3.133399999999745e-05, 3.201400000000035e-05, 3.179199999999924e-05, 3.222199999999842e-05, 3.204199999999949e-05, 3.1540999999999514e-05, 3.191599999999989e-05, 3.177799999999967e-05, 3.145800000000157e-05, 3.180600000000228e-05, 3.152800000000289e-05, 3.161100000000083e-05, 3.204199999999949e-05, 3.186100000000108e-05, 3.177799999999967e-05, 3.166700000000258e-05, 3.127799999999917e-05, 3.17640000000001e-05, 3.181999999999838e-05, 3.15700000000016e-05, 3.180600000000228e-05, 3.172300000000086e-05, 3.2054999999999584e-05, 3.223599999999799e-05, 3.191599999999989e-05, 3.205599999999906e-05, 3.163899999999997e-05, 3.142999999999896e-05, 3.133300000000144e-05, 3.21250000000009e-05, 3.2110999999997863e-05, 3.2054999999999584e-05, 3.142999999999896e-05, 3.179199999999924e-05, 3.201400000000035e-05, 3.151400000000332e-05, 3.156999999999813e-05, 3.190299999999979e-05, 3.198599999999774e-05, 3.183400000000142e-05, 3.19310000000024e-05, 3.15839999999977e-05, 3.195900000000154e-05, 3.161100000000083e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.407" endtime="20201117 14:47:10.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.402" endtime="20201117 14:47:10.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.413" endtime="20201117 14:47:10.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.417" endtime="20201117 14:47:10.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.415" endtime="20201117 14:47:10.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.411" endtime="20201117 14:47:10.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.035" endtime="20201117 14:47:10.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.033" endtime="20201117 14:47:10.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.032" endtime="20201117 14:47:10.439"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.442" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.454" endtime="20201117 14:47:10.472"></status>
</kw>
<msg timestamp="20201117 14:47:10.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.452" endtime="20201117 14:47:10.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.475" endtime="20201117 14:47:10.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.483" endtime="20201117 14:47:10.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.448" endtime="20201117 14:47:10.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.445" endtime="20201117 14:47:10.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.508" endtime="20201117 14:47:10.872"></status>
</kw>
<msg timestamp="20201117 14:47:10.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028865181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028898264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.505" endtime="20201117 14:47:10.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028865181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028898264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.882" endtime="20201117 14:47:10.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.902" endtime="20201117 14:47:10.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.497" endtime="20201117 14:47:10.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.492" endtime="20201117 14:47:10.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.923" level="INFO">${RESULT} = [{'time': 0.028898264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3082999999999724e-05, 'source_diff': 3.3082999999999724e-05}, {'time': 0.028943292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:10.913" endtime="20201117 14:47:10.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.955" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:10.925" endtime="20201117 14:47:10.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.967" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.965" endtime="20201117 14:47:10.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.973" level="INFO">VALUE: [3.3082999999999724e-05, 3.245899999999857e-05, 3.252800000000042e-05, 3.304200000000049e-05, 3.309800000000224e-05, 3.273599999999849e-05, 3.266699999999664e-05, 3.2791000000000764e-05, 3.298700000000168e-05, 3.308400000000267e-05, 3.2304999999999834e-05, 3.2846999999999044e-05, 3.322199999999942e-05, 3.298599999999874e-05, 3.2291000000000264e-05, 3.294400000000003e-05, 3.266700000000011e-05, 3.3069000000000154e-05, 3.3138999999998e-05, 3.255599999999956e-05, 3.280599999999981e-05, 3.324999999999856e-05, 3.280599999999981e-05, 3.2610999999998364e-05, 3.304200000000049e-05, 3.304200000000049e-05, 3.298599999999874e-05, 3.224999999999756e-05, 3.315300000000104e-05, 3.22779999999967e-05, 3.266700000000011e-05, 3.270899999999882e-05, 3.2624999999997933e-05, 3.316700000000061e-05, 3.270800000000282e-05, 3.245800000000257e-05, 3.299999999999831e-05, 3.318000000000071e-05, 3.291700000000036e-05, 3.2596999999998794e-05, 3.233300000000244e-05, 3.247300000000161e-05, 3.2818999999999904e-05, 3.298599999999874e-05, 3.3124999999998433e-05, 3.2777000000001194e-05, 3.301400000000135e-05, 3.323599999999899e-05, 3.316700000000061e-05, 3.241699999999986e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.970" endtime="20201117 14:47:10.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.957" endtime="20201117 14:47:10.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.982" endtime="20201117 14:47:10.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.991" endtime="20201117 14:47:11.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.987" endtime="20201117 14:47:11.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.977" endtime="20201117 14:47:11.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.443" endtime="20201117 14:47:11.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.441" endtime="20201117 14:47:11.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.440" endtime="20201117 14:47:11.019"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.024" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.048" endtime="20201117 14:47:11.069"></status>
</kw>
<msg timestamp="20201117 14:47:11.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.044" endtime="20201117 14:47:11.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.072" endtime="20201117 14:47:11.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.079" endtime="20201117 14:47:11.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.036" endtime="20201117 14:47:11.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.030" endtime="20201117 14:47:11.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.104" endtime="20201117 14:47:11.468"></status>
</kw>
<msg timestamp="20201117 14:47:11.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050321861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050355903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.100" endtime="20201117 14:47:11.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050321861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050355903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.478" endtime="20201117 14:47:11.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.499" endtime="20201117 14:47:11.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.092" endtime="20201117 14:47:11.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.087" endtime="20201117 14:47:11.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.518" level="INFO">${RESULT} = [{'time': 0.050355903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.404199999999802e-05, 'source_diff': 3.404199999999802e-05}, {'time': 0.050407931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:11.508" endtime="20201117 14:47:11.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.551" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:11.520" endtime="20201117 14:47:11.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.563" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.560" endtime="20201117 14:47:11.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.568" level="INFO">VALUE: [3.404199999999802e-05, 3.343100000000043e-05, 3.355600000000403e-05, 3.415300000000204e-05, 3.354200000000446e-05, 3.408399999999673e-05, 3.405599999999759e-05, 3.3332999999996504e-05, 3.3874999999995714e-05, 3.381900000000437e-05, 3.347199999999967e-05, 3.3860999999996144e-05, 3.356900000000412e-05, 3.340300000000129e-05, 3.3818999999997434e-05, 3.331900000000387e-05, 3.341700000000086e-05, 3.340300000000129e-05, 3.395900000000007e-05, 3.390200000000232e-05, 3.395900000000007e-05, 3.3445e-05, 3.399999999999931e-05, 3.413900000000247e-05, 3.415300000000204e-05, 3.424999999999956e-05, 3.338799999999531e-05, 3.395900000000007e-05, 3.397200000000017e-05, 3.349999999999881e-05, 3.352800000000489e-05, 3.3262999999998655e-05, 3.380600000000428e-05, 3.354199999999752e-05, 3.3526999999998475e-05, 3.343000000000096e-05, 3.369400000000078e-05, 3.347199999999967e-05, 3.3916999999994424e-05, 3.393100000000093e-05, 3.386100000000308e-05, 3.391700000000136e-05, 3.424999999999956e-05, 3.387500000000265e-05, 3.3526999999998475e-05, 3.423599999999999e-05, 3.401399999999888e-05, 3.324999999999856e-05, 3.369500000000025e-05, 3.343100000000043e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.565" endtime="20201117 14:47:11.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.553" endtime="20201117 14:47:11.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.578" endtime="20201117 14:47:11.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.586" endtime="20201117 14:47:11.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.582" endtime="20201117 14:47:11.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.573" endtime="20201117 14:47:11.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.026" endtime="20201117 14:47:11.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.022" endtime="20201117 14:47:11.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.020" endtime="20201117 14:47:11.615"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.620" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.643" endtime="20201117 14:47:11.664"></status>
</kw>
<msg timestamp="20201117 14:47:11.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.640" endtime="20201117 14:47:11.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.667" endtime="20201117 14:47:11.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.674" endtime="20201117 14:47:11.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.632" endtime="20201117 14:47:11.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.626" endtime="20201117 14:47:11.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.699" endtime="20201117 14:47:12.062"></status>
</kw>
<msg timestamp="20201117 14:47:12.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050059833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050094653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.695" endtime="20201117 14:47:12.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050059833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050094653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.072" endtime="20201117 14:47:12.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.093" endtime="20201117 14:47:12.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.688" endtime="20201117 14:47:12.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.683" endtime="20201117 14:47:12.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.113" level="INFO">${RESULT} = [{'time': 0.050094653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.482000000000485e-05, 'source_diff': 3.482000000000485e-05}, {'time': 0.050137653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:12.103" endtime="20201117 14:47:12.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.145" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:12.115" endtime="20201117 14:47:12.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.157" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.154" endtime="20201117 14:47:12.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.163" level="INFO">VALUE: [3.482000000000485e-05, 3.4610999999996894e-05, 3.506999999999816e-05, 3.491600000000289e-05, 3.475000000000006e-05, 3.468000000000221e-05, 3.47779999999992e-05, 3.440300000000229e-05, 3.459700000000426e-05, 3.494399999999509e-05, 3.437500000000315e-05, 3.449999999999981e-05, 3.44580000000011e-05, 3.518000000000271e-05, 3.476399999999963e-05, 3.4832999999998004e-05, 3.4360999999996644e-05, 3.498600000000074e-05, 3.448600000000024e-05, 3.4568999999998185e-05, 3.470800000000135e-05, 3.522200000000142e-05, 3.4930999999994994e-05, 3.49580000000016e-05, 3.473699999999996e-05, 3.445900000000057e-05, 3.4540999999999045e-05, 3.494400000000203e-05, 3.45979999999968e-05, 3.4374999999996214e-05, 3.4819000000005373e-05, 3.515199999999663e-05, 3.473600000000049e-05, 3.4374999999996214e-05, 3.438900000000272e-05, 3.444400000000153e-05, 3.504199999999902e-05, 3.51250000000039e-05, 3.500000000000031e-05, 3.520800000000185e-05, 3.4818999999998435e-05, 3.473599999999355e-05, 3.463900000000297e-05, 3.5277000000000225e-05, 3.5152999999996104e-05, 3.497200000000117e-05, 3.4402999999995354e-05, 3.440300000000229e-05, 3.5124999999996964e-05, 3.447300000000014e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.159" endtime="20201117 14:47:12.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.147" endtime="20201117 14:47:12.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.173" endtime="20201117 14:47:12.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.182" endtime="20201117 14:47:12.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.177" endtime="20201117 14:47:12.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.168" endtime="20201117 14:47:12.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.622" endtime="20201117 14:47:12.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.617" endtime="20201117 14:47:12.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.616" endtime="20201117 14:47:12.209"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.215" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.237" endtime="20201117 14:47:12.257"></status>
</kw>
<msg timestamp="20201117 14:47:12.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.234" endtime="20201117 14:47:12.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.260" endtime="20201117 14:47:12.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.267" endtime="20201117 14:47:12.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.226" endtime="20201117 14:47:12.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.220" endtime="20201117 14:47:12.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.292" endtime="20201117 14:47:12.656"></status>
</kw>
<msg timestamp="20201117 14:47:12.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049253167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049288833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.289" endtime="20201117 14:47:12.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049253167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049288833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.667" endtime="20201117 14:47:12.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.687" endtime="20201117 14:47:12.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.281" endtime="20201117 14:47:12.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.276" endtime="20201117 14:47:12.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.706" level="INFO">${RESULT} = [{'time': 0.049288833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.56659999999967e-05, 'source_diff': 3.56659999999967e-05}, {'time': 0.049333833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:12.696" endtime="20201117 14:47:12.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.741" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:12.708" endtime="20201117 14:47:12.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.753" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.751" endtime="20201117 14:47:12.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.760" level="INFO">VALUE: [3.56659999999967e-05, 3.5888999999997284e-05, 3.615300000000404e-05, 3.5374999999997214e-05, 3.6055000000000115e-05, 3.626399999999419e-05, 3.5888999999997284e-05, 3.534800000000449e-05, 3.576400000000063e-05, 3.555599999999909e-05, 3.5568999999999185e-05, 3.620900000000232e-05, 3.533400000000492e-05, 3.558400000000517e-05, 3.5346999999998074e-05, 3.5958999999995134e-05, 3.579199999999977e-05, 3.551400000000038e-05, 3.5568999999999185e-05, 3.572199999999498e-05, 3.5568999999999185e-05, 3.5304999999999365e-05, 3.6110999999998394e-05, 3.5332999999998504e-05, 3.590200000000432e-05, 3.5832999999999005e-05, 3.6082999999999255e-05, 3.575000000000106e-05, 3.523599999999405e-05, 3.552799999999995e-05, 3.5916999999996424e-05, 3.52779999999997e-05, 3.555599999999909e-05, 3.592999999999652e-05, 3.60979999999983e-05, 3.530599999999884e-05, 3.558399999999823e-05, 3.5513000000000905e-05, 3.5541000000000045e-05, 3.600000000000131e-05, 3.531999999999841e-05, 3.60979999999983e-05, 3.565199999999713e-05, 3.620799999999591e-05, 3.623599999999505e-05, 3.59450000000025e-05, 3.5916999999996424e-05, 3.5332999999998504e-05, 3.5652999999996604e-05, 3.5332999999998504e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.755" endtime="20201117 14:47:12.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.743" endtime="20201117 14:47:12.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.769" endtime="20201117 14:47:12.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.778" endtime="20201117 14:47:12.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.773" endtime="20201117 14:47:12.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.764" endtime="20201117 14:47:12.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.216" endtime="20201117 14:47:12.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.212" endtime="20201117 14:47:12.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.210" endtime="20201117 14:47:12.805"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.811" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.834" endtime="20201117 14:47:12.854"></status>
</kw>
<msg timestamp="20201117 14:47:12.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.830" endtime="20201117 14:47:12.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.858" endtime="20201117 14:47:12.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.864" endtime="20201117 14:47:12.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.823" endtime="20201117 14:47:12.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.817" endtime="20201117 14:47:12.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.889" endtime="20201117 14:47:13.252"></status>
</kw>
<msg timestamp="20201117 14:47:13.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049495333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049531958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.885" endtime="20201117 14:47:13.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049495333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049531958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.263" endtime="20201117 14:47:13.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.283" endtime="20201117 14:47:13.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.878" endtime="20201117 14:47:13.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.873" endtime="20201117 14:47:13.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.303" level="INFO">${RESULT} = [{'time': 0.049531958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6624999999998464e-05, 'source_diff': 3.6624999999998464e-05}, {'time': 0.049580972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:13.293" endtime="20201117 14:47:13.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.336" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:13.306" endtime="20201117 14:47:13.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.348" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.345" endtime="20201117 14:47:13.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.354" level="INFO">VALUE: [3.6624999999998464e-05, 3.722200000000342e-05, 3.694400000000403e-05, 3.704200000000102e-05, 3.629200000000027e-05, 3.715300000000504e-05, 3.7138999999998534e-05, 3.6388999999997784e-05, 3.630599999999984e-05, 3.7208999999996384e-05, 3.693100000000393e-05, 3.630599999999984e-05, 3.658399999999923e-05, 3.697300000000264e-05, 3.6512999999994966e-05, 3.7069000000000685e-05, 3.633399999999898e-05, 3.694400000000403e-05, 3.655600000000009e-05, 3.641599999999745e-05, 3.672200000000292e-05, 3.7124999999998964e-05, 3.630599999999984e-05, 3.675000000000206e-05, 3.7166999999997674e-05, 3.648600000000224e-05, 3.6291000000000795e-05, 3.6318999999999935e-05, 3.665300000000454e-05, 3.655600000000009e-05, 3.6445000000003e-05, 3.701400000000188e-05, 3.631999999999941e-05, 3.651400000000138e-05, 3.6360999999998644e-05, 3.6346999999999074e-05, 3.7138999999998534e-05, 3.7083000000000255e-05, 3.6958999999996134e-05, 3.652800000000095e-05, 3.702799999999451e-05, 3.661200000000531e-05, 3.691599999999795e-05, 3.7083000000000255e-05, 3.6596999999999325e-05, 3.667999999999727e-05, 3.700000000000231e-05, 3.700000000000231e-05, 3.6833000000000005e-05, 3.7083000000000255e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.350" endtime="20201117 14:47:13.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.338" endtime="20201117 14:47:13.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.363" endtime="20201117 14:47:13.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.372" endtime="20201117 14:47:13.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.367" endtime="20201117 14:47:13.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.358" endtime="20201117 14:47:13.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.812" endtime="20201117 14:47:13.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.808" endtime="20201117 14:47:13.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.806" endtime="20201117 14:47:13.399"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.405" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.428" endtime="20201117 14:47:13.449"></status>
</kw>
<msg timestamp="20201117 14:47:13.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.424" endtime="20201117 14:47:13.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.452" endtime="20201117 14:47:13.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.459" endtime="20201117 14:47:13.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.417" endtime="20201117 14:47:13.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.410" endtime="20201117 14:47:13.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.484" endtime="20201117 14:47:13.808"></status>
</kw>
<msg timestamp="20201117 14:47:13.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049828194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049866292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.480" endtime="20201117 14:47:13.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049828194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049866292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.813" endtime="20201117 14:47:13.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.822" endtime="20201117 14:47:13.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.473" endtime="20201117 14:47:13.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.468" endtime="20201117 14:47:13.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.830" level="INFO">${RESULT} = [{'time': 0.049866292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.80980000000003e-05, 'source_diff': 3.80980000000003e-05}, {'time': 0.049913319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:13.826" endtime="20201117 14:47:13.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.845" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:13.831" endtime="20201117 14:47:13.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.850" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.849" endtime="20201117 14:47:13.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.853" level="INFO">VALUE: [3.80980000000003e-05, 3.7360999999999644e-05, 3.798600000000374e-05, 3.773599999999655e-05, 3.790199999999938e-05, 3.7777000000002725e-05, 3.8069000000001685e-05, 3.7291000000001795e-05, 3.7776999999995786e-05, 3.72780000000017e-05, 3.751399999999544e-05, 3.7666999999998174e-05, 3.822200000000442e-05, 3.741700000000486e-05, 3.791700000000536e-05, 3.7610999999999895e-05, 3.7902999999998854e-05, 3.7888999999999284e-05, 3.7916999999998424e-05, 3.798600000000374e-05, 3.823600000000399e-05, 3.795900000000407e-05, 3.8276999999996286e-05, 3.8055000000002115e-05, 3.765199999999913e-05, 3.7638999999999034e-05, 3.748700000000271e-05, 3.813800000000006e-05, 3.7360999999999644e-05, 3.8055000000002115e-05, 3.74859999999963e-05, 3.7583000000000755e-05, 3.7597000000000325e-05, 3.7347000000000075e-05, 3.7445000000004e-05, 3.8124999999999964e-05, 3.7374999999999214e-05, 3.784800000000005e-05, 3.7916999999998424e-05, 3.757000000000066e-05, 3.8097000000000825e-05, 3.8180999999998244e-05, 3.804200000000202e-05, 3.7624999999999464e-05, 3.823599999999705e-05, 3.77780000000022e-05, 3.7874999999999714e-05, 3.8138999999999534e-05, 3.81659999999992e-05, 3.74859999999963e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.851" endtime="20201117 14:47:13.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.845" endtime="20201117 14:47:13.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.857" endtime="20201117 14:47:13.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.861" endtime="20201117 14:47:13.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.859" endtime="20201117 14:47:13.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.855" endtime="20201117 14:47:13.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.406" endtime="20201117 14:47:13.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.402" endtime="20201117 14:47:13.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.400" endtime="20201117 14:47:13.883"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.886" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.896" endtime="20201117 14:47:13.913"></status>
</kw>
<msg timestamp="20201117 14:47:13.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.895" endtime="20201117 14:47:13.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.915" endtime="20201117 14:47:13.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.918" endtime="20201117 14:47:13.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.891" endtime="20201117 14:47:13.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.888" endtime="20201117 14:47:13.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.930" endtime="20201117 14:47:14.216"></status>
</kw>
<msg timestamp="20201117 14:47:14.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027700444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027738958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.928" endtime="20201117 14:47:14.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027700444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027738958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.220" endtime="20201117 14:47:14.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.229" endtime="20201117 14:47:14.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.924" endtime="20201117 14:47:14.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.922" endtime="20201117 14:47:14.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.239" level="INFO">${RESULT} = [{'time': 0.027738958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.851399999999991e-05, 'source_diff': 3.851399999999991e-05}, {'time': 0.027789958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:14.234" endtime="20201117 14:47:14.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.252" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:14.240" endtime="20201117 14:47:14.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.258" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.257" endtime="20201117 14:47:14.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.261" level="INFO">VALUE: [3.851399999999991e-05, 3.8388999999999784e-05, 3.9096999999998355e-05, 3.86659999999997e-05, 3.9125000000000965e-05, 3.87780000000032e-05, 3.922199999999848e-05, 3.920799999999891e-05, 3.8847000000001575e-05, 3.8417000000002394e-05, 3.854199999999905e-05, 3.9194999999998814e-05, 3.851399999999991e-05, 3.8555000000002615e-05, 3.851399999999991e-05, 3.8875000000000715e-05, 3.8722999999997454e-05, 3.8916999999999424e-05, 3.9125000000000965e-05, 3.851399999999991e-05, 3.8611000000000895e-05, 3.926400000000066e-05, 3.922200000000195e-05, 3.845800000000163e-05, 3.8305000000002365e-05, 3.9111000000001395e-05, 3.877799999999973e-05, 3.9166999999999674e-05, 3.9125000000000965e-05, 3.9125000000000965e-05, 3.854199999999905e-05, 3.852799999999948e-05, 3.9111000000001395e-05, 3.8416999999998924e-05, 3.826399999999966e-05, 3.848600000000077e-05, 3.8709000000001353e-05, 3.830600000000184e-05, 3.8430999999998494e-05, 3.8902999999999854e-05, 3.9139000000000534e-05, 3.872199999999798e-05, 3.922199999999848e-05, 3.8416999999998924e-05, 3.9125000000000965e-05, 3.872200000000145e-05, 3.8375000000000214e-05, 3.86659999999997e-05, 3.867999999999927e-05, 3.897199999999823e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.259" endtime="20201117 14:47:14.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.253" endtime="20201117 14:47:14.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.265" endtime="20201117 14:47:14.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.269" endtime="20201117 14:47:14.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.267" endtime="20201117 14:47:14.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.263" endtime="20201117 14:47:14.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.886" endtime="20201117 14:47:14.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.884" endtime="20201117 14:47:14.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.883" endtime="20201117 14:47:14.291"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.294" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.304" endtime="20201117 14:47:14.321"></status>
</kw>
<msg timestamp="20201117 14:47:14.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.303" endtime="20201117 14:47:14.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.322" endtime="20201117 14:47:14.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.326" endtime="20201117 14:47:14.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.299" endtime="20201117 14:47:14.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.296" endtime="20201117 14:47:14.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.337" endtime="20201117 14:47:14.629"></status>
</kw>
<msg timestamp="20201117 14:47:14.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027848111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027888028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.336" endtime="20201117 14:47:14.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027848111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027888028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.640" endtime="20201117 14:47:14.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.663" endtime="20201117 14:47:14.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.332" endtime="20201117 14:47:14.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.330" endtime="20201117 14:47:14.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.683" level="INFO">${RESULT} = [{'time': 0.027888028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9917000000000424e-05, 'source_diff': 3.9917000000000424e-05}, {'time': 0.027945042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:14.673" endtime="20201117 14:47:14.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.718" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:14.685" endtime="20201117 14:47:14.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.730" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.728" endtime="20201117 14:47:14.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.736" level="INFO">VALUE: [3.9917000000000424e-05, 3.9458999999998634e-05, 3.925000000000109e-05, 3.955599999999962e-05, 3.9555000000000146e-05, 4.006999999999969e-05, 3.9596999999998855e-05, 4.026400000000166e-05, 3.9888999999997815e-05, 3.9332999999999035e-05, 3.9639000000001035e-05, 3.950000000000134e-05, 3.9903000000000854e-05, 4.026400000000166e-05, 3.9625000000001465e-05, 3.9374999999997745e-05, 3.991600000000095e-05, 3.9361000000001645e-05, 3.983399999999901e-05, 3.981999999999944e-05, 3.97920000000003e-05, 3.931999999999894e-05, 3.9611000000001895e-05, 3.97920000000003e-05, 3.94859999999983e-05, 3.9473000000001673e-05, 3.986200000000162e-05, 3.943000000000002e-05, 3.990200000000138e-05, 4.01799999999973e-05, 4.0069000000000216e-05, 4.0040999999997606e-05, 3.9916999999996955e-05, 3.9666999999996705e-05, 3.9818999999999966e-05, 3.9332999999999035e-05, 4.0139000000001535e-05, 3.951399999999744e-05, 4.022199999999948e-05, 3.995799999999966e-05, 3.9360999999998175e-05, 3.9638999999997565e-05, 3.993000000000052e-05, 4.0013000000001936e-05, 3.979199999999683e-05, 3.9582999999999285e-05, 4.022199999999948e-05, 3.9333000000002505e-05, 3.9402999999996885e-05, 3.999999999999837e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.733" endtime="20201117 14:47:14.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.720" endtime="20201117 14:47:14.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.746" endtime="20201117 14:47:14.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.754" endtime="20201117 14:47:14.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.750" endtime="20201117 14:47:14.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.741" endtime="20201117 14:47:14.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.294" endtime="20201117 14:47:14.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.292" endtime="20201117 14:47:14.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.291" endtime="20201117 14:47:14.782"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.787" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.811" endtime="20201117 14:47:14.831"></status>
</kw>
<msg timestamp="20201117 14:47:14.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.808" endtime="20201117 14:47:14.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.835" endtime="20201117 14:47:14.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.842" endtime="20201117 14:47:14.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.800" endtime="20201117 14:47:14.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.793" endtime="20201117 14:47:14.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.871" endtime="20201117 14:47:15.236"></status>
</kw>
<msg timestamp="20201117 14:47:15.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050028111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050069278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.867" endtime="20201117 14:47:15.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050028111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050069278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.246" endtime="20201117 14:47:15.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.267" endtime="20201117 14:47:15.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.858" endtime="20201117 14:47:15.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.852" endtime="20201117 14:47:15.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.287" level="INFO">${RESULT} = [{'time': 0.050069278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1167000000001674e-05, 'source_diff': 4.1167000000001674e-05}, {'time': 0.05012025, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:15.277" endtime="20201117 14:47:15.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.319" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:15.289" endtime="20201117 14:47:15.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.331" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.329" endtime="20201117 14:47:15.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.338" level="INFO">VALUE: [4.1167000000001674e-05, 4.0917000000001424e-05, 4.058400000000323e-05, 4.1153000000002105e-05, 4.077799999999826e-05, 4.058399999999629e-05, 4.051399999999844e-05, 4.0653000000001605e-05, 4.095799999999372e-05, 4.033399999999604e-05, 4.081999999999697e-05, 4.0639000000002035e-05, 4.049999999999887e-05, 4.1026999999999036e-05, 4.0402999999994416e-05, 4.0445000000000064e-05, 4.0318999999996996e-05, 4.072199999999998e-05, 4.0389000000001785e-05, 4.0804999999997926e-05, 4.099999999999937e-05, 4.0625000000002465e-05, 4.0902999999994916e-05, 4.0333000000003505e-05, 4.058400000000323e-05, 4.0903000000001855e-05, 4.1195000000000814e-05, 4.026399999999819e-05, 4.032000000000341e-05, 4.124999999999962e-05, 4.099999999999937e-05, 4.045800000000016e-05, 4.026399999999819e-05, 4.1055000000005115e-05, 4.1166999999994736e-05, 4.0875000000002715e-05, 4.072199999999998e-05, 4.0874999999995776e-05, 4.029200000000427e-05, 4.0846999999996636e-05, 4.052799999999801e-05, 4.0818999999997496e-05, 4.049999999999887e-05, 4.0653000000001605e-05, 4.077799999999826e-05, 4.0652999999994666e-05, 4.047199999999973e-05, 4.031999999999647e-05, 4.083400000000348e-05, 4.0681000000000744e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.334" endtime="20201117 14:47:15.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.321" endtime="20201117 14:47:15.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.347" endtime="20201117 14:47:15.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.356" endtime="20201117 14:47:15.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.352" endtime="20201117 14:47:15.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.343" endtime="20201117 14:47:15.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.789" endtime="20201117 14:47:15.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.785" endtime="20201117 14:47:15.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.783" endtime="20201117 14:47:15.385"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.390" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.413" endtime="20201117 14:47:15.434"></status>
</kw>
<msg timestamp="20201117 14:47:15.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.409" endtime="20201117 14:47:15.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.437" endtime="20201117 14:47:15.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.444" endtime="20201117 14:47:15.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.402" endtime="20201117 14:47:15.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.396" endtime="20201117 14:47:15.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.469" endtime="20201117 14:47:15.835"></status>
</kw>
<msg timestamp="20201117 14:47:15.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049253653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049295889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.465" endtime="20201117 14:47:15.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049253653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049295889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.845" endtime="20201117 14:47:15.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.866" endtime="20201117 14:47:15.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.457" endtime="20201117 14:47:15.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.453" endtime="20201117 14:47:15.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.884" level="INFO">${RESULT} = [{'time': 0.049295889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.223600000000105e-05, 'source_diff': 4.223600000000105e-05}, {'time': 0.049345972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:15.875" endtime="20201117 14:47:15.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.917" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:15.886" endtime="20201117 14:47:15.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.928" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.926" endtime="20201117 14:47:15.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.934" level="INFO">VALUE: [4.223600000000105e-05, 4.1889000000003285e-05, 4.194400000000209e-05, 4.173600000000055e-05, 4.13059999999979e-05, 4.179199999999883e-05, 4.204199999999908e-05, 4.133399999999704e-05, 4.1832999999998066e-05, 4.173600000000055e-05, 4.193000000000252e-05, 4.2068999999998746e-05, 4.147200000000073e-05, 4.1610999999996956e-05, 4.1346999999997136e-05, 4.170800000000141e-05, 4.1832999999998066e-05, 4.194400000000209e-05, 4.182000000000491e-05, 4.2152999999996166e-05, 4.200000000000037e-05, 4.1945000000001564e-05, 4.1375000000003215e-05, 4.1431000000001494e-05, 4.1917000000002425e-05, 4.226400000000019e-05, 4.127799999999876e-05, 4.1582999999997816e-05, 4.2152999999996166e-05, 4.1860999999997206e-05, 4.172200000000098e-05, 4.1860999999997206e-05, 4.1709000000000884e-05, 4.216599999999626e-05, 4.181999999999797e-05, 4.2195000000001814e-05, 4.1417000000001924e-05, 4.1861000000004145e-05, 4.1597000000004325e-05, 4.2124999999997026e-05, 4.1431000000001494e-05, 4.20980000000043e-05, 4.1958999999994195e-05, 4.1389000000002785e-05, 4.2138999999996596e-05, 4.2153000000003105e-05, 4.173600000000055e-05, 4.176399999999969e-05, 4.220800000000191e-05, 4.1818999999998496e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.931" endtime="20201117 14:47:15.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.919" endtime="20201117 14:47:15.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.945" endtime="20201117 14:47:15.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.953" endtime="20201117 14:47:15.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.949" endtime="20201117 14:47:15.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.940" endtime="20201117 14:47:15.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.392" endtime="20201117 14:47:15.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.387" endtime="20201117 14:47:15.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.385" endtime="20201117 14:47:15.981"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.986" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.009" endtime="20201117 14:47:16.029"></status>
</kw>
<msg timestamp="20201117 14:47:16.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.006" endtime="20201117 14:47:16.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.033" endtime="20201117 14:47:16.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.040" endtime="20201117 14:47:16.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.998" endtime="20201117 14:47:16.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.992" endtime="20201117 14:47:16.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.064" endtime="20201117 14:47:16.424"></status>
</kw>
<msg timestamp="20201117 14:47:16.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049383014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049425847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.061" endtime="20201117 14:47:16.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049383014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049425847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.434" endtime="20201117 14:47:16.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.454" endtime="20201117 14:47:16.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.053" endtime="20201117 14:47:16.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.048" endtime="20201117 14:47:16.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.474" level="INFO">${RESULT} = [{'time': 0.049425847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2832999999999066e-05, 'source_diff': 4.2832999999999066e-05}, {'time': 0.049486861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:16.465" endtime="20201117 14:47:16.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.507" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:16.477" endtime="20201117 14:47:16.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.519" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.516" endtime="20201117 14:47:16.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.525" level="INFO">VALUE: [4.2832999999999066e-05, 4.323600000000205e-05, 4.2860999999998206e-05, 4.3209000000002384e-05, 4.2917000000003425e-05, 4.223600000000105e-05, 4.232000000000541e-05, 4.2375000000004215e-05, 4.232000000000541e-05, 4.302700000000104e-05, 4.2445000000002064e-05, 4.3110999999998456e-05, 4.304099999999367e-05, 4.2832999999999066e-05, 4.2610999999997956e-05, 4.2596999999998386e-05, 4.316599999999726e-05, 4.245799999999522e-05, 4.306999999999922e-05, 4.28059999999994e-05, 4.279199999999983e-05, 4.2846999999998636e-05, 4.2318999999998996e-05, 4.295799999999572e-05, 4.3153000000004105e-05, 4.2681000000002745e-05, 4.301400000000094e-05, 4.323600000000205e-05, 4.2473000000001204e-05, 4.291600000000395e-05, 4.3180999999996306e-05, 4.2346999999998136e-05, 4.290199999999744e-05, 4.2583000000005755e-05, 4.2917000000003425e-05, 4.2374999999997276e-05, 4.302700000000104e-05, 4.2318999999998996e-05, 4.302700000000104e-05, 4.302800000000051e-05, 4.3195000000002814e-05, 4.28059999999994e-05, 4.2554999999999676e-05, 4.281999999999897e-05, 4.2388999999996846e-05, 4.272200000000198e-05, 4.277800000000026e-05, 4.2694999999995376e-05, 4.3181000000003245e-05, 4.3223000000001954e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.521" endtime="20201117 14:47:16.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.509" endtime="20201117 14:47:16.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.535" endtime="20201117 14:47:16.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.544" endtime="20201117 14:47:16.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.539" endtime="20201117 14:47:16.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.530" endtime="20201117 14:47:16.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.988" endtime="20201117 14:47:16.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.984" endtime="20201117 14:47:16.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.982" endtime="20201117 14:47:16.571"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.577" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.600" endtime="20201117 14:47:16.621"></status>
</kw>
<msg timestamp="20201117 14:47:16.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.596" endtime="20201117 14:47:16.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.625" endtime="20201117 14:47:16.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.632" endtime="20201117 14:47:16.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.589" endtime="20201117 14:47:16.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.582" endtime="20201117 14:47:16.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.657" endtime="20201117 14:47:17.022"></status>
</kw>
<msg timestamp="20201117 14:47:17.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050051958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050095236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.653" endtime="20201117 14:47:17.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050051958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050095236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.032" endtime="20201117 14:47:17.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.052" endtime="20201117 14:47:17.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.646" endtime="20201117 14:47:17.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.641" endtime="20201117 14:47:17.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.071" level="INFO">${RESULT} = [{'time': 0.050095236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.327800000000076e-05, 'source_diff': 4.327800000000076e-05}, {'time': 0.05015225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:17.061" endtime="20201117 14:47:17.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.107" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:17.074" endtime="20201117 14:47:17.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.119" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.116" endtime="20201117 14:47:17.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.125" level="INFO">VALUE: [4.327800000000076e-05, 4.3625000000005465e-05, 4.3916999999997486e-05, 4.3846999999999636e-05, 4.3596999999999386e-05, 4.39860000000028e-05, 4.4152999999998166e-05, 4.4055000000001177e-05, 4.4166999999997736e-05, 4.3610999999998956e-05, 4.3917000000004425e-05, 4.405600000000065e-05, 4.402700000000204e-05, 4.4083000000000316e-05, 4.373600000000255e-05, 4.3388999999997846e-05, 4.344399999999665e-05, 4.3819000000000496e-05, 4.3860999999999206e-05, 4.373600000000255e-05, 4.38060000000004e-05, 4.350000000000187e-05, 4.354200000000058e-05, 4.39860000000028e-05, 4.373599999999561e-05, 4.355600000000015e-05, 4.3375000000005215e-05, 4.4096999999999886e-05, 4.404200000000108e-05, 4.3875000000005715e-05, 4.426400000000219e-05, 4.392999999999758e-05, 4.352700000000154e-05, 4.423599999999611e-05, 4.3569000000000246e-05, 4.369400000000384e-05, 4.399999999999543e-05, 4.426399999999525e-05, 4.3417000000003925e-05, 4.3402999999997416e-05, 4.3888999999998346e-05, 4.350000000000187e-05, 4.329200000000033e-05, 4.39860000000028e-05, 4.354200000000058e-05, 4.3638999999998096e-05, 4.3346999999999136e-05, 4.333400000000598e-05, 4.3305000000000426e-05, 4.4124999999999026e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.121" endtime="20201117 14:47:17.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.109" endtime="20201117 14:47:17.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.134" endtime="20201117 14:47:17.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.143" endtime="20201117 14:47:17.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.138" endtime="20201117 14:47:17.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.129" endtime="20201117 14:47:17.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.578" endtime="20201117 14:47:17.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.574" endtime="20201117 14:47:17.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.572" endtime="20201117 14:47:17.170"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.176" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.199" endtime="20201117 14:47:17.220"></status>
</kw>
<msg timestamp="20201117 14:47:17.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.195" endtime="20201117 14:47:17.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.224" endtime="20201117 14:47:17.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.231" endtime="20201117 14:47:17.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.188" endtime="20201117 14:47:17.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.182" endtime="20201117 14:47:17.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.255" endtime="20201117 14:47:17.618"></status>
</kw>
<msg timestamp="20201117 14:47:17.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049495486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049540708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.252" endtime="20201117 14:47:17.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049495486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049540708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.628" endtime="20201117 14:47:17.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.649" endtime="20201117 14:47:17.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.244" endtime="20201117 14:47:17.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.239" endtime="20201117 14:47:17.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.671" level="INFO">${RESULT} = [{'time': 0.049540708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.522200000000448e-05, 'source_diff': 4.522200000000448e-05}, {'time': 0.049595694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:17.661" endtime="20201117 14:47:17.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.704" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:17.673" endtime="20201117 14:47:17.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.715" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.713" endtime="20201117 14:47:17.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.721" level="INFO">VALUE: [4.522200000000448e-05, 4.493000000000552e-05, 4.447200000000373e-05, 4.476300000000322e-05, 4.500000000000337e-05, 4.4597000000000386e-05, 4.470799999999747e-05, 4.473599999999661e-05, 4.4416999999997986e-05, 4.4680999999997806e-05, 4.4847000000000636e-05, 4.48060000000014e-05, 4.5166999999998736e-05, 4.482000000000097e-05, 4.4902999999998916e-05, 4.45139999999955e-05, 4.484800000000011e-05, 4.4888999999999346e-05, 4.456999999999378e-05, 4.476400000000269e-05, 4.502800000000251e-05, 4.474999999999618e-05, 4.5097000000000886e-05, 4.473600000000355e-05, 4.4569000000001247e-05, 4.4681000000004745e-05, 4.5097000000000886e-05, 4.4583000000000816e-05, 4.4333000000000566e-05, 4.5138999999999596e-05, 4.4917000000005425e-05, 4.5097000000000886e-05, 4.4459000000003635e-05, 4.4694999999997376e-05, 4.43060000000009e-05, 4.5194999999997876e-05, 4.4680999999997806e-05, 4.4694999999997376e-05, 4.505600000000165e-05, 4.4388999999998846e-05, 4.5209000000004385e-05, 4.5111000000000456e-05, 4.447199999999679e-05, 4.4374999999999276e-05, 4.4874999999999776e-05, 4.479199999999489e-05, 4.4861000000000206e-05, 4.507000000000122e-05, 4.4902999999998916e-05, 4.4874999999999776e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.718" endtime="20201117 14:47:17.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.706" endtime="20201117 14:47:17.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.730" endtime="20201117 14:47:17.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.739" endtime="20201117 14:47:17.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.735" endtime="20201117 14:47:17.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.726" endtime="20201117 14:47:17.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.177" endtime="20201117 14:47:17.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.173" endtime="20201117 14:47:17.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.171" endtime="20201117 14:47:17.766"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.772" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.795" endtime="20201117 14:47:17.816"></status>
</kw>
<msg timestamp="20201117 14:47:17.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.792" endtime="20201117 14:47:17.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.819" endtime="20201117 14:47:17.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.826" endtime="20201117 14:47:17.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.784" endtime="20201117 14:47:17.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.778" endtime="20201117 14:47:17.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.852" endtime="20201117 14:47:18.140"></status>
</kw>
<msg timestamp="20201117 14:47:18.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049066778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049112694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.849" endtime="20201117 14:47:18.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049066778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049112694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.144" endtime="20201117 14:47:18.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.153" endtime="20201117 14:47:18.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.841" endtime="20201117 14:47:18.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.836" endtime="20201117 14:47:18.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.162" level="INFO">${RESULT} = [{'time': 0.049112694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.591600000000001e-05, 'source_diff': 4.591600000000001e-05}, {'time': 0.049171708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:18.157" endtime="20201117 14:47:18.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.176" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:18.163" endtime="20201117 14:47:18.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.181" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.180" endtime="20201117 14:47:18.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.184" level="INFO">VALUE: [4.591600000000001e-05, 4.580500000000293e-05, 4.591600000000001e-05, 4.579100000000336e-05, 4.597199999999829e-05, 4.572200000000498e-05, 4.56939999999989e-05, 4.6166999999999736e-05, 4.613899999999366e-05, 4.5847000000001636e-05, 4.6153000000000166e-05, 4.59860000000048e-05, 4.6166999999999736e-05, 4.5681000000005745e-05, 4.579200000000283e-05, 4.529200000000233e-05, 4.584799999999417e-05, 4.595799999999872e-05, 4.5347000000001136e-05, 4.523599999999711e-05, 4.620800000000591e-05, 4.5361000000000706e-05, 4.559699999999445e-05, 4.549999999999693e-05, 4.530599999999496e-05, 4.600000000000437e-05, 4.529199999999539e-05, 4.5361000000000706e-05, 4.5930999999999056e-05, 4.559800000000086e-05, 4.6139000000000596e-05, 4.623599999999811e-05, 4.575000000000412e-05, 4.604199999999614e-05, 4.5694999999998376e-05, 4.6125000000001026e-05, 4.604099999999667e-05, 4.606900000000275e-05, 4.548599999999736e-05, 4.552799999999607e-05, 4.548599999999736e-05, 4.5639000000000096e-05, 4.5930999999999056e-05, 4.595799999999872e-05, 4.595799999999872e-05, 4.5847000000001636e-05, 4.523599999999711e-05, 4.570799999999847e-05, 4.5416999999998986e-05, 4.5916999999999486e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.182" endtime="20201117 14:47:18.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.177" endtime="20201117 14:47:18.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.188" endtime="20201117 14:47:18.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.192" endtime="20201117 14:47:18.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.190" endtime="20201117 14:47:18.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.186" endtime="20201117 14:47:18.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.773" endtime="20201117 14:47:18.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.769" endtime="20201117 14:47:18.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.767" endtime="20201117 14:47:18.214"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.217" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.227" endtime="20201117 14:47:18.244"></status>
</kw>
<msg timestamp="20201117 14:47:18.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.226" endtime="20201117 14:47:18.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.246" endtime="20201117 14:47:18.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.250" endtime="20201117 14:47:18.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.222" endtime="20201117 14:47:18.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.219" endtime="20201117 14:47:18.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.261" endtime="20201117 14:47:18.548"></status>
</kw>
<msg timestamp="20201117 14:47:18.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027550514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027597611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.259" endtime="20201117 14:47:18.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027550514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027597611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.553" endtime="20201117 14:47:18.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.562" endtime="20201117 14:47:18.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.256" endtime="20201117 14:47:18.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.254" endtime="20201117 14:47:18.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.571" level="INFO">${RESULT} = [{'time': 0.027597611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.709699999999942e-05, 'source_diff': 4.709699999999942e-05}, {'time': 0.027658625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:18.567" endtime="20201117 14:47:18.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.585" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:18.572" endtime="20201117 14:47:18.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.591" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.589" endtime="20201117 14:47:18.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.593" level="INFO">VALUE: [4.709699999999942e-05, 4.7013999999998e-05, 4.695799999999972e-05, 4.71529999999977e-05, 4.6430999999999556e-05, 4.704200000000061e-05, 4.698599999999886e-05, 4.6903000000000916e-05, 4.724999999999868e-05, 4.662499999999806e-05, 4.670799999999947e-05, 4.7194999999999876e-05, 4.680500000000046e-05, 4.702800000000104e-05, 4.626299999999778e-05, 4.699999999999843e-05, 4.693000000000058e-05, 4.659699999999892e-05, 4.723599999999911e-05, 4.63329999999991e-05, 4.706900000000028e-05, 4.668000000000033e-05, 4.673599999999861e-05, 4.6667000000000236e-05, 4.6319999999999e-05, 4.661099999999849e-05, 4.654200000000011e-05, 4.6903000000000916e-05, 4.6625000000001526e-05, 4.680500000000046e-05, 4.73330000000001e-05, 4.6931000000000056e-05, 4.720799999999997e-05, 4.711099999999899e-05, 4.640200000000094e-05, 4.641600000000051e-05, 4.65139999999975e-05, 4.629199999999986e-05, 4.699999999999843e-05, 4.6944999999999626e-05, 4.6917000000000486e-05, 4.652800000000054e-05, 4.673600000000208e-05, 4.672199999999904e-05, 4.633400000000204e-05, 4.698600000000233e-05, 4.702800000000104e-05, 4.662499999999806e-05, 4.643000000000008e-05, 4.672200000000251e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.592" endtime="20201117 14:47:18.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.586" endtime="20201117 14:47:18.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.598" endtime="20201117 14:47:18.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.602" endtime="20201117 14:47:18.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.600" endtime="20201117 14:47:18.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.595" endtime="20201117 14:47:18.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.217" endtime="20201117 14:47:18.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.215" endtime="20201117 14:47:18.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.215" endtime="20201117 14:47:18.623"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.626" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.637" endtime="20201117 14:47:18.654"></status>
</kw>
<msg timestamp="20201117 14:47:18.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.636" endtime="20201117 14:47:18.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.656" endtime="20201117 14:47:18.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.659" endtime="20201117 14:47:18.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.632" endtime="20201117 14:47:18.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.629" endtime="20201117 14:47:18.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.671" endtime="20201117 14:47:19.014"></status>
</kw>
<msg timestamp="20201117 14:47:19.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027966694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028014847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.669" endtime="20201117 14:47:19.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027966694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028014847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.024" endtime="20201117 14:47:19.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.044" endtime="20201117 14:47:19.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.666" endtime="20201117 14:47:19.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.663" endtime="20201117 14:47:19.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.063" level="INFO">${RESULT} = [{'time': 0.028014847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.81529999999987e-05, 'source_diff': 4.81529999999987e-05}, {'time': 0.028077847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:19.053" endtime="20201117 14:47:19.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.098" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:19.065" endtime="20201117 14:47:19.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.110" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.108" endtime="20201117 14:47:19.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.116" level="INFO">VALUE: [4.81529999999987e-05, 4.731900000000053e-05, 4.748599999999936e-05, 4.790199999999897e-05, 4.779199999999789e-05, 4.758300000000035e-05, 4.81529999999987e-05, 4.790299999999845e-05, 4.783299999999713e-05, 4.745800000000022e-05, 4.740299999999795e-05, 4.772200000000004e-05, 4.802799999999857e-05, 4.757000000000025e-05, 4.7917000000001486e-05, 4.7959000000000196e-05, 4.783400000000007e-05, 4.790200000000244e-05, 4.770800000000047e-05, 4.740199999999847e-05, 4.799999999999943e-05, 4.755500000000121e-05, 4.770800000000047e-05, 4.819399999999793e-05, 4.816699999999827e-05, 4.7445000000000126e-05, 4.784700000000017e-05, 4.7695000000000376e-05, 4.816699999999827e-05, 4.747199999999979e-05, 4.758399999999982e-05, 4.752800000000154e-05, 4.7472999999999266e-05, 4.757000000000025e-05, 4.788800000000287e-05, 4.756899999999731e-05, 4.759699999999992e-05, 4.799999999999943e-05, 4.804099999999867e-05, 4.770800000000047e-05, 4.777699999999885e-05, 4.812499999999956e-05, 4.767999999999786e-05, 4.816699999999827e-05, 4.7917000000001486e-05, 4.730600000000043e-05, 4.798599999999986e-05, 4.7431000000000556e-05, 4.783400000000007e-05, 4.7903000000001916e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.113" endtime="20201117 14:47:19.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.100" endtime="20201117 14:47:19.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.126" endtime="20201117 14:47:19.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.134" endtime="20201117 14:47:19.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.130" endtime="20201117 14:47:19.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.121" endtime="20201117 14:47:19.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.627" endtime="20201117 14:47:19.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.625" endtime="20201117 14:47:19.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.624" endtime="20201117 14:47:19.162"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.168" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.191" endtime="20201117 14:47:19.213"></status>
</kw>
<msg timestamp="20201117 14:47:19.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.187" endtime="20201117 14:47:19.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.216" endtime="20201117 14:47:19.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.223" endtime="20201117 14:47:19.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.180" endtime="20201117 14:47:19.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.174" endtime="20201117 14:47:19.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.248" endtime="20201117 14:47:19.614"></status>
</kw>
<msg timestamp="20201117 14:47:19.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050383903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050432972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.244" endtime="20201117 14:47:19.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050383903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050432972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.624" endtime="20201117 14:47:19.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.644" endtime="20201117 14:47:19.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.237" endtime="20201117 14:47:19.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.232" endtime="20201117 14:47:19.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.664" level="INFO">${RESULT} = [{'time': 0.050432972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.906899999999881e-05, 'source_diff': 4.906899999999881e-05}, {'time': 0.050500944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.655" endtime="20201117 14:47:19.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.697" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:19.667" endtime="20201117 14:47:19.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.710" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.707" endtime="20201117 14:47:19.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.716" level="INFO">VALUE: [4.906899999999881e-05, 4.877699999999985e-05, 4.879099999999942e-05, 4.900000000000043e-05, 4.9193999999995464e-05, 4.887499999999684e-05, 4.9237000000000586e-05, 4.856899999999831e-05, 4.855599999999821e-05, 4.908299999999838e-05, 4.9207999999995033e-05, 4.87219999999941e-05, 4.904199999999914e-05, 4.920899999999451e-05, 4.897299999999383e-05, 4.836099999999677e-05, 4.873600000000061e-05, 4.894400000000215e-05, 4.8429999999995144e-05, 4.877699999999985e-05, 4.925000000000068e-05, 4.840200000000294e-05, 4.8707999999994533e-05, 4.923600000000111e-05, 4.8653000000002666e-05, 4.9165999999996324e-05, 4.875000000000018e-05, 4.922200000000154e-05, 4.8361000000003707e-05, 4.8959000000001196e-05, 4.865299999999573e-05, 4.836199999999624e-05, 4.855599999999821e-05, 4.8987000000000336e-05, 4.8459000000000696e-05, 4.904099999999967e-05, 4.88469999999977e-05, 4.9179999999995894e-05, 4.8889000000003346e-05, 4.897200000000129e-05, 4.908299999999838e-05, 4.8457999999994283e-05, 4.8417000000001986e-05, 4.913899999999666e-05, 4.859700000000439e-05, 4.8417000000001986e-05, 4.859700000000439e-05, 4.8375000000003276e-05, 4.836199999999624e-05, 4.89869999999934e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.712" endtime="20201117 14:47:19.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.700" endtime="20201117 14:47:19.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.726" endtime="20201117 14:47:19.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.735" endtime="20201117 14:47:19.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.730" endtime="20201117 14:47:19.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.721" endtime="20201117 14:47:19.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.169" endtime="20201117 14:47:19.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.165" endtime="20201117 14:47:19.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.163" endtime="20201117 14:47:19.763"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.768" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.791" endtime="20201117 14:47:19.812"></status>
</kw>
<msg timestamp="20201117 14:47:19.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.788" endtime="20201117 14:47:19.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.815" endtime="20201117 14:47:19.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.822" endtime="20201117 14:47:19.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.780" endtime="20201117 14:47:19.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.774" endtime="20201117 14:47:19.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.847" endtime="20201117 14:47:20.210"></status>
</kw>
<msg timestamp="20201117 14:47:20.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049435889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049485417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.843" endtime="20201117 14:47:20.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049435889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049485417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.221" endtime="20201117 14:47:20.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.241" endtime="20201117 14:47:20.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.836" endtime="20201117 14:47:20.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.831" endtime="20201117 14:47:20.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:20.259" level="INFO">${RESULT} = [{'time': 0.049485417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.952800000000007e-05, 'source_diff': 4.952800000000007e-05}, {'time': 0.049554444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:20.250" endtime="20201117 14:47:20.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.292" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:20.262" endtime="20201117 14:47:20.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.304" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.302" endtime="20201117 14:47:20.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.310" level="INFO">VALUE: [4.952800000000007e-05, 5.001300000000153e-05, 4.926400000000025e-05, 4.954199999999964e-05, 4.937499999999734e-05, 4.999999999999449e-05, 5.015200000000469e-05, 4.955499999999974e-05, 5.009699999999895e-05, 4.958300000000582e-05, 4.940299999999648e-05, 4.981899999999956e-05, 4.972200000000204e-05, 5.0181000000003306e-05, 4.9653000000003666e-05, 4.947200000000179e-05, 4.940299999999648e-05, 4.9931000000003056e-05, 4.961099999999802e-05, 5.025000000000168e-05, 4.9417000000002986e-05, 4.9737000000001086e-05, 5.011099999999852e-05, 4.941600000000351e-05, 4.940200000000394e-05, 4.973600000000161e-05, 4.973600000000161e-05, 4.9319000000006e-05, 4.930499999999949e-05, 5.002800000000057e-05, 4.936099999999777e-05, 4.955599999999921e-05, 4.9667000000003236e-05, 4.940200000000394e-05, 5.013899999999766e-05, 5.01669999999968e-05, 4.981999999999903e-05, 5.006899999999981e-05, 4.952800000000007e-05, 4.983299999999913e-05, 4.936100000000471e-05, 5.001300000000153e-05, 4.930499999999949e-05, 5.002800000000057e-05, 5.012499999999809e-05, 4.954199999999964e-05, 4.952800000000007e-05, 5.011100000000546e-05, 4.9889000000004347e-05, 4.981899999999956e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.306" endtime="20201117 14:47:20.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.294" endtime="20201117 14:47:20.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.320" endtime="20201117 14:47:20.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.329" endtime="20201117 14:47:20.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.324" endtime="20201117 14:47:20.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.315" endtime="20201117 14:47:20.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.770" endtime="20201117 14:47:20.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.765" endtime="20201117 14:47:20.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.764" endtime="20201117 14:47:20.356"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.362" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.385" endtime="20201117 14:47:20.405"></status>
</kw>
<msg timestamp="20201117 14:47:20.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.381" endtime="20201117 14:47:20.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.409" endtime="20201117 14:47:20.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.415" endtime="20201117 14:47:20.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.374" endtime="20201117 14:47:20.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.367" endtime="20201117 14:47:20.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.440" endtime="20201117 14:47:20.799"></status>
</kw>
<msg timestamp="20201117 14:47:20.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04928725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049338278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:20.437" endtime="20201117 14:47:20.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04928725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049338278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:20.808" endtime="20201117 14:47:20.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.827" endtime="20201117 14:47:20.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.429" endtime="20201117 14:47:20.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.424" endtime="20201117 14:47:20.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:20.847" level="INFO">${RESULT} = [{'time': 0.049338278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.102800000000157e-05, 'source_diff': 5.102800000000157e-05}, {'time': 0.049398333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:20.838" endtime="20201117 14:47:20.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.879" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:20.850" endtime="20201117 14:47:20.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.890" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.887" endtime="20201117 14:47:20.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.895" level="INFO">VALUE: [5.102800000000157e-05, 5.077700000000185e-05, 5.0709000000002946e-05, 5.1151999999998754e-05, 5.03339999999991e-05, 5.041699999999705e-05, 5.031999999999953e-05, 5.03469999999992e-05, 5.056900000000031e-05, 5.079100000000142e-05, 5.031900000000006e-05, 5.044400000000365e-05, 5.104200000000114e-05, 5.094400000000415e-05, 5.118099999999737e-05, 5.072200000000304e-05, 5.040299999999748e-05, 5.094499999999669e-05, 5.06669999999973e-05, 5.058299999999988e-05, 5.08339999999996e-05, 5.0723000000002516e-05, 5.038899999999791e-05, 5.056999999999978e-05, 5.052800000000107e-05, 5.108399999999985e-05, 5.0431000000003556e-05, 5.029100000000092e-05, 5.038899999999791e-05, 5.030500000000049e-05, 5.048600000000236e-05, 5.077800000000132e-05, 5.069499999999644e-05, 5.095800000000372e-05, 5.108399999999985e-05, 5.0693999999996964e-05, 5.075000000000218e-05, 5.090299999999798e-05, 5.1181000000004306e-05, 5.102800000000157e-05, 5.108300000000038e-05, 5.0389000000004847e-05, 5.0959000000003196e-05, 5.0723000000002516e-05, 5.054100000000117e-05, 5.097200000000329e-05, 5.03469999999992e-05, 5.10270000000021e-05, 5.097200000000329e-05, 5.029200000000039e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.892" endtime="20201117 14:47:20.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.880" endtime="20201117 14:47:20.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.904" endtime="20201117 14:47:20.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.913" endtime="20201117 14:47:20.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.908" endtime="20201117 14:47:20.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.900" endtime="20201117 14:47:20.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.363" endtime="20201117 14:47:20.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.359" endtime="20201117 14:47:20.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.357" endtime="20201117 14:47:20.939"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.945" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.967" endtime="20201117 14:47:20.987"></status>
</kw>
<msg timestamp="20201117 14:47:20.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.963" endtime="20201117 14:47:20.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.991" endtime="20201117 14:47:20.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.997" endtime="20201117 14:47:21.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.956" endtime="20201117 14:47:21.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.950" endtime="20201117 14:47:21.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.021" endtime="20201117 14:47:21.366"></status>
</kw>
<msg timestamp="20201117 14:47:21.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047265528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047317375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.017" endtime="20201117 14:47:21.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047265528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047317375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.376" endtime="20201117 14:47:21.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.396" endtime="20201117 14:47:21.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.010" endtime="20201117 14:47:21.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.005" endtime="20201117 14:47:21.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.414" level="INFO">${RESULT} = [{'time': 0.047317375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.18470000000007e-05, 'source_diff': 5.18470000000007e-05}, {'time': 0.047380403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:21.405" endtime="20201117 14:47:21.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.448" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:21.416" endtime="20201117 14:47:21.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.459" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.457" endtime="20201117 14:47:21.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.464" level="INFO">VALUE: [5.18470000000007e-05, 5.172200000000404e-05, 5.179200000000189e-05, 5.13470000000002e-05, 5.126400000000225e-05, 5.193099999999812e-05, 5.208299999999444e-05, 5.127800000000182e-05, 5.183300000000113e-05, 5.127800000000182e-05, 5.137499999999934e-05, 5.176400000000275e-05, 5.186100000000027e-05, 5.213899999999966e-05, 5.133300000000063e-05, 5.177800000000232e-05, 5.16390000000061e-05, 5.209700000000095e-05, 5.2223000000004016e-05, 5.140299999999848e-05, 5.162499999999959e-05, 5.204200000000214e-05, 5.191699999999855e-05, 5.18470000000007e-05, 5.194499999999769e-05, 5.127800000000182e-05, 5.130600000000096e-05, 5.127700000000235e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.1915999999999074e-05, 5.161100000000002e-05, 5.154100000000217e-05, 5.136099999999977e-05, 5.220800000000497e-05, 5.1749999999996243e-05, 5.1943999999998214e-05, 5.132000000000053e-05, 5.1971999999997354e-05, 5.162499999999959e-05, 5.145899999999676e-05, 5.193099999999812e-05, 5.204099999999573e-05, 5.204200000000214e-05, 5.14869999999959e-05, 5.1429999999998144e-05, 5.1693999999997964e-05, 5.1665999999998824e-05, 5.155500000000174e-05, 5.194400000000515e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.461" endtime="20201117 14:47:21.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.450" endtime="20201117 14:47:21.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.473" endtime="20201117 14:47:21.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.482" endtime="20201117 14:47:21.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.477" endtime="20201117 14:47:21.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.469" endtime="20201117 14:47:21.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.946" endtime="20201117 14:47:21.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.942" endtime="20201117 14:47:21.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.940" endtime="20201117 14:47:21.508"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.514" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.536" endtime="20201117 14:47:21.556"></status>
</kw>
<msg timestamp="20201117 14:47:21.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.532" endtime="20201117 14:47:21.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.559" endtime="20201117 14:47:21.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.566" endtime="20201117 14:47:21.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.525" endtime="20201117 14:47:21.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.519" endtime="20201117 14:47:21.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.590" endtime="20201117 14:47:21.936"></status>
</kw>
<msg timestamp="20201117 14:47:21.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047176819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047229181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.586" endtime="20201117 14:47:21.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047176819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047229181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.945" endtime="20201117 14:47:21.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.965" endtime="20201117 14:47:21.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.579" endtime="20201117 14:47:21.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.574" endtime="20201117 14:47:21.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.984" level="INFO">${RESULT} = [{'time': 0.047229181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.236200000000024e-05, 'source_diff': 5.236200000000024e-05}, {'time': 0.047292167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:21.975" endtime="20201117 14:47:21.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.015" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:21.986" endtime="20201117 14:47:22.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.026" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.024" endtime="20201117 14:47:22.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.032" level="INFO">VALUE: [5.236200000000024e-05, 5.2945000000005626e-05, 5.309800000000142e-05, 5.255600000000221e-05, 5.254100000000317e-05, 5.2487000000003836e-05, 5.2513999999996563e-05, 5.284699999999476e-05, 5.30270000000041e-05, 5.312500000000109e-05, 5.2943999999999214e-05, 5.290299999999998e-05, 5.265299999999973e-05, 5.302799999999663e-05, 5.290299999999998e-05, 5.31669999999998e-05, 5.294499999999869e-05, 5.243099999999862e-05, 5.3249999999997744e-05, 5.2499999999996994e-05, 5.3221999999998604e-05, 5.31669999999998e-05, 5.2457999999998284e-05, 5.273600000000461e-05, 5.237500000000034e-05, 5.256900000000231e-05, 5.330600000000296e-05, 5.30549999999963e-05, 5.263899999999322e-05, 5.302799999999663e-05, 5.2471999999997854e-05, 5.230600000000196e-05, 5.311100000000152e-05, 5.258400000000135e-05, 5.261200000000049e-05, 5.275000000000418e-05, 5.2499999999996994e-05, 5.262500000000059e-05, 5.283300000000213e-05, 5.305500000000324e-05, 5.263900000000016e-05, 5.313899999999372e-05, 5.262500000000059e-05, 5.291699999999955e-05, 5.276400000000375e-05, 5.3207999999999034e-05, 5.2679999999999394e-05, 5.26940000000059e-05, 5.2485999999997424e-05, 5.23340000000011e-05]</msg>
<status status="PASS" starttime="20201117 14:47:22.029" endtime="20201117 14:47:22.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.017" endtime="20201117 14:47:22.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.041" endtime="20201117 14:47:22.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.049" endtime="20201117 14:47:22.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.045" endtime="20201117 14:47:22.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.036" endtime="20201117 14:47:22.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.515" endtime="20201117 14:47:22.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.511" endtime="20201117 14:47:22.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.509" endtime="20201117 14:47:22.076"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.081" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.103" endtime="20201117 14:47:22.124"></status>
</kw>
<msg timestamp="20201117 14:47:22.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.100" endtime="20201117 14:47:22.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.127" endtime="20201117 14:47:22.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.135" endtime="20201117 14:47:22.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.092" endtime="20201117 14:47:22.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.087" endtime="20201117 14:47:22.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.158" endtime="20201117 14:47:22.503"></status>
</kw>
<msg timestamp="20201117 14:47:22.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047186472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047239875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.155" endtime="20201117 14:47:22.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047186472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047239875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.512" endtime="20201117 14:47:22.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.532" endtime="20201117 14:47:22.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.148" endtime="20201117 14:47:22.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.143" endtime="20201117 14:47:22.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:22.549" level="INFO">${RESULT} = [{'time': 0.047239875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.340300000000048e-05, 'source_diff': 5.340300000000048e-05}, {'time': 0.047305875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:22.540" endtime="20201117 14:47:22.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.581" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:22.552" endtime="20201117 14:47:22.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.592" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.590" endtime="20201117 14:47:22.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.598" level="INFO">VALUE: [5.340300000000048e-05, 5.405599999999677e-05, 5.35140000000045e-05, 5.418100000000037e-05, 5.3999999999998494e-05, 5.337500000000134e-05, 5.391699999999361e-05, 5.363900000000116e-05, 5.412500000000209e-05, 5.3499999999997994e-05, 5.4180000000000894e-05, 5.330599999999602e-05, 5.381899999999662e-05, 5.354100000000417e-05, 5.3457999999999284e-05, 5.331899999999612e-05, 5.363900000000116e-05, 5.418099999999343e-05, 5.334699999999526e-05, 5.3527999999997133e-05, 5.3721999999999104e-05, 5.333299999999569e-05, 5.361100000000202e-05, 5.413900000000166e-05, 5.352800000000407e-05, 5.420899999999951e-05, 5.380499999999705e-05, 5.35549999999968e-05, 5.34869999999979e-05, 5.362500000000159e-05, 5.333300000000263e-05, 5.3944000000000214e-05, 5.3763999999997814e-05, 5.4208000000000034e-05, 5.333300000000263e-05, 5.411200000000199e-05, 5.365300000000073e-05, 5.356999999999584e-05, 5.354200000000364e-05, 5.3471999999998854e-05, 5.4013999999998064e-05, 5.394499999999969e-05, 5.4208000000000034e-05, 5.382000000000303e-05, 5.363900000000116e-05, 5.325000000000468e-05, 5.415300000000123e-05, 5.3666000000000824e-05, 5.358300000000288e-05, 5.4194000000000464e-05]</msg>
<status status="PASS" starttime="20201117 14:47:22.594" endtime="20201117 14:47:22.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.583" endtime="20201117 14:47:22.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.606" endtime="20201117 14:47:22.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.615" endtime="20201117 14:47:22.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.610" endtime="20201117 14:47:22.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.602" endtime="20201117 14:47:22.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.083" endtime="20201117 14:47:22.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.078" endtime="20201117 14:47:22.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.077" endtime="20201117 14:47:22.641"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.647" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.669" endtime="20201117 14:47:22.690"></status>
</kw>
<msg timestamp="20201117 14:47:22.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.666" endtime="20201117 14:47:22.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.693" endtime="20201117 14:47:22.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.700" endtime="20201117 14:47:22.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.658" endtime="20201117 14:47:22.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.652" endtime="20201117 14:47:22.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.724" endtime="20201117 14:47:23.069"></status>
</kw>
<msg timestamp="20201117 14:47:23.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047884, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047938931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:22.720" endtime="20201117 14:47:23.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047884, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047938931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:23.078" endtime="20201117 14:47:23.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.097" endtime="20201117 14:47:23.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.713" endtime="20201117 14:47:23.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.708" endtime="20201117 14:47:23.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.117" level="INFO">${RESULT} = [{'time': 0.047938931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.493099999999418e-05, 'source_diff': 5.493099999999418e-05}, {'time': 0.048007944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:23.108" endtime="20201117 14:47:23.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.148" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:23.119" endtime="20201117 14:47:23.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.159" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.157" endtime="20201117 14:47:23.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.165" level="INFO">VALUE: [5.493099999999418e-05, 5.4387999999995496e-05, 5.49869999999994e-05, 5.44869999999989e-05, 5.4915999999995135e-05, 5.51670000000018e-05, 5.5013999999999064e-05, 5.431900000000406e-05, 5.48749999999959e-05, 5.4722000000000104e-05, 5.4985999999999924e-05, 5.455599999999727e-05, 5.515300000000223e-05, 5.458399999999641e-05, 5.469500000000044e-05, 5.458300000000388e-05, 5.508399999999691e-05, 5.4749999999999244e-05, 5.511100000000352e-05, 5.430600000000396e-05, 5.4944000000001214e-05, 5.4777999999998384e-05, 5.479099999999848e-05, 5.515300000000223e-05, 5.483299999999719e-05, 5.4694000000000964e-05, 5.4485999999999424e-05, 5.430500000000449e-05, 5.48749999999959e-05, 5.443100000000062e-05, 5.48749999999959e-05, 5.488900000000241e-05, 5.4541999999997703e-05, 5.43749999999954e-05, 5.51670000000018e-05, 5.5041999999998203e-05, 5.5165999999995385e-05, 5.4777999999998384e-05, 5.4999999999999494e-05, 5.48470000000037e-05, 5.5151999999995815e-05, 5.512500000000309e-05, 5.431899999999712e-05, 5.461099999999608e-05, 5.4541999999997703e-05, 5.508300000000438e-05, 5.515299999999529e-05, 5.5027999999998634e-05, 5.459699999999651e-05, 5.490300000000198e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.161" endtime="20201117 14:47:23.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.150" endtime="20201117 14:47:23.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.173" endtime="20201117 14:47:23.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.182" endtime="20201117 14:47:23.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.177" endtime="20201117 14:47:23.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.169" endtime="20201117 14:47:23.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.648" endtime="20201117 14:47:23.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.644" endtime="20201117 14:47:23.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.642" endtime="20201117 14:47:23.209"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.215" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.237" endtime="20201117 14:47:23.257"></status>
</kw>
<msg timestamp="20201117 14:47:23.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.233" endtime="20201117 14:47:23.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.260" endtime="20201117 14:47:23.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.267" endtime="20201117 14:47:23.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.226" endtime="20201117 14:47:23.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.220" endtime="20201117 14:47:23.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.291" endtime="20201117 14:47:23.635"></status>
</kw>
<msg timestamp="20201117 14:47:23.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048101806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048157458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.287" endtime="20201117 14:47:23.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048101806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048157458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.645" endtime="20201117 14:47:23.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.664" endtime="20201117 14:47:23.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.280" endtime="20201117 14:47:23.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.275" endtime="20201117 14:47:23.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.682" level="INFO">${RESULT} = [{'time': 0.048157458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5652000000003254e-05, 'source_diff': 5.5652000000003254e-05}, {'time': 0.048231458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:23.673" endtime="20201117 14:47:23.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.716" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:23.684" endtime="20201117 14:47:23.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.727" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.725" endtime="20201117 14:47:23.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.733" level="INFO">VALUE: [5.5652000000003254e-05, 5.538899999999597e-05, 5.533300000000463e-05, 5.619500000000194e-05, 5.5277999999998884e-05, 5.540299999999554e-05, 5.540300000000248e-05, 5.616699999999586e-05, 5.619500000000194e-05, 5.563900000000316e-05, 5.543100000000162e-05, 5.595899999999432e-05, 5.555600000000521e-05, 5.556999999999784e-05, 5.558299999999794e-05, 5.608299999999844e-05, 5.6277999999999884e-05, 5.6194000000002464e-05, 5.581899999999862e-05, 5.538900000000291e-05, 5.5708000000001534e-05, 5.590300000000298e-05, 5.5972000000001354e-05, 5.556999999999784e-05, 5.595900000000126e-05, 5.569500000000144e-05, 5.622300000000108e-05, 5.570899999999407e-05, 5.568100000000187e-05, 5.6222000000001604e-05, 5.590300000000298e-05, 5.5458000000001284e-05, 5.6221999999994665e-05, 5.5513999999999564e-05, 5.580499999999905e-05, 5.530499999999855e-05, 5.6179999999995955e-05, 5.6193999999995525e-05, 5.558299999999794e-05, 5.5736000000000674e-05, 5.6250000000000744e-05, 5.536099999999683e-05, 5.6014000000000064e-05, 5.6027999999999634e-05, 5.556999999999784e-05, 5.5637999999996746e-05, 5.583299999999819e-05, 5.5472000000000854e-05, 5.6151999999996816e-05, 5.608299999999844e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.729" endtime="20201117 14:47:23.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.718" endtime="20201117 14:47:23.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.742" endtime="20201117 14:47:23.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.751" endtime="20201117 14:47:23.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.746" endtime="20201117 14:47:23.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.738" endtime="20201117 14:47:23.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.216" endtime="20201117 14:47:23.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.212" endtime="20201117 14:47:23.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.210" endtime="20201117 14:47:23.777"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.783" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.805" endtime="20201117 14:47:23.823"></status>
</kw>
<msg timestamp="20201117 14:47:23.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.801" endtime="20201117 14:47:23.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.825" endtime="20201117 14:47:23.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.828" endtime="20201117 14:47:23.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.794" endtime="20201117 14:47:23.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.788" endtime="20201117 14:47:23.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.840" endtime="20201117 14:47:24.169"></status>
</kw>
<msg timestamp="20201117 14:47:24.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047029639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047086083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.838" endtime="20201117 14:47:24.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047029639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047086083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.179" endtime="20201117 14:47:24.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.198" endtime="20201117 14:47:24.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.835" endtime="20201117 14:47:24.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.832" endtime="20201117 14:47:24.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.218" level="INFO">${RESULT} = [{'time': 0.047086083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6444000000002714e-05, 'source_diff': 5.6444000000002714e-05}, {'time': 0.047159097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:24.208" endtime="20201117 14:47:24.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.249" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:24.220" endtime="20201117 14:47:24.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.260" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.258" endtime="20201117 14:47:24.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.266" level="INFO">VALUE: [5.6444000000002714e-05, 5.662499999999765e-05, 5.641699999999611e-05, 5.6736000000001674e-05, 5.7221999999995665e-05, 5.636099999999783e-05, 5.633299999999869e-05, 5.6778000000000384e-05, 5.6264000000000314e-05, 5.6541999999999704e-05, 5.693099999999618e-05, 5.688899999999747e-05, 5.6305999999999023e-05, 5.658299999999894e-05, 5.7137999999998246e-05, 5.7250000000001744e-05, 5.686099999999833e-05, 5.712499999999815e-05, 5.708299999999944e-05, 5.6986000000001924e-05, 5.691700000000355e-05, 5.643100000000262e-05, 5.641700000000305e-05, 5.636099999999783e-05, 5.697300000000183e-05, 5.633399999999816e-05, 5.6665999999996886e-05, 5.7000000000001494e-05, 5.6415999999996636e-05, 5.709700000000595e-05, 5.6402000000004004e-05, 5.659699999999851e-05, 5.663899999999722e-05, 5.662500000000459e-05, 5.636099999999783e-05, 5.636099999999783e-05, 5.690300000000398e-05, 5.681899999999962e-05, 5.637500000000434e-05, 5.68340000000056e-05, 5.7013999999994125e-05, 5.708299999999944e-05, 5.6443999999995775e-05, 5.694500000000269e-05, 5.686200000000474e-05, 5.6930000000003644e-05, 5.633300000000563e-05, 5.6915999999997136e-05, 5.6722000000002104e-05, 5.716699999999686e-05]</msg>
<status status="PASS" starttime="20201117 14:47:24.262" endtime="20201117 14:47:24.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.251" endtime="20201117 14:47:24.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.275" endtime="20201117 14:47:24.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.284" endtime="20201117 14:47:24.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.279" endtime="20201117 14:47:24.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.271" endtime="20201117 14:47:24.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.784" endtime="20201117 14:47:24.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.780" endtime="20201117 14:47:24.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.778" endtime="20201117 14:47:24.310"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.316" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.337" endtime="20201117 14:47:24.358"></status>
</kw>
<msg timestamp="20201117 14:47:24.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.334" endtime="20201117 14:47:24.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.362" endtime="20201117 14:47:24.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.368" endtime="20201117 14:47:24.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.327" endtime="20201117 14:47:24.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.321" endtime="20201117 14:47:24.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.392" endtime="20201117 14:47:24.734"></status>
</kw>
<msg timestamp="20201117 14:47:24.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047111333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047169208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.388" endtime="20201117 14:47:24.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047111333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047169208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.744" endtime="20201117 14:47:24.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.764" endtime="20201117 14:47:24.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.381" endtime="20201117 14:47:24.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.376" endtime="20201117 14:47:24.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.782" level="INFO">${RESULT} = [{'time': 0.047169208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.78749999999989e-05, 'source_diff': 5.78749999999989e-05}, {'time': 0.047247222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:24.772" endtime="20201117 14:47:24.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.814" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:24.784" endtime="20201117 14:47:24.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.825" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.822" endtime="20201117 14:47:24.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.830" level="INFO">VALUE: [5.78749999999989e-05, 5.813899999999872e-05, 5.7750000000002244e-05, 5.729100000000098e-05, 5.7930000000004644e-05, 5.733299999999969e-05, 5.7458000000003284e-05, 5.808300000000044e-05, 5.8042000000001204e-05, 5.76949999999965e-05, 5.7319999999999593e-05, 5.7721999999996165e-05, 5.822299999999614e-05, 5.7721999999996165e-05, 5.8097999999999483e-05, 5.8305999999994085e-05, 5.7499999999995055e-05, 5.7250000000001744e-05, 5.8166000000005325e-05, 5.7749999999995305e-05, 5.76670000000043e-05, 5.7500000000001994e-05, 5.788899999999847e-05, 5.756900000000037e-05, 5.7985999999995985e-05, 5.7556000000000274e-05, 5.8263999999995375e-05, 5.818099999999743e-05, 5.7333999999999163e-05, 5.8083999999999913e-05, 5.734699999999926e-05, 5.8137999999999246e-05, 5.730500000000055e-05, 5.8264000000002314e-05, 5.7514000000001564e-05, 5.763899999999822e-05, 5.815299999999829e-05, 5.7778000000001384e-05, 5.791699999999761e-05, 5.7958000000003784e-05, 5.7958000000003784e-05, 5.78749999999989e-05, 5.7500000000001994e-05, 5.761100000000602e-05, 5.8193999999997525e-05, 5.791699999999761e-05, 5.7708000000003534e-05, 5.78749999999989e-05, 5.8236000000003174e-05, 5.777700000000191e-05]</msg>
<status status="PASS" starttime="20201117 14:47:24.827" endtime="20201117 14:47:24.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.815" endtime="20201117 14:47:24.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.840" endtime="20201117 14:47:24.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.849" endtime="20201117 14:47:24.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.844" endtime="20201117 14:47:24.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.835" endtime="20201117 14:47:24.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.317" endtime="20201117 14:47:24.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.313" endtime="20201117 14:47:24.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.311" endtime="20201117 14:47:24.876"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.881" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.903" endtime="20201117 14:47:24.924"></status>
</kw>
<msg timestamp="20201117 14:47:24.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.900" endtime="20201117 14:47:24.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.927" endtime="20201117 14:47:24.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.934" endtime="20201117 14:47:24.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.892" endtime="20201117 14:47:24.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.886" endtime="20201117 14:47:24.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.957" endtime="20201117 14:47:25.300"></status>
</kw>
<msg timestamp="20201117 14:47:25.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047924389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047983403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.954" endtime="20201117 14:47:25.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047924389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047983403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.309" endtime="20201117 14:47:25.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.329" endtime="20201117 14:47:25.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.947" endtime="20201117 14:47:25.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.942" endtime="20201117 14:47:25.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.349" level="INFO">${RESULT} = [{'time': 0.047983403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9014000000003064e-05, 'source_diff': 5.9014000000003064e-05}, {'time': 0.048062417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:25.339" endtime="20201117 14:47:25.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.380" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:25.351" endtime="20201117 14:47:25.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.391" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.389" endtime="20201117 14:47:25.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.397" level="INFO">VALUE: [5.9014000000003064e-05, 5.868100000000487e-05, 5.8306000000001024e-05, 5.8721999999997165e-05, 5.8750000000003244e-05, 5.8472000000003854e-05, 5.8972000000004354e-05, 5.9041999999995265e-05, 5.840299999999854e-05, 5.8943999999998276e-05, 5.8929999999998706e-05, 5.840299999999854e-05, 5.9250000000003744e-05, 5.915299999999929e-05, 5.8513999999995625e-05, 5.915299999999929e-05, 5.8500000000002994e-05, 5.8305999999994085e-05, 5.8542000000001704e-05, 5.888899999999947e-05, 5.89870000000034e-05, 5.8444000000004714e-05, 5.8971999999997415e-05, 5.861100000000008e-05, 5.8443999999997776e-05, 5.886100000000033e-05, 5.88749999999999e-05, 5.9028000000002634e-05, 5.862499999999965e-05, 5.8513999999995625e-05, 5.9070000000001344e-05, 5.847299999999639e-05, 5.8500000000002994e-05, 5.88749999999999e-05, 5.88619999999998e-05, 5.838899999999897e-05, 5.90550000000023e-05, 5.9194000000005464e-05, 5.859700000000051e-05, 5.827700000000241e-05, 5.85550000000018e-05, 5.908300000000144e-05, 5.906900000000187e-05, 5.838899999999897e-05, 5.9235999999997235e-05, 5.83749999999994e-05, 5.8570000000000844e-05, 5.8401999999999066e-05, 5.8278000000001884e-05, 5.8986000000003924e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.394" endtime="20201117 14:47:25.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.382" endtime="20201117 14:47:25.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.406" endtime="20201117 14:47:25.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.414" endtime="20201117 14:47:25.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.410" endtime="20201117 14:47:25.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.401" endtime="20201117 14:47:25.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.882" endtime="20201117 14:47:25.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.878" endtime="20201117 14:47:25.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.876" endtime="20201117 14:47:25.441"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.446" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.468" endtime="20201117 14:47:25.489"></status>
</kw>
<msg timestamp="20201117 14:47:25.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.465" endtime="20201117 14:47:25.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.493" endtime="20201117 14:47:25.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.499" endtime="20201117 14:47:25.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.457" endtime="20201117 14:47:25.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.452" endtime="20201117 14:47:25.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.523" endtime="20201117 14:47:25.868"></status>
</kw>
<msg timestamp="20201117 14:47:25.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0470435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047103708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:25.519" endtime="20201117 14:47:25.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0470435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047103708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:25.879" endtime="20201117 14:47:25.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.898" endtime="20201117 14:47:25.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.512" endtime="20201117 14:47:25.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.507" endtime="20201117 14:47:25.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.916" level="INFO">${RESULT} = [{'time': 0.047103708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0207999999999096e-05, 'source_diff': 6.0207999999999096e-05}, {'time': 0.047183778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:25.907" endtime="20201117 14:47:25.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.950" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:25.918" endtime="20201117 14:47:25.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.961" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.959" endtime="20201117 14:47:25.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.967" level="INFO">VALUE: [6.0207999999999096e-05, 5.938899999999997e-05, 6.0014000000004064e-05, 6.009699999999507e-05, 5.9819999999995155e-05, 5.959699999999457e-05, 5.933300000000169e-05, 5.9306000000002024e-05, 5.9569999999994905e-05, 5.9862000000000803e-05, 5.93750000000004e-05, 5.92629999999969e-05, 6.012500000000115e-05, 5.9916000000000136e-05, 5.9679999999999456e-05, 5.986099999999439e-05, 5.9736000000004674e-05, 5.931900000000212e-05, 5.958300000000194e-05, 5.9556000000002274e-05, 6.0084000000001914e-05, 6.0235999999998235e-05, 5.9763999999996875e-05, 5.970899999999807e-05, 5.9499999999997055e-05, 5.988900000000047e-05, 5.9805999999995585e-05, 5.9693999999999026e-05, 5.977699999999697e-05, 5.934699999999432e-05, 5.936100000000083e-05, 5.9943999999999276e-05, 5.965299999999979e-05, 5.9819999999995155e-05, 6.0207999999999096e-05, 5.963900000000022e-05, 6.009700000000201e-05, 6.0014000000004064e-05, 5.9264000000003314e-05, 5.9834000000001664e-05, 5.9570000000001844e-05, 5.966699999999936e-05, 5.9457999999998346e-05, 5.980500000000305e-05, 5.987499999999396e-05, 6.012500000000115e-05, 5.965299999999979e-05, 6.009700000000201e-05, 5.988900000000047e-05, 5.931899999999518e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.964" endtime="20201117 14:47:25.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.952" endtime="20201117 14:47:25.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.976" endtime="20201117 14:47:25.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.984" endtime="20201117 14:47:26.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.980" endtime="20201117 14:47:26.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.971" endtime="20201117 14:47:26.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.448" endtime="20201117 14:47:26.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.444" endtime="20201117 14:47:26.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.442" endtime="20201117 14:47:26.011"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.016" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.038" endtime="20201117 14:47:26.059"></status>
</kw>
<msg timestamp="20201117 14:47:26.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.035" endtime="20201117 14:47:26.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.062" endtime="20201117 14:47:26.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.074" endtime="20201117 14:47:26.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.027" endtime="20201117 14:47:26.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.022" endtime="20201117 14:47:26.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.097" endtime="20201117 14:47:26.441"></status>
</kw>
<msg timestamp="20201117 14:47:26.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046943764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047004639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.094" endtime="20201117 14:47:26.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046943764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047004639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.451" endtime="20201117 14:47:26.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.470" endtime="20201117 14:47:26.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.087" endtime="20201117 14:47:26.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.082" endtime="20201117 14:47:26.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:26.489" level="INFO">${RESULT} = [{'time': 0.047004639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.08750000000019e-05, 'source_diff': 6.08750000000019e-05}, {'time': 0.047074653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:26.480" endtime="20201117 14:47:26.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:26.520" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:26.492" endtime="20201117 14:47:26.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.532" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:47:26.529" endtime="20201117 14:47:26.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.537" level="INFO">VALUE: [6.08750000000019e-05, 6.03750000000014e-05, 6.0986000000005924e-05, 6.065300000000079e-05, 6.093100000000018e-05, 6.065300000000079e-05, 6.080499999999711e-05, 6.0485999999998485e-05, 6.104099999999779e-05, 6.109700000000301e-05, 6.088900000000147e-05, 6.0736000000005674e-05, 6.0707999999999596e-05, 6.0805999999996585e-05, 6.038900000000097e-05, 6.104199999999727e-05, 6.0806000000003524e-05, 6.068099999999993e-05, 6.108399999999597e-05, 6.112500000000215e-05, 6.040300000000054e-05, 6.04870000000049e-05, 6.083299999999625e-05, 6.0721999999999166e-05, 6.059699999999557e-05, 6.0485999999998485e-05, 6.0820000000003094e-05, 6.084699999999582e-05, 6.123599999999924e-05, 6.0514000000004564e-05, 6.120899999999957e-05, 6.0514000000004564e-05, 6.0999999999998555e-05, 6.0764000000004814e-05, 6.038900000000097e-05, 6.0402000000001066e-05, 6.118000000000096e-05, 6.051299999999815e-05, 6.105499999999736e-05, 6.0999999999998555e-05, 6.034700000000226e-05, 6.083299999999625e-05, 6.04029999999936e-05, 6.063900000000122e-05, 6.0388000000001496e-05, 6.0749999999998305e-05, 6.091700000000061e-05, 6.123599999999924e-05, 6.0848000000002234e-05, 6.087499999999496e-05]</msg>
<status status="PASS" starttime="20201117 14:47:26.534" endtime="20201117 14:47:26.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.522" endtime="20201117 14:47:26.540"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.546" endtime="20201117 14:47:26.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:26.554" endtime="20201117 14:47:26.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.550" endtime="20201117 14:47:26.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.541" endtime="20201117 14:47:26.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.018" endtime="20201117 14:47:26.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.014" endtime="20201117 14:47:26.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.012" endtime="20201117 14:47:26.581"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.586" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.609" endtime="20201117 14:47:26.630"></status>
</kw>
<msg timestamp="20201117 14:47:26.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.605" endtime="20201117 14:47:26.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.633" endtime="20201117 14:47:26.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.640" endtime="20201117 14:47:26.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.598" endtime="20201117 14:47:26.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.592" endtime="20201117 14:47:26.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.663" endtime="20201117 14:47:27.009"></status>
</kw>
<msg timestamp="20201117 14:47:27.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047764708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047826069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.660" endtime="20201117 14:47:27.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047764708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047826069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.019" endtime="20201117 14:47:27.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.038" endtime="20201117 14:47:27.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.653" endtime="20201117 14:47:27.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.648" endtime="20201117 14:47:27.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.056" level="INFO">${RESULT} = [{'time': 0.047826069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.136099999999589e-05, 'source_diff': 6.136099999999589e-05}, {'time': 0.047904069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:27.047" endtime="20201117 14:47:27.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.087" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:27.058" endtime="20201117 14:47:27.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.098" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.096" endtime="20201117 14:47:27.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.104" level="INFO">VALUE: [6.136099999999589e-05, 6.161100000000308e-05, 6.209699999999707e-05, 6.216599999999545e-05, 6.141600000000164e-05, 6.213900000000272e-05, 6.176399999999888e-05, 6.161100000000308e-05, 6.199999999999956e-05, 6.145800000000035e-05, 6.177799999999845e-05, 6.177800000000538e-05, 6.199999999999956e-05, 6.191700000000161e-05, 6.205599999999784e-05, 6.127799999999795e-05, 6.130499999999761e-05, 6.223600000000024e-05, 6.184699999999682e-05, 6.202699999999922e-05, 6.195800000000085e-05, 6.14300000000012e-05, 6.1582999999997e-05, 6.15550000000048e-05, 6.133299999999675e-05, 6.165299999999485e-05, 6.2195000000001e-05, 6.149999999999906e-05, 6.147299999999939e-05, 6.127800000000488e-05, 6.19300000000017e-05, 6.187499999999596e-05, 6.144400000000078e-05, 6.13880000000025e-05, 6.14029999999946e-05, 6.209700000000401e-05, 6.204099999999879e-05, 6.181900000000462e-05, 6.168000000000146e-05, 6.212500000000315e-05, 6.130600000000402e-05, 6.212500000000315e-05, 6.181999999999716e-05, 6.222199999999373e-05, 6.198599999999999e-05, 6.129100000000498e-05, 6.130600000000402e-05, 6.172200000000017e-05, 6.209699999999707e-05, 6.22499999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.100" endtime="20201117 14:47:27.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.089" endtime="20201117 14:47:27.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.112" endtime="20201117 14:47:27.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.121" endtime="20201117 14:47:27.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.116" endtime="20201117 14:47:27.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.108" endtime="20201117 14:47:27.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.588" endtime="20201117 14:47:27.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.584" endtime="20201117 14:47:27.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.582" endtime="20201117 14:47:27.148"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.154" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.167" endtime="20201117 14:47:27.185"></status>
</kw>
<msg timestamp="20201117 14:47:27.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.166" endtime="20201117 14:47:27.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.187" endtime="20201117 14:47:27.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.190" endtime="20201117 14:47:27.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.162" endtime="20201117 14:47:27.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.159" endtime="20201117 14:47:27.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.201" endtime="20201117 14:47:27.512"></status>
</kw>
<msg timestamp="20201117 14:47:27.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038292833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038355417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.199" endtime="20201117 14:47:27.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038292833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038355417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.522" endtime="20201117 14:47:27.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.542" endtime="20201117 14:47:27.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.196" endtime="20201117 14:47:27.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.194" endtime="20201117 14:47:27.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.561" level="INFO">${RESULT} = [{'time': 0.038355417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.258400000000441e-05, 'source_diff': 6.258400000000441e-05}, {'time': 0.038435431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:27.552" endtime="20201117 14:47:27.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.592" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:27.563" endtime="20201117 14:47:27.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.603" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.600" endtime="20201117 14:47:27.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.608" level="INFO">VALUE: [6.258400000000441e-05, 6.266700000000236e-05, 6.304099999999979e-05, 6.295800000000185e-05, 6.313799999999731e-05, 6.255499999999886e-05, 6.32080000000021e-05, 6.291600000000314e-05, 6.241699999999517e-05, 6.227799999999895e-05, 6.316700000000286e-05, 6.233299999999775e-05, 6.322199999999473e-05, 6.297200000000142e-05, 6.316700000000286e-05, 6.277699999999997e-05, 6.291699999999567e-05, 6.283299999999825e-05, 6.290199999999663e-05, 6.32080000000021e-05, 6.262499999999671e-05, 6.265299999999585e-05, 6.263899999999628e-05, 6.32080000000021e-05, 6.238899999999603e-05, 6.298600000000099e-05, 6.230599999999809e-05, 6.294500000000175e-05, 6.287499999999696e-05, 6.30279999999997e-05, 6.230599999999809e-05, 6.27500000000003e-05, 6.297300000000089e-05, 6.276399999999988e-05, 6.297200000000142e-05, 6.277699999999997e-05, 6.234700000000426e-05, 6.318000000000296e-05, 6.269400000000203e-05, 6.244400000000178e-05, 6.23750000000034e-05, 6.318100000000243e-05, 6.234700000000426e-05, 6.236099999999689e-05, 6.294499999999481e-05, 6.270900000000107e-05, 6.25699999999979e-05, 6.279099999999954e-05, 6.283299999999825e-05, 6.315200000000382e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.605" endtime="20201117 14:47:27.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.594" endtime="20201117 14:47:27.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.618" endtime="20201117 14:47:27.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.626" endtime="20201117 14:47:27.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.622" endtime="20201117 14:47:27.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.613" endtime="20201117 14:47:27.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.155" endtime="20201117 14:47:27.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.151" endtime="20201117 14:47:27.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.149" endtime="20201117 14:47:27.653"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.658" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.680" endtime="20201117 14:47:27.702"></status>
</kw>
<msg timestamp="20201117 14:47:27.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.677" endtime="20201117 14:47:27.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.705" endtime="20201117 14:47:27.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.712" endtime="20201117 14:47:27.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.669" endtime="20201117 14:47:27.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.664" endtime="20201117 14:47:27.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.735" endtime="20201117 14:47:28.079"></status>
</kw>
<msg timestamp="20201117 14:47:28.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047060917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047124833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.732" endtime="20201117 14:47:28.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047060917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047124833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.089" endtime="20201117 14:47:28.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.108" endtime="20201117 14:47:28.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.725" endtime="20201117 14:47:28.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.720" endtime="20201117 14:47:28.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.126" level="INFO">${RESULT} = [{'time': 0.047124833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.39159999999972e-05, 'source_diff': 6.39159999999972e-05}, {'time': 0.047203847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:28.117" endtime="20201117 14:47:28.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.160" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:28.128" endtime="20201117 14:47:28.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.171" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.168" endtime="20201117 14:47:28.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.177" level="INFO">VALUE: [6.39159999999972e-05, 6.355499999999986e-05, 6.386099999999839e-05, 6.340300000000354e-05, 6.416699999999692e-05, 6.40280000000007e-05, 6.418100000000343e-05, 6.404200000000027e-05, 6.336099999999789e-05, 6.413899999999778e-05, 6.362500000000465e-05, 6.327700000000047e-05, 6.355599999999934e-05, 6.35699999999989e-05, 6.37630000000014e-05, 6.417999999999702e-05, 6.333299999999875e-05, 6.37080000000026e-05, 6.362500000000465e-05, 6.388899999999753e-05, 6.393099999999624e-05, 6.365299999999685e-05, 6.42909999999941e-05, 6.411199999999811e-05, 6.390300000000404e-05, 6.409699999999907e-05, 6.331999999999866e-05, 6.33750000000044e-05, 6.381999999999916e-05, 6.404100000000079e-05, 6.35420000000067e-05, 6.42359999999953e-05, 6.418000000000396e-05, 6.354199999999977e-05, 6.351400000000063e-05, 6.33479999999978e-05, 6.411099999999864e-05, 6.36950000000025e-05, 6.334800000000473e-05, 6.363900000000422e-05, 6.345900000000182e-05, 6.419499999999606e-05, 6.405500000000036e-05, 6.34159999999967e-05, 6.351400000000063e-05, 6.338899999999703e-05, 6.37500000000013e-05, 6.39159999999972e-05, 6.419399999999659e-05, 6.351400000000063e-05]</msg>
<status status="PASS" starttime="20201117 14:47:28.173" endtime="20201117 14:47:28.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.161" endtime="20201117 14:47:28.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.186" endtime="20201117 14:47:28.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.194" endtime="20201117 14:47:28.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.190" endtime="20201117 14:47:28.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.181" endtime="20201117 14:47:28.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.660" endtime="20201117 14:47:28.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.656" endtime="20201117 14:47:28.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.654" endtime="20201117 14:47:28.221"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.226" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.248" endtime="20201117 14:47:28.269"></status>
</kw>
<msg timestamp="20201117 14:47:28.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.245" endtime="20201117 14:47:28.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.273" endtime="20201117 14:47:28.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.279" endtime="20201117 14:47:28.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.237" endtime="20201117 14:47:28.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.231" endtime="20201117 14:47:28.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.303" endtime="20201117 14:47:28.644"></status>
</kw>
<msg timestamp="20201117 14:47:28.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047234, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047298889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:28.300" endtime="20201117 14:47:28.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047234, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047298889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:28.654" endtime="20201117 14:47:28.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.673" endtime="20201117 14:47:28.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.292" endtime="20201117 14:47:28.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.287" endtime="20201117 14:47:28.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.693" level="INFO">${RESULT} = [{'time': 0.047298889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.488899999999853e-05, 'source_diff': 6.488899999999853e-05}, {'time': 0.047384889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:28.684" endtime="20201117 14:47:28.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.725" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:28.696" endtime="20201117 14:47:28.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.736" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.734" endtime="20201117 14:47:28.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.741" level="INFO">VALUE: [6.488899999999853e-05, 6.511099999999964e-05, 6.431900000000018e-05, 6.488899999999853e-05, 6.461099999999914e-05, 6.47500000000023e-05, 6.505600000000084e-05, 6.492999999999777e-05, 6.511099999999964e-05, 6.498599999999605e-05, 6.512499999999921e-05, 6.516699999999792e-05, 6.498600000000299e-05, 6.447200000000292e-05, 6.433299999999975e-05, 6.462499999999871e-05, 6.431999999999966e-05, 6.49029999999981e-05, 6.483399999999973e-05, 6.491699999999767e-05, 6.511099999999964e-05, 6.498600000000299e-05, 6.429100000000104e-05, 6.459699999999957e-05, 6.462499999999871e-05, 6.488899999999853e-05, 6.451400000000163e-05, 6.50700000000004e-05, 6.450000000000206e-05, 6.480599999999365e-05, 6.511099999999964e-05, 6.476399999999494e-05, 6.52229999999962e-05, 6.498600000000299e-05, 6.511199999999912e-05, 6.45699999999999e-05, 6.506900000000093e-05, 6.501399999999519e-05, 6.480500000000111e-05, 6.442999999999727e-05, 6.473600000000274e-05, 6.472200000000317e-05, 6.472200000000317e-05, 6.511099999999964e-05, 6.455600000000034e-05, 6.477800000000145e-05, 6.441699999999717e-05, 6.508399999999998e-05, 6.45280000000012e-05, 6.494499999999681e-05]</msg>
<status status="PASS" starttime="20201117 14:47:28.738" endtime="20201117 14:47:28.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.727" endtime="20201117 14:47:28.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.750" endtime="20201117 14:47:28.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.759" endtime="20201117 14:47:28.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.755" endtime="20201117 14:47:28.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.746" endtime="20201117 14:47:28.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.227" endtime="20201117 14:47:28.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.223" endtime="20201117 14:47:28.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.222" endtime="20201117 14:47:28.786"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.791" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.813" endtime="20201117 14:47:28.834"></status>
</kw>
<msg timestamp="20201117 14:47:28.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.809" endtime="20201117 14:47:28.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.837" endtime="20201117 14:47:28.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.844" endtime="20201117 14:47:28.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.802" endtime="20201117 14:47:28.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.796" endtime="20201117 14:47:28.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.867" endtime="20201117 14:47:29.211"></status>
</kw>
<msg timestamp="20201117 14:47:29.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047071458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04713675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:28.864" endtime="20201117 14:47:29.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047071458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04713675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:29.221" endtime="20201117 14:47:29.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.240" endtime="20201117 14:47:29.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.857" endtime="20201117 14:47:29.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.852" endtime="20201117 14:47:29.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.258" level="INFO">${RESULT} = [{'time': 0.04713675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.529200000000152e-05, 'source_diff': 6.529200000000152e-05}, {'time': 0.047220806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:29.249" endtime="20201117 14:47:29.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.289" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:29.260" endtime="20201117 14:47:29.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.300" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.298" endtime="20201117 14:47:29.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.306" level="INFO">VALUE: [6.529200000000152e-05, 6.608399999999404e-05, 6.591699999999867e-05, 6.55280000000022e-05, 6.593099999999824e-05, 6.613800000000031e-05, 6.605500000000236e-05, 6.579200000000202e-05, 6.579200000000202e-05, 6.612500000000021e-05, 6.597199999999748e-05, 6.595800000000485e-05, 6.605600000000184e-05, 6.587499999999996e-05, 6.612500000000021e-05, 6.569399999999809e-05, 6.58480000000003e-05, 6.605600000000184e-05, 6.570899999999713e-05, 6.579199999999508e-05, 6.587499999999996e-05, 6.537499999999946e-05, 6.537499999999946e-05, 6.561100000000014e-05, 6.612500000000021e-05, 6.606899999999499e-05, 6.559699999999363e-05, 6.551400000000263e-05, 6.548599999999655e-05, 6.531900000000118e-05, 6.594500000000475e-05, 6.572200000000417e-05, 6.562499999999971e-05, 6.613800000000031e-05, 6.536099999999989e-05, 6.562500000000665e-05, 6.609700000000107e-05, 6.540199999999913e-05, 6.573600000000374e-05, 6.605500000000236e-05, 6.547200000000392e-05, 6.556899999999449e-05, 6.57359999999968e-05, 6.612500000000021e-05, 6.533400000000023e-05, 6.532000000000066e-05, 6.532000000000066e-05, 6.583300000000125e-05, 6.609700000000107e-05, 6.616699999999892e-05]</msg>
<status status="PASS" starttime="20201117 14:47:29.303" endtime="20201117 14:47:29.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.291" endtime="20201117 14:47:29.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.315" endtime="20201117 14:47:29.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.323" endtime="20201117 14:47:29.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.319" endtime="20201117 14:47:29.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.310" endtime="20201117 14:47:29.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.792" endtime="20201117 14:47:29.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.788" endtime="20201117 14:47:29.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.786" endtime="20201117 14:47:29.350"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.355" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.377" endtime="20201117 14:47:29.398"></status>
</kw>
<msg timestamp="20201117 14:47:29.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.374" endtime="20201117 14:47:29.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.402" endtime="20201117 14:47:29.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.408" endtime="20201117 14:47:29.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.367" endtime="20201117 14:47:29.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.361" endtime="20201117 14:47:29.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.433" endtime="20201117 14:47:29.773"></status>
</kw>
<msg timestamp="20201117 14:47:29.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047381903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047449069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.428" endtime="20201117 14:47:29.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047381903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047449069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.783" endtime="20201117 14:47:29.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.803" endtime="20201117 14:47:29.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.421" endtime="20201117 14:47:29.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.416" endtime="20201117 14:47:29.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.822" level="INFO">${RESULT} = [{'time': 0.047449069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.716600000000045e-05, 'source_diff': 6.716600000000045e-05}, {'time': 0.047528111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:29.813" endtime="20201117 14:47:29.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.853" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:29.824" endtime="20201117 14:47:29.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.864" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.862" endtime="20201117 14:47:29.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.869" level="INFO">VALUE: [6.716600000000045e-05, 6.683299999999531e-05, 6.638900000000003e-05, 6.663900000000028e-05, 6.677800000000345e-05, 6.70830000000025e-05, 6.697199999999848e-05, 6.713900000000078e-05, 6.630600000000209e-05, 6.680600000000259e-05, 6.713899999999384e-05, 6.654199999999583e-05, 6.651399999999669e-05, 6.715299999999341e-05, 6.67080000000056e-05, 6.662500000000071e-05, 6.70830000000025e-05, 6.706900000000293e-05, 6.681900000000268e-05, 6.662500000000071e-05, 6.68480000000013e-05, 6.705500000000336e-05, 6.627800000000295e-05, 6.693099999999924e-05, 6.636099999999395e-05, 6.65280000000032e-05, 6.67500000000043e-05, 6.648699999999702e-05, 6.713799999999437e-05, 6.6583000000002e-05, 6.634700000000132e-05, 6.637500000000046e-05, 6.715300000000035e-05, 6.715300000000035e-05, 6.655600000000234e-05, 6.648599999999755e-05, 6.655600000000234e-05, 6.663900000000028e-05, 6.663899999999334e-05, 6.644399999999884e-05, 6.691699999999967e-05, 6.642999999999927e-05, 6.705500000000336e-05, 6.705499999999642e-05, 6.636100000000089e-05, 6.695799999999891e-05, 6.702799999999676e-05, 6.693099999999924e-05, 6.665299999999985e-05, 6.716699999999992e-05]</msg>
<status status="PASS" starttime="20201117 14:47:29.866" endtime="20201117 14:47:29.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.855" endtime="20201117 14:47:29.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.878" endtime="20201117 14:47:29.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.887" endtime="20201117 14:47:29.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.882" endtime="20201117 14:47:29.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.874" endtime="20201117 14:47:29.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.357" endtime="20201117 14:47:29.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.353" endtime="20201117 14:47:29.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.351" endtime="20201117 14:47:29.913"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.918" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.940" endtime="20201117 14:47:29.962"></status>
</kw>
<msg timestamp="20201117 14:47:29.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.937" endtime="20201117 14:47:29.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.965" endtime="20201117 14:47:29.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.972" endtime="20201117 14:47:29.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.930" endtime="20201117 14:47:29.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.924" endtime="20201117 14:47:29.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.996" endtime="20201117 14:47:30.342"></status>
</kw>
<msg timestamp="20201117 14:47:30.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047582694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047650333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.993" endtime="20201117 14:47:30.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047582694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047650333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.352" endtime="20201117 14:47:30.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.371" endtime="20201117 14:47:30.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.986" endtime="20201117 14:47:30.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.981" endtime="20201117 14:47:30.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.389" level="INFO">${RESULT} = [{'time': 0.047650333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.763900000000128e-05, 'source_diff': 6.763900000000128e-05}, {'time': 0.047728347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:30.380" endtime="20201117 14:47:30.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.423" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:30.391" endtime="20201117 14:47:30.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.434" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:47:30.432" endtime="20201117 14:47:30.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.439" level="INFO">VALUE: [6.763900000000128e-05, 6.726399999999744e-05, 6.77359999999988e-05, 6.787499999999502e-05, 6.799999999999862e-05, 6.77500000000053e-05, 6.749999999999812e-05, 6.766600000000095e-05, 6.802799999999776e-05, 6.762500000000171e-05, 6.779199999999708e-05, 6.805500000000436e-05, 6.731999999999572e-05, 6.781900000000368e-05, 6.774999999999837e-05, 6.801399999999819e-05, 6.755499999999692e-05, 6.761100000000214e-05, 6.762499999999477e-05, 6.776399999999794e-05, 6.749999999999812e-05, 6.729200000000352e-05, 6.819500000000006e-05, 6.801400000000513e-05, 6.761100000000214e-05, 6.804199999999733e-05, 6.786100000000239e-05, 6.741700000000017e-05, 6.761100000000214e-05, 6.779100000000454e-05, 6.787500000000196e-05, 6.759700000000257e-05, 6.751400000000463e-05, 6.766700000000042e-05, 6.783300000000325e-05, 6.736100000000189e-05, 6.798599999999905e-05, 6.819400000000059e-05, 6.737500000000146e-05, 6.816600000000145e-05, 6.774999999999837e-05, 6.772199999999923e-05, 6.751299999999821e-05, 6.731900000000318e-05, 6.794400000000034e-05, 6.801400000000513e-05, 6.820899999999963e-05, 6.772199999999923e-05, 6.790299999999416e-05, 6.780599999999665e-05]</msg>
<status status="PASS" starttime="20201117 14:47:30.436" endtime="20201117 14:47:30.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.425" endtime="20201117 14:47:30.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.448" endtime="20201117 14:47:30.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:30.457" endtime="20201117 14:47:30.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.452" endtime="20201117 14:47:30.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.444" endtime="20201117 14:47:30.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.920" endtime="20201117 14:47:30.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.916" endtime="20201117 14:47:30.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.914" endtime="20201117 14:47:30.483"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.489" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.511" endtime="20201117 14:47:30.533"></status>
</kw>
<msg timestamp="20201117 14:47:30.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.508" endtime="20201117 14:47:30.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.536" endtime="20201117 14:47:30.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.543" endtime="20201117 14:47:30.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.500" endtime="20201117 14:47:30.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.494" endtime="20201117 14:47:30.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.566" endtime="20201117 14:47:30.859"></status>
</kw>
<msg timestamp="20201117 14:47:30.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047969375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048038639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.563" endtime="20201117 14:47:30.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047969375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048038639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.864" endtime="20201117 14:47:30.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.872" endtime="20201117 14:47:30.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.556" endtime="20201117 14:47:30.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.551" endtime="20201117 14:47:30.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.882" level="INFO">${RESULT} = [{'time': 0.048038639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.926399999999944e-05, 'source_diff': 6.926399999999944e-05}, {'time': 0.048116639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:30.877" endtime="20201117 14:47:30.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.895" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:30.883" endtime="20201117 14:47:30.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.901" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:47:30.899" endtime="20201117 14:47:30.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.903" level="INFO">VALUE: [6.926399999999944e-05, 6.855600000000434e-05, 6.84030000000016e-05, 6.840200000000213e-05, 6.891700000000167e-05, 6.893000000000177e-05, 6.836099999999595e-05, 6.879199999999808e-05, 6.887499999999602e-05, 6.915300000000235e-05, 6.854200000000477e-05, 6.899999999999962e-05, 6.919400000000159e-05, 6.856899999999749e-05, 6.891699999999473e-05, 6.858400000000348e-05, 6.847199999999998e-05, 6.912500000000321e-05, 6.849999999999912e-05, 6.886200000000287e-05, 6.883299999999731e-05, 6.838899999999509e-05, 6.887499999999602e-05, 6.868000000000152e-05, 6.909699999999713e-05, 6.838900000000203e-05, 6.854199999999783e-05, 6.897200000000048e-05, 6.912499999999627e-05, 6.916700000000192e-05, 6.85979999999961e-05, 6.845899999999988e-05, 6.868100000000099e-05, 6.906999999999747e-05, 6.888799999999612e-05, 6.881899999999774e-05, 6.895800000000091e-05, 6.916699999999498e-05, 6.855600000000434e-05, 6.838899999999509e-05, 6.915300000000235e-05, 6.876399999999894e-05, 6.918100000000149e-05, 6.898600000000005e-05, 6.829199999999758e-05, 6.89309999999943e-05, 6.856899999999749e-05, 6.920900000000063e-05, 6.849999999999912e-05, 6.86109999999962e-05]</msg>
<status status="PASS" starttime="20201117 14:47:30.902" endtime="20201117 14:47:30.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.896" endtime="20201117 14:47:30.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.907" endtime="20201117 14:47:30.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:30.911" endtime="20201117 14:47:30.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.909" endtime="20201117 14:47:30.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.905" endtime="20201117 14:47:30.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.490" endtime="20201117 14:47:30.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.486" endtime="20201117 14:47:30.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.484" endtime="20201117 14:47:30.933"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.936" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.946" endtime="20201117 14:47:30.965"></status>
</kw>
<msg timestamp="20201117 14:47:30.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.945" endtime="20201117 14:47:30.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.966" endtime="20201117 14:47:30.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.969" endtime="20201117 14:47:30.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.941" endtime="20201117 14:47:30.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.938" endtime="20201117 14:47:30.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.980" endtime="20201117 14:47:31.299"></status>
</kw>
<msg timestamp="20201117 14:47:31.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027343111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027412861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.979" endtime="20201117 14:47:31.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027343111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027412861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.309" endtime="20201117 14:47:31.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.329" endtime="20201117 14:47:31.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.975" endtime="20201117 14:47:31.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.973" endtime="20201117 14:47:31.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.347" level="INFO">${RESULT} = [{'time': 0.027412861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.975000000000037e-05, 'source_diff': 6.975000000000037e-05}, {'time': 0.027492889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:31.337" endtime="20201117 14:47:31.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.378" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:31.349" endtime="20201117 14:47:31.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.389" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.386" endtime="20201117 14:47:31.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.394" level="INFO">VALUE: [6.975000000000037e-05, 7.015299999999988e-05, 6.947200000000098e-05, 6.998599999999758e-05, 7.015299999999988e-05, 6.945899999999741e-05, 6.955500000000239e-05, 6.979200000000255e-05, 6.937499999999999e-05, 6.936100000000042e-05, 7.004099999999985e-05, 7.000000000000062e-05, 6.998600000000105e-05, 7.012499999999727e-05, 7.022199999999826e-05, 6.962500000000024e-05, 6.957000000000144e-05, 7.016699999999945e-05, 6.936100000000042e-05, 6.937499999999999e-05, 6.979199999999908e-05, 7.019499999999859e-05, 6.955500000000239e-05, 7.025000000000087e-05, 6.99169999999992e-05, 6.950000000000012e-05, 7.016699999999945e-05, 6.993099999999877e-05, 6.994399999999887e-05, 6.936100000000042e-05, 6.975000000000037e-05, 7.002799999999976e-05, 7.018100000000249e-05, 6.973700000000027e-05, 6.983299999999831e-05, 7.029199999999958e-05, 7.016599999999998e-05, 7.019400000000259e-05, 6.977799999999951e-05, 6.977799999999951e-05, 7.013900000000031e-05, 6.988900000000006e-05, 6.937499999999999e-05, 6.929100000000257e-05, 6.943099999999827e-05, 6.994500000000181e-05, 7.020800000000216e-05, 7.012499999999727e-05, 6.961199999999668e-05, 6.962500000000371e-05]</msg>
<status status="PASS" starttime="20201117 14:47:31.391" endtime="20201117 14:47:31.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.380" endtime="20201117 14:47:31.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.404" endtime="20201117 14:47:31.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.412" endtime="20201117 14:47:31.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.408" endtime="20201117 14:47:31.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.399" endtime="20201117 14:47:31.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.937" endtime="20201117 14:47:31.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.935" endtime="20201117 14:47:31.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.934" endtime="20201117 14:47:31.439"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.444" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.466" endtime="20201117 14:47:31.487"></status>
</kw>
<msg timestamp="20201117 14:47:31.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.463" endtime="20201117 14:47:31.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.491" endtime="20201117 14:47:31.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.497" endtime="20201117 14:47:31.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.455" endtime="20201117 14:47:31.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.450" endtime="20201117 14:47:31.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.521" endtime="20201117 14:47:31.863"></status>
</kw>
<msg timestamp="20201117 14:47:31.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047098097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0471685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:31.518" endtime="20201117 14:47:31.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047098097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0471685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:31.873" endtime="20201117 14:47:31.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.892" endtime="20201117 14:47:31.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.510" endtime="20201117 14:47:31.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.505" endtime="20201117 14:47:31.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.911" level="INFO">${RESULT} = [{'time': 0.0471685, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.04030000000036e-05, 'source_diff': 7.04030000000036e-05}, {'time': 0.047248444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201117 14:47:31.902" endtime="20201117 14:47:31.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.943" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:31.914" endtime="20201117 14:47:31.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.954" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.951" endtime="20201117 14:47:31.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.960" level="INFO">VALUE: [7.04030000000036e-05, 7.119400000000359e-05, 7.11109999999987e-05, 7.113899999999784e-05, 7.099999999999468e-05, 7.05689999999995e-05, 7.044500000000231e-05, 7.12360000000023e-05, 7.118100000000349e-05, 7.062499999999777e-05, 7.086100000000539e-05, 7.12910000000011e-05, 7.08480000000053e-05, 7.038899999999709e-05, 7.081899999999974e-05, 7.09439999999964e-05, 7.112500000000521e-05, 7.058299999999906e-05, 7.095800000000291e-05, 7.119400000000359e-05, 7.12360000000023e-05, 7.054200000000677e-05, 7.079200000000008e-05, 7.10979999999986e-05, 7.036100000000489e-05, 7.086099999999845e-05, 7.126400000000144e-05, 7.093000000000377e-05, 7.1069e-05, 7.100000000000162e-05, 7.088899999999759e-05, 7.047199999999504e-05, 7.052800000000026e-05, 7.079200000000008e-05, 7.122299999999526e-05, 7.07360000000018e-05, 7.073699999999433e-05, 7.05979999999981e-05, 7.047300000000145e-05, 7.112499999999827e-05, 7.074999999999443e-05, 7.122199999999579e-05, 7.05689999999995e-05, 7.04030000000036e-05, 7.033299999999881e-05, 7.09030000000041e-05, 7.097199999999554e-05, 7.083299999999931e-05, 7.095800000000291e-05, 7.090299999999716e-05]</msg>
<status status="PASS" starttime="20201117 14:47:31.956" endtime="20201117 14:47:31.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.944" endtime="20201117 14:47:31.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.969" endtime="20201117 14:47:31.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.977" endtime="20201117 14:47:31.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.973" endtime="20201117 14:47:32.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.964" endtime="20201117 14:47:32.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.446" endtime="20201117 14:47:32.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.442" endtime="20201117 14:47:32.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.440" endtime="20201117 14:47:32.004"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.009" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.031" endtime="20201117 14:47:32.052"></status>
</kw>
<msg timestamp="20201117 14:47:32.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.028" endtime="20201117 14:47:32.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.056" endtime="20201117 14:47:32.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.063" endtime="20201117 14:47:32.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.020" endtime="20201117 14:47:32.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.015" endtime="20201117 14:47:32.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.087" endtime="20201117 14:47:32.431"></status>
</kw>
<msg timestamp="20201117 14:47:32.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047248167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047320097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.084" endtime="20201117 14:47:32.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047248167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047320097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.441" endtime="20201117 14:47:32.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.460" endtime="20201117 14:47:32.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.076" endtime="20201117 14:47:32.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.071" endtime="20201117 14:47:32.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.478" level="INFO">${RESULT} = [{'time': 0.047320097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.192999999999783e-05, 'source_diff': 7.192999999999783e-05}, {'time': 0.047402181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:32.469" endtime="20201117 14:47:32.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.512" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:32.481" endtime="20201117 14:47:32.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.524" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.521" endtime="20201117 14:47:32.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.529" level="INFO">VALUE: [7.192999999999783e-05, 7.180600000000065e-05, 7.202800000000176e-05, 7.197200000000348e-05, 7.224999999999593e-05, 7.215299999999841e-05, 7.141700000000417e-05, 7.21109999999997e-05, 7.172199999999629e-05, 7.137499999999852e-05, 7.151400000000169e-05, 7.204100000000185e-05, 7.143000000000427e-05, 7.197200000000348e-05, 7.169500000000356e-05, 7.179200000000108e-05, 7.208300000000056e-05, 7.194499999999687e-05, 7.131900000000024e-05, 7.182000000000022e-05, 7.126400000000144e-05, 7.15560000000004e-05, 7.184700000000682e-05, 7.192999999999783e-05, 7.181900000000074e-05, 7.149999999999518e-05, 7.151400000000169e-05, 7.131900000000024e-05, 7.219399999999765e-05, 7.14030000000046e-05, 7.138899999999809e-05, 7.180599999999371e-05, 7.130600000000015e-05, 7.182000000000022e-05, 7.138899999999809e-05, 7.191599999999826e-05, 7.15690000000005e-05, 7.148599999999561e-05, 7.201399999999525e-05, 7.19030000000051e-05, 7.154100000000135e-05, 7.15690000000005e-05, 7.194400000000434e-05, 7.19309999999973e-05, 7.216699999999798e-05, 7.158399999999954e-05, 7.191700000000467e-05, 7.144499999999637e-05, 7.15690000000005e-05, 7.213899999999884e-05]</msg>
<status status="PASS" starttime="20201117 14:47:32.526" endtime="20201117 14:47:32.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.514" endtime="20201117 14:47:32.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.538" endtime="20201117 14:47:32.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.546" endtime="20201117 14:47:32.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.542" endtime="20201117 14:47:32.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.533" endtime="20201117 14:47:32.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.011" endtime="20201117 14:47:32.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.007" endtime="20201117 14:47:32.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.005" endtime="20201117 14:47:32.573"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.578" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.600" endtime="20201117 14:47:32.621"></status>
</kw>
<msg timestamp="20201117 14:47:32.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.597" endtime="20201117 14:47:32.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.624" endtime="20201117 14:47:32.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.631" endtime="20201117 14:47:32.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.589" endtime="20201117 14:47:32.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.583" endtime="20201117 14:47:32.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.654" endtime="20201117 14:47:32.996"></status>
</kw>
<msg timestamp="20201117 14:47:33.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046939722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047012583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.651" endtime="20201117 14:47:33.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046939722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047012583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.005" endtime="20201117 14:47:33.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.025" endtime="20201117 14:47:33.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.644" endtime="20201117 14:47:33.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.639" endtime="20201117 14:47:33.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.045" level="INFO">${RESULT} = [{'time': 0.047012583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.286099999999351e-05, 'source_diff': 7.286099999999351e-05}, {'time': 0.047100542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:33.036" endtime="20201117 14:47:33.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.076" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:33.047" endtime="20201117 14:47:33.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.087" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.085" endtime="20201117 14:47:33.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.093" level="INFO">VALUE: [7.286099999999351e-05, 7.291699999999873e-05, 7.27360000000038e-05, 7.277700000000303e-05, 7.248600000000355e-05, 7.286099999999351e-05, 7.230500000000167e-05, 7.300000000000362e-05, 7.3069000000002e-05, 7.258299999999412e-05, 7.29309999999983e-05, 7.287500000000002e-05, 7.284800000000036e-05, 7.304200000000233e-05, 7.252799999999532e-05, 7.273700000000327e-05, 7.286100000000045e-05, 7.259700000000063e-05, 7.313899999999984e-05, 7.320799999999822e-05, 7.312500000000027e-05, 7.293000000000577e-05, 7.238899999999909e-05, 7.26110000000002e-05, 7.236099999999995e-05, 7.267999999999858e-05, 7.291599999999926e-05, 7.319499999999812e-05, 7.266599999999901e-05, 7.318000000000602e-05, 7.236099999999995e-05, 7.265299999999891e-05, 7.256899999999455e-05, 7.284700000000088e-05, 7.241699999999823e-05, 7.279200000000208e-05, 7.286099999999351e-05, 7.306999999999453e-05, 7.312500000000027e-05, 7.237499999999952e-05, 7.223700000000277e-05, 7.309800000000061e-05, 7.251300000000321e-05, 7.301399999999625e-05, 7.288899999999959e-05, 7.290200000000663e-05, 7.234799999999986e-05, 7.297199999999754e-05, 7.247199999999704e-05, 7.277799999999557e-05]</msg>
<status status="PASS" starttime="20201117 14:47:33.089" endtime="20201117 14:47:33.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.078" endtime="20201117 14:47:33.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.102" endtime="20201117 14:47:33.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.112" endtime="20201117 14:47:33.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.107" endtime="20201117 14:47:33.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.098" endtime="20201117 14:47:33.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.579" endtime="20201117 14:47:33.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.575" endtime="20201117 14:47:33.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.574" endtime="20201117 14:47:33.138"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.144" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.166" endtime="20201117 14:47:33.187"></status>
</kw>
<msg timestamp="20201117 14:47:33.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.162" endtime="20201117 14:47:33.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.191" endtime="20201117 14:47:33.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.197" endtime="20201117 14:47:33.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.155" endtime="20201117 14:47:33.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.149" endtime="20201117 14:47:33.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.221" endtime="20201117 14:47:33.564"></status>
</kw>
<msg timestamp="20201117 14:47:33.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047307097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047380903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.217" endtime="20201117 14:47:33.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047307097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047380903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.574" endtime="20201117 14:47:33.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.593" endtime="20201117 14:47:33.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.210" endtime="20201117 14:47:33.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.205" endtime="20201117 14:47:33.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.611" level="INFO">${RESULT} = [{'time': 0.047380903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.380600000000265e-05, 'source_diff': 7.380600000000265e-05}, {'time': 0.047464889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:33.602" endtime="20201117 14:47:33.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.642" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:33.613" endtime="20201117 14:47:33.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.653" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.651" endtime="20201117 14:47:33.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.659" level="INFO">VALUE: [7.380600000000265e-05, 7.351400000000369e-05, 7.348599999999761e-05, 7.404200000000333e-05, 7.331999999999478e-05, 7.40969999999952e-05, 7.405500000000342e-05, 7.366600000000001e-05, 7.369399999999915e-05, 7.384700000000188e-05, 7.354100000000335e-05, 7.412499999999433e-05, 7.387500000000102e-05, 7.416699999999998e-05, 7.416699999999998e-05, 7.372299999999776e-05, 7.359700000000163e-05, 7.327800000000301e-05, 7.365299999999991e-05, 7.349999999999718e-05, 7.41110000000017e-05, 7.409700000000213e-05, 7.408300000000256e-05, 7.369400000000609e-05, 7.336099999999401e-05, 7.411099999999476e-05, 7.395799999999897e-05, 7.39309999999993e-05, 7.341599999999976e-05, 7.406999999999553e-05, 7.352799999999632e-05, 7.416699999999998e-05, 7.415300000000041e-05, 7.330499999999573e-05, 7.390200000000069e-05, 7.351399999999675e-05, 7.381999999999528e-05, 7.363900000000034e-05, 7.338900000000009e-05, 7.345799999999847e-05, 7.407000000000247e-05, 7.399999999999768e-05, 7.388900000000059e-05, 7.384700000000188e-05, 7.347200000000498e-05, 7.423599999999836e-05, 7.416600000000051e-05, 7.420799999999922e-05, 7.351399999999675e-05, 7.345799999999847e-05]</msg>
<status status="PASS" starttime="20201117 14:47:33.656" endtime="20201117 14:47:33.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.644" endtime="20201117 14:47:33.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.668" endtime="20201117 14:47:33.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.676" endtime="20201117 14:47:33.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.672" endtime="20201117 14:47:33.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.663" endtime="20201117 14:47:33.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.145" endtime="20201117 14:47:33.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.141" endtime="20201117 14:47:33.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.139" endtime="20201117 14:47:33.703"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.708" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.730" endtime="20201117 14:47:33.752"></status>
</kw>
<msg timestamp="20201117 14:47:33.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.727" endtime="20201117 14:47:33.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.755" endtime="20201117 14:47:33.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.762" endtime="20201117 14:47:33.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.719" endtime="20201117 14:47:33.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.714" endtime="20201117 14:47:33.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.786" endtime="20201117 14:47:34.131"></status>
</kw>
<msg timestamp="20201117 14:47:34.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047390542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047465681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.783" endtime="20201117 14:47:34.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047390542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047465681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.141" endtime="20201117 14:47:34.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.161" endtime="20201117 14:47:34.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.775" endtime="20201117 14:47:34.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.770" endtime="20201117 14:47:34.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.180" level="INFO">${RESULT} = [{'time': 0.047465681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513900000000184e-05, 'source_diff': 7.513900000000184e-05}, {'time': 0.047560667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:34.171" endtime="20201117 14:47:34.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.211" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:34.182" endtime="20201117 14:47:34.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.222" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.220" endtime="20201117 14:47:34.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.228" level="INFO">VALUE: [7.513900000000184e-05, 7.463900000000134e-05, 7.494499999999987e-05, 7.465300000000091e-05, 7.44439999999999e-05, 7.51110000000027e-05, 7.462499999999483e-05, 7.4763999999998e-05, 7.484700000000288e-05, 7.50560000000039e-05, 7.477800000000451e-05, 7.470899999999919e-05, 7.451399999999775e-05, 7.455599999999646e-05, 7.498600000000605e-05, 7.474999999999843e-05, 7.498599999999911e-05, 7.46110000000022e-05, 7.519399999999371e-05, 7.52639999999985e-05, 7.469400000000015e-05, 7.495799999999997e-05, 7.499999999999868e-05, 7.520899999999969e-05, 7.474999999999843e-05, 7.486099999999551e-05, 7.44439999999999e-05, 7.466700000000048e-05, 7.504199999999739e-05, 7.502699999999835e-05, 7.465200000000144e-05, 7.449999999999818e-05, 7.498600000000605e-05, 7.468100000000005e-05, 7.493000000000083e-05, 7.463900000000134e-05, 7.458299999999612e-05, 7.465300000000091e-05, 7.508400000000304e-05, 7.480600000000365e-05, 7.440300000000066e-05, 7.437500000000152e-05, 7.512499999999533e-05, 7.504099999999791e-05, 7.519400000000065e-05, 7.438900000000109e-05, 7.433300000000281e-05, 7.463900000000134e-05, 7.508299999999662e-05, 7.527799999999807e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.225" endtime="20201117 14:47:34.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.213" endtime="20201117 14:47:34.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.237" endtime="20201117 14:47:34.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.245" endtime="20201117 14:47:34.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.241" endtime="20201117 14:47:34.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.232" endtime="20201117 14:47:34.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.710" endtime="20201117 14:47:34.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.706" endtime="20201117 14:47:34.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.704" endtime="20201117 14:47:34.272"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.277" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.301" endtime="20201117 14:47:34.323"></status>
</kw>
<msg timestamp="20201117 14:47:34.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.296" endtime="20201117 14:47:34.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.326" endtime="20201117 14:47:34.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.333" endtime="20201117 14:47:34.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.288" endtime="20201117 14:47:34.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.283" endtime="20201117 14:47:34.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.350" endtime="20201117 14:47:34.656"></status>
</kw>
<msg timestamp="20201117 14:47:34.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049585347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049661278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.349" endtime="20201117 14:47:34.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049585347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049661278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.665" endtime="20201117 14:47:34.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.684" endtime="20201117 14:47:34.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.345" endtime="20201117 14:47:34.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.341" endtime="20201117 14:47:34.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.703" level="INFO">${RESULT} = [{'time': 0.049661278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.59310000000013e-05, 'source_diff': 7.59310000000013e-05}, {'time': 0.049756292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:34.693" endtime="20201117 14:47:34.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.737" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:34.705" endtime="20201117 14:47:34.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.748" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.746" endtime="20201117 14:47:34.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.754" level="INFO">VALUE: [7.59310000000013e-05, 7.551399999999875e-05, 7.618100000000155e-05, 7.612499999999633e-05, 7.595800000000097e-05, 7.5763999999999e-05, 7.618000000000208e-05, 7.530499999999773e-05, 7.579099999999866e-05, 7.559700000000363e-05, 7.55839999999966e-05, 7.59310000000013e-05, 7.55839999999966e-05, 7.573599999999986e-05, 7.620900000000069e-05, 7.55839999999966e-05, 7.612499999999633e-05, 7.549999999999918e-05, 7.565300000000191e-05, 7.54310000000008e-05, 7.529099999999816e-05, 7.53189999999973e-05, 7.563900000000234e-05, 7.559700000000363e-05, 7.602799999999882e-05, 7.615299999999547e-05, 7.61110000000037e-05, 7.606899999999805e-05, 7.544500000000037e-05, 7.549999999999918e-05, 7.573599999999986e-05, 7.60969999999972e-05, 7.618000000000208e-05, 7.562500000000277e-05, 7.554200000000483e-05, 7.577799999999857e-05, 7.554200000000483e-05, 7.558400000000354e-05, 7.586100000000345e-05, 7.54310000000008e-05, 7.568099999999411e-05, 7.583399999999685e-05, 7.5763999999999e-05, 7.606899999999805e-05, 7.549999999999918e-05, 7.538899999999515e-05, 7.565300000000191e-05, 7.620800000000122e-05, 7.568100000000105e-05, 7.536100000000295e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.751" endtime="20201117 14:47:34.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.739" endtime="20201117 14:47:34.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.762" endtime="20201117 14:47:34.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.771" endtime="20201117 14:47:34.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.767" endtime="20201117 14:47:34.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.758" endtime="20201117 14:47:34.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.279" endtime="20201117 14:47:34.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.275" endtime="20201117 14:47:34.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.273" endtime="20201117 14:47:34.798"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.803" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.825" endtime="20201117 14:47:34.847"></status>
</kw>
<msg timestamp="20201117 14:47:34.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.822" endtime="20201117 14:47:34.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.850" endtime="20201117 14:47:34.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.856" endtime="20201117 14:47:34.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.815" endtime="20201117 14:47:34.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.809" endtime="20201117 14:47:34.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.880" endtime="20201117 14:47:35.229"></status>
</kw>
<msg timestamp="20201117 14:47:35.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047712042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047788556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.876" endtime="20201117 14:47:35.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047712042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047788556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.240" endtime="20201117 14:47:35.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.260" endtime="20201117 14:47:35.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.869" endtime="20201117 14:47:35.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.864" endtime="20201117 14:47:35.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.280" level="INFO">${RESULT} = [{'time': 0.047788556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.651399999999975e-05, 'source_diff': 7.651399999999975e-05}, {'time': 0.047882542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:35.271" endtime="20201117 14:47:35.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.313" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:35.282" endtime="20201117 14:47:35.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.325" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.322" endtime="20201117 14:47:35.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.330" level="INFO">VALUE: [7.651399999999975e-05, 7.70839999999981e-05, 7.648600000000061e-05, 7.679199999999914e-05, 7.629099999999917e-05, 7.6764e-05, 7.725000000000093e-05, 7.725000000000093e-05, 7.636099999999701e-05, 7.666599999999607e-05, 7.69310000000023e-05, 7.694500000000187e-05, 7.656999999999803e-05, 7.719500000000212e-05, 7.655499999999898e-05, 7.654099999999942e-05, 7.723599999999442e-05, 7.641700000000223e-05, 7.70969999999982e-05, 7.677699999999316e-05, 7.69589999999945e-05, 7.686099999999751e-05, 7.704199999999939e-05, 7.68189999999988e-05, 7.666700000000248e-05, 7.647200000000104e-05, 7.712500000000427e-05, 7.647300000000051e-05, 7.715200000000394e-05, 7.723600000000136e-05, 7.67770000000001e-05, 7.692999999999589e-05, 7.716599999999657e-05, 7.650000000000018e-05, 7.661099999999726e-05, 7.686099999999751e-05, 7.636099999999701e-05, 7.687499999999708e-05, 7.636099999999701e-05, 7.69719999999946e-05, 7.702799999999982e-05, 7.633299999999787e-05, 7.700000000000068e-05, 7.698600000000111e-05, 7.715200000000394e-05, 7.7151999999997e-05, 7.637499999999658e-05, 7.65839999999976e-05, 7.69589999999945e-05, 7.722199999999485e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.327" endtime="20201117 14:47:35.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.315" endtime="20201117 14:47:35.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.340" endtime="20201117 14:47:35.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.349" endtime="20201117 14:47:35.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.345" endtime="20201117 14:47:35.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.336" endtime="20201117 14:47:35.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.805" endtime="20201117 14:47:35.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.801" endtime="20201117 14:47:35.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.799" endtime="20201117 14:47:35.376"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.382" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.405" endtime="20201117 14:47:35.428"></status>
</kw>
<msg timestamp="20201117 14:47:35.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.402" endtime="20201117 14:47:35.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.431" endtime="20201117 14:47:35.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.438" endtime="20201117 14:47:35.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.394" endtime="20201117 14:47:35.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.388" endtime="20201117 14:47:35.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.463" endtime="20201117 14:47:35.826"></status>
</kw>
<msg timestamp="20201117 14:47:35.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049159069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049237333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.459" endtime="20201117 14:47:35.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049159069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049237333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.836" endtime="20201117 14:47:35.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.856" endtime="20201117 14:47:35.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.451" endtime="20201117 14:47:35.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.446" endtime="20201117 14:47:35.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.875" level="INFO">${RESULT} = [{'time': 0.049237333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.82640000000015e-05, 'source_diff': 7.82640000000015e-05}, {'time': 0.049329361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:35.865" endtime="20201117 14:47:35.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.907" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:35.877" endtime="20201117 14:47:35.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.919" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.916" endtime="20201117 14:47:35.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.926" level="INFO">VALUE: [7.82640000000015e-05, 7.751400000000075e-05, 7.784699999999894e-05, 7.815299999999747e-05, 7.816700000000398e-05, 7.756899999999955e-05, 7.752800000000032e-05, 7.755599999999946e-05, 7.730599999999921e-05, 7.76389999999974e-05, 7.772300000000176e-05, 7.755499999999999e-05, 7.820799999999628e-05, 7.806900000000006e-05, 7.765200000000444e-05, 7.754199999999989e-05, 7.750000000000118e-05, 7.815299999999747e-05, 7.825000000000193e-05, 7.793099999999636e-05, 7.795900000000244e-05, 7.79589999999955e-05, 7.744499999999543e-05, 7.762500000000477e-05, 7.729100000000017e-05, 7.741599999999682e-05, 7.791700000000373e-05, 7.744500000000237e-05, 7.80969999999992e-05, 7.80969999999992e-05, 7.823600000000236e-05, 7.800000000000168e-05, 7.793099999999636e-05, 7.811099999999876e-05, 7.752700000000085e-05, 7.820799999999628e-05, 7.758299999999912e-05, 7.761099999999826e-05, 7.733299999999887e-05, 7.784699999999894e-05, 7.783299999999937e-05, 7.816700000000398e-05, 7.747200000000204e-05, 7.82640000000015e-05, 7.773600000000186e-05, 7.819500000000312e-05, 7.744500000000237e-05, 7.752800000000032e-05, 7.791700000000373e-05, 7.744499999999543e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.921" endtime="20201117 14:47:35.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.909" endtime="20201117 14:47:35.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.935" endtime="20201117 14:47:35.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.944" endtime="20201117 14:47:35.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.939" endtime="20201117 14:47:35.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.930" endtime="20201117 14:47:35.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.384" endtime="20201117 14:47:35.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.379" endtime="20201117 14:47:35.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.377" endtime="20201117 14:47:35.971"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.977" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.000" endtime="20201117 14:47:36.022"></status>
</kw>
<msg timestamp="20201117 14:47:36.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.997" endtime="20201117 14:47:36.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.026" endtime="20201117 14:47:36.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.032" endtime="20201117 14:47:36.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.989" endtime="20201117 14:47:36.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.983" endtime="20201117 14:47:36.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.057" endtime="20201117 14:47:36.421"></status>
</kw>
<msg timestamp="20201117 14:47:36.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049687792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049766208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.054" endtime="20201117 14:47:36.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049687792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049766208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.431" endtime="20201117 14:47:36.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.451" endtime="20201117 14:47:36.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.046" endtime="20201117 14:47:36.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.041" endtime="20201117 14:47:36.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.472" level="INFO">${RESULT} = [{'time': 0.049766208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.841599999999782e-05, 'source_diff': 7.841599999999782e-05}, {'time': 0.04985725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:36.462" endtime="20201117 14:47:36.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.510" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:36.479" endtime="20201117 14:47:36.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.522" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.519" endtime="20201117 14:47:36.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.527" level="INFO">VALUE: [7.841599999999782e-05, 7.869399999999721e-05, 7.875000000000243e-05, 7.89719999999966e-05, 7.894399999999746e-05, 7.856900000000056e-05, 7.837499999999858e-05, 7.855600000000046e-05, 7.825000000000193e-05, 7.882000000000028e-05, 7.880500000000124e-05, 7.86519999999985e-05, 7.862499999999883e-05, 7.892999999999789e-05, 7.850000000000218e-05, 7.884700000000688e-05, 7.881899999999387e-05, 7.854200000000089e-05, 7.879200000000114e-05, 7.830600000000021e-05, 7.894399999999746e-05, 7.854200000000089e-05, 7.852700000000185e-05, 7.900000000000268e-05, 7.919399999999771e-05, 7.833299999999987e-05, 7.834699999999944e-05, 7.89440000000044e-05, 7.888899999999865e-05, 7.91389999999989e-05, 7.930500000000174e-05, 7.836099999999901e-05, 7.883399999999985e-05, 7.869399999999721e-05, 7.829200000000064e-05, 7.870900000000319e-05, 7.8764000000002e-05, 7.843000000000433e-05, 7.922200000000379e-05, 7.89719999999966e-05, 7.866699999999754e-05, 7.894399999999746e-05, 7.855600000000046e-05, 7.834699999999944e-05, 7.854200000000089e-05, 7.831999999999978e-05, 7.863900000000534e-05, 7.891599999999832e-05, 7.90840000000001e-05, 7.848600000000261e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.524" endtime="20201117 14:47:36.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.512" endtime="20201117 14:47:36.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.537" endtime="20201117 14:47:36.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.546" endtime="20201117 14:47:36.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.541" endtime="20201117 14:47:36.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.532" endtime="20201117 14:47:36.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.979" endtime="20201117 14:47:36.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.974" endtime="20201117 14:47:36.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.972" endtime="20201117 14:47:36.573"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.579" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.602" endtime="20201117 14:47:36.624"></status>
</kw>
<msg timestamp="20201117 14:47:36.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.598" endtime="20201117 14:47:36.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.628" endtime="20201117 14:47:36.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.635" endtime="20201117 14:47:36.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.590" endtime="20201117 14:47:36.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.584" endtime="20201117 14:47:36.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.660" endtime="20201117 14:47:37.025"></status>
</kw>
<msg timestamp="20201117 14:47:37.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049662486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049742028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.656" endtime="20201117 14:47:37.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049662486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049742028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.035" endtime="20201117 14:47:37.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.056" endtime="20201117 14:47:37.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.648" endtime="20201117 14:47:37.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.643" endtime="20201117 14:47:37.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.074" level="INFO">${RESULT} = [{'time': 0.049742028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.954200000000189e-05, 'source_diff': 7.954200000000189e-05}, {'time': 0.049840014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:37.065" endtime="20201117 14:47:37.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.110" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:37.077" endtime="20201117 14:47:37.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.122" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.119" endtime="20201117 14:47:37.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.127" level="INFO">VALUE: [7.954200000000189e-05, 7.941700000000523e-05, 7.948599999999667e-05, 8.007000000000153e-05, 7.970899999999725e-05, 8.007000000000153e-05, 8.012500000000033e-05, 7.940199999999925e-05, 7.970800000000472e-05, 7.955500000000199e-05, 7.988899999999965e-05, 7.933300000000088e-05, 7.94719999999971e-05, 7.988899999999965e-05, 7.99169999999988e-05, 8.024999999999699e-05, 7.974999999999649e-05, 7.952800000000232e-05, 7.94719999999971e-05, 8.024999999999699e-05, 7.937499999999958e-05, 7.98049999999953e-05, 8.017999999999914e-05, 7.948599999999667e-05, 7.9764000000003e-05, 8.008300000000163e-05, 7.987500000000008e-05, 7.945799999999753e-05, 7.933400000000035e-05, 8.011100000000076e-05, 7.927800000000207e-05, 7.930600000000121e-05, 7.948599999999667e-05, 7.991599999999932e-05, 8.01389999999999e-05, 7.994399999999846e-05, 7.955600000000146e-05, 8.006900000000206e-05, 7.981899999999487e-05, 7.972199999999735e-05, 7.986199999999999e-05, 7.983300000000138e-05, 8.022299999999732e-05, 7.999999999999674e-05, 8.013800000000043e-05, 7.93190000000013e-05, 7.991599999999932e-05, 7.930500000000174e-05, 8.016699999999904e-05, 8.012500000000033e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.124" endtime="20201117 14:47:37.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.112" endtime="20201117 14:47:37.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.137" endtime="20201117 14:47:37.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.146" endtime="20201117 14:47:37.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.141" endtime="20201117 14:47:37.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.132" endtime="20201117 14:47:37.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.580" endtime="20201117 14:47:37.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.576" endtime="20201117 14:47:37.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.574" endtime="20201117 14:47:37.173"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.178" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.202" endtime="20201117 14:47:37.224"></status>
</kw>
<msg timestamp="20201117 14:47:37.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.198" endtime="20201117 14:47:37.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.228" endtime="20201117 14:47:37.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.235" endtime="20201117 14:47:37.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.190" endtime="20201117 14:47:37.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.184" endtime="20201117 14:47:37.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.262" endtime="20201117 14:47:37.625"></status>
</kw>
<msg timestamp="20201117 14:47:37.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049727236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049808444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.257" endtime="20201117 14:47:37.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049727236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049808444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.635" endtime="20201117 14:47:37.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.656" endtime="20201117 14:47:37.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.249" endtime="20201117 14:47:37.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.244" endtime="20201117 14:47:37.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.676" level="INFO">${RESULT} = [{'time': 0.049808444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.120799999999928e-05, 'source_diff': 8.120799999999928e-05}, {'time': 0.049901472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:37.666" endtime="20201117 14:47:37.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.708" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:37.678" endtime="20201117 14:47:37.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.720" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.718" endtime="20201117 14:47:37.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.726" level="INFO">VALUE: [8.120799999999928e-05, 8.088900000000065e-05, 8.105499999999655e-05, 8.049999999999724e-05, 8.072199999999835e-05, 8.087500000000108e-05, 8.055599999999552e-05, 8.113899999999397e-05, 8.051399999999681e-05, 8.073599999999792e-05, 8.054199999999595e-05, 8.088800000000118e-05, 8.054099999999648e-05, 8.079100000000367e-05, 8.058300000000213e-05, 8.056900000000256e-05, 8.124999999999799e-05, 8.095799999999903e-05, 8.083300000000238e-05, 8.063800000000093e-05, 8.104200000000339e-05, 8.07090000000052e-05, 8.038900000000015e-05, 8.099999999999774e-05, 8.036200000000049e-05, 8.063800000000093e-05, 8.045800000000547e-05, 8.10970000000022e-05, 8.076399999999706e-05, 8.118099999999961e-05, 8.111100000000177e-05, 8.031999999999484e-05, 8.051400000000375e-05, 8.044399999999896e-05, 8.104200000000339e-05, 8.123599999999842e-05, 8.032000000000178e-05, 8.095800000000597e-05, 8.065299999999997e-05, 8.048599999999767e-05, 8.090300000000022e-05, 8.112500000000133e-05, 8.123599999999842e-05, 8.105599999999602e-05, 8.125000000000493e-05, 8.059799999999423e-05, 8.072299999999782e-05, 8.041599999999982e-05, 8.06390000000004e-05, 8.070799999999878e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.722" endtime="20201117 14:47:37.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.710" endtime="20201117 14:47:37.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.735" endtime="20201117 14:47:37.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.750" endtime="20201117 14:47:37.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.745" endtime="20201117 14:47:37.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.730" endtime="20201117 14:47:37.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.180" endtime="20201117 14:47:37.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.176" endtime="20201117 14:47:37.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.174" endtime="20201117 14:47:37.777"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.783" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.795" endtime="20201117 14:47:37.815"></status>
</kw>
<msg timestamp="20201117 14:47:37.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.794" endtime="20201117 14:47:37.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.816" endtime="20201117 14:47:37.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.820" endtime="20201117 14:47:37.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.790" endtime="20201117 14:47:37.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.787" endtime="20201117 14:47:37.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.831" endtime="20201117 14:47:38.118"></status>
</kw>
<msg timestamp="20201117 14:47:38.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037024444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037106125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.830" endtime="20201117 14:47:38.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037024444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037106125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.123" endtime="20201117 14:47:38.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.132" endtime="20201117 14:47:38.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.826" endtime="20201117 14:47:38.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.824" endtime="20201117 14:47:38.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.140" level="INFO">${RESULT} = [{'time': 0.037106125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.168100000000011e-05, 'source_diff': 8.168100000000011e-05}, {'time': 0.037209125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:38.136" endtime="20201117 14:47:38.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.154" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:38.141" endtime="20201117 14:47:38.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.160" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.158" endtime="20201117 14:47:38.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.162" level="INFO">VALUE: [8.168100000000011e-05, 8.205600000000396e-05, 8.190299999999429e-05, 8.144499999999943e-05, 8.215300000000147e-05, 8.166600000000107e-05, 8.133399999999541e-05, 8.212500000000234e-05, 8.137500000000158e-05, 8.201399999999831e-05, 8.156899999999662e-05, 8.166700000000054e-05, 8.138899999999422e-05, 8.161200000000174e-05, 8.201399999999831e-05, 8.151399999999781e-05, 8.140300000000072e-05, 8.159800000000217e-05, 8.22369999999989e-05, 8.148599999999867e-05, 8.211100000000277e-05, 8.14170000000003e-05, 8.154099999999748e-05, 8.205600000000396e-05, 8.198599999999917e-05, 8.176399999999806e-05, 8.130600000000321e-05, 8.182000000000328e-05, 8.201399999999831e-05, 8.220800000000028e-05, 8.179099999999773e-05, 8.177799999999763e-05, 8.138799999999474e-05, 8.219399999999377e-05, 8.162500000000183e-05, 8.145799999999953e-05, 8.166700000000054e-05, 8.173599999999892e-05, 8.14170000000003e-05, 8.166700000000054e-05, 8.199999999999874e-05, 8.173599999999892e-05, 8.14170000000003e-05, 8.223700000000583e-05, 8.183299999999644e-05, 8.202700000000535e-05, 8.191600000000132e-05, 8.219500000000018e-05, 8.213899999999497e-05, 8.169499999999968e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.161" endtime="20201117 14:47:38.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.155" endtime="20201117 14:47:38.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.166" endtime="20201117 14:47:38.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.171" endtime="20201117 14:47:38.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.169" endtime="20201117 14:47:38.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.164" endtime="20201117 14:47:38.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.785" endtime="20201117 14:47:38.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.780" endtime="20201117 14:47:38.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.778" endtime="20201117 14:47:38.196"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.201" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.225" endtime="20201117 14:47:38.247"></status>
</kw>
<msg timestamp="20201117 14:47:38.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.222" endtime="20201117 14:47:38.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.251" endtime="20201117 14:47:38.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.258" endtime="20201117 14:47:38.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.213" endtime="20201117 14:47:38.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.207" endtime="20201117 14:47:38.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.285" endtime="20201117 14:47:38.647"></status>
</kw>
<msg timestamp="20201117 14:47:38.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048888986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048971861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.281" endtime="20201117 14:47:38.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048888986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048971861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.657" endtime="20201117 14:47:38.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.677" endtime="20201117 14:47:38.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.273" endtime="20201117 14:47:38.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.268" endtime="20201117 14:47:38.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.698" level="INFO">${RESULT} = [{'time': 0.048971861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.287499999999615e-05, 'source_diff': 8.287499999999615e-05}, {'time': 0.049065903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:38.688" endtime="20201117 14:47:38.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.730" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:38.700" endtime="20201117 14:47:38.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.742" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.740" endtime="20201117 14:47:38.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.748" level="INFO">VALUE: [8.287499999999615e-05, 8.244500000000043e-05, 8.240300000000172e-05, 8.266700000000154e-05, 8.26390000000024e-05, 8.298699999999964e-05, 8.277800000000557e-05, 8.238900000000215e-05, 8.261100000000327e-05, 8.233300000000388e-05, 8.294400000000146e-05, 8.261100000000327e-05, 8.288899999999572e-05, 8.265300000000197e-05, 8.229200000000464e-05, 8.323600000000042e-05, 8.29170000000018e-05, 8.318100000000161e-05, 8.277699999999916e-05, 8.29590000000005e-05, 8.227699999999866e-05, 8.290300000000222e-05, 8.227799999999813e-05, 8.308299999999769e-05, 8.306899999999812e-05, 8.248599999999967e-05, 8.24449999999935e-05, 8.31669999999951e-05, 8.257000000000403e-05, 8.240300000000172e-05, 8.31669999999951e-05, 8.2764000000006e-05, 8.268000000000164e-05, 8.240300000000172e-05, 8.287499999999615e-05, 8.301399999999931e-05, 8.24170000000013e-05, 8.315299999999554e-05, 8.258299999999719e-05, 8.31390000000029e-05, 8.249999999999924e-05, 8.256999999999709e-05, 8.261200000000274e-05, 8.295800000000103e-05, 8.288800000000318e-05, 8.305500000000549e-05, 8.234800000000292e-05, 8.299999999999974e-05, 8.270800000000078e-05, 8.29170000000018e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.745" endtime="20201117 14:47:38.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.732" endtime="20201117 14:47:38.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.757" endtime="20201117 14:47:38.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.766" endtime="20201117 14:47:38.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.762" endtime="20201117 14:47:38.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.753" endtime="20201117 14:47:38.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.203" endtime="20201117 14:47:38.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.198" endtime="20201117 14:47:38.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.197" endtime="20201117 14:47:38.795"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.801" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.825" endtime="20201117 14:47:38.847"></status>
</kw>
<msg timestamp="20201117 14:47:38.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.821" endtime="20201117 14:47:38.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.851" endtime="20201117 14:47:38.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.857" endtime="20201117 14:47:38.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.814" endtime="20201117 14:47:38.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.808" endtime="20201117 14:47:38.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.882" endtime="20201117 14:47:39.246"></status>
</kw>
<msg timestamp="20201117 14:47:39.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051965542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052049361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.879" endtime="20201117 14:47:39.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051965542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052049361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.257" endtime="20201117 14:47:39.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.277" endtime="20201117 14:47:39.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.871" endtime="20201117 14:47:39.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.866" endtime="20201117 14:47:39.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.296" level="INFO">${RESULT} = [{'time': 0.052049361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.381899999999887e-05, 'source_diff': 8.381899999999887e-05}, {'time': 0.052144292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:39.286" endtime="20201117 14:47:39.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.333" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:39.299" endtime="20201117 14:47:39.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.344" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.342" endtime="20201117 14:47:39.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.350" level="INFO">VALUE: [8.381899999999887e-05, 8.369500000000168e-05, 8.348600000000067e-05, 8.358300000000513e-05, 8.363899999999647e-05, 8.361099999999733e-05, 8.342999999999545e-05, 8.404200000000639e-05, 8.358299999999819e-05, 8.375000000000049e-05, 8.391699999999586e-05, 8.329200000000564e-05, 8.347300000000057e-05, 8.402799999999988e-05, 8.345800000000153e-05, 8.381899999999887e-05, 8.338899999999622e-05, 8.404099999999998e-05, 8.387499999999715e-05, 8.359699999999776e-05, 8.415299999999654e-05, 8.419400000000271e-05, 8.37919999999992e-05, 8.323600000000042e-05, 8.348600000000067e-05, 8.41390000000039e-05, 8.358299999999819e-05, 8.394400000000246e-05, 8.416600000000357e-05, 8.394400000000246e-05, 8.413899999999697e-05, 8.350000000000024e-05, 8.368099999999518e-05, 8.355599999999852e-05, 8.37370000000004e-05, 8.427800000000013e-05, 8.337499999999665e-05, 8.416700000000304e-05, 8.401300000000084e-05, 8.418100000000261e-05, 8.419400000000271e-05, 8.33469999999975e-05, 8.398700000000064e-05, 8.391699999999586e-05, 8.377799999999963e-05, 8.36669999999956e-05, 8.405599999999902e-05, 8.366600000000307e-05, 8.395800000000203e-05, 8.419400000000271e-05]</msg>
<status status="PASS" starttime="20201117 14:47:39.347" endtime="20201117 14:47:39.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.335" endtime="20201117 14:47:39.353"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.360" endtime="20201117 14:47:39.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.369" endtime="20201117 14:47:39.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.365" endtime="20201117 14:47:39.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.355" endtime="20201117 14:47:39.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.803" endtime="20201117 14:47:39.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.798" endtime="20201117 14:47:39.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.796" endtime="20201117 14:47:39.396"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.402" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.425" endtime="20201117 14:47:39.447"></status>
</kw>
<msg timestamp="20201117 14:47:39.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.421" endtime="20201117 14:47:39.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.451" endtime="20201117 14:47:39.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.458" endtime="20201117 14:47:39.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.414" endtime="20201117 14:47:39.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.408" endtime="20201117 14:47:39.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.483" endtime="20201117 14:47:39.845"></status>
</kw>
<msg timestamp="20201117 14:47:39.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049331722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049416347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.479" endtime="20201117 14:47:39.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049331722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049416347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.855" endtime="20201117 14:47:39.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.875" endtime="20201117 14:47:39.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.471" endtime="20201117 14:47:39.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.466" endtime="20201117 14:47:39.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.896" level="INFO">${RESULT} = [{'time': 0.049416347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.46249999999979e-05, 'source_diff': 8.46249999999979e-05}, {'time': 0.049515361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:39.886" endtime="20201117 14:47:39.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.928" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:39.898" endtime="20201117 14:47:39.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.940" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.938" endtime="20201117 14:47:39.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.947" level="INFO">VALUE: [8.46249999999979e-05, 8.477800000000063e-05, 8.463899999999747e-05, 8.48050000000003e-05, 8.433299999999894e-05, 8.488899999999772e-05, 8.461100000000527e-05, 8.509799999999873e-05, 8.5152000000005e-05, 8.470800000000278e-05, 8.436099999999808e-05, 8.505600000000002e-05, 8.49720000000026e-05, 8.519399999999677e-05, 8.433299999999894e-05, 8.520799999999634e-05, 8.434700000000545e-05, 8.433399999999841e-05, 8.519500000000318e-05, 8.455500000000005e-05, 8.43469999999985e-05, 8.443000000000339e-05, 8.431899999999937e-05, 8.427800000000013e-05, 8.48050000000003e-05, 8.487500000000509e-05, 8.520800000000328e-05, 8.456999999999909e-05, 8.440299999999679e-05, 8.46249999999979e-05, 8.437499999999765e-05, 8.452800000000038e-05, 8.501300000000184e-05, 8.454099999999354e-05, 8.494500000000293e-05, 8.444400000000296e-05, 8.51669999999971e-05, 8.49720000000026e-05, 8.476400000000106e-05, 8.515299999999754e-05, 8.493100000000336e-05, 8.493099999999643e-05, 8.447199999999516e-05, 8.438799999999774e-05, 8.455500000000005e-05, 8.461099999999833e-05, 8.51390000000049e-05, 8.502800000000088e-05, 8.519399999999677e-05, 8.444399999999602e-05]</msg>
<status status="PASS" starttime="20201117 14:47:39.942" endtime="20201117 14:47:39.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.930" endtime="20201117 14:47:39.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.956" endtime="20201117 14:47:39.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.965" endtime="20201117 14:47:39.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.960" endtime="20201117 14:47:39.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.951" endtime="20201117 14:47:39.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.403" endtime="20201117 14:47:39.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.399" endtime="20201117 14:47:39.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.397" endtime="20201117 14:47:39.992"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.998" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.021" endtime="20201117 14:47:40.044"></status>
</kw>
<msg timestamp="20201117 14:47:40.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.017" endtime="20201117 14:47:40.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.047" endtime="20201117 14:47:40.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.054" endtime="20201117 14:47:40.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.010" endtime="20201117 14:47:40.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.004" endtime="20201117 14:47:40.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.079" endtime="20201117 14:47:40.441"></status>
</kw>
<msg timestamp="20201117 14:47:40.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049361931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049447236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.075" endtime="20201117 14:47:40.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049361931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049447236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.452" endtime="20201117 14:47:40.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.472" endtime="20201117 14:47:40.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.068" endtime="20201117 14:47:40.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.063" endtime="20201117 14:47:40.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.491" level="INFO">${RESULT} = [{'time': 0.049447236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.53050000000008e-05, 'source_diff': 8.53050000000008e-05}, {'time': 0.049549264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:40.481" endtime="20201117 14:47:40.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.525" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:40.494" endtime="20201117 14:47:40.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.536" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.534" endtime="20201117 14:47:40.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.542" level="INFO">VALUE: [8.53050000000008e-05, 8.530600000000027e-05, 8.550000000000224e-05, 8.594500000000393e-05, 8.591699999999786e-05, 8.580600000000077e-05, 8.606900000000112e-05, 8.57920000000012e-05, 8.601300000000284e-05, 8.611099999999983e-05, 8.54999999999953e-05, 8.536099999999908e-05, 8.575000000000249e-05, 8.590299999999829e-05, 8.565199999999856e-05, 8.602799999999494e-05, 8.591699999999786e-05, 8.620900000000375e-05, 8.59170000000048e-05, 8.574999999999555e-05, 8.531900000000037e-05, 8.568099999999718e-05, 8.587499999999915e-05, 8.619399999999777e-05, 8.573600000000292e-05, 8.550000000000224e-05, 8.536100000000602e-05, 8.598599999999623e-05, 8.555600000000052e-05, 8.583399999999991e-05, 8.583399999999991e-05, 8.592999999999795e-05, 8.605500000000155e-05, 8.545899999999607e-05, 8.563899999999847e-05, 8.568099999999718e-05, 8.558300000000019e-05, 8.554199999999401e-05, 8.626400000000256e-05, 8.594399999999752e-05, 8.5847e-05, 8.541699999999736e-05, 8.572200000000335e-05, 8.551399999999487e-05, 8.563899999999847e-05, 8.591600000000532e-05, 8.538899999999822e-05, 8.543100000000386e-05, 8.597199999999666e-05, 8.615299999999854e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.539" endtime="20201117 14:47:40.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.527" endtime="20201117 14:47:40.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.552" endtime="20201117 14:47:40.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.560" endtime="20201117 14:47:40.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.556" endtime="20201117 14:47:40.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.547" endtime="20201117 14:47:40.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.999" endtime="20201117 14:47:40.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.995" endtime="20201117 14:47:40.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.993" endtime="20201117 14:47:40.588"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.593" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.616" endtime="20201117 14:47:40.638"></status>
</kw>
<msg timestamp="20201117 14:47:40.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.613" endtime="20201117 14:47:40.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.642" endtime="20201117 14:47:40.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.648" endtime="20201117 14:47:40.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.605" endtime="20201117 14:47:40.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.599" endtime="20201117 14:47:40.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.673" endtime="20201117 14:47:41.049"></status>
</kw>
<msg timestamp="20201117 14:47:41.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049264222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049351278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.670" endtime="20201117 14:47:41.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049264222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049351278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.060" endtime="20201117 14:47:41.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.080" endtime="20201117 14:47:41.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.662" endtime="20201117 14:47:41.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.657" endtime="20201117 14:47:41.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.101" level="INFO">${RESULT} = [{'time': 0.049351278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.705599999999508e-05, 'source_diff': 8.705599999999508e-05}, {'time': 0.049449292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:41.091" endtime="20201117 14:47:41.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.133" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:41.103" endtime="20201117 14:47:41.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.145" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.142" endtime="20201117 14:47:41.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.150" level="INFO">VALUE: [8.705599999999508e-05, 8.626399999999562e-05, 8.663899999999947e-05, 8.654099999999554e-05, 8.6847000000001e-05, 8.658300000000119e-05, 8.722199999999791e-05, 8.640299999999879e-05, 8.640299999999879e-05, 8.648599999999673e-05, 8.657000000000109e-05, 8.691699999999886e-05, 8.723699999999696e-05, 8.71250000000004e-05, 8.687500000000015e-05, 8.677699999999622e-05, 8.694399999999852e-05, 8.648599999999673e-05, 8.679099999999579e-05, 8.670799999999784e-05, 8.633300000000094e-05, 8.694399999999852e-05, 8.633300000000094e-05, 8.669500000000468e-05, 8.652800000000238e-05, 8.655599999999458e-05, 8.627799999999519e-05, 8.730599999999533e-05, 8.66249999999999e-05, 8.709700000000126e-05, 8.719399999999877e-05, 8.665299999999904e-05, 8.695899999999757e-05, 8.718099999999868e-05, 8.672199999999741e-05, 8.715299999999954e-05, 8.722299999999739e-05, 8.656900000000162e-05, 8.686200000000005e-05, 8.709700000000126e-05, 8.715200000000006e-05, 8.658400000000066e-05, 8.725000000000399e-05, 8.675000000000349e-05, 8.663899999999947e-05, 8.672200000000435e-05, 8.657000000000109e-05, 8.647199999999716e-05, 8.723600000000442e-05, 8.715299999999954e-05]</msg>
<status status="PASS" starttime="20201117 14:47:41.147" endtime="20201117 14:47:41.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.135" endtime="20201117 14:47:41.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.160" endtime="20201117 14:47:41.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.169" endtime="20201117 14:47:41.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.164" endtime="20201117 14:47:41.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.155" endtime="20201117 14:47:41.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.595" endtime="20201117 14:47:41.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.590" endtime="20201117 14:47:41.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.589" endtime="20201117 14:47:41.196"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.202" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.225" endtime="20201117 14:47:41.248"></status>
</kw>
<msg timestamp="20201117 14:47:41.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.221" endtime="20201117 14:47:41.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.252" endtime="20201117 14:47:41.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.258" endtime="20201117 14:47:41.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.214" endtime="20201117 14:47:41.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.207" endtime="20201117 14:47:41.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.284" endtime="20201117 14:47:41.605"></status>
</kw>
<msg timestamp="20201117 14:47:41.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049495028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049583028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.279" endtime="20201117 14:47:41.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049495028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049583028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.610" endtime="20201117 14:47:41.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.618" endtime="20201117 14:47:41.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.272" endtime="20201117 14:47:41.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.267" endtime="20201117 14:47:41.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.627" level="INFO">${RESULT} = [{'time': 0.049583028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.79999999999978e-05, 'source_diff': 8.79999999999978e-05}, {'time': 0.049688028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:41.623" endtime="20201117 14:47:41.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.642" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:41.628" endtime="20201117 14:47:41.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.648" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.647" endtime="20201117 14:47:41.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.651" level="INFO">VALUE: [8.79999999999978e-05, 8.787500000000115e-05, 8.776300000000459e-05, 8.741699999999936e-05, 8.736200000000055e-05, 8.824999999999805e-05, 8.763900000000047e-05, 8.811100000000183e-05, 8.763900000000047e-05, 8.784700000000201e-05, 8.779100000000373e-05, 8.736099999999414e-05, 8.787500000000115e-05, 8.784800000000148e-05, 8.786200000000105e-05, 8.787500000000115e-05, 8.788900000000072e-05, 8.811099999999489e-05, 8.791600000000038e-05, 8.758300000000219e-05, 8.754200000000295e-05, 8.745799999999859e-05, 8.765300000000004e-05, 8.802800000000388e-05, 8.79869999999977e-05, 8.823699999999796e-05, 8.758400000000166e-05, 8.75129999999974e-05, 8.761100000000133e-05, 8.79999999999978e-05, 8.801400000000431e-05, 8.74449999999985e-05, 8.76250000000009e-05, 8.76250000000009e-05, 8.776400000000406e-05, 8.798599999999823e-05, 8.742999999999945e-05, 8.774999999999755e-05, 8.731900000000237e-05, 8.763799999999405e-05, 8.736100000000108e-05, 8.81250000000014e-05, 8.74999999999973e-05, 8.825000000000499e-05, 8.802799999999694e-05, 8.806999999999565e-05, 8.791699999999986e-05, 8.734800000000098e-05, 8.820799999999934e-05, 8.72920000000027e-05]</msg>
<status status="PASS" starttime="20201117 14:47:41.649" endtime="20201117 14:47:41.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.643" endtime="20201117 14:47:41.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.655" endtime="20201117 14:47:41.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.659" endtime="20201117 14:47:41.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.657" endtime="20201117 14:47:41.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.653" endtime="20201117 14:47:41.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.203" endtime="20201117 14:47:41.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.199" endtime="20201117 14:47:41.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.197" endtime="20201117 14:47:41.681"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.683" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.694" endtime="20201117 14:47:41.714"></status>
</kw>
<msg timestamp="20201117 14:47:41.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.692" endtime="20201117 14:47:41.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.715" endtime="20201117 14:47:41.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.723" endtime="20201117 14:47:41.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.689" endtime="20201117 14:47:41.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.686" endtime="20201117 14:47:41.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.734" endtime="20201117 14:47:42.022"></status>
</kw>
<msg timestamp="20201117 14:47:42.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027487847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027576861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.733" endtime="20201117 14:47:42.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027487847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027576861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.026" endtime="20201117 14:47:42.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.035" endtime="20201117 14:47:42.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.729" endtime="20201117 14:47:42.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.727" endtime="20201117 14:47:42.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.044" level="INFO">${RESULT} = [{'time': 0.027576861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.901400000000184e-05, 'source_diff': 8.901400000000184e-05}, {'time': 0.027679903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:42.040" endtime="20201117 14:47:42.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.058" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:42.045" endtime="20201117 14:47:42.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.064" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.063" endtime="20201117 14:47:42.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.066" level="INFO">VALUE: [8.901400000000184e-05, 8.877799999999769e-05, 8.891700000000086e-05, 8.865300000000104e-05, 8.856900000000015e-05, 8.84730000000021e-05, 8.904100000000151e-05, 8.888900000000172e-05, 8.851400000000134e-05, 8.905500000000108e-05, 8.859699999999929e-05, 8.86250000000019e-05, 8.870899999999932e-05, 8.901400000000184e-05, 8.855600000000005e-05, 8.922299999999939e-05, 8.89999999999988e-05, 8.906900000000065e-05, 8.904200000000098e-05, 8.854099999999754e-05, 8.836099999999861e-05, 8.906900000000065e-05, 8.873600000000245e-05, 8.923599999999948e-05, 8.91250000000024e-05, 8.888900000000172e-05, 8.867999999999723e-05, 8.833400000000241e-05, 8.900000000000227e-05, 8.875000000000202e-05, 8.898599999999923e-05, 8.915299999999807e-05, 8.883299999999997e-05, 8.922199999999991e-05, 8.858299999999972e-05, 8.845899999999907e-05, 8.920800000000034e-05, 8.8459000000006e-05, 8.91250000000024e-05, 8.911099999999589e-05, 8.922199999999991e-05, 8.861099999999539e-05, 8.895800000000009e-05, 8.874999999999855e-05, 8.909699999999632e-05, 8.894400000000052e-05, 8.845799999999959e-05, 8.905599999999708e-05, 8.851399999999787e-05, 8.836099999999514e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.065" endtime="20201117 14:47:42.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.059" endtime="20201117 14:47:42.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.071" endtime="20201117 14:47:42.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.075" endtime="20201117 14:47:42.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.073" endtime="20201117 14:47:42.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.069" endtime="20201117 14:47:42.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.684" endtime="20201117 14:47:42.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.682" endtime="20201117 14:47:42.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.681" endtime="20201117 14:47:42.097"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.099" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.110" endtime="20201117 14:47:42.130"></status>
</kw>
<msg timestamp="20201117 14:47:42.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.109" endtime="20201117 14:47:42.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.132" endtime="20201117 14:47:42.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.135" endtime="20201117 14:47:42.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.105" endtime="20201117 14:47:42.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.102" endtime="20201117 14:47:42.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.146" endtime="20201117 14:47:42.433"></status>
</kw>
<msg timestamp="20201117 14:47:42.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028212681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028302542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.145" endtime="20201117 14:47:42.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028212681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028302542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.438" endtime="20201117 14:47:42.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.458" endtime="20201117 14:47:42.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.141" endtime="20201117 14:47:42.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.139" endtime="20201117 14:47:42.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.476" level="INFO">${RESULT} = [{'time': 0.028302542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.986100000000011e-05, 'source_diff': 8.986100000000011e-05}, {'time': 0.028410542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:42.467" endtime="20201117 14:47:42.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.509" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:42.479" endtime="20201117 14:47:42.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.521" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.518" endtime="20201117 14:47:42.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.526" level="INFO">VALUE: [8.986100000000011e-05, 8.998600000000023e-05, 9.020900000000082e-05, 8.959700000000029e-05, 9.002699999999947e-05, 8.936099999999961e-05, 8.947200000000016e-05, 8.927799999999819e-05, 8.96800000000017e-05, 8.997200000000066e-05, 9.01670000000021e-05, 8.96800000000017e-05, 9.005599999999808e-05, 9.005599999999808e-05, 8.990300000000229e-05, 8.998600000000023e-05, 9.005500000000208e-05, 8.927800000000166e-05, 8.940300000000179e-05, 8.976399999999912e-05, 9.022199999999744e-05, 8.938899999999875e-05, 8.977799999999869e-05, 8.951400000000234e-05, 8.934799999999951e-05, 8.990199999999934e-05, 8.924999999999905e-05, 8.952799999999844e-05, 8.954099999999854e-05, 8.951399999999887e-05, 8.943000000000145e-05, 9.004200000000545e-05, 8.968100000000118e-05, 9.013900000000297e-05, 8.943100000000093e-05, 8.976400000000606e-05, 8.995900000000057e-05, 8.994400000000152e-05, 9.005500000000555e-05, 8.973599999999998e-05, 9.020800000000134e-05, 8.974999999999955e-05, 8.991699999999492e-05, 8.995800000000109e-05, 8.976399999999912e-05, 9.015200000000306e-05, 8.931899999999743e-05, 9.002800000000588e-05, 8.94999999999993e-05, 8.944400000000102e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.523" endtime="20201117 14:47:42.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.511" endtime="20201117 14:47:42.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.536" endtime="20201117 14:47:42.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.545" endtime="20201117 14:47:42.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.540" endtime="20201117 14:47:42.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.531" endtime="20201117 14:47:42.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.100" endtime="20201117 14:47:42.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.098" endtime="20201117 14:47:42.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.097" endtime="20201117 14:47:42.573"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.579" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.602" endtime="20201117 14:47:42.625"></status>
</kw>
<msg timestamp="20201117 14:47:42.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.598" endtime="20201117 14:47:42.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.628" endtime="20201117 14:47:42.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.635" endtime="20201117 14:47:42.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.591" endtime="20201117 14:47:42.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.585" endtime="20201117 14:47:42.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.660" endtime="20201117 14:47:43.033"></status>
</kw>
<msg timestamp="20201117 14:47:43.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050494403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050585347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.657" endtime="20201117 14:47:43.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050494403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050585347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.044" endtime="20201117 14:47:43.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.064" endtime="20201117 14:47:43.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.649" endtime="20201117 14:47:43.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.644" endtime="20201117 14:47:43.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.084" level="INFO">${RESULT} = [{'time': 0.050585347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.094400000000252e-05, 'source_diff': 9.094400000000252e-05}, {'time': 0.050691375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:43.075" endtime="20201117 14:47:43.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.117" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:43.087" endtime="20201117 14:47:43.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.129" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.126" endtime="20201117 14:47:43.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.134" level="INFO">VALUE: [9.094400000000252e-05, 9.094399999999558e-05, 9.101400000000037e-05, 9.069400000000227e-05, 9.088899999999678e-05, 9.105599999999908e-05, 9.09870000000007e-05, 9.106999999999865e-05, 9.076400000000012e-05, 9.073700000000046e-05, 9.066600000000313e-05, 9.10000000000008e-05, 9.040200000000331e-05, 9.079199999999926e-05, 9.030599999999833e-05, 9.048600000000073e-05, 9.037500000000365e-05, 9.034799999999704e-05, 9.079199999999926e-05, 9.113799999999755e-05, 9.029199999999876e-05, 9.109700000000526e-05, 9.102700000000047e-05, 9.097200000000166e-05, 9.06529999999961e-05, 9.036099999999714e-05, 9.075000000000055e-05, 9.111099999999789e-05, 9.068099999999524e-05, 9.030599999999833e-05, 9.041700000000236e-05, 9.123600000000148e-05, 9.063899999999653e-05, 9.026399999999962e-05, 9.112499999999746e-05, 9.058300000000519e-05, 9.120800000000234e-05, 9.027799999999919e-05, 9.059699999999782e-05, 9.052799999999944e-05, 9.037500000000365e-05, 9.045900000000107e-05, 9.047199999999422e-05, 9.077700000000022e-05, 9.056899999999868e-05, 9.079099999999979e-05, 9.068099999999524e-05, 9.027799999999919e-05, 9.034699999999757e-05, 9.087499999999721e-05]</msg>
<status status="PASS" starttime="20201117 14:47:43.131" endtime="20201117 14:47:43.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.119" endtime="20201117 14:47:43.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.144" endtime="20201117 14:47:43.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.153" endtime="20201117 14:47:43.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.149" endtime="20201117 14:47:43.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.140" endtime="20201117 14:47:43.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.580" endtime="20201117 14:47:43.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.576" endtime="20201117 14:47:43.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.574" endtime="20201117 14:47:43.181"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.187" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.210" endtime="20201117 14:47:43.232"></status>
</kw>
<msg timestamp="20201117 14:47:43.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.206" endtime="20201117 14:47:43.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.236" endtime="20201117 14:47:43.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.243" endtime="20201117 14:47:43.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.198" endtime="20201117 14:47:43.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.192" endtime="20201117 14:47:43.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.268" endtime="20201117 14:47:43.637"></status>
</kw>
<msg timestamp="20201117 14:47:43.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049547556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049639819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.264" endtime="20201117 14:47:43.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049547556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049639819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.647" endtime="20201117 14:47:43.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.668" endtime="20201117 14:47:43.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.256" endtime="20201117 14:47:43.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.251" endtime="20201117 14:47:43.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.686" level="INFO">${RESULT} = [{'time': 0.049639819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.226300000000215e-05, 'source_diff': 9.226300000000215e-05}, {'time': 0.049751861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:43.677" endtime="20201117 14:47:43.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.722" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:43.688" endtime="20201117 14:47:43.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.734" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.731" endtime="20201117 14:47:43.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.740" level="INFO">VALUE: [9.226300000000215e-05, 9.211099999999889e-05, 9.138899999999728e-05, 9.155500000000011e-05, 9.173600000000198e-05, 9.219399999999683e-05, 9.151399999999393e-05, 9.151400000000087e-05, 9.155599999999958e-05, 9.183399999999897e-05, 9.165199999999762e-05, 9.175000000000155e-05, 9.168099999999624e-05, 9.176400000000112e-05, 9.191699999999692e-05, 9.173599999999504e-05, 9.223599999999554e-05, 9.198600000000223e-05, 9.162499999999796e-05, 9.184800000000548e-05, 9.184799999999854e-05, 9.180500000000036e-05, 9.174999999999461e-05, 9.16800000000037e-05, 9.195800000000309e-05, 9.184699999999907e-05, 9.168100000000318e-05, 9.191699999999692e-05, 9.134699999999857e-05, 9.213900000000497e-05, 9.140299999999685e-05, 9.192999999999701e-05, 9.158299999999925e-05, 9.191699999999692e-05, 9.190299999999735e-05, 9.224999999999511e-05, 9.1332999999999e-05, 9.225000000000205e-05, 9.133300000000594e-05, 9.201400000000137e-05, 9.220900000000282e-05, 9.144399999999608e-05, 9.222199999999597e-05, 9.211099999999889e-05, 9.161099999999839e-05, 9.1332999999999e-05, 9.154100000000054e-05, 9.156899999999968e-05, 9.134700000000551e-05, 9.184699999999907e-05]</msg>
<status status="PASS" starttime="20201117 14:47:43.736" endtime="20201117 14:47:43.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.724" endtime="20201117 14:47:43.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.750" endtime="20201117 14:47:43.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.759" endtime="20201117 14:47:43.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.754" endtime="20201117 14:47:43.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.745" endtime="20201117 14:47:43.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.188" endtime="20201117 14:47:43.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.184" endtime="20201117 14:47:43.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.182" endtime="20201117 14:47:43.786"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.791" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.815" endtime="20201117 14:47:43.839"></status>
</kw>
<msg timestamp="20201117 14:47:43.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.811" endtime="20201117 14:47:43.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.842" endtime="20201117 14:47:43.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.849" endtime="20201117 14:47:43.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.803" endtime="20201117 14:47:43.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.797" endtime="20201117 14:47:43.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.874" endtime="20201117 14:47:44.238"></status>
</kw>
<msg timestamp="20201117 14:47:44.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050203667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050296222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.870" endtime="20201117 14:47:44.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050203667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050296222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.248" endtime="20201117 14:47:44.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.268" endtime="20201117 14:47:44.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.862" endtime="20201117 14:47:44.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.857" endtime="20201117 14:47:44.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.289" level="INFO">${RESULT} = [{'time': 0.050296222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.255500000000111e-05, 'source_diff': 9.255500000000111e-05}, {'time': 0.05040825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:44.279" endtime="20201117 14:47:44.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.322" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:44.292" endtime="20201117 14:47:44.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.334" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.332" endtime="20201117 14:47:44.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.340" level="INFO">VALUE: [9.255500000000111e-05, 9.275000000000255e-05, 9.230600000000033e-05, 9.230600000000033e-05, 9.262499999999896e-05, 9.272199999999647e-05, 9.269499999999681e-05, 9.311099999999989e-05, 9.308300000000075e-05, 9.261099999999939e-05, 9.317999999999826e-05, 9.25000000000023e-05, 9.261100000000633e-05, 9.318099999999774e-05, 9.290300000000529e-05, 9.294499999999706e-05, 9.269399999999733e-05, 9.236099999999914e-05, 9.316699999999817e-05, 9.32079999999974e-05, 9.306900000000118e-05, 9.27079999999969e-05, 9.311099999999989e-05, 9.327800000000219e-05, 9.25000000000023e-05, 9.280600000000083e-05, 9.270899999999638e-05, 9.255600000000058e-05, 9.276400000000212e-05, 9.306900000000118e-05, 9.234699999999957e-05, 9.290199999999887e-05, 9.304100000000204e-05, 9.236099999999914e-05, 9.301400000000237e-05, 9.256900000000068e-05, 9.230600000000033e-05, 9.261199999999886e-05, 9.293000000000495e-05, 9.291699999999792e-05, 9.258300000000025e-05, 9.240200000000531e-05, 9.31659999999987e-05, 9.316600000000563e-05, 9.244400000000402e-05, 9.258300000000025e-05, 9.275000000000255e-05, 9.294399999999758e-05, 9.273600000000298e-05, 9.257000000000015e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.337" endtime="20201117 14:47:44.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.324" endtime="20201117 14:47:44.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.349" endtime="20201117 14:47:44.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.358" endtime="20201117 14:47:44.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.353" endtime="20201117 14:47:44.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.344" endtime="20201117 14:47:44.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.793" endtime="20201117 14:47:44.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.789" endtime="20201117 14:47:44.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.787" endtime="20201117 14:47:44.385"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.391" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.414" endtime="20201117 14:47:44.446"></status>
</kw>
<msg timestamp="20201117 14:47:44.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.410" endtime="20201117 14:47:44.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.449" endtime="20201117 14:47:44.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.457" endtime="20201117 14:47:44.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.403" endtime="20201117 14:47:44.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.396" endtime="20201117 14:47:44.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.483" endtime="20201117 14:47:44.845"></status>
</kw>
<msg timestamp="20201117 14:47:44.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049188597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049282069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.479" endtime="20201117 14:47:44.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049188597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049282069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.855" endtime="20201117 14:47:44.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.876" endtime="20201117 14:47:44.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.471" endtime="20201117 14:47:44.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.466" endtime="20201117 14:47:44.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.894" level="INFO">${RESULT} = [{'time': 0.049282069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.347199999999722e-05, 'source_diff': 9.347199999999722e-05}, {'time': 0.049392111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:44.885" endtime="20201117 14:47:44.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.927" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:44.897" endtime="20201117 14:47:44.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.939" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.937" endtime="20201117 14:47:44.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.945" level="INFO">VALUE: [9.347199999999722e-05, 9.413900000000003e-05, 9.362499999999996e-05, 9.368099999999824e-05, 9.369400000000527e-05, 9.356900000000168e-05, 9.361100000000039e-05, 9.341599999999894e-05, 9.397300000000414e-05, 9.337499999999971e-05, 9.41659999999997e-05, 9.42079999999984e-05, 9.387500000000021e-05, 9.381900000000193e-05, 9.408300000000175e-05, 9.412500000000046e-05, 9.358400000000072e-05, 9.416699999999917e-05, 9.362499999999996e-05, 9.405600000000208e-05, 9.35000000000033e-05, 9.326300000000315e-05, 9.422199999999797e-05, 9.391599999999944e-05, 9.413900000000003e-05, 9.37079999999979e-05, 9.336100000000014e-05, 9.377800000000269e-05, 9.377800000000269e-05, 9.430500000000286e-05, 9.366699999999867e-05, 9.355500000000211e-05, 9.352700000000297e-05, 9.349999999999636e-05, 9.330499999999492e-05, 9.326399999999568e-05, 9.390299999999935e-05, 9.363899999999953e-05, 9.384700000000107e-05, 9.349999999999636e-05, 9.365300000000604e-05, 9.377800000000269e-05, 9.413900000000003e-05, 9.415200000000012e-05, 9.395799999999815e-05, 9.35409999999956e-05, 9.401399999999643e-05, 9.359800000000029e-05, 9.354200000000201e-05, 9.393099999999849e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.942" endtime="20201117 14:47:44.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.929" endtime="20201117 14:47:44.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.955" endtime="20201117 14:47:44.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.964" endtime="20201117 14:47:44.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.959" endtime="20201117 14:47:44.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.950" endtime="20201117 14:47:44.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.392" endtime="20201117 14:47:44.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.388" endtime="20201117 14:47:44.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.386" endtime="20201117 14:47:44.991"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.997" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.020" endtime="20201117 14:47:45.044"></status>
</kw>
<msg timestamp="20201117 14:47:45.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.016" endtime="20201117 14:47:45.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.047" endtime="20201117 14:47:45.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.054" endtime="20201117 14:47:45.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.009" endtime="20201117 14:47:45.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.003" endtime="20201117 14:47:45.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.079" endtime="20201117 14:47:45.441"></status>
</kw>
<msg timestamp="20201117 14:47:45.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049453278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049547625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.075" endtime="20201117 14:47:45.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049453278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049547625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.451" endtime="20201117 14:47:45.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.472" endtime="20201117 14:47:45.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.067" endtime="20201117 14:47:45.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.062" endtime="20201117 14:47:45.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.493" level="INFO">${RESULT} = [{'time': 0.049547625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.434699999999463e-05, 'source_diff': 9.434699999999463e-05}, {'time': 0.049653639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:45.483" endtime="20201117 14:47:45.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:45.526" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:45.496" endtime="20201117 14:47:45.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.538" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:47:45.536" endtime="20201117 14:47:45.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.544" level="INFO">VALUE: [9.434699999999463e-05, 9.512500000000146e-05, 9.483400000000197e-05, 9.525000000000505e-05, 9.474999999999761e-05, 9.515199999999419e-05, 9.512500000000146e-05, 9.46530000000001e-05, 9.479200000000326e-05, 9.513900000000103e-05, 9.513900000000103e-05, 9.449999999999736e-05, 9.511100000000189e-05, 9.501400000000437e-05, 9.493099999999949e-05, 9.46530000000001e-05, 9.519399999999983e-05, 9.486100000000164e-05, 9.469399999999933e-05, 9.427799999999625e-05, 9.526400000000462e-05, 9.46530000000001e-05, 9.516700000000017e-05, 9.479200000000326e-05, 9.488900000000078e-05, 9.523600000000548e-05, 9.437500000000071e-05, 9.465200000000062e-05, 9.484699999999513e-05, 9.44859999999978e-05, 9.441699999999942e-05, 9.493099999999949e-05, 9.511100000000189e-05, 9.462500000000096e-05, 9.459699999999488e-05, 9.431999999999496e-05, 9.511200000000136e-05, 9.512500000000146e-05, 9.462500000000096e-05, 9.455500000000311e-05, 9.452800000000344e-05, 9.501400000000437e-05, 9.525000000000505e-05, 9.494499999999906e-05, 9.46530000000001e-05, 9.501400000000437e-05, 9.509800000000179e-05, 9.469399999999933e-05, 9.456900000000268e-05, 9.484700000000207e-05]</msg>
<status status="PASS" starttime="20201117 14:47:45.540" endtime="20201117 14:47:45.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.528" endtime="20201117 14:47:45.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.553" endtime="20201117 14:47:45.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:45.562" endtime="20201117 14:47:45.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.557" endtime="20201117 14:47:45.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.548" endtime="20201117 14:47:45.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.998" endtime="20201117 14:47:45.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.994" endtime="20201117 14:47:45.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.992" endtime="20201117 14:47:45.590"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.595" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.618" endtime="20201117 14:47:45.642"></status>
</kw>
<msg timestamp="20201117 14:47:45.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.615" endtime="20201117 14:47:45.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.645" endtime="20201117 14:47:45.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.653" endtime="20201117 14:47:45.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.607" endtime="20201117 14:47:45.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.601" endtime="20201117 14:47:45.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.677" endtime="20201117 14:47:45.965"></status>
</kw>
<msg timestamp="20201117 14:47:45.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049550736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049646056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.674" endtime="20201117 14:47:45.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049550736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049646056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.969" endtime="20201117 14:47:45.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.978" endtime="20201117 14:47:45.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.666" endtime="20201117 14:47:45.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.661" endtime="20201117 14:47:45.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.986" level="INFO">${RESULT} = [{'time': 0.049646056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.53200000000029e-05, 'source_diff': 9.53200000000029e-05}, {'time': 0.049751069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:45.982" endtime="20201117 14:47:45.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.002" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:45.987" endtime="20201117 14:47:46.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.008" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.007" endtime="20201117 14:47:46.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.010" level="INFO">VALUE: [9.53200000000029e-05, 9.599999999999886e-05, 9.608299999999681e-05, 9.538899999999434e-05, 9.562499999999502e-05, 9.544400000000008e-05, 9.612500000000246e-05, 9.569499999999981e-05, 9.622299999999945e-05, 9.599999999999886e-05, 9.562500000000196e-05, 9.615199999999519e-05, 9.613900000000203e-05, 9.613899999999509e-05, 9.533299999999606e-05, 9.594400000000058e-05, 9.547199999999922e-05, 9.570899999999938e-05, 9.573599999999904e-05, 9.573599999999904e-05, 9.554199999999707e-05, 9.619400000000083e-05, 9.55000000000053e-05, 9.562500000000196e-05, 9.552800000000444e-05, 9.58059999999969e-05, 9.607000000000365e-05, 9.613900000000203e-05, 9.572199999999947e-05, 9.534800000000204e-05, 9.55279999999975e-05, 9.604199999999757e-05, 9.562499999999502e-05, 9.57079999999999e-05, 9.529099999999735e-05, 9.526400000000462e-05, 9.606900000000418e-05, 9.527799999999725e-05, 9.6027999999998e-05, 9.581999999999646e-05, 9.586200000000211e-05, 9.619500000000031e-05, 9.613900000000203e-05, 9.623599999999954e-05, 9.61660000000017e-05, 9.563900000000153e-05, 9.588900000000178e-05, 9.616700000000117e-05, 9.576399999999818e-05, 9.555600000000358e-05]</msg>
<status status="PASS" starttime="20201117 14:47:46.009" endtime="20201117 14:47:46.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.003" endtime="20201117 14:47:46.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.015" endtime="20201117 14:47:46.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.019" endtime="20201117 14:47:46.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.017" endtime="20201117 14:47:46.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.012" endtime="20201117 14:47:46.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.597" endtime="20201117 14:47:46.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.592" endtime="20201117 14:47:46.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.591" endtime="20201117 14:47:46.040"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.043" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.054" endtime="20201117 14:47:46.074"></status>
</kw>
<msg timestamp="20201117 14:47:46.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.053" endtime="20201117 14:47:46.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.075" endtime="20201117 14:47:46.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.078" endtime="20201117 14:47:46.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.048" endtime="20201117 14:47:46.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.046" endtime="20201117 14:47:46.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.090" endtime="20201117 14:47:46.377"></status>
</kw>
<msg timestamp="20201117 14:47:46.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027955514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028052667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.088" endtime="20201117 14:47:46.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027955514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028052667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.381" endtime="20201117 14:47:46.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.390" endtime="20201117 14:47:46.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.085" endtime="20201117 14:47:46.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.082" endtime="20201117 14:47:46.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.400" level="INFO">${RESULT} = [{'time': 0.028052667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.715299999999913e-05, 'source_diff': 9.715299999999913e-05}, {'time': 0.028162653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:46.395" endtime="20201117 14:47:46.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.414" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:46.401" endtime="20201117 14:47:46.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.419" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.418" endtime="20201117 14:47:46.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.422" level="INFO">VALUE: [9.715299999999913e-05, 9.723600000000054e-05, 9.659700000000035e-05, 9.644399999999761e-05, 9.699999999999986e-05, 9.697200000000072e-05, 9.688899999999931e-05, 9.719400000000183e-05, 9.691700000000192e-05, 9.669399999999786e-05, 9.699999999999986e-05, 9.677800000000222e-05, 9.718100000000174e-05, 9.645800000000065e-05, 9.634799999999957e-05, 9.674999999999961e-05, 9.630499999999792e-05, 9.715199999999966e-05, 9.654200000000154e-05, 9.697199999999725e-05, 9.658300000000078e-05, 9.682000000000093e-05, 9.657000000000068e-05, 9.718099999999827e-05, 9.649999999999936e-05, 9.695799999999768e-05, 9.69019999999994e-05, 9.68470000000006e-05, 9.69860000000003e-05, 9.697199999999725e-05, 9.725000000000011e-05, 9.699999999999986e-05, 9.666699999999473e-05, 9.70000000000068e-05, 9.640200000000237e-05, 9.719400000000183e-05, 9.705499999999867e-05, 9.679200000000526e-05, 9.633299999999706e-05, 9.719400000000183e-05, 9.624999999999911e-05, 9.699999999999986e-05, 9.720900000000088e-05, 9.64729999999997e-05, 9.719500000000131e-05, 9.661100000000339e-05, 9.677699999999928e-05, 9.665200000000262e-05, 9.69860000000003e-05, 9.680500000000536e-05]</msg>
<status status="PASS" starttime="20201117 14:47:46.420" endtime="20201117 14:47:46.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.415" endtime="20201117 14:47:46.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.426" endtime="20201117 14:47:46.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.430" endtime="20201117 14:47:46.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.428" endtime="20201117 14:47:46.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.424" endtime="20201117 14:47:46.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.044" endtime="20201117 14:47:46.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.042" endtime="20201117 14:47:46.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.041" endtime="20201117 14:47:46.453"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.455" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.466" endtime="20201117 14:47:46.485"></status>
</kw>
<msg timestamp="20201117 14:47:46.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.464" endtime="20201117 14:47:46.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.487" endtime="20201117 14:47:46.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.490" endtime="20201117 14:47:46.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.461" endtime="20201117 14:47:46.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.458" endtime="20201117 14:47:46.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.502" endtime="20201117 14:47:46.851"></status>
</kw>
<msg timestamp="20201117 14:47:46.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027985639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028083444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.500" endtime="20201117 14:47:46.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027985639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028083444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.861" endtime="20201117 14:47:46.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.882" endtime="20201117 14:47:46.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.496" endtime="20201117 14:47:46.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.494" endtime="20201117 14:47:46.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.900" level="INFO">${RESULT} = [{'time': 0.028083444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.780499999999942e-05, 'source_diff': 9.780499999999942e-05}, {'time': 0.0281955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:46.891" endtime="20201117 14:47:46.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.933" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:46.903" endtime="20201117 14:47:46.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.945" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.942" endtime="20201117 14:47:46.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.950" level="INFO">VALUE: [9.780499999999942e-05, 9.779199999999932e-05, 9.737500000000024e-05, 9.806899999999924e-05, 9.776400000000018e-05, 9.79860000000013e-05, 9.819499999999884e-05, 9.813899999999709e-05, 9.754199999999907e-05, 9.81799999999998e-05, 9.823599999999807e-05, 9.737500000000024e-05, 9.794399999999912e-05, 9.790299999999988e-05, 9.75279999999995e-05, 9.781899999999899e-05, 9.756899999999874e-05, 9.737500000000024e-05, 9.815300000000013e-05, 9.774999999999714e-05, 9.820899999999841e-05, 9.820799999999894e-05, 9.819399999999937e-05, 9.786100000000117e-05, 9.74860000000008e-05, 9.808400000000175e-05, 9.781899999999899e-05, 9.750000000000036e-05, 9.73470000000011e-05, 9.757000000000168e-05, 9.819499999999537e-05, 9.823600000000154e-05, 9.751399999999993e-05, 9.751399999999993e-05, 9.802700000000053e-05, 9.817999999999633e-05, 9.82359999999946e-05, 9.813900000000403e-05, 9.762500000000396e-05, 9.81809999999958e-05, 9.747200000000122e-05, 9.795800000000215e-05, 9.817999999999633e-05, 9.761099999999745e-05, 9.808299999999881e-05, 9.82080000000024e-05, 9.81939999999959e-05, 9.812499999999752e-05, 9.79860000000013e-05, 9.813900000000403e-05]</msg>
<status status="PASS" starttime="20201117 14:47:46.947" endtime="20201117 14:47:46.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.935" endtime="20201117 14:47:46.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.966" endtime="20201117 14:47:46.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.975" endtime="20201117 14:47:46.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.970" endtime="20201117 14:47:46.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.961" endtime="20201117 14:47:47.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.456" endtime="20201117 14:47:47.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.454" endtime="20201117 14:47:47.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.453" endtime="20201117 14:47:47.002"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.008" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.032" endtime="20201117 14:47:47.055"></status>
</kw>
<msg timestamp="20201117 14:47:47.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.028" endtime="20201117 14:47:47.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.059" endtime="20201117 14:47:47.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.065" endtime="20201117 14:47:47.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.020" endtime="20201117 14:47:47.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.014" endtime="20201117 14:47:47.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.090" endtime="20201117 14:47:47.463"></status>
</kw>
<msg timestamp="20201117 14:47:47.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050251625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050350444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.086" endtime="20201117 14:47:47.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050251625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050350444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.473" endtime="20201117 14:47:47.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.493" endtime="20201117 14:47:47.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.079" endtime="20201117 14:47:47.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.074" endtime="20201117 14:47:47.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.514" level="INFO">${RESULT} = [{'time': 0.050350444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.881899999999999e-05, 'source_diff': 9.881899999999999e-05}, {'time': 0.050462458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:47.504" endtime="20201117 14:47:47.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.547" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:47.516" endtime="20201117 14:47:47.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.559" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.556" endtime="20201117 14:47:47.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.565" level="INFO">VALUE: [9.881899999999999e-05, 9.863900000000453e-05, 9.861099999999845e-05, 9.893000000000401e-05, 9.829199999999982e-05, 9.91660000000047e-05, 9.91809999999968e-05, 9.836199999999767e-05, 9.912499999999852e-05, 9.894500000000306e-05, 9.861199999999792e-05, 9.887499999999827e-05, 9.850000000000136e-05, 9.87080000000029e-05, 9.858299999999931e-05, 9.916700000000417e-05, 9.851400000000093e-05, 9.87359999999951e-05, 9.837499999999777e-05, 9.861099999999845e-05, 9.883399999999903e-05, 9.856999999999921e-05, 9.884700000000607e-05, 9.834699999999863e-05, 9.887499999999827e-05, 9.929200000000082e-05, 9.872200000000247e-05, 9.879200000000032e-05, 9.916699999999723e-05, 9.856999999999921e-05, 9.918100000000374e-05, 9.92080000000034e-05, 9.863899999999759e-05, 9.861099999999845e-05, 9.892999999999708e-05, 9.858299999999931e-05, 9.856899999999974e-05, 9.831899999999949e-05, 9.894500000000306e-05, 9.865299999999716e-05, 9.868100000000324e-05, 9.908299999999981e-05, 9.902700000000153e-05, 9.891600000000444e-05, 9.85410000000006e-05, 9.85280000000005e-05, 9.881899999999999e-05, 9.875000000000161e-05, 9.849999999999443e-05, 9.893100000000349e-05]</msg>
<status status="PASS" starttime="20201117 14:47:47.561" endtime="20201117 14:47:47.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.549" endtime="20201117 14:47:47.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.575" endtime="20201117 14:47:47.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.584" endtime="20201117 14:47:47.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.579" endtime="20201117 14:47:47.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.570" endtime="20201117 14:47:47.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.009" endtime="20201117 14:47:47.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.005" endtime="20201117 14:47:47.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.003" endtime="20201117 14:47:47.611"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.617" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.640" endtime="20201117 14:47:47.664"></status>
</kw>
<msg timestamp="20201117 14:47:47.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.637" endtime="20201117 14:47:47.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.667" endtime="20201117 14:47:47.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.674" endtime="20201117 14:47:47.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.629" endtime="20201117 14:47:47.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.623" endtime="20201117 14:47:47.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.699" endtime="20201117 14:47:48.072"></status>
</kw>
<msg timestamp="20201117 14:47:48.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049767542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049866875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.695" endtime="20201117 14:47:48.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049767542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049866875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.082" endtime="20201117 14:47:48.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.102" endtime="20201117 14:47:48.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.687" endtime="20201117 14:47:48.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.682" endtime="20201117 14:47:48.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.121" level="INFO">${RESULT} = [{'time': 0.049866875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.933300000000006e-05, 'source_diff': 9.933300000000006e-05}, {'time': 0.049981861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:48.111" endtime="20201117 14:47:48.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.157" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:48.124" endtime="20201117 14:47:48.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.168" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.166" endtime="20201117 14:47:48.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.174" level="INFO">VALUE: [9.933300000000006e-05, 9.933300000000006e-05, 0.00010027800000000225, 0.00010013899999999909, 9.972199999999654e-05, 9.96939999999974e-05, 9.998699999999583e-05, 0.000100028000000002, 9.934700000000657e-05, 0.00010002799999999507, 9.987499999999927e-05, 9.958300000000031e-05, 0.00010027799999999532, 9.959699999999988e-05, 9.957000000000021e-05, 9.98609999999997e-05, 9.952799999999457e-05, 0.00010015199999999919, 0.00010029199999999489, 9.984700000000013e-05, 0.00010008300000000081, 9.998599999999636e-05, 9.993099999999755e-05, 9.997200000000372e-05, 9.945900000000313e-05, 0.00010008300000000081, 9.954200000000107e-05, 9.949999999999543e-05, 9.938899999999834e-05, 9.977700000000228e-05, 0.00010011099999999995, 0.0001002080000000044, 9.969500000000381e-05, 9.991699999999798e-05, 9.959799999999935e-05, 0.00010013900000000603, 0.00010008400000000028, 0.00010017999999999833, 0.00010015299999999866, 9.981900000000099e-05, 9.951400000000193e-05, 0.00010008400000000028, 0.00010019500000000431, 9.973600000000304e-05, 9.930599999999346e-05, 9.990299999999841e-05, 9.967999999999783e-05, 9.963899999999859e-05, 9.931900000000049e-05, 0.00010002699999999559]</msg>
<status status="PASS" starttime="20201117 14:47:48.171" endtime="20201117 14:47:48.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.159" endtime="20201117 14:47:48.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.184" endtime="20201117 14:47:48.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.192" endtime="20201117 14:47:48.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.188" endtime="20201117 14:47:48.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.179" endtime="20201117 14:47:48.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.618" endtime="20201117 14:47:48.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.614" endtime="20201117 14:47:48.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.612" endtime="20201117 14:47:48.220"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.225" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.248" endtime="20201117 14:47:48.272"></status>
</kw>
<msg timestamp="20201117 14:47:48.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.245" endtime="20201117 14:47:48.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.276" endtime="20201117 14:47:48.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.282" endtime="20201117 14:47:48.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.237" endtime="20201117 14:47:48.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.231" endtime="20201117 14:47:48.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.307" endtime="20201117 14:47:48.670"></status>
</kw>
<msg timestamp="20201117 14:47:48.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049264611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049365278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.304" endtime="20201117 14:47:48.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049264611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049365278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.680" endtime="20201117 14:47:48.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.700" endtime="20201117 14:47:48.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.296" endtime="20201117 14:47:48.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.291" endtime="20201117 14:47:48.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.720" level="INFO">${RESULT} = [{'time': 0.049365278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010066699999999873, 'source_diff': 0.00010066699999999873}, {'time': 0.049485264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:48.711" endtime="20201117 14:47:48.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.753" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:48.723" endtime="20201117 14:47:48.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.764" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.762" endtime="20201117 14:47:48.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.770" level="INFO">VALUE: [0.00010066699999999873, 0.00010076400000000318, 0.00010119499999999837, 0.00010034700000000063, 0.00010116699999999923, 0.00010054199999999514, 0.0001010689999999953, 0.00010054099999999566, 0.00010105500000000267, 0.00010026400000000268, 0.00010037499999999977, 0.0001011809999999988, 0.00010049999999999643, 0.00010057000000000121, 0.00010048599999999686, 0.00010113800000000062, 0.0001011939999999989, 0.00010117999999999933, 0.00010065299999999916, 0.00010108299999999487, 0.0001011809999999988, 0.00010062500000000002, 0.0001003060000000014, 0.00010030500000000192, 0.00010061100000000045, 0.0001004730000000037, 0.00010058300000000131, 0.00010106900000000224, 0.0001010139999999965, 0.00010056900000000174, 0.00010095799999999822, 0.00010058300000000131, 0.00010069499999999787, 0.00010045899999999719, 0.00010077800000000275, 0.00010041600000000594, 0.00010126400000000368, 0.00010073600000000404, 0.00010090299999999941, 0.00010076399999999625, 0.00010066699999999873, 0.00010084699999999419, 0.0001010139999999965, 0.00010038899999999934, 0.00010112500000000052, 0.00010091600000000644, 0.0001010689999999953, 0.00010079099999999591, 0.00010088899999999984, 0.00010090299999999941]</msg>
<status status="PASS" starttime="20201117 14:47:48.767" endtime="20201117 14:47:48.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.755" endtime="20201117 14:47:48.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.779" endtime="20201117 14:47:48.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.788" endtime="20201117 14:47:48.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.784" endtime="20201117 14:47:48.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.775" endtime="20201117 14:47:48.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.227" endtime="20201117 14:47:48.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.223" endtime="20201117 14:47:48.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.221" endtime="20201117 14:47:48.816"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.821" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.844" endtime="20201117 14:47:48.867"></status>
</kw>
<msg timestamp="20201117 14:47:48.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.841" endtime="20201117 14:47:48.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.871" endtime="20201117 14:47:48.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.878" endtime="20201117 14:47:48.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.833" endtime="20201117 14:47:48.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.827" endtime="20201117 14:47:48.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.903" endtime="20201117 14:47:49.269"></status>
</kw>
<msg timestamp="20201117 14:47:49.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049435236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049536708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.899" endtime="20201117 14:47:49.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049435236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049536708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.279" endtime="20201117 14:47:49.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.298" endtime="20201117 14:47:49.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.891" endtime="20201117 14:47:49.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.886" endtime="20201117 14:47:49.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.317" level="INFO">${RESULT} = [{'time': 0.049536708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010147199999999829, 'source_diff': 0.00010147199999999829}, {'time': 0.049651681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:49.307" endtime="20201117 14:47:49.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.349" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:49.319" endtime="20201117 14:47:49.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.360" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:47:49.358" endtime="20201117 14:47:49.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.366" level="INFO">VALUE: [0.00010147199999999829, 0.00010182000000000246, 0.00010212500000000152, 0.0001020139999999975, 0.0001016939999999994, 0.00010176400000000418, 0.00010183300000000256, 0.0001018610000000017, 0.00010218000000000033, 0.00010165199999999375, 0.00010202799999999707, 0.00010184700000000213, 0.00010220799999999947, 0.00010161100000000145, 0.00010147199999999829, 0.00010198599999999836, 0.00010177800000000375, 0.00010209799999999492, 0.00010188900000000084, 0.00010177800000000375, 0.00010184700000000213, 0.00010205600000000314, 0.0001020139999999975, 0.0001020139999999975, 0.00010229199999999689, 0.00010191699999999998, 0.0001015689999999958, 0.00010208299999999587, 0.00010225000000000511, 0.00010183400000000203, 0.00010165300000000016, 0.00010137500000000077, 0.0001016939999999994, 0.00010212500000000152, 0.00010212500000000152, 0.0001021809999999998, 0.00010213900000000109, 0.00010208300000000281, 0.00010209700000000238, 0.00010166600000000026, 0.0001021809999999998, 0.00010162499999999408, 0.0001018610000000017, 0.00010188900000000084, 0.00010204199999999664, 0.00010187500000000127, 0.00010190300000000041, 0.00010216700000000023, 0.00010140299999999991, 0.00010172300000000495]</msg>
<status status="PASS" starttime="20201117 14:47:49.363" endtime="20201117 14:47:49.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.350" endtime="20201117 14:47:49.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.375" endtime="20201117 14:47:49.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:49.384" endtime="20201117 14:47:49.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.380" endtime="20201117 14:47:49.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.371" endtime="20201117 14:47:49.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.823" endtime="20201117 14:47:49.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.818" endtime="20201117 14:47:49.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.817" endtime="20201117 14:47:49.412"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.417" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.440" endtime="20201117 14:47:49.464"></status>
</kw>
<msg timestamp="20201117 14:47:49.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.436" endtime="20201117 14:47:49.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.468" endtime="20201117 14:47:49.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.475" endtime="20201117 14:47:49.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.429" endtime="20201117 14:47:49.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.423" endtime="20201117 14:47:49.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.500" endtime="20201117 14:47:49.857"></status>
</kw>
<msg timestamp="20201117 14:47:49.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049506778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049609819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.496" endtime="20201117 14:47:49.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049506778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049609819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.862" endtime="20201117 14:47:49.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.870" endtime="20201117 14:47:49.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.489" endtime="20201117 14:47:49.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.484" endtime="20201117 14:47:49.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.880" level="INFO">${RESULT} = [{'time': 0.049609819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010304099999999816, 'source_diff': 0.00010304099999999816}, {'time': 0.049729833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:49.876" endtime="20201117 14:47:49.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.893" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:49.881" endtime="20201117 14:47:49.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.899" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:47:49.898" endtime="20201117 14:47:49.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.902" level="INFO">VALUE: [0.00010304099999999816, 0.00010263900000000159, 0.00010244400000000015, 0.0001030410000000051, 0.00010281999999999653, 0.00010313900000000209, 0.00010245800000000665, 0.00010265299999999422, 0.00010265300000000116, 0.00010231999999999603, 0.00010281999999999653, 0.00010229100000000435, 0.00010225000000000511, 0.00010231900000000349, 0.00010261100000000245, 0.00010263899999999465, 0.00010326399999999875, 0.0001026810000000003, 0.00010241700000000048, 0.00010262500000000202, 0.00010320899999999994, 0.00010259700000000288, 0.00010304199999999764, 0.00010247199999999929, 0.00010311099999999601, 0.00010274999999999868, 0.00010262500000000202, 0.00010233400000000253, 0.0001030139999999985, 0.00010297199999999979, 0.00010312500000000252, 0.00010315299999999472, 0.00010302699999999859, 0.00010311100000000295, 0.00010316700000000123, 0.00010262499999999508, 0.00010263900000000159, 0.00010319500000000037, 0.0001031940000000009, 0.00010265300000000116, 0.0001030689999999973, 0.00010229099999999741, 0.000102416000000001, 0.0001028339999999961, 0.00010237500000000177, 0.00010305600000000414, 0.0001028060000000039, 0.00010311100000000295, 0.00010255600000000364, 0.00010255499999999723]</msg>
<status status="PASS" starttime="20201117 14:47:49.900" endtime="20201117 14:47:49.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.894" endtime="20201117 14:47:49.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.906" endtime="20201117 14:47:49.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:49.910" endtime="20201117 14:47:49.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.908" endtime="20201117 14:47:49.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.904" endtime="20201117 14:47:49.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.419" endtime="20201117 14:47:49.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.414" endtime="20201117 14:47:49.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.413" endtime="20201117 14:47:49.932"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.934" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.946" endtime="20201117 14:47:49.966"></status>
</kw>
<msg timestamp="20201117 14:47:49.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.944" endtime="20201117 14:47:49.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.967" endtime="20201117 14:47:49.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.970" endtime="20201117 14:47:49.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.940" endtime="20201117 14:47:49.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.937" endtime="20201117 14:47:49.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.982" endtime="20201117 14:47:50.270"></status>
</kw>
<msg timestamp="20201117 14:47:50.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028100833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028204431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.980" endtime="20201117 14:47:50.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028100833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028204431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.274" endtime="20201117 14:47:50.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.282" endtime="20201117 14:47:50.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.977" endtime="20201117 14:47:50.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.975" endtime="20201117 14:47:50.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:50.291" level="INFO">${RESULT} = [{'time': 0.028204431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010359799999999988, 'source_diff': 0.00010359799999999988}, {'time': 0.028316458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:50.287" endtime="20201117 14:47:50.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.306" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:50.292" endtime="20201117 14:47:50.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.312" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.311" endtime="20201117 14:47:50.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.314" level="INFO">VALUE: [0.00010359799999999988, 0.00010405499999999873, 0.000104207999999998, 0.00010415299999999919, 0.0001036940000000014, 0.00010413899999999962, 0.00010391699999999851, 0.00010377799999999882, 0.00010349999999999943, 0.00010397200000000079, 0.00010380599999999796, 0.00010334700000000016, 0.00010347200000000029, 0.00010338900000000234, 0.00010393100000000155, 0.00010393100000000155, 0.0001036949999999974, 0.0001040139999999995, 0.00010393100000000155, 0.00010398599999999689, 0.00010366700000000173, 0.00010377800000000229, 0.00010340199999999897, 0.00010412500000000005, 0.00010330499999999798, 0.00010383300000000109, 0.00010352799999999857, 0.00010372300000000001, 0.00010348599999999986, 0.00010341700000000148, 0.00010408299999999787, 0.00010411099999999701, 0.00010368000000000183, 0.00010349999999999943, 0.00010365300000000216, 0.00010379199999999839, 0.0001040559999999982, 0.0001037360000000001, 0.00010379100000000585, 0.00010372300000000001, 0.00010416599999999582, 0.00010379099999999891, 0.00010399999999999993, 0.00010422200000000104, 0.00010358299999999737, 0.00010376399999999925, 0.00010343100000000105, 0.00010361099999999651, 0.00010422200000000104, 0.00010415199999999625]</msg>
<status status="PASS" starttime="20201117 14:47:50.313" endtime="20201117 14:47:50.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.307" endtime="20201117 14:47:50.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.319" endtime="20201117 14:47:50.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.323" endtime="20201117 14:47:50.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.321" endtime="20201117 14:47:50.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.316" endtime="20201117 14:47:50.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.935" endtime="20201117 14:47:50.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.933" endtime="20201117 14:47:50.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.932" endtime="20201117 14:47:50.345"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.348" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.358" endtime="20201117 14:47:50.378"></status>
</kw>
<msg timestamp="20201117 14:47:50.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.357" endtime="20201117 14:47:50.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.380" endtime="20201117 14:47:50.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.383" endtime="20201117 14:47:50.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.353" endtime="20201117 14:47:50.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.350" endtime="20201117 14:47:50.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.394" endtime="20201117 14:47:50.697"></status>
</kw>
<msg timestamp="20201117 14:47:50.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027563111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027668292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.393" endtime="20201117 14:47:50.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027563111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027668292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.707" endtime="20201117 14:47:50.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.727" endtime="20201117 14:47:50.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.389" endtime="20201117 14:47:50.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.387" endtime="20201117 14:47:50.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:50.747" level="INFO">${RESULT} = [{'time': 0.027668292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010518099999999933, 'source_diff': 0.00010518099999999933}, {'time': 0.027791292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:50.738" endtime="20201117 14:47:50.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.779" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:50.750" endtime="20201117 14:47:50.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.791" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.788" endtime="20201117 14:47:50.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.797" level="INFO">VALUE: [0.00010518099999999933, 0.00010502800000000007, 0.00010441699999999901, 0.00010480499999999948, 0.00010443000000000258, 0.00010455499999999923, 0.00010447200000000129, 0.00010525000000000118, 0.00010518099999999933, 0.00010426399999999975, 0.00010447300000000076, 0.00010484700000000166, 0.00010484699999999819, 0.0001052360000000016, 0.00010475000000000068, 0.00010484699999999819, 0.00010504199999999964, 0.00010519399999999943, 0.00010486100000000123, 0.00010470800000000197, 0.00010502699999999712, 0.00010513899999999715, 0.00010443099999999858, 0.00010525000000000118, 0.00010458299999999837, 0.00010467999999999936, 0.00010443099999999858, 0.00010461100000000098, 0.0001045559999999987, 0.00010459700000000141, 0.00010447300000000076, 0.00010476400000000372, 0.00010475000000000068, 0.00010491700000000298, 0.00010495800000000222, 0.00010515299999999672, 0.00010447200000000129, 0.00010515299999999672, 0.00010522200000000204, 0.00010515200000000419, 0.00010454199999999914, 0.0001050559999999992, 0.00010505499999999973, 0.00010450000000000043, 0.00010506999999999878, 0.00010463900000000359, 0.00010495800000000222, 0.00010509799999999792, 0.00010443000000000258, 0.00010475000000000068]</msg>
<status status="PASS" starttime="20201117 14:47:50.793" endtime="20201117 14:47:50.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.781" endtime="20201117 14:47:50.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.807" endtime="20201117 14:47:50.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.816" endtime="20201117 14:47:50.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.811" endtime="20201117 14:47:50.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.802" endtime="20201117 14:47:50.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.348" endtime="20201117 14:47:50.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.346" endtime="20201117 14:47:50.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.345" endtime="20201117 14:47:50.843"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.849" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.872" endtime="20201117 14:47:50.896"></status>
</kw>
<msg timestamp="20201117 14:47:50.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.869" endtime="20201117 14:47:50.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.900" endtime="20201117 14:47:50.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.907" endtime="20201117 14:47:50.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.861" endtime="20201117 14:47:50.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.855" endtime="20201117 14:47:50.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.931" endtime="20201117 14:47:51.305"></status>
</kw>
<msg timestamp="20201117 14:47:51.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049939417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050045181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.928" endtime="20201117 14:47:51.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049939417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050045181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.315" endtime="20201117 14:47:51.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.335" endtime="20201117 14:47:51.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.920" endtime="20201117 14:47:51.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.915" endtime="20201117 14:47:51.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.353" level="INFO">${RESULT} = [{'time': 0.050045181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010576400000000125, 'source_diff': 0.00010576400000000125}, {'time': 0.050170208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:51.344" endtime="20201117 14:47:51.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:51.385" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:51.355" endtime="20201117 14:47:51.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.397" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:47:51.394" endtime="20201117 14:47:51.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.403" level="INFO">VALUE: [0.00010576400000000125, 0.00010559699999999894, 0.00010619399999999696, 0.00010576400000000125, 0.00010541699999999654, 0.00010554200000000014, 0.00010602800000000107, 0.00010534699999999869, 0.00010541700000000348, 0.00010527800000000032, 0.0001056810000000033, 0.00010604100000000116, 0.0001059160000000045, 0.00010573599999999517, 0.00010612499999999858, 0.00010613899999999815, 0.00010529199999999989, 0.00010586099999999876, 0.00010609699999999944, 0.00010551300000000152, 0.00010552800000000057, 0.00010576400000000125, 0.00010533299999999912, 0.00010577800000000082, 0.00010573599999999517, 0.00010547300000000176, 0.00010609799999999892, 0.00010579200000000039, 0.00010620900000000294, 0.00010542999999999664, 0.00010566600000000426, 0.00010595799999999628, 0.00010572200000000254, 0.00010591699999999704, 0.00010552800000000057, 0.00010534799999999817, 0.0001058339999999991, 0.00010537499999999783, 0.00010604200000000064, 0.00010538900000000434, 0.00010598600000000236, 0.0001057219999999956, 0.00010595800000000322, 0.00010625000000000218, 0.00010591700000000398, 0.00010552800000000057, 0.00010552800000000057, 0.00010551399999999406, 0.0001058339999999991, 0.00010555500000000023]</msg>
<status status="PASS" starttime="20201117 14:47:51.399" endtime="20201117 14:47:51.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.387" endtime="20201117 14:47:51.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.413" endtime="20201117 14:47:51.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:51.421" endtime="20201117 14:47:51.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.417" endtime="20201117 14:47:51.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.408" endtime="20201117 14:47:51.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.850" endtime="20201117 14:47:51.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.846" endtime="20201117 14:47:51.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.844" endtime="20201117 14:47:51.449"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.455" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.478" endtime="20201117 14:47:51.502"></status>
</kw>
<msg timestamp="20201117 14:47:51.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.474" endtime="20201117 14:47:51.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.505" endtime="20201117 14:47:51.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.512" endtime="20201117 14:47:51.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.466" endtime="20201117 14:47:51.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.460" endtime="20201117 14:47:51.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.537" endtime="20201117 14:47:51.911"></status>
</kw>
<msg timestamp="20201117 14:47:51.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049666292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049773139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.533" endtime="20201117 14:47:51.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049666292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049773139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.921" endtime="20201117 14:47:51.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.940" endtime="20201117 14:47:51.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.526" endtime="20201117 14:47:51.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.520" endtime="20201117 14:47:51.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.960" level="INFO">${RESULT} = [{'time': 0.049773139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010684700000000019, 'source_diff': 0.00010684700000000019}, {'time': 0.049898181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:51.951" endtime="20201117 14:47:51.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:51.997" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:51.967" endtime="20201117 14:47:51.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.009" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.007" endtime="20201117 14:47:52.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.015" level="INFO">VALUE: [0.00010684700000000019, 0.00010679200000000139, 0.000106901999999999, 0.00010636099999999926, 0.00010672300000000301, 0.00010661099999999951, 0.00010636099999999926, 0.00010697200000000379, 0.00010676400000000225, 0.00010650000000000243, 0.00010690300000000541, 0.0001068340000000001, 0.00010648600000000286, 0.00010691699999999804, 0.00010691699999999804, 0.00010659699999999994, 0.00010683300000000062, 0.00010682000000000053, 0.00010658300000000037, 0.0001067360000000031, 0.00010727799999999538, 0.00010640300000000491, 0.00010729099999999547, 0.00010648700000000233, 0.00010647200000000329, 0.00010650000000000243, 0.00010645799999999678, 0.00010716699999999829, 0.00010644500000000362, 0.00010690299999999847, 0.00010715299999999872, 0.00010693099999999761, 0.00010666699999999779, 0.00010643100000000405, 0.00010694399999999771, 0.00010711100000000001, 0.00010687499999999933, 0.00010677799999999488, 0.00010632000000000003, 0.00010702800000000207, 0.00010655500000000123, 0.00010669499999999693, 0.00010675000000000268, 0.00010667999999999789, 0.00010708300000000087, 0.00010668099999999736, 0.00010650000000000243, 0.00010679200000000139, 0.00010637500000000577, 0.00010717999999999839]</msg>
<status status="PASS" starttime="20201117 14:47:52.012" endtime="20201117 14:47:52.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.999" endtime="20201117 14:47:52.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.024" endtime="20201117 14:47:52.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.033" endtime="20201117 14:47:52.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.028" endtime="20201117 14:47:52.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.019" endtime="20201117 14:47:52.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.456" endtime="20201117 14:47:52.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.452" endtime="20201117 14:47:52.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.450" endtime="20201117 14:47:52.060"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.066" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.089" endtime="20201117 14:47:52.114"></status>
</kw>
<msg timestamp="20201117 14:47:52.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.085" endtime="20201117 14:47:52.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.117" endtime="20201117 14:47:52.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.124" endtime="20201117 14:47:52.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.078" endtime="20201117 14:47:52.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.072" endtime="20201117 14:47:52.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.149" endtime="20201117 14:47:52.524"></status>
</kw>
<msg timestamp="20201117 14:47:52.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049705764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049813, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:52.145" endtime="20201117 14:47:52.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049705764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049813, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:47:52.534" endtime="20201117 14:47:52.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.554" endtime="20201117 14:47:52.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.138" endtime="20201117 14:47:52.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.133" endtime="20201117 14:47:52.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.572" level="INFO">${RESULT} = [{'time': 0.049813, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001072360000000036, 'source_diff': 0.0001072360000000036}, {'time': 0.049942014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:52.563" endtime="20201117 14:47:52.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.607" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:52.575" endtime="20201117 14:47:52.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.619" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.617" endtime="20201117 14:47:52.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.625" level="INFO">VALUE: [0.0001072360000000036, 0.00010811100000000101, 0.00010811100000000101, 0.00010779199999999545, 0.00010774999999999674, 0.00010779199999999545, 0.00010774999999999674, 0.00010736100000000026, 0.00010787500000000033, 0.00010794399999999871, 0.00010733300000000112, 0.00010806999999999484, 0.00010744499999999768, 0.0001077219999999976, 0.00010786100000000076, 0.0001073340000000006, 0.00010777799999999588, 0.00010762500000000008, 0.000107514000000003, 0.00010765299999999922, 0.00010730600000000146, 0.00010729199999999495, 0.00010777799999999588, 0.00010804200000000264, 0.00010769499999999793, 0.00010723700000000308, 0.00010813900000000015, 0.00010769399999999846, 0.00010816599999999982, 0.00010774999999999674, 0.00010782000000000153, 0.00010734700000000069, 0.00010786200000000024, 0.00010761199999999999, 0.0001082769999999969, 0.0001075690000000018, 0.00010729100000000241, 0.00010747200000000429, 0.0001075560000000017, 0.0001080560000000022, 0.00010776399999999631, 0.00010805599999999527, 0.00010741699999999854, 0.00010774999999999674, 0.00010820900000000494, 0.00010798599999999742, 0.00010786100000000076, 0.00010808300000000187, 0.0001080969999999945, 0.00010797199999999785]</msg>
<status status="PASS" starttime="20201117 14:47:52.621" endtime="20201117 14:47:52.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.609" endtime="20201117 14:47:52.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.634" endtime="20201117 14:47:52.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.643" endtime="20201117 14:47:52.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.638" endtime="20201117 14:47:52.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.629" endtime="20201117 14:47:52.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.067" endtime="20201117 14:47:52.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.063" endtime="20201117 14:47:52.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.062" endtime="20201117 14:47:52.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.088" endtime="20201117 14:47:52.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.684" endtime="20201117 14:47:52.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.679" endtime="20201117 14:47:52.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.676" endtime="20201117 14:47:52.709"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:46:56.959" endtime="20201117 14:47:52.711" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.733" endtime="20201117 14:47:52.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.729" endtime="20201117 14:47:52.757"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.792" endtime="20201117 14:47:52.813"></status>
</kw>
<msg timestamp="20201117 14:47:52.815" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.788" endtime="20201117 14:47:52.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.822" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.817" endtime="20201117 14:47:52.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.829" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:47:52.824" endtime="20201117 14:47:52.829"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:52.781" endtime="20201117 14:47:52.831"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:52.774" endtime="20201117 14:47:52.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.771" endtime="20201117 14:47:52.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:47:52.842" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:47:52.841" endtime="20201117 14:47:52.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.836" endtime="20201117 14:47:52.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.769" endtime="20201117 14:47:52.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.767" endtime="20201117 14:47:52.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.846" endtime="20201117 14:47:52.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.763" endtime="20201117 14:47:52.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.758" endtime="20201117 14:47:52.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.726" endtime="20201117 14:47:52.854"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.863" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.886" endtime="20201117 14:47:52.905"></status>
</kw>
<msg timestamp="20201117 14:47:52.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.882" endtime="20201117 14:47:52.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.909" endtime="20201117 14:47:52.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.915" endtime="20201117 14:47:52.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.875" endtime="20201117 14:47:52.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.868" endtime="20201117 14:47:52.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.941" endtime="20201117 14:47:53.315"></status>
</kw>
<msg timestamp="20201117 14:47:53.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.146542139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.146570083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.937" endtime="20201117 14:47:53.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.146542139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.146570083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.325" endtime="20201117 14:47:53.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.345" endtime="20201117 14:47:53.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.929" endtime="20201117 14:47:53.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.924" endtime="20201117 14:47:53.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.365" level="INFO">${RESULT} = [{'time': 0.146570083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7944000000001967e-05, 'source_diff': 2.7944000000001967e-05}, {'time': 0.146607083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:53.355" endtime="20201117 14:47:53.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.399" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:53.367" endtime="20201117 14:47:53.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.411" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.409" endtime="20201117 14:47:53.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.417" level="INFO">VALUE: [2.7944000000001967e-05, 2.702700000001279e-05, 2.7680000000002147e-05, 2.780500000001962e-05, 2.723599999998605e-05, 2.7902999999995792e-05, 2.7138999999981595e-05, 2.7068999999990684e-05, 2.729199999998433e-05, 2.8000000000000247e-05, 2.7986000000007616e-05, 2.7541999999991518e-05, 2.715300000000198e-05, 2.7458999999979694e-05, 2.7402999999981414e-05, 2.7805999999991338e-05, 2.7374999999996152e-05, 2.7986000000007616e-05, 2.7069999999990157e-05, 2.7485999999993238e-05, 2.770900000001464e-05, 2.7332999999990504e-05, 2.708300000001107e-05, 2.7472000000000607e-05, 2.7277999999991698e-05, 2.740300000000917e-05, 2.793100000000881e-05, 2.7098000000003175e-05, 2.765199999998913e-05, 2.76379999999965e-05, 2.7208000000000787e-05, 2.7458000000007976e-05, 2.706900000001844e-05, 2.756900000000506e-05, 2.7874999999982775e-05, 2.7082999999983315e-05, 2.7111000000024088e-05, 2.7820000000011724e-05, 2.7818999999984495e-05, 2.7486000000020994e-05, 2.7472000000000607e-05, 2.798599999997986e-05, 2.7181000000015e-05, 2.787500000001053e-05, 2.761100000001071e-05, 2.7791999999998707e-05, 2.7069999999990157e-05, 2.7319999999997346e-05, 2.7500000000013625e-05, 2.7541999999991518e-05]</msg>
<status status="PASS" starttime="20201117 14:47:53.413" endtime="20201117 14:47:53.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.401" endtime="20201117 14:47:53.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.426" endtime="20201117 14:47:53.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.435" endtime="20201117 14:47:53.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.430" endtime="20201117 14:47:53.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.421" endtime="20201117 14:47:53.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.864" endtime="20201117 14:47:53.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.860" endtime="20201117 14:47:53.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.858" endtime="20201117 14:47:53.462"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.468" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.491" endtime="20201117 14:47:53.511"></status>
</kw>
<msg timestamp="20201117 14:47:53.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.487" endtime="20201117 14:47:53.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.514" endtime="20201117 14:47:53.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.521" endtime="20201117 14:47:53.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.480" endtime="20201117 14:47:53.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.474" endtime="20201117 14:47:53.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.546" endtime="20201117 14:47:53.910"></status>
</kw>
<msg timestamp="20201117 14:47:53.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049558319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049585736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.543" endtime="20201117 14:47:53.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049558319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049585736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.921" endtime="20201117 14:47:53.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.942" endtime="20201117 14:47:53.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.535" endtime="20201117 14:47:53.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.530" endtime="20201117 14:47:53.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.961" level="INFO">${RESULT} = [{'time': 0.049585736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7416999999994862e-05, 'source_diff': 2.7416999999994862e-05}, {'time': 0.049621792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:53.951" endtime="20201117 14:47:53.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.982" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:53.963" endtime="20201117 14:47:53.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.987" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.986" endtime="20201117 14:47:53.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.990" level="INFO">VALUE: [2.7416999999994862e-05, 2.7124999999995902e-05, 2.7486000000000177e-05, 2.715300000000198e-05, 2.717999999999471e-05, 2.7320000000004285e-05, 2.737500000000309e-05, 2.7306000000004715e-05, 2.7791999999998707e-05, 2.711100000000327e-05, 2.7347999999996486e-05, 2.7319999999997346e-05, 2.7402999999995292e-05, 2.734700000000395e-05, 2.7486000000000177e-05, 2.7736000000000427e-05, 2.737500000000309e-05, 2.7499999999999747e-05, 2.708300000000413e-05, 2.7305999999997776e-05, 2.7862000000003495e-05, 2.7027999999998387e-05, 2.741599999999539e-05, 2.7818999999998373e-05, 2.7027999999998387e-05, 2.7986000000000677e-05, 2.7722000000000857e-05, 2.7790999999999233e-05, 2.7318999999997873e-05, 2.7027999999998387e-05, 2.734700000000395e-05, 2.7846999999997513e-05, 2.7860999999997083e-05, 2.7818999999998373e-05, 2.7541999999998457e-05, 2.7958000000001537e-05, 2.7292000000005145e-05, 2.740300000000223e-05, 2.7486000000000177e-05, 2.7444000000001467e-05, 2.7055999999997526e-05, 2.7610999999996833e-05, 2.7124999999995902e-05, 2.7736000000000427e-05, 2.7416999999994862e-05, 2.7041999999997957e-05, 2.7486000000000177e-05, 2.715300000000198e-05, 2.74170000000018e-05, 2.7235999999999927e-05]</msg>
<status status="PASS" starttime="20201117 14:47:53.988" endtime="20201117 14:47:53.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.983" endtime="20201117 14:47:53.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.994" endtime="20201117 14:47:53.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.998" endtime="20201117 14:47:54.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.996" endtime="20201117 14:47:54.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.992" endtime="20201117 14:47:54.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.469" endtime="20201117 14:47:54.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.465" endtime="20201117 14:47:54.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.463" endtime="20201117 14:47:54.020"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.023" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.033" endtime="20201117 14:47:54.050"></status>
</kw>
<msg timestamp="20201117 14:47:54.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.031" endtime="20201117 14:47:54.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.051" endtime="20201117 14:47:54.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.055" endtime="20201117 14:47:54.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.028" endtime="20201117 14:47:54.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.025" endtime="20201117 14:47:54.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.067" endtime="20201117 14:47:54.353"></status>
</kw>
<msg timestamp="20201117 14:47:54.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028143514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0281705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:54.065" endtime="20201117 14:47:54.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028143514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0281705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:54.357" endtime="20201117 14:47:54.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.366" endtime="20201117 14:47:54.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.061" endtime="20201117 14:47:54.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.059" endtime="20201117 14:47:54.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.376" level="INFO">${RESULT} = [{'time': 0.0281705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6985999999999677e-05, 'source_diff': 2.6985999999999677e-05}, {'time': 0.0282045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:54.371" endtime="20201117 14:47:54.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.410" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:54.378" endtime="20201117 14:47:54.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.422" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.419" endtime="20201117 14:47:54.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.428" level="INFO">VALUE: [2.6985999999999677e-05, 2.7361000000000052e-05, 2.7611000000000302e-05, 2.7486000000000177e-05, 2.7819999999997846e-05, 2.7556000000001496e-05, 2.7027999999998387e-05, 2.7124999999999372e-05, 2.7347000000000482e-05, 2.7888999999999692e-05, 2.7763999999999567e-05, 2.770900000000076e-05, 2.7820000000001316e-05, 2.79309999999984e-05, 2.77369999999999e-05, 2.7598000000000206e-05, 2.7290999999998733e-05, 2.7679999999998678e-05, 2.7304999999998303e-05, 2.7249999999999497e-05, 2.7804999999998803e-05, 2.7013999999998817e-05, 2.7278000000002106e-05, 2.7028000000001856e-05, 2.7056000000000996e-05, 2.7194000000001217e-05, 2.7778000000002606e-05, 2.7972000000001107e-05, 2.7541999999998457e-05, 2.7278000000002106e-05, 2.7819000000001842e-05, 2.713900000000241e-05, 2.7083000000000662e-05, 2.7806000000001746e-05, 2.7320000000000816e-05, 2.788900000000316e-05, 2.7875000000000122e-05, 2.744500000000094e-05, 2.7070000000000566e-05, 2.766700000000205e-05, 2.794499999999797e-05, 2.7611000000000302e-05, 2.7985999999997208e-05, 2.7875000000000122e-05, 2.7569999999997596e-05, 2.7486000000000177e-05, 2.7805000000002272e-05, 2.7277000000002632e-05, 2.7054999999998053e-05, 2.7957999999998068e-05]</msg>
<status status="PASS" starttime="20201117 14:47:54.424" endtime="20201117 14:47:54.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.412" endtime="20201117 14:47:54.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.437" endtime="20201117 14:47:54.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.446" endtime="20201117 14:47:54.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.441" endtime="20201117 14:47:54.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.432" endtime="20201117 14:47:54.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.023" endtime="20201117 14:47:54.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.021" endtime="20201117 14:47:54.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.020" endtime="20201117 14:47:54.474"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.479" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.502" endtime="20201117 14:47:54.521"></status>
</kw>
<msg timestamp="20201117 14:47:54.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.499" endtime="20201117 14:47:54.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.526" endtime="20201117 14:47:54.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.533" endtime="20201117 14:47:54.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.491" endtime="20201117 14:47:54.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.485" endtime="20201117 14:47:54.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.558" endtime="20201117 14:47:54.929"></status>
</kw>
<msg timestamp="20201117 14:47:54.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049830764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049858722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.554" endtime="20201117 14:47:54.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049830764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049858722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.939" endtime="20201117 14:47:54.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.960" endtime="20201117 14:47:54.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.547" endtime="20201117 14:47:54.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.541" endtime="20201117 14:47:54.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.978" level="INFO">${RESULT} = [{'time': 0.049858722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7958000000001537e-05, 'source_diff': 2.7958000000001537e-05}, {'time': 0.049890722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:54.969" endtime="20201117 14:47:54.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:54.981" endtime="20201117 14:47:55.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.029" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.026" endtime="20201117 14:47:55.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.035" level="INFO">VALUE: [2.7958000000001537e-05, 2.741599999999539e-05, 2.7041999999997957e-05, 2.7235999999999927e-05, 2.7527999999998887e-05, 2.715300000000198e-05, 2.7430999999994432e-05, 2.7124999999995902e-05, 2.7318999999997873e-05, 2.7306000000004715e-05, 2.7222000000000357e-05, 2.787500000000359e-05, 2.769500000000119e-05, 2.7638999999995972e-05, 2.7235999999999927e-05, 2.7736000000000427e-05, 2.7110999999996332e-05, 2.7291000000005672e-05, 2.733300000000438e-05, 2.763900000000291e-05, 2.740300000000223e-05, 2.7499999999999747e-05, 2.7500000000006686e-05, 2.7040999999998483e-05, 2.7124999999995902e-05, 2.7694000000001717e-05, 2.7486000000000177e-05, 2.7430000000001897e-05, 2.7346999999997013e-05, 2.763900000000291e-05, 2.7276999999999163e-05, 2.7208000000000787e-05, 2.7332999999997443e-05, 2.7986000000000677e-05, 2.7680000000002147e-05, 2.7902999999995792e-05, 2.7348000000003425e-05, 2.7694000000001717e-05, 2.7513999999999317e-05, 2.7194000000001217e-05, 2.7583999999997166e-05, 2.7694000000001717e-05, 2.7652999999995542e-05, 2.7652999999995542e-05, 2.713900000000241e-05, 2.7638999999995972e-05, 2.7792000000005646e-05, 2.7263999999999067e-05, 2.7249999999999497e-05, 2.7110999999996332e-05]</msg>
<status status="PASS" starttime="20201117 14:47:55.032" endtime="20201117 14:47:55.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.019" endtime="20201117 14:47:55.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.044" endtime="20201117 14:47:55.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.053" endtime="20201117 14:47:55.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.049" endtime="20201117 14:47:55.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.040" endtime="20201117 14:47:55.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.481" endtime="20201117 14:47:55.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.477" endtime="20201117 14:47:55.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.475" endtime="20201117 14:47:55.080"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.087" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.110" endtime="20201117 14:47:55.129"></status>
</kw>
<msg timestamp="20201117 14:47:55.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.107" endtime="20201117 14:47:55.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.133" endtime="20201117 14:47:55.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.140" endtime="20201117 14:47:55.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.099" endtime="20201117 14:47:55.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.093" endtime="20201117 14:47:55.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.165" endtime="20201117 14:47:55.530"></status>
</kw>
<msg timestamp="20201117 14:47:55.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050409514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050437222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.161" endtime="20201117 14:47:55.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050409514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050437222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.541" endtime="20201117 14:47:55.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.561" endtime="20201117 14:47:55.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.153" endtime="20201117 14:47:55.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.148" endtime="20201117 14:47:55.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.580" level="INFO">${RESULT} = [{'time': 0.050437222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7707999999994348e-05, 'source_diff': 2.7707999999994348e-05}, {'time': 0.050469236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:55.570" endtime="20201117 14:47:55.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.613" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:55.582" endtime="20201117 14:47:55.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.626" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.624" endtime="20201117 14:47:55.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.632" level="INFO">VALUE: [2.7707999999994348e-05, 2.7249999999999497e-05, 2.7860999999997083e-05, 2.7736000000000427e-05, 2.7235999999999927e-05, 2.7749999999999997e-05, 2.7944000000001967e-05, 2.7777999999999137e-05, 2.794399999999503e-05, 2.720900000000026e-05, 2.7444999999994002e-05, 2.7027999999998387e-05, 2.744500000000094e-05, 2.7041999999997957e-05, 2.7360999999996582e-05, 2.7555999999998027e-05, 2.766700000000205e-05, 2.7568999999998123e-05, 2.7346999999997013e-05, 2.7319999999997346e-05, 2.719500000000069e-05, 2.7416999999994862e-05, 2.7138999999995472e-05, 2.7819999999997846e-05, 2.744399999999453e-05, 2.8000000000000247e-05, 2.7138999999995472e-05, 2.7486000000000177e-05, 2.797300000000058e-05, 2.740300000000223e-05, 2.7680000000002147e-05, 2.7194000000001217e-05, 2.7374999999996152e-05, 2.7499999999999747e-05, 2.7208000000000787e-05, 2.733300000000438e-05, 2.736100000000352e-05, 2.7472000000000607e-05, 2.7820000000004785e-05, 2.793100000000187e-05, 2.75970000000042e-05, 2.7070000000004035e-05, 2.7624999999996402e-05, 2.7610999999996833e-05, 2.794500000000144e-05, 2.745900000000051e-05, 2.70970000000037e-05, 2.761100000000377e-05, 2.711100000000327e-05, 2.7888999999996222e-05]</msg>
<status status="PASS" starttime="20201117 14:47:55.628" endtime="20201117 14:47:55.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.615" endtime="20201117 14:47:55.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.642" endtime="20201117 14:47:55.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.651" endtime="20201117 14:47:55.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.646" endtime="20201117 14:47:55.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.637" endtime="20201117 14:47:55.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.088" endtime="20201117 14:47:55.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.083" endtime="20201117 14:47:55.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.081" endtime="20201117 14:47:55.678"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.684" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.707" endtime="20201117 14:47:55.727"></status>
</kw>
<msg timestamp="20201117 14:47:55.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.703" endtime="20201117 14:47:55.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.730" endtime="20201117 14:47:55.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.737" endtime="20201117 14:47:55.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.696" endtime="20201117 14:47:55.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.689" endtime="20201117 14:47:55.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.762" endtime="20201117 14:47:56.124"></status>
</kw>
<msg timestamp="20201117 14:47:56.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049479292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049507194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.758" endtime="20201117 14:47:56.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049479292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049507194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.134" endtime="20201117 14:47:56.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.155" endtime="20201117 14:47:56.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.751" endtime="20201117 14:47:56.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.746" endtime="20201117 14:47:56.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.173" level="INFO">${RESULT} = [{'time': 0.049507194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.790199999999632e-05, 'source_diff': 2.790199999999632e-05}, {'time': 0.049541208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:56.164" endtime="20201117 14:47:56.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.207" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:56.175" endtime="20201117 14:47:56.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.220" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.216" endtime="20201117 14:47:56.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.226" level="INFO">VALUE: [2.790199999999632e-05, 2.7916000000002827e-05, 2.7486000000000177e-05, 2.7068999999997623e-05, 2.7540999999998983e-05, 2.7207999999993848e-05, 2.7652999999995542e-05, 2.7138999999995472e-05, 2.7791999999998707e-05, 2.7708000000001287e-05, 2.7527999999998887e-05, 2.7402999999995292e-05, 2.762500000000334e-05, 2.793100000000187e-05, 2.7249999999999497e-05, 2.719500000000069e-05, 2.7277999999998637e-05, 2.7610999999996833e-05, 2.7582999999997693e-05, 2.765199999999607e-05, 2.7972000000001107e-05, 2.7124999999995902e-05, 2.770900000000076e-05, 2.740300000000223e-05, 2.7862000000003495e-05, 2.715300000000198e-05, 2.7708000000001287e-05, 2.7055999999997526e-05, 2.736100000000352e-05, 2.7972000000001107e-05, 2.7610999999996833e-05, 2.7972000000001107e-05, 2.7749999999999997e-05, 2.7986000000000677e-05, 2.790300000000273e-05, 2.7680000000002147e-05, 2.788900000000316e-05, 2.7568999999998123e-05, 2.765300000000248e-05, 2.7568999999998123e-05, 2.7028000000005326e-05, 2.7541999999998457e-05, 2.712500000000284e-05, 2.7930000000002397e-05, 2.7056000000004465e-05, 2.744399999999453e-05, 2.7569999999997596e-05, 2.744500000000094e-05, 2.7555999999998027e-05, 2.7472000000000607e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.222" endtime="20201117 14:47:56.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.209" endtime="20201117 14:47:56.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.236" endtime="20201117 14:47:56.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.245" endtime="20201117 14:47:56.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.240" endtime="20201117 14:47:56.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.231" endtime="20201117 14:47:56.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.685" endtime="20201117 14:47:56.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.681" endtime="20201117 14:47:56.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.679" endtime="20201117 14:47:56.272"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.277" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.301" endtime="20201117 14:47:56.320"></status>
</kw>
<msg timestamp="20201117 14:47:56.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.297" endtime="20201117 14:47:56.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.324" endtime="20201117 14:47:56.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.331" endtime="20201117 14:47:56.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.289" endtime="20201117 14:47:56.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.283" endtime="20201117 14:47:56.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.355" endtime="20201117 14:47:56.718"></status>
</kw>
<msg timestamp="20201117 14:47:56.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049517194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049544194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.352" endtime="20201117 14:47:56.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049517194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049544194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.728" endtime="20201117 14:47:56.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.748" endtime="20201117 14:47:56.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.344" endtime="20201117 14:47:56.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.339" endtime="20201117 14:47:56.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.767" level="INFO">${RESULT} = [{'time': 0.049544194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6999999999999247e-05, 'source_diff': 2.6999999999999247e-05}, {'time': 0.049582222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:56.757" endtime="20201117 14:47:56.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.800" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:56.769" endtime="20201117 14:47:56.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.812" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.810" endtime="20201117 14:47:56.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.821" level="INFO">VALUE: [2.6999999999999247e-05, 2.762500000000334e-05, 2.7472000000000607e-05, 2.736100000000352e-05, 2.7749999999999997e-05, 2.8013999999999817e-05, 2.7818999999998373e-05, 2.7790999999999233e-05, 2.7736000000000427e-05, 2.7318999999997873e-05, 2.7944000000001967e-05, 2.7042000000004895e-05, 2.743100000000137e-05, 2.7763999999999567e-05, 2.7416999999994862e-05, 2.7486000000000177e-05, 2.788900000000316e-05, 2.7513999999999317e-05, 2.7291999999998207e-05, 2.7084000000003605e-05, 2.715300000000198e-05, 2.798700000000015e-05, 2.7749999999999997e-05, 2.734700000000395e-05, 2.7235999999999927e-05, 2.715300000000198e-05, 2.7332999999997443e-05, 2.7320000000004285e-05, 2.783300000000488e-05, 2.8027999999999387e-05, 2.7388000000003188e-05, 2.7110999999996332e-05, 2.736100000000352e-05, 2.7222000000000357e-05, 2.7540999999998983e-05, 2.715300000000198e-05, 2.716700000000155e-05, 2.79170000000023e-05, 2.7860999999997083e-05, 2.708300000000413e-05, 2.7235999999999927e-05, 2.7971999999994168e-05, 2.788900000000316e-05, 2.7528000000005826e-05, 2.7832999999997943e-05, 2.719500000000069e-05, 2.762500000000334e-05, 2.794500000000144e-05, 2.7486000000000177e-05, 2.7235999999999927e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.815" endtime="20201117 14:47:56.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.802" endtime="20201117 14:47:56.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.831" endtime="20201117 14:47:56.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.841" endtime="20201117 14:47:56.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.836" endtime="20201117 14:47:56.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.825" endtime="20201117 14:47:56.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.279" endtime="20201117 14:47:56.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.275" endtime="20201117 14:47:56.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.273" endtime="20201117 14:47:56.868"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.874" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.897" endtime="20201117 14:47:56.916"></status>
</kw>
<msg timestamp="20201117 14:47:56.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.894" endtime="20201117 14:47:56.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.920" endtime="20201117 14:47:56.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.926" endtime="20201117 14:47:56.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.886" endtime="20201117 14:47:56.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.880" endtime="20201117 14:47:56.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.952" endtime="20201117 14:47:57.321"></status>
</kw>
<msg timestamp="20201117 14:47:57.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049438181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049465792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.948" endtime="20201117 14:47:57.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049438181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049465792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.331" endtime="20201117 14:47:57.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.351" endtime="20201117 14:47:57.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.940" endtime="20201117 14:47:57.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.935" endtime="20201117 14:47:57.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.370" level="INFO">${RESULT} = [{'time': 0.049465792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.761100000000377e-05, 'source_diff': 2.761100000000377e-05}, {'time': 0.049504778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:57.360" endtime="20201117 14:47:57.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.411" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:57.377" endtime="20201117 14:47:57.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.423" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.420" endtime="20201117 14:47:57.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.429" level="INFO">VALUE: [2.761100000000377e-05, 2.7374999999996152e-05, 2.7902999999995792e-05, 2.715300000000198e-05, 2.7070000000004035e-05, 2.738900000000266e-05, 2.7070000000004035e-05, 2.7499999999999747e-05, 2.790199999999632e-05, 2.7041000000005422e-05, 2.7027999999998387e-05, 2.7652999999995542e-05, 2.790199999999632e-05, 2.767999999999521e-05, 2.7026999999998913e-05, 2.8070000000005035e-05, 2.7554999999998553e-05, 2.7846999999997513e-05, 2.7707999999994348e-05, 2.790300000000273e-05, 2.7958000000001537e-05, 2.7832999999997943e-05, 2.7096999999996763e-05, 2.7388999999995722e-05, 2.7486000000000177e-05, 2.7666999999995112e-05, 2.7444000000001467e-05, 2.7278000000005576e-05, 2.770900000000076e-05, 2.7708000000001287e-05, 2.7027999999998387e-05, 2.7777999999999137e-05, 2.712500000000284e-05, 2.7235999999999927e-05, 2.716700000000155e-05, 2.7084000000003605e-05, 2.7306000000004715e-05, 2.7362000000002995e-05, 2.7610999999996833e-05, 2.7360999999996582e-05, 2.7624999999996402e-05, 2.7888999999996222e-05, 2.7861999999996556e-05, 2.712500000000284e-05, 2.765199999999607e-05, 2.769399999999478e-05, 2.791599999999589e-05, 2.7694999999994252e-05, 2.7804999999998803e-05, 2.75970000000042e-05]</msg>
<status status="PASS" starttime="20201117 14:47:57.425" endtime="20201117 14:47:57.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.413" endtime="20201117 14:47:57.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.439" endtime="20201117 14:47:57.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.449" endtime="20201117 14:47:57.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.445" endtime="20201117 14:47:57.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.435" endtime="20201117 14:47:57.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.876" endtime="20201117 14:47:57.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.871" endtime="20201117 14:47:57.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.869" endtime="20201117 14:47:57.476"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.482" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.505" endtime="20201117 14:47:57.525"></status>
</kw>
<msg timestamp="20201117 14:47:57.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.502" endtime="20201117 14:47:57.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.528" endtime="20201117 14:47:57.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.535" endtime="20201117 14:47:57.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.494" endtime="20201117 14:47:57.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.488" endtime="20201117 14:47:57.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.560" endtime="20201117 14:47:57.855"></status>
</kw>
<msg timestamp="20201117 14:47:57.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049406986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049434528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.556" endtime="20201117 14:47:57.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049406986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049434528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.859" endtime="20201117 14:47:57.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.869" endtime="20201117 14:47:57.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.549" endtime="20201117 14:47:57.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.544" endtime="20201117 14:47:57.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.877" level="INFO">${RESULT} = [{'time': 0.049434528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7541999999998457e-05, 'source_diff': 2.7541999999998457e-05}, {'time': 0.049465486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:57.873" endtime="20201117 14:47:57.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.892" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:57.878" endtime="20201117 14:47:57.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.897" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.896" endtime="20201117 14:47:57.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.900" level="INFO">VALUE: [2.7541999999998457e-05, 2.7708000000001287e-05, 2.7013999999998817e-05, 2.7722000000000857e-05, 2.8000000000000247e-05, 2.8013999999999817e-05, 2.7263999999999067e-05, 2.740300000000223e-05, 2.744500000000094e-05, 2.7820000000004785e-05, 2.7902999999995792e-05, 2.7819999999997846e-05, 2.7833999999997416e-05, 2.7152999999995042e-05, 2.7666999999995112e-05, 2.7722000000000857e-05, 2.748699999999965e-05, 2.7570000000004535e-05, 2.7277999999998637e-05, 2.7847999999996986e-05, 2.7458000000001037e-05, 2.7666999999995112e-05, 2.7638999999995972e-05, 2.7555000000005492e-05, 2.7222000000000357e-05, 2.734700000000395e-05, 2.7332999999997443e-05, 2.768100000000162e-05, 2.761100000000377e-05, 2.758300000000463e-05, 2.712500000000284e-05, 2.7610999999996833e-05, 2.7069999999997096e-05, 2.7791000000006172e-05, 2.7499999999999747e-05, 2.7083999999996666e-05, 2.7222000000000357e-05, 2.740300000000223e-05, 2.7986000000000677e-05, 2.7235999999999927e-05, 2.7806000000005215e-05, 2.7860999999997083e-05, 2.786100000000402e-05, 2.74170000000018e-05, 2.711100000000327e-05, 2.7319999999997346e-05, 2.713900000000241e-05, 2.7722000000000857e-05, 2.7027999999998387e-05, 2.769500000000119e-05]</msg>
<status status="PASS" starttime="20201117 14:47:57.899" endtime="20201117 14:47:57.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.893" endtime="20201117 14:47:57.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.905" endtime="20201117 14:47:57.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.909" endtime="20201117 14:47:57.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.907" endtime="20201117 14:47:57.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.903" endtime="20201117 14:47:57.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.484" endtime="20201117 14:47:57.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.479" endtime="20201117 14:47:57.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.477" endtime="20201117 14:47:57.936"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.942" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.965" endtime="20201117 14:47:57.985"></status>
</kw>
<msg timestamp="20201117 14:47:57.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.961" endtime="20201117 14:47:57.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.989" endtime="20201117 14:47:57.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.996" endtime="20201117 14:47:58.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.954" endtime="20201117 14:47:58.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.948" endtime="20201117 14:47:58.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.022" endtime="20201117 14:47:58.386"></status>
</kw>
<msg timestamp="20201117 14:47:58.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050171806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050199097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.017" endtime="20201117 14:47:58.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050171806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050199097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.396" endtime="20201117 14:47:58.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.416" endtime="20201117 14:47:58.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.009" endtime="20201117 14:47:58.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.004" endtime="20201117 14:47:58.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.435" level="INFO">${RESULT} = [{'time': 0.050199097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7290999999998733e-05, 'source_diff': 2.7290999999998733e-05}, {'time': 0.050236111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:58.425" endtime="20201117 14:47:58.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.468" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:58.437" endtime="20201117 14:47:58.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.480" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.478" endtime="20201117 14:47:58.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.486" level="INFO">VALUE: [2.7290999999998733e-05, 2.765300000000248e-05, 2.790300000000273e-05, 2.7860999999997083e-05, 2.7832999999997943e-05, 2.7736000000000427e-05, 2.7291999999998207e-05, 2.787500000000359e-05, 2.7680999999994682e-05, 2.7722000000000857e-05, 2.7069999999997096e-05, 2.788900000000316e-05, 2.718100000000112e-05, 2.7624999999996402e-05, 2.7860999999997083e-05, 2.797300000000058e-05, 2.7069999999997096e-05, 2.7583999999997166e-05, 2.7486000000000177e-05, 2.786100000000402e-05, 2.7569999999997596e-05, 2.795900000000101e-05, 2.7848000000003925e-05, 2.790300000000273e-05, 2.7540999999998983e-05, 2.765199999999607e-05, 2.790199999999632e-05, 2.7777000000006602e-05, 2.8027999999999387e-05, 2.7972000000001107e-05, 2.7986000000000677e-05, 2.766599999999564e-05, 2.79170000000023e-05, 2.7054999999998053e-05, 2.7638999999995972e-05, 2.8000000000000247e-05, 2.7318999999997873e-05, 2.783300000000488e-05, 2.7555000000005492e-05, 2.7694000000001717e-05, 2.7027999999998387e-05, 2.7638999999995972e-05, 2.790300000000273e-05, 2.7084000000003605e-05, 2.797300000000058e-05, 2.798700000000015e-05, 2.7846999999997513e-05, 2.7736000000000427e-05, 2.7277999999998637e-05, 2.7042000000004895e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.482" endtime="20201117 14:47:58.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.470" endtime="20201117 14:47:58.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.496" endtime="20201117 14:47:58.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.506" endtime="20201117 14:47:58.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.501" endtime="20201117 14:47:58.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.492" endtime="20201117 14:47:58.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.943" endtime="20201117 14:47:58.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.939" endtime="20201117 14:47:58.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.937" endtime="20201117 14:47:58.533"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.538" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.561" endtime="20201117 14:47:58.582"></status>
</kw>
<msg timestamp="20201117 14:47:58.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.558" endtime="20201117 14:47:58.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.585" endtime="20201117 14:47:58.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.593" endtime="20201117 14:47:58.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.550" endtime="20201117 14:47:58.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.544" endtime="20201117 14:47:58.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.618" endtime="20201117 14:47:58.983"></status>
</kw>
<msg timestamp="20201117 14:47:58.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049564569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049592806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.614" endtime="20201117 14:47:58.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049564569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049592806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.993" endtime="20201117 14:47:59.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.013" endtime="20201117 14:47:59.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.607" endtime="20201117 14:47:59.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.602" endtime="20201117 14:47:59.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.032" level="INFO">${RESULT} = [{'time': 0.049592806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.82370000000004e-05, 'source_diff': 2.82370000000004e-05}, {'time': 0.049624806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:59.023" endtime="20201117 14:47:59.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.065" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:59.034" endtime="20201117 14:47:59.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.077" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.075" endtime="20201117 14:47:59.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.084" level="INFO">VALUE: [2.82370000000004e-05, 2.8264000000000067e-05, 2.868100000000262e-05, 2.8680000000003147e-05, 2.8500000000000747e-05, 2.8930000000003397e-05, 2.8319999999998346e-05, 2.8486000000001177e-05, 2.8236000000000927e-05, 2.819399999999528e-05, 2.8860999999998083e-05, 2.8277999999999637e-05, 2.8791999999999707e-05, 2.8930999999995932e-05, 2.8764000000000567e-05, 2.811100000000427e-05, 2.8986000000001677e-05, 2.808300000000513e-05, 2.8972000000002107e-05, 2.8888999999997222e-05, 2.8332999999998443e-05, 2.8819999999998847e-05, 2.8486000000001177e-05, 2.8764000000000567e-05, 2.895900000000201e-05, 2.8360999999997583e-05, 2.8527999999999887e-05, 2.8847999999997986e-05, 2.8027999999999387e-05, 2.872300000000133e-05, 2.8068999999998623e-05, 2.8819999999998847e-05, 2.8097999999997236e-05, 2.8874999999997653e-05, 2.8736000000001427e-05, 2.8054999999999053e-05, 2.891599999999689e-05, 2.8986000000001677e-05, 2.8152000000003508e-05, 2.8680000000003147e-05, 2.8332999999998443e-05, 2.8986000000001677e-05, 2.840300000000323e-05, 2.886100000000502e-05, 2.8610999999997833e-05, 2.8319000000005812e-05, 2.8304999999999303e-05, 2.8860999999998083e-05, 2.8778000000000137e-05, 2.8291999999999207e-05]</msg>
<status status="PASS" starttime="20201117 14:47:59.079" endtime="20201117 14:47:59.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.067" endtime="20201117 14:47:59.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.094" endtime="20201117 14:47:59.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.103" endtime="20201117 14:47:59.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.098" endtime="20201117 14:47:59.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.089" endtime="20201117 14:47:59.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.540" endtime="20201117 14:47:59.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.536" endtime="20201117 14:47:59.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.534" endtime="20201117 14:47:59.130"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.136" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.160" endtime="20201117 14:47:59.179"></status>
</kw>
<msg timestamp="20201117 14:47:59.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.156" endtime="20201117 14:47:59.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.183" endtime="20201117 14:47:59.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.190" endtime="20201117 14:47:59.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.148" endtime="20201117 14:47:59.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.141" endtime="20201117 14:47:59.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.215" endtime="20201117 14:47:59.577"></status>
</kw>
<msg timestamp="20201117 14:47:59.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050749417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050779083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.211" endtime="20201117 14:47:59.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050749417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050779083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.587" endtime="20201117 14:47:59.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.607" endtime="20201117 14:47:59.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.203" endtime="20201117 14:47:59.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.198" endtime="20201117 14:47:59.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.626" level="INFO">${RESULT} = [{'time': 0.050779083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9666000000004578e-05, 'source_diff': 2.9666000000004578e-05}, {'time': 0.050818111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:59.616" endtime="20201117 14:47:59.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.662" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:59.628" endtime="20201117 14:47:59.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.674" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.671" endtime="20201117 14:47:59.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.681" level="INFO">VALUE: [2.9666000000004578e-05, 2.94579999999961e-05, 2.9902999999997792e-05, 2.9278000000000637e-05, 2.9472000000002607e-05, 2.944399999999653e-05, 2.9278000000000637e-05, 2.9360999999998583e-05, 2.9542000000000457e-05, 2.9985999999995738e-05, 2.94170000000038e-05, 2.972199999999592e-05, 2.9610999999998833e-05, 2.9096999999998763e-05, 2.9292000000000207e-05, 2.9542000000000457e-05, 2.9819999999999847e-05, 2.9666999999997112e-05, 2.9097999999998236e-05, 2.969500000000319e-05, 2.9097999999998236e-05, 2.9792000000000707e-05, 2.9680000000004148e-05, 2.9416000000004328e-05, 2.9041000000000483e-05, 2.9860999999999083e-05, 2.9499999999994808e-05, 2.9305000000000303e-05, 2.9735999999995488e-05, 2.9068999999999623e-05, 2.9264000000001067e-05, 2.9055000000000053e-05, 2.9014000000000817e-05, 2.9611999999998306e-05, 2.992999999999746e-05, 2.9902999999997792e-05, 2.9332999999999443e-05, 2.9652999999997542e-05, 2.9264000000001067e-05, 2.9569999999999597e-05, 2.968100000000362e-05, 3.0000000000002247e-05, 2.9278000000000637e-05, 2.940300000000423e-05, 2.9888999999998223e-05, 2.9486000000002177e-05, 2.9514000000001317e-05, 2.920799999999585e-05, 2.9292000000000207e-05, 2.9652999999997542e-05]</msg>
<status status="PASS" starttime="20201117 14:47:59.676" endtime="20201117 14:47:59.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.664" endtime="20201117 14:47:59.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.690" endtime="20201117 14:47:59.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.700" endtime="20201117 14:47:59.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.694" endtime="20201117 14:47:59.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.685" endtime="20201117 14:47:59.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.137" endtime="20201117 14:47:59.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.133" endtime="20201117 14:47:59.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.131" endtime="20201117 14:47:59.727"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.733" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.756" endtime="20201117 14:47:59.776"></status>
</kw>
<msg timestamp="20201117 14:47:59.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.753" endtime="20201117 14:47:59.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.780" endtime="20201117 14:47:59.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.786" endtime="20201117 14:47:59.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.745" endtime="20201117 14:47:59.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.739" endtime="20201117 14:47:59.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.811" endtime="20201117 14:48:00.176"></status>
</kw>
<msg timestamp="20201117 14:48:00.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049687694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049717986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.808" endtime="20201117 14:48:00.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049687694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049717986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.186" endtime="20201117 14:48:00.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.206" endtime="20201117 14:48:00.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.800" endtime="20201117 14:48:00.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.795" endtime="20201117 14:48:00.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.225" level="INFO">${RESULT} = [{'time': 0.049717986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0292000000001207e-05, 'source_diff': 3.0292000000001207e-05}, {'time': 0.049763986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:00.215" endtime="20201117 14:48:00.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.258" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:00.227" endtime="20201117 14:48:00.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.270" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.267" endtime="20201117 14:48:00.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.276" level="INFO">VALUE: [3.0292000000001207e-05, 3.077800000000214e-05, 3.084700000000051e-05, 3.0027999999994448e-05, 3.0486000000003177e-05, 3.045900000000351e-05, 3.086100000000008e-05, 3.0278000000001637e-05, 3.059700000000026e-05, 3.090299999999879e-05, 3.0028000000001387e-05, 3.095900000000401e-05, 3.0070000000000097e-05, 3.0486000000003177e-05, 3.0250000000002497e-05, 3.0236000000002927e-05, 3.0112000000005745e-05, 3.087499999999965e-05, 3.0180000000004648e-05, 3.0374999999999153e-05, 3.0263999999995128e-05, 3.0277000000002163e-05, 3.091599999999889e-05, 3.0124999999998903e-05, 3.0180999999997182e-05, 3.0028000000001387e-05, 3.0360999999999583e-05, 3.0055000000001053e-05, 3.0333000000000443e-05, 3.0264000000002067e-05, 3.061099999999983e-05, 3.07779999999952e-05, 3.0250000000002497e-05, 3.0083000000000193e-05, 3.07779999999952e-05, 3.0486999999995712e-05, 3.0070000000000097e-05, 3.0083999999999667e-05, 3.0500000000002747e-05, 3.0124999999998903e-05, 3.0847999999999987e-05, 3.0014000000001817e-05, 3.06249999999994e-05, 3.074999999999606e-05, 3.0222999999995892e-05, 3.0333000000000443e-05, 3.08050000000018e-05, 3.016599999999814e-05, 3.040199999999882e-05, 3.0513000000002843e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.272" endtime="20201117 14:48:00.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.260" endtime="20201117 14:48:00.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.287" endtime="20201117 14:48:00.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.296" endtime="20201117 14:48:00.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.292" endtime="20201117 14:48:00.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.283" endtime="20201117 14:48:00.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.734" endtime="20201117 14:48:00.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.730" endtime="20201117 14:48:00.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.728" endtime="20201117 14:48:00.324"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.329" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.352" endtime="20201117 14:48:00.372"></status>
</kw>
<msg timestamp="20201117 14:48:00.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.349" endtime="20201117 14:48:00.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.376" endtime="20201117 14:48:00.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.383" endtime="20201117 14:48:00.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.341" endtime="20201117 14:48:00.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.335" endtime="20201117 14:48:00.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.407" endtime="20201117 14:48:00.769"></status>
</kw>
<msg timestamp="20201117 14:48:00.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049817389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049849083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.404" endtime="20201117 14:48:00.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049817389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049849083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.779" endtime="20201117 14:48:00.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.800" endtime="20201117 14:48:00.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.396" endtime="20201117 14:48:00.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.391" endtime="20201117 14:48:00.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.818" level="INFO">${RESULT} = [{'time': 0.049849083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.169400000000572e-05, 'source_diff': 3.169400000000572e-05}, {'time': 0.049890083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:00.809" endtime="20201117 14:48:00.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.852" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:00.821" endtime="20201117 14:48:00.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.864" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.862" endtime="20201117 14:48:00.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.871" level="INFO">VALUE: [3.169400000000572e-05, 3.183300000000194e-05, 3.174999999999706e-05, 3.140299999999929e-05, 3.115299999999904e-05, 3.106900000000162e-05, 3.131900000000187e-05, 3.117999999999871e-05, 3.180599999999534e-05, 3.126400000000307e-05, 3.168099999999868e-05, 3.183400000000142e-05, 3.19449999999985e-05, 3.122199999999742e-05, 3.183400000000142e-05, 3.102800000000239e-05, 3.169499999999825e-05, 3.188900000000022e-05, 3.186100000000108e-05, 3.181999999999491e-05, 3.136100000000058e-05, 3.174999999999706e-05, 3.136100000000058e-05, 3.127800000000264e-05, 3.166599999999964e-05, 3.195800000000554e-05, 3.149999999999681e-05, 3.1276999999996224e-05, 3.174999999999706e-05, 3.183300000000194e-05, 3.198599999999774e-05, 3.188900000000022e-05, 3.1318999999994934e-05, 3.102799999999545e-05, 3.116699999999861e-05, 3.16250000000004e-05, 3.123599999999699e-05, 3.191699999999936e-05, 3.148600000000418e-05, 3.194399999999903e-05, 3.106900000000162e-05, 3.122200000000436e-05, 3.122199999999742e-05, 3.151399999999638e-05, 3.108399999999373e-05, 3.168099999999868e-05, 3.148599999999724e-05, 3.195899999999807e-05, 3.15700000000016e-05, 3.115299999999904e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.867" endtime="20201117 14:48:00.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.854" endtime="20201117 14:48:00.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.882" endtime="20201117 14:48:00.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.891" endtime="20201117 14:48:00.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.886" endtime="20201117 14:48:00.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.877" endtime="20201117 14:48:00.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.331" endtime="20201117 14:48:00.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.326" endtime="20201117 14:48:00.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.325" endtime="20201117 14:48:00.918"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.924" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.948" endtime="20201117 14:48:00.968"></status>
</kw>
<msg timestamp="20201117 14:48:00.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.945" endtime="20201117 14:48:00.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.972" endtime="20201117 14:48:00.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.978" endtime="20201117 14:48:00.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.937" endtime="20201117 14:48:00.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.930" endtime="20201117 14:48:00.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.004" endtime="20201117 14:48:01.337"></status>
</kw>
<msg timestamp="20201117 14:48:01.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051838833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051871653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.000" endtime="20201117 14:48:01.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051838833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051871653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.348" endtime="20201117 14:48:01.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.368" endtime="20201117 14:48:01.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.992" endtime="20201117 14:48:01.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.987" endtime="20201117 14:48:01.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.387" level="INFO">${RESULT} = [{'time': 0.051871653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.281999999999591e-05, 'source_diff': 3.281999999999591e-05}, {'time': 0.051907653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:01.377" endtime="20201117 14:48:01.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.421" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:01.390" endtime="20201117 14:48:01.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.433" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.430" endtime="20201117 14:48:01.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.440" level="INFO">VALUE: [3.281999999999591e-05, 3.268099999999968e-05, 3.245899999999857e-05, 3.208400000000167e-05, 3.298599999999874e-05, 3.241699999999986e-05, 3.2791000000004233e-05, 3.29449999999995e-05, 3.298699999999821e-05, 3.242999999999996e-05, 3.245800000000604e-05, 3.2846999999995574e-05, 3.24579999999991e-05, 3.299999999999831e-05, 3.249999999999781e-05, 3.2096999999994824e-05, 3.261100000000183e-05, 3.27779999999972e-05, 3.216699999999961e-05, 3.234700000000201e-05, 3.215300000000004e-05, 3.202800000000339e-05, 3.2610999999994894e-05, 3.2832999999996004e-05, 3.290199999999438e-05, 3.240300000000029e-05, 3.24579999999991e-05, 3.26250000000014e-05, 3.256999999999566e-05, 3.284799999999505e-05, 3.240300000000029e-05, 3.248599999999824e-05, 3.233399999999498e-05, 3.248699999999771e-05, 3.2652999999993604e-05, 3.2332999999995504e-05, 3.26250000000014e-05, 3.241600000000039e-05, 3.244399999999953e-05, 3.224999999999756e-05, 3.244399999999953e-05, 3.2777000000004664e-05, 3.215300000000004e-05, 3.223599999999799e-05, 3.254199999999652e-05, 3.24579999999991e-05, 3.298599999999874e-05, 3.254200000000346e-05, 3.249999999999781e-05, 3.211100000000133e-05]</msg>
<status status="PASS" starttime="20201117 14:48:01.435" endtime="20201117 14:48:01.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.423" endtime="20201117 14:48:01.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.450" endtime="20201117 14:48:01.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.459" endtime="20201117 14:48:01.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.454" endtime="20201117 14:48:01.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.445" endtime="20201117 14:48:01.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.925" endtime="20201117 14:48:01.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.921" endtime="20201117 14:48:01.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.919" endtime="20201117 14:48:01.486"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.492" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.517" endtime="20201117 14:48:01.539"></status>
</kw>
<msg timestamp="20201117 14:48:01.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.512" endtime="20201117 14:48:01.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.543" endtime="20201117 14:48:01.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.552" endtime="20201117 14:48:01.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.504" endtime="20201117 14:48:01.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.497" endtime="20201117 14:48:01.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.585" endtime="20201117 14:48:01.954"></status>
</kw>
<msg timestamp="20201117 14:48:01.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052880708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052913708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.580" endtime="20201117 14:48:01.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052880708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052913708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.965" endtime="20201117 14:48:01.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.987" endtime="20201117 14:48:01.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.568" endtime="20201117 14:48:01.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.562" endtime="20201117 14:48:01.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.006" level="INFO">${RESULT} = [{'time': 0.052913708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.299999999999831e-05, 'source_diff': 3.299999999999831e-05}, {'time': 0.052959722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:01.996" endtime="20201117 14:48:02.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.042" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:02.008" endtime="20201117 14:48:02.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.053" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.051" endtime="20201117 14:48:02.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.060" level="INFO">VALUE: [3.299999999999831e-05, 3.331900000000387e-05, 3.3624999999995464e-05, 3.302800000000439e-05, 3.394400000000103e-05, 3.3832999999997004e-05, 3.3568999999997184e-05, 3.3750000000006e-05, 3.306900000000362e-05, 3.369400000000078e-05, 3.318100000000018e-05, 3.381999999999691e-05, 3.355599999999709e-05, 3.3791000000005234e-05, 3.351399999999838e-05, 3.309700000000276e-05, 3.309800000000224e-05, 3.369500000000025e-05, 3.355599999999709e-05, 3.379200000000471e-05, 3.348599999999924e-05, 3.369399999999384e-05, 3.370800000000035e-05, 3.338800000000225e-05, 3.3818999999997434e-05, 3.3110999999995394e-05, 3.348599999999924e-05, 3.391599999999495e-05, 3.327800000000464e-05, 3.302799999999745e-05, 3.348599999999924e-05, 3.322199999999942e-05, 3.369400000000078e-05, 3.3818999999997434e-05, 3.352799999999795e-05, 3.338800000000225e-05, 3.365300000000154e-05, 3.311100000000233e-05, 3.304199999999702e-05, 3.397200000000017e-05, 3.32779999999977e-05, 3.3374999999995214e-05, 3.365300000000154e-05, 3.329199999999727e-05, 3.355599999999709e-05, 3.386200000000256e-05, 3.301399999999788e-05, 3.354200000000446e-05, 3.340200000000182e-05, 3.3040999999997545e-05]</msg>
<status status="PASS" starttime="20201117 14:48:02.056" endtime="20201117 14:48:02.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.044" endtime="20201117 14:48:02.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.070" endtime="20201117 14:48:02.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.079" endtime="20201117 14:48:02.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.074" endtime="20201117 14:48:02.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.065" endtime="20201117 14:48:02.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.493" endtime="20201117 14:48:02.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.489" endtime="20201117 14:48:02.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.487" endtime="20201117 14:48:02.106"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.112" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.135" endtime="20201117 14:48:02.155"></status>
</kw>
<msg timestamp="20201117 14:48:02.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.132" endtime="20201117 14:48:02.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.159" endtime="20201117 14:48:02.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.166" endtime="20201117 14:48:02.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.124" endtime="20201117 14:48:02.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.118" endtime="20201117 14:48:02.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.192" endtime="20201117 14:48:02.565"></status>
</kw>
<msg timestamp="20201117 14:48:02.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049962097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049996514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.187" endtime="20201117 14:48:02.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049962097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049996514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.575" endtime="20201117 14:48:02.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.595" endtime="20201117 14:48:02.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.179" endtime="20201117 14:48:02.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.174" endtime="20201117 14:48:02.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.614" level="INFO">${RESULT} = [{'time': 0.049996514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.441700000000186e-05, 'source_diff': 3.441700000000186e-05}, {'time': 0.050039514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:02.604" endtime="20201117 14:48:02.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.647" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:02.616" endtime="20201117 14:48:02.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.659" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.656" endtime="20201117 14:48:02.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.666" level="INFO">VALUE: [3.441700000000186e-05, 3.488900000000322e-05, 3.409700000000376e-05, 3.408400000000367e-05, 3.490300000000279e-05, 3.497200000000117e-05, 3.4402999999995354e-05, 3.4110999999996394e-05, 3.441700000000186e-05, 3.426399999999913e-05, 3.4902999999995854e-05, 3.4332999999997504e-05, 3.468000000000221e-05, 3.415200000000257e-05, 3.46380000000035e-05, 3.469399999999484e-05, 3.473600000000049e-05, 3.437500000000315e-05, 3.4610999999996894e-05, 3.4138999999995534e-05, 3.448600000000024e-05, 3.411100000000333e-05, 3.441700000000186e-05, 3.424999999999956e-05, 3.4860999999997144e-05, 3.431999999999741e-05, 3.405600000000453e-05, 3.4832999999998004e-05, 3.423599999999999e-05, 3.449999999999981e-05, 3.4624999999996464e-05, 3.455599999999809e-05, 3.406999999999716e-05, 3.437500000000315e-05, 3.411200000000281e-05, 3.4445000000001e-05, 3.475000000000006e-05, 3.482000000000485e-05, 3.4902999999995854e-05, 3.399999999999931e-05, 3.4846999999997574e-05, 3.4846999999997574e-05, 3.4388999999995784e-05, 3.454199999999852e-05, 3.401399999999888e-05, 3.433300000000444e-05, 3.440300000000229e-05, 3.49859999999938e-05, 3.436100000000358e-05, 3.4902999999995854e-05]</msg>
<status status="PASS" starttime="20201117 14:48:02.661" endtime="20201117 14:48:02.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.649" endtime="20201117 14:48:02.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.675" endtime="20201117 14:48:02.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.685" endtime="20201117 14:48:02.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.680" endtime="20201117 14:48:02.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.670" endtime="20201117 14:48:02.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.113" endtime="20201117 14:48:02.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.109" endtime="20201117 14:48:02.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.107" endtime="20201117 14:48:02.712"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.718" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.741" endtime="20201117 14:48:02.760"></status>
</kw>
<msg timestamp="20201117 14:48:02.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.737" endtime="20201117 14:48:02.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.764" endtime="20201117 14:48:02.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.778" endtime="20201117 14:48:02.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.730" endtime="20201117 14:48:02.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.723" endtime="20201117 14:48:02.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.803" endtime="20201117 14:48:03.169"></status>
</kw>
<msg timestamp="20201117 14:48:03.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049543764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049578972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.799" endtime="20201117 14:48:03.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049543764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049578972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.179" endtime="20201117 14:48:03.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.199" endtime="20201117 14:48:03.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.791" endtime="20201117 14:48:03.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.786" endtime="20201117 14:48:03.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.218" level="INFO">${RESULT} = [{'time': 0.049578972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.520800000000185e-05, 'source_diff': 3.520800000000185e-05}, {'time': 0.049622014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:03.209" endtime="20201117 14:48:03.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.252" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:03.220" endtime="20201117 14:48:03.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.263" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.261" endtime="20201117 14:48:03.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.271" level="INFO">VALUE: [3.520800000000185e-05, 3.5152999999996104e-05, 3.505599999999859e-05, 3.548600000000124e-05, 3.5110999999997394e-05, 3.575000000000106e-05, 3.548600000000124e-05, 3.569500000000225e-05, 3.500000000000031e-05, 3.551400000000038e-05, 3.5666999999996174e-05, 3.572200000000192e-05, 3.5958999999995134e-05, 3.547300000000114e-05, 3.540300000000329e-05, 3.586199999999762e-05, 3.51250000000039e-05, 3.544400000000253e-05, 3.5846999999998574e-05, 3.5541000000000045e-05, 3.548600000000124e-05, 3.570800000000235e-05, 3.5026999999999975e-05, 3.5096999999997824e-05, 3.5819000000006374e-05, 3.594399999999609e-05, 3.551400000000038e-05, 3.579199999999977e-05, 3.5166999999995674e-05, 3.5596999999998324e-05, 3.501399999999988e-05, 3.5888999999997284e-05, 3.5110999999997394e-05, 3.572200000000192e-05, 3.529199999999927e-05, 3.5874999999997714e-05, 3.525000000000056e-05, 3.552799999999995e-05, 3.548600000000124e-05, 3.5445000000002e-05, 3.6055000000000115e-05, 3.51250000000039e-05, 3.5818999999999435e-05, 3.530599999999884e-05, 3.525000000000056e-05, 3.5527000000000475e-05, 3.523599999999405e-05, 3.5804999999999865e-05, 3.513900000000347e-05, 3.542999999999602e-05]</msg>
<status status="PASS" starttime="20201117 14:48:03.266" endtime="20201117 14:48:03.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.254" endtime="20201117 14:48:03.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.280" endtime="20201117 14:48:03.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.289" endtime="20201117 14:48:03.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.285" endtime="20201117 14:48:03.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.275" endtime="20201117 14:48:03.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.719" endtime="20201117 14:48:03.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.715" endtime="20201117 14:48:03.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.713" endtime="20201117 14:48:03.316"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.322" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.346" endtime="20201117 14:48:03.368"></status>
</kw>
<msg timestamp="20201117 14:48:03.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.343" endtime="20201117 14:48:03.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.371" endtime="20201117 14:48:03.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.378" endtime="20201117 14:48:03.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.334" endtime="20201117 14:48:03.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.328" endtime="20201117 14:48:03.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.403" endtime="20201117 14:48:03.766"></status>
</kw>
<msg timestamp="20201117 14:48:03.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051092792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051129208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.399" endtime="20201117 14:48:03.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051092792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051129208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.776" endtime="20201117 14:48:03.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.796" endtime="20201117 14:48:03.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.392" endtime="20201117 14:48:03.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.387" endtime="20201117 14:48:03.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.815" level="INFO">${RESULT} = [{'time': 0.051129208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.641600000000439e-05, 'source_diff': 3.641600000000439e-05}, {'time': 0.051180222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:03.805" endtime="20201117 14:48:03.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.848" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:03.817" endtime="20201117 14:48:03.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.860" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.857" endtime="20201117 14:48:03.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.867" level="INFO">VALUE: [3.641600000000439e-05, 3.6874999999998714e-05, 3.6124999999997964e-05, 3.672199999999598e-05, 3.694399999999709e-05, 3.616700000000361e-05, 3.6388999999997784e-05, 3.625000000000156e-05, 3.6068999999999685e-05, 3.648600000000224e-05, 3.655600000000009e-05, 3.619500000000275e-05, 3.643100000000343e-05, 3.686100000000608e-05, 3.6874999999998714e-05, 3.6610999999998894e-05, 3.6110999999998394e-05, 3.6958999999996134e-05, 3.6541000000001045e-05, 3.61250000000049e-05, 3.634700000000601e-05, 3.6041000000000545e-05, 3.6874999999998714e-05, 3.694399999999709e-05, 3.64580000000031e-05, 3.6819000000000435e-05, 3.700000000000231e-05, 3.690300000000479e-05, 3.6055000000000115e-05, 3.64859999999953e-05, 3.6318999999999935e-05, 3.61250000000049e-05, 3.648600000000224e-05, 3.6624999999998464e-05, 3.6652999999997604e-05, 3.675000000000206e-05, 3.669500000000325e-05, 3.693100000000393e-05, 3.681999999999991e-05, 3.679200000000077e-05, 3.658399999999923e-05, 3.6305000000000365e-05, 3.61250000000049e-05, 3.6554999999993676e-05, 3.680600000000034e-05, 3.62780000000007e-05, 3.648600000000224e-05, 3.6068999999999685e-05, 3.647200000000267e-05, 3.6291000000000795e-05]</msg>
<status status="PASS" starttime="20201117 14:48:03.862" endtime="20201117 14:48:03.868"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.850" endtime="20201117 14:48:03.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.877" endtime="20201117 14:48:03.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.885" endtime="20201117 14:48:03.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.881" endtime="20201117 14:48:03.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.872" endtime="20201117 14:48:03.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.324" endtime="20201117 14:48:03.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.319" endtime="20201117 14:48:03.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.317" endtime="20201117 14:48:03.913"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.919" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.942" endtime="20201117 14:48:03.963"></status>
</kw>
<msg timestamp="20201117 14:48:03.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.939" endtime="20201117 14:48:03.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.966" endtime="20201117 14:48:03.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.973" endtime="20201117 14:48:03.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.931" endtime="20201117 14:48:03.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.925" endtime="20201117 14:48:03.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.998" endtime="20201117 14:48:04.364"></status>
</kw>
<msg timestamp="20201117 14:48:04.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050474361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050512236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.995" endtime="20201117 14:48:04.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050474361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050512236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.374" endtime="20201117 14:48:04.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.394" endtime="20201117 14:48:04.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.987" endtime="20201117 14:48:04.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.982" endtime="20201117 14:48:04.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.412" level="INFO">${RESULT} = [{'time': 0.050512236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7874999999999714e-05, 'source_diff': 3.7874999999999714e-05}, {'time': 0.050552236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:04.403" endtime="20201117 14:48:04.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.448" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:04.415" endtime="20201117 14:48:04.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.460" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.457" endtime="20201117 14:48:04.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.467" level="INFO">VALUE: [3.7874999999999714e-05, 3.7333000000000505e-05, 3.7847000000000575e-05, 3.7569000000001185e-05, 3.774999999999612e-05, 3.7874999999999714e-05, 3.7110999999999394e-05, 3.772200000000392e-05, 3.770799999999741e-05, 3.780600000000134e-05, 3.773600000000349e-05, 3.733399999999998e-05, 3.799999999999637e-05, 3.776400000000263e-05, 3.7291000000001795e-05, 3.7194999999996814e-05, 3.7736999999996024e-05, 3.794399999999809e-05, 3.7652999999998604e-05, 3.738799999999931e-05, 3.7861000000000145e-05, 3.79859999999968e-05, 3.7555000000001615e-05, 3.7319000000000935e-05, 3.765300000000554e-05, 3.717999999999777e-05, 3.747199999999673e-05, 3.751399999999544e-05, 3.698600000000274e-05, 3.740300000000529e-05, 3.715300000000504e-05, 3.74580000000041e-05, 3.722200000000342e-05, 3.775000000000306e-05, 3.705600000000059e-05, 3.7430999999997494e-05, 3.736100000000658e-05, 3.799999999999637e-05, 3.70979999999993e-05, 3.7416999999997924e-05, 3.7444999999997064e-05, 3.775000000000306e-05, 3.7652999999998604e-05, 3.7569000000001185e-05, 3.7540999999995106e-05, 3.7874999999999714e-05, 3.719399999999734e-05, 3.773599999999655e-05, 3.769399999999784e-05, 3.7347000000000075e-05]</msg>
<status status="PASS" starttime="20201117 14:48:04.462" endtime="20201117 14:48:04.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.450" endtime="20201117 14:48:04.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.477" endtime="20201117 14:48:04.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.486" endtime="20201117 14:48:04.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.482" endtime="20201117 14:48:04.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.472" endtime="20201117 14:48:04.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.921" endtime="20201117 14:48:04.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.916" endtime="20201117 14:48:04.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.914" endtime="20201117 14:48:04.509"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.512" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.522" endtime="20201117 14:48:04.539"></status>
</kw>
<msg timestamp="20201117 14:48:04.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.520" endtime="20201117 14:48:04.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.541" endtime="20201117 14:48:04.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.544" endtime="20201117 14:48:04.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.517" endtime="20201117 14:48:04.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.514" endtime="20201117 14:48:04.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.555" endtime="20201117 14:48:04.843"></status>
</kw>
<msg timestamp="20201117 14:48:04.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027710167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027748292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.554" endtime="20201117 14:48:04.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027710167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027748292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.847" endtime="20201117 14:48:04.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.856" endtime="20201117 14:48:04.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.550" endtime="20201117 14:48:04.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.548" endtime="20201117 14:48:04.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.864" level="INFO">${RESULT} = [{'time': 0.027748292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8124999999999964e-05, 'source_diff': 3.8124999999999964e-05}, {'time': 0.027798306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:04.860" endtime="20201117 14:48:04.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.879" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:04.865" endtime="20201117 14:48:04.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.884" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.883" endtime="20201117 14:48:04.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.888" level="INFO">VALUE: [3.8124999999999964e-05, 3.836199999999665e-05, 3.886200000000062e-05, 3.881999999999844e-05, 3.8694999999998314e-05, 3.8347000000001075e-05, 3.816600000000267e-05, 3.8110999999996925e-05, 3.8291000000002795e-05, 3.819400000000181e-05, 3.8111000000000395e-05, 3.8874999999997245e-05, 3.8582999999998285e-05, 3.875000000000059e-05, 3.8347000000001075e-05, 3.848600000000077e-05, 3.870800000000188e-05, 3.8652999999999604e-05, 3.8124999999999964e-05, 3.87780000000032e-05, 3.8138999999999534e-05, 3.8166999999998674e-05, 3.87919999999993e-05, 3.808399999999726e-05, 3.80980000000003e-05, 3.82919999999988e-05, 3.891599999999995e-05, 3.8666999999999174e-05, 3.848700000000024e-05, 3.836200000000012e-05, 3.8361000000000645e-05, 3.873599999999755e-05, 3.870799999999841e-05, 3.8777000000000256e-05, 3.890200000000038e-05, 3.8903000000003324e-05, 3.848600000000077e-05, 3.8639000000000034e-05, 3.8583000000001755e-05, 3.84859999999973e-05, 3.854199999999905e-05, 3.870800000000188e-05, 3.8430999999998494e-05, 3.89720000000017e-05, 3.8347000000001075e-05, 3.822199999999748e-05, 3.8902999999999854e-05, 3.8611000000000895e-05, 3.827799999999923e-05, 3.877799999999973e-05]</msg>
<status status="PASS" starttime="20201117 14:48:04.885" endtime="20201117 14:48:04.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.880" endtime="20201117 14:48:04.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.892" endtime="20201117 14:48:04.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.896" endtime="20201117 14:48:04.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.894" endtime="20201117 14:48:04.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.890" endtime="20201117 14:48:04.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.512" endtime="20201117 14:48:04.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.510" endtime="20201117 14:48:04.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.509" endtime="20201117 14:48:04.918"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.921" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.931" endtime="20201117 14:48:04.948"></status>
</kw>
<msg timestamp="20201117 14:48:04.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.930" endtime="20201117 14:48:04.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.950" endtime="20201117 14:48:04.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.953" endtime="20201117 14:48:04.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.926" endtime="20201117 14:48:04.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.924" endtime="20201117 14:48:04.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.965" endtime="20201117 14:48:05.291"></status>
</kw>
<msg timestamp="20201117 14:48:05.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028187389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028226569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.963" endtime="20201117 14:48:05.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028187389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028226569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.301" endtime="20201117 14:48:05.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.322" endtime="20201117 14:48:05.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.959" endtime="20201117 14:48:05.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.957" endtime="20201117 14:48:05.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.340" level="INFO">${RESULT} = [{'time': 0.028226569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.917999999999977e-05, 'source_diff': 3.917999999999977e-05}, {'time': 0.028272556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:05.331" endtime="20201117 14:48:05.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.374" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:05.343" endtime="20201117 14:48:05.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.386" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.384" endtime="20201117 14:48:05.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.393" level="INFO">VALUE: [3.917999999999977e-05, 3.998700000000174e-05, 3.988800000000181e-05, 3.9596999999998855e-05, 3.988800000000181e-05, 3.965200000000113e-05, 3.9847000000002575e-05, 3.9041000000000076e-05, 3.9860999999998675e-05, 3.968000000000027e-05, 3.9402999999996885e-05, 3.99859999999988e-05, 3.9582999999999285e-05, 3.927800000000023e-05, 3.9318999999999465e-05, 3.973599999999855e-05, 3.9847000000002575e-05, 3.970799999999941e-05, 3.954200000000005e-05, 3.951400000000091e-05, 3.905599999999912e-05, 3.981999999999944e-05, 3.904199999999955e-05, 3.9416999999999924e-05, 3.9416999999999924e-05, 3.938800000000131e-05, 3.91660000000002e-05, 3.945799999999916e-05, 3.995799999999966e-05, 3.940200000000088e-05, 3.9096999999998355e-05, 3.9096999999998355e-05, 3.970800000000288e-05, 3.9777000000001256e-05, 3.9944999999999564e-05, 3.919399999999934e-05, 3.9139000000000534e-05, 3.9846999999999105e-05, 3.908399999999826e-05, 3.9125000000000965e-05, 3.9403000000000354e-05, 3.925000000000109e-05, 3.9111000000001395e-05, 3.955599999999962e-05, 3.9473000000001673e-05, 3.9416999999999924e-05, 3.952799999999701e-05, 3.9361000000001645e-05, 3.952800000000048e-05, 3.931999999999894e-05]</msg>
<status status="PASS" starttime="20201117 14:48:05.388" endtime="20201117 14:48:05.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.376" endtime="20201117 14:48:05.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.403" endtime="20201117 14:48:05.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.412" endtime="20201117 14:48:05.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.407" endtime="20201117 14:48:05.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.398" endtime="20201117 14:48:05.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.922" endtime="20201117 14:48:05.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.920" endtime="20201117 14:48:05.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.919" endtime="20201117 14:48:05.439"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.445" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.468" endtime="20201117 14:48:05.488"></status>
</kw>
<msg timestamp="20201117 14:48:05.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.464" endtime="20201117 14:48:05.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.492" endtime="20201117 14:48:05.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.499" endtime="20201117 14:48:05.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.457" endtime="20201117 14:48:05.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.450" endtime="20201117 14:48:05.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.524" endtime="20201117 14:48:05.889"></status>
</kw>
<msg timestamp="20201117 14:48:05.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0496195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049659875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:05.520" endtime="20201117 14:48:05.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0496195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049659875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:05.899" endtime="20201117 14:48:05.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.920" endtime="20201117 14:48:05.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.513" endtime="20201117 14:48:05.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.508" endtime="20201117 14:48:05.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.939" level="INFO">${RESULT} = [{'time': 0.049659875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0375000000002215e-05, 'source_diff': 4.0375000000002215e-05}, {'time': 0.049703889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:05.929" endtime="20201117 14:48:05.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.972" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:05.941" endtime="20201117 14:48:05.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.984" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.982" endtime="20201117 14:48:05.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.991" level="INFO">VALUE: [4.0375000000002215e-05, 4.030600000000384e-05, 4.0653000000001605e-05, 4.044400000000059e-05, 4.030600000000384e-05, 4.04859999999993e-05, 4.0167000000000674e-05, 4.0403000000001354e-05, 4.0917000000001424e-05, 4.04859999999993e-05, 4.0445000000000064e-05, 4.020799999999991e-05, 4.0181000000000244e-05, 4.024999999999862e-05, 4.041599999999451e-05, 4.0111000000002395e-05, 4.06660000000017e-05, 4.050000000000581e-05, 4.0054999999997176e-05, 4.09859999999998e-05, 4.001399999999794e-05, 4.0874999999995776e-05, 4.0861000000003145e-05, 4.0624999999995526e-05, 4.002799999999751e-05, 4.0931000000000994e-05, 4.0889000000002285e-05, 4.0861000000003145e-05, 4.0875000000002715e-05, 4.0374999999995276e-05, 4.0347000000003075e-05, 4.0458999999999634e-05, 4.0124999999995026e-05, 4.0611000000002895e-05, 4.049999999999887e-05, 4.0125000000001965e-05, 4.052800000000495e-05, 4.023700000000546e-05, 4.0125000000001965e-05, 4.0791000000005295e-05, 4.0540999999998106e-05, 4.027799999999776e-05, 4.019400000000034e-05, 4.0861000000003145e-05, 4.0361000000002645e-05, 4.079200000000477e-05, 4.073599999999955e-05, 4.047199999999973e-05, 4.0667000000001174e-05, 4.023600000000599e-05]</msg>
<status status="PASS" starttime="20201117 14:48:05.987" endtime="20201117 14:48:05.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.974" endtime="20201117 14:48:05.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.001" endtime="20201117 14:48:06.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.010" endtime="20201117 14:48:06.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.005" endtime="20201117 14:48:06.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.996" endtime="20201117 14:48:06.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.446" endtime="20201117 14:48:06.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.442" endtime="20201117 14:48:06.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.440" endtime="20201117 14:48:06.037"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.043" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.066" endtime="20201117 14:48:06.086"></status>
</kw>
<msg timestamp="20201117 14:48:06.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.062" endtime="20201117 14:48:06.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.090" endtime="20201117 14:48:06.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.097" endtime="20201117 14:48:06.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.055" endtime="20201117 14:48:06.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.048" endtime="20201117 14:48:06.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.124" endtime="20201117 14:48:06.489"></status>
</kw>
<msg timestamp="20201117 14:48:06.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049957528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049999306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.120" endtime="20201117 14:48:06.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049957528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049999306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.499" endtime="20201117 14:48:06.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.519" endtime="20201117 14:48:06.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.112" endtime="20201117 14:48:06.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.107" endtime="20201117 14:48:06.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.538" level="INFO">${RESULT} = [{'time': 0.049999306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.177799999999926e-05, 'source_diff': 4.177799999999926e-05}, {'time': 0.050044319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:06.528" endtime="20201117 14:48:06.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.574" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:06.540" endtime="20201117 14:48:06.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.586" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.583" endtime="20201117 14:48:06.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.593" level="INFO">VALUE: [4.177799999999926e-05, 4.1290999999998856e-05, 4.136200000000312e-05, 4.149999999999987e-05, 4.1318999999997996e-05, 4.1276999999999286e-05, 4.141599999999551e-05, 4.1040999999998606e-05, 4.1790999999999356e-05, 4.1403000000002355e-05, 4.179199999999883e-05, 4.1333000000004505e-05, 4.130600000000484e-05, 4.1318999999997996e-05, 4.1416999999994986e-05, 4.144400000000159e-05, 4.1610999999996956e-05, 4.161200000000337e-05, 4.108400000000373e-05, 4.102799999999851e-05, 4.1708999999993945e-05, 4.199999999999343e-05, 4.1444999999994125e-05, 4.1110999999996456e-05, 4.191600000000295e-05, 4.126399999999919e-05, 4.1833000000005005e-05, 4.14860000000003e-05, 4.173600000000055e-05, 4.1347000000004075e-05, 4.1097000000003825e-05, 4.19860000000008e-05, 4.1568999999998246e-05, 4.144400000000159e-05, 4.152799999999901e-05, 4.144399999999465e-05, 4.1652999999995666e-05, 4.1945000000001564e-05, 4.1818999999998496e-05, 4.102799999999851e-05, 4.152799999999901e-05, 4.1875000000003715e-05, 4.1389000000002785e-05, 4.1445000000001064e-05, 4.1874999999996776e-05, 4.1987000000000274e-05, 4.1445000000001064e-05, 4.1804999999998926e-05, 4.156999999999772e-05, 4.1375000000003215e-05]</msg>
<status status="PASS" starttime="20201117 14:48:06.588" endtime="20201117 14:48:06.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.576" endtime="20201117 14:48:06.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.603" endtime="20201117 14:48:06.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.611" endtime="20201117 14:48:06.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.607" endtime="20201117 14:48:06.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.598" endtime="20201117 14:48:06.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.044" endtime="20201117 14:48:06.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.040" endtime="20201117 14:48:06.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.038" endtime="20201117 14:48:06.639"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.644" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.667" endtime="20201117 14:48:06.687"></status>
</kw>
<msg timestamp="20201117 14:48:06.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.664" endtime="20201117 14:48:06.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.691" endtime="20201117 14:48:06.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.698" endtime="20201117 14:48:06.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.656" endtime="20201117 14:48:06.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.650" endtime="20201117 14:48:06.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.724" endtime="20201117 14:48:07.089"></status>
</kw>
<msg timestamp="20201117 14:48:07.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049367611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049409972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.720" endtime="20201117 14:48:07.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049367611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049409972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.099" endtime="20201117 14:48:07.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.119" endtime="20201117 14:48:07.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.712" endtime="20201117 14:48:07.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.707" endtime="20201117 14:48:07.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.139" level="INFO">${RESULT} = [{'time': 0.049409972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2361000000004645e-05, 'source_diff': 4.2361000000004645e-05}, {'time': 0.049467972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:07.129" endtime="20201117 14:48:07.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.173" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:07.142" endtime="20201117 14:48:07.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.184" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.182" endtime="20201117 14:48:07.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.192" level="INFO">VALUE: [4.2361000000004645e-05, 4.2832999999999066e-05, 4.2554999999999676e-05, 4.222199999999454e-05, 4.250000000000087e-05, 4.294400000000309e-05, 4.225000000000062e-05, 4.2917000000003425e-05, 4.2431000000002494e-05, 4.252800000000001e-05, 4.29860000000018e-05, 4.2361000000004645e-05, 4.204199999999908e-05, 4.267999999999633e-05, 4.222200000000148e-05, 4.205599999999865e-05, 4.2181000000002244e-05, 4.2610999999997956e-05, 4.275000000000112e-05, 4.281999999999897e-05, 4.241599999999651e-05, 4.288799999999787e-05, 4.275000000000112e-05, 4.2040999999999606e-05, 4.218000000000277e-05, 4.270800000000241e-05, 4.2388999999996846e-05, 4.245800000000216e-05, 4.229199999999933e-05, 4.2360999999997706e-05, 4.226400000000019e-05, 4.201399999999994e-05, 4.2916999999996486e-05, 4.250000000000087e-05, 4.2152999999996166e-05, 4.2195000000001814e-05, 4.281999999999897e-05, 4.248599999999436e-05, 4.2375000000004215e-05, 4.2931000000002995e-05, 4.2695000000002314e-05, 4.2722999999994515e-05, 4.2944999999995626e-05, 4.269400000000284e-05, 4.242999999999608e-05, 4.2847000000005575e-05, 4.241599999999651e-05, 4.227799999999976e-05, 4.2374999999997276e-05, 4.252800000000001e-05]</msg>
<status status="PASS" starttime="20201117 14:48:07.187" endtime="20201117 14:48:07.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.175" endtime="20201117 14:48:07.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.201" endtime="20201117 14:48:07.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.210" endtime="20201117 14:48:07.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.205" endtime="20201117 14:48:07.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.196" endtime="20201117 14:48:07.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.646" endtime="20201117 14:48:07.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.641" endtime="20201117 14:48:07.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.640" endtime="20201117 14:48:07.238"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.243" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.267" endtime="20201117 14:48:07.288"></status>
</kw>
<msg timestamp="20201117 14:48:07.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.264" endtime="20201117 14:48:07.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.291" endtime="20201117 14:48:07.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.298" endtime="20201117 14:48:07.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.256" endtime="20201117 14:48:07.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.249" endtime="20201117 14:48:07.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.323" endtime="20201117 14:48:07.687"></status>
</kw>
<msg timestamp="20201117 14:48:07.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050400264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050444222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.319" endtime="20201117 14:48:07.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050400264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050444222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.698" endtime="20201117 14:48:07.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.718" endtime="20201117 14:48:07.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.312" endtime="20201117 14:48:07.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.307" endtime="20201117 14:48:07.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.737" level="INFO">${RESULT} = [{'time': 0.050444222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.395799999999672e-05, 'source_diff': 4.395799999999672e-05}, {'time': 0.050502222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:07.727" endtime="20201117 14:48:07.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.770" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:07.739" endtime="20201117 14:48:07.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.782" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.779" endtime="20201117 14:48:07.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.789" level="INFO">VALUE: [4.395799999999672e-05, 4.3582999999999816e-05, 4.3596999999999386e-05, 4.3846999999999636e-05, 4.327800000000076e-05, 4.373600000000255e-05, 4.379200000000083e-05, 4.334799999999861e-05, 4.33059999999999e-05, 4.3959000000003134e-05, 4.3459000000002634e-05, 4.3181000000003245e-05, 4.3374999999998276e-05, 4.381999999999997e-05, 4.392999999999758e-05, 4.386199999999868e-05, 4.3944999999996626e-05, 4.36939999999969e-05, 4.3569000000000246e-05, 4.341599999999751e-05, 4.3625000000005465e-05, 4.3124999999998026e-05, 4.3068999999999746e-05, 4.3916999999997486e-05, 4.3582999999999816e-05, 4.3403000000004355e-05, 4.301400000000094e-05, 4.3624999999998526e-05, 4.329199999999339e-05, 4.327800000000076e-05, 4.3610999999998956e-05, 4.34860000000023e-05, 4.3667000000004175e-05, 4.3694999999996376e-05, 4.3555000000000677e-05, 4.3958999999996196e-05, 4.38060000000004e-05, 4.3833000000000066e-05, 4.3402999999997416e-05, 4.350000000000187e-05, 4.343000000000402e-05, 4.3833000000000066e-05, 4.3068999999999746e-05, 4.3555000000000677e-05, 4.3125000000004965e-05, 4.327800000000076e-05, 4.329200000000033e-05, 4.345799999999622e-05, 4.3819000000000496e-05, 4.3596999999999386e-05]</msg>
<status status="PASS" starttime="20201117 14:48:07.784" endtime="20201117 14:48:07.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.772" endtime="20201117 14:48:07.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.799" endtime="20201117 14:48:07.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.813" endtime="20201117 14:48:07.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.803" endtime="20201117 14:48:07.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.794" endtime="20201117 14:48:07.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.245" endtime="20201117 14:48:07.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.240" endtime="20201117 14:48:07.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.239" endtime="20201117 14:48:07.841"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.846" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.869" endtime="20201117 14:48:07.891"></status>
</kw>
<msg timestamp="20201117 14:48:07.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.866" endtime="20201117 14:48:07.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.895" endtime="20201117 14:48:07.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.901" endtime="20201117 14:48:07.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.858" endtime="20201117 14:48:07.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.852" endtime="20201117 14:48:07.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.926" endtime="20201117 14:48:08.292"></status>
</kw>
<msg timestamp="20201117 14:48:08.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049938847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049983542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.923" endtime="20201117 14:48:08.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049938847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049983542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.302" endtime="20201117 14:48:08.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.322" endtime="20201117 14:48:08.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.915" endtime="20201117 14:48:08.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.910" endtime="20201117 14:48:08.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.341" level="INFO">${RESULT} = [{'time': 0.049983542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4694999999997376e-05, 'source_diff': 4.4694999999997376e-05}, {'time': 0.0500395, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:08.331" endtime="20201117 14:48:08.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.355" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:08.342" endtime="20201117 14:48:08.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.361" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.360" endtime="20201117 14:48:08.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.364" level="INFO">VALUE: [4.4694999999997376e-05, 4.495799999999772e-05, 4.494399999999815e-05, 4.499999999999643e-05, 4.4874999999999776e-05, 4.500000000000337e-05, 4.4444999999997126e-05, 4.4360999999999706e-05, 4.4624999999999526e-05, 4.422200000000348e-05, 4.4708999999996946e-05, 4.434799999999961e-05, 4.4124999999999026e-05, 4.4125000000005965e-05, 4.4874999999999776e-05, 4.4583000000000816e-05, 4.401299999999553e-05, 4.429200000000133e-05, 4.404100000000161e-05, 4.4888999999999346e-05, 4.4597000000000386e-05, 4.4652999999998666e-05, 4.476400000000269e-05, 4.4402999999998416e-05, 4.424999999999568e-05, 4.4902999999998916e-05, 4.476400000000269e-05, 4.4597000000000386e-05, 4.481999999999403e-05, 4.425000000000262e-05, 4.456999999999378e-05, 4.427800000000176e-05, 4.454199999999464e-05, 4.467999999999833e-05, 4.470799999999747e-05, 4.401400000000194e-05, 4.416599999999826e-05, 4.419400000000434e-05, 4.494400000000509e-05, 4.452700000000254e-05, 4.4874999999999776e-05, 4.429100000000186e-05, 4.4069000000000746e-05, 4.404199999999414e-05, 4.4319000000000996e-05, 4.423600000000305e-05, 4.452799999999507e-05, 4.4888999999999346e-05, 4.454200000000158e-05, 4.4402999999998416e-05]</msg>
<status status="PASS" starttime="20201117 14:48:08.362" endtime="20201117 14:48:08.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.356" endtime="20201117 14:48:08.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.369" endtime="20201117 14:48:08.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.373" endtime="20201117 14:48:08.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.371" endtime="20201117 14:48:08.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.367" endtime="20201117 14:48:08.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.848" endtime="20201117 14:48:08.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.844" endtime="20201117 14:48:08.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.842" endtime="20201117 14:48:08.395"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.398" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.408" endtime="20201117 14:48:08.425"></status>
</kw>
<msg timestamp="20201117 14:48:08.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.407" endtime="20201117 14:48:08.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.427" endtime="20201117 14:48:08.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.430" endtime="20201117 14:48:08.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.403" endtime="20201117 14:48:08.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.400" endtime="20201117 14:48:08.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.442" endtime="20201117 14:48:08.728"></status>
</kw>
<msg timestamp="20201117 14:48:08.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027836653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027881764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.440" endtime="20201117 14:48:08.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027836653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027881764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.732" endtime="20201117 14:48:08.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.741" endtime="20201117 14:48:08.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.437" endtime="20201117 14:48:08.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.434" endtime="20201117 14:48:08.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.750" level="INFO">${RESULT} = [{'time': 0.027881764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5111000000000456e-05, 'source_diff': 4.5111000000000456e-05}, {'time': 0.027936806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:08.745" endtime="20201117 14:48:08.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.766" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:08.751" endtime="20201117 14:48:08.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.771" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.770" endtime="20201117 14:48:08.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.775" level="INFO">VALUE: [4.5111000000000456e-05, 4.5487000000000305e-05, 4.531899999999853e-05, 4.5459000000001165e-05, 4.5319999999998e-05, 4.527799999999929e-05, 4.5709000000001415e-05, 4.532000000000147e-05, 4.5237000000000055e-05, 4.575000000000065e-05, 4.508299999999785e-05, 4.523600000000058e-05, 4.523600000000058e-05, 4.545800000000169e-05, 4.543000000000255e-05, 4.531899999999853e-05, 4.558299999999835e-05, 4.5639000000000096e-05, 4.554199999999911e-05, 4.580599999999893e-05, 4.5138999999999596e-05, 4.5861000000001206e-05, 4.558299999999835e-05, 4.5402999999999416e-05, 4.586099999999774e-05, 4.5944999999998626e-05, 4.49999999999999e-05, 4.551399999999997e-05, 4.529199999999886e-05, 4.5138999999999596e-05, 4.555499999999921e-05, 4.523600000000058e-05, 4.526300000000025e-05, 4.554099999999964e-05, 4.544399999999865e-05, 4.506899999999828e-05, 4.5097000000000886e-05, 4.5902999999999916e-05, 4.53329999999981e-05, 4.5875000000000776e-05, 4.594400000000262e-05, 4.576400000000022e-05, 4.529199999999886e-05, 4.5916999999999486e-05, 4.5445000000001595e-05, 4.5459000000001165e-05, 4.5375000000000276e-05, 4.5902999999999916e-05, 4.505600000000165e-05, 4.570800000000194e-05]</msg>
<status status="PASS" starttime="20201117 14:48:08.772" endtime="20201117 14:48:08.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.767" endtime="20201117 14:48:08.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.779" endtime="20201117 14:48:08.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.783" endtime="20201117 14:48:08.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.781" endtime="20201117 14:48:08.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.777" endtime="20201117 14:48:08.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.398" endtime="20201117 14:48:08.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.396" endtime="20201117 14:48:08.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.396" endtime="20201117 14:48:08.805"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.808" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.818" endtime="20201117 14:48:08.835"></status>
</kw>
<msg timestamp="20201117 14:48:08.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.817" endtime="20201117 14:48:08.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.837" endtime="20201117 14:48:08.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.840" endtime="20201117 14:48:08.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.813" endtime="20201117 14:48:08.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.810" endtime="20201117 14:48:08.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.852" endtime="20201117 14:48:09.137"></status>
</kw>
<msg timestamp="20201117 14:48:09.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027708458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027754458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.850" endtime="20201117 14:48:09.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027708458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027754458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.141" endtime="20201117 14:48:09.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.150" endtime="20201117 14:48:09.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.847" endtime="20201117 14:48:09.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.844" endtime="20201117 14:48:09.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.158" level="INFO">${RESULT} = [{'time': 0.027754458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.60000000000009e-05, 'source_diff': 4.60000000000009e-05}, {'time': 0.027805458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:09.154" endtime="20201117 14:48:09.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.173" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:09.160" endtime="20201117 14:48:09.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.179" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.178" endtime="20201117 14:48:09.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.183" level="INFO">VALUE: [4.60000000000009e-05, 4.665200000000119e-05, 4.61939999999994e-05, 4.656900000000325e-05, 4.627800000000029e-05, 4.656899999999978e-05, 4.632000000000247e-05, 4.6153000000000166e-05, 4.656899999999978e-05, 4.6416999999999986e-05, 4.6097000000001886e-05, 4.6458999999998696e-05, 4.630599999999943e-05, 4.6722999999998516e-05, 4.604199999999961e-05, 4.627800000000029e-05, 4.6972999999998766e-05, 4.6153000000000166e-05, 4.630599999999943e-05, 4.677800000000079e-05, 4.695799999999972e-05, 4.677700000000132e-05, 4.6889000000001346e-05, 4.6153000000000166e-05, 4.645799999999922e-05, 4.6680999999999806e-05, 4.6597000000002387e-05, 4.6403000000000416e-05, 4.656899999999978e-05, 4.6153000000000166e-05, 4.6430999999999556e-05, 4.63329999999991e-05, 4.658399999999882e-05, 4.6722999999998516e-05, 4.6625000000001526e-05, 4.677800000000079e-05, 4.651400000000097e-05, 4.6903000000000916e-05, 4.647199999999879e-05, 4.637499999999781e-05, 4.695799999999972e-05, 4.659699999999892e-05, 4.656899999999978e-05, 4.63329999999991e-05, 4.680500000000046e-05, 4.676400000000122e-05, 4.605599999999918e-05, 4.670799999999947e-05, 4.604199999999961e-05, 4.644399999999965e-05]</msg>
<status status="PASS" starttime="20201117 14:48:09.180" endtime="20201117 14:48:09.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.174" endtime="20201117 14:48:09.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.187" endtime="20201117 14:48:09.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.192" endtime="20201117 14:48:09.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.190" endtime="20201117 14:48:09.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.185" endtime="20201117 14:48:09.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.808" endtime="20201117 14:48:09.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.806" endtime="20201117 14:48:09.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.806" endtime="20201117 14:48:09.214"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.217" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.227" endtime="20201117 14:48:09.244"></status>
</kw>
<msg timestamp="20201117 14:48:09.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.225" endtime="20201117 14:48:09.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.246" endtime="20201117 14:48:09.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.249" endtime="20201117 14:48:09.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.222" endtime="20201117 14:48:09.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.219" endtime="20201117 14:48:09.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.274" endtime="20201117 14:48:09.639"></status>
</kw>
<msg timestamp="20201117 14:48:09.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027711222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027758389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.270" endtime="20201117 14:48:09.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027711222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027758389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.649" endtime="20201117 14:48:09.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.670" endtime="20201117 14:48:09.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.263" endtime="20201117 14:48:09.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.258" endtime="20201117 14:48:09.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.689" level="INFO">${RESULT} = [{'time': 0.027758389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7167000000000736e-05, 'source_diff': 4.7167000000000736e-05}, {'time': 0.027817389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:09.679" endtime="20201117 14:48:09.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.722" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:09.691" endtime="20201117 14:48:09.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.734" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.731" endtime="20201117 14:48:09.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.741" level="INFO">VALUE: [4.7167000000000736e-05, 4.757000000000025e-05, 4.730600000000043e-05, 4.742999999999761e-05, 4.731899999999706e-05, 4.75000000000024e-05, 4.7167000000000736e-05, 4.7736999999999086e-05, 4.758300000000035e-05, 4.799999999999943e-05, 4.71940000000004e-05, 4.759699999999992e-05, 4.731900000000053e-05, 4.765199999999872e-05, 4.737499999999881e-05, 4.7403000000001416e-05, 4.790299999999845e-05, 4.704200000000061e-05, 4.7111000000002456e-05, 4.788899999999888e-05, 4.779199999999789e-05, 4.723599999999911e-05, 4.705600000000018e-05, 4.712499999999856e-05, 4.732e-05, 4.748599999999936e-05, 4.71529999999977e-05, 4.740199999999847e-05, 4.791600000000201e-05, 4.795800000000072e-05, 4.741600000000151e-05, 4.776299999999928e-05, 4.731900000000053e-05, 4.742999999999761e-05, 4.781899999999756e-05, 4.7153000000001166e-05, 4.734699999999967e-05, 4.711099999999899e-05, 4.786099999999974e-05, 4.78330000000006e-05, 4.731900000000053e-05, 4.774999999999918e-05, 4.711099999999899e-05, 4.7486999999998836e-05, 4.729200000000086e-05, 4.763899999999863e-05, 4.7695000000000376e-05, 4.773599999999961e-05, 4.7417000000000986e-05, 4.701400000000147e-05]</msg>
<status status="PASS" starttime="20201117 14:48:09.736" endtime="20201117 14:48:09.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.724" endtime="20201117 14:48:09.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.751" endtime="20201117 14:48:09.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.760" endtime="20201117 14:48:09.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.755" endtime="20201117 14:48:09.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.746" endtime="20201117 14:48:09.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.217" endtime="20201117 14:48:09.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.215" endtime="20201117 14:48:09.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.214" endtime="20201117 14:48:09.787"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.792" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.815" endtime="20201117 14:48:09.836"></status>
</kw>
<msg timestamp="20201117 14:48:09.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.812" endtime="20201117 14:48:09.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.840" endtime="20201117 14:48:09.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.847" endtime="20201117 14:48:09.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.804" endtime="20201117 14:48:09.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.798" endtime="20201117 14:48:09.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.872" endtime="20201117 14:48:10.238"></status>
</kw>
<msg timestamp="20201117 14:48:10.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049505292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049553431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.868" endtime="20201117 14:48:10.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049505292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049553431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.248" endtime="20201117 14:48:10.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.268" endtime="20201117 14:48:10.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.860" endtime="20201117 14:48:10.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.855" endtime="20201117 14:48:10.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.287" level="INFO">${RESULT} = [{'time': 0.049553431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8139000000002596e-05, 'source_diff': 4.8139000000002596e-05}, {'time': 0.049612431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.277" endtime="20201117 14:48:10.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.321" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:10.289" endtime="20201117 14:48:10.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.332" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.330" endtime="20201117 14:48:10.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.340" level="INFO">VALUE: [4.8139000000002596e-05, 4.8181000000001306e-05, 4.895800000000172e-05, 4.8151999999995754e-05, 4.827699999999935e-05, 4.870800000000147e-05, 4.829100000000586e-05, 4.85139999999995e-05, 4.887499999999684e-05, 4.887499999999684e-05, 4.811099999999652e-05, 4.841699999999505e-05, 4.873600000000061e-05, 4.894499999999469e-05, 4.804200000000508e-05, 4.848600000000036e-05, 4.836099999999677e-05, 4.877799999999932e-05, 4.88339999999976e-05, 4.8459000000000696e-05, 4.837499999999634e-05, 4.8236999999999586e-05, 4.834799999999667e-05, 4.881899999999856e-05, 4.8707999999994533e-05, 4.824999999999968e-05, 4.824999999999968e-05, 4.811099999999652e-05, 4.8665999999995824e-05, 4.856899999999831e-05, 4.86940000000019e-05, 4.8417000000001986e-05, 4.85269999999996e-05, 4.875000000000018e-05, 4.8445000000001126e-05, 4.8403000000002416e-05, 4.894499999999469e-05, 4.865299999999573e-05, 4.808400000000379e-05, 4.823600000000011e-05, 4.8417000000001986e-05, 4.8723000000000516e-05, 4.886199999999674e-05, 4.895800000000172e-05, 4.873600000000061e-05, 4.880499999999899e-05, 4.898600000000086e-05, 4.8875000000003777e-05, 4.8111000000003457e-05, 4.88469999999977e-05]</msg>
<status status="PASS" starttime="20201117 14:48:10.335" endtime="20201117 14:48:10.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.323" endtime="20201117 14:48:10.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.349" endtime="20201117 14:48:10.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.358" endtime="20201117 14:48:10.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.353" endtime="20201117 14:48:10.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.344" endtime="20201117 14:48:10.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.794" endtime="20201117 14:48:10.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.789" endtime="20201117 14:48:10.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.788" endtime="20201117 14:48:10.385"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.391" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.414" endtime="20201117 14:48:10.435"></status>
</kw>
<msg timestamp="20201117 14:48:10.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.411" endtime="20201117 14:48:10.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.439" endtime="20201117 14:48:10.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.446" endtime="20201117 14:48:10.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.403" endtime="20201117 14:48:10.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.397" endtime="20201117 14:48:10.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.471" endtime="20201117 14:48:10.835"></status>
</kw>
<msg timestamp="20201117 14:48:10.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049669625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049719069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.468" endtime="20201117 14:48:10.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049669625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049719069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.845" endtime="20201117 14:48:10.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.865" endtime="20201117 14:48:10.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.460" endtime="20201117 14:48:10.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.455" endtime="20201117 14:48:10.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.884" level="INFO">${RESULT} = [{'time': 0.049719069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9443999999995714e-05, 'source_diff': 4.9443999999995714e-05}, {'time': 0.049775069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.874" endtime="20201117 14:48:10.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.920" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:10.886" endtime="20201117 14:48:10.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.931" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.929" endtime="20201117 14:48:10.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.939" level="INFO">VALUE: [4.9443999999995714e-05, 4.956899999999931e-05, 4.9443999999995714e-05, 4.977700000000085e-05, 4.93469999999982e-05, 4.904099999999967e-05, 4.981899999999956e-05, 4.912499999999709e-05, 4.909699999999795e-05, 4.976400000000075e-05, 4.911100000000446e-05, 4.909700000000489e-05, 4.938899999999691e-05, 5.002800000000057e-05, 4.9417000000002986e-05, 4.987499999999784e-05, 4.912499999999709e-05, 4.998599999999492e-05, 4.954199999999964e-05, 4.911199999999699e-05, 4.9901999999997504e-05, 4.9665999999996824e-05, 4.9651999999997254e-05, 4.987499999999784e-05, 4.972200000000204e-05, 4.902799999999957e-05, 4.987499999999784e-05, 4.947200000000179e-05, 5.000000000000143e-05, 4.943099999999562e-05, 4.911100000000446e-05, 4.929199999999939e-05, 4.957000000000572e-05, 4.952800000000007e-05, 4.911100000000446e-05, 4.968099999999587e-05, 4.95140000000005e-05, 4.933400000000504e-05, 4.9971999999995353e-05, 4.959800000000486e-05, 4.9693999999995964e-05, 4.9667000000003236e-05, 4.922200000000154e-05, 4.949999999999399e-05, 4.9721999999995103e-05, 4.9139000000003596e-05, 4.927799999999982e-05, 4.965299999999673e-05, 4.930599999999896e-05, 4.922200000000154e-05]</msg>
<status status="PASS" starttime="20201117 14:48:10.934" endtime="20201117 14:48:10.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.922" endtime="20201117 14:48:10.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.948" endtime="20201117 14:48:10.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.957" endtime="20201117 14:48:10.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.952" endtime="20201117 14:48:10.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.943" endtime="20201117 14:48:10.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.393" endtime="20201117 14:48:10.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.388" endtime="20201117 14:48:10.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.386" endtime="20201117 14:48:10.984"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.990" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.014" endtime="20201117 14:48:11.035"></status>
</kw>
<msg timestamp="20201117 14:48:11.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.010" endtime="20201117 14:48:11.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.039" endtime="20201117 14:48:11.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.046" endtime="20201117 14:48:11.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.002" endtime="20201117 14:48:11.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.996" endtime="20201117 14:48:11.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.071" endtime="20201117 14:48:11.435"></status>
</kw>
<msg timestamp="20201117 14:48:11.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050896014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050946403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.067" endtime="20201117 14:48:11.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050896014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050946403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.445" endtime="20201117 14:48:11.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.465" endtime="20201117 14:48:11.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.059" endtime="20201117 14:48:11.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.054" endtime="20201117 14:48:11.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.484" level="INFO">${RESULT} = [{'time': 0.050946403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.038899999999791e-05, 'source_diff': 5.038899999999791e-05}, {'time': 0.050999431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:11.474" endtime="20201117 14:48:11.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.517" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:11.486" endtime="20201117 14:48:11.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.529" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.526" endtime="20201117 14:48:11.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.536" level="INFO">VALUE: [5.038899999999791e-05, 5.076399999999481e-05, 5.043099999999662e-05, 5.061099999999902e-05, 5.076400000000175e-05, 5.088899999999841e-05, 5.0235999999995173e-05, 5.061099999999902e-05, 5.031900000000006e-05, 5.0471999999995854e-05, 5.025000000000168e-05, 5.068099999999687e-05, 5.052800000000107e-05, 5.024999999999474e-05, 5.077799999999438e-05, 5.099999999999549e-05, 5.052800000000107e-05, 5.070899999999601e-05, 5.052800000000107e-05, 5.06669999999973e-05, 5.036100000000571e-05, 5.084799999999917e-05, 5.059799999999892e-05, 5.0987000000002336e-05, 5.0457999999996284e-05, 5.086199999999874e-05, 5.036099999999877e-05, 5.0985999999995923e-05, 5.006899999999981e-05, 5.0457999999996284e-05, 5.099999999999549e-05, 5.0945000000003626e-05, 5.009699999999895e-05, 5.054200000000064e-05, 5.011099999999852e-05, 5.081899999999362e-05, 5.0971999999996354e-05, 5.094499999999669e-05, 5.0681000000003806e-05, 5.031999999999953e-05, 5.047299999999533e-05, 5.082000000000003e-05, 5.03339999999991e-05, 5.093099999999712e-05, 5.012499999999809e-05, 5.077700000000185e-05, 5.023600000000211e-05, 5.0165999999997324e-05, 5.0014000000001e-05, 5.06940000000039e-05]</msg>
<status status="PASS" starttime="20201117 14:48:11.531" endtime="20201117 14:48:11.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.519" endtime="20201117 14:48:11.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.546" endtime="20201117 14:48:11.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.555" endtime="20201117 14:48:11.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.550" endtime="20201117 14:48:11.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.541" endtime="20201117 14:48:11.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.991" endtime="20201117 14:48:11.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.987" endtime="20201117 14:48:11.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.985" endtime="20201117 14:48:11.583"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.588" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.612" endtime="20201117 14:48:11.632"></status>
</kw>
<msg timestamp="20201117 14:48:11.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.608" endtime="20201117 14:48:11.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.636" endtime="20201117 14:48:11.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.643" endtime="20201117 14:48:11.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.600" endtime="20201117 14:48:11.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.594" endtime="20201117 14:48:11.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.668" endtime="20201117 14:48:12.031"></status>
</kw>
<msg timestamp="20201117 14:48:12.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050834472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050886431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.664" endtime="20201117 14:48:12.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050834472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050886431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.042" endtime="20201117 14:48:12.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.062" endtime="20201117 14:48:12.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.657" endtime="20201117 14:48:12.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.651" endtime="20201117 14:48:12.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.081" level="INFO">${RESULT} = [{'time': 0.050886431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1959000000004196e-05, 'source_diff': 5.1959000000004196e-05}, {'time': 0.050943444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:12.071" endtime="20201117 14:48:12.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.114" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:12.083" endtime="20201117 14:48:12.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.126" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.123" endtime="20201117 14:48:12.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.133" level="INFO">VALUE: [5.1959000000004196e-05, 5.181899999999462e-05, 5.194400000000515e-05, 5.111099999999952e-05, 5.1457999999997284e-05, 5.108300000000038e-05, 5.133299999999369e-05, 5.151399999999556e-05, 5.108399999999985e-05, 5.1653000000005667e-05, 5.197299999999683e-05, 5.152799999999513e-05, 5.102800000000157e-05, 5.201299999999659e-05, 5.16669999999983e-05, 5.1709000000003946e-05, 5.188899999999941e-05, 5.120899999999651e-05, 5.148600000000336e-05, 5.152800000000207e-05, 5.120800000000397e-05, 5.11940000000044e-05, 5.187499999999984e-05, 5.1943999999998214e-05, 5.1901999999999504e-05, 5.1485999999996424e-05, 5.104100000000167e-05, 5.106900000000081e-05, 5.170800000000447e-05, 5.181900000000156e-05, 5.106999999999334e-05, 5.152800000000207e-05, 5.130600000000096e-05, 5.161100000000002e-05, 5.180599999999452e-05, 5.148600000000336e-05, 5.190299999999898e-05, 5.136099999999977e-05, 5.115299999999823e-05, 5.120800000000397e-05, 5.184800000000017e-05, 5.180499999999505e-05, 5.165200000000619e-05, 5.109699999999995e-05, 5.118000000000483e-05, 5.120800000000397e-05, 5.191699999999855e-05, 5.112499999999909e-05, 5.163899999999916e-05, 5.104200000000114e-05]</msg>
<status status="PASS" starttime="20201117 14:48:12.128" endtime="20201117 14:48:12.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.116" endtime="20201117 14:48:12.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.143" endtime="20201117 14:48:12.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.152" endtime="20201117 14:48:12.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.147" endtime="20201117 14:48:12.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.138" endtime="20201117 14:48:12.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.590" endtime="20201117 14:48:12.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.586" endtime="20201117 14:48:12.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.584" endtime="20201117 14:48:12.179"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.185" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.208" endtime="20201117 14:48:12.229"></status>
</kw>
<msg timestamp="20201117 14:48:12.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.205" endtime="20201117 14:48:12.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.233" endtime="20201117 14:48:12.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.240" endtime="20201117 14:48:12.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.197" endtime="20201117 14:48:12.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.191" endtime="20201117 14:48:12.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.265" endtime="20201117 14:48:12.591"></status>
</kw>
<msg timestamp="20201117 14:48:12.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049736694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049788722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.262" endtime="20201117 14:48:12.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049736694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049788722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.595" endtime="20201117 14:48:12.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.604" endtime="20201117 14:48:12.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.254" endtime="20201117 14:48:12.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.248" endtime="20201117 14:48:12.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.613" level="INFO">${RESULT} = [{'time': 0.049788722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.202800000000257e-05, 'source_diff': 5.202800000000257e-05}, {'time': 0.049845722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:12.608" endtime="20201117 14:48:12.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.627" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:12.614" endtime="20201117 14:48:12.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.633" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.631" endtime="20201117 14:48:12.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.636" level="INFO">VALUE: [5.202800000000257e-05, 5.286100000000127e-05, 5.2513999999996563e-05, 5.265299999999973e-05, 5.247200000000479e-05, 5.208300000000138e-05, 5.259700000000145e-05, 5.23470000000012e-05, 5.240299999999948e-05, 5.21669999999988e-05, 5.252800000000307e-05, 5.2737000000004086e-05, 5.2985999999997924e-05, 5.245899999999776e-05, 5.23470000000012e-05, 5.2735999999997674e-05, 5.2457999999998284e-05, 5.281900000000256e-05, 5.2929999999999644e-05, 5.233300000000163e-05, 5.211100000000052e-05, 5.254200000000264e-05, 5.287500000000084e-05, 5.2445000000005126e-05, 5.250000000000393e-05, 5.2443999999998714e-05, 5.2749999999997244e-05, 5.26669999999993e-05, 5.287500000000084e-05, 5.279200000000289e-05, 5.23340000000011e-05, 5.262500000000059e-05, 5.265299999999973e-05, 5.297200000000529e-05, 5.233300000000163e-05, 5.208300000000138e-05, 5.2957999999998784e-05, 5.298600000000486e-05, 5.252799999999613e-05, 5.212500000000009e-05, 5.275000000000418e-05, 5.283299999999519e-05, 5.23470000000012e-05, 5.2693999999998964e-05, 5.258300000000188e-05, 5.23340000000011e-05, 5.2499999999996994e-05, 5.294499999999869e-05, 5.237500000000034e-05, 5.265299999999973e-05]</msg>
<status status="PASS" starttime="20201117 14:48:12.634" endtime="20201117 14:48:12.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.628" endtime="20201117 14:48:12.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.641" endtime="20201117 14:48:12.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.645" endtime="20201117 14:48:12.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.643" endtime="20201117 14:48:12.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.639" endtime="20201117 14:48:12.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.186" endtime="20201117 14:48:12.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.182" endtime="20201117 14:48:12.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.180" endtime="20201117 14:48:12.667"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.669" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.680" endtime="20201117 14:48:12.698"></status>
</kw>
<msg timestamp="20201117 14:48:12.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.678" endtime="20201117 14:48:12.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.699" endtime="20201117 14:48:12.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.702" endtime="20201117 14:48:12.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.675" endtime="20201117 14:48:12.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.672" endtime="20201117 14:48:12.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.714" endtime="20201117 14:48:13.000"></status>
</kw>
<msg timestamp="20201117 14:48:13.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028245194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028298236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.712" endtime="20201117 14:48:13.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028245194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028298236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.005" endtime="20201117 14:48:13.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.013" endtime="20201117 14:48:13.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.709" endtime="20201117 14:48:13.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.706" endtime="20201117 14:48:13.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:13.022" level="INFO">${RESULT} = [{'time': 0.028298236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.304199999999967e-05, 'source_diff': 5.304199999999967e-05}, {'time': 0.028365319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:13.018" endtime="20201117 14:48:13.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.042" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:13.027" endtime="20201117 14:48:13.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.048" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.046" endtime="20201117 14:48:13.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.051" level="INFO">VALUE: [5.304199999999967e-05, 5.3138000000001184e-05, 5.391700000000055e-05, 5.3735999999998674e-05, 5.337500000000134e-05, 5.356999999999931e-05, 5.304199999999967e-05, 5.394499999999969e-05, 5.36670000000003e-05, 5.387499999999837e-05, 5.322299999999808e-05, 5.369499999999944e-05, 5.338900000000091e-05, 5.333300000000263e-05, 5.383299999999966e-05, 5.352699999999766e-05, 5.3707999999999534e-05, 5.377800000000085e-05, 5.323600000000164e-05, 5.379200000000042e-05, 5.393100000000012e-05, 5.381900000000009e-05, 5.309699999999848e-05, 5.369499999999944e-05, 5.322300000000155e-05, 5.330599999999949e-05, 5.305599999999924e-05, 5.365300000000073e-05, 5.344499999999919e-05, 5.323700000000112e-05, 5.3999999999998494e-05, 5.352700000000113e-05, 5.313900000000066e-05, 5.308300000000238e-05, 5.3443999999999714e-05, 5.311099999999805e-05, 5.3485999999998424e-05, 5.351299999999809e-05, 5.3985999999998924e-05, 5.3485999999998424e-05, 5.334699999999873e-05, 5.390300000000098e-05, 5.358400000000235e-05, 5.308399999999838e-05, 5.3513999999997564e-05, 5.348600000000189e-05, 5.311099999999805e-05, 5.322299999999808e-05, 5.3693999999999964e-05, 5.3402000000001004e-05]</msg>
<status status="PASS" starttime="20201117 14:48:13.049" endtime="20201117 14:48:13.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.043" endtime="20201117 14:48:13.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.055" endtime="20201117 14:48:13.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.059" endtime="20201117 14:48:13.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.057" endtime="20201117 14:48:13.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.053" endtime="20201117 14:48:13.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.670" endtime="20201117 14:48:13.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.668" endtime="20201117 14:48:13.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.667" endtime="20201117 14:48:13.081"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.084" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.095" endtime="20201117 14:48:13.112"></status>
</kw>
<msg timestamp="20201117 14:48:13.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.093" endtime="20201117 14:48:13.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.114" endtime="20201117 14:48:13.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.117" endtime="20201117 14:48:13.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.089" endtime="20201117 14:48:13.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.087" endtime="20201117 14:48:13.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.128" endtime="20201117 14:48:13.484"></status>
</kw>
<msg timestamp="20201117 14:48:13.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02816875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028223431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:13.127" endtime="20201117 14:48:13.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02816875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028223431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:13.494" endtime="20201117 14:48:13.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.515" endtime="20201117 14:48:13.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.123" endtime="20201117 14:48:13.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.121" endtime="20201117 14:48:13.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:13.533" level="INFO">${RESULT} = [{'time': 0.028223431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.468100000000087e-05, 'source_diff': 5.468100000000087e-05}, {'time': 0.028283444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:13.524" endtime="20201117 14:48:13.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.567" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:13.536" endtime="20201117 14:48:13.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.578" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.576" endtime="20201117 14:48:13.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.586" level="INFO">VALUE: [5.468100000000087e-05, 5.4416000000001574e-05, 5.462499999999912e-05, 5.404099999999773e-05, 5.483300000000066e-05, 5.4458000000000284e-05, 5.455599999999727e-05, 5.469500000000044e-05, 5.433300000000016e-05, 5.4499999999998994e-05, 5.41809999999969e-05, 5.413899999999819e-05, 5.429200000000092e-05, 5.438899999999844e-05, 5.444500000000019e-05, 5.450000000000246e-05, 5.431900000000059e-05, 5.487500000000284e-05, 5.444500000000019e-05, 5.4722000000000104e-05, 5.429100000000145e-05, 5.443100000000062e-05, 5.4943999999997745e-05, 5.434699999999973e-05, 5.48609999999998e-05, 5.486199999999927e-05, 5.481899999999762e-05, 5.487500000000284e-05, 5.461099999999955e-05, 5.413900000000166e-05, 5.418100000000037e-05, 5.418100000000037e-05, 5.4221999999999604e-05, 5.423700000000212e-05, 5.433399999999963e-05, 5.479200000000142e-05, 5.418100000000037e-05, 5.4916000000002074e-05, 5.48609999999998e-05, 5.4499999999998994e-05, 5.479099999999848e-05, 5.437499999999887e-05, 5.40419999999972e-05, 5.475000000000271e-05, 5.4485999999999424e-05, 5.404200000000067e-05, 5.406900000000034e-05, 5.454200000000117e-05, 5.4485999999999424e-05, 5.44869999999989e-05]</msg>
<status status="PASS" starttime="20201117 14:48:13.581" endtime="20201117 14:48:13.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.569" endtime="20201117 14:48:13.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.595" endtime="20201117 14:48:13.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.604" endtime="20201117 14:48:13.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.599" endtime="20201117 14:48:13.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.590" endtime="20201117 14:48:13.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.085" endtime="20201117 14:48:13.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.083" endtime="20201117 14:48:13.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.082" endtime="20201117 14:48:13.632"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.637" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.660" endtime="20201117 14:48:13.681"></status>
</kw>
<msg timestamp="20201117 14:48:13.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.657" endtime="20201117 14:48:13.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.685" endtime="20201117 14:48:13.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.692" endtime="20201117 14:48:13.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.649" endtime="20201117 14:48:13.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.643" endtime="20201117 14:48:13.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.717" endtime="20201117 14:48:14.095"></status>
</kw>
<msg timestamp="20201117 14:48:14.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049699389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049754722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.713" endtime="20201117 14:48:14.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049699389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049754722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:14.106" endtime="20201117 14:48:14.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.126" endtime="20201117 14:48:14.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.705" endtime="20201117 14:48:14.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.700" endtime="20201117 14:48:14.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:14.145" level="INFO">${RESULT} = [{'time': 0.049754722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.533300000000463e-05, 'source_diff': 5.533300000000463e-05}, {'time': 0.049812764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:14.135" endtime="20201117 14:48:14.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:14.178" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:14.147" endtime="20201117 14:48:14.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.190" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:48:14.187" endtime="20201117 14:48:14.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.197" level="INFO">VALUE: [5.533300000000463e-05, 5.5777999999999384e-05, 5.588899999999647e-05, 5.538900000000291e-05, 5.6000000000000494e-05, 5.5972000000001354e-05, 5.511100000000352e-05, 5.5236000000000174e-05, 5.594500000000169e-05, 5.561099999999708e-05, 5.568100000000187e-05, 5.5277999999998884e-05, 5.5249999999999744e-05, 5.504100000000567e-05, 5.504099999999873e-05, 5.577699999999991e-05, 5.531899999999812e-05, 5.5694000000001964e-05, 5.5499999999999994e-05, 5.581899999999862e-05, 5.5458000000001284e-05, 5.5694000000001964e-05, 5.587500000000384e-05, 5.5958000000001784e-05, 5.5763999999999814e-05, 5.5277999999998884e-05, 5.5915999999996135e-05, 5.5722000000001104e-05, 5.5499999999999994e-05, 5.506999999999734e-05, 5.534699999999726e-05, 5.593100000000212e-05, 5.5249999999999744e-05, 5.5750000000000244e-05, 5.516699999999486e-05, 5.531899999999812e-05, 5.5666000000002824e-05, 5.515300000000223e-05, 5.512499999999615e-05, 5.530500000000549e-05, 5.5263999999999314e-05, 5.559799999999698e-05, 5.5708000000001534e-05, 5.538900000000291e-05, 5.597300000000083e-05, 5.565299999999579e-05, 5.540300000000248e-05, 5.5736000000000674e-05, 5.544499999999425e-05, 5.561200000000349e-05]</msg>
<status status="PASS" starttime="20201117 14:48:14.192" endtime="20201117 14:48:14.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.180" endtime="20201117 14:48:14.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.207" endtime="20201117 14:48:14.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:14.216" endtime="20201117 14:48:14.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.211" endtime="20201117 14:48:14.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.202" endtime="20201117 14:48:14.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.638" endtime="20201117 14:48:14.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.634" endtime="20201117 14:48:14.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.632" endtime="20201117 14:48:14.243"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.249" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.272" endtime="20201117 14:48:14.293"></status>
</kw>
<msg timestamp="20201117 14:48:14.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:14.268" endtime="20201117 14:48:14.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:14.296" endtime="20201117 14:48:14.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.304" endtime="20201117 14:48:14.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.260" endtime="20201117 14:48:14.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.254" endtime="20201117 14:48:14.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.329" endtime="20201117 14:48:14.703"></status>
</kw>
<msg timestamp="20201117 14:48:14.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049733528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049790139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:14.325" endtime="20201117 14:48:14.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049733528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049790139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:14.713" endtime="20201117 14:48:14.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.733" endtime="20201117 14:48:14.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.317" endtime="20201117 14:48:14.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.312" endtime="20201117 14:48:14.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:14.754" level="INFO">${RESULT} = [{'time': 0.049790139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.661099999999808e-05, 'source_diff': 5.661099999999808e-05}, {'time': 0.049860153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:14.742" endtime="20201117 14:48:14.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:14.789" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:14.756" endtime="20201117 14:48:14.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.801" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:48:14.799" endtime="20201117 14:48:14.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.808" level="INFO">VALUE: [5.661099999999808e-05, 5.6485999999994485e-05, 5.663900000000416e-05, 5.645899999999482e-05, 5.661100000000502e-05, 5.6528000000000134e-05, 5.6528000000000134e-05, 5.6736000000001674e-05, 5.6250000000000744e-05, 5.6166000000003324e-05, 5.606899999999887e-05, 5.6486000000001424e-05, 5.686099999999833e-05, 5.691699999999661e-05, 5.661099999999808e-05, 5.6222000000001604e-05, 5.6528000000000134e-05, 5.662500000000459e-05, 5.694499999999575e-05, 5.695900000000226e-05, 5.686099999999833e-05, 5.620900000000151e-05, 5.683399999999866e-05, 5.6514000000000564e-05, 5.670900000000201e-05, 5.677700000000091e-05, 5.656899999999937e-05, 5.662500000000459e-05, 5.6778000000000384e-05, 5.687500000000484e-05, 5.6929999999996705e-05, 5.643100000000262e-05, 5.612500000000409e-05, 5.6457999999995345e-05, 5.606899999999887e-05, 5.6500000000000994e-05, 5.6291999999999454e-05, 5.647299999999439e-05, 5.6319999999998593e-05, 5.6401999999997066e-05, 5.691699999999661e-05, 5.68749999999979e-05, 5.608299999999844e-05, 5.637500000000434e-05, 5.606899999999887e-05, 5.6541999999999704e-05, 5.681899999999962e-05, 5.6194000000002464e-05, 5.68749999999979e-05, 5.6971999999995415e-05]</msg>
<status status="PASS" starttime="20201117 14:48:14.804" endtime="20201117 14:48:14.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.791" endtime="20201117 14:48:14.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.818" endtime="20201117 14:48:14.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:14.827" endtime="20201117 14:48:14.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.822" endtime="20201117 14:48:14.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.813" endtime="20201117 14:48:14.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.250" endtime="20201117 14:48:14.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.246" endtime="20201117 14:48:14.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.244" endtime="20201117 14:48:14.854"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.860" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.884" endtime="20201117 14:48:14.906"></status>
</kw>
<msg timestamp="20201117 14:48:14.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:14.881" endtime="20201117 14:48:14.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:14.909" endtime="20201117 14:48:14.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.916" endtime="20201117 14:48:14.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.873" endtime="20201117 14:48:14.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.866" endtime="20201117 14:48:14.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.941" endtime="20201117 14:48:15.307"></status>
</kw>
<msg timestamp="20201117 14:48:15.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051096819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051154153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:14.938" endtime="20201117 14:48:15.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051096819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051154153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:15.318" endtime="20201117 14:48:15.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.338" endtime="20201117 14:48:15.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.930" endtime="20201117 14:48:15.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.925" endtime="20201117 14:48:15.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:15.357" level="INFO">${RESULT} = [{'time': 0.051154153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7333999999999163e-05, 'source_diff': 5.7333999999999163e-05}, {'time': 0.051226194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:15.347" endtime="20201117 14:48:15.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:15.394" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:15.359" endtime="20201117 14:48:15.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.406" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:48:15.403" endtime="20201117 14:48:15.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.413" level="INFO">VALUE: [5.7333999999999163e-05, 5.7902000000005505e-05, 5.7069999999999343e-05, 5.7028000000000634e-05, 5.69870000000014e-05, 5.7069999999999343e-05, 5.711099999999858e-05, 5.712499999999815e-05, 5.7208000000003034e-05, 5.7514000000001564e-05, 5.7764000000001814e-05, 5.754099999999429e-05, 5.766699999999736e-05, 5.763900000000516e-05, 5.7250000000001744e-05, 5.758299999999994e-05, 5.7457999999996345e-05, 5.7278000000000884e-05, 5.722300000000208e-05, 5.7069999999999343e-05, 5.770900000000301e-05, 5.709700000000595e-05, 5.740300000000448e-05, 5.7069999999999343e-05, 5.731900000000012e-05, 5.7486000000002424e-05, 5.713900000000466e-05, 5.761099999999908e-05, 5.733299999999969e-05, 5.713899999999772e-05, 5.8014000000002064e-05, 5.781900000000062e-05, 5.740299999999754e-05, 5.712499999999815e-05, 5.713900000000466e-05, 5.790299999999804e-05, 5.747300000000233e-05, 5.769500000000344e-05, 5.722300000000208e-05, 5.7333999999999163e-05, 5.7333999999999163e-05, 5.723699999999471e-05, 5.736099999999883e-05, 5.708299999999944e-05, 5.781900000000062e-05, 5.78749999999989e-05, 5.7278000000000884e-05, 5.7429999999997206e-05, 5.7750000000002244e-05, 5.793099999999718e-05]</msg>
<status status="PASS" starttime="20201117 14:48:15.408" endtime="20201117 14:48:15.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.396" endtime="20201117 14:48:15.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.422" endtime="20201117 14:48:15.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:15.431" endtime="20201117 14:48:15.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.427" endtime="20201117 14:48:15.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.418" endtime="20201117 14:48:15.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.861" endtime="20201117 14:48:15.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.857" endtime="20201117 14:48:15.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.855" endtime="20201117 14:48:15.460"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.465" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.488" endtime="20201117 14:48:15.510"></status>
</kw>
<msg timestamp="20201117 14:48:15.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:15.485" endtime="20201117 14:48:15.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:15.513" endtime="20201117 14:48:15.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.520" endtime="20201117 14:48:15.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.477" endtime="20201117 14:48:15.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.471" endtime="20201117 14:48:15.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.545" endtime="20201117 14:48:15.910"></status>
</kw>
<msg timestamp="20201117 14:48:15.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049694125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049752306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:15.542" endtime="20201117 14:48:15.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049694125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049752306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:15.920" endtime="20201117 14:48:15.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.941" endtime="20201117 14:48:15.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.534" endtime="20201117 14:48:15.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.529" endtime="20201117 14:48:15.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:15.959" level="INFO">${RESULT} = [{'time': 0.049752306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.818100000000437e-05, 'source_diff': 5.818100000000437e-05}, {'time': 0.049824319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:15.950" endtime="20201117 14:48:15.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:15.993" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:15.962" endtime="20201117 14:48:15.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.005" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:48:16.002" endtime="20201117 14:48:16.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.012" level="INFO">VALUE: [5.818100000000437e-05, 5.808300000000044e-05, 5.861199999999955e-05, 5.8708000000004534e-05, 5.8651999999999316e-05, 5.861100000000008e-05, 5.80550000000013e-05, 5.863899999999922e-05, 5.8486000000003424e-05, 5.88749999999999e-05, 5.8708000000004534e-05, 5.809700000000001e-05, 5.8278000000001884e-05, 5.8486000000003424e-05, 5.883300000000119e-05, 5.894499999999775e-05, 5.836099999999983e-05, 5.8306000000001024e-05, 5.8070000000000344e-05, 5.8693999999998026e-05, 5.840299999999854e-05, 5.8486000000003424e-05, 5.8236000000003174e-05, 5.8721999999997165e-05, 5.8194000000004464e-05, 5.838899999999897e-05, 5.809700000000001e-05, 5.811099999999958e-05, 5.827699999999547e-05, 5.866699999999836e-05, 5.8972000000004354e-05, 5.8041999999994265e-05, 5.8485999999996485e-05, 5.841699999999811e-05, 5.8750000000003244e-05, 5.8235999999996235e-05, 5.823700000000265e-05, 5.840300000000548e-05, 5.8472000000003854e-05, 5.8249999999995805e-05, 5.8415999999998636e-05, 5.883300000000119e-05, 5.8985999999996985e-05, 5.8556000000001274e-05, 5.8458000000004284e-05, 5.856900000000137e-05, 5.891700000000555e-05, 5.8056000000000774e-05, 5.8235999999996235e-05, 5.8542000000001704e-05]</msg>
<status status="PASS" starttime="20201117 14:48:16.007" endtime="20201117 14:48:16.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.995" endtime="20201117 14:48:16.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.022" endtime="20201117 14:48:16.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:16.031" endtime="20201117 14:48:16.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.026" endtime="20201117 14:48:16.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.017" endtime="20201117 14:48:16.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.467" endtime="20201117 14:48:16.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.462" endtime="20201117 14:48:16.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.460" endtime="20201117 14:48:16.059"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.064" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.087" endtime="20201117 14:48:16.109"></status>
</kw>
<msg timestamp="20201117 14:48:16.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:16.084" endtime="20201117 14:48:16.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:16.112" endtime="20201117 14:48:16.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.119" endtime="20201117 14:48:16.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.076" endtime="20201117 14:48:16.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.070" endtime="20201117 14:48:16.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.144" endtime="20201117 14:48:16.492"></status>
</kw>
<msg timestamp="20201117 14:48:16.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049445028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049504833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:16.141" endtime="20201117 14:48:16.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049445028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049504833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:16.497" endtime="20201117 14:48:16.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.505" endtime="20201117 14:48:16.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.133" endtime="20201117 14:48:16.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.128" endtime="20201117 14:48:16.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:16.514" level="INFO">${RESULT} = [{'time': 0.049504833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.980499999999611e-05, 'source_diff': 5.980499999999611e-05}, {'time': 0.049569833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:16.510" endtime="20201117 14:48:16.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:16.528" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:16.515" endtime="20201117 14:48:16.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.534" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:48:16.533" endtime="20201117 14:48:16.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.538" level="INFO">VALUE: [5.980499999999611e-05, 5.9402000000000066e-05, 5.90550000000023e-05, 5.908300000000144e-05, 5.9528000000003134e-05, 5.90829999999945e-05, 5.965299999999979e-05, 5.9485999999997485e-05, 5.915300000000623e-05, 6.0027999999996695e-05, 5.959700000000151e-05, 5.945899999999782e-05, 5.96949999999985e-05, 5.9694000000005965e-05, 5.9764000000003814e-05, 5.980500000000305e-05, 5.9556000000002274e-05, 5.927700000000341e-05, 5.977700000000391e-05, 5.9014000000003064e-05, 5.938899999999997e-05, 5.9514000000003564e-05, 5.941699999999911e-05, 5.933300000000169e-05, 5.9972000000005354e-05, 5.909700000000101e-05, 5.9084000000000914e-05, 5.9263999999996375e-05, 5.9735999999997735e-05, 5.9862000000000803e-05, 5.916699999999886e-05, 5.9916000000000136e-05, 5.938899999999997e-05, 5.930500000000255e-05, 5.9582999999995e-05, 5.991700000000655e-05, 5.916699999999886e-05, 5.990300000000004e-05, 5.908300000000144e-05, 5.9028000000002634e-05, 5.9056000000001774e-05, 5.9735999999997735e-05, 5.9070000000001344e-05, 5.9986000000004924e-05, 5.9222000000004604e-05, 5.9693999999999026e-05, 5.9277999999995945e-05, 5.9138000000000246e-05, 5.9320000000001594e-05, 5.9429999999999206e-05]</msg>
<status status="PASS" starttime="20201117 14:48:16.535" endtime="20201117 14:48:16.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.529" endtime="20201117 14:48:16.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.542" endtime="20201117 14:48:16.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:16.546" endtime="20201117 14:48:16.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.544" endtime="20201117 14:48:16.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.540" endtime="20201117 14:48:16.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.066" endtime="20201117 14:48:16.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.061" endtime="20201117 14:48:16.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.059" endtime="20201117 14:48:16.568"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.571" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.581" endtime="20201117 14:48:16.598"></status>
</kw>
<msg timestamp="20201117 14:48:16.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:16.580" endtime="20201117 14:48:16.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:16.600" endtime="20201117 14:48:16.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.603" endtime="20201117 14:48:16.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.576" endtime="20201117 14:48:16.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.574" endtime="20201117 14:48:16.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.615" endtime="20201117 14:48:16.901"></status>
</kw>
<msg timestamp="20201117 14:48:16.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027796542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027857014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:16.613" endtime="20201117 14:48:16.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027796542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027857014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:16.906" endtime="20201117 14:48:16.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.914" endtime="20201117 14:48:16.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.610" endtime="20201117 14:48:16.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.607" endtime="20201117 14:48:16.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:16.923" level="INFO">${RESULT} = [{'time': 0.027857014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0471999999998916e-05, 'source_diff': 6.0471999999998916e-05}, {'time': 0.02792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:16.919" endtime="20201117 14:48:16.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:16.938" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:16.924" endtime="20201117 14:48:16.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.943" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:48:16.942" endtime="20201117 14:48:16.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.947" level="INFO">VALUE: [6.0471999999998916e-05, 6.0721999999999166e-05, 6.0820000000003094e-05, 6.0348000000001734e-05, 6.066700000000036e-05, 6.0236000000001705e-05, 6.0902000000001566e-05, 6.0500000000001525e-05, 6.090300000000104e-05, 6.054100000000076e-05, 6.086099999999886e-05, 6.0721999999999166e-05, 6.081900000000015e-05, 6.0278000000000415e-05, 6.0264000000000845e-05, 6.0236000000001705e-05, 6.0694000000000026e-05, 6.015300000000029e-05, 6.0999999999998555e-05, 6.0569999999999374e-05, 6.0069999999998874e-05, 6.045900000000229e-05, 6.0347999999998264e-05, 6.06949999999995e-05, 6.098699999999846e-05, 6.029100000000051e-05, 6.0513999999997625e-05, 6.0207999999999096e-05, 6.0236000000001705e-05, 6.0666000000000886e-05, 6.0305999999999554e-05, 6.0319999999999124e-05, 6.0263999999997375e-05, 6.0028000000000165e-05, 6.058299999999947e-05, 6.0528000000000665e-05, 6.0584000000002414e-05, 6.0833999999999194e-05, 6.091700000000061e-05, 6.0819999999999624e-05, 6.0750000000001775e-05, 6.061099999999861e-05, 6.0764000000001345e-05, 6.080500000000058e-05, 6.034700000000226e-05, 6.081900000000015e-05, 6.084699999999929e-05, 6.0207999999999096e-05, 6.015300000000029e-05, 6.0485999999998485e-05]</msg>
<status status="PASS" starttime="20201117 14:48:16.944" endtime="20201117 14:48:16.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.939" endtime="20201117 14:48:16.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.951" endtime="20201117 14:48:16.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:16.955" endtime="20201117 14:48:16.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.953" endtime="20201117 14:48:16.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.949" endtime="20201117 14:48:16.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.572" endtime="20201117 14:48:16.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.569" endtime="20201117 14:48:16.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.569" endtime="20201117 14:48:16.977"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.980" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.990" endtime="20201117 14:48:17.008"></status>
</kw>
<msg timestamp="20201117 14:48:17.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:16.989" endtime="20201117 14:48:17.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.010" endtime="20201117 14:48:17.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.013" endtime="20201117 14:48:17.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.985" endtime="20201117 14:48:17.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.982" endtime="20201117 14:48:17.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.025" endtime="20201117 14:48:17.311"></status>
</kw>
<msg timestamp="20201117 14:48:17.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027701403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027762431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:17.023" endtime="20201117 14:48:17.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027701403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027762431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:17.315" endtime="20201117 14:48:17.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.324" endtime="20201117 14:48:17.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.020" endtime="20201117 14:48:17.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.017" endtime="20201117 14:48:17.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:17.333" level="INFO">${RESULT} = [{'time': 0.027762431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1028000000001165e-05, 'source_diff': 6.1028000000001165e-05}, {'time': 0.027830431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:17.329" endtime="20201117 14:48:17.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:17.349" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:17.334" endtime="20201117 14:48:17.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.354" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:48:17.353" endtime="20201117 14:48:17.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.358" level="INFO">VALUE: [6.1028000000001165e-05, 6.179199999999802e-05, 6.143100000000068e-05, 6.142999999999774e-05, 6.127700000000194e-05, 6.116700000000086e-05, 6.177799999999845e-05, 6.12080000000001e-05, 6.152800000000166e-05, 6.165299999999832e-05, 6.112499999999868e-05, 6.193100000000118e-05, 6.14019999999986e-05, 6.195899999999685e-05, 6.111099999999911e-05, 6.105499999999736e-05, 6.201399999999913e-05, 6.181999999999716e-05, 6.186099999999986e-05, 6.125000000000227e-05, 6.116599999999792e-05, 6.134700000000326e-05, 6.161099999999961e-05, 6.149999999999906e-05, 6.148599999999949e-05, 6.190299999999857e-05, 6.133300000000022e-05, 6.188799999999953e-05, 6.130600000000055e-05, 6.190299999999857e-05, 6.132000000000012e-05, 6.180600000000105e-05, 6.16950000000005e-05, 6.148599999999949e-05, 6.166699999999789e-05, 6.165299999999832e-05, 6.158300000000047e-05, 6.133300000000022e-05, 6.161099999999961e-05, 6.113899999999825e-05, 6.184700000000029e-05, 6.129199999999752e-05, 6.179199999999802e-05, 6.172200000000017e-05, 6.15279999999982e-05, 6.15140000000021e-05, 6.151399999999863e-05, 6.182000000000062e-05, 6.12360000000027e-05, 6.166700000000136e-05]</msg>
<status status="PASS" starttime="20201117 14:48:17.355" endtime="20201117 14:48:17.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.350" endtime="20201117 14:48:17.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.362" endtime="20201117 14:48:17.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:17.366" endtime="20201117 14:48:17.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.364" endtime="20201117 14:48:17.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.360" endtime="20201117 14:48:17.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.980" endtime="20201117 14:48:17.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.978" endtime="20201117 14:48:17.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.977" endtime="20201117 14:48:17.388"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.390" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.401" endtime="20201117 14:48:17.419"></status>
</kw>
<msg timestamp="20201117 14:48:17.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.399" endtime="20201117 14:48:17.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.421" endtime="20201117 14:48:17.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.424" endtime="20201117 14:48:17.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.396" endtime="20201117 14:48:17.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.393" endtime="20201117 14:48:17.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.436" endtime="20201117 14:48:17.796"></status>
</kw>
<msg timestamp="20201117 14:48:17.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028004931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028067292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:17.434" endtime="20201117 14:48:17.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028004931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028067292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:17.806" endtime="20201117 14:48:17.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.826" endtime="20201117 14:48:17.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.430" endtime="20201117 14:48:17.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.428" endtime="20201117 14:48:17.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:17.847" level="INFO">${RESULT} = [{'time': 0.028067292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236100000000036e-05, 'source_diff': 6.236100000000036e-05}, {'time': 0.028142236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:17.837" endtime="20201117 14:48:17.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:17.880" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:17.849" endtime="20201117 14:48:17.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.892" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:48:17.889" endtime="20201117 14:48:17.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.899" level="INFO">VALUE: [6.236100000000036e-05, 6.230500000000208e-05, 6.262500000000018e-05, 6.206899999999793e-05, 6.220900000000057e-05, 6.25279999999992e-05, 6.207000000000087e-05, 6.226399999999938e-05, 6.219499999999753e-05, 6.262500000000018e-05, 6.20690000000014e-05, 6.27500000000003e-05, 6.216599999999892e-05, 6.211100000000011e-05, 6.216599999999892e-05, 6.204199999999827e-05, 6.229200000000198e-05, 6.240299999999907e-05, 6.211100000000011e-05, 6.268100000000193e-05, 6.231999999999766e-05, 6.287500000000043e-05, 6.251399999999963e-05, 6.204199999999827e-05, 6.25279999999992e-05, 6.230500000000208e-05, 6.263899999999975e-05, 6.254099999999929e-05, 6.265199999999985e-05, 6.255500000000233e-05, 6.248600000000049e-05, 6.233300000000122e-05, 6.204199999999827e-05, 6.26950000000015e-05, 6.22499999999998e-05, 6.25690000000019e-05, 6.245799999999788e-05, 6.232000000000112e-05, 6.22499999999998e-05, 6.268099999999846e-05, 6.241700000000211e-05, 6.279199999999902e-05, 6.213799999999978e-05, 6.27080000000016e-05, 6.276399999999988e-05, 6.27219999999977e-05, 6.244400000000178e-05, 6.298600000000099e-05, 6.223600000000024e-05, 6.229199999999852e-05]</msg>
<status status="PASS" starttime="20201117 14:48:17.894" endtime="20201117 14:48:17.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.882" endtime="20201117 14:48:17.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.909" endtime="20201117 14:48:17.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:17.918" endtime="20201117 14:48:17.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.913" endtime="20201117 14:48:17.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.904" endtime="20201117 14:48:17.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.391" endtime="20201117 14:48:17.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.389" endtime="20201117 14:48:17.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.388" endtime="20201117 14:48:17.945"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.950" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.974" endtime="20201117 14:48:17.995"></status>
</kw>
<msg timestamp="20201117 14:48:17.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.970" endtime="20201117 14:48:17.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.999" endtime="20201117 14:48:18.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.006" endtime="20201117 14:48:18.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.962" endtime="20201117 14:48:18.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.956" endtime="20201117 14:48:18.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.031" endtime="20201117 14:48:18.394"></status>
</kw>
<msg timestamp="20201117 14:48:18.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049961708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050025653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:18.028" endtime="20201117 14:48:18.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049961708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050025653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:18.404" endtime="20201117 14:48:18.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.424" endtime="20201117 14:48:18.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.020" endtime="20201117 14:48:18.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.015" endtime="20201117 14:48:18.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:18.443" level="INFO">${RESULT} = [{'time': 0.050025653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.394500000000275e-05, 'source_diff': 6.394500000000275e-05}, {'time': 0.050099639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:18.433" endtime="20201117 14:48:18.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:18.477" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:18.445" endtime="20201117 14:48:18.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.489" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:48:18.486" endtime="20201117 14:48:18.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.496" level="INFO">VALUE: [6.394500000000275e-05, 6.318100000000243e-05, 6.358399999999848e-05, 6.33479999999978e-05, 6.373600000000174e-05, 6.308399999999798e-05, 6.368000000000346e-05, 6.381999999999916e-05, 6.359699999999857e-05, 6.319400000000253e-05, 6.366599999999695e-05, 6.319399999999559e-05, 6.355499999999986e-05, 6.386099999999839e-05, 6.30829999999985e-05, 6.366700000000336e-05, 6.326400000000038e-05, 6.383299999999925e-05, 6.358399999999848e-05, 6.377800000000045e-05, 6.373600000000174e-05, 6.361199999999761e-05, 6.30279999999997e-05, 6.394400000000328e-05, 6.347199999999498e-05, 6.362500000000465e-05, 6.337499999999746e-05, 6.390300000000404e-05, 6.329199999999952e-05, 6.34029999999966e-05, 6.330599999999909e-05, 6.304199999999927e-05, 6.330600000000602e-05, 6.395900000000232e-05, 6.351400000000063e-05, 6.350000000000106e-05, 6.398599999999505e-05, 6.323600000000124e-05, 6.38479999999983e-05, 6.308300000000544e-05, 6.311099999999764e-05, 6.347199999999498e-05, 6.39300000000037e-05, 6.395800000000285e-05, 6.376399999999394e-05, 6.340300000000354e-05, 6.324999999999387e-05, 6.348599999999455e-05, 6.37080000000026e-05, 6.366699999999642e-05]</msg>
<status status="PASS" starttime="20201117 14:48:18.491" endtime="20201117 14:48:18.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.479" endtime="20201117 14:48:18.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.506" endtime="20201117 14:48:18.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:18.515" endtime="20201117 14:48:18.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.510" endtime="20201117 14:48:18.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.501" endtime="20201117 14:48:18.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.952" endtime="20201117 14:48:18.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.948" endtime="20201117 14:48:18.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.946" endtime="20201117 14:48:18.542"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.548" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.576" endtime="20201117 14:48:18.599"></status>
</kw>
<msg timestamp="20201117 14:48:18.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:18.573" endtime="20201117 14:48:18.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:18.602" endtime="20201117 14:48:18.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.609" endtime="20201117 14:48:18.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.560" endtime="20201117 14:48:18.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.553" endtime="20201117 14:48:18.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.634" endtime="20201117 14:48:18.997"></status>
</kw>
<msg timestamp="20201117 14:48:19.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055494667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055558847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:18.630" endtime="20201117 14:48:19.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055494667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055558847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:19.008" endtime="20201117 14:48:19.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.028" endtime="20201117 14:48:19.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.623" endtime="20201117 14:48:19.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.618" endtime="20201117 14:48:19.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:19.047" level="INFO">${RESULT} = [{'time': 0.055558847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.418000000000396e-05, 'source_diff': 6.418000000000396e-05}, {'time': 0.055637847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:19.037" endtime="20201117 14:48:19.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:19.080" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:19.049" endtime="20201117 14:48:19.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.092" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:48:19.089" endtime="20201117 14:48:19.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.099" level="INFO">VALUE: [6.418000000000396e-05, 6.402799999999376e-05, 6.444400000000378e-05, 6.466699999999742e-05, 6.437499999999846e-05, 6.441699999999717e-05, 6.416699999999692e-05, 6.461099999999914e-05, 6.499999999999562e-05, 6.451399999999469e-05, 6.444500000000325e-05, 6.405599999999984e-05, 6.452799999999426e-05, 6.436099999999889e-05, 6.469400000000403e-05, 6.42359999999953e-05, 6.404100000000079e-05, 6.409699999999907e-05, 6.451399999999469e-05, 6.436099999999889e-05, 6.431900000000018e-05, 6.43750000000054e-05, 6.422200000000267e-05, 6.413899999999778e-05, 6.42359999999953e-05, 6.45699999999999e-05, 6.42080000000031e-05, 6.409799999999855e-05, 6.444399999999684e-05, 6.406899999999993e-05, 6.406899999999993e-05, 6.40829999999995e-05, 6.444399999999684e-05, 6.434699999999932e-05, 6.472199999999623e-05, 6.469399999999709e-05, 6.466699999999742e-05, 6.448599999999555e-05, 6.433299999999975e-05, 6.470899999999613e-05, 6.495900000000332e-05, 6.47500000000023e-05, 6.434800000000573e-05, 6.4195000000003e-05, 6.427800000000095e-05, 6.476400000000188e-05, 6.444399999999684e-05, 6.427800000000095e-05, 6.442999999999727e-05, 6.486100000000633e-05]</msg>
<status status="PASS" starttime="20201117 14:48:19.094" endtime="20201117 14:48:19.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.082" endtime="20201117 14:48:19.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.109" endtime="20201117 14:48:19.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:19.118" endtime="20201117 14:48:19.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.114" endtime="20201117 14:48:19.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.104" endtime="20201117 14:48:19.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.549" endtime="20201117 14:48:19.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.545" endtime="20201117 14:48:19.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.543" endtime="20201117 14:48:19.147"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.152" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.176" endtime="20201117 14:48:19.196"></status>
</kw>
<msg timestamp="20201117 14:48:19.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:19.172" endtime="20201117 14:48:19.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:19.200" endtime="20201117 14:48:19.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.207" endtime="20201117 14:48:19.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.164" endtime="20201117 14:48:19.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.158" endtime="20201117 14:48:19.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.232" endtime="20201117 14:48:19.595"></status>
</kw>
<msg timestamp="20201117 14:48:19.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050795569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050861375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:19.228" endtime="20201117 14:48:19.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050795569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050861375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:19.606" endtime="20201117 14:48:19.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.625" endtime="20201117 14:48:19.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.221" endtime="20201117 14:48:19.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.215" endtime="20201117 14:48:19.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:19.644" level="INFO">${RESULT} = [{'time': 0.050861375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.580600000000159e-05, 'source_diff': 6.580600000000159e-05}, {'time': 0.050941375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:19.635" endtime="20201117 14:48:19.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:19.680" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:19.646" endtime="20201117 14:48:19.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.692" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:48:19.689" endtime="20201117 14:48:19.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.773" level="INFO">VALUE: [6.580600000000159e-05, 6.522199999999673e-05, 6.605500000000236e-05, 6.55280000000022e-05, 6.555600000000134e-05, 6.59029999999991e-05, 6.55700000000009e-05, 6.55700000000009e-05, 6.565299999999885e-05, 6.569399999999809e-05, 6.601400000000313e-05, 6.577700000000297e-05, 6.59159999999992e-05, 6.537499999999946e-05, 6.566700000000536e-05, 6.54029999999986e-05, 6.5277999999995e-05, 6.508299999999356e-05, 6.513899999999878e-05, 6.569499999999756e-05, 6.512499999999921e-05, 6.518099999999749e-05, 6.601399999999619e-05, 6.504100000000179e-05, 6.562499999999971e-05, 6.547200000000392e-05, 6.566599999999895e-05, 6.598599999999705e-05, 6.515299999999835e-05, 6.580600000000159e-05, 6.601400000000313e-05, 6.545799999999741e-05, 6.581899999999474e-05, 6.50280000000017e-05, 6.53479999999998e-05, 6.594499999999781e-05, 6.592999999999877e-05, 6.513899999999878e-05, 6.570799999999766e-05, 6.515300000000529e-05, 6.586100000000039e-05, 6.563899999999928e-05, 6.551400000000263e-05, 6.594500000000475e-05, 6.536099999999989e-05, 6.50830000000005e-05, 6.593099999999824e-05, 6.586100000000039e-05, 6.512499999999921e-05, 6.52359999999963e-05]</msg>
<status status="PASS" starttime="20201117 14:48:19.694" endtime="20201117 14:48:19.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.682" endtime="20201117 14:48:19.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.784" endtime="20201117 14:48:19.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:19.793" endtime="20201117 14:48:19.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.788" endtime="20201117 14:48:19.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.779" endtime="20201117 14:48:19.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.154" endtime="20201117 14:48:19.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.149" endtime="20201117 14:48:19.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.148" endtime="20201117 14:48:19.820"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.826" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.849" endtime="20201117 14:48:19.871"></status>
</kw>
<msg timestamp="20201117 14:48:19.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:19.845" endtime="20201117 14:48:19.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:19.875" endtime="20201117 14:48:19.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.881" endtime="20201117 14:48:19.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.838" endtime="20201117 14:48:19.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.832" endtime="20201117 14:48:19.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.906" endtime="20201117 14:48:20.270"></status>
</kw>
<msg timestamp="20201117 14:48:20.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049765306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049831361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:19.903" endtime="20201117 14:48:20.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049765306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049831361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:20.280" endtime="20201117 14:48:20.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.301" endtime="20201117 14:48:20.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.895" endtime="20201117 14:48:20.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.890" endtime="20201117 14:48:20.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:20.319" level="INFO">${RESULT} = [{'time': 0.049831361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.605499999999542e-05, 'source_diff': 6.605499999999542e-05}, {'time': 0.049909347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:20.310" endtime="20201117 14:48:20.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:20.353" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:20.322" endtime="20201117 14:48:20.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.364" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:48:20.362" endtime="20201117 14:48:20.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.371" level="INFO">VALUE: [6.605499999999542e-05, 6.698599999999805e-05, 6.69030000000001e-05, 6.615299999999935e-05, 6.608299999999456e-05, 6.647299999999745e-05, 6.670799999999866e-05, 6.629199999999558e-05, 6.698600000000499e-05, 6.668099999999899e-05, 6.668099999999899e-05, 6.631999999999472e-05, 6.619499999999806e-05, 6.64029999999996e-05, 6.697200000000542e-05, 6.694399999999934e-05, 6.676399999999694e-05, 6.683300000000225e-05, 6.60830000000015e-05, 6.608299999999456e-05, 6.683300000000225e-05, 6.612500000000021e-05, 6.629200000000252e-05, 6.641699999999917e-05, 6.626399999999644e-05, 6.648600000000449e-05, 6.68480000000013e-05, 6.611200000000012e-05, 6.698700000000446e-05, 6.659700000000157e-05, 6.672200000000517e-05, 6.694399999999934e-05, 6.659700000000157e-05, 6.674999999999737e-05, 6.616700000000586e-05, 6.650000000000406e-05, 6.665299999999985e-05, 6.661100000000114e-05, 6.674999999999737e-05, 6.6277999999996e-05, 6.701399999999719e-05, 6.624999999999687e-05, 6.69030000000001e-05, 6.700000000000456e-05, 6.609700000000107e-05, 6.686100000000139e-05, 6.654100000000329e-05, 6.655600000000234e-05, 6.654099999999635e-05, 6.688900000000053e-05]</msg>
<status status="PASS" starttime="20201117 14:48:20.367" endtime="20201117 14:48:20.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.355" endtime="20201117 14:48:20.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.380" endtime="20201117 14:48:20.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:20.389" endtime="20201117 14:48:20.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.384" endtime="20201117 14:48:20.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.375" endtime="20201117 14:48:20.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.827" endtime="20201117 14:48:20.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.823" endtime="20201117 14:48:20.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.821" endtime="20201117 14:48:20.416"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.422" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.445" endtime="20201117 14:48:20.467"></status>
</kw>
<msg timestamp="20201117 14:48:20.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:20.441" endtime="20201117 14:48:20.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:20.471" endtime="20201117 14:48:20.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.477" endtime="20201117 14:48:20.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.434" endtime="20201117 14:48:20.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.427" endtime="20201117 14:48:20.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.504" endtime="20201117 14:48:20.842"></status>
</kw>
<msg timestamp="20201117 14:48:20.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049954333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050021458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:20.499" endtime="20201117 14:48:20.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049954333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050021458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:20.852" endtime="20201117 14:48:20.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.873" endtime="20201117 14:48:20.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.491" endtime="20201117 14:48:20.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.486" endtime="20201117 14:48:20.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:20.892" level="INFO">${RESULT} = [{'time': 0.050021458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.712500000000121e-05, 'source_diff': 6.712500000000121e-05}, {'time': 0.050101472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:20.882" endtime="20201117 14:48:20.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:20.925" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:20.894" endtime="20201117 14:48:20.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.937" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:48:20.934" endtime="20201117 14:48:20.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.943" level="INFO">VALUE: [6.712500000000121e-05, 6.774999999999837e-05, 6.770799999999966e-05, 6.791700000000067e-05, 6.716699999999992e-05, 6.781899999999674e-05, 6.795799999999991e-05, 6.768099999999999e-05, 6.730599999999615e-05, 6.734700000000232e-05, 6.754200000000377e-05, 6.730499999999667e-05, 6.765300000000085e-05, 6.790200000000163e-05, 6.708299999999556e-05, 6.727699999999753e-05, 6.756899999999649e-05, 6.74030000000006e-05, 6.793100000000024e-05, 6.715300000000035e-05, 6.751399999999769e-05, 6.774999999999837e-05, 6.729200000000352e-05, 6.77359999999988e-05, 6.711100000000164e-05, 6.770899999999913e-05, 6.715300000000035e-05, 6.758299999999606e-05, 6.795800000000685e-05, 6.794400000000034e-05, 6.712500000000121e-05, 6.743000000000027e-05, 6.799999999999862e-05, 6.795799999999991e-05, 6.719399999999959e-05, 6.733299999999581e-05, 6.793100000000024e-05, 6.724999999999787e-05, 6.727800000000395e-05, 6.780600000000359e-05, 6.769499999999956e-05, 6.773699999999827e-05, 6.712499999999427e-05, 6.74160000000007e-05, 6.709699999999513e-05, 6.716600000000045e-05, 6.719399999999959e-05, 6.795799999999991e-05, 6.77500000000053e-05, 6.756899999999649e-05]</msg>
<status status="PASS" starttime="20201117 14:48:20.939" endtime="20201117 14:48:20.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.927" endtime="20201117 14:48:20.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.952" endtime="20201117 14:48:20.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:20.961" endtime="20201117 14:48:20.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.956" endtime="20201117 14:48:20.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.947" endtime="20201117 14:48:20.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.423" endtime="20201117 14:48:20.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.419" endtime="20201117 14:48:20.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.417" endtime="20201117 14:48:20.988"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.994" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.017" endtime="20201117 14:48:21.039"></status>
</kw>
<msg timestamp="20201117 14:48:21.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:21.013" endtime="20201117 14:48:21.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:21.043" endtime="20201117 14:48:21.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.049" endtime="20201117 14:48:21.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.006" endtime="20201117 14:48:21.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.999" endtime="20201117 14:48:21.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.075" endtime="20201117 14:48:21.440"></status>
</kw>
<msg timestamp="20201117 14:48:21.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04984525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049913306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:21.071" endtime="20201117 14:48:21.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04984525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049913306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:21.451" endtime="20201117 14:48:21.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.472" endtime="20201117 14:48:21.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.063" endtime="20201117 14:48:21.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.058" endtime="20201117 14:48:21.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:21.490" level="INFO">${RESULT} = [{'time': 0.049913306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.80559999999969e-05, 'source_diff': 6.80559999999969e-05}, {'time': 0.049989306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:21.481" endtime="20201117 14:48:21.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:21.523" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:21.493" endtime="20201117 14:48:21.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.535" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:48:21.532" endtime="20201117 14:48:21.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.540" level="INFO">VALUE: [6.80559999999969e-05, 6.811199999999518e-05, 6.816600000000145e-05, 6.82359999999993e-05, 6.886099999999645e-05, 6.86109999999962e-05, 6.84160000000017e-05, 6.840299999999466e-05, 6.849999999999912e-05, 6.815299999999441e-05, 6.879200000000502e-05, 6.869500000000056e-05, 6.806999999999647e-05, 6.824999999999887e-05, 6.816700000000092e-05, 6.827799999999801e-05, 6.87630000000064e-05, 6.898699999999952e-05, 6.854099999999835e-05, 6.883299999999731e-05, 6.809699999999613e-05, 6.808299999999656e-05, 6.87359999999998e-05, 6.845800000000041e-05, 6.870900000000013e-05, 6.872200000000023e-05, 6.884700000000382e-05, 6.826399999999844e-05, 6.879199999999808e-05, 6.815200000000188e-05, 6.863900000000228e-05, 6.883299999999731e-05, 6.813900000000178e-05, 6.865200000000238e-05, 6.815199999999494e-05, 6.898600000000005e-05, 6.805499999999742e-05, 6.895799999999397e-05, 6.818100000000049e-05, 6.852799999999826e-05, 6.8583000000004e-05, 6.808400000000298e-05, 6.852799999999826e-05, 6.865300000000185e-05, 6.813900000000178e-05, 6.801399999999819e-05, 6.862499999999577e-05, 6.827699999999853e-05, 6.805499999999742e-05, 6.831899999999724e-05]</msg>
<status status="PASS" starttime="20201117 14:48:21.537" endtime="20201117 14:48:21.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.525" endtime="20201117 14:48:21.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.550" endtime="20201117 14:48:21.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:21.560" endtime="20201117 14:48:21.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.555" endtime="20201117 14:48:21.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.545" endtime="20201117 14:48:21.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.995" endtime="20201117 14:48:21.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.991" endtime="20201117 14:48:21.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.989" endtime="20201117 14:48:21.588"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.593" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.616" endtime="20201117 14:48:21.638"></status>
</kw>
<msg timestamp="20201117 14:48:21.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:21.613" endtime="20201117 14:48:21.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:21.641" endtime="20201117 14:48:21.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.648" endtime="20201117 14:48:21.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.605" endtime="20201117 14:48:21.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.599" endtime="20201117 14:48:21.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.674" endtime="20201117 14:48:22.040"></status>
</kw>
<msg timestamp="20201117 14:48:22.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049839972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049909194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:21.669" endtime="20201117 14:48:22.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049839972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049909194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:22.050" endtime="20201117 14:48:22.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.071" endtime="20201117 14:48:22.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.662" endtime="20201117 14:48:22.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.657" endtime="20201117 14:48:22.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:22.090" level="INFO">${RESULT} = [{'time': 0.049909194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.922199999999379e-05, 'source_diff': 6.922199999999379e-05}, {'time': 0.049989194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:22.080" endtime="20201117 14:48:22.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:22.125" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:22.092" endtime="20201117 14:48:22.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.136" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:48:22.134" endtime="20201117 14:48:22.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.142" level="INFO">VALUE: [6.922199999999379e-05, 6.984699999999788e-05, 6.912500000000321e-05, 6.938899999999609e-05, 6.901299999999971e-05, 6.937500000000346e-05, 6.998600000000105e-05, 6.950000000000012e-05, 6.919400000000159e-05, 6.954199999999883e-05, 6.908299999999756e-05, 6.929199999999858e-05, 6.998600000000105e-05, 6.954199999999883e-05, 6.934700000000432e-05, 6.916699999999498e-05, 6.905600000000484e-05, 6.904100000000579e-05, 6.99439999999954e-05, 6.958299999999806e-05, 6.94439999999949e-05, 6.92909999999991e-05, 6.936100000000389e-05, 6.991700000000267e-05, 6.952799999999926e-05, 6.965300000000285e-05, 6.938900000000303e-05, 6.993100000000224e-05, 6.977800000000645e-05, 6.952799999999926e-05, 6.937500000000346e-05, 6.911200000000312e-05, 6.969500000000156e-05, 6.951300000000021e-05, 6.933299999999781e-05, 6.987500000000396e-05, 6.995800000000191e-05, 6.917999999999508e-05, 6.924999999999987e-05, 6.970800000000166e-05, 6.952799999999926e-05, 6.947199999999404e-05, 6.909800000000355e-05, 6.908399999999704e-05, 6.962500000000371e-05, 6.948599999999361e-05, 6.977799999999951e-05, 6.988900000000353e-05, 6.969400000000209e-05, 6.930500000000561e-05]</msg>
<status status="PASS" starttime="20201117 14:48:22.139" endtime="20201117 14:48:22.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.127" endtime="20201117 14:48:22.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.152" endtime="20201117 14:48:22.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:22.161" endtime="20201117 14:48:22.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.156" endtime="20201117 14:48:22.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.147" endtime="20201117 14:48:22.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.595" endtime="20201117 14:48:22.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.591" endtime="20201117 14:48:22.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.589" endtime="20201117 14:48:22.188"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.194" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.217" endtime="20201117 14:48:22.238"></status>
</kw>
<msg timestamp="20201117 14:48:22.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.213" endtime="20201117 14:48:22.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.242" endtime="20201117 14:48:22.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.249" endtime="20201117 14:48:22.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.205" endtime="20201117 14:48:22.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.199" endtime="20201117 14:48:22.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.274" endtime="20201117 14:48:22.640"></status>
</kw>
<msg timestamp="20201117 14:48:22.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049503819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049573833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:22.270" endtime="20201117 14:48:22.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049503819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049573833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:22.650" endtime="20201117 14:48:22.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.671" endtime="20201117 14:48:22.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.263" endtime="20201117 14:48:22.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.258" endtime="20201117 14:48:22.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:22.691" level="INFO">${RESULT} = [{'time': 0.049573833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.001400000000019e-05, 'source_diff': 7.001400000000019e-05}, {'time': 0.049650833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:22.682" endtime="20201117 14:48:22.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:22.724" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:22.694" endtime="20201117 14:48:22.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.736" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:48:22.733" endtime="20201117 14:48:22.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.741" level="INFO">VALUE: [7.001400000000019e-05, 7.07910000000006e-05, 7.069400000000309e-05, 7.059699999999863e-05, 7.025000000000087e-05, 7.050000000000112e-05, 7.065300000000385e-05, 7.091700000000367e-05, 7.025000000000087e-05, 7.056999999999897e-05, 7.072299999999476e-05, 7.102699999999434e-05, 7.087500000000496e-05, 7.027700000000053e-05, 7.006999999999847e-05, 7.070799999999572e-05, 7.031899999999924e-05, 7.052700000000078e-05, 7.015300000000335e-05, 7.090299999999716e-05, 7.093000000000377e-05, 7.100000000000162e-05, 7.081999999999922e-05, 7.022200000000173e-05, 7.023599999999436e-05, 7.019500000000206e-05, 7.045900000000188e-05, 7.031899999999924e-05, 7.07910000000006e-05, 7.027700000000053e-05, 7.095800000000291e-05, 7.009699999999813e-05, 7.074999999999443e-05, 7.076400000000094e-05, 7.058299999999906e-05, 7.07360000000018e-05, 7.091699999999673e-05, 7.031899999999924e-05, 7.075000000000137e-05, 7.016700000000292e-05, 7.088899999999759e-05, 7.009800000000455e-05, 7.002799999999976e-05, 7.04030000000036e-05, 7.058299999999906e-05, 7.083299999999931e-05, 7.00830000000055e-05, 7.004099999999985e-05, 7.087499999999802e-05, 7.006899999999899e-05]</msg>
<status status="PASS" starttime="20201117 14:48:22.738" endtime="20201117 14:48:22.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.726" endtime="20201117 14:48:22.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.751" endtime="20201117 14:48:22.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:22.760" endtime="20201117 14:48:22.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.755" endtime="20201117 14:48:22.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.746" endtime="20201117 14:48:22.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.195" endtime="20201117 14:48:22.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.191" endtime="20201117 14:48:22.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.189" endtime="20201117 14:48:22.787"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.793" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.816" endtime="20201117 14:48:22.838"></status>
</kw>
<msg timestamp="20201117 14:48:22.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.813" endtime="20201117 14:48:22.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.842" endtime="20201117 14:48:22.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.849" endtime="20201117 14:48:22.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.805" endtime="20201117 14:48:22.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.798" endtime="20201117 14:48:22.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.874" endtime="20201117 14:48:23.238"></status>
</kw>
<msg timestamp="20201117 14:48:23.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050176819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050248806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:22.870" endtime="20201117 14:48:23.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050176819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050248806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:23.248" endtime="20201117 14:48:23.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.268" endtime="20201117 14:48:23.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.863" endtime="20201117 14:48:23.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.857" endtime="20201117 14:48:23.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:23.287" level="INFO">${RESULT} = [{'time': 0.050248806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.198700000000252e-05, 'source_diff': 7.198700000000252e-05}, {'time': 0.050331806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:23.277" endtime="20201117 14:48:23.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:23.320" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:23.289" endtime="20201117 14:48:23.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.331" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:48:23.329" endtime="20201117 14:48:23.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.337" level="INFO">VALUE: [7.198700000000252e-05, 7.152800000000126e-05, 7.152800000000126e-05, 7.119399999999665e-05, 7.152700000000178e-05, 7.162499999999877e-05, 7.109700000000607e-05, 7.125000000000187e-05, 7.155500000000092e-05, 7.186099999999945e-05, 7.152800000000126e-05, 7.182000000000022e-05, 7.10559999999999e-05, 7.126400000000144e-05, 7.190299999999816e-05, 7.168100000000399e-05, 7.180600000000065e-05, 7.106999999999947e-05, 7.12360000000023e-05, 7.201400000000219e-05, 7.1069e-05, 7.183300000000031e-05, 7.172200000000323e-05, 7.166699999999748e-05, 7.190299999999816e-05, 7.173599999999586e-05, 7.118099999999655e-05, 7.113900000000478e-05, 7.152800000000126e-05, 7.145900000000288e-05, 7.19309999999973e-05, 7.144500000000331e-05, 7.17910000000016e-05, 7.192999999999783e-05, 7.12639999999945e-05, 7.168000000000452e-05, 7.167999999999758e-05, 7.162499999999877e-05, 7.152800000000126e-05, 7.133299999999981e-05, 7.119500000000306e-05, 7.15560000000004e-05, 7.137499999999852e-05, 7.125000000000187e-05, 7.104200000000033e-05, 7.170799999999672e-05, 7.151399999999475e-05, 7.126400000000144e-05, 7.158300000000006e-05, 7.105500000000042e-05]</msg>
<status status="PASS" starttime="20201117 14:48:23.334" endtime="20201117 14:48:23.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.322" endtime="20201117 14:48:23.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.346" endtime="20201117 14:48:23.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:23.355" endtime="20201117 14:48:23.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.351" endtime="20201117 14:48:23.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.342" endtime="20201117 14:48:23.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.794" endtime="20201117 14:48:23.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.790" endtime="20201117 14:48:23.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.788" endtime="20201117 14:48:23.383"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.389" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.412" endtime="20201117 14:48:23.435"></status>
</kw>
<msg timestamp="20201117 14:48:23.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:23.408" endtime="20201117 14:48:23.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:23.438" endtime="20201117 14:48:23.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.445" endtime="20201117 14:48:23.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.401" endtime="20201117 14:48:23.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.395" endtime="20201117 14:48:23.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.469" endtime="20201117 14:48:23.834"></status>
</kw>
<msg timestamp="20201117 14:48:23.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050621625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050693972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:23.466" endtime="20201117 14:48:23.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050621625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050693972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:23.844" endtime="20201117 14:48:23.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.864" endtime="20201117 14:48:23.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.458" endtime="20201117 14:48:23.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.453" endtime="20201117 14:48:23.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:23.884" level="INFO">${RESULT} = [{'time': 0.050693972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.234699999999344e-05, 'source_diff': 7.234699999999344e-05}, {'time': 0.050780986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:23.874" endtime="20201117 14:48:23.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:23.917" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:23.886" endtime="20201117 14:48:23.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.928" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:48:23.926" endtime="20201117 14:48:23.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.934" level="INFO">VALUE: [7.234699999999344e-05, 7.266699999999848e-05, 7.238899999999909e-05, 7.291699999999873e-05, 7.208300000000056e-05, 7.294499999999787e-05, 7.216699999999798e-05, 7.297200000000448e-05, 7.204200000000133e-05, 7.257000000000097e-05, 7.284700000000088e-05, 7.274999999999643e-05, 7.241599999999876e-05, 7.23189999999943e-05, 7.248599999999661e-05, 7.225000000000287e-05, 7.229200000000158e-05, 7.2763999999996e-05, 7.286100000000045e-05, 7.213899999999884e-05, 7.276400000000294e-05, 7.27360000000038e-05, 7.266599999999901e-05, 7.220899999999669e-05, 7.277799999999557e-05, 7.204100000000185e-05, 7.21109999999997e-05, 7.299999999999668e-05, 7.225000000000287e-05, 7.245800000000441e-05, 7.215199999999894e-05, 7.290299999999916e-05, 7.302799999999582e-05, 7.227800000000201e-05, 7.201400000000219e-05, 7.234799999999986e-05, 7.266599999999901e-05, 7.277800000000251e-05, 7.241699999999823e-05, 7.208300000000056e-05, 7.280499999999523e-05, 7.204100000000185e-05, 7.222200000000373e-05, 7.22910000000021e-05, 7.229200000000158e-05, 7.252800000000226e-05, 7.212499999999927e-05, 7.249999999999618e-05, 7.258400000000054e-05, 7.279200000000208e-05]</msg>
<status status="PASS" starttime="20201117 14:48:23.931" endtime="20201117 14:48:23.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.919" endtime="20201117 14:48:23.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.949" endtime="20201117 14:48:23.952"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:23.958" endtime="20201117 14:48:23.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.953" endtime="20201117 14:48:23.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.944" endtime="20201117 14:48:23.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.390" endtime="20201117 14:48:23.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.386" endtime="20201117 14:48:23.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.384" endtime="20201117 14:48:23.985"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.991" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.014" endtime="20201117 14:48:24.034"></status>
</kw>
<msg timestamp="20201117 14:48:24.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:24.011" endtime="20201117 14:48:24.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:24.036" endtime="20201117 14:48:24.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.039" endtime="20201117 14:48:24.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.003" endtime="20201117 14:48:24.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.997" endtime="20201117 14:48:24.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.050" endtime="20201117 14:48:24.370"></status>
</kw>
<msg timestamp="20201117 14:48:24.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050123681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050196778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.049" endtime="20201117 14:48:24.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050123681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050196778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.380" endtime="20201117 14:48:24.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.400" endtime="20201117 14:48:24.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.045" endtime="20201117 14:48:24.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.043" endtime="20201117 14:48:24.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:24.419" level="INFO">${RESULT} = [{'time': 0.050196778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.30969999999942e-05, 'source_diff': 7.30969999999942e-05}, {'time': 0.050285792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:24.409" endtime="20201117 14:48:24.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:24.455" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:24.421" endtime="20201117 14:48:24.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.466" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:48:24.464" endtime="20201117 14:48:24.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.473" level="INFO">VALUE: [7.30969999999942e-05, 7.384800000000136e-05, 7.394499999999887e-05, 7.315299999999941e-05, 7.384700000000188e-05, 7.354199999999589e-05, 7.358300000000206e-05, 7.374999999999743e-05, 7.369399999999915e-05, 7.36110000000012e-05, 7.3763999999997e-05, 7.319399999999865e-05, 7.301400000000319e-05, 7.332000000000172e-05, 7.369499999999862e-05, 7.307000000000147e-05, 7.301399999999625e-05, 7.388900000000059e-05, 7.366600000000001e-05, 7.369399999999915e-05, 7.305499999999548e-05, 7.390200000000069e-05, 7.325000000000387e-05, 7.31110000000007e-05, 7.349999999999718e-05, 7.397300000000495e-05, 7.32639999999965e-05, 7.397199999999854e-05, 7.327799999999607e-05, 7.302800000000276e-05, 7.39309999999993e-05, 7.345899999999794e-05, 7.362500000000077e-05, 7.348699999999708e-05, 7.362499999999383e-05, 7.365200000000044e-05, 7.398599999999811e-05, 7.327800000000301e-05, 7.347199999999804e-05, 7.319399999999865e-05, 7.312500000000027e-05, 7.38189999999958e-05, 7.336200000000043e-05, 7.366699999999948e-05, 7.325000000000387e-05, 7.319499999999812e-05, 7.367999999999958e-05, 7.302799999999582e-05, 7.395799999999897e-05, 7.388900000000059e-05]</msg>
<status status="PASS" starttime="20201117 14:48:24.469" endtime="20201117 14:48:24.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.457" endtime="20201117 14:48:24.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.483" endtime="20201117 14:48:24.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:24.491" endtime="20201117 14:48:24.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.487" endtime="20201117 14:48:24.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.478" endtime="20201117 14:48:24.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.992" endtime="20201117 14:48:24.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.988" endtime="20201117 14:48:24.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.986" endtime="20201117 14:48:24.519"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.524" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.547" endtime="20201117 14:48:24.569"></status>
</kw>
<msg timestamp="20201117 14:48:24.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:24.544" endtime="20201117 14:48:24.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:24.572" endtime="20201117 14:48:24.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.579" endtime="20201117 14:48:24.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.536" endtime="20201117 14:48:24.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.530" endtime="20201117 14:48:24.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.604" endtime="20201117 14:48:24.967"></status>
</kw>
<msg timestamp="20201117 14:48:24.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049427653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049502208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.600" endtime="20201117 14:48:24.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049427653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049502208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.978" endtime="20201117 14:48:24.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.998" endtime="20201117 14:48:25.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.593" endtime="20201117 14:48:25.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.588" endtime="20201117 14:48:25.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:25.018" level="INFO">${RESULT} = [{'time': 0.049502208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.455499999999698e-05, 'source_diff': 7.455499999999698e-05}, {'time': 0.049588181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:25.009" endtime="20201117 14:48:25.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:25.052" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:25.021" endtime="20201117 14:48:25.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.063" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:48:25.061" endtime="20201117 14:48:25.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.069" level="INFO">VALUE: [7.455499999999698e-05, 7.450000000000512e-05, 7.424999999999793e-05, 7.430500000000367e-05, 7.452700000000478e-05, 7.465200000000144e-05, 7.484700000000288e-05, 7.445799999999947e-05, 7.463900000000134e-05, 7.46110000000022e-05, 7.423599999999836e-05, 7.418099999999955e-05, 7.458400000000254e-05, 7.41110000000017e-05, 7.413900000000084e-05, 7.488900000000159e-05, 7.445799999999947e-05, 7.438900000000109e-05, 7.451300000000521e-05, 7.452799999999732e-05, 7.473599999999886e-05, 7.429199999999664e-05, 7.490299999999422e-05, 7.429200000000358e-05, 7.454200000000383e-05, 7.437500000000152e-05, 7.4069000000003e-05, 7.499999999999868e-05, 7.472299999999876e-05, 7.432000000000272e-05, 7.449999999999818e-05, 7.487500000000202e-05, 7.449999999999818e-05, 7.409700000000213e-05, 7.447199999999904e-05, 7.46110000000022e-05, 7.472199999999929e-05, 7.483300000000331e-05, 7.487500000000202e-05, 7.46110000000022e-05, 7.470899999999919e-05, 7.415300000000041e-05, 7.42639999999975e-05, 7.40560000000029e-05, 7.494499999999987e-05, 7.408299999999562e-05, 7.490200000000169e-05, 7.484700000000288e-05, 7.436100000000195e-05, 7.409700000000213e-05]</msg>
<status status="PASS" starttime="20201117 14:48:25.066" endtime="20201117 14:48:25.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.054" endtime="20201117 14:48:25.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.079" endtime="20201117 14:48:25.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:25.088" endtime="20201117 14:48:25.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.083" endtime="20201117 14:48:25.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.074" endtime="20201117 14:48:25.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.526" endtime="20201117 14:48:25.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.521" endtime="20201117 14:48:25.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.519" endtime="20201117 14:48:25.115"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.120" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.144" endtime="20201117 14:48:25.166"></status>
</kw>
<msg timestamp="20201117 14:48:25.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:25.140" endtime="20201117 14:48:25.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:25.169" endtime="20201117 14:48:25.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.176" endtime="20201117 14:48:25.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.132" endtime="20201117 14:48:25.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.126" endtime="20201117 14:48:25.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.201" endtime="20201117 14:48:25.565"></status>
</kw>
<msg timestamp="20201117 14:48:25.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04968975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049765319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:25.197" endtime="20201117 14:48:25.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04968975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049765319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:25.575" endtime="20201117 14:48:25.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.596" endtime="20201117 14:48:25.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.190" endtime="20201117 14:48:25.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.185" endtime="20201117 14:48:25.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:25.615" level="INFO">${RESULT} = [{'time': 0.049765319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.55690000000045e-05, 'source_diff': 7.55690000000045e-05}, {'time': 0.049843347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:25.605" endtime="20201117 14:48:25.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:25.647" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:25.617" endtime="20201117 14:48:25.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.659" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:48:25.657" endtime="20201117 14:48:25.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.665" level="INFO">VALUE: [7.55690000000045e-05, 7.512500000000227e-05, 7.567999999999464e-05, 7.519400000000065e-05, 7.595800000000097e-05, 7.508300000000356e-05, 7.59440000000014e-05, 7.59310000000013e-05, 7.537500000000252e-05, 7.52639999999985e-05, 7.533399999999635e-05, 7.506899999999705e-05, 7.502799999999782e-05, 7.591600000000226e-05, 7.584699999999694e-05, 7.59440000000014e-05, 7.534699999999644e-05, 7.512500000000227e-05, 7.591700000000173e-05, 7.520800000000022e-05, 7.5069000000004e-05, 7.594500000000087e-05, 7.597300000000001e-05, 7.502800000000476e-05, 7.538799999999568e-05, 7.568100000000105e-05, 7.533300000000381e-05, 7.574999999999943e-05, 7.554100000000535e-05, 7.518000000000108e-05, 7.554199999999789e-05, 7.556899999999755e-05, 7.562500000000277e-05, 7.597200000000054e-05, 7.523599999999936e-05, 7.534800000000286e-05, 7.50560000000039e-05, 7.506899999999705e-05, 7.529200000000458e-05, 7.52910000000051e-05, 7.516600000000151e-05, 7.533299999999687e-05, 7.529099999999816e-05, 7.525000000000587e-05, 7.587499999999608e-05, 7.540200000000219e-05, 7.536100000000295e-05, 7.543099999999386e-05, 7.512500000000227e-05, 7.530600000000415e-05]</msg>
<status status="PASS" starttime="20201117 14:48:25.662" endtime="20201117 14:48:25.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.650" endtime="20201117 14:48:25.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.674" endtime="20201117 14:48:25.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:25.684" endtime="20201117 14:48:25.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.679" endtime="20201117 14:48:25.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.669" endtime="20201117 14:48:25.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.122" endtime="20201117 14:48:25.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.118" endtime="20201117 14:48:25.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.116" endtime="20201117 14:48:25.712"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.718" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.741" endtime="20201117 14:48:25.762"></status>
</kw>
<msg timestamp="20201117 14:48:25.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:25.737" endtime="20201117 14:48:25.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:25.766" endtime="20201117 14:48:25.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.772" endtime="20201117 14:48:25.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.730" endtime="20201117 14:48:25.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.723" endtime="20201117 14:48:25.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.799" endtime="20201117 14:48:26.161"></status>
</kw>
<msg timestamp="20201117 14:48:26.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050661597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050738167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:25.794" endtime="20201117 14:48:26.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050661597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050738167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:26.171" endtime="20201117 14:48:26.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.191" endtime="20201117 14:48:26.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.786" endtime="20201117 14:48:26.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.781" endtime="20201117 14:48:26.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:26.212" level="INFO">${RESULT} = [{'time': 0.050738167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.656999999999803e-05, 'source_diff': 7.656999999999803e-05}, {'time': 0.050820153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:26.202" endtime="20201117 14:48:26.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:26.244" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:26.214" endtime="20201117 14:48:26.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.256" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:48:26.254" endtime="20201117 14:48:26.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.262" level="INFO">VALUE: [7.656999999999803e-05, 7.619500000000112e-05, 7.633400000000429e-05, 7.634700000000438e-05, 7.668100000000205e-05, 7.692999999999589e-05, 7.6764e-05, 7.643000000000233e-05, 7.675000000000043e-05, 7.601399999999925e-05, 7.602799999999882e-05, 7.66389999999964e-05, 7.612500000000327e-05, 7.636099999999701e-05, 7.637499999999658e-05, 7.633399999999735e-05, 7.680599999999871e-05, 7.604200000000533e-05, 7.611200000000318e-05, 7.651399999999975e-05, 7.648599999999367e-05, 7.612500000000327e-05, 7.673600000000086e-05, 7.675000000000043e-05, 7.698600000000111e-05, 7.669399999999521e-05, 7.612499999999633e-05, 7.636099999999701e-05, 7.62639999999995e-05, 7.693099999999536e-05, 7.661099999999726e-05, 7.684800000000436e-05, 7.634699999999744e-05, 7.61110000000037e-05, 7.669400000000215e-05, 7.672199999999435e-05, 7.675000000000043e-05, 7.623600000000036e-05, 7.604200000000533e-05, 7.675000000000043e-05, 7.611099999999676e-05, 7.691700000000273e-05, 7.604200000000533e-05, 7.612499999999633e-05, 7.604199999999839e-05, 7.698600000000111e-05, 7.6069000000005e-05, 7.620800000000122e-05, 7.652799999999932e-05, 7.615299999999547e-05]</msg>
<status status="PASS" starttime="20201117 14:48:26.258" endtime="20201117 14:48:26.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.246" endtime="20201117 14:48:26.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.271" endtime="20201117 14:48:26.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:26.280" endtime="20201117 14:48:26.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.275" endtime="20201117 14:48:26.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.266" endtime="20201117 14:48:26.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.719" endtime="20201117 14:48:26.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.715" endtime="20201117 14:48:26.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.713" endtime="20201117 14:48:26.307"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.313" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.336" endtime="20201117 14:48:26.358"></status>
</kw>
<msg timestamp="20201117 14:48:26.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.333" endtime="20201117 14:48:26.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.361" endtime="20201117 14:48:26.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.369" endtime="20201117 14:48:26.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.325" endtime="20201117 14:48:26.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.319" endtime="20201117 14:48:26.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.394" endtime="20201117 14:48:26.759"></status>
</kw>
<msg timestamp="20201117 14:48:26.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049606847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049684097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:26.390" endtime="20201117 14:48:26.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049606847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049684097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:26.770" endtime="20201117 14:48:26.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.790" endtime="20201117 14:48:26.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.383" endtime="20201117 14:48:26.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.377" endtime="20201117 14:48:26.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:26.808" level="INFO">${RESULT} = [{'time': 0.049684097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.725000000000093e-05, 'source_diff': 7.725000000000093e-05}, {'time': 0.049773097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:26.799" endtime="20201117 14:48:26.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:26.844" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:26.811" endtime="20201117 14:48:26.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.855" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:48:26.853" endtime="20201117 14:48:26.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.861" level="INFO">VALUE: [7.725000000000093e-05, 7.756899999999955e-05, 7.730599999999921e-05, 7.723599999999442e-05, 7.702799999999982e-05, 7.781999999999928e-05, 7.752800000000032e-05, 7.725000000000093e-05, 7.747300000000151e-05, 7.784799999999842e-05, 7.767999999999664e-05, 7.777800000000057e-05, 7.734700000000538e-05, 7.738899999999715e-05, 7.750000000000118e-05, 7.786099999999851e-05, 7.798600000000211e-05, 7.70969999999982e-05, 7.723600000000136e-05, 7.745900000000194e-05, 7.775000000000143e-05, 7.775000000000143e-05, 7.729100000000017e-05, 7.75969999999987e-05, 7.726300000000103e-05, 7.740200000000419e-05, 7.78189999999998e-05, 7.768000000000358e-05, 7.772200000000229e-05, 7.73890000000041e-05, 7.758299999999912e-05, 7.769500000000262e-05, 7.773600000000186e-05, 7.712500000000427e-05, 7.70560000000059e-05, 7.730600000000615e-05, 7.741700000000323e-05, 7.718000000000308e-05, 7.765200000000444e-05, 7.722200000000179e-05, 7.791599999999732e-05, 7.712499999999733e-05, 7.776399999999406e-05, 7.784699999999894e-05, 7.720799999999528e-05, 7.799999999999474e-05, 7.772300000000176e-05, 7.709800000000461e-05, 7.801400000000125e-05, 7.715300000000341e-05]</msg>
<status status="PASS" starttime="20201117 14:48:26.858" endtime="20201117 14:48:26.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.846" endtime="20201117 14:48:26.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.870" endtime="20201117 14:48:26.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:26.879" endtime="20201117 14:48:26.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.875" endtime="20201117 14:48:26.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.866" endtime="20201117 14:48:26.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.315" endtime="20201117 14:48:26.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.310" endtime="20201117 14:48:26.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.308" endtime="20201117 14:48:26.907"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.912" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.936" endtime="20201117 14:48:26.958"></status>
</kw>
<msg timestamp="20201117 14:48:26.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.933" endtime="20201117 14:48:26.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.962" endtime="20201117 14:48:26.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.968" endtime="20201117 14:48:26.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.924" endtime="20201117 14:48:26.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.918" endtime="20201117 14:48:26.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.993" endtime="20201117 14:48:27.356"></status>
</kw>
<msg timestamp="20201117 14:48:27.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050340306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050419194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:26.989" endtime="20201117 14:48:27.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050340306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050419194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:27.367" endtime="20201117 14:48:27.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.387" endtime="20201117 14:48:27.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.982" endtime="20201117 14:48:27.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.977" endtime="20201117 14:48:27.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:27.407" level="INFO">${RESULT} = [{'time': 0.050419194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.888799999999918e-05, 'source_diff': 7.888799999999918e-05}, {'time': 0.050502222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:27.398" endtime="20201117 14:48:27.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:27.440" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:27.410" endtime="20201117 14:48:27.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.451" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:48:27.449" endtime="20201117 14:48:27.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.457" level="INFO">VALUE: [7.888799999999918e-05, 7.805500000000049e-05, 7.884699999999994e-05, 7.869400000000415e-05, 7.851400000000175e-05, 7.88190000000008e-05, 7.873600000000286e-05, 7.832000000000672e-05, 7.883399999999985e-05, 7.831999999999978e-05, 7.848600000000261e-05, 7.844499999999643e-05, 7.833299999999987e-05, 7.806900000000006e-05, 7.823600000000236e-05, 7.886099999999951e-05, 7.888899999999865e-05, 7.837499999999858e-05, 7.851400000000175e-05, 7.836099999999901e-05, 7.858300000000012e-05, 7.831999999999978e-05, 7.89169999999978e-05, 7.825000000000193e-05, 7.806999999999953e-05, 7.825000000000193e-05, 7.869400000000415e-05, 7.891599999999832e-05, 7.83190000000003e-05, 7.822200000000279e-05, 7.886100000000645e-05, 7.834699999999944e-05, 7.823599999999542e-05, 7.815299999999747e-05, 7.865300000000491e-05, 7.83890000000051e-05, 7.827799999999413e-05, 7.819499999999618e-05, 7.812499999999833e-05, 7.89589999999965e-05, 7.86389999999984e-05, 7.81389999999979e-05, 7.863900000000534e-05, 7.897200000000354e-05, 7.900000000000268e-05, 7.819400000000365e-05, 7.880600000000071e-05, 7.875000000000243e-05, 7.825000000000193e-05, 7.802799999999388e-05]</msg>
<status status="PASS" starttime="20201117 14:48:27.454" endtime="20201117 14:48:27.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.442" endtime="20201117 14:48:27.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.464" endtime="20201117 14:48:27.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:27.468" endtime="20201117 14:48:27.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.466" endtime="20201117 14:48:27.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.462" endtime="20201117 14:48:27.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.914" endtime="20201117 14:48:27.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.909" endtime="20201117 14:48:27.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.908" endtime="20201117 14:48:27.491"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.493" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.504" endtime="20201117 14:48:27.522"></status>
</kw>
<msg timestamp="20201117 14:48:27.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:27.502" endtime="20201117 14:48:27.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:27.523" endtime="20201117 14:48:27.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.526" endtime="20201117 14:48:27.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.499" endtime="20201117 14:48:27.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.496" endtime="20201117 14:48:27.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.538" endtime="20201117 14:48:27.841"></status>
</kw>
<msg timestamp="20201117 14:48:27.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028261694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028341153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:27.536" endtime="20201117 14:48:27.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028261694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028341153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:27.851" endtime="20201117 14:48:27.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.871" endtime="20201117 14:48:27.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.533" endtime="20201117 14:48:27.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.530" endtime="20201117 14:48:27.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:27.890" level="INFO">${RESULT} = [{'time': 0.028341153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.945900000000047e-05, 'source_diff': 7.945900000000047e-05}, {'time': 0.028423167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:27.880" endtime="20201117 14:48:27.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:27.923" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:27.892" endtime="20201117 14:48:27.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.935" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:48:27.932" endtime="20201117 14:48:27.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.940" level="INFO">VALUE: [7.945900000000047e-05, 7.933400000000035e-05, 7.99580000000015e-05, 7.900000000000268e-05, 7.919399999999771e-05, 7.947200000000057e-05, 7.937499999999958e-05, 7.922200000000032e-05, 7.911099999999976e-05, 7.944400000000143e-05, 7.994499999999793e-05, 7.970900000000072e-05, 7.983399999999738e-05, 7.941700000000176e-05, 7.948600000000014e-05, 7.987500000000008e-05, 7.990299999999922e-05, 7.949999999999971e-05, 7.920800000000075e-05, 7.992999999999889e-05, 7.974999999999996e-05, 7.905600000000096e-05, 7.974999999999996e-05, 7.949999999999971e-05, 7.969500000000115e-05, 7.959800000000017e-05, 7.961100000000026e-05, 7.990199999999975e-05, 7.954199999999842e-05, 7.994499999999793e-05, 7.992999999999889e-05, 7.912499999999933e-05, 7.991599999999932e-05, 7.973599999999692e-05, 7.998600000000411e-05, 7.927800000000207e-05, 7.908300000000063e-05, 7.906900000000106e-05, 7.906999999999359e-05, 7.966699999999854e-05, 7.938899999999915e-05, 7.940299999999872e-05, 7.925000000000293e-05, 7.983300000000138e-05, 7.970799999999778e-05, 7.923599999999642e-05, 7.965299999999897e-05, 7.994500000000487e-05, 7.990300000000616e-05, 8.001400000000325e-05]</msg>
<status status="PASS" starttime="20201117 14:48:27.937" endtime="20201117 14:48:27.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.925" endtime="20201117 14:48:27.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.951" endtime="20201117 14:48:27.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:27.959" endtime="20201117 14:48:27.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.955" endtime="20201117 14:48:27.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.946" endtime="20201117 14:48:27.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.494" endtime="20201117 14:48:27.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.492" endtime="20201117 14:48:27.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.491" endtime="20201117 14:48:27.987"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.992" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.016" endtime="20201117 14:48:28.038"></status>
</kw>
<msg timestamp="20201117 14:48:28.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.012" endtime="20201117 14:48:28.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.041" endtime="20201117 14:48:28.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.048" endtime="20201117 14:48:28.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.004" endtime="20201117 14:48:28.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.998" endtime="20201117 14:48:28.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.073" endtime="20201117 14:48:28.435"></status>
</kw>
<msg timestamp="20201117 14:48:28.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049928681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050008986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:28.069" endtime="20201117 14:48:28.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049928681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050008986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:28.445" endtime="20201117 14:48:28.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.465" endtime="20201117 14:48:28.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.061" endtime="20201117 14:48:28.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.056" endtime="20201117 14:48:28.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:28.485" level="INFO">${RESULT} = [{'time': 0.050008986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.03049999999958e-05, 'source_diff': 8.03049999999958e-05}, {'time': 0.050093986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:28.475" endtime="20201117 14:48:28.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:28.518" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:28.487" endtime="20201117 14:48:28.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.529" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:48:28.527" endtime="20201117 14:48:28.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.536" level="INFO">VALUE: [8.03049999999958e-05, 8.086100000000151e-05, 8.087500000000108e-05, 8.06249999999939e-05, 8.086100000000151e-05, 8.070899999999825e-05, 8.094499999999893e-05, 8.061100000000126e-05, 8.027799999999613e-05, 8.055500000000299e-05, 8.061100000000126e-05, 8.100000000000468e-05, 8.090300000000022e-05, 8.008300000000163e-05, 8.102800000000382e-05, 8.083399999999491e-05, 8.01389999999999e-05, 8.065299999999997e-05, 8.023599999999742e-05, 8.016699999999904e-05, 8.094499999999893e-05, 8.045900000000494e-05, 8.041599999999982e-05, 8.098599999999817e-05, 8.002700000000335e-05, 8.04169999999993e-05, 8.006900000000206e-05, 8.088899999999372e-05, 8.006899999999512e-05, 8.047200000000504e-05, 8.088900000000065e-05, 8.05840000000016e-05, 8.066699999999954e-05, 8.094500000000587e-05, 8.033300000000188e-05, 8.048599999999767e-05, 8.023600000000436e-05, 8.012500000000033e-05, 8.083299999999544e-05, 8.072200000000529e-05, 8.073599999999792e-05, 8.076399999999706e-05, 8.002799999999588e-05, 8.088900000000065e-05, 8.038900000000015e-05, 8.002800000000282e-05, 8.037500000000058e-05, 8.036200000000049e-05, 8.008300000000163e-05, 8.08049999999963e-05]</msg>
<status status="PASS" starttime="20201117 14:48:28.532" endtime="20201117 14:48:28.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.519" endtime="20201117 14:48:28.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.545" endtime="20201117 14:48:28.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:28.554" endtime="20201117 14:48:28.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.549" endtime="20201117 14:48:28.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.540" endtime="20201117 14:48:28.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.994" endtime="20201117 14:48:28.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.989" endtime="20201117 14:48:28.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.988" endtime="20201117 14:48:28.582"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.610" endtime="20201117 14:48:28.633"></status>
</kw>
<msg timestamp="20201117 14:48:28.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.607" endtime="20201117 14:48:28.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.637" endtime="20201117 14:48:28.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.644" endtime="20201117 14:48:28.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.599" endtime="20201117 14:48:28.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.593" endtime="20201117 14:48:28.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.668" endtime="20201117 14:48:29.034"></status>
</kw>
<msg timestamp="20201117 14:48:29.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050203903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050285639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:28.665" endtime="20201117 14:48:29.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050203903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050285639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:29.045" endtime="20201117 14:48:29.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.065" endtime="20201117 14:48:29.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.657" endtime="20201117 14:48:29.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.652" endtime="20201117 14:48:29.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:29.084" level="INFO">${RESULT} = [{'time': 0.050285639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.173599999999892e-05, 'source_diff': 8.173599999999892e-05}, {'time': 0.050374708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:29.074" endtime="20201117 14:48:29.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:29.124" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:29.090" endtime="20201117 14:48:29.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.135" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:48:29.133" endtime="20201117 14:48:29.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.141" level="INFO">VALUE: [8.173599999999892e-05, 8.194400000000046e-05, 8.180600000000371e-05, 8.126399999999756e-05, 8.161099999999533e-05, 8.191600000000132e-05, 8.151399999999781e-05, 8.127699999999766e-05, 8.152799999999738e-05, 8.144499999999943e-05, 8.154200000000389e-05, 8.133300000000288e-05, 8.133299999999594e-05, 8.194499999999993e-05, 8.109799999999473e-05, 8.170899999999925e-05, 8.136100000000202e-05, 8.148599999999867e-05, 8.187500000000208e-05, 8.11249999999944e-05, 8.16520000000015e-05, 8.137500000000158e-05, 8.176399999999806e-05, 8.120799999999928e-05, 8.154199999999695e-05, 8.195800000000003e-05, 8.148599999999867e-05, 8.191699999999386e-05, 8.105600000000296e-05, 8.13190000000033e-05, 8.11119999999943e-05, 8.129099999999723e-05, 8.176399999999806e-05, 8.191600000000132e-05, 8.177800000000457e-05, 8.104200000000339e-05, 8.182000000000328e-05, 8.154200000000389e-05, 8.199999999999874e-05, 8.112500000000133e-05, 8.10970000000022e-05, 8.116700000000004e-05, 8.137500000000158e-05, 8.158299999999619e-05, 8.170799999999978e-05, 8.138900000000115e-05, 8.106900000000306e-05, 8.112500000000133e-05, 8.134700000000245e-05, 8.19170000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:48:29.138" endtime="20201117 14:48:29.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.126" endtime="20201117 14:48:29.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.151" endtime="20201117 14:48:29.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:29.159" endtime="20201117 14:48:29.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.155" endtime="20201117 14:48:29.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.146" endtime="20201117 14:48:29.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.589" endtime="20201117 14:48:29.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.585" endtime="20201117 14:48:29.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.583" endtime="20201117 14:48:29.187"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.192" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.215" endtime="20201117 14:48:29.238"></status>
</kw>
<msg timestamp="20201117 14:48:29.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:29.212" endtime="20201117 14:48:29.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:29.242" endtime="20201117 14:48:29.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.248" endtime="20201117 14:48:29.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.204" endtime="20201117 14:48:29.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.198" endtime="20201117 14:48:29.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.273" endtime="20201117 14:48:29.637"></status>
</kw>
<msg timestamp="20201117 14:48:29.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049802889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049885069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:29.270" endtime="20201117 14:48:29.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049802889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049885069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:29.647" endtime="20201117 14:48:29.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.668" endtime="20201117 14:48:29.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.262" endtime="20201117 14:48:29.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.257" endtime="20201117 14:48:29.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:29.688" level="INFO">${RESULT} = [{'time': 0.049885069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.21799999999942e-05, 'source_diff': 8.21799999999942e-05}, {'time': 0.049975083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:29.679" endtime="20201117 14:48:29.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:29.721" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:29.691" endtime="20201117 14:48:29.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.733" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:48:29.730" endtime="20201117 14:48:29.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.739" level="INFO">VALUE: [8.21799999999942e-05, 8.211099999999583e-05, 8.273599999999992e-05, 8.268000000000164e-05, 8.20970000000032e-05, 8.22640000000055e-05, 8.211099999999583e-05, 8.226399999999856e-05, 8.226399999999856e-05, 8.20840000000031e-05, 8.227800000000507e-05, 8.287500000000309e-05, 8.279200000000514e-05, 8.269399999999427e-05, 8.287499999999615e-05, 8.208299999999669e-05, 8.206899999999712e-05, 8.298600000000017e-05, 8.254199999999795e-05, 8.219500000000018e-05, 8.227799999999813e-05, 8.25840000000036e-05, 8.219399999999377e-05, 8.263899999999547e-05, 8.293100000000136e-05, 8.251399999999881e-05, 8.231899999999737e-05, 8.287499999999615e-05, 8.245800000000053e-05, 8.233300000000388e-05, 8.238900000000215e-05, 8.223599999999942e-05, 8.276399999999906e-05, 8.254199999999795e-05, 8.261100000000327e-05, 8.279200000000514e-05, 8.20970000000032e-05, 8.265299999999504e-05, 8.241699999999436e-05, 8.204100000000492e-05, 8.286100000000352e-05, 8.287500000000309e-05, 8.21249999999954e-05, 8.282000000000428e-05, 8.29170000000018e-05, 8.254200000000489e-05, 8.207000000000353e-05, 8.2944999999994e-05, 8.254199999999795e-05, 8.23049999999978e-05]</msg>
<status status="PASS" starttime="20201117 14:48:29.735" endtime="20201117 14:48:29.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.723" endtime="20201117 14:48:29.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.748" endtime="20201117 14:48:29.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:29.757" endtime="20201117 14:48:29.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.752" endtime="20201117 14:48:29.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.743" endtime="20201117 14:48:29.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.194" endtime="20201117 14:48:29.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.189" endtime="20201117 14:48:29.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.188" endtime="20201117 14:48:29.784"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.790" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.814" endtime="20201117 14:48:29.837"></status>
</kw>
<msg timestamp="20201117 14:48:29.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:29.810" endtime="20201117 14:48:29.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:29.841" endtime="20201117 14:48:29.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.847" endtime="20201117 14:48:29.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.802" endtime="20201117 14:48:29.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.796" endtime="20201117 14:48:29.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.873" endtime="20201117 14:48:30.238"></status>
</kw>
<msg timestamp="20201117 14:48:30.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050815125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050898875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:29.869" endtime="20201117 14:48:30.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050815125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050898875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:30.249" endtime="20201117 14:48:30.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.269" endtime="20201117 14:48:30.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.861" endtime="20201117 14:48:30.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.856" endtime="20201117 14:48:30.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:30.288" level="INFO">${RESULT} = [{'time': 0.050898875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.375000000000049e-05, 'source_diff': 8.375000000000049e-05}, {'time': 0.050996875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:30.278" endtime="20201117 14:48:30.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:30.320" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:30.290" endtime="20201117 14:48:30.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.332" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:48:30.329" endtime="20201117 14:48:30.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.338" level="INFO">VALUE: [8.375000000000049e-05, 8.345799999999459e-05, 8.390299999999629e-05, 8.390300000000323e-05, 8.386100000000452e-05, 8.359800000000417e-05, 8.345899999999407e-05, 8.351300000000034e-05, 8.336099999999708e-05, 8.377700000000016e-05, 8.358300000000513e-05, 8.386099999999758e-05, 8.380600000000571e-05, 8.306899999999812e-05, 8.390300000000323e-05, 8.380599999999877e-05, 8.36669999999956e-05, 8.311099999999683e-05, 8.324999999999999e-05, 8.368100000000211e-05, 8.312500000000334e-05, 8.352699999999991e-05, 8.391600000000332e-05, 8.331899999999837e-05, 8.323600000000042e-05, 8.398600000000117e-05, 8.354199999999895e-05, 8.330600000000521e-05, 8.348600000000067e-05, 8.311099999999683e-05, 8.354200000000589e-05, 8.400000000000074e-05, 8.350000000000024e-05, 8.345800000000153e-05, 8.34720000000011e-05, 8.390200000000375e-05, 8.395800000000203e-05, 8.32640000000065e-05, 8.333299999999794e-05, 8.3944999999995e-05, 8.3459000000001e-05, 8.308299999999769e-05, 8.343099999999493e-05, 8.304199999999845e-05, 8.369500000000168e-05, 8.370800000000178e-05, 8.395800000000203e-05, 8.395800000000203e-05, 8.323600000000042e-05, 8.366600000000307e-05]</msg>
<status status="PASS" starttime="20201117 14:48:30.334" endtime="20201117 14:48:30.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.322" endtime="20201117 14:48:30.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.347" endtime="20201117 14:48:30.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:30.356" endtime="20201117 14:48:30.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.351" endtime="20201117 14:48:30.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.342" endtime="20201117 14:48:30.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.792" endtime="20201117 14:48:30.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.787" endtime="20201117 14:48:30.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.785" endtime="20201117 14:48:30.383"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.389" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.412" endtime="20201117 14:48:30.435"></status>
</kw>
<msg timestamp="20201117 14:48:30.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:30.409" endtime="20201117 14:48:30.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:30.438" endtime="20201117 14:48:30.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.446" endtime="20201117 14:48:30.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.401" endtime="20201117 14:48:30.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.395" endtime="20201117 14:48:30.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.471" endtime="20201117 14:48:30.834"></status>
</kw>
<msg timestamp="20201117 14:48:30.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049693764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049778319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:30.467" endtime="20201117 14:48:30.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049693764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049778319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:30.845" endtime="20201117 14:48:30.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.866" endtime="20201117 14:48:30.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.460" endtime="20201117 14:48:30.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.455" endtime="20201117 14:48:30.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:30.886" level="INFO">${RESULT} = [{'time': 0.049778319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.455500000000005e-05, 'source_diff': 8.455500000000005e-05}, {'time': 0.049873319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:30.877" endtime="20201117 14:48:30.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:30.919" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:30.888" endtime="20201117 14:48:30.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.931" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:48:30.928" endtime="20201117 14:48:30.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.937" level="INFO">VALUE: [8.455500000000005e-05, 8.419400000000271e-05, 8.406899999999912e-05, 8.495799999999609e-05, 8.4846999999999e-05, 8.500000000000174e-05, 8.416700000000304e-05, 8.452800000000038e-05, 8.490299999999729e-05, 8.431999999999884e-05, 8.431999999999884e-05, 8.41249999999974e-05, 8.476400000000106e-05, 8.469400000000321e-05, 8.431899999999937e-05, 8.43469999999985e-05, 8.437500000000459e-05, 8.425000000000099e-05, 8.472200000000235e-05, 8.458300000000613e-05, 8.480599999999977e-05, 8.42919999999997e-05, 8.481999999999934e-05, 8.47920000000002e-05, 8.505600000000002e-05, 8.437500000000459e-05, 8.44720000000021e-05, 8.498600000000217e-05, 8.443000000000339e-05, 8.4846999999999e-05, 8.463899999999747e-05, 8.494400000000346e-05, 8.415300000000348e-05, 8.455599999999952e-05, 8.408299999999869e-05, 8.402799999999988e-05, 8.42370000000009e-05, 8.475000000000149e-05, 8.402699999999347e-05, 8.483300000000638e-05, 8.429100000000023e-05, 8.43469999999985e-05, 8.486100000000552e-05, 8.458300000000613e-05, 8.433300000000588e-05, 8.413899999999697e-05, 8.420900000000175e-05, 8.466700000000354e-05, 8.487499999999815e-05, 8.423599999999448e-05]</msg>
<status status="PASS" starttime="20201117 14:48:30.933" endtime="20201117 14:48:30.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.921" endtime="20201117 14:48:30.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.946" endtime="20201117 14:48:30.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:30.955" endtime="20201117 14:48:30.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.950" endtime="20201117 14:48:30.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.941" endtime="20201117 14:48:30.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.391" endtime="20201117 14:48:30.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.386" endtime="20201117 14:48:30.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.384" endtime="20201117 14:48:30.983"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.988" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.008" endtime="20201117 14:48:31.026"></status>
</kw>
<msg timestamp="20201117 14:48:31.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:31.006" endtime="20201117 14:48:31.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:31.028" endtime="20201117 14:48:31.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.031" endtime="20201117 14:48:31.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.000" endtime="20201117 14:48:31.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.994" endtime="20201117 14:48:31.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.043" endtime="20201117 14:48:31.330"></status>
</kw>
<msg timestamp="20201117 14:48:31.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044697597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044783222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:31.041" endtime="20201117 14:48:31.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044697597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044783222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:31.334" endtime="20201117 14:48:31.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.343" endtime="20201117 14:48:31.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.037" endtime="20201117 14:48:31.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.035" endtime="20201117 14:48:31.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:31.351" level="INFO">${RESULT} = [{'time': 0.044783222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.56249999999989e-05, 'source_diff': 8.56249999999989e-05}, {'time': 0.044880208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:31.347" endtime="20201117 14:48:31.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:31.367" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:31.352" endtime="20201117 14:48:31.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.373" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:48:31.371" endtime="20201117 14:48:31.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.375" level="INFO">VALUE: [8.56249999999989e-05, 8.516599999999763e-05, 8.513899999999797e-05, 8.552800000000138e-05, 8.587499999999915e-05, 8.583300000000044e-05, 8.591699999999786e-05, 8.504200000000045e-05, 8.56799999999977e-05, 8.583399999999991e-05, 8.588899999999872e-05, 8.588799999999924e-05, 8.502800000000088e-05, 8.576399999999512e-05, 8.51249999999984e-05, 8.556900000000062e-05, 8.502800000000088e-05, 8.572200000000335e-05, 8.537499999999865e-05, 8.586099999999958e-05, 8.565300000000498e-05, 8.509799999999873e-05, 8.56669999999976e-05, 8.543100000000386e-05, 8.52370000000019e-05, 8.576399999999512e-05, 8.573599999999598e-05, 8.583300000000044e-05, 8.586099999999958e-05, 8.59170000000048e-05, 8.568100000000411e-05, 8.504200000000045e-05, 8.565299999999804e-05, 8.531999999999984e-05, 8.580600000000077e-05, 8.558399999999966e-05, 8.505500000000055e-05, 8.602799999999494e-05, 8.566600000000507e-05, 8.576399999999512e-05, 8.587499999999915e-05, 8.511099999999883e-05, 8.523599999999548e-05, 8.536099999999908e-05, 8.520799999999634e-05, 8.580599999999383e-05, 8.598600000000317e-05, 8.56249999999989e-05, 8.525000000000199e-05, 8.554100000000148e-05]</msg>
<status status="PASS" starttime="20201117 14:48:31.374" endtime="20201117 14:48:31.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.368" endtime="20201117 14:48:31.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.379" endtime="20201117 14:48:31.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:31.384" endtime="20201117 14:48:31.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.381" endtime="20201117 14:48:31.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.377" endtime="20201117 14:48:31.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.990" endtime="20201117 14:48:31.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.985" endtime="20201117 14:48:31.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.984" endtime="20201117 14:48:31.406"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.409" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.419" endtime="20201117 14:48:31.437"></status>
</kw>
<msg timestamp="20201117 14:48:31.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:31.418" endtime="20201117 14:48:31.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:31.439" endtime="20201117 14:48:31.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.442" endtime="20201117 14:48:31.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.414" endtime="20201117 14:48:31.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.411" endtime="20201117 14:48:31.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.454" endtime="20201117 14:48:31.740"></status>
</kw>
<msg timestamp="20201117 14:48:31.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028248278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0283345, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:31.452" endtime="20201117 14:48:31.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028248278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0283345, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:31.744" endtime="20201117 14:48:31.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.753" endtime="20201117 14:48:31.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.449" endtime="20201117 14:48:31.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.446" endtime="20201117 14:48:31.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:31.763" level="INFO">${RESULT} = [{'time': 0.0283345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.622199999999691e-05, 'source_diff': 8.622199999999691e-05}, {'time': 0.0284345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201117 14:48:31.758" endtime="20201117 14:48:31.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:31.777" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:31.764" endtime="20201117 14:48:31.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.782" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:48:31.781" endtime="20201117 14:48:31.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.785" level="INFO">VALUE: [8.622199999999691e-05, 8.606900000000112e-05, 8.620900000000029e-05, 8.66669999999986e-05, 8.695900000000104e-05, 8.687500000000015e-05, 8.657000000000109e-05, 8.629100000000223e-05, 8.629099999999876e-05, 8.636100000000008e-05, 8.658300000000119e-05, 8.66249999999999e-05, 8.605499999999808e-05, 8.620800000000081e-05, 8.61669999999981e-05, 8.656900000000162e-05, 8.64310000000014e-05, 8.604200000000145e-05, 8.668000000000217e-05, 8.602700000000241e-05, 8.626399999999909e-05, 8.680499999999883e-05, 8.675000000000002e-05, 8.602800000000188e-05, 8.649999999999977e-05, 8.665299999999904e-05, 8.61669999999981e-05, 8.663899999999947e-05, 8.623599999999995e-05, 8.690299999999929e-05, 8.686200000000005e-05, 8.637499999999965e-05, 8.669399999999827e-05, 8.629100000000223e-05, 8.680600000000177e-05, 8.658300000000119e-05, 8.681899999999493e-05, 8.61249999999994e-05, 8.645899999999707e-05, 8.616700000000505e-05, 8.654200000000195e-05, 8.675000000000349e-05, 8.604199999999451e-05, 8.679199999999526e-05, 8.673600000000392e-05, 8.609700000000026e-05, 8.668000000000564e-05, 8.648599999999673e-05, 8.692999999999895e-05, 8.605600000000102e-05]</msg>
<status status="PASS" starttime="20201117 14:48:31.783" endtime="20201117 14:48:31.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.778" endtime="20201117 14:48:31.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.790" endtime="20201117 14:48:31.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:31.794" endtime="20201117 14:48:31.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.792" endtime="20201117 14:48:31.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.788" endtime="20201117 14:48:31.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.409" endtime="20201117 14:48:31.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.407" endtime="20201117 14:48:31.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.406" endtime="20201117 14:48:31.816"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.818" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.829" endtime="20201117 14:48:31.848"></status>
</kw>
<msg timestamp="20201117 14:48:31.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:31.827" endtime="20201117 14:48:31.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:31.849" endtime="20201117 14:48:31.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.853" endtime="20201117 14:48:31.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.824" endtime="20201117 14:48:31.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.821" endtime="20201117 14:48:31.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.864" endtime="20201117 14:48:32.215"></status>
</kw>
<msg timestamp="20201117 14:48:32.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027873306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027961097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:31.862" endtime="20201117 14:48:32.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027873306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027961097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:32.225" endtime="20201117 14:48:32.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.246" endtime="20201117 14:48:32.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.859" endtime="20201117 14:48:32.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.857" endtime="20201117 14:48:32.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:32.264" level="INFO">${RESULT} = [{'time': 0.027961097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.779100000000026e-05, 'source_diff': 8.779100000000026e-05}, {'time': 0.028064097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:32.254" endtime="20201117 14:48:32.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:32.297" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:32.266" endtime="20201117 14:48:32.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.308" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:48:32.306" endtime="20201117 14:48:32.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.315" level="INFO">VALUE: [8.779100000000026e-05, 8.78189999999994e-05, 8.758299999999872e-05, 8.761100000000133e-05, 8.73059999999988e-05, 8.780600000000277e-05, 8.795900000000204e-05, 8.782000000000234e-05, 8.723599999999748e-05, 8.786200000000105e-05, 8.720800000000181e-05, 8.740200000000031e-05, 8.702699999999994e-05, 8.769400000000274e-05, 8.784699999999854e-05, 8.752799999999991e-05, 8.795799999999909e-05, 8.779199999999973e-05, 8.736100000000108e-05, 8.755599999999905e-05, 8.786200000000105e-05, 8.741599999999988e-05, 8.774999999999755e-05, 8.758299999999872e-05, 8.713899999999997e-05, 8.719399999999877e-05, 8.768099999999918e-05, 8.752799999999991e-05, 8.74860000000012e-05, 8.783299999999897e-05, 8.72920000000027e-05, 8.736100000000108e-05, 8.711100000000083e-05, 8.712499999999693e-05, 8.775000000000102e-05, 8.711099999999389e-05, 8.73050000000028e-05, 8.708300000000169e-05, 8.783300000000244e-05, 8.718099999999868e-05, 8.773599999999798e-05, 8.790300000000029e-05, 8.729199999999576e-05, 8.748600000000467e-05, 8.722200000000485e-05, 8.72920000000027e-05, 8.773599999999798e-05, 8.736100000000108e-05, 8.702700000000341e-05, 8.790300000000029e-05]</msg>
<status status="PASS" starttime="20201117 14:48:32.311" endtime="20201117 14:48:32.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.299" endtime="20201117 14:48:32.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.325" endtime="20201117 14:48:32.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:32.333" endtime="20201117 14:48:32.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.329" endtime="20201117 14:48:32.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.319" endtime="20201117 14:48:32.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.819" endtime="20201117 14:48:32.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.817" endtime="20201117 14:48:32.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.816" endtime="20201117 14:48:32.361"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.366" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.389" endtime="20201117 14:48:32.412"></status>
</kw>
<msg timestamp="20201117 14:48:32.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:32.386" endtime="20201117 14:48:32.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:32.416" endtime="20201117 14:48:32.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.423" endtime="20201117 14:48:32.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.378" endtime="20201117 14:48:32.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.372" endtime="20201117 14:48:32.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.448" endtime="20201117 14:48:32.811"></status>
</kw>
<msg timestamp="20201117 14:48:32.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0494205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049509069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:32.444" endtime="20201117 14:48:32.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0494205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049509069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:32.821" endtime="20201117 14:48:32.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.842" endtime="20201117 14:48:32.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.436" endtime="20201117 14:48:32.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.431" endtime="20201117 14:48:32.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:32.862" level="INFO">${RESULT} = [{'time': 0.049509069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.856900000000362e-05, 'source_diff': 8.856900000000362e-05}, {'time': 0.049605083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:32.852" endtime="20201117 14:48:32.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:32.896" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:32.865" endtime="20201117 14:48:32.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.908" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:48:32.905" endtime="20201117 14:48:32.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.914" level="INFO">VALUE: [8.856900000000362e-05, 8.895800000000009e-05, 8.874999999999855e-05, 8.81670000000001e-05, 8.852799999999744e-05, 8.88199999999964e-05, 8.875000000000549e-05, 8.818099999999968e-05, 8.820899999999882e-05, 8.83199999999959e-05, 8.851399999999787e-05, 8.884700000000301e-05, 8.894400000000052e-05, 8.802799999999694e-05, 8.886100000000258e-05, 8.851400000000481e-05, 8.852800000000438e-05, 8.811100000000183e-05, 8.893100000000043e-05, 8.800000000000474e-05, 8.865300000000104e-05, 8.822299999999839e-05, 8.812499999999446e-05, 8.886100000000258e-05, 8.88050000000043e-05, 8.81800000000002e-05, 8.813900000000097e-05, 8.840300000000079e-05, 8.834700000000251e-05, 8.86670000000006e-05, 8.869400000000027e-05, 8.829199999999676e-05, 8.852800000000438e-05, 8.883399999999597e-05, 8.824999999999805e-05, 8.824999999999805e-05, 8.865200000000156e-05, 8.852699999999797e-05, 8.804200000000345e-05, 8.845800000000653e-05, 8.869499999999975e-05, 8.887499999999521e-05, 8.824999999999805e-05, 8.880600000000377e-05, 8.852799999999744e-05, 8.833400000000241e-05, 8.832000000000284e-05, 8.829099999999729e-05, 8.874999999999855e-05, 8.798600000000517e-05]</msg>
<status status="PASS" starttime="20201117 14:48:32.911" endtime="20201117 14:48:32.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.898" endtime="20201117 14:48:32.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.924" endtime="20201117 14:48:32.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:32.933" endtime="20201117 14:48:32.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.928" endtime="20201117 14:48:32.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.919" endtime="20201117 14:48:32.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.368" endtime="20201117 14:48:32.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.364" endtime="20201117 14:48:32.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.362" endtime="20201117 14:48:32.960"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.966" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.989" endtime="20201117 14:48:33.012"></status>
</kw>
<msg timestamp="20201117 14:48:33.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:32.985" endtime="20201117 14:48:33.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:33.015" endtime="20201117 14:48:33.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.022" endtime="20201117 14:48:33.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.978" endtime="20201117 14:48:33.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.972" endtime="20201117 14:48:33.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.047" endtime="20201117 14:48:33.413"></status>
</kw>
<msg timestamp="20201117 14:48:33.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050282347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050372042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:33.044" endtime="20201117 14:48:33.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050282347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050372042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:33.423" endtime="20201117 14:48:33.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.444" endtime="20201117 14:48:33.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.036" endtime="20201117 14:48:33.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.031" endtime="20201117 14:48:33.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:33.463" level="INFO">${RESULT} = [{'time': 0.050372042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.969500000000075e-05, 'source_diff': 8.969500000000075e-05}, {'time': 0.050477056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:33.453" endtime="20201117 14:48:33.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:33.498" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:33.465" endtime="20201117 14:48:33.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.510" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:48:33.508" endtime="20201117 14:48:33.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.516" level="INFO">VALUE: [8.969500000000075e-05, 8.980599999999783e-05, 8.969400000000127e-05, 8.926399999999862e-05, 8.902700000000541e-05, 8.98329999999975e-05, 8.908299999999675e-05, 8.943100000000093e-05, 8.911100000000283e-05, 8.956999999999715e-05, 8.924999999999905e-05, 8.920899999999982e-05, 8.920899999999982e-05, 8.986099999999664e-05, 8.94999999999993e-05, 8.924999999999905e-05, 8.924999999999905e-05, 8.973599999999998e-05, 8.931899999999743e-05, 8.92920000000047e-05, 8.993100000000143e-05, 8.933400000000341e-05, 8.977799999999869e-05, 8.977799999999869e-05, 8.954200000000495e-05, 8.937500000000265e-05, 8.947200000000016e-05, 8.977800000000563e-05, 8.958300000000419e-05, 8.941699999999442e-05, 8.926399999999862e-05, 8.947200000000016e-05, 8.98329999999975e-05, 8.958399999999672e-05, 8.952699999999897e-05, 8.974999999999955e-05, 8.923599999999948e-05, 8.933300000000394e-05, 8.983300000000444e-05, 8.926399999999862e-05, 8.961099999999639e-05, 8.926400000000556e-05, 8.994400000000152e-05, 8.959700000000376e-05, 8.91250000000024e-05, 8.970900000000032e-05, 8.96670000000016e-05, 8.936199999999561e-05, 8.991700000000186e-05, 8.958299999999725e-05]</msg>
<status status="PASS" starttime="20201117 14:48:33.513" endtime="20201117 14:48:33.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.501" endtime="20201117 14:48:33.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.525" endtime="20201117 14:48:33.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:33.534" endtime="20201117 14:48:33.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.530" endtime="20201117 14:48:33.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.520" endtime="20201117 14:48:33.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.967" endtime="20201117 14:48:33.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.963" endtime="20201117 14:48:33.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.961" endtime="20201117 14:48:33.562"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.567" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.591" endtime="20201117 14:48:33.614"></status>
</kw>
<msg timestamp="20201117 14:48:33.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:33.587" endtime="20201117 14:48:33.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:33.617" endtime="20201117 14:48:33.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.624" endtime="20201117 14:48:33.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.579" endtime="20201117 14:48:33.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.573" endtime="20201117 14:48:33.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.650" endtime="20201117 14:48:34.016"></status>
</kw>
<msg timestamp="20201117 14:48:34.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0512525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051342833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:33.646" endtime="20201117 14:48:34.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0512525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051342833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:34.026" endtime="20201117 14:48:34.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.047" endtime="20201117 14:48:34.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.638" endtime="20201117 14:48:34.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.633" endtime="20201117 14:48:34.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:34.067" level="INFO">${RESULT} = [{'time': 0.051342833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.0332999999998e-05, 'source_diff': 9.0332999999998e-05}, {'time': 0.051441861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201117 14:48:34.057" endtime="20201117 14:48:34.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:34.100" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:34.069" endtime="20201117 14:48:34.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.112" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:48:34.109" endtime="20201117 14:48:34.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.117" level="INFO">VALUE: [9.0332999999998e-05, 9.009699999999732e-05, 9.01250000000034e-05, 9.052799999999944e-05, 9.075000000000055e-05, 9.090299999999635e-05, 9.063899999999653e-05, 9.015300000000254e-05, 8.997300000000014e-05, 9.05130000000004e-05, 9.081900000000587e-05, 9.047200000000116e-05, 9.005499999999861e-05, 9.077799999999969e-05, 9.041699999999542e-05, 9.01250000000034e-05, 9.020900000000082e-05, 9.0945000000002e-05, 9.08199999999984e-05, 9.04450000000015e-05, 9.093000000000295e-05, 9.090199999999687e-05, 9.03050000000058e-05, 9.023600000000048e-05, 9.08050000000063e-05, 9.041700000000236e-05, 9.011099999999689e-05, 9.070800000000184e-05, 9.055599999999858e-05, 9.070800000000184e-05, 9.048600000000073e-05, 9.072300000000089e-05, 9.004099999999904e-05, 9.076400000000012e-05, 9.047200000000116e-05, 9.070800000000184e-05, 9.052799999999944e-05, 9.008299999999775e-05, 9.054199999999901e-05, 9.048600000000073e-05, 9.08199999999984e-05, 9.055599999999858e-05, 9.01250000000034e-05, 9.026399999999962e-05, 9.033399999999747e-05, 9.077799999999969e-05, 9.044400000000202e-05, 9.006899999999818e-05, 9.025000000000005e-05, 9.020800000000134e-05]</msg>
<status status="PASS" starttime="20201117 14:48:34.114" endtime="20201117 14:48:34.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.102" endtime="20201117 14:48:34.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.127" endtime="20201117 14:48:34.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:34.136" endtime="20201117 14:48:34.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.131" endtime="20201117 14:48:34.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.122" endtime="20201117 14:48:34.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.568" endtime="20201117 14:48:34.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.564" endtime="20201117 14:48:34.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.563" endtime="20201117 14:48:34.163"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.169" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.192" endtime="20201117 14:48:34.215"></status>
</kw>
<msg timestamp="20201117 14:48:34.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:34.188" endtime="20201117 14:48:34.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:34.219" endtime="20201117 14:48:34.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.227" endtime="20201117 14:48:34.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.180" endtime="20201117 14:48:34.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.174" endtime="20201117 14:48:34.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.252" endtime="20201117 14:48:34.619"></status>
</kw>
<msg timestamp="20201117 14:48:34.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049628653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049719819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:34.248" endtime="20201117 14:48:34.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049628653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049719819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:34.631" endtime="20201117 14:48:34.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.653" endtime="20201117 14:48:34.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.241" endtime="20201117 14:48:34.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.236" endtime="20201117 14:48:34.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:34.672" level="INFO">${RESULT} = [{'time': 0.049719819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.11659999999967e-05, 'source_diff': 9.11659999999967e-05}, {'time': 0.049819847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:34.662" endtime="20201117 14:48:34.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:34.705" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:34.674" endtime="20201117 14:48:34.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.717" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:48:34.714" endtime="20201117 14:48:34.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.723" level="INFO">VALUE: [9.11659999999967e-05, 9.130499999999986e-05, 9.173599999999504e-05, 9.122200000000191e-05, 9.19859999999953e-05, 9.126399999999368e-05, 9.119399999999583e-05, 9.137500000000465e-05, 9.169499999999581e-05, 9.183399999999897e-05, 9.127800000000019e-05, 9.134799999999804e-05, 9.102699999999353e-05, 9.136100000000508e-05, 9.143100000000293e-05, 9.141700000000336e-05, 9.113900000000397e-05, 9.20000000000018e-05, 9.179200000000026e-05, 9.138899999999728e-05, 9.184699999999907e-05, 9.108399999999822e-05, 9.101400000000037e-05, 9.165199999999762e-05, 9.20000000000018e-05, 9.143000000000345e-05, 9.102799999999994e-05, 9.112499999999746e-05, 9.184699999999907e-05, 9.16529999999971e-05, 9.14450000000025e-05, 9.198600000000223e-05, 9.141699999999642e-05, 9.192999999999701e-05, 9.195800000000309e-05, 9.122200000000191e-05, 9.18329999999995e-05, 9.125000000000105e-05, 9.102799999999994e-05, 9.194399999999658e-05, 9.18329999999995e-05, 9.193100000000343e-05, 9.120800000000234e-05, 9.14450000000025e-05, 9.113899999999703e-05, 9.18879999999983e-05, 9.125000000000105e-05, 9.106899999999918e-05, 9.177700000000122e-05, 9.163900000000447e-05]</msg>
<status status="PASS" starttime="20201117 14:48:34.719" endtime="20201117 14:48:34.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.707" endtime="20201117 14:48:34.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.732" endtime="20201117 14:48:34.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:34.742" endtime="20201117 14:48:34.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.737" endtime="20201117 14:48:34.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.728" endtime="20201117 14:48:34.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.170" endtime="20201117 14:48:34.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.166" endtime="20201117 14:48:34.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.164" endtime="20201117 14:48:34.769"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.775" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.798" endtime="20201117 14:48:34.822"></status>
</kw>
<msg timestamp="20201117 14:48:34.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:34.795" endtime="20201117 14:48:34.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:34.826" endtime="20201117 14:48:34.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.833" endtime="20201117 14:48:34.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.786" endtime="20201117 14:48:34.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.780" endtime="20201117 14:48:34.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.860" endtime="20201117 14:48:35.210"></status>
</kw>
<msg timestamp="20201117 14:48:35.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050588472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050681097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:34.857" endtime="20201117 14:48:35.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050588472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050681097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:35.214" endtime="20201117 14:48:35.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.223" endtime="20201117 14:48:35.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.849" endtime="20201117 14:48:35.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.844" endtime="20201117 14:48:35.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:35.233" level="INFO">${RESULT} = [{'time': 0.050681097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.262499999999896e-05, 'source_diff': 9.262499999999896e-05}, {'time': 0.050777111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:35.228" endtime="20201117 14:48:35.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:35.247" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:35.234" endtime="20201117 14:48:35.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.252" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:48:35.251" endtime="20201117 14:48:35.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.258" level="INFO">VALUE: [9.262499999999896e-05, 9.209699999999932e-05, 9.231900000000043e-05, 9.226400000000162e-05, 9.225000000000205e-05, 9.2333e-05, 9.295800000000409e-05, 9.223600000000248e-05, 9.204200000000051e-05, 9.217999999999726e-05, 9.270800000000384e-05, 9.297199999999672e-05, 9.295800000000409e-05, 9.291599999999844e-05, 9.244400000000402e-05, 9.219400000000377e-05, 9.270800000000384e-05, 9.233399999999947e-05, 9.283399999999997e-05, 9.251400000000187e-05, 9.266600000000513e-05, 9.265300000000504e-05, 9.298600000000323e-05, 9.254100000000154e-05, 9.295799999999715e-05, 9.291699999999792e-05, 9.237499999999871e-05, 9.2333e-05, 9.294499999999706e-05, 9.227800000000119e-05, 9.280600000000083e-05, 9.216600000000463e-05, 9.255500000000111e-05, 9.274999999999561e-05, 9.240199999999837e-05, 9.2333e-05, 9.272199999999647e-05, 9.26529999999981e-05, 9.211099999999889e-05, 9.273600000000298e-05, 9.206999999999965e-05, 9.233399999999947e-05, 9.293099999999749e-05, 9.295900000000357e-05, 9.222199999999597e-05, 9.2333e-05, 9.26659999999982e-05, 9.229200000000076e-05, 9.208299999999975e-05, 9.2333e-05]</msg>
<status status="PASS" starttime="20201117 14:48:35.254" endtime="20201117 14:48:35.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.248" endtime="20201117 14:48:35.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.267" endtime="20201117 14:48:35.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:35.276" endtime="20201117 14:48:35.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.271" endtime="20201117 14:48:35.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.262" endtime="20201117 14:48:35.302"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.776" endtime="20201117 14:48:35.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.772" endtime="20201117 14:48:35.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.770" endtime="20201117 14:48:35.304"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.310" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.333" endtime="20201117 14:48:35.356"></status>
</kw>
<msg timestamp="20201117 14:48:35.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:35.329" endtime="20201117 14:48:35.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:35.360" endtime="20201117 14:48:35.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.367" endtime="20201117 14:48:35.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.322" endtime="20201117 14:48:35.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.316" endtime="20201117 14:48:35.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.392" endtime="20201117 14:48:35.757"></status>
</kw>
<msg timestamp="20201117 14:48:35.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051170681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051264069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:35.388" endtime="20201117 14:48:35.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051170681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051264069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:35.768" endtime="20201117 14:48:35.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.788" endtime="20201117 14:48:35.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.380" endtime="20201117 14:48:35.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.375" endtime="20201117 14:48:35.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:35.807" level="INFO">${RESULT} = [{'time': 0.051264069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.33879999999998e-05, 'source_diff': 9.33879999999998e-05}, {'time': 0.051363042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:35.798" endtime="20201117 14:48:35.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:35.843" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:35.810" endtime="20201117 14:48:35.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.855" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:48:35.852" endtime="20201117 14:48:35.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.860" level="INFO">VALUE: [9.33879999999998e-05, 9.36529999999991e-05, 9.390299999999935e-05, 9.307000000000065e-05, 9.334700000000057e-05, 9.35279999999955e-05, 9.365199999999962e-05, 9.352800000000244e-05, 9.361100000000039e-05, 9.323600000000348e-05, 9.388899999999978e-05, 9.330600000000133e-05, 9.355600000000158e-05, 9.337499999999971e-05, 9.315199999999912e-05, 9.3027999999995e-05, 9.347300000000364e-05, 9.35000000000033e-05, 9.387500000000021e-05, 9.388899999999978e-05, 9.367999999999876e-05, 9.319400000000477e-05, 9.313899999999903e-05, 9.316699999999817e-05, 9.341699999999842e-05, 9.320899999999688e-05, 9.363899999999953e-05, 9.384699999999413e-05, 9.390199999999987e-05, 9.383299999999456e-05, 9.37079999999979e-05, 9.34859999999968e-05, 9.376399999999618e-05, 9.37079999999979e-05, 9.312499999999946e-05, 9.34859999999968e-05, 9.397199999999772e-05, 9.304200000000151e-05, 9.323700000000296e-05, 9.308300000000075e-05, 9.304100000000204e-05, 9.386100000000064e-05, 9.329099999999535e-05, 9.345800000000459e-05, 9.383399999999403e-05, 9.361100000000039e-05, 9.358400000000072e-05, 9.341699999999842e-05, 9.33200000000009e-05, 9.402699999999653e-05]</msg>
<status status="PASS" starttime="20201117 14:48:35.857" endtime="20201117 14:48:35.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.845" endtime="20201117 14:48:35.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.871" endtime="20201117 14:48:35.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:35.880" endtime="20201117 14:48:35.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.875" endtime="20201117 14:48:35.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.866" endtime="20201117 14:48:35.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.312" endtime="20201117 14:48:35.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.307" endtime="20201117 14:48:35.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.305" endtime="20201117 14:48:35.907"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.912" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.936" endtime="20201117 14:48:35.959"></status>
</kw>
<msg timestamp="20201117 14:48:35.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:35.932" endtime="20201117 14:48:35.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:35.963" endtime="20201117 14:48:35.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.970" endtime="20201117 14:48:35.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.924" endtime="20201117 14:48:35.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.918" endtime="20201117 14:48:35.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.995" endtime="20201117 14:48:36.361"></status>
</kw>
<msg timestamp="20201117 14:48:36.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049720403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049814792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:35.992" endtime="20201117 14:48:36.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049720403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049814792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:36.371" endtime="20201117 14:48:36.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.391" endtime="20201117 14:48:36.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.984" endtime="20201117 14:48:36.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.978" endtime="20201117 14:48:36.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:36.412" level="INFO">${RESULT} = [{'time': 0.049814792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.438899999999334e-05, 'source_diff': 9.438899999999334e-05}, {'time': 0.049918819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:36.402" endtime="20201117 14:48:36.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:36.444" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:36.414" endtime="20201117 14:48:36.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.456" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:48:36.453" endtime="20201117 14:48:36.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.462" level="INFO">VALUE: [9.438899999999334e-05, 9.487500000000121e-05, 9.461200000000086e-05, 9.476400000000412e-05, 9.415200000000012e-05, 9.46660000000002e-05, 9.480500000000336e-05, 9.448600000000473e-05, 9.477799999999675e-05, 9.493099999999949e-05, 9.462500000000096e-05, 9.445899999999813e-05, 9.404199999999557e-05, 9.490300000000035e-05, 9.402700000000347e-05, 9.487500000000121e-05, 9.445799999999865e-05, 9.469399999999933e-05, 9.405600000000208e-05, 9.483299999999556e-05, 9.401399999999643e-05, 9.445799999999865e-05, 9.426400000000362e-05, 9.430600000000233e-05, 9.434699999999463e-05, 9.445799999999865e-05, 9.406900000000218e-05, 9.48330000000025e-05, 9.429100000000329e-05, 9.497199999999872e-05, 9.488900000000078e-05, 9.480600000000283e-05, 9.48200000000024e-05, 9.499999999999786e-05, 9.433400000000147e-05, 9.488900000000078e-05, 9.494399999999958e-05, 9.413900000000003e-05, 9.417999999999926e-05, 9.412500000000046e-05, 9.429200000000276e-05, 9.45000000000043e-05, 9.41529999999996e-05, 9.48200000000024e-05, 9.474999999999761e-05, 9.46530000000001e-05, 9.493000000000001e-05, 9.477800000000369e-05, 9.473599999999804e-05, 9.486100000000164e-05]</msg>
<status status="PASS" starttime="20201117 14:48:36.458" endtime="20201117 14:48:36.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.446" endtime="20201117 14:48:36.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.472" endtime="20201117 14:48:36.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:36.481" endtime="20201117 14:48:36.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.476" endtime="20201117 14:48:36.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.467" endtime="20201117 14:48:36.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.914" endtime="20201117 14:48:36.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.910" endtime="20201117 14:48:36.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.908" endtime="20201117 14:48:36.508"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.514" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.537" endtime="20201117 14:48:36.560"></status>
</kw>
<msg timestamp="20201117 14:48:36.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:36.534" endtime="20201117 14:48:36.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:36.563" endtime="20201117 14:48:36.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.570" endtime="20201117 14:48:36.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.526" endtime="20201117 14:48:36.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.520" endtime="20201117 14:48:36.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.595" endtime="20201117 14:48:36.962"></status>
</kw>
<msg timestamp="20201117 14:48:36.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049796167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049892111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:36.592" endtime="20201117 14:48:36.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049796167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049892111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:36.973" endtime="20201117 14:48:36.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.993" endtime="20201117 14:48:36.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.584" endtime="20201117 14:48:36.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.579" endtime="20201117 14:48:37.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:37.012" level="INFO">${RESULT} = [{'time': 0.049892111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.594400000000058e-05, 'source_diff': 9.594400000000058e-05}, {'time': 0.049992125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:37.002" endtime="20201117 14:48:37.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:37.046" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:37.015" endtime="20201117 14:48:37.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.058" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:48:37.056" endtime="20201117 14:48:37.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.064" level="INFO">VALUE: [9.594400000000058e-05, 9.524999999999811e-05, 9.555600000000358e-05, 9.590300000000135e-05, 9.587500000000221e-05, 9.543000000000051e-05, 9.54729999999987e-05, 9.594500000000006e-05, 9.537500000000171e-05, 9.516700000000017e-05, 9.580600000000383e-05, 9.509700000000232e-05, 9.587500000000221e-05, 9.548699999999827e-05, 9.570899999999938e-05, 9.53200000000029e-05, 9.540299999999391e-05, 9.599999999999886e-05, 9.572199999999947e-05, 9.555500000000411e-05, 9.579099999999785e-05, 9.572299999999895e-05, 9.540300000000085e-05, 9.504199999999657e-05, 9.53200000000029e-05, 9.58479999999956e-05, 9.569400000000033e-05, 9.551399999999793e-05, 9.561099999999545e-05, 9.587500000000221e-05, 9.55409999999976e-05, 9.595800000000015e-05, 9.540300000000085e-05, 9.506899999999624e-05, 9.551399999999793e-05, 9.55130000000054e-05, 9.512499999999452e-05, 9.587500000000221e-05, 9.566699999999373e-05, 9.554199999999707e-05, 9.56530000000011e-05, 9.522200000000591e-05, 9.545800000000659e-05, 9.527799999999725e-05, 9.5027999999997e-05, 9.529199999999682e-05, 9.512500000000146e-05, 9.565199999999469e-05, 9.531999999999596e-05, 9.511099999999495e-05]</msg>
<status status="PASS" starttime="20201117 14:48:37.060" endtime="20201117 14:48:37.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.048" endtime="20201117 14:48:37.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.073" endtime="20201117 14:48:37.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:37.082" endtime="20201117 14:48:37.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.078" endtime="20201117 14:48:37.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.068" endtime="20201117 14:48:37.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.515" endtime="20201117 14:48:37.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.511" endtime="20201117 14:48:37.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.509" endtime="20201117 14:48:37.110"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.115" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.138" endtime="20201117 14:48:37.162"></status>
</kw>
<msg timestamp="20201117 14:48:37.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:37.135" endtime="20201117 14:48:37.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:37.165" endtime="20201117 14:48:37.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.172" endtime="20201117 14:48:37.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.127" endtime="20201117 14:48:37.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.121" endtime="20201117 14:48:37.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.197" endtime="20201117 14:48:37.561"></status>
</kw>
<msg timestamp="20201117 14:48:37.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049603361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049699458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:37.194" endtime="20201117 14:48:37.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049603361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049699458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:37.571" endtime="20201117 14:48:37.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.592" endtime="20201117 14:48:37.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.186" endtime="20201117 14:48:37.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.181" endtime="20201117 14:48:37.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:37.612" level="INFO">${RESULT} = [{'time': 0.049699458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.609700000000332e-05, 'source_diff': 9.609700000000332e-05}, {'time': 0.049810458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:37.603" endtime="20201117 14:48:37.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:37.645" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:37.615" endtime="20201117 14:48:37.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.657" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:48:37.654" endtime="20201117 14:48:37.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.663" level="INFO">VALUE: [9.609700000000332e-05, 9.624999999999911e-05, 9.666699999999473e-05, 9.631900000000443e-05, 9.690299999999541e-05, 9.624999999999911e-05, 9.693100000000149e-05, 9.645900000000013e-05, 9.665299999999516e-05, 9.687499999999627e-05, 9.667999999999483e-05, 9.63609999999962e-05, 9.67080000000009e-05, 9.677800000000569e-05, 9.674999999999961e-05, 9.638899999999534e-05, 9.691699999999498e-05, 9.66530000000021e-05, 9.666700000000167e-05, 9.637499999999577e-05, 9.640300000000185e-05, 9.701399999999943e-05, 9.674999999999961e-05, 9.62080000000004e-05, 9.631900000000443e-05, 9.672200000000047e-05, 9.608299999999681e-05, 9.599999999999886e-05, 9.612500000000246e-05, 9.637500000000271e-05, 9.605599999999714e-05, 9.613899999999509e-05, 9.61660000000017e-05, 9.64859999999998e-05, 9.690200000000287e-05, 9.67080000000009e-05, 9.605499999999767e-05, 9.619500000000031e-05, 9.645800000000065e-05, 9.627799999999825e-05, 9.656999999999721e-05, 9.624999999999911e-05, 9.688799999999637e-05, 9.688900000000278e-05, 9.601299999999896e-05, 9.695799999999422e-05, 9.608299999999681e-05, 9.634700000000357e-05, 9.695800000000115e-05, 9.604199999999757e-05]</msg>
<status status="PASS" starttime="20201117 14:48:37.659" endtime="20201117 14:48:37.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.647" endtime="20201117 14:48:37.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.672" endtime="20201117 14:48:37.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:37.681" endtime="20201117 14:48:37.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.676" endtime="20201117 14:48:37.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.667" endtime="20201117 14:48:37.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.117" endtime="20201117 14:48:37.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.112" endtime="20201117 14:48:37.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.111" endtime="20201117 14:48:37.709"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.714" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.737" endtime="20201117 14:48:37.760"></status>
</kw>
<msg timestamp="20201117 14:48:37.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:37.734" endtime="20201117 14:48:37.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:37.764" endtime="20201117 14:48:37.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.770" endtime="20201117 14:48:37.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.726" endtime="20201117 14:48:37.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.720" endtime="20201117 14:48:37.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.794" endtime="20201117 14:48:38.139"></status>
</kw>
<msg timestamp="20201117 14:48:38.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049680347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049778222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:37.789" endtime="20201117 14:48:38.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049680347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049778222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:38.149" endtime="20201117 14:48:38.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.168" endtime="20201117 14:48:38.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.782" endtime="20201117 14:48:38.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.778" endtime="20201117 14:48:38.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:38.185" level="INFO">${RESULT} = [{'time': 0.049778222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.787499999999727e-05, 'source_diff': 9.787499999999727e-05}, {'time': 0.049890236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:38.176" endtime="20201117 14:48:38.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:38.219" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:38.187" endtime="20201117 14:48:38.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.230" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:48:38.227" endtime="20201117 14:48:38.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.235" level="INFO">VALUE: [9.787499999999727e-05, 9.7027999999999e-05, 9.743100000000199e-05, 9.758299999999831e-05, 9.745900000000113e-05, 9.769500000000181e-05, 9.709799999999685e-05, 9.790299999999641e-05, 9.722200000000097e-05, 9.77080000000019e-05, 9.781900000000593e-05, 9.704199999999857e-05, 9.797200000000172e-05, 9.795800000000215e-05, 9.743099999999505e-05, 9.795900000000163e-05, 9.72359999999936e-05, 9.755599999999864e-05, 9.775000000000061e-05, 9.723600000000054e-05, 9.718000000000226e-05, 9.765299999999616e-05, 9.791700000000292e-05, 9.766700000000267e-05, 9.709700000000432e-05, 9.754199999999907e-05, 9.754199999999907e-05, 9.795900000000163e-05, 9.750000000000036e-05, 9.71530000000026e-05, 9.74860000000008e-05, 9.779099999999985e-05, 9.71530000000026e-05, 9.765299999999616e-05, 9.738900000000328e-05, 9.754199999999907e-05, 9.763899999999659e-05, 9.712500000000346e-05, 9.788899999999684e-05, 9.731999999999796e-05, 9.79860000000013e-05, 9.747200000000122e-05, 9.781899999999899e-05, 9.777799999999975e-05, 9.779199999999932e-05, 9.752800000000644e-05, 9.743100000000199e-05, 9.734700000000457e-05, 9.800000000000086e-05, 9.756999999999821e-05]</msg>
<status status="PASS" starttime="20201117 14:48:38.232" endtime="20201117 14:48:38.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.220" endtime="20201117 14:48:38.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.244" endtime="20201117 14:48:38.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:38.252" endtime="20201117 14:48:38.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.248" endtime="20201117 14:48:38.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.239" endtime="20201117 14:48:38.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.716" endtime="20201117 14:48:38.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.712" endtime="20201117 14:48:38.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.710" endtime="20201117 14:48:38.278"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.284" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.306" endtime="20201117 14:48:38.329"></status>
</kw>
<msg timestamp="20201117 14:48:38.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:38.303" endtime="20201117 14:48:38.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:38.333" endtime="20201117 14:48:38.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.339" endtime="20201117 14:48:38.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.295" endtime="20201117 14:48:38.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.289" endtime="20201117 14:48:38.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.363" endtime="20201117 14:48:38.670"></status>
</kw>
<msg timestamp="20201117 14:48:38.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048095486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0481935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:38.360" endtime="20201117 14:48:38.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048095486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0481935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:38.674" endtime="20201117 14:48:38.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.682" endtime="20201117 14:48:38.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.352" endtime="20201117 14:48:38.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.348" endtime="20201117 14:48:38.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:38.692" level="INFO">${RESULT} = [{'time': 0.0481935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.801400000000043e-05, 'source_diff': 9.801400000000043e-05}, {'time': 0.048299514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:38.687" endtime="20201117 14:48:38.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:38.706" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:38.693" endtime="20201117 14:48:38.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.712" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:48:38.711" endtime="20201117 14:48:38.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.714" level="INFO">VALUE: [9.801400000000043e-05, 9.854200000000007e-05, 9.895900000000263e-05, 9.813899999999709e-05, 9.806999999999871e-05, 9.850000000000136e-05, 9.831899999999949e-05, 9.879200000000032e-05, 9.812500000000446e-05, 9.87359999999951e-05, 9.895800000000315e-05, 9.876300000000171e-05, 9.883299999999956e-05, 9.812499999999752e-05, 9.825000000000111e-05, 9.856999999999921e-05, 9.819499999999537e-05, 9.876400000000118e-05, 9.82080000000024e-05, 9.890299999999741e-05, 9.890299999999741e-05, 9.884699999999913e-05, 9.804199999999957e-05, 9.84730000000017e-05, 9.88059999999999e-05, 9.820900000000188e-05, 9.894500000000306e-05, 9.862500000000496e-05, 9.808299999999881e-05, 9.855499999999323e-05, 9.891699999999698e-05, 9.897200000000272e-05, 9.809699999999838e-05, 9.826400000000068e-05, 9.888900000000478e-05, 9.858400000000572e-05, 9.8028e-05, 9.865299999999716e-05, 9.888899999999784e-05, 9.869400000000333e-05, 9.847200000000222e-05, 9.813900000000403e-05, 9.833299999999906e-05, 9.881899999999999e-05, 9.88609999999987e-05, 9.875000000000161e-05, 9.805599999999914e-05, 9.891699999999698e-05, 9.861099999999845e-05, 9.825000000000111e-05]</msg>
<status status="PASS" starttime="20201117 14:48:38.713" endtime="20201117 14:48:38.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.707" endtime="20201117 14:48:38.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.718" endtime="20201117 14:48:38.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:38.722" endtime="20201117 14:48:38.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.720" endtime="20201117 14:48:38.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.716" endtime="20201117 14:48:38.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.285" endtime="20201117 14:48:38.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.281" endtime="20201117 14:48:38.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.279" endtime="20201117 14:48:38.744"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.746" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.757" endtime="20201117 14:48:38.776"></status>
</kw>
<msg timestamp="20201117 14:48:38.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:38.755" endtime="20201117 14:48:38.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:38.778" endtime="20201117 14:48:38.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.781" endtime="20201117 14:48:38.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.752" endtime="20201117 14:48:38.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.749" endtime="20201117 14:48:38.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.792" endtime="20201117 14:48:39.078"></status>
</kw>
<msg timestamp="20201117 14:48:39.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027427917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027527222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:38.790" endtime="20201117 14:48:39.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027427917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027527222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:39.082" endtime="20201117 14:48:39.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.091" endtime="20201117 14:48:39.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.787" endtime="20201117 14:48:39.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.785" endtime="20201117 14:48:39.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:39.105" level="INFO">${RESULT} = [{'time': 0.027527222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.930500000000092e-05, 'source_diff': 9.930500000000092e-05}, {'time': 0.027637222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:39.096" endtime="20201117 14:48:39.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:39.136" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:39.107" endtime="20201117 14:48:39.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.147" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:48:39.144" endtime="20201117 14:48:39.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.152" level="INFO">VALUE: [9.930500000000092e-05, 9.981900000000099e-05, 9.912499999999852e-05, 9.994400000000112e-05, 9.932000000000343e-05, 9.919499999999984e-05, 9.9028000000001e-05, 9.974999999999914e-05, 9.920900000000288e-05, 9.988899999999884e-05, 9.94999999999989e-05, 9.991700000000145e-05, 9.9028000000001e-05, 9.959699999999988e-05, 9.937499999999877e-05, 9.988899999999884e-05, 9.93609999999992e-05, 9.927799999999778e-05, 9.96670000000012e-05, 9.9028000000001e-05, 9.90410000000011e-05, 9.945800000000019e-05, 9.906900000000024e-05, 9.911099999999895e-05, 9.915300000000113e-05, 9.944400000000062e-05, 9.984699999999666e-05, 9.951399999999846e-05, 9.970900000000338e-05, 9.941700000000095e-05, 9.965199999999869e-05, 9.934699999999963e-05, 9.927800000000125e-05, 9.962499999999902e-05, 9.98609999999997e-05, 9.925000000000211e-05, 9.993099999999755e-05, 9.923700000000202e-05, 9.950000000000236e-05, 9.911099999999895e-05, 9.916700000000417e-05, 9.976400000000218e-05, 9.930500000000092e-05, 9.991600000000544e-05, 9.91939999999969e-05, 9.942999999999758e-05, 9.9028000000001e-05, 9.912499999999852e-05, 9.988899999999884e-05, 0.0001000139999999955]</msg>
<status status="PASS" starttime="20201117 14:48:39.149" endtime="20201117 14:48:39.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.137" endtime="20201117 14:48:39.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.161" endtime="20201117 14:48:39.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:39.169" endtime="20201117 14:48:39.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.165" endtime="20201117 14:48:39.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.156" endtime="20201117 14:48:39.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.747" endtime="20201117 14:48:39.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.745" endtime="20201117 14:48:39.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.744" endtime="20201117 14:48:39.197"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.202" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.224" endtime="20201117 14:48:39.246"></status>
</kw>
<msg timestamp="20201117 14:48:39.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:39.220" endtime="20201117 14:48:39.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:39.249" endtime="20201117 14:48:39.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.255" endtime="20201117 14:48:39.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.213" endtime="20201117 14:48:39.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.207" endtime="20201117 14:48:39.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.279" endtime="20201117 14:48:39.630"></status>
</kw>
<msg timestamp="20201117 14:48:39.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047865431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047966278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:39.276" endtime="20201117 14:48:39.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047865431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047966278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:39.640" endtime="20201117 14:48:39.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.658" endtime="20201117 14:48:39.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.268" endtime="20201117 14:48:39.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.264" endtime="20201117 14:48:39.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:39.677" level="INFO">${RESULT} = [{'time': 0.047966278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010084700000000113, 'source_diff': 0.00010084700000000113}, {'time': 0.048072306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:39.668" endtime="20201117 14:48:39.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:39.708" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:39.679" endtime="20201117 14:48:39.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.719" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:48:39.717" endtime="20201117 14:48:39.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.724" level="INFO">VALUE: [0.00010084700000000113, 0.0001008480000000006, 0.00010091699999999898, 0.00010031900000000149, 0.00010047200000000422, 0.00010027800000000225, 0.00010038899999999934, 0.00010066700000000567, 0.00010044399999999815, 0.00010044499999999762, 0.00010049999999999643, 0.00010012499999999952, 0.00010026399999999575, 0.00010088899999999984, 0.00010095799999999822, 0.00010029099999999541, 0.00010055500000000217, 0.00010083300000000156, 0.00010097199999999779, 0.00010013899999999909, 0.00010062500000000002, 0.00010087500000000027, 0.00010040199999999944, 0.00010101300000000396, 0.00010066599999999926, 0.00010073600000000404, 0.00010019400000000483, 0.00010104200000000257, 0.00010079199999999539, 0.00010050000000000336, 0.00010074999999999668, 0.00010091699999999898, 0.00010019500000000431, 0.00010032000000000096, 0.00010091699999999898, 0.00010097199999999779, 0.00010090199999999994, 0.0001003610000000002, 0.00010077799999999582, 0.000100028000000002, 0.00010048599999999686, 0.00010069499999999787, 0.00010087500000000027, 0.00010049999999999643, 0.00010038799999999987, 0.0001009159999999995, 0.00010044400000000508, 0.00010092999999999908, 0.00010072199999999754, 0.0001003610000000002]</msg>
<status status="PASS" starttime="20201117 14:48:39.721" endtime="20201117 14:48:39.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.710" endtime="20201117 14:48:39.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.738" endtime="20201117 14:48:39.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:39.746" endtime="20201117 14:48:39.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.742" endtime="20201117 14:48:39.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.733" endtime="20201117 14:48:39.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.203" endtime="20201117 14:48:39.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.199" endtime="20201117 14:48:39.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.197" endtime="20201117 14:48:39.773"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.778" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.799" endtime="20201117 14:48:39.823"></status>
</kw>
<msg timestamp="20201117 14:48:39.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:39.796" endtime="20201117 14:48:39.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:39.826" endtime="20201117 14:48:39.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.832" endtime="20201117 14:48:39.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.789" endtime="20201117 14:48:39.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.783" endtime="20201117 14:48:39.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.855" endtime="20201117 14:48:40.204"></status>
</kw>
<msg timestamp="20201117 14:48:40.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046726958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046828764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:39.852" endtime="20201117 14:48:40.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046726958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046828764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:40.213" endtime="20201117 14:48:40.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.232" endtime="20201117 14:48:40.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.845" endtime="20201117 14:48:40.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.840" endtime="20201117 14:48:40.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:40.249" level="INFO">${RESULT} = [{'time': 0.046828764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001018060000000029, 'source_diff': 0.0001018060000000029}, {'time': 0.046938778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:40.240" endtime="20201117 14:48:40.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:40.282" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:40.251" endtime="20201117 14:48:40.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.292" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:48:40.290" endtime="20201117 14:48:40.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.298" level="INFO">VALUE: [0.0001018060000000029, 0.00010170899999999844, 0.00010132000000000196, 0.0001010139999999965, 0.00010155499999999623, 0.00010202799999999707, 0.00010116699999999923, 0.00010179099999999691, 0.00010108300000000181, 0.00010112500000000052, 0.0001010139999999965, 0.0001018339999999951, 0.00010138900000000034, 0.00010129200000000282, 0.00010109700000000138, 0.0001015280000000035, 0.00010199999999999793, 0.00010116599999999976, 0.00010113900000000009, 0.00010123600000000454, 0.00010127800000000325, 0.00010112500000000052, 0.000101513999999997, 0.00010183400000000203, 0.00010124999999999718, 0.00010201400000000443, 0.00010193000000000008, 0.00010172199999999854, 0.0001017080000000059, 0.00010191699999999998, 0.00010166699999999973, 0.00010152799999999657, 0.00010184799999999467, 0.00010195899999999869, 0.00010169499999999887, 0.00010183400000000203, 0.00010193000000000008, 0.00010194399999999965, 0.00010142999999999958, 0.00010129200000000282, 0.00010131899999999555, 0.0001013610000000012, 0.00010141699999999948, 0.00010158299999999537, 0.00010170899999999844, 0.00010159700000000188, 0.00010127699999999684, 0.0001018610000000017, 0.00010109700000000138, 0.00010172199999999854]</msg>
<status status="PASS" starttime="20201117 14:48:40.295" endtime="20201117 14:48:40.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.283" endtime="20201117 14:48:40.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.307" endtime="20201117 14:48:40.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:40.315" endtime="20201117 14:48:40.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.311" endtime="20201117 14:48:40.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.303" endtime="20201117 14:48:40.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.779" endtime="20201117 14:48:40.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.776" endtime="20201117 14:48:40.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.774" endtime="20201117 14:48:40.342"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.347" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.368" endtime="20201117 14:48:40.392"></status>
</kw>
<msg timestamp="20201117 14:48:40.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:40.365" endtime="20201117 14:48:40.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:40.395" endtime="20201117 14:48:40.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.401" endtime="20201117 14:48:40.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.358" endtime="20201117 14:48:40.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.352" endtime="20201117 14:48:40.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.424" endtime="20201117 14:48:40.765"></status>
</kw>
<msg timestamp="20201117 14:48:40.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046573083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046675639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:40.421" endtime="20201117 14:48:40.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046573083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046675639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:40.774" endtime="20201117 14:48:40.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.793" endtime="20201117 14:48:40.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.414" endtime="20201117 14:48:40.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.409" endtime="20201117 14:48:40.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:40.812" level="INFO">${RESULT} = [{'time': 0.046675639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001025559999999967, 'source_diff': 0.0001025559999999967}, {'time': 0.046785667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:40.803" endtime="20201117 14:48:40.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:40.842" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:40.814" endtime="20201117 14:48:40.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.853" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:48:40.851" endtime="20201117 14:48:40.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.858" level="INFO">VALUE: [0.0001025559999999967, 0.00010276400000000518, 0.00010272300000000595, 0.00010215300000000066, 0.00010291599999999457, 0.00010204099999999716, 0.00010270799999999997, 0.00010281900000000399, 0.00010212500000000152, 0.00010283299999999662, 0.00010287499999999533, 0.00010209799999999492, 0.00010219499999999937, 0.00010270899999999944, 0.00010263899999999465, 0.00010248700000000527, 0.00010204099999999716, 0.00010226399999999775, 0.00010205499999999673, 0.00010248599999999886, 0.00010234700000000263, 0.00010283299999999662, 0.00010299999999999893, 0.00010231999999999603, 0.00010295899999999969, 0.00010243000000000058, 0.00010212500000000152, 0.0001025410000000046, 0.00010205499999999673, 0.0001030139999999985, 0.00010220799999999947, 0.00010222200000000597, 0.00010227799999999732, 0.00010226399999999775, 0.0001028060000000039, 0.00010261100000000245, 0.00010282000000000346, 0.0001021939999999999, 0.00010255500000000417, 0.00010266600000000126, 0.0001028610000000027, 0.00010236099999999526, 0.00010216700000000023, 0.00010279199999999739, 0.00010208400000000228, 0.00010261100000000245, 0.00010295899999999969, 0.00010274999999999868, 0.00010240200000000144, 0.00010216600000000076]</msg>
<status status="PASS" starttime="20201117 14:48:40.855" endtime="20201117 14:48:40.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.844" endtime="20201117 14:48:40.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.867" endtime="20201117 14:48:40.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:40.875" endtime="20201117 14:48:40.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.871" endtime="20201117 14:48:40.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.862" endtime="20201117 14:48:40.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.348" endtime="20201117 14:48:40.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.344" endtime="20201117 14:48:40.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.343" endtime="20201117 14:48:40.902"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.907" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.928" endtime="20201117 14:48:40.951"></status>
</kw>
<msg timestamp="20201117 14:48:40.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:40.925" endtime="20201117 14:48:40.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:40.954" endtime="20201117 14:48:40.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.961" endtime="20201117 14:48:40.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.918" endtime="20201117 14:48:40.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.912" endtime="20201117 14:48:40.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.984" endtime="20201117 14:48:41.322"></status>
</kw>
<msg timestamp="20201117 14:48:41.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046859167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046963014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:40.981" endtime="20201117 14:48:41.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046859167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046963014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:41.332" endtime="20201117 14:48:41.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.351" endtime="20201117 14:48:41.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.973" endtime="20201117 14:48:41.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.969" endtime="20201117 14:48:41.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:41.368" level="INFO">${RESULT} = [{'time': 0.046963014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010384699999999719, 'source_diff': 0.00010384699999999719}, {'time': 0.047079028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:41.359" endtime="20201117 14:48:41.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:41.398" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:41.370" endtime="20201117 14:48:41.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.409" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:48:41.407" endtime="20201117 14:48:41.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.414" level="INFO">VALUE: [0.00010384699999999719, 0.00010334700000000363, 0.00010324999999999918, 0.00010327800000000525, 0.0001037360000000001, 0.00010343100000000105, 0.00010372200000000054, 0.00010395800000000122, 0.00010387499999999633, 0.00010316699999999429, 0.00010391700000000198, 0.00010338900000000234, 0.00010397300000000026, 0.00010337500000000277, 0.00010347299999999976, 0.00010309700000000338, 0.0001030410000000051, 0.00010391599999999557, 0.00010399999999999993, 0.00010394400000000165, 0.00010345900000000019, 0.00010331899999999755, 0.00010361100000000345, 0.00010379199999999839, 0.0001037360000000001, 0.00010376299999999977, 0.00010368000000000183, 0.00010329100000000535, 0.00010395800000000122, 0.00010308299999999687, 0.00010390300000000241, 0.00010322200000000004, 0.00010301400000000543, 0.00010383400000000403, 0.00010362499999999608, 0.00010329199999999789, 0.00010337500000000277, 0.0001032359999999996, 0.0001034019999999955, 0.00010354099999999866, 0.00010312500000000252, 0.00010354199999999814, 0.00010368000000000183, 0.00010397300000000026, 0.0001036810000000013, 0.00010381999999999753, 0.00010306999999999678, 0.00010316599999999482, 0.0001035410000000056, 0.00010359699999999694]</msg>
<status status="PASS" starttime="20201117 14:48:41.411" endtime="20201117 14:48:41.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.400" endtime="20201117 14:48:41.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.423" endtime="20201117 14:48:41.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:41.431" endtime="20201117 14:48:41.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.427" endtime="20201117 14:48:41.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.418" endtime="20201117 14:48:41.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.908" endtime="20201117 14:48:41.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.904" endtime="20201117 14:48:41.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.902" endtime="20201117 14:48:41.457"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.463" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.484" endtime="20201117 14:48:41.507"></status>
</kw>
<msg timestamp="20201117 14:48:41.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:41.481" endtime="20201117 14:48:41.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:41.510" endtime="20201117 14:48:41.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.516" endtime="20201117 14:48:41.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.474" endtime="20201117 14:48:41.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.468" endtime="20201117 14:48:41.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.540" endtime="20201117 14:48:41.877"></status>
</kw>
<msg timestamp="20201117 14:48:41.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046515708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046619972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:41.536" endtime="20201117 14:48:41.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046515708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046619972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:41.886" endtime="20201117 14:48:41.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.905" endtime="20201117 14:48:41.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.529" endtime="20201117 14:48:41.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.524" endtime="20201117 14:48:41.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:41.924" level="INFO">${RESULT} = [{'time': 0.046619972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010426399999999975, 'source_diff': 0.00010426399999999975}, {'time': 0.046732042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:41.915" endtime="20201117 14:48:41.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:41.954" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:41.926" endtime="20201117 14:48:41.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.965" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:48:41.962" endtime="20201117 14:48:41.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.970" level="INFO">VALUE: [0.00010426399999999975, 0.0001041810000000018, 0.00010475000000000068, 0.0001047360000000011, 0.00010475000000000068, 0.00010437500000000377, 0.00010436099999999726, 0.00010486199999999724, 0.00010465199999999675, 0.00010420800000000147, 0.0001050140000000005, 0.00010473599999999417, 0.00010437500000000377, 0.00010475000000000068, 0.00010411099999999701, 0.00010404199999999864, 0.0001045559999999987, 0.00010454199999999914, 0.00010412500000000352, 0.00010455499999999923, 0.00010498600000000136, 0.00010405499999999873, 0.00010470800000000197, 0.00010430599999999846, 0.0001042360000000006, 0.000104514, 0.00010431999999999803, 0.00010468000000000283, 0.00010415300000000266, 0.00010466599999999632, 0.00010408299999999787, 0.00010483299999999862, 0.00010420799999999453, 0.00010483299999999862, 0.00010458299999999837, 0.00010459800000000435, 0.00010436099999999726, 0.00010436099999999726, 0.00010445900000000119, 0.00010463900000000359, 0.00010425000000000018, 0.00010470799999999503, 0.00010470800000000197, 0.00010462499999999708, 0.00010452799999999957, 0.00010408300000000481, 0.00010438900000000334, 0.00010463900000000359, 0.00010426300000000027, 0.00010462500000000402]</msg>
<status status="PASS" starttime="20201117 14:48:41.967" endtime="20201117 14:48:41.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.956" endtime="20201117 14:48:41.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.979" endtime="20201117 14:48:41.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:41.987" endtime="20201117 14:48:42.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.983" endtime="20201117 14:48:42.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.974" endtime="20201117 14:48:42.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.464" endtime="20201117 14:48:42.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.460" endtime="20201117 14:48:42.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.458" endtime="20201117 14:48:42.013"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.018" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.040" endtime="20201117 14:48:42.063"></status>
</kw>
<msg timestamp="20201117 14:48:42.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:42.037" endtime="20201117 14:48:42.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:42.066" endtime="20201117 14:48:42.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.073" endtime="20201117 14:48:42.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.029" endtime="20201117 14:48:42.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.024" endtime="20201117 14:48:42.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.096" endtime="20201117 14:48:42.435"></status>
</kw>
<msg timestamp="20201117 14:48:42.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046955847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047061681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:42.093" endtime="20201117 14:48:42.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046955847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047061681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:42.440" endtime="20201117 14:48:42.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.449" endtime="20201117 14:48:42.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.086" endtime="20201117 14:48:42.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.081" endtime="20201117 14:48:42.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:42.457" level="INFO">${RESULT} = [{'time': 0.047061681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001058339999999991, 'source_diff': 0.0001058339999999991}, {'time': 0.047170639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:42.453" endtime="20201117 14:48:42.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:42.471" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:42.457" endtime="20201117 14:48:42.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.477" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:48:42.475" endtime="20201117 14:48:42.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.479" level="INFO">VALUE: [0.0001058339999999991, 0.000105514000000001, 0.00010522200000000204, 0.00010545899999999525, 0.00010556999999999928, 0.00010558399999999885, 0.00010594499999999618, 0.00010552700000000109, 0.00010531899999999955, 0.00010523599999999467, 0.00010536099999999826, 0.00010519499999999543, 0.00010575000000000168, 0.0001053339999999986, 0.00010570900000000244, 0.00010540299999999697, 0.00010554099999999372, 0.00010566600000000426, 0.00010548599999999492, 0.00010508299999999887, 0.0001056940000000034, 0.000105514000000001, 0.00010570799999999603, 0.00010550000000000143, 0.00010529199999999989, 0.0001050559999999992, 0.00010591599999999757, 0.00010576399999999431, 0.00010577700000000134, 0.00010513899999999715, 0.00010541699999999654, 0.00010512499999999758, 0.0001056810000000033, 0.0001057360000000021, 0.00010582000000000646, 0.00010549999999999449, 0.00010525000000000118, 0.00010548600000000186, 0.00010565200000000469, 0.00010504100000000016, 0.00010570799999999603, 0.00010586099999999876, 0.00010581999999999953, 0.00010529199999999989, 0.00010593100000000355, 0.00010515199999999725, 0.00010555500000000023, 0.00010584699999999919, 0.00010587499999999833, 0.00010567999999999689]</msg>
<status status="PASS" starttime="20201117 14:48:42.478" endtime="20201117 14:48:42.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.472" endtime="20201117 14:48:42.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.483" endtime="20201117 14:48:42.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:42.487" endtime="20201117 14:48:42.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.485" endtime="20201117 14:48:42.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.481" endtime="20201117 14:48:42.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.020" endtime="20201117 14:48:42.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.016" endtime="20201117 14:48:42.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.014" endtime="20201117 14:48:42.509"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.511" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.522" endtime="20201117 14:48:42.542"></status>
</kw>
<msg timestamp="20201117 14:48:42.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:42.520" endtime="20201117 14:48:42.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:42.543" endtime="20201117 14:48:42.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.546" endtime="20201117 14:48:42.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.517" endtime="20201117 14:48:42.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.514" endtime="20201117 14:48:42.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.557" endtime="20201117 14:48:42.843"></status>
</kw>
<msg timestamp="20201117 14:48:42.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027698056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027804194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:42.556" endtime="20201117 14:48:42.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027698056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027804194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:42.847" endtime="20201117 14:48:42.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.855" endtime="20201117 14:48:42.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.552" endtime="20201117 14:48:42.859"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.550" endtime="20201117 14:48:42.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:42.864" level="INFO">${RESULT} = [{'time': 0.027804194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010613800000000215, 'source_diff': 0.00010613800000000215}, {'time': 0.027920208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:42.860" endtime="20201117 14:48:42.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:42.878" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:42.865" endtime="20201117 14:48:42.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.883" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:48:42.882" endtime="20201117 14:48:42.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.885" level="INFO">VALUE: [0.00010613800000000215, 0.00010666599999999832, 0.00010668000000000136, 0.00010693099999999761, 0.00010691700000000151, 0.00010665300000000169, 0.00010606999999999978, 0.00010636100000000273, 0.00010616700000000076, 0.00010647299999999929, 0.00010663899999999865, 0.00010654100000000166, 0.00010598600000000236, 0.00010666599999999832, 0.00010661100000000298, 0.00010691700000000151, 0.00010608299999999987, 0.00010641700000000101, 0.00010626399999999828, 0.00010701300000000302, 0.00010659699999999994, 0.0001067499999999992, 0.00010633300000000012, 0.00010627800000000132, 0.00010618100000000033, 0.00010679200000000139, 0.00010680599999999749, 0.00010651399999999853, 0.00010668100000000083, 0.00010700000000000293, 0.00010641599999999807, 0.0001068340000000001, 0.00010645800000000372, 0.00010669399999999746, 0.00010686099999999976, 0.00010684700000000019, 0.00010647199999999635, 0.00010663899999999865, 0.00010652800000000157, 0.00010637499999999883, 0.00010625000000000218, 0.00010683300000000062, 0.00010683300000000062, 0.00010694399999999771, 0.00010677800000000182, 0.00010636099999999926, 0.00010687499999999933, 0.00010695899999999675, 0.00010615299999999772, 0.00010698700000000283]</msg>
<status status="PASS" starttime="20201117 14:48:42.884" endtime="20201117 14:48:42.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.879" endtime="20201117 14:48:42.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.889" endtime="20201117 14:48:42.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:42.894" endtime="20201117 14:48:42.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.891" endtime="20201117 14:48:42.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.887" endtime="20201117 14:48:42.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.512" endtime="20201117 14:48:42.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.510" endtime="20201117 14:48:42.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.509" endtime="20201117 14:48:42.916"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.918" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.928" endtime="20201117 14:48:42.950"></status>
</kw>
<msg timestamp="20201117 14:48:42.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:42.927" endtime="20201117 14:48:42.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:42.954" endtime="20201117 14:48:42.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.960" endtime="20201117 14:48:42.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.923" endtime="20201117 14:48:42.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.920" endtime="20201117 14:48:42.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.983" endtime="20201117 14:48:43.321"></status>
</kw>
<msg timestamp="20201117 14:48:43.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027181764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027289681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:42.980" endtime="20201117 14:48:43.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027181764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027289681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:43.331" endtime="20201117 14:48:43.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.349" endtime="20201117 14:48:43.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.973" endtime="20201117 14:48:43.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.968" endtime="20201117 14:48:43.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:43.366" level="INFO">${RESULT} = [{'time': 0.027289681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010791699999999904, 'source_diff': 0.00010791699999999904}, {'time': 0.027403694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:43.357" endtime="20201117 14:48:43.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:43.396" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:43.368" endtime="20201117 14:48:43.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.407" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:48:43.405" endtime="20201117 14:48:43.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.412" level="INFO">VALUE: [0.00010791699999999904, 0.00010731899999999808, 0.00010701299999999955, 0.00010800000000000046, 0.00010741699999999854, 0.0001075560000000017, 0.00010713899999999915, 0.00010798600000000089, 0.00010769499999999793, 0.00010772300000000054, 0.0001078340000000011, 0.0001073889999999994, 0.00010769400000000193, 0.00010708300000000087, 0.00010733300000000112, 0.00010730599999999799, 0.00010766699999999879, 0.00010745799999999778, 0.00010781999999999806, 0.0001073340000000006, 0.00010704199999999817, 0.00010727799999999885, 0.00010727700000000284, 0.00010712499999999958, 0.00010748600000000039, 0.0001077080000000015, 0.00010745800000000125, 0.00010733300000000112, 0.00010727799999999885, 0.00010733399999999713, 0.00010704199999999817, 0.00010797200000000132, 0.0001074019999999995, 0.00010719399999999796, 0.0001070279999999986, 0.00010724999999999624, 0.00010762500000000008, 0.00010758300000000137, 0.00010719499999999743, 0.00010770900000000444, 0.00010720799999999753, 0.00010713899999999915, 0.00010756899999999486, 0.00010748600000000386, 0.00010747199999999735, 0.0001075560000000017, 0.00010715299999999872, 0.0001078889999999999, 0.00010727800000000232, 0.0001070140000000025]</msg>
<status status="PASS" starttime="20201117 14:48:43.409" endtime="20201117 14:48:43.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.398" endtime="20201117 14:48:43.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.422" endtime="20201117 14:48:43.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:43.430" endtime="20201117 14:48:43.452"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.426" endtime="20201117 14:48:43.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.417" endtime="20201117 14:48:43.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.919" endtime="20201117 14:48:43.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.917" endtime="20201117 14:48:43.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.916" endtime="20201117 14:48:43.456"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.462" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.483" endtime="20201117 14:48:43.506"></status>
</kw>
<msg timestamp="20201117 14:48:43.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:43.480" endtime="20201117 14:48:43.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:43.509" endtime="20201117 14:48:43.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.516" endtime="20201117 14:48:43.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.473" endtime="20201117 14:48:43.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.467" endtime="20201117 14:48:43.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.539" endtime="20201117 14:48:43.875"></status>
</kw>
<msg timestamp="20201117 14:48:43.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046523639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046631986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:43.536" endtime="20201117 14:48:43.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046523639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046631986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:43.884" endtime="20201117 14:48:43.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.903" endtime="20201117 14:48:43.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.528" endtime="20201117 14:48:43.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.524" endtime="20201117 14:48:43.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:43.921" level="INFO">${RESULT} = [{'time': 0.046631986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010834700000000169, 'source_diff': 0.00010834700000000169}, {'time': 0.046743986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:43.913" endtime="20201117 14:48:43.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:43.952" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:43.923" endtime="20201117 14:48:43.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.962" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:48:43.960" endtime="20201117 14:48:43.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.968" level="INFO">VALUE: [0.00010834700000000169, 0.00010848599999999792, 0.0001088890000000009, 0.0001083890000000004, 0.0001082360000000046, 0.00010834799999999423, 0.00010890300000000047, 0.00010833299999999518, 0.00010809700000000144, 0.00010847199999999835, 0.00010891700000000004, 0.0001088890000000009, 0.00010866699999999979, 0.00010849999999999749, 0.00010868099999999936, 0.00010879099999999697, 0.00010891599999999363, 0.00010848600000000486, 0.00010869399999999946, 0.00010867999999999989, 0.000108208999999998, 0.0001090140000000045, 0.0001082360000000046, 0.00010843099999999911, 0.00010866699999999979, 0.00010880500000000348, 0.00010866600000000032, 0.00010848599999999792, 0.00010876399999999731, 0.00010863900000000065, 0.00010847199999999835, 0.00010845799999999878, 0.00010862500000000108, 0.0001087089999999985, 0.00010867999999999989, 0.00010880500000000348, 0.00010854099999999672, 0.000108514000000004, 0.00010875000000000468, 0.00010856899999999586, 0.00010852799999999663, 0.00010895799999999928, 0.00010866699999999979, 0.00010866699999999979, 0.00010869499999999893, 0.00010869500000000587, 0.00010849999999999749, 0.00010808300000000187, 0.00010836100000000126, 0.00010837500000000083]</msg>
<status status="PASS" starttime="20201117 14:48:43.965" endtime="20201117 14:48:43.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.953" endtime="20201117 14:48:43.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.977" endtime="20201117 14:48:43.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:43.986" endtime="20201117 14:48:44.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.981" endtime="20201117 14:48:44.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.973" endtime="20201117 14:48:44.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.463" endtime="20201117 14:48:44.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.459" endtime="20201117 14:48:44.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.457" endtime="20201117 14:48:44.012"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.017" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.039" endtime="20201117 14:48:44.062"></status>
</kw>
<msg timestamp="20201117 14:48:44.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:44.035" endtime="20201117 14:48:44.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:44.065" endtime="20201117 14:48:44.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.072" endtime="20201117 14:48:44.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.028" endtime="20201117 14:48:44.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.022" endtime="20201117 14:48:44.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.095" endtime="20201117 14:48:44.434"></status>
</kw>
<msg timestamp="20201117 14:48:44.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046826417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046935667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:44.092" endtime="20201117 14:48:44.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046826417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046935667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:44.444" endtime="20201117 14:48:44.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.462" endtime="20201117 14:48:44.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.084" endtime="20201117 14:48:44.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.080" endtime="20201117 14:48:44.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:44.479" level="INFO">${RESULT} = [{'time': 0.046935667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010924999999999824, 'source_diff': 0.00010924999999999824}, {'time': 0.047051667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:44.470" endtime="20201117 14:48:44.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:44.512" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:44.482" endtime="20201117 14:48:44.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.523" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:48:44.521" endtime="20201117 14:48:44.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.529" level="INFO">VALUE: [0.00010924999999999824, 0.00010997299999999932, 0.00010915300000000072, 0.00010988799999999549, 0.0001097219999999996, 0.00010908300000000287, 0.00010925000000000518, 0.00010984699999999625, 0.00010908300000000287, 0.000109902000000002, 0.00010975000000000568, 0.0001090419999999967, 0.00010904099999999722, 0.00010963800000000218, 0.00010949999999999849, 0.00010916600000000082, 0.00010930599999999652, 0.00010931899999999661, 0.00010923599999999867, 0.00010949999999999849, 0.00010907000000000278, 0.00010974999999999874, 0.00010930500000000398, 0.00010934700000000269, 0.00010948599999999892, 0.00010981899999999711, 0.00010911099999999507, 0.00010924999999999824, 0.00010945899999999925, 0.00010962500000000208, 0.00010908400000000235, 0.00010966599999999438, 0.00010991600000000157, 0.00010952800000000457, 0.0001095690000000038, 0.00010970800000000003, 0.00010952800000000457, 0.00010923599999999867, 0.00010966700000000079, 0.0001090419999999967, 0.00010929199999999695, 0.00010952800000000457, 0.00010991600000000157, 0.00010973599999999917, 0.00010963900000000165, 0.0001090560000000032, 0.00010940299999999403, 0.00010959799999999548, 0.00010906999999999584, 0.00010944499999999968]</msg>
<status status="PASS" starttime="20201117 14:48:44.526" endtime="20201117 14:48:44.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.514" endtime="20201117 14:48:44.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.537" endtime="20201117 14:48:44.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:44.546" endtime="20201117 14:48:44.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.541" endtime="20201117 14:48:44.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.533" endtime="20201117 14:48:44.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.019" endtime="20201117 14:48:44.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.015" endtime="20201117 14:48:44.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.013" endtime="20201117 14:48:44.572"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.577" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.599" endtime="20201117 14:48:44.622"></status>
</kw>
<msg timestamp="20201117 14:48:44.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:44.595" endtime="20201117 14:48:44.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:44.625" endtime="20201117 14:48:44.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.631" endtime="20201117 14:48:44.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.588" endtime="20201117 14:48:44.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.582" endtime="20201117 14:48:44.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.654" endtime="20201117 14:48:44.990"></status>
</kw>
<msg timestamp="20201117 14:48:44.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046750514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046860917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:44.651" endtime="20201117 14:48:44.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046750514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046860917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:45.000" endtime="20201117 14:48:45.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.023" endtime="20201117 14:48:45.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.644" endtime="20201117 14:48:45.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.639" endtime="20201117 14:48:45.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:45.044" level="INFO">${RESULT} = [{'time': 0.046860917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011040300000000197, 'source_diff': 0.00011040300000000197}, {'time': 0.046979917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:45.034" endtime="20201117 14:48:45.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:45.075" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:45.046" endtime="20201117 14:48:45.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.087" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:48:45.085" endtime="20201117 14:48:45.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.093" level="INFO">VALUE: [0.00011040300000000197, 0.00011072300000000007, 0.00011084699999999725, 0.00011065300000000222, 0.00011058299999999743, 0.00011036100000000326, 0.00011002699999999865, 0.00011054200000000514, 0.00011026399999999881, 0.00011024999999999924, 0.00011005599999999727, 0.00011008400000000335, 0.00011012500000000258, 0.00011087499999999639, 0.0001103890000000024, 0.00011087499999999639, 0.00011079099999999897, 0.00011073600000000017, 0.00011070800000000103, 0.00011048599999999992, 0.00011087499999999639, 0.00011049999999999949, 0.00011076399999999931, 0.00011045800000000078, 0.00011029100000000541, 0.0001103890000000024, 0.00011070800000000103, 0.00011083299999999768, 0.00011086100000000376, 0.00011070800000000103, 0.00011024999999999924, 0.00011048599999999992, 0.00011086100000000376, 0.00011097200000000085, 0.00011087500000000333, 0.00011029100000000541, 0.00011066699999999485, 0.00011016700000000129, 0.00011093100000000161, 0.00011077799999999888, 0.00011072300000000007, 0.00011037500000000283, 0.00011030499999999804, 0.00011013900000000215, 0.00011049999999999949, 0.0001108890000000029, 0.00011033399999999666, 0.00011051399999999906, 0.00011019400000000096, 0.00011002799999999813]</msg>
<status status="PASS" starttime="20201117 14:48:45.089" endtime="20201117 14:48:45.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.078" endtime="20201117 14:48:45.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.102" endtime="20201117 14:48:45.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:45.111" endtime="20201117 14:48:45.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.107" endtime="20201117 14:48:45.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.097" endtime="20201117 14:48:45.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.578" endtime="20201117 14:48:45.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.575" endtime="20201117 14:48:45.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.573" endtime="20201117 14:48:45.139"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.145" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.168" endtime="20201117 14:48:45.192"></status>
</kw>
<msg timestamp="20201117 14:48:45.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:45.164" endtime="20201117 14:48:45.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:45.195" endtime="20201117 14:48:45.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.202" endtime="20201117 14:48:45.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.156" endtime="20201117 14:48:45.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.150" endtime="20201117 14:48:45.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.228" endtime="20201117 14:48:45.600"></status>
</kw>
<msg timestamp="20201117 14:48:45.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049797208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049908236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:45.223" endtime="20201117 14:48:45.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049797208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049908236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:45.610" endtime="20201117 14:48:45.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.630" endtime="20201117 14:48:45.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.216" endtime="20201117 14:48:45.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.211" endtime="20201117 14:48:45.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:45.649" level="INFO">${RESULT} = [{'time': 0.049908236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011102799999999913, 'source_diff': 0.00011102799999999913}, {'time': 0.050029292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:45.639" endtime="20201117 14:48:45.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:45.681" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:45.651" endtime="20201117 14:48:45.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.693" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:48:45.690" endtime="20201117 14:48:45.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.698" level="INFO">VALUE: [0.00011102799999999913, 0.00011191700000000304, 0.00011125000000000024, 0.00011108400000000435, 0.00011147300000000082, 0.00011197200000000185, 0.00011126399999999981, 0.00011187500000000433, 0.00011177799999999988, 0.00011141599999999613, 0.00011137500000000383, 0.00011157000000000528, 0.00011166699999999585, 0.00011162500000000408, 0.00011120800000000153, 0.00011144499999999474, 0.0001119299999999962, 0.00011183299999999868, 0.00011184699999999825, 0.00011155599999999877, 0.00011120799999999459, 0.0001110419999999987, 0.0001113340000000046, 0.00011133399999999766, 0.00011168000000000289, 0.00011113900000000315, 0.00011166600000000332, 0.00011102699999999965, 0.00011169399999999552, 0.00011176400000000031, 0.00011123600000000067, 0.00011120799999999459, 0.0001117090000000015, 0.00011145900000000125, 0.0001117090000000015, 0.00011205599999999927, 0.00011191600000000357, 0.00011191599999999663, 0.00011150000000000049, 0.0001118890000000039, 0.00011112499999999664, 0.00011145900000000125, 0.0001115560000000057, 0.00011165300000000322, 0.0001118619999999973, 0.00011134699999999775, 0.0001110969999999975, 0.00011133299999999818, 0.00011148600000000092, 0.00011194400000000271]</msg>
<status status="PASS" starttime="20201117 14:48:45.695" endtime="20201117 14:48:45.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.683" endtime="20201117 14:48:45.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.708" endtime="20201117 14:48:45.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:45.717" endtime="20201117 14:48:45.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.712" endtime="20201117 14:48:45.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.703" endtime="20201117 14:48:45.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.146" endtime="20201117 14:48:45.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.142" endtime="20201117 14:48:45.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.140" endtime="20201117 14:48:45.744"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.749" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.773" endtime="20201117 14:48:45.797"></status>
</kw>
<msg timestamp="20201117 14:48:45.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:45.769" endtime="20201117 14:48:45.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:45.800" endtime="20201117 14:48:45.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.808" endtime="20201117 14:48:45.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.761" endtime="20201117 14:48:45.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.755" endtime="20201117 14:48:45.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.833" endtime="20201117 14:48:46.190"></status>
</kw>
<msg timestamp="20201117 14:48:46.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049515167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049627347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:45.829" endtime="20201117 14:48:46.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049515167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049627347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:46.194" endtime="20201117 14:48:46.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.203" endtime="20201117 14:48:46.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.822" endtime="20201117 14:48:46.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.816" endtime="20201117 14:48:46.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:46.212" level="INFO">${RESULT} = [{'time': 0.049627347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011218000000000339, 'source_diff': 0.00011218000000000339}, {'time': 0.049744361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:46.208" endtime="20201117 14:48:46.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:46.226" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:46.213" endtime="20201117 14:48:46.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.232" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:48:46.230" endtime="20201117 14:48:46.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.234" level="INFO">VALUE: [0.00011218000000000339, 0.0001120419999999997, 0.00011233399999999866, 0.00011248600000000192, 0.0001123749999999979, 0.00011294500000000318, 0.00011273600000000217, 0.00011299999999999505, 0.00011275000000000174, 0.00011300000000000199, 0.00011301400000000156, 0.00011268099999999642, 0.00011283299999999968, 0.00011276400000000131, 0.00011262499999999814, 0.00011245900000000225, 0.00011300000000000199, 0.00011212500000000458, 0.00011298600000000242, 0.00011247200000000235, 0.00011230600000000646, 0.00011218099999999592, 0.00011251399999999412, 0.00011227799999999344, 0.00011244499999999574, 0.00011219499999999549, 0.00011256999999999934, 0.00011266699999999685, 0.00011230500000000004, 0.00011277800000000088, 0.00011291700000000404, 0.00011266700000000379, 0.00011206999999999884, 0.00011227800000000038, 0.00011299999999999505, 0.00011283399999999916, 0.00011272199999999566, 0.00011226400000000081, 0.00011219400000000296, 0.00011279200000000045, 0.00011219499999999549, 0.00011233399999999866, 0.00011275000000000174, 0.00011295900000000275, 0.00011273700000000164, 0.00011294499999999624, 0.00011299999999999505, 0.00011234699999999875, 0.00011269399999999652, 0.00011225000000000124]</msg>
<status status="PASS" starttime="20201117 14:48:46.233" endtime="20201117 14:48:46.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.227" endtime="20201117 14:48:46.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.238" endtime="20201117 14:48:46.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:46.243" endtime="20201117 14:48:46.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.240" endtime="20201117 14:48:46.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.236" endtime="20201117 14:48:46.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.751" endtime="20201117 14:48:46.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.747" endtime="20201117 14:48:46.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.745" endtime="20201117 14:48:46.264"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.267" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.278" endtime="20201117 14:48:46.299"></status>
</kw>
<msg timestamp="20201117 14:48:46.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:46.277" endtime="20201117 14:48:46.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:46.300" endtime="20201117 14:48:46.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.304" endtime="20201117 14:48:46.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.273" endtime="20201117 14:48:46.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.270" endtime="20201117 14:48:46.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.315" endtime="20201117 14:48:46.664"></status>
</kw>
<msg timestamp="20201117 14:48:46.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028306278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028419708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:46.313" endtime="20201117 14:48:46.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028306278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028419708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:46.674" endtime="20201117 14:48:46.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.694" endtime="20201117 14:48:46.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.310" endtime="20201117 14:48:46.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.308" endtime="20201117 14:48:46.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:46.712" level="INFO">${RESULT} = [{'time': 0.028419708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001134299999999977, 'source_diff': 0.0001134299999999977}, {'time': 0.028535722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:46.703" endtime="20201117 14:48:46.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:46.747" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:46.714" endtime="20201117 14:48:46.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.759" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:48:46.756" endtime="20201117 14:48:46.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.765" level="INFO">VALUE: [0.0001134299999999977, 0.00011312499999999864, 0.0001130420000000007, 0.00011316700000000082, 0.00011356900000000086, 0.00011386099999999982, 0.00011308399999999941, 0.00011398599999999995, 0.00011370900000000003, 0.00011391599999999863, 0.00011400000000000299, 0.00011333300000000018, 0.00011343100000000064, 0.00011356900000000086, 0.00011316700000000082, 0.00011401399999999909, 0.00011351399999999859, 0.00011333300000000018, 0.00011312500000000211, 0.00011351400000000206, 0.00011405600000000127, 0.0001138749999999994, 0.00011352800000000163, 0.00011308299999999993, 0.00011345900000000325, 0.00011367999999999795, 0.00011317999999999745, 0.0001132499999999953, 0.00011320800000000353, 0.00011380500000000154, 0.00011361099999999957, 0.00011320800000000353, 0.00011320800000000353, 0.00011319500000000343, 0.00011395899999999681, 0.00011390299999999853, 0.00011350000000000249, 0.00011367999999999795, 0.00011333300000000018, 0.00011358300000000043, 0.00011381900000000111, 0.00011325000000000224, 0.00011325000000000224, 0.00011383400000000016, 0.0001132770000000019, 0.00011350000000000249, 0.00011391599999999863, 0.00011395899999999681, 0.00011370800000000403, 0.0001132499999999953]</msg>
<status status="PASS" starttime="20201117 14:48:46.761" endtime="20201117 14:48:46.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.749" endtime="20201117 14:48:46.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.774" endtime="20201117 14:48:46.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:46.784" endtime="20201117 14:48:46.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.778" endtime="20201117 14:48:46.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.769" endtime="20201117 14:48:46.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.268" endtime="20201117 14:48:46.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.266" endtime="20201117 14:48:46.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.265" endtime="20201117 14:48:46.811"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.816" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.839" endtime="20201117 14:48:46.863"></status>
</kw>
<msg timestamp="20201117 14:48:46.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:46.836" endtime="20201117 14:48:46.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:46.867" endtime="20201117 14:48:46.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.874" endtime="20201117 14:48:46.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.828" endtime="20201117 14:48:46.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.822" endtime="20201117 14:48:46.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.898" endtime="20201117 14:48:47.261"></status>
</kw>
<msg timestamp="20201117 14:48:47.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049447583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049561681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:46.895" endtime="20201117 14:48:47.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049447583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049561681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:47.270" endtime="20201117 14:48:47.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.290" endtime="20201117 14:48:47.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.887" endtime="20201117 14:48:47.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.882" endtime="20201117 14:48:47.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:47.310" level="INFO">${RESULT} = [{'time': 0.049561681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011409799999999998, 'source_diff': 0.00011409799999999998}, {'time': 0.049680667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:47.301" endtime="20201117 14:48:47.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:47.343" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:47.312" endtime="20201117 14:48:47.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.355" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:48:47.353" endtime="20201117 14:48:47.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.361" level="INFO">VALUE: [0.00011409799999999998, 0.00011423599999999673, 0.0001148750000000004, 0.0001147220000000046, 0.00011451399999999612, 0.00011499999999999705, 0.00011476399999999637, 0.00011495799999999834, 0.00011483300000000168, 0.0001148750000000004, 0.00011495900000000475, 0.00011445899999999731, 0.0001148049999999956, 0.0001142499999999963, 0.00011413899999999921, 0.00011494399999999877, 0.00011465300000000622, 0.00011429200000000195, 0.00011472199999999766, 0.00011447300000000382, 0.00011426399999999587, 0.00011450000000000349, 0.00011473599999999723, 0.00011416699999999835, 0.0001143749999999999, 0.00011416699999999835, 0.00011473600000000417, 0.0001144169999999986, 0.00011404199999999476, 0.00011444500000000468, 0.0001142499999999963, 0.00011400000000000299, 0.00011476399999999637, 0.00011462500000000014, 0.00011476400000000331, 0.000114597000000001, 0.00011420800000000453, 0.00011415299999999878, 0.00011483400000000116, 0.00011499999999999705, 0.00011476400000000331, 0.00011429099999999554, 0.00011427800000000238, 0.00011484800000000073, 0.000114209000000004, 0.00011458300000000143, 0.00011413899999999921, 0.00011494499999999824, 0.00011401399999999562, 0.00011449999999999655]</msg>
<status status="PASS" starttime="20201117 14:48:47.358" endtime="20201117 14:48:47.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.345" endtime="20201117 14:48:47.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.372" endtime="20201117 14:48:47.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:47.381" endtime="20201117 14:48:47.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.376" endtime="20201117 14:48:47.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.367" endtime="20201117 14:48:47.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.818" endtime="20201117 14:48:47.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.814" endtime="20201117 14:48:47.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.812" endtime="20201117 14:48:47.408"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.414" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.437" endtime="20201117 14:48:47.461"></status>
</kw>
<msg timestamp="20201117 14:48:47.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:47.433" endtime="20201117 14:48:47.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:47.464" endtime="20201117 14:48:47.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.471" endtime="20201117 14:48:47.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.426" endtime="20201117 14:48:47.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.419" endtime="20201117 14:48:47.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.496" endtime="20201117 14:48:47.860"></status>
</kw>
<msg timestamp="20201117 14:48:47.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049636889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049752667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:47.492" endtime="20201117 14:48:47.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049636889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049752667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:47.870" endtime="20201117 14:48:47.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.890" endtime="20201117 14:48:47.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.485" endtime="20201117 14:48:47.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.480" endtime="20201117 14:48:47.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:47.908" level="INFO">${RESULT} = [{'time': 0.049752667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011577800000000388, 'source_diff': 0.00011577800000000388}, {'time': 0.049873667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:47.899" endtime="20201117 14:48:47.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:47.941" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:47.910" endtime="20201117 14:48:47.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.953" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:48:47.950" endtime="20201117 14:48:47.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.959" level="INFO">VALUE: [0.00011577800000000388, 0.000115209000000005, 0.00011584699999999531, 0.00011504100000000322, 0.00011544399999999927, 0.00011529099999999654, 0.00011554199999999626, 0.00011590300000000053, 0.00011595799999999934, 0.00011530600000000252, 0.00011547299999999788, 0.0001159300000000002, 0.00011551399999999712, 0.000115597000000002, 0.0001152499999999973, 0.00011555599999999583, 0.00011588900000000096, 0.00011584700000000225, 0.0001159170000000001, 0.00011590300000000053, 0.00011594399999999977, 0.0001153750000000009, 0.00011572199999999866, 0.00011513900000000021, 0.00011566699999999985, 0.00011551399999999712, 0.00011512500000000064, 0.00011550000000000449, 0.00011573600000000517, 0.0001159170000000001, 0.00011579099999999704, 0.00011537499999999395, 0.00011595799999999934, 0.00011512500000000064, 0.00011552800000000363, 0.00011518100000000586, 0.0001158750000000014, 0.00011515200000000031, 0.00011554199999999626, 0.00011554099999999679, 0.00011591600000000063, 0.00011508300000000193, 0.00011586099999999488, 0.00011547199999999841, 0.00011509699999999456, 0.00011552799999999669, 0.00011551400000000406, 0.00011599999999999805, 0.0001152499999999973, 0.00011583299999999574]</msg>
<status status="PASS" starttime="20201117 14:48:47.955" endtime="20201117 14:48:47.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.943" endtime="20201117 14:48:47.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.969" endtime="20201117 14:48:47.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:47.978" endtime="20201117 14:48:48.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.973" endtime="20201117 14:48:48.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.964" endtime="20201117 14:48:48.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.415" endtime="20201117 14:48:48.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.411" endtime="20201117 14:48:48.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.409" endtime="20201117 14:48:48.005"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:48.011" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:48.034" endtime="20201117 14:48:48.058"></status>
</kw>
<msg timestamp="20201117 14:48:48.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:48.030" endtime="20201117 14:48:48.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:48.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:48.061" endtime="20201117 14:48:48.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:48.068" endtime="20201117 14:48:48.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.023" endtime="20201117 14:48:48.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.016" endtime="20201117 14:48:48.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:48.093" endtime="20201117 14:48:48.457"></status>
</kw>
<msg timestamp="20201117 14:48:48.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049899639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050015806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:48.089" endtime="20201117 14:48:48.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:48.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049899639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050015806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:48.467" endtime="20201117 14:48:48.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:48.487" endtime="20201117 14:48:48.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.082" endtime="20201117 14:48:48.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.077" endtime="20201117 14:48:48.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:48.507" level="INFO">${RESULT} = [{'time': 0.050015806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011616700000000035, 'source_diff': 0.00011616700000000035}, {'time': 0.050147819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:48.497" endtime="20201117 14:48:48.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:48.540" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:48.510" endtime="20201117 14:48:48.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:48.551" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:48:48.549" endtime="20201117 14:48:48.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:48.557" level="INFO">VALUE: [0.00011616700000000035, 0.00011683300000000368, 0.00011631899999999668, 0.00011648599999999898, 0.00011670800000000009, 0.00011630600000000352, 0.00011616699999999341, 0.00011687499999999545, 0.00011620899999999906, 0.00011620899999999906, 0.000116082999999996, 0.0001163750000000019, 0.00011673599999999923, 0.00011623599999999873, 0.00011686100000000282, 0.00011655599999999683, 0.00011673599999999923, 0.00011681999999999665, 0.00011679200000000445, 0.00011649999999999855, 0.00011662500000000214, 0.00011687499999999545, 0.00011631899999999668, 0.00011662500000000214, 0.00011640300000000103, 0.00011670899999999956, 0.00011644499999999974, 0.00011683399999999622, 0.00011670800000000009, 0.00011688900000000196, 0.00011654100000000472, 0.00011654199999999726, 0.00011601399999999762, 0.00011622199999999916, 0.00011699999999999905, 0.00011668100000000042, 0.00011690300000000153, 0.00011670800000000009, 0.00011661100000000257, 0.00011654100000000472, 0.00011615300000000078, 0.00011626400000000481, 0.00011616700000000035, 0.00011612500000000164, 0.00011657000000000334, 0.00011670899999999956, 0.00011611200000000155, 0.00011613899999999427, 0.00011645799999999984, 0.00011652799999999769]</msg>
<status status="PASS" starttime="20201117 14:48:48.554" endtime="20201117 14:48:48.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.542" endtime="20201117 14:48:48.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:48.566" endtime="20201117 14:48:48.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:48.575" endtime="20201117 14:48:48.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.571" endtime="20201117 14:48:48.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.562" endtime="20201117 14:48:48.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.012" endtime="20201117 14:48:48.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.008" endtime="20201117 14:48:48.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.006" endtime="20201117 14:48:48.603"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:48.608" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:48.631" endtime="20201117 14:48:48.656"></status>
</kw>
<msg timestamp="20201117 14:48:48.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:48.628" endtime="20201117 14:48:48.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:48.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:48.660" endtime="20201117 14:48:48.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:48.666" endtime="20201117 14:48:48.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.620" endtime="20201117 14:48:48.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.614" endtime="20201117 14:48:48.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:48.691" endtime="20201117 14:48:49.059"></status>
</kw>
<msg timestamp="20201117 14:48:49.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050171528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050289514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:48.688" endtime="20201117 14:48:49.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:49.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050171528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050289514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:49.069" endtime="20201117 14:48:49.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:49.090" endtime="20201117 14:48:49.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.680" endtime="20201117 14:48:49.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.675" endtime="20201117 14:48:49.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:49.108" level="INFO">${RESULT} = [{'time': 0.050289514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011798600000000048, 'source_diff': 0.00011798600000000048}, {'time': 0.050417514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:49.099" endtime="20201117 14:48:49.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:49.143" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:49.111" endtime="20201117 14:48:49.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:49.155" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:48:49.153" endtime="20201117 14:48:49.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:49.161" level="INFO">VALUE: [0.00011798600000000048, 0.00011781999999999765, 0.00011736100000000332, 0.00011731999999999715, 0.0001179300000000022, 0.00011766600000000238, 0.00011767999999999501, 0.00011729199999999801, 0.00011738899999999552, 0.00011777799999999894, 0.0001170420000000047, 0.00011727800000000538, 0.00011722200000000016, 0.00011733399999999672, 0.0001171249999999957, 0.00011736100000000332, 0.00011738900000000246, 0.00011704199999999776, 0.00011772200000000066, 0.00011795800000000134, 0.00011756899999999793, 0.00011755600000000477, 0.00011723700000000614, 0.00011709699999999656, 0.0001177499999999998, 0.00011792999999999526, 0.0001170970000000035, 0.00011733299999999725, 0.00011749999999999955, 0.00011712500000000264, 0.00011770900000000056, 0.00011731900000000461, 0.00011744400000000127, 0.00011711100000000307, 0.0001179579999999944, 0.00011745800000000084, 0.00011769400000000152, 0.00011783299999999775, 0.00011793100000000167, 0.00011713899999999527, 0.00011762500000000314, 0.0001177369999999997, 0.00011726399999999887, 0.0001170970000000035, 0.00011702799999999819, 0.0001179170000000021, 0.00011770800000000109, 0.00011716700000000135, 0.00011708400000000341, 0.00011787499999999645]</msg>
<status status="PASS" starttime="20201117 14:48:49.158" endtime="20201117 14:48:49.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:49.145" endtime="20201117 14:48:49.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:49.170" endtime="20201117 14:48:49.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:49.179" endtime="20201117 14:48:49.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:49.174" endtime="20201117 14:48:49.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:49.165" endtime="20201117 14:48:49.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.610" endtime="20201117 14:48:49.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.605" endtime="20201117 14:48:49.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.604" endtime="20201117 14:48:49.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.856" endtime="20201117 14:48:49.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:49.219" endtime="20201117 14:48:49.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:49.214" endtime="20201117 14:48:49.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:49.211" endtime="20201117 14:48:49.244"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:47:52.718" endtime="20201117 14:48:49.245" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:46:54.539" endtime="20201117 14:48:49.258"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201117 14:46:50.754" endtime="20201117 14:48:49.294"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
